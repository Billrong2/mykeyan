{"UNKNOWN to If":[{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["libra.common.helpers.PathHelper.getExtensionWithoutCompressed(path.getName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (ext != null) { ext = ext.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1901/buggy-version/src.libra.common.sequence.FastaPathFilter.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "afcc913b79909a176c16c2056d1cddbd75feb9fe", "Url": "https://api.github.com/repos/iychoi/libra", "Date": "2017-02-21T02:02:57Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["libra.common.helpers.PathHelper.getExtensionWithoutCompressed(path.getName())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (ext != null) { ext = ext.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1901/buggy-version/src.libra.common.sequence.FastqPathFilter.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "afcc913b79909a176c16c2056d1cddbd75feb9fe", "Url": "https://api.github.com/repos/iychoi/libra", "Date": "2017-02-21T02:02:57Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (module.isFake()) { org.lwjgl.opengl.GL11.glEnable(GL11.GL_BLEND); org.lwjgl.opengl.GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_DST_ALPHA); org.lwjgl.opengl.GL11.glColor4d(1, 1, 1, 0.3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7014/buggy-version/src.pneumaticCraft.client.render.tileentity.RenderPressureTube.java", "BodyUseAPI": [], "Fixed commit": "8ec78eddec92a4ae525fb54a13f27f33888ae773", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-07-24T23:01:18Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (distance >= height) { vOffset = (textBounds.height()) * 0.5F; }else { if ((gravity.equals(au.com.dardle.widget.LabelLayout.Gravity.TOP_LEFT)) || (gravity.equals(au.com.dardle.widget.LabelLayout.Gravity.TOP_RIGHT))) { vOffset = (textBounds.height()) * (0.5F + (((height - distance) / ((float) (height))) * 0.5F)); }else { vOffset = (textBounds.height()) * (0.5F - (((height - distance) / ((float) (height))) * 0.5F)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8861/buggy-version/labellayout.src.main.java.au.com.dardle.widget.LabelLayout.java", "BodyUseAPI": [], "Fixed commit": "6b319719fff112a3354934a25025316f3a6a6f22", "Url": "https://api.github.com/repos/luxiliu/LabelLayout", "Date": "2016-12-08T03:06:18Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.context_menu_line2)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (menuLine2 != null) { net.osmand.AndroidUtils.setTextSecondaryColor(getMapActivity(), ((android.widget.TextView) (menuLine2)), nightMode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6795/buggy-version/OsmAnd.src.net.osmand.plus.mapcontextmenu.MapContextMenuFragment.java", "BodyUseAPI": [], "Fixed commit": "344a0673fe6c63ef2b05a0e9b4cc2efd2fa94248", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2015-12-24T07:26:39Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attempt == 50) { finish = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2569/buggy-version/src.main.java.com.endercrest.colorcube.game.Game.java", "BodyUseAPI": [], "Fixed commit": "55f7367d6021be893d84dffa377d4670b6fcfff7", "Url": "https://api.github.com/repos/endercrest/ColorCube", "Date": "2014-12-24T03:22:19Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((scope) instanceof it.cnr.istc.oratio.core.Type) { this.fields.put(it.cnr.istc.oratio.core.THIS, new it.cnr.istc.oratio.core.Field(((it.cnr.istc.oratio.core.Type) (scope)), THIS, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5211/buggy-version/src.it.cnr.istc.oratio.core.Predicate.java", "BodyUseAPI": [], "Fixed commit": "038d2dba342522e7d7d668f1bb59db48a3189db8", "Url": "https://api.github.com/repos/oRatioSolver/oRatio", "Date": "2016-12-21T10:37:59Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6624/buggy-version/mobile.src.main.java.de.iweinzierl.worktrack.PickLocationActivity.java", "BodyUseAPI": [], "Fixed commit": "83565fcbd45420066785f0d3f2591c5e0544861f", "Url": "https://api.github.com/repos/iweinzierl/worktrack", "Date": "2017-09-25T20:08:43Z"},
{"Line": "=>1220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == (com.midtrans.sdk.uikit.utilities.UiKitConstants.INTENT_CODE_RBA_AUTHENTICATION)) { getPaymentStatus(); }else if (requestCode == (com.midtrans.sdk.uikit.utilities.UiKitConstants.INTENT_CODE_PAYMENT_STATUS)) { finishPayment(com.midtrans.sdk.uikit.views.creditcard.details.RESULT_OK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1614/buggy-version/uikit.src.main.java.com.midtrans.sdk.uikit.views.creditcard.details.CreditCardDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "37a16629d2662076afb51b925a24d73aaa2fc0f8", "Url": "https://api.github.com/repos/veritrans/veritrans-android", "Date": "2017-09-11T12:24:47Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (de.cismet.cids.custom.sudplan.local.linz.SwmmModelManager.LOG.isDebugEnabled()) { de.cismet.cids.custom.sudplan.local.linz.SwmmModelManager.LOG.debug(((((\"start date: \" + (swmmInput.getStartDate())) + \" (\") + startDate) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1004/buggy-version/src.main.java.de.cismet.cids.custom.sudplan.local.linz.SwmmModelManager.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(((((\"start date: \" + (swmmInput.getStartDate())) + \" (\") + startDate) + \")\"))"], "Fixed commit": "dce9bf4101ca2405ada87b892239267c62b8f8c4", "Url": "https://api.github.com/repos/cismet/cids-custom-sudplan", "Date": "2012-09-25T15:40:45Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (de.cismet.cids.custom.sudplan.local.linz.SwmmModelManager.LOG.isDebugEnabled()) { de.cismet.cids.custom.sudplan.local.linz.SwmmModelManager.LOG.debug(((((\"end date: \" + (swmmInput.getEndDate())) + \" (\") + endDate) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1004/buggy-version/src.main.java.de.cismet.cids.custom.sudplan.local.linz.SwmmModelManager.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(((((\"end date: \" + (swmmInput.getEndDate())) + \" (\") + endDate) + \")\"))"], "Fixed commit": "dce9bf4101ca2405ada87b892239267c62b8f8c4", "Url": "https://api.github.com/repos/cismet/cids-custom-sudplan", "Date": "2012-09-25T15:40:45Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Build.CPU_ABI.contains(\"86\")) { testMode = true; }else if ((getActivity()) instanceof com.mechdome.aboutmechdome.AboutMechDomeActivity) { testMode = ((com.mechdome.aboutmechdome.AboutMechDomeActivity) (getActivity())).inTestMode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2154/buggy-version/aboutmechdome.src.main.java.com.mechdome.aboutmechdome.AboutMechDomeFragment.java", "BodyUseAPI": [], "Fixed commit": "fb726cdb6f9e375a5dbb7d40496297d9cf7164ed", "Url": "https://api.github.com/repos/mechdome/about-activity", "Date": "2017-04-13T20:03:45Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!exist) { recipeList.add(event.recipe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7060/buggy-version/app.src.main.java.eladjarby.bakeit.fragments.FeedFragment.java", "BodyUseAPI": [], "Fixed commit": "2452f436d3af04233a9af0c8def5a2dfffcf1f83", "Url": "https://api.github.com/repos/EladJy/BakeIt", "Date": "2017-07-21T07:39:50Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lock) { mActivity.lock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/431/buggy-version/project.AcDisplay.src.main.java.com.achep.acdisplay.acdisplay.AcDisplayFragment2.java", "BodyUseAPI": [], "Fixed commit": "0141f84f5671cdc79299f3e6ec66befce50a0b3d", "Url": "https://api.github.com/repos/SMillerDev/AcDisplay", "Date": "2014-06-20T18:53:35Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.zulia.server.connection.server.validation.CountRequest.toBuilder()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((countRequestBuilder.getShardFacets()) == 0) { countRequestBuilder.setShardFacets(((countRequestBuilder.getMaxFacets()) * 10)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3634/buggy-version/zulia-server.src.main.java.io.zulia.server.connection.server.validation.QueryRequestValidator.java", "BodyUseAPI": ["CountRequest.Builder.getMaxFacets()", "CountRequest.Builder.setShardFacets(((countRequestBuilder.getMaxFacets()) * 10))"], "Fixed commit": "9a1d659d24bd2631cc9d71a6d17d62af114d1cb6", "Url": "https://api.github.com/repos/zuliaio/zuliasearch", "Date": "2017-09-26T15:46:34Z"},
{"Line": "=>1157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (chromPos > (cdsEnd + 1)) { org.biojava.nbio.genome.util.ChromosomeMappingTools.logger.debug((((chromPos + \" > \") + cdsEnd) + 1)); return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7753/buggy-version/biojava-genome.src.main.java.org.biojava.nbio.genome.util.ChromosomeMappingTools.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "b42fd900bb88401696718525d88263c6aba3d66f", "Url": "https://api.github.com/repos/sbliven/biojava-sbliven", "Date": "2017-02-23T00:55:04Z"},
{"Line": "=>1152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (chromPos < (cdsStart + 1)) { org.biojava.nbio.genome.util.ChromosomeMappingTools.logger.debug((((chromPos + \" < \") + cdsStart) + 1)); return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7753/buggy-version/biojava-genome.src.main.java.org.biojava.nbio.genome.util.ChromosomeMappingTools.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "b42fd900bb88401696718525d88263c6aba3d66f", "Url": "https://api.github.com/repos/sbliven/biojava-sbliven", "Date": "2017-02-23T00:55:04Z"},
{"Line": "=>759", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (exchange.hasOut()) { body = exchange.getOut().getBody(); }else { body = exchange.getIn().getBody(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/237/buggy-version/camel-core.src.main.java.org.apache.camel.processor.CamelInternalProcessor.java", "BodyUseAPI": ["org.apache.camel.Exchange.getIn()", "exchange.getOut().getBody()", "exchange.getIn().getBody()", "org.apache.camel.Exchange.getOut()"], "Fixed commit": "7a36c753091040bb818c2e99072cf6d0148ea169", "Url": "https://api.github.com/repos/stalet/camel", "Date": "2014-12-18T04:23:36Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x <= 1) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7321/buggy-version/hu.bme.mit.mabel.examples.primes.src.main.java.hu.bme.mit.mabel.examples.primes.phases.GenerationPhase.java", "BodyUseAPI": [], "Fixed commit": "4cf6ab9786a7372c9a62eefb5aab6079dd1b6aa4", "Url": "https://api.github.com/repos/FTSRG/java-benchmarking", "Date": "2016-01-02T13:52:01Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.zendesk.maxwell.schema.SchemaStore.getTableColumns(\"schemas\", c).containsKey(\"version\"))) { com.zendesk.maxwell.schema.SchemaStore.performAlter(c, \"alter table `schemas` add column `version` smallint unsigned not null default 0 after `charset`\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8453/buggy-version/src.main.java.com.zendesk.maxwell.schema.SchemaStore.java", "BodyUseAPI": ["com.zendesk.maxwell.schema.SchemaStore.performAlter(java.sql.Connection,java.lang.String)"], "Fixed commit": "301cb9e0bfbf77b52e4c90b043c011b3653e7f0f", "Url": "https://api.github.com/repos/zendesk/maxwell", "Date": "2016-05-04T22:11:36Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((si.getFinger()) != null) && (!(\"\".equals(si.getFinger().trim())))) { child.setAttribute(\"finger\", si.getFinger()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1730/buggy-version/src.main.java.ioio.robotar.pcconsole.XMLChordSaver.java", "BodyUseAPI": ["org.w3c.dom.Element.setAttribute(java.lang.String,si.getFinger())", "cz.versarius.xchords.StringInfo.getFinger()"], "Fixed commit": "d8e9f9c48cf9dd8248edcc06132d4274f17d382c", "Url": "https://api.github.com/repos/kleekru/RoboTarIOIOforPCConsole", "Date": "2014-01-11T18:54:26Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ackedMsgs.first().offset()) <= (committedOffset)) { commit(new org.apache.kafka.clients.consumer.OffsetAndMetadata(committedOffset)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7180/buggy-version/external.storm-kafka-client.src.main.java.org.apache.storm.kafka.spout.internal.OffsetManager.java", "BodyUseAPI": [], "Fixed commit": "71a037396af0ca7d48894b5e6a1fd8fcb79eb8f8", "Url": "https://api.github.com/repos/WolfeeTJ/storm", "Date": "2017-08-01T04:55:08Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getSupportFragmentManager().beginTransaction().add(R.id.gamelayout, new com.bam.darkhouseextreme.app.fragments.FirstroomFragment(), \"firstroom\").commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7286/buggy-version/app.src.main.java.com.bam.darkhouseextreme.app.activities.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "6bb7ddf1664cc3cc027ffa17122e8105bd620d66", "Url": "https://api.github.com/repos/ChobiJava/DarkHouseExtreme", "Date": "2015-04-30T06:49:58Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getSupportFragmentManager().beginTransaction().add(R.id.startscreenlayout, new com.bam.darkhouseextreme.app.fragments.StartScreenFragment(), \"startScreen\").commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7286/buggy-version/app.src.main.java.com.bam.darkhouseextreme.app.activities.StartScreenActivity.java", "BodyUseAPI": [], "Fixed commit": "6bb7ddf1664cc3cc027ffa17122e8105bd620d66", "Url": "https://api.github.com/repos/ChobiJava/DarkHouseExtreme", "Date": "2015-04-30T06:49:58Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(plugin.playerSaveData.containsKey(e.getPlayer().getUniqueId().toString()))) { plugin.playerSaveData.put(e.getPlayer().getUniqueId().toString(), new ovh.tgrhavoc.etokens.listeners.PlayerSave(e.getPlayer())); if ((plugin.getSqlHandler().getTokenAmount(e.getPlayer())) > 0) { plugin.getSqlHandler().setPlayerTokens(e.getPlayer(), 0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6603/buggy-version/src.ovh.tgrhavoc.etokens.listeners.TokenListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerJoinEvent.getPlayer()", "org.bukkit.event.player.PlayerJoinEvent.getPlayer()", "org.bukkit.event.player.PlayerJoinEvent.getPlayer()", "ovh.tgrhavoc.etokens.eTokens.getSqlHandler()", "plugin.playerSaveData.put(e.getPlayer().getUniqueId().toString(),ovh.tgrhavoc.etokens.listeners.PlayerSave)", "plugin.getSqlHandler().setPlayerTokens(e.getPlayer(),int)", "e.getPlayer().getUniqueId().toString()", "org.bukkit.event.player.PlayerJoinEvent.getPlayer()", "plugin.getSqlHandler().getTokenAmount(e.getPlayer())", "e.getPlayer().getUniqueId()", "ovh.tgrhavoc.etokens.eTokens.getSqlHandler()"], "Fixed commit": "d94909d182742ee2d587610af50286431573cab2", "Url": "https://api.github.com/repos/TGRHavoc/eTokens", "Date": "2014-12-17T19:27:16Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/493/buggy-version/src.main.java.teamOD.armourReborn.common.block.tile.TileForgeAnvil.java", "BodyUseAPI": [], "Fixed commit": "dbf8c7cbd06d6804986c1137710c48ce25d0fd6d", "Url": "https://api.github.com/repos/MightyCupcakes/ArmourReborn", "Date": "2016-07-09T05:43:45Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rs.getDate(3)) != null) date = new java.sql.Date(rs.getDate(3).getTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7522/buggy-version/src.it.ubmplatform.profilo.ProfiloManager.java", "BodyUseAPI": ["java.sql.Date.getTime()", "java.sql.ResultSet.getDate(int)"], "Fixed commit": "848f53c6e6c4fd64ad23f901d624927ab1a6b4ec", "Url": "https://api.github.com/repos/marco211/ubm-platform", "Date": "2017-01-10T12:11:33Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timestamp) != 0) { cal.setTimeInMillis(timestamp); android.widget.TextView tvDueTime = ((android.widget.TextView) (findViewById(R.id.tvDueTime))); tvDueTime.setText(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT).format(timestamp)); android.widget.TextView tvDueDate = ((android.widget.TextView) (findViewById(R.id.tvDueDate))); tvDueDate.setText(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT).format(timestamp)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8172/buggy-version/taskwarrior-androidapp.src.org.svij.taskwarriorapp.TaskAddActivity.java", "BodyUseAPI": [], "Fixed commit": "5c1cfe1a4f295b457e9673416b9f20a89285e3be", "Url": "https://api.github.com/repos/D-E-N/taskwarrior-androidapp", "Date": "2013-03-15T20:33:30Z"},
{"Line": "=>12388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isProgressiveResolution)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6449/buggy-version/src.ucar.unidata.idv.control.DisplayControlImpl.java", "BodyUseAPI": [], "Fixed commit": "e78bd42dfd16bd124d15dd74d0c735654cca56d7", "Url": "https://api.github.com/repos/Unidata/IDV", "Date": "2013-10-30T22:02:46Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (surveyList.isEmpty()) { android.content.SharedPreferences sharedPreferences = org.odk.collect.android.application.Collect.getInstance().getContext().getSharedPreferences(org.odk.collect.android.application.Collect.getInstance().getContext().getString(R.string.app_preferences_name), Context.MODE_PRIVATE); java.lang.String savedPreferences = sharedPreferences.getString(Constants.PREFERENCES_KEY, null); if (savedPreferences != null) { int type = org.graindataterminal.models.base.DataHolder.getInstance().getSurveysType(); java.lang.reflect.Type objectType = new com.google.gson.reflect.TypeToken<java.util.List<org.graindataterminal.models.base.BaseSurvey>>() {}.getType(); if (type == (org.graindataterminal.models.base.BaseSurvey.SURVEY_TYPE_ZAMBIA)) objectType = new com.google.gson.reflect.TypeToken<java.util.List<org.graindataterminal.models.zambia.ZambiaSurvey>>() {}.getType(); else if (type == (org.graindataterminal.models.base.BaseSurvey.SURVEY_TYPE_TUNISIA)) objectType = new com.google.gson.reflect.TypeToken<java.util.List<org.graindataterminal.models.tunisia.TunisiaSurvey>>() {}.getType(); else if (type == (org.graindataterminal.models.base.BaseSurvey.SURVEY_TYPE_SENEGAL)) objectType = new com.google.gson.reflect.TypeToken<java.util.List<org.graindataterminal.models.senegal.SenegalSurvey>>() {}.getType(); else if (type == (org.graindataterminal.models.base.BaseSurvey.SURVEY_TYPE_CAMEROON)) objectType = new com.google.gson.reflect.TypeToken<java.util.List<org.graindataterminal.models.cameroon.CameroonSurvey>>() {}.getType(); com.google.gson.Gson gson = new com.google.gson.GsonBuilder().create(); surveyList = gson.fromJson(savedPreferences, objectType); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4867/buggy-version/collect_app.src.main.java.org.odk.collect.android.utilities.DataUtils.java", "BodyUseAPI": [], "Fixed commit": "426f262dbf16e2a49817cd7f10b65de1f6c7135f", "Url": "https://api.github.com/repos/KnoemaTeam/sixgraincollect", "Date": "2016-02-17T10:59:12Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isNew && ((com.pratilipi.data.DataAccessorFactory.getDataAccessor().getUserByEmail(userData.getEmail())) != null)) errorMessages.addProperty(\"email\", GenericRequest.ERR_EMAIL_REGISTERED_ALREADY); else if ((((!isNew) && (userData.hasEmail())) && ((userData.getEmail()) != null)) && (!(com.pratilipi.data.DataAccessorFactory.getDataAccessor().getUserByEmail(userData.getEmail()).equals(userData.getId())))) errorMessages.addProperty(\"email\", GenericRequest.ERR_EMAIL_REGISTERED_ALREADY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6377/buggy-version/src.main.java.com.pratilipi.data.util.UserDataUtil.java", "BodyUseAPI": ["com.pratilipi.data.client.UserData.hasEmail()", "com.pratilipi.data.client.UserData.getEmail()", "com.pratilipi.data.client.UserData.getEmail()", "com.pratilipi.data.client.UserData.getId()", "com.pratilipi.data.DataAccessorFactory.getDataAccessor().getUserByEmail(userData.getEmail())", "com.pratilipi.data.DataAccessorFactory.getDataAccessor().getUserByEmail(userData.getEmail()).equals(userData.getId())"], "Fixed commit": "c0d5373ecc8f58e56fd362e9b580e8117f4699a3", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-03-29T12:29:44Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.attr(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((_url.startsWith(\"http\")) || (_url.startsWith(\"https\"))) { if (_url.endsWith(\"/\")) { _url = _url.substring(0, ((_url.length()) - 1)); } extractedLinks.add(new java.net.URL(_url)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/9117/buggy-version/src.de.unikassel.ir.vsr.HTMLDocument.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "c6d5276b5dc8dfffb5f64e47fd312c350b304688", "Url": "https://api.github.com/repos/kchoong/ksm", "Date": "2017-07-06T14:05:37Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getRoles().isEmpty())) { role = getRoles().iterator().next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7677/buggy-version/WGS-Main.src.main.java.bb.rackmesa.wargamescoring.User.java", "BodyUseAPI": [], "Fixed commit": "b2f359ff19cb0ea2004283fb1d8a953ed7fb51dd", "Url": "https://api.github.com/repos/superit23/WarGameScoring", "Date": "2016-11-29T06:08:19Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<T>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof java.lang.Short) { org.jlab.hipo.data.HipoNode nodeFloat = new org.jlab.hipo.data.HipoNode(group, item, HipoNodeType.SHORT, container.size()); for (int i = 0; i < (container.size()); i++) { java.lang.Short itemValue = ((java.lang.Short) (container.get(i))); nodeFloat.setShort(i, itemValue); } return nodeFloat; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6387/buggy-version/src.main.java.org.jlab.hipo.data.HipoNodeBuilder.java", "BodyUseAPI": [], "Fixed commit": "519d24f1dbf5ca2877810d70f32998847a578ced", "Url": "https://api.github.com/repos/gavalian/hipo-io", "Date": "2016-11-17T20:34:42Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ctrip.hermes.core.utils.StringUtils.isEmpty(datasource.getId())) { throw new com.ctrip.hermes.portal.resource.assists.RestException(\"Datasource Id is empty\", javax.ws.rs.core.Response.Status.BAD_REQUEST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8256/buggy-version/hermes-portal.src.main.java.com.ctrip.hermes.portal.resource.PortalMetaResource.java", "BodyUseAPI": [], "Fixed commit": "075212c1babad4d5770f82f9d60ae934eca7bce4", "Url": "https://api.github.com/repos/yiming187/hermes", "Date": "2015-07-02T06:41:48Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.cloudbus.cloudsim.core.CloudSim.future.iterator().next().eventTime()) > (org.cloudbus.cloudsim.core.CloudSim.pauseAt)) && ((org.cloudbus.cloudsim.core.CloudSim.pauseAt) != (-1))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6869/buggy-version/src.org.cloudbus.cloudsim.core.CloudSim.java", "BodyUseAPI": [], "Fixed commit": "b63b3cf04ef7efc01b802507569f8d693b877f6d", "Url": "https://api.github.com/repos/harihar90/dynamiccloudsim", "Date": "2015-05-01T16:37:14Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deltaPos.x) > (getPosition().x)) { this.getComponentByType(me.kevint.flipIt.entity.component.GraphicsComponent.class).setDirection(true); }else { this.getComponentByType(me.kevint.flipIt.entity.component.GraphicsComponent.class).setDirection(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7008/buggy-version/FlipIt.src.me.kevint.flipIt.entity.PlayerEntity.java", "BodyUseAPI": [], "Fixed commit": "03c06e053c5067a9ca5c1ae6aa79721d43927f0b", "Url": "https://api.github.com/repos/kevinpthorne/FlipIt-JavaGame", "Date": "2015-02-18T04:40:15Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((opponent.getCurrHP()) <= 0) opponentFainted = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/475/buggy-version/Woo.java", "BodyUseAPI": [], "Fixed commit": "7a0056e6ac4fd7ca554c6b45700508fc1bdb9406", "Url": "https://api.github.com/repos/rhuiz4/Skull", "Date": "2017-01-13T05:24:28Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.getCurrHP()) <= 0) playerFainted = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/475/buggy-version/Woo.java", "BodyUseAPI": [], "Fixed commit": "7a0056e6ac4fd7ca554c6b45700508fc1bdb9406", "Url": "https://api.github.com/repos/rhuiz4/Skull", "Date": "2017-01-13T05:24:28Z"},
{"Line": "=>805", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["worker.getError().getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((message == null) || (message.equals(\"\"))) { message = \"Error loading project: \" + (worker.getError().getClass().getSimpleName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7766/buggy-version/src.gui.org.deidentifier.arx.gui.Controller.java", "BodyUseAPI": [], "Fixed commit": "20c0b5e7ee8d33a8fd04dd78982d9437100d89ca", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-11-10T08:33:45Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.ibuildthecloud.gdapi.context.ApiContext.getContext().getPolicy()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (policy == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/301/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.dao.impl.AuthDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "7c2cac5c5ee6ca9ee12344eafcfdc19f8b60af4a", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-04-07T01:32:49Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMessageContainer) != null) { mMessageContainer.addNewMessage(vm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4874/buggy-version/source.src.com.v2tech.view.conference.VideoActivityV2.java", "BodyUseAPI": [], "Fixed commit": "32a75087980123d41f155e3519be76c873a9f42a", "Url": "https://api.github.com/repos/jiangzhen1984/V2TechConferenceClient", "Date": "2014-04-08T09:03:33Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getNation().getNumTowns()) != 0) event.getNation().addTown(event.getTown());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2838/buggy-version/src.main.java.com.danielrharris.townywars.WarListener.java", "BodyUseAPI": ["event.getNation().addTown(event.getTown())", "com.palmergames.bukkit.towny.event.NationRemoveTownEvent.getNation()", "com.palmergames.bukkit.towny.event.NationRemoveTownEvent.getTown()"], "Fixed commit": "2e5e9b5635ed80d9cccd07aea479f1eeb3b6a22e", "Url": "https://api.github.com/repos/JimmyMalmer/TownyWarsMCC", "Date": "2014-08-01T22:51:00Z"},
{"Line": "=>1303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.xml.client.Node.getFirstChild()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (firstChild != null) { time = firstChild.getNodeValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4951/buggy-version/godiva.src.main.java.uk.ac.rdg.resc.godiva.client.widgets.MapArea.java", "BodyUseAPI": ["com.google.gwt.xml.client.Node.getNodeValue()"], "Fixed commit": "ab5911ca94a9663ca32eb8d510a463d47806e61e", "Url": "https://api.github.com/repos/Reading-eScience-Centre/edal-java", "Date": "2017-02-17T11:02:13Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).get()", "io.cattle.platform.iaas.api.auth.dao.AuthDao.hasAccessToAnyProject(java.util.Set<io.cattle.platform.api.auth.Identity>,boolean,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((!hasAccessToAProject) && (hasLoggedIn != null)) && (!((java.lang.Boolean) (hasLoggedIn)))) { projectResourceManager.createProjectForUser(account); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2614/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": [], "Fixed commit": "5459b0728f06e3b43190ca4a5097f7f7d72c4948", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (account != null) { io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2614/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": ["io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(boolean)", "io.cattle.platform.object.util.DataAccessor.fields(io.cattle.platform.core.model.Account)", "io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN)"], "Fixed commit": "5459b0728f06e3b43190ca4a5097f7f7d72c4948", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selected == (javax.swing.JOptionPane.CANCEL_OPTION)) { throw new controller.exception.InputCancelledException(); }else if (selected == (javax.swing.JOptionPane.CLOSED_OPTION)) { throw new controller.exception.InputCancelledException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4316/buggy-version/src.view.DialogBuilder.java", "BodyUseAPI": [], "Fixed commit": "e84c4108562958824b7a495a12bf4f17506c5bfb", "Url": "https://api.github.com/repos/alutman/AES_Text_Editor", "Date": "2016-03-30T01:10:03Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((signalStrength.getGsmSignalStrength()) <= 2) || ((signalStrength.getGsmSignalStrength()) == (android.telephony.NeighboringCellInfo.UNKNOWN_RSSI))) { java.lang.String[] bits = signalStrength.toString().split(\" \"); dbm = java.lang.Integer.parseInt(bits[9].substring(1)); }else { dbm = signalStrength.getGsmSignalStrength(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1347/buggy-version/app.src.main.java.com.SecUpwN.AIMSICD.service.CellTracker.java", "BodyUseAPI": ["signalStrength.toString().split(java.lang.String)", "android.telephony.SignalStrength.toString()", "android.telephony.SignalStrength.getGsmSignalStrength()"], "Fixed commit": "ebf1b208e657c43cdcd7783decbf7ee26f8a5a25", "Url": "https://api.github.com/repos/SecUpwN/Android-IMSI-Catcher-Detector", "Date": "2014-12-29T21:02:21Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cells[i][0].isIs_header()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3805/buggy-version/src.Decomposition.Decomposition.java", "BodyUseAPI": [], "Fixed commit": "b085639210f1d542e1a9652eb6ca677b01756f16", "Url": "https://api.github.com/repos/nikolamilosevic86/TableDisentangler", "Date": "2015-09-19T19:26:49Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eu.trentorise.smartcampus.eb.custom.data.EBHelper.getInstance().preference) != null) return eu.trentorise.smartcampus.eb.custom.data.EBHelper.getInstance().preference; else return new eu.trentorise.smartcampus.eb.model.UserPreference();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5318/buggy-version/src.eu.trentorise.smartcampus.eb.custom.data.EBHelper.java", "BodyUseAPI": [], "Fixed commit": "759a40945b1e209608415436a461b0cfd301ef48", "Url": "https://api.github.com/repos/smartcampuslab/smartcampus.vas.experiencebuster.android", "Date": "2013-07-18T12:41:30Z"},
{"Line": "=>965", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newHost.plugin) == null) { newHost.plugin = new pluginhost.ErrorPlugin(this, \"This plugin does not allow duplicates\", 0, 0); newHost.setName(\"DUPLICATION ERROR\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4893/buggy-version/API.src.pluginhost.PluginHost.java", "BodyUseAPI": ["pluginhost.PluginHost.setName(java.lang.String)"], "Fixed commit": "d6de824846babb442d9ba02247f8f03e49168701", "Url": "https://api.github.com/repos/langebrake/TestRep", "Date": "2017-05-22T10:03:55Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((specializationsCsv != null) && (!(specializationsCsv.isEmpty()))) { specializations = org.atlasapi.media.entity.Specialization.fromCsv(specializationsCsv); }else { specializations = java.util.Arrays.asList(Specialization.FILM, Specialization.TV, Specialization.RADIO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5958/buggy-version/src.main.java.org.atlasapi.search.SearchServlet.java", "BodyUseAPI": ["org.atlasapi.media.entity.Specialization.fromCsv(java.lang.String)"], "Fixed commit": "0a75d5935eb29d3d9f179d6f90d1c87e9778d24d", "Url": "https://api.github.com/repos/atlasapi/atlas-search", "Date": "2012-06-14T09:53:37Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((returnFiles.size()) == 1) { if (rest.contains(\" \")) completion.addCompletionCandidate(returnFiles.get(0).substring(org.jboss.aesh.parser.Parser.switchSpacesToEscapedSpacesInWord(rest).length())); else completion.addCompletionCandidate(returnFiles.get(0).substring(rest.length())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7864/buggy-version/src.main.java.org.jboss.aesh.util.FileLister.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)", "java.lang.String.substring(org.jboss.aesh.parser.Parser.switchSpacesToEscapedSpacesInWord(rest).length())", "org.jboss.aesh.complete.CompleteOperation.addCompletionCandidate(java.lang.String)", "java.util.List<java.lang.String>.get(int)", "java.lang.String.substring(int)", "org.jboss.aesh.complete.CompleteOperation.addCompletionCandidate(java.lang.String)"], "Fixed commit": "7291d54aea3f9223e8918027cd3ffc78f03e48d6", "Url": "https://api.github.com/repos/gastaldi/aesh", "Date": "2013-08-27T16:38:16Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nononsenseapps.filepicker.Utils.getFileForUri(android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (file.canWrite()) { TV_backup_export_src.setText(file.getAbsolutePath()); But_backup_export.setEnabled(true); }else { android.widget.Toast.makeText(this, getString(R.string.backup_export_can_not_write), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7400/buggy-version/app.src.main.java.com.kiminonawa.mydiary.backup.BackupActivity.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "d27869ca8368c11cbc51cc20e70f6ed638b51a42", "Url": "https://api.github.com/repos/DaPATHK/MyDiary", "Date": "2017-04-23T14:03:30Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nononsenseapps.filepicker.Utils.getFileForUri(android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (file.canRead()) { TV_backup_import_src.setText(file.getAbsolutePath()); But_backup_import.setEnabled(true); }else { android.widget.Toast.makeText(this, getString(R.string.backup_import_can_not_read), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7400/buggy-version/app.src.main.java.com.kiminonawa.mydiary.backup.BackupActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "d27869ca8368c11cbc51cc20e70f6ed638b51a42", "Url": "https://api.github.com/repos/DaPATHK/MyDiary", "Date": "2017-04-23T14:03:30Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sender == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4453/buggy-version/src.main.java.mytown.core.utils.ChatUtils.java", "BodyUseAPI": [], "Fixed commit": "62a2731045b565647220853006569dff70405abd", "Url": "https://api.github.com/repos/MyEssentials/MyEssentials-Core", "Date": "2015-06-27T13:49:36Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(currentPrefix.isEmpty())) && (!(property.isEmpty()))) { prop.append('.'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/231/buggy-version/src.main.java.ru.salauyou.util.mapper.EntityMapper.java", "BodyUseAPI": [], "Fixed commit": "17daf36de036c8ec92ac3a70767e3c0bcfadb041", "Url": "https://api.github.com/repos/Salauyou/Java-Utils", "Date": "2016-07-04T08:57:31Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.roundtriangles.games.zaria.services.resources.LocaleService.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (localTitle == null) { localTitle = Constants.HudConstants.DEFAULT_DIALOG_TITLE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5210/buggy-version/core.src.com.captstudios.games.tafl.core.es.HudFactory.java", "BodyUseAPI": [], "Fixed commit": "3d50fc87c0fd83be7eac2ed6c05482ab8b14884c", "Url": "https://api.github.com/repos/apotapov/tafl", "Date": "2015-07-20T13:53:34Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(getPostsListResponse.isErrorOccur())) { com.kvest.developerslife.utility.CategoryHelper.IS_LIST_FINISHED[category] = (getPostsListResponse.result.size()) < (com.kvest.developerslife.utility.Constants.DEFAULT_PAGE_SIZE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4675/buggy-version/src.com.kvest.developerslife.network.request.GetPostsListRequest.java", "BodyUseAPI": ["getPostsListResponse.result.size()"], "Fixed commit": "cb03736871604b98d3f8287f9ce7895bd52711c2", "Url": "https://api.github.com/repos/Kvest/developerslife", "Date": "2014-01-03T10:07:23Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mParts.containsKey(org.dmfs.rfc5545.recur.RecurrenceRule.Part.UNTIL)) && (mParts.containsKey(org.dmfs.rfc5545.recur.RecurrenceRule.Part.COUNT))) { throw new org.dmfs.rfc5545.recur.InvalidRecurrenceRuleException(\"UNTIL and COUNT must not occur in the same rule.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3721/buggy-version/src.org.dmfs.rfc5545.recur.RecurrenceRule.java", "BodyUseAPI": [], "Fixed commit": "b2fd522dd41b77c76311c45857df2ee9ec4f93f9", "Url": "https://api.github.com/repos/dmfs/lib-recur", "Date": "2013-07-04T15:03:51Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (cls == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1554/buggy-version/teavm-core.src.main.java.org.teavm.model.PreOptimizingClassHolderSource.java", "BodyUseAPI": [], "Fixed commit": "9fe66c4f2e79d28dfe97e2339e835e0e4f0c5e7c", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2014-09-04T15:58:09Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.carbondata.common.logging.impl.StandardLogService.Level.AUDIT.toString().equalsIgnoreCase(logLevel.toString())) { audit(message); }else if ((org.carbondata.common.logging.impl.StandardLogService.Level.STATISTICS) == logLevel) { statistic(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5779/buggy-version/common.src.main.java.org.carbondata.common.logging.impl.StandardLogService.java", "BodyUseAPI": [], "Fixed commit": "6dbb71e22714812eeb940ffdad5e99f1a55f5aff", "Url": "https://api.github.com/repos/kumarvishal09/carbondata-1", "Date": "2016-07-18T06:56:06Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<edu.gatech.util.Node<edu.gatech.intermediate.Type>>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (temp.hasChildOfType(TokenType.RETURN)) { edu.gatech.intermediate.Binding foo = generateTemp(DeclaredType.integer, \"\"); out.addAll(generateExpression(foo.getName(), temp.getFirstChildOfType(RuleType.EXPR))); out.add(new edu.gatech.intermediate.IntermediateOperation(Operator.RETURN, foo.getName(), \"\", \"\", \"\", null)); }else if (temp.hasChildOfType(RuleType.STAT_ASSIGN)) { edu.gatech.util.Node<edu.gatech.intermediate.Type> identifierNode = temp.getFirstChildOfType(TokenType.ID); edu.gatech.intermediate.Binding identifier = table.findByNameScope(((edu.gatech.intermediate.Terminal) (identifierNode.getNextChild().getData())).getContent(), identifierNode.getScope()); edu.gatech.util.Node<edu.gatech.intermediate.Type> foo = temp.getFirstChildOfType(RuleType.STAT_ASSIGN); if (!(identifier.isFunction())) { out.addAll(generateExpression(identifier.getName(), foo.getFirstChildOfType(RuleType.EXPR_OR_ID))); }else { java.util.List<edu.gatech.util.Node<edu.gatech.intermediate.Type>> parameterExpressions = new java.util.ArrayList<>(); java.util.List<edu.gatech.util.Node<edu.gatech.intermediate.Type>> tempOpen = new java.util.ArrayList<>(); tempOpen.add(foo.getFirstChildOfType(RuleType.EXPR_LIST)); while (!(tempOpen.isEmpty())) { edu.gatech.util.Node<edu.gatech.intermediate.Type> bar = tempOpen.remove(0); java.util.List<edu.gatech.util.Node<edu.gatech.intermediate.Type>> baz = bar.getChildren(); for (edu.gatech.util.Node<edu.gatech.intermediate.Type> child : baz) { if (child.getData().equals(RuleType.EXPR)) parameterExpressions.add(child); else tempOpen.add(child); } } java.util.List<java.lang.String> parameters = new java.util.ArrayList<>(); for (edu.gatech.util.Node<edu.gatech.intermediate.Type> bar : parameterExpressions) { edu.gatech.intermediate.Binding baz = generateTemp(DeclaredType.integer, bar.getScope()); java.util.List<edu.gatech.intermediate.IntermediateOperation> qux = generateExpression(baz.getName(), bar); out.addAll(qux); parameters.add(baz.getName()); } edu.gatech.intermediate.IntermediateOperation call = new edu.gatech.intermediate.IntermediateOperation(Operator.CALL, identifier.getName(), \"\", \"\", \"\", parameters); out.add(call); } }else { java.lang.System.out.println(temp); open.addAll(temp.getChildren()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7267/buggy-version/src.edu.gatech.intermediate.Intermediate.java", "BodyUseAPI": ["edu.gatech.util.Node<edu.gatech.intermediate.Type>.hasChildOfType(RuleType.STAT_ASSIGN)", "java.util.List<edu.gatech.intermediate.IntermediateOperation>.addAll(java.util.List<edu.gatech.intermediate.IntermediateOperation>)", "edu.gatech.util.Node<edu.gatech.intermediate.Type>.getFirstChildOfType(RuleType.STAT_ASSIGN)", "edu.gatech.util.Node<edu.gatech.intermediate.Type>.getFirstChildOfType(RuleType.EXPR)", "edu.gatech.util.Node<edu.gatech.intermediate.Type>.getFirstChildOfType(TokenType.ID)", "java.util.List<edu.gatech.util.Node<edu.gatech.intermediate.Type>>.addAll(temp.getChildren())", "edu.gatech.util.Node<edu.gatech.intermediate.Type>.getChildren()", "edu.gatech.intermediate.Intermediate.generateExpression(foo.getName(),temp.getFirstChildOfType(RuleType.EXPR))", "java.io.PrintStream.println(edu.gatech.util.Node<edu.gatech.intermediate.Type>)"], "Fixed commit": "e3ed099262f12832862a9aef92c8b57907345a32", "Url": "https://api.github.com/repos/abettadapur/icompiler", "Date": "2014-04-01T01:30:18Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pro.outcome.rest.Request.getOrigin()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (origin == null) { getLogger().log(info(\"received null Origin header\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3795/buggy-version/src.main.java.pro.outcome.rest.Servlet.java", "BodyUseAPI": [], "Fixed commit": "68e479abbb9d160aa59244acd2ad2d0874a9193d", "Url": "https://api.github.com/repos/outcome-pro/outcome", "Date": "2016-05-12T13:41:18Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (blobEntry == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2694/buggy-version/src.main.java.com.pratilipi.common.util.PratilipiContentUtil.java", "BodyUseAPI": [], "Fixed commit": "92cfce38c979ac62ad262b79204b503cbac7c401", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-07-23T07:43:56Z"},
{"Line": "=>1970", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(value.contains(\" or\"))) { values[i] = values[i].trim().replace(\" \", \"\\\\ \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6297/buggy-version/components.governance.org.wso2.carbon.governance.api.src.main.java.org.wso2.carbon.governance.api.util.GovernanceUtils.java", "BodyUseAPI": [], "Fixed commit": "3e9a149a63d8a4a3ecc0be9680e3c10ecd6d63ed", "Url": "https://api.github.com/repos/daneshk/carbon-governance", "Date": "2016-07-18T20:22:35Z"},
{"Line": "=>1978", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(value.contains(\" or\"))) { values[i] = values[i].trim().replace(\" \", \"\\\\ \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6297/buggy-version/components.governance.org.wso2.carbon.governance.api.src.main.java.org.wso2.carbon.governance.api.util.GovernanceUtils.java", "BodyUseAPI": [], "Fixed commit": "3e9a149a63d8a4a3ecc0be9680e3c10ecd6d63ed", "Url": "https://api.github.com/repos/daneshk/carbon-governance", "Date": "2016-07-18T20:22:35Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeFormat.equals(\"HH\")) index = time; else index = time - 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5744/buggy-version/src.com.lemontruck.thermo.StatisticProvider.java", "BodyUseAPI": [], "Fixed commit": "4228250df52d460dff6da46d9f17cb3dc8d5169c", "Url": "https://api.github.com/repos/joausaga/thermometer", "Date": "2013-09-09T12:30:33Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entity.worldObj.isRemote) == true) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1110/buggy-version/src.main.java.fi.dy.masa.enderutilities.util.teleport.TeleportEntity.java", "BodyUseAPI": [], "Fixed commit": "7ca8a7351b46931b3c0da78d155e9884b5fd3e2d", "Url": "https://api.github.com/repos/maruohon/modjam4", "Date": "2014-07-12T13:48:43Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1110/buggy-version/src.main.java.fi.dy.masa.enderutilities.util.teleport.TeleportEntity.java", "BodyUseAPI": [], "Fixed commit": "7ca8a7351b46931b3c0da78d155e9884b5fd3e2d", "Url": "https://api.github.com/repos/maruohon/modjam4", "Date": "2014-07-12T13:48:43Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isData == 1) { return serializationService.bytesToObject(bytes, 39); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3702/buggy-version/hazelcast.src.main.java.com.hazelcast.spi.impl.operationservice.impl.responses.Response.java", "BodyUseAPI": [], "Fixed commit": "6359263fe1e72b0f392a5cedf9864e61c9b5d22a", "Url": "https://api.github.com/repos/pveentjer/hazelcast", "Date": "2016-03-05T17:45:13Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.DatabaseMetaData.getDatabaseProductName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"MySQL\".equals(dbProductName)) { ps = connection.prepareStatement((\"USE \" + (schema))); }else { ps = connection.prepareStatement(\"SET SCHEMA ?\"); ps.setString(1, schema); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1641/buggy-version/com.ibm.jbatch.container.src.main.java.com.ibm.jbatch.container.services.impl.JDBCPersistenceManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "33f76846a48d99fabf77581e8e97d6d2ac10ba9e", "Url": "https://api.github.com/repos/WASdev/standards.jsr352.jbatch", "Date": "2017-06-08T07:55:49Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.address.logic.commands.TodoCommand.getReadOnlyPersonFromIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((itemIndex.getZeroBased()) >= (person.getTodoItems().size())) { throw new seedu.address.logic.commands.exceptions.CommandException(seedu.address.logic.commands.TodoCommand.MESSAGE_INVALID_TODOITEM_INDEX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8626/buggy-version/src.main.java.seedu.address.logic.commands.TodoCommand.java", "BodyUseAPI": [], "Fixed commit": "5b946e0ff7b20276f72c6837220bdc2f4f77fa26", "Url": "https://api.github.com/repos/Hailinx/addressbook-level4", "Date": "2017-11-11T02:32:07Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wordsPassed < (totalWords)) { playGameLayout.setBackgroundColor(android.graphics.Color.parseColor(getRandomCardColor())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3236/buggy-version/app.src.main.java.com.jeeps.charades.PlayGame.java", "BodyUseAPI": [], "Fixed commit": "e5f323168593c801aa721d41621e938228a0afb4", "Url": "https://api.github.com/repos/JamesJose7/CharadesAndroid", "Date": "2017-03-09T18:19:20Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gwHome) == null) { org.wso2.carbon.apimgt.core.models.events.APIEvent apiDeleteEvent = new org.wso2.carbon.apimgt.core.models.events.APIEvent(APIMgtConstants.GatewayEventTypes.API_DELETE); apiDeleteEvent.setLabels(api.getLabels()); apiDeleteEvent.setApiSummary(toAPISummary(api)); publishToPublisherTopic(apiDeleteEvent); if (org.wso2.carbon.apimgt.core.impl.APIGatewayPublisherImpl.log.isDebugEnabled()) { org.wso2.carbon.apimgt.core.impl.APIGatewayPublisherImpl.log.debug(((\"API : \" + (api.getName())) + \" deleted event has been successfully published to broker\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1453/buggy-version/components.apimgt.org.wso2.carbon.apimgt.core.src.main.java.org.wso2.carbon.apimgt.core.impl.APIGatewayPublisherImpl.java", "BodyUseAPI": [], "Fixed commit": "e1974b832e793094a3605f1a513b3657111f70c3", "Url": "https://api.github.com/repos/wso2/carbon-apimgt", "Date": "2017-06-13T12:55:32Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lazyQueryView.getAddedItems().size()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (index >= addedItemSize) { idIndexMap.put(itemId, (index - addedItemSize)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/85/buggy-version/vaadin-lazyquerycontainer.src.main.java.org.vaadin.addons.lazyquerycontainer.LazyIdList.java", "BodyUseAPI": ["java.util.Map<java.lang.Object, java.lang.Integer>.put(T,int)"], "Fixed commit": "fedc1c86451832cb9e8e8fb6b039a3e22fe59987", "Url": "https://api.github.com/repos/tlaukkan/vaadin-lazyquerycontainer", "Date": "2013-06-12T15:42:05Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.stuntguy3000.java.ledhub.LEDHub.getInstance().getThreadHandler().getLedServiceActionTask()) != null) { me.stuntguy3000.java.ledhub.LEDHub.getInstance().getThreadHandler().getLedServiceActionTask().interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8974/buggy-version/src.main.java.me.stuntguy3000.java.ledhub.handler.ServiceHandler.java", "BodyUseAPI": [], "Fixed commit": "8443fa966e75ba301099a63c1d8b36d73fdc9bf3", "Url": "https://api.github.com/repos/stuntguy3000/LEDHub", "Date": "2016-12-16T11:59:12Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size.x) > (size.y)) { com.leruka.leruka.main.Central.displayHeight = size.y; com.leruka.leruka.main.Central.displayWidth = size.x; }else { com.leruka.leruka.main.Central.displayHeight = size.x; com.leruka.leruka.main.Central.displayWidth = size.y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7369/buggy-version/app.src.main.java.com.leruka.leruka.main.Central.java", "BodyUseAPI": [], "Fixed commit": "1c5cb609b54e20780a42db18b11c86224fbed705", "Url": "https://api.github.com/repos/Leruka/leruka", "Date": "2015-12-04T00:21:05Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { currentActivity.getWindowManager().getDefaultDisplay().getRealSize(size); }else { android.util.DisplayMetrics metrics = new android.util.DisplayMetrics(); currentActivity.getWindowManager().getDefaultDisplay().getMetrics(metrics); size.set(metrics.widthPixels, metrics.heightPixels); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7369/buggy-version/app.src.main.java.com.leruka.leruka.main.Central.java", "BodyUseAPI": [], "Fixed commit": "1c5cb609b54e20780a42db18b11c86224fbed705", "Url": "https://api.github.com/repos/Leruka/leruka", "Date": "2015-12-04T00:21:05Z"},
{"Line": "=>2104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.giisoo.core.bean.TimeStamp.create()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((t.past()) > 10000) { com.giisoo.framework.common.OpLog.warn(\"bean\", \"load\", ((\"cost=\" + (t.past())) + \"ms\"), (((((((\"load - cost=\" + (t.past())) + \"ms, collection=\") + table) + \", sql=\") + sql) + \", result=\") + rs)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1279/buggy-version/src.main.java.core.com.giisoo.core.bean.Bean.java", "BodyUseAPI": ["com.giisoo.core.bean.TimeStamp.past()", "com.giisoo.core.bean.TimeStamp.past()", "com.giisoo.framework.common.OpLog.warn(java.lang.String,java.lang.String,((\"cost=\" + (t.past())) + \"ms\"),(((((((\"load - cost=\" + (t.past())) + \"ms, collection=\") + table) + \", sql=\") + sql) + \", result=\") + rs))"], "Fixed commit": "f4e06b0b31c3f084e1b2e1b76e7ca631108a9daa", "Url": "https://api.github.com/repos/s20000/webgiisoo", "Date": "2015-07-28T23:24:34Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userDB.getSchemas().size()) <= 15) comboSchema.setVisibleItemCount(userDB.getSchemas().size());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3003/buggy-version/com.hangum.tadpole.rdb.core.src.com.hangum.tadpole.rdb.core.editors.objectmain.ObjectEditor.java", "BodyUseAPI": ["com.hangum.tadpole.rdb.core.editors.objectmain.ObjectEditor.getSchemas()", "com.hangum.tadpole.rdb.core.editors.objectmain.ObjectEditor.setVisibleItemCount(userDB.getSchemas().size())", "userDB.getSchemas().size()"], "Fixed commit": "a8e30367321b5e5f9e472d61545ea9694de53887", "Url": "https://api.github.com/repos/sunhanintech/TadpoleForDBTools", "Date": "2017-09-13T16:39:42Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userDB.getSchemas().size()) <= 15) comboSchema.setVisibleItemCount(userDB.getSchemas().size());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3003/buggy-version/com.hangum.tadpole.rdb.core.src.com.hangum.tadpole.rdb.core.editors.main.MainEditor.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Combo.setVisibleItemCount(userDB.getSchemas().size())", "com.hangum.tadpole.rdb.core.editors.main.MainEditor.getSchemas()", "userDB.getSchemas().size()"], "Fixed commit": "a8e30367321b5e5f9e472d61545ea9694de53887", "Url": "https://api.github.com/repos/sunhanintech/TadpoleForDBTools", "Date": "2017-09-13T16:39:42Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.minestar.cok.game.CoKGame.getTeamOfPlayer(player.username)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (team == null) { de.minestar.cok.game.CoKGame.setPlayerSpectator(((net.minecraft.entity.player.EntityPlayerMP) (player))); java.lang.String[] usernames = new java.lang.String[]{ player.username }; de.minestar.cok.network.CoKGamePacketServer.sendPacketToAllPlayers(PacketHandler.SPECTATOR_ADD, usernames); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8026/buggy-version/cok_common.de.minestar.cok.hook.PlayerTracker.java", "BodyUseAPI": [], "Fixed commit": "37350d1fda070f4eea2956b2849a3f8f5e422053", "Url": "https://api.github.com/repos/DerGeras/CoK", "Date": "2013-09-10T19:18:57Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gameStarted)) { timerThread = new java.lang.Thread(timer); timerThread.start(); game.start(); gameStarted = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4757/buggy-version/src.ogo.spec.game.graphics.view.GUI.java", "BodyUseAPI": [], "Fixed commit": "70fb026066eaa01eb206fac666c45ffe80c425f6", "Url": "https://api.github.com/repos/kokx/tue-2io23", "Date": "2013-01-16T13:44:21Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["countEditText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(countText.isEmpty())) { count = java.lang.Integer.valueOf(countText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/886/buggy-version/app.src.main.java.com.kabir.flickrtask.main.view.FlickrActivity.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "235804da0ba4d8d441d4a257d974aeb45aa351f3", "Url": "https://api.github.com/repos/kabir4691/FlickrTask", "Date": "2016-06-28T10:10:36Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.fs.FileSystem.get(org.apache.hadoop.conf.Configuration)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fs.exists(dictPath))) { dictId = 0; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4557/buggy-version/src.main.java.com.elex.bigdata.llda.mahout.dictionary.UpdateDictReducer.java", "BodyUseAPI": [], "Fixed commit": "0a5a24027e58cd5b83516340eb0a44bb90ffd5d0", "Url": "https://api.github.com/repos/elex-bigdata/lldaMahout", "Date": "2014-05-16T05:59:13Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((other.accelCache) != null) this.accelCache = new jsat.utils.DoubleList(other.accelCache);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1289/buggy-version/JSAT.src.jsat.classifiers.linear.kernelized.DUOL.java", "BodyUseAPI": [], "Fixed commit": "86a0066b52d84d38c8965a84c21a7de4ddbe7eca", "Url": "https://api.github.com/repos/TKlerx/JSAT", "Date": "2015-05-03T23:46:18Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((other.kTmp) != null) this.kTmp = new jsat.utils.DoubleList(other.kTmp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1289/buggy-version/JSAT.src.jsat.classifiers.linear.kernelized.DUOL.java", "BodyUseAPI": [], "Fixed commit": "86a0066b52d84d38c8965a84c21a7de4ddbe7eca", "Url": "https://api.github.com/repos/TKlerx/JSAT", "Date": "2015-05-03T23:46:18Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tag.equals(\"subject\")) { currentItem.setCategory(parser.nextText()); }else if (tag.equals(\"date\")) { java.lang.String dateExp = parser.nextText(); currentItem.setPublishedAt(parseDate(dateExp)); }else if (tag.equals(\"pubDate\")) { java.lang.String dateExp = parser.nextText(); currentItem.setPublishedAt(parseDate(dateExp)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1208/buggy-version/src.com.starbug1.android.mudanews.FetchFeedService.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "9bbdd467f020bf5ff442b0857149b79889b9ea15", "Url": "https://api.github.com/repos/smeghead/RockNews", "Date": "2012-03-17T12:03:32Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((path.startsWith(\"http://\")) || (path.startsWith(\"https://\"))) { jcl.add(new java.net.URL(path.split(\" \")[0])); }else { jcl.add(path.split(\" \")[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4238/buggy-version/src.main.java.Core.modprobe.java", "BodyUseAPI": ["org.xeustechnologies.jcl.JarClassLoader.add(java.net.URL)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "org.xeustechnologies.jcl.JarClassLoader.add(java.lang.String)"], "Fixed commit": "893b05125af9d07774f0e37eaf21fb9032c59c03", "Url": "https://api.github.com/repos/uis246/VKBot", "Date": "2017-10-08T15:16:48Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ucchyocean.spm.SoupPVPMixer.config.teleport.get(java.lang.String)", "com.github.ucchyocean.spm.SoupPVPMixer.config.teleport.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((location1 != null) && (location2 != null)) { location1 = setDirection(location1, location2); location2 = setDirection(location2, location1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5832/buggy-version/src.main.java.com.github.ucchyocean.spm.SoupPVPMixer.java", "BodyUseAPI": ["com.github.ucchyocean.spm.SoupPVPMixer.setDirection(org.bukkit.Location,org.bukkit.Location)", "com.github.ucchyocean.spm.SoupPVPMixer.setDirection(org.bukkit.Location,org.bukkit.Location)"], "Fixed commit": "ca137bd69f84387176b3638b10d59f93a6458e69", "Url": "https://api.github.com/repos/ucchyocean/SoupPVPMixer", "Date": "2013-06-13T16:20:32Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buysell.getDaystried()) >= 2) { return trendpft + 0.1; }else { return trendpft + 0.3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7771/buggy-version/src.com.stockexit.net.SymbolEstimator.java", "BodyUseAPI": [], "Fixed commit": "a503429b1a38586fb18ea9f6bd2ce64ca783accf", "Url": "https://api.github.com/repos/kushaldudani/stockexit", "Date": "2015-06-10T05:09:21Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buysell.getDaystried()) >= 2) { return 0.05; }else { return 0.2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7771/buggy-version/src.com.stockexit.net.SymbolEstimator.java", "BodyUseAPI": [], "Fixed commit": "a503429b1a38586fb18ea9f6bd2ce64ca783accf", "Url": "https://api.github.com/repos/kushaldudani/stockexit", "Date": "2015-06-10T05:09:21Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stockexit.net.SymbolEstimator.getPft(double,double,buysell.getType())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((buysell.getDaystried()) >= 2) && (profit1 >= 0.2)) { return sellStock(price1, profit1, \"Middayday\", lasttime); }else if (sellIfSlipFromTrendPft(trendpft, targetpft, profit1)) { return sellStock(price1, profit1, \"Middayday\", lasttime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7771/buggy-version/src.com.stockexit.net.SymbolEstimator.java", "BodyUseAPI": ["com.stockexit.net.SymbolEstimator.sellStock(double,double,java.lang.String,java.lang.String)", "com.stockexit.net.SymbolEstimator.sellStock(double,double,java.lang.String,java.lang.String)", "com.stockexit.net.SymbolEstimator.sellIfSlipFromTrendPft(double,double,double)"], "Fixed commit": "a503429b1a38586fb18ea9f6bd2ce64ca783accf", "Url": "https://api.github.com/repos/kushaldudani/stockexit", "Date": "2015-06-10T05:09:21Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Character.isLetterOrDigit(retVal.charAt(((retVal.length()) - 1)))) { return retVal + \".\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5288/buggy-version/src.model.MessageGenerator.java", "BodyUseAPI": [], "Fixed commit": "8a533bb866b8516cec438c6638a873091d7d641d", "Url": "https://api.github.com/repos/renrichie/markov-chain-messages", "Date": "2017-06-03T22:45:04Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userrole == null) { return \"{\\\"orgName\\\":\\\"\\\",\\\"roleValue\\\":\\\"\\\",\\\"roleName\\\":\\\"\\\",\\\"applicationId\\\":\\\"\\\",\\\"applicationName\\\":\\\"\\\"}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7467/buggy-version/src.main.java.net.whydah.sso.user.mappers.UserRoleMapper.java", "BodyUseAPI": [], "Fixed commit": "ad13dd40cb7b81377ccfe1ba78d1284c47d9817b", "Url": "https://api.github.com/repos/Cantara/Whydah-TypeLib", "Date": "2017-06-16T06:30:29Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rolesJson.length()) > 1) { rolesJson = (rolesJson.substring(0, ((rolesJson.length()) - 1))) + \"]\"; }else { rolesJson = rolesJson + \"]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7467/buggy-version/src.main.java.net.whydah.sso.user.mappers.UserRoleMapper.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "ad13dd40cb7b81377ccfe1ba78d1284c47d9817b", "Url": "https://api.github.com/repos/Cantara/Whydah-TypeLib", "Date": "2017-06-16T06:30:29Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.graphstream.graph.Graph.getNode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (n == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1895/buggy-version/src.pathlinker.Driver.java", "BodyUseAPI": [], "Fixed commit": "1af6f8755485c93df52ed9c35390051c8861a477", "Url": "https://api.github.com/repos/Murali-group/PathLinker-PathVisio", "Date": "2016-04-25T18:50:46Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (changeType == (HSMessageChangeType.ADDED)) { com.ihs.demo.message_2013011344.ContactMstManager.getInstance().insertMsgs(messages); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1075/buggy-version/Message.src.main.java.com.ihs.demo.message_2013011344.DemoApplication.java", "BodyUseAPI": [], "Fixed commit": "ce484734f6b9d80f04f63ea25a685e87ba5a9670", "Url": "https://api.github.com/repos/leix28/Message", "Date": "2015-09-10T08:11:48Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files != null) { for (java.io.File file : files) { if ((!(file.isDirectory())) && (file.getName().endsWith(net.sf.jabref.openoffice.StyleSelectDialog.STYLE_FILE_EXTENSION))) { addSingleFile(file); }else if ((file.isDirectory()) && recurse) { addStyles(file.getPath(), recurse); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6295/buggy-version/src.main.java.net.sf.jabref.openoffice.StyleSelectDialog.java", "BodyUseAPI": [], "Fixed commit": "22c6234bc9566e5f6f63a2ec2137b392de0bf38f", "Url": "https://api.github.com/repos/oscargus/jabref", "Date": "2015-12-03T18:48:58Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files != null) { for (java.io.File file : files) { if ((file.isDirectory()) && (\"OpenOffice.org.app\".equals(file.getName()))) { rootDir = file; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6295/buggy-version/src.main.java.net.sf.jabref.openoffice.AutoDetectPaths.java", "BodyUseAPI": [], "Fixed commit": "22c6234bc9566e5f6f63a2ec2137b392de0bf38f", "Url": "https://api.github.com/repos/oscargus/jabref", "Date": "2015-12-03T18:48:58Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FileFilter)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (dirs != null) { java.util.Collections.addAll(dirList, dirs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6295/buggy-version/src.main.java.net.sf.jabref.openoffice.AutoDetectPaths.java", "BodyUseAPI": ["java.util.Collections.addAll(java.util.List<java.io.File>,java.io.File[])"], "Fixed commit": "22c6234bc9566e5f6f63a2ec2137b392de0bf38f", "Url": "https://api.github.com/repos/oscargus/jabref", "Date": "2015-12-03T18:48:58Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (len < 4) { this.segments = temparray.toArray(new LineSegment[0]); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2900/buggy-version/FastCollinearPoints.java", "BodyUseAPI": [], "Fixed commit": "e7a5a0f204677256ef80983a6c1396fb891e1c68", "Url": "https://api.github.com/repos/y1275963/algorithms_w3feature_extraction", "Date": "2016-02-18T16:01:20Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.whizzosoftware.hobson.api.property.PropertyContainer.getPropertyValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (bridgeHost != null) { setBridgeHost(bridgeHost); }else { requestDeviceAdvertisementSnapshot(\"ssdp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2580/buggy-version/src.main.java.com.whizzosoftware.hobson.philipshue.HuePlugin.java", "BodyUseAPI": ["com.whizzosoftware.hobson.philipshue.HuePlugin.setBridgeHost(java.lang.String)"], "Fixed commit": "2a56807c893b7448c94140ac0a5d41ddeb86a020", "Url": "https://api.github.com/repos/whizzosoftware/hobson-hub-philips-hue", "Date": "2015-09-14T14:59:22Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((objects.size()) > 0) && ((currentPageIdx) == 0)) { currentPageIdx = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2009/buggy-version/pm4j-core.main.java.org.pm4j.core.pm.pageable.PageableListImpl.java", "BodyUseAPI": [], "Fixed commit": "32731cefdc8ad6be854c651182feffb258ba67ec", "Url": "https://api.github.com/repos/pm4j/org.pm4j", "Date": "2012-05-03T16:34:52Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.mcworkshop.dongjing.service.report.RentStatus>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rs.getRentee()) != null) { name.append(getString(rs.getRentee().getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2513/buggy-version/dongjing.src.main.java.com.mcworkshop.dongjing.service.report.CompanyListReport.java", "BodyUseAPI": ["com.mcworkshop.dongjing.service.report.RentStatus.getRentee()", "rs.getRentee().getName()", "com.mcworkshop.dongjing.service.report.CompanyListReport.getString(rs.getRentee().getName())", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "6e7af569ed35e20d4561171d1a2d6bc5f2dd3b55", "Url": "https://api.github.com/repos/markfredchen/mcworkshop", "Date": "2017-06-04T14:53:17Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pnlInspect) != null) pnlInspect.updateScrollpane();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3677/buggy-version/src.dba.gui.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "36d684a57983d2347ba3c5b850b844dc316404d1", "Url": "https://api.github.com/repos/nexxx/Database-Analyzer", "Date": "2013-01-05T20:42:54Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.minitoolbox.reflection.typewrapper.ArrayTypeWrapper.getBaseType()", "org.minitoolbox.reflection.typewrapper.TypeWrapper.getBaseType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((wrap(thisBaseType).isPrimitive()) || (wrap(thatBaseType).isPrimitive())) { return (thisBaseType.equals(thatBaseType)) && ((getDimension()) == (arrayTypeWrapper.getDimension())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5142/buggy-version/src.main.java.org.minitoolbox.reflection.typewrapper.ArrayTypeWrapper.java", "BodyUseAPI": ["java.lang.reflect.Type.equals(java.lang.reflect.Type)"], "Fixed commit": "8606e727220e627b9d44c523e30fe2d01123f19a", "Url": "https://api.github.com/repos/minitoolbox/minitoolbox", "Date": "2013-12-01T00:42:28Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.lang.System.getProperty(\"os.name\").toLowerCase().contains(\"windows\"))) { additionalChar = \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/125/buggy-version/src.main.java.ui.ImageFromMap.java", "BodyUseAPI": [], "Fixed commit": "6eed2b2608e7c7214235dabef8299171bb79b695", "Url": "https://api.github.com/repos/williamahartman/CS3733Team2Project", "Date": "2015-12-09T05:07:33Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.lang.System.getProperty(\"os.name\").toLowerCase().contains(\"windows\"))) { additionalChar = \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/125/buggy-version/src.main.java.ui.Email.java", "BodyUseAPI": [], "Fixed commit": "6eed2b2608e7c7214235dabef8299171bb79b695", "Url": "https://api.github.com/repos/williamahartman/CS3733Team2Project", "Date": "2015-12-09T05:07:33Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.todoroo.astrid.data.User.getValue(User.EMAIL)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((android.text.TextUtils.isEmpty(email)) || (\"null\".equals(email))) criterion = Task.USER_ID.eq(user.getValue(User.REMOTE_ID)); else criterion = com.todoroo.andlib.sql.Criterion.or(Task.USER.like(((\"%\" + email) + \"%\")), Task.USER_ID.eq(user.getValue(User.REMOTE_ID)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4032/buggy-version/astrid.plugin-src.com.todoroo.astrid.people.PeopleFilterExposer.java", "BodyUseAPI": ["Task.USER.like(java.lang.String)", "com.todoroo.andlib.sql.Criterion.or(Task.USER.like(((\"%\" + email) + \"%\")),Task.USER_ID.eq(user.getValue(User.REMOTE_ID)))"], "Fixed commit": "81760303fbf007c05463d95df049e716bac865d5", "Url": "https://api.github.com/repos/sbosley/astrid", "Date": "2012-06-12T19:03:44Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.Session.get(java.lang.Class,author.getId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((persistentAuthor.getBooks()) != null) { result = new java.util.ArrayList(persistentAuthor.getBooks()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4279/buggy-version/database.src.main.java.com.iquestgroup.database.impl.DefaultBookDao.java", "BodyUseAPI": ["com.iquestgroup.model.Author.getBooks()"], "Fixed commit": "54f4ccfdc5fee27a9e03e2d43ee389bce0209253", "Url": "https://api.github.com/repos/Stefan-Pamparau/OnlineBookStore", "Date": "2016-08-02T18:34:09Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((version) >= 9) { storageContents = player.getInventory().getStorageContents(); }else { storageContents = player.getInventory().getContents(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/677/buggy-version/src.main.java.com.hm.achievement.listener.AbstractListener.java", "BodyUseAPI": [], "Fixed commit": "f19e94258629a11e62cf3437c4a3244d88efe38d", "Url": "https://api.github.com/repos/PyvesB/AdvancedAchievements", "Date": "2017-07-11T21:04:33Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((version) >= 9) { org.bukkit.attribute.AttributeInstance playerAttribute = player.getAttribute(Attribute.GENERIC_MAX_HEALTH); playerAttribute.setBaseValue(((playerAttribute.getBaseValue()) + amount)); }else { player.setMaxHealth(((player.getMaxHealth()) + amount)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/677/buggy-version/src.main.java.com.hm.achievement.listener.PlayerAdvancedAchievementListener.java", "BodyUseAPI": [], "Fixed commit": "f19e94258629a11e62cf3437c4a3244d88efe38d", "Url": "https://api.github.com/repos/PyvesB/AdvancedAchievements", "Date": "2017-07-11T21:04:33Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.size()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (j >= 1) { int i = new java.util.Random().nextInt(j); sender.sendToChannel(((((((((sender.senderName) + \": \") + (so101.ircbot.maskbot.commands.CommandNotes.notes.get(sender.senderName.toLowerCase()).get(i))) + \" (Note \") + (i + 1)) + \"/\") + j) + \")\")); }else { sender.sendToChannel(((sender.senderName) + \": No notes found!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1780/buggy-version/src.so101.ircbot.maskbot.commands.CommandNotes.java", "BodyUseAPI": ["so101.ircbot.maskbot.IRCBot.ChannelSender.sendToChannel(((((((((sender.senderName) + \": \") + (so101.ircbot.maskbot.commands.CommandNotes.notes.get(sender.senderName.toLowerCase()).get(i))) + \" (Note \") + (i + 1)) + \"/\") + j) + \")\"))", "java.util.Random.nextInt(int)"], "Fixed commit": "2b94f286294c277ace8c78d42494c77e9e13bc57", "Url": "https://api.github.com/repos/StrangeOne101/IRCBot", "Date": "2015-02-03T07:29:55Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.upload.metadata.isCommentsEnabled()) { mdata.put(\"allow_comments_detail\", \"all\"); mdata.put(\"allow_comment_ratings\", \"yes\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5276/buggy-version/src.main.java.at.becast.youploader.youtube.io.MetadataUpdater.java", "BodyUseAPI": [], "Fixed commit": "8da96dfd7d20dec6bfa1f37dc9525fc22bd1b3a5", "Url": "https://api.github.com/repos/becast/YouPloader", "Date": "2016-04-03T14:00:21Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myPhotos) != null) { ((com.example.onzzz.i2v.EventContentActivity) (getActivity())).setMyPhotos(myPhotos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5980/buggy-version/app.src.main.java.com.example.onzzz.i2v.Tab1.java", "BodyUseAPI": [], "Fixed commit": "60c868727ddc570b78c1e50caba33eebcc718170", "Url": "https://api.github.com/repos/sowong411/I2V", "Date": "2016-03-16T11:36:16Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fixedConstraints == null) { fixedConstraints = new com.cfm.hlcl.HlclProgram(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2797/buggy-version/com.variamos.defectAnalyzer.src.com.variamos.defectAnalyzer.defectAnalyzer.CauCosAnayzer.java", "BodyUseAPI": [], "Fixed commit": "0368245df323713db3770959e8158d26e5b2a790", "Url": "https://api.github.com/repos/jcmunozf/VARIAMOS", "Date": "2015-01-16T03:02:37Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sender instanceof org.bukkit.entity.Player) { org.bukkit.entity.Player p = ((org.bukkit.entity.Player) (sender)); if (!(p.hasPermission(\"displayname.change\"))) { p.sendMessage(((org.bukkit.ChatColor.RED) + \"You do not have permission to use that\")); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4899/buggy-version/src.com.connorlinfoot.displaynamechanger.Command.java", "BodyUseAPI": [], "Fixed commit": "dcd46d4cc3af021664ee6abe927ebb8008bf2157", "Url": "https://api.github.com/repos/connorlinfoot/DisplayNameChanger", "Date": "2014-08-27T12:54:29Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SplashScreenApp.getByDayData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((days.size()) == 15) { noClickable = 4; }else { noClickable = 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/927/buggy-version/src.SplashScreenApp.java", "BodyUseAPI": [], "Fixed commit": "012a3d12910981536371d2f09e472a1b9d05f574", "Url": "https://api.github.com/repos/JacobMoxham/InteractionDesignRepo", "Date": "2017-05-22T10:50:56Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.aksingh.owmjapis.DailyForecast.getForecastInstance(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(forecast.getDateTime().before(new java.util.Date()))) { WeatherObject weatherNow = new WeatherObject(date, time, temp, iconURL, windSpeed, windDegree); daysForecast.add(weatherNow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/927/buggy-version/src.WeatherDataReader.java", "BodyUseAPI": [], "Fixed commit": "012a3d12910981536371d2f09e472a1b9d05f574", "Url": "https://api.github.com/repos/JacobMoxham/InteractionDesignRepo", "Date": "2017-05-22T10:50:56Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Hashtable<java.lang.Integer, java.lang.Integer>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (pos != null) { int firstVisiblePosition = mMenuList.getFirstVisiblePosition(); android.view.View view = mMenuList.getChildAt((pos - firstVisiblePosition)); mAdapter.increaseCounterInMenu(view, pos, delta); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8812/buggy-version/app.src.free.java.com.z299studio.pb.NavigationDrawerFragment.java", "BodyUseAPI": ["com.z299studio.pb.NavigationDrawerAdapter.increaseCounterInMenu(android.view.View,java.lang.Integer,int)", "android.widget.ListView.getChildAt(int)"], "Fixed commit": "62aca6069b5de96c8d604146e4d85207706514b0", "Url": "https://api.github.com/repos/zhuqianqian/Passbook", "Date": "2015-12-04T18:55:25Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mUpdateThetaList.size()) > 0) { index = mStorage.getThetaObjectCachesIndex(mUpdateThetaList.get(position).getFileName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1883/buggy-version/dConnectDevicePlugin.dConnectDeviceTheta.app.src.main.java.org.deviceconnect.android.deviceplugin.theta.fragment.ThetaGalleryFragment.java", "BodyUseAPI": ["mUpdateThetaList.get(position).getFileName()", "java.util.List<org.deviceconnect.android.deviceplugin.theta.core.ThetaObject>.get(int)", "org.deviceconnect.android.deviceplugin.theta.data.ThetaObjectStorage.getThetaObjectCachesIndex(mUpdateThetaList.get(position).getFileName())"], "Fixed commit": "e111806c9ba5bd4a18c67d02b1ed4601e39453c4", "Url": "https://api.github.com/repos/TakayukiHoshi1984/DeviceConnect-Android", "Date": "2015-12-15T05:31:48Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((volumeCheck.size()) > 0) { throw new com.cloud.exception.InvalidParameterValueException(((\"Unable to perform delete operation, Snapshot with id: \" + snapshotId) + \" is in use \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1380/buggy-version/server.src.com.cloud.storage.snapshot.SnapshotManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "53f4353265d1808c135c151428282aaa32a7093e", "Url": "https://api.github.com/repos/Accelerite/cloudstack", "Date": "2017-06-15T09:14:28Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bindingResult.hasErrors()) return \"member/add\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5408/buggy-version/src.main.java.formgenerator.web.controller.MemberController.java", "BodyUseAPI": [], "Fixed commit": "ea168a43187ca709d2dd230cbc9afd0f9f285aaf", "Url": "https://api.github.com/repos/Dlouie90/ObjectForm", "Date": "2017-04-25T06:10:14Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bCryptPasswordEncoder) == null) bCryptPasswordEncoder = new org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5408/buggy-version/src.main.java.formgenerator.web.controller.MemberController.java", "BodyUseAPI": [], "Fixed commit": "ea168a43187ca709d2dd230cbc9afd0f9f285aaf", "Url": "https://api.github.com/repos/Dlouie90/ObjectForm", "Date": "2017-04-25T06:10:14Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.cornell.kfs.concur.service.impl.ConcurReportsServiceImpl.extractConcurAccountInfoFromAllocation(edu.cornell.kfs.concur.rest.xmlObjects.AllocationsDTO)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((org.apache.commons.lang.StringUtils.isNotBlank(concurAccountInfo.getChart())) && (org.apache.commons.lang.StringUtils.isNotBlank(concurAccountInfo.getAccountNumber()))) && (org.apache.commons.lang.StringUtils.isNotBlank(concurAccountInfo.getObjectCode()))) { concurAccountInfo.setOrgRefId(orgRefId); accountInfos.add(concurAccountInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7921/buggy-version/src.main.java.edu.cornell.kfs.concur.service.impl.ConcurReportsServiceImpl.java", "BodyUseAPI": ["java.util.List<edu.cornell.kfs.concur.businessobjects.ConcurAccountInfo>.add(edu.cornell.kfs.concur.businessobjects.ConcurAccountInfo)", "edu.cornell.kfs.concur.businessobjects.ConcurAccountInfo.setOrgRefId(java.lang.String)"], "Fixed commit": "645c8e0b1035914c7ab4ed09bb1ddb414d583890", "Url": "https://api.github.com/repos/CU-CommunityApps/cu-kfs", "Date": "2017-03-09T16:37:05Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.aw.awlibrary.MainActivity.findViewById(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (detailContainer != null) { detailContainer.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3011/buggy-version/awlibrary.src.main.java.de.aw.awlibrary.MainActivity.java", "BodyUseAPI": ["android.view.View.setVisibility(View.VISIBLE)"], "Fixed commit": "2571138985c64db1f138ce9f9a2f1df66e0eebb8", "Url": "https://api.github.com/repos/gitwalex/MonMa", "Date": "2015-09-21T12:27:53Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.aw.awlibrary.MainActivity.findViewById(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (view != null) { view.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3011/buggy-version/awlibrary.src.main.java.de.aw.awlibrary.MainActivity.java", "BodyUseAPI": ["android.view.View.setVisibility(View.GONE)"], "Fixed commit": "2571138985c64db1f138ce9f9a2f1df66e0eebb8", "Url": "https://api.github.com/repos/gitwalex/MonMa", "Date": "2015-09-21T12:27:53Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) instanceof java.lang.IllegalStateException) { if (org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.LOG.isLoggable(java.util.logging.Level.FINEST)) { org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.LOG.log(java.util.logging.Level.FINEST, \"UserTransaction not available - probably due to container managed txn\", e); } }else { org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.LOG.log(java.util.logging.Level.SEVERE, \"Failed to get UserTransaction\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5359/buggy-version/modules.activity-management.activity-server-jee.src.main.java.org.overlord.rtgov.internal.activity.server.jee.JEEActivityServer.java", "BodyUseAPI": ["java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,javax.naming.NamingException)", "java.util.logging.Logger.log(java.util.logging.Level,java.lang.String,javax.naming.NamingException)"], "Fixed commit": "1f26505f23888b0c545e50d4b0a1678846f1d301", "Url": "https://api.github.com/repos/objectiser/rtgov", "Date": "2014-11-07T20:08:08Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.aufdemrand.denizencore.utilities.debugging.dB.verbose) { dB.echoError(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3586/buggy-version/src.main.java.net.aufdemrand.denizen.objects.properties.item.ItemSkullskin.java", "BodyUseAPI": [], "Fixed commit": "e30d0f66b4155f5e0c57299b0a47235fde93a0e3", "Url": "https://api.github.com/repos/DenizenScript/Denizen-For-Bukkit", "Date": "2015-12-09T07:33:35Z"},
{"Line": "=>848", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((element) != null) && (!(\"BODY\".equals(element.getNodeName())))) { binfo = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8430/buggy-version/HTML_Renderer.src.main.java.org.lobobrowser.html.renderstate.StyleSheetRenderState.java", "BodyUseAPI": [], "Fixed commit": "87a2655d91d0627eb1a9d3428d267f59b28916b7", "Url": "https://api.github.com/repos/oswetto/LoboEvolution", "Date": "2016-09-15T12:58:46Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { getActivity().setTitle(orgMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7661/buggy-version/app.src.main.java.ar.rulosoft.mimanganu.MangaFragment.java", "BodyUseAPI": [], "Fixed commit": "37e0f3f66a792f09f7945776614eab02828c625f", "Url": "https://api.github.com/repos/raulhaag/MiMangaNu", "Date": "2016-04-28T20:47:55Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["previousList.get(i).getTask()", "java.util.ArrayList<main.Task>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((previousTask == null) || (currentTask == null)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8850/buggy-version/W10-4J.Handler.CommonFunctionInDisplay.java", "BodyUseAPI": [], "Fixed commit": "346440492e9ff3f6a98a1873b65805728c815ed8", "Url": "https://api.github.com/repos/cs2103jan2016-w10-4j/main", "Date": "2016-04-05T13:52:52Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selection.getSelectionType()) != (ElementSelection.SelectionType.EMPTY)) if ((selection.getElementType()) != (com.net2plan.internal.Constants.NetworkElementType.LAYER)) throw new java.lang.RuntimeException((\"Unmatched items with table, selected items are of type: \" + (selection.getElementType())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6806/buggy-version/Net2Plan-GUI.Net2Plan-GUI-Plugins.Net2Plan-NetworkDesign.src.main.java.com.net2plan.gui.plugins.networkDesign.viewEditTopolTables.specificTables.AdvancedJTable_layer.java", "BodyUseAPI": ["com.net2plan.gui.plugins.networkDesign.ElementSelection.getElementType()", "com.net2plan.gui.plugins.networkDesign.ElementSelection.getElementType()"], "Fixed commit": "9ac6e9d6c406f8ffc3efd8e14d7aad0d590016a2", "Url": "https://api.github.com/repos/girtel/Net2Plan", "Date": "2017-04-04T12:24:20Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selection.getSelectionType()) != (ElementSelection.SelectionType.EMPTY)) if ((selection.getElementType()) != (com.net2plan.internal.Constants.NetworkElementType.FORWARDING_RULE)) throw new java.lang.RuntimeException((\"Unmatched items with table, selected items are of type: \" + (selection.getElementType())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6806/buggy-version/Net2Plan-GUI.Net2Plan-GUI-Plugins.Net2Plan-NetworkDesign.src.main.java.com.net2plan.gui.plugins.networkDesign.viewEditTopolTables.specificTables.AdvancedJTable_forwardingRule.java", "BodyUseAPI": ["com.net2plan.gui.plugins.networkDesign.ElementSelection.getElementType()", "com.net2plan.gui.plugins.networkDesign.ElementSelection.getElementType()"], "Fixed commit": "9ac6e9d6c406f8ffc3efd8e14d7aad0d590016a2", "Url": "https://api.github.com/repos/girtel/Net2Plan", "Date": "2017-04-04T12:24:20Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mArtWork) != null) { imgFile = new java.io.File(mArtWork.getLargeImagePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5869/buggy-version/app.src.main.java.com.ryanpconnors.artthief.rate.ArtWorkFragment.java", "BodyUseAPI": [], "Fixed commit": "d38f7801e30c59ce39e27dda8cacd0d2ac0d6704", "Url": "https://api.github.com/repos/ryanpconnors/art-thief", "Date": "2017-02-15T01:35:12Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getter) != null) { return getter.nonPrimitiveReturnTypeName(); }else { return setter.firstParameterTypeName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1642/buggy-version/codegen.src.main.java.org.robobinding.codegen.processor.PropertyInfoImpl.java", "BodyUseAPI": [], "Fixed commit": "3d5be7c2afa3b31a2b765a45292b92ed4e72578f", "Url": "https://api.github.com/repos/RoboBinding/RoboBinding", "Date": "2014-10-14T02:21:54Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rec1 == null) || (rec2 == null)) return rec1 == rec2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1214/buggy-version/src.main.java.com.sk89q.craftbook.util.ItemUtil.java", "BodyUseAPI": [], "Fixed commit": "fe09cabc2d749d0d2d00745d8ea3d8966d109aab", "Url": "https://api.github.com/repos/EngineHub/CraftBook", "Date": "2016-04-10T03:22:10Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((colSize) == 0) || ((rowSize) == 0)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2802/buggy-version/MovingBox.src.Board.java", "BodyUseAPI": [], "Fixed commit": "3a98b699fa77a4e83eaa1fe456d514f562e65e3e", "Url": "https://api.github.com/repos/itai-m/Games-in-Java", "Date": "2015-09-23T20:59:25Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openlmis.core.LMISApp.getInstance().getFeatureToggleFor(R.bool.feature_missed_requisition_banner)) { missedRequisitionBanner = ((org.openlmis.core.view.widget.MissedRequisitionBanner) (findViewById(R.id.view_missed_requisition_banner))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/397/buggy-version/app.src.main.java.org.openlmis.core.view.activity.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "8472cebf56c87e0098a03d0ccc20900e7533827a", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2016-07-15T03:35:30Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Double.isNaN(eff)) solution.setObjective(0, java.lang.Double.MAX_VALUE); else solution.setObjective(0, (-eff));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2516/buggy-version/jMetal.jmetal4.3_striling_constHand.jmetal.problems.singleObjective.StrilingEngineHeatExchangerDesignProblemReal.java", "BodyUseAPI": ["jmetal.problems.singleObjective.Solution.setObjective(int,double)"], "Fixed commit": "828be0199e7d260490b3ee801562824d6dd72f50", "Url": "https://api.github.com/repos/shaikatcse/StirlingEngineOptimization", "Date": "2014-02-11T14:33:02Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teremok.influence.model.Calculator.countDices(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (defenseDices == 0) { defenseDices++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1714/buggy-version/influence.src.com.teremok.influence.model.Calculator.java", "BodyUseAPI": [], "Fixed commit": "f26ed40b8b25d73910f605afa4c9c8bc7049bcbb", "Url": "https://api.github.com/repos/AlexeyGorovoy/influence", "Date": "2013-12-27T09:15:43Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.server.network.protocol.http.OHttpRequest.getUrlEncodedContent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (content == null) { com.orientechnologies.orient.core.record.impl.ODocument result = new com.orientechnologies.orient.core.record.impl.ODocument().field(\"error\", \"missing_auth_data\"); sendError(iRequest, iResponse, result); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/732/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.http.command.post.OServerCommandPostAuthToken.java", "BodyUseAPI": [], "Fixed commit": "9c9fca6d47d0a704ec9744437888d860785dd344", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-08-01T14:00:47Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tokenHandler) != null) { com.orientechnologies.orient.core.db.document.ODatabaseDocument db = null; com.orientechnologies.orient.core.metadata.security.OSecurityUser user = null; try { db = ((com.orientechnologies.orient.core.db.document.ODatabaseDocument) (server.openDatabase(iRequest.databaseName, username, password))); user = db.getUser(); if (user != null) { byte[] tokenBytes = tokenHandler.getSignedWebToken(db, user); signedToken = new java.lang.String(tokenBytes); }else { } } catch (com.orientechnologies.orient.core.exception.OSecurityAccessException e) { } catch (com.orientechnologies.common.concur.lock.OLockException e) { com.orientechnologies.common.log.OLogManager.instance().error(this, ((\"Cannot access to the database '\" + (iRequest.databaseName)) + \"'\"), com.orientechnologies.orient.core.exception.ODatabaseException.class, e); } finally { if (db != null) { db.close(); } } result = new com.orientechnologies.orient.core.record.impl.ODocument().field(\"access_token\", signedToken).field(\"expires_in\", 3600); iResponse.writeRecord(result, com.orientechnologies.orient.server.network.protocol.http.command.post.OServerCommandPostAuthToken.RESPONSE_FORMAT, null); }else { result = new com.orientechnologies.orient.core.record.impl.ODocument().field(\"error\", \"unsupported_grant_type\"); sendError(iRequest, iResponse, result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/732/buggy-version/server.src.main.java.com.orientechnologies.orient.server.network.protocol.http.command.post.OServerCommandPostAuthToken.java", "BodyUseAPI": [], "Fixed commit": "9c9fca6d47d0a704ec9744437888d860785dd344", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-08-01T14:00:47Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((offset + count) > (cdata.length())) { count = (cdata.length()) - offset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5393/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": ["org.exist.util.XMLString.length()"], "Fixed commit": "a399be4bdef770722528951b86db73ab80af671e", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-07T15:20:30Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tmitter.model.Monster.getWatchedMonsters()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (realWatchedMonsters == null) { watchedMonsters = new java.util.ArrayList<java.lang.String>(); }else { watchedMonsters = new java.util.ArrayList<java.lang.String>(realWatchedMonsters); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1653/buggy-version/tmitter.ui.add.src.tmitter.ui.add.AddTmeetTab.java", "BodyUseAPI": [], "Fixed commit": "b8e4c67ba50dcbad82e5e9d26e4a0a3ed5a94ec0", "Url": "https://api.github.com/repos/hstaudacher/tmitter", "Date": "2011-10-11T06:05:25Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((r != null) && ((r.getThreads()) != null)) && ((r.getThreads().size()) > 0)) { org.denevell.droidnatch.threads.list.entities.ThreadResource threadResource = r.getThreads().get(0); showNotificationIfNewThread(context, threadResource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7425/buggy-version/src.org.denevell.droidnatch.app.service.NewThreadsBroadcastReceiver.java", "BodyUseAPI": ["r.getThreads().get(int)", "org.denevell.droidnatch.threads.list.entities.ListThreadsResource.getThreads()"], "Fixed commit": "4a522286de91d7991b0cb35a2cd6a6639a08bd2e", "Url": "https://api.github.com/repos/denevell/Natch-Android", "Date": "2014-02-24T01:14:11Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (this.expr)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2775/buggy-version/src.io.lambdacloud.node.UnaryOp.java", "BodyUseAPI": [], "Fixed commit": "ef629c7bd6df0ffa9d6ecef674e44743c6d6eb94", "Url": "https://api.github.com/repos/yuemingl/ExprEngine", "Date": "2016-11-24T16:11:19Z"},
{"Line": "=>618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.xprova.simulations.CodeSimulator.exploreSpace(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (counterExample != null) sim1.simulate(initial, counterExample);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7618/buggy-version/src.main.java.net.xprova.xprova.ConsoleHandler.java", "BodyUseAPI": ["net.xprova.simulations.CodeSimulator.simulate(int,int[])"], "Fixed commit": "78de2d3970d332e22070e7f55bae0d16615be186", "Url": "https://api.github.com/repos/xprova/xprova", "Date": "2016-06-10T20:25:22Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nuxeo.ecm.core.transientstore.api.TransientStoreService.getStore(java.lang.String)", "org.nuxeo.ecm.platform.rendition.lazy.AbstractLazyCachableRenditionProvider.buildRenditionKey(org.nuxeo.ecm.core.api.DocumentModel,org.nuxeo.ecm.platform.rendition.service.RenditionDefinition)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ts.isCompleted(key)) { ts.release(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3424/buggy-version/nuxeo-features.nuxeo-platform-rendition.nuxeo-platform-rendition-core.src.main.java.org.nuxeo.ecm.platform.rendition.lazy.AbstractLazyCachableRenditionProvider.java", "BodyUseAPI": ["org.nuxeo.ecm.core.transientstore.api.TransientStore.release(java.lang.String)"], "Fixed commit": "5c66c39588b9eb269a3dad85acaf787b5ef5002e", "Url": "https://api.github.com/repos/ron1/nuxeo", "Date": "2016-10-21T20:13:20Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(groupCourses.getAuthorizationList().isAccessCreate(userRepository.getSingleEntityByFieldAndValue(\"login\", data.get(\"principalName\"))))) { throw new com.getknowledge.platform.exceptions.NotAuthorized(\"access denied to create group courses\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1712/buggy-version/Modules.src.main.java.com.getknowledge.modules.courses.group.GroupCoursesService.java", "BodyUseAPI": [], "Fixed commit": "775a8db374134336b38788c30b4aa96bead00620", "Url": "https://api.github.com/repos/DenisMd/PlatformGetKnowledge", "Date": "2016-02-15T08:42:54Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection) != null) { connection.disconnect(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/202/buggy-version/components.camel-mqtt.src.main.java.org.apache.camel.component.mqtt.MQTTEndpoint.java", "BodyUseAPI": [], "Fixed commit": "6dd206b6a08f71620dcbdf87e2d0c6b10881490c", "Url": "https://api.github.com/repos/onderson/camel", "Date": "2017-11-03T16:36:56Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (hostname == null) { java.lang.String addrString = \"\"; for (java.util.Enumeration<java.net.NetworkInterface> net_interfaces = java.net.NetworkInterface.getNetworkInterfaces(); net_interfaces.hasMoreElements();) { java.net.NetworkInterface curr = net_interfaces.nextElement(); java.lang.System.out.println(curr.getName()); int addr_count = 0; for (java.util.Enumeration<java.net.InetAddress> addresses = curr.getInetAddresses(); addresses.hasMoreElements();) { java.net.InetAddress curr_addr = addresses.nextElement(); if ((curr.getName().equals(\"eth0\")) && (addr_count == 2)) { addrString = curr_addr.toString(); } addr_count += 1; } } bootaddr = java.net.InetAddress.getByName(addrString.substring(1)); }else { bootaddr = java.net.InetAddress.getByName(hostname); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/850/buggy-version/src.blue_crab.BlueCrab.java", "BodyUseAPI": [], "Fixed commit": "9d8a8cd7b15701aa98f05372380dc213738fd220", "Url": "https://api.github.com/repos/cioc/Blue-Crab", "Date": "2012-05-01T04:04:38Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reg == (REG_SCANLINE)) { return vdpScanline; }else if (reg < (vdpregs.length)) { return (vdpregs[reg]) & 255; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3445/buggy-version/v9t9.v9t9-java.v9t9-engine.src.v9t9.engine.video.tms9918a.VdpTMS9918A.java", "BodyUseAPI": [], "Fixed commit": "f4a6a7c99baac30dbad50d96274d7a900a5ced19", "Url": "https://api.github.com/repos/eswartz/emul", "Date": "2015-07-18T19:45:40Z"},
{"Line": "=>973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mWakeLockState) | (mUserState)) == (com.android.server.PowerManagerService.SCREEN_OFF)) { pendingTimeoutEvent = ((mTimeoutTask.nextState) != (-1)) && ((mNextTimeout) > (android.os.SystemClock.uptimeMillis())); pendingTimeoutEvent |= mBroadcastWakeLock.isHeld(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4459/buggy-version/services.java.com.android.server.PowerManagerService.java", "BodyUseAPI": [], "Fixed commit": "a51d87ca1c5fe36df178171985057555511cd4b2", "Url": "https://api.github.com/repos/wimm/android_frameworks_base", "Date": "2012-05-09T18:16:00Z"},
{"Line": "=>981", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!pendingTimeoutEvent) setPowerState(((mWakeLockState) | (mUserState)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4459/buggy-version/services.java.com.android.server.PowerManagerService.java", "BodyUseAPI": [], "Fixed commit": "a51d87ca1c5fe36df178171985057555511cd4b2", "Url": "https://api.github.com/repos/wimm/android_frameworks_base", "Date": "2012-05-09T18:16:00Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(s5.matches(\"^\\\\d+(,\\\\d{1,2})?$\"))) { javax.swing.JOptionPane.showMessageDialog(null, \"Cijena nije ispravno unesena\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5260/buggy-version/vozniPark.src.main.java.vozniPark.View.OdjavljivanjePreuzetogVozila.java", "BodyUseAPI": [], "Fixed commit": "e0a07fdbb5168a3185d607be7214bfbc19f6dd5c", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim7", "Date": "2016-05-21T12:37:23Z"},
{"Line": "=>1567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (otherSect.equals(\"data-version\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8828/buggy-version/Empires.src.com.pixelgriffin.empires.handler.JoinableHandler.java", "BodyUseAPI": [], "Fixed commit": "0bfd8e7932e46fe19d72715b5fb2bd6371d91a02", "Url": "https://api.github.com/repos/pixelgriffin/Empires", "Date": "2015-08-11T23:16:41Z"},
{"Line": "=>1123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other.equals(\"data-version\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8828/buggy-version/Empires.src.com.pixelgriffin.empires.handler.JoinableHandler.java", "BodyUseAPI": [], "Fixed commit": "0bfd8e7932e46fe19d72715b5fb2bd6371d91a02", "Url": "https://api.github.com/repos/pixelgriffin/Empires", "Date": "2015-08-11T23:16:41Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.rawField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fieldValue instanceof com.orientechnologies.orient.core.type.tree.OMVRBTreeRIDSet) type = com.orientechnologies.orient.core.metadata.schema.OType.LINKSET; else if (fieldValue instanceof java.util.Set<?>) type = com.orientechnologies.orient.core.metadata.schema.OType.EMBEDDEDSET; else type = com.orientechnologies.orient.core.metadata.schema.OType.EMBEDDEDLIST;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4425/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerSchemaAware2CSV.java", "BodyUseAPI": [], "Fixed commit": "ebd9aac06451db8e993c0e05bcfdbee4a6557168", "Url": "https://api.github.com/repos/giastfader/orientdb", "Date": "2013-03-27T01:45:51Z"},
{"Line": "=>879", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (outputStream != null) { org.codeaurora.bluetooth.ftp.BluetoothFtpObexServer.closeStream(outputStream, op); outputStream = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7720/buggy-version/src.org.codeaurora.bluetooth.ftp.BluetoothFtpObexServer.java", "BodyUseAPI": ["org.codeaurora.bluetooth.ftp.BluetoothFtpObexServer.closeStream(java.io.OutputStream,javax.obex.Operation)"], "Fixed commit": "d465bc877e66774c93da626db4879dc93c514318", "Url": "https://api.github.com/repos/CyanogenMod/android_packages_apps_BluetoothExt", "Date": "2014-11-20T02:51:42Z"},
{"Line": "=>842", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((calNow.get(java.util.Calendar.DAY_OF_WEEK)) == 7) { next_day_index = 0; }else { for (java.lang.String s : list) { if ((java.lang.Integer.parseInt(s)) > (calNow.get(java.util.Calendar.DAY_OF_WEEK))) { next_day_index = list.indexOf(s); break; } } if (next_day_index == 8) { for (java.lang.String s : list) { if ((java.lang.Integer.parseInt(s)) < (calNow.get(java.util.Calendar.DAY_OF_WEEK))) { next_day_index = list.indexOf(s); break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7847/buggy-version/MySampleApp.app.src.main.java.com.mysampleapp.fragment.ScheduleFormFragment.java", "BodyUseAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Fixed commit": "1a452d3884c11a159b46cd8cac78d8e14d266a05", "Url": "https://api.github.com/repos/P00L/DIMA_2016", "Date": "2016-08-24T15:15:34Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) { file = new java.io.File(translatorDir, (tableName + \".java\")); if (!(file.exists())) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5775/buggy-version/src.main.java.com.taobao.yugong.controller.YuGongController.java", "BodyUseAPI": [], "Fixed commit": "8faafab41706206200bd5f64f947d8189e994d5d", "Url": "https://api.github.com/repos/sdgdsffdsfff/yugong", "Date": "2016-03-25T08:18:47Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ex.getMessage()) == null) { text = \"CANCELLED\"; }else { text = ex.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/534/buggy-version/src.main.java.asl.sensor.gui.SwingWorkerSingleton.java", "BodyUseAPI": ["java.lang.Exception.getMessage()"], "Fixed commit": "68b910adde7b2b4998f163a43963c03f29b26b11", "Url": "https://api.github.com/repos/kschramm-usgs/asl_sensor_suite", "Date": "2017-07-31T16:18:15Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.res.TypedArray.getDimensionPixelSize(R.styleable.SwImageView_siv_corner_radius,((int) (RoundedDrawableParams.DEFAULT_CORNER_RADIUS)))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cornerRadius > 0) { if (cornerType == (kr.swkang.swimageview.utils.CornerType.NONE)) { cornerType = kr.swkang.swimageview.utils.CornerType.ALL; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/776/buggy-version/swimageview.src.main.java.kr.swkang.swimageview.SwImageView.java", "BodyUseAPI": [], "Fixed commit": "9f571821af1be9b139bb0d3bb6f150b6234ca6e1", "Url": "https://api.github.com/repos/ksu3101/SwImageView", "Date": "2016-08-08T01:42:24Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hintTitlePattern) != null) hintTitlePattern.setParameterStore(store);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/819/buggy-version/reporting.api.src.main.java.org.jboss.windup.reporting.config.Hint.java", "BodyUseAPI": [], "Fixed commit": "62618a239fb30388f67d2705959615b85f30cff1", "Url": "https://api.github.com/repos/mbriskar/windup", "Date": "2015-06-08T18:45:24Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hintTitlePattern) != null) result.addAll(hintTitlePattern.getRequiredParameterNames());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/819/buggy-version/reporting.api.src.main.java.org.jboss.windup.reporting.config.Hint.java", "BodyUseAPI": [], "Fixed commit": "62618a239fb30388f67d2705959615b85f30cff1", "Url": "https://api.github.com/repos/mbriskar/windup", "Date": "2015-06-08T18:45:24Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moveAvailable) { for (int r = 0; r < (boardSize); r++) { for (int c = 0; c < (boardSize); c++) { if ((positions[r][c]) == null) { moves.add(new org.thinkbigthings.tictactoe.Board.Cell(r, c)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8749/buggy-version/src.main.java.org.thinkbigthings.tictactoe.Board.java", "BodyUseAPI": [], "Fixed commit": "6f97b9b1de1f09dffc4a8de8494e3170d8f128f8", "Url": "https://api.github.com/repos/thinkbigthings/tic-tac-toe", "Date": "2016-11-17T13:39:43Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_fileName) == null) { return content; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5123/buggy-version/main6.ling.com.globalsight.ling.docproc.merger.plaintext.PlaintextPostMergeProcessor.java", "BodyUseAPI": [], "Fixed commit": "00f0834589013f5f002b8e5c576db45ed4bd2c9e", "Url": "https://api.github.com/repos/tingley/globalsight", "Date": "2016-03-24T08:15:56Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_fileName) == null) { return content; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5123/buggy-version/main6.ling.com.globalsight.ling.docproc.merger.xml.XmlPostMergeProcessor.java", "BodyUseAPI": [], "Fixed commit": "00f0834589013f5f002b8e5c576db45ed4bd2c9e", "Url": "https://api.github.com/repos/tingley/globalsight", "Date": "2016-03-24T08:15:56Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.radargun.stages.ClusterValidationStage.getActiveSlaveCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clusterSize == 1) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8057/buggy-version/src.Radargun.framework.src.main.java.org.radargun.stages.ClusterValidationStage.java", "BodyUseAPI": [], "Fixed commit": "61e884bd1986d0028e0ea8d62383f895c322c6fa", "Url": "https://api.github.com/repos/cloudtm/cloudtm-auto-placer", "Date": "2013-01-30T15:29:41Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((o1 == null) || (o2 == null)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1948/buggy-version/src.main.java.com.oidiotlin.classmanager.fragment.ManagerFragment.java", "BodyUseAPI": [], "Fixed commit": "c56eecf04f7ba1f9b89d804adf99ec532a12256c", "Url": "https://api.github.com/repos/OIdiotLin/ClassManager", "Date": "2017-01-29T13:37:44Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((anActionEvent != null) && ((anActionEvent.getProject()) != null)) { if ((actionUsesGitExe) && (!(com.microsoft.alm.plugin.idea.utils.IdeaHelper.isGitExeConfigured(anActionEvent.getProject())))) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3124/buggy-version/plugin.idea.src.com.microsoft.alm.plugin.idea.actions.InstrumentedAction.java", "BodyUseAPI": ["com.microsoft.alm.plugin.idea.utils.IdeaHelper.isGitExeConfigured(anActionEvent.getProject())", "com.intellij.openapi.actionSystem.AnActionEvent.getProject()"], "Fixed commit": "703e0cbda3304651c506634c9d5e27ad0d24d367", "Url": "https://api.github.com/repos/Microsoft/vso-intellij", "Date": "2015-11-16T15:22:42Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["core.framework.impl.log.LogManager.currentActionLog()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (actionLog != null) actionLog.updateResult(event.level);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8119/buggy-version/core-ng.src.main.java.core.framework.impl.log.LogManager.java", "BodyUseAPI": ["core.framework.impl.log.ActionLog.updateResult(event.level)"], "Fixed commit": "6ed4e1934c386b13ae6c47acfc0b2d1d5829a615", "Url": "https://api.github.com/repos/neowu/core-ng-project", "Date": "2015-10-02T14:09:07Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.sticksoft.adce.cpu.CPU_1_7.read(uk.co.sticksoft.adce.cpu.CPU_1_7.AddressType,char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (aVal != 0) { res = bVal / aVal; EX = ((char) (((bVal << 16) / aVal) & 65535)); }else res = EX = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1797/buggy-version/src.uk.co.sticksoft.adce.cpu.CPU_1_7.java", "BodyUseAPI": [], "Fixed commit": "95b6efac7dee31bb6a9d366a9257aafda952df5a", "Url": "https://api.github.com/repos/sticksoft/ADCPU-16Emu", "Date": "2013-01-19T16:03:18Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.sticksoft.adce.cpu.CPU_1_7.read(uk.co.sticksoft.adce.cpu.CPU_1_7.AddressType,char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (aVal != 0) { res = (uk.co.sticksoft.adce.cpu.CPU_1_7.unsignedCharAsSignedInt(bVal)) / (uk.co.sticksoft.adce.cpu.CPU_1_7.unsignedCharAsSignedInt(aVal)); EX = ((char) ((((uk.co.sticksoft.adce.cpu.CPU_1_7.unsignedCharAsSignedInt(bVal)) << 16) / (uk.co.sticksoft.adce.cpu.CPU_1_7.unsignedCharAsSignedInt(aVal))) & 65535)); }else res = EX = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1797/buggy-version/src.uk.co.sticksoft.adce.cpu.CPU_1_7.java", "BodyUseAPI": ["uk.co.sticksoft.adce.cpu.CPU_1_7.unsignedCharAsSignedInt(char)", "uk.co.sticksoft.adce.cpu.CPU_1_7.unsignedCharAsSignedInt(char)"], "Fixed commit": "95b6efac7dee31bb6a9d366a9257aafda952df5a", "Url": "https://api.github.com/repos/sticksoft/ADCPU-16Emu", "Date": "2013-01-19T16:03:18Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (m != null) { if (m.isEmpty()) { return null; }else { return m; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6464/buggy-version/libkoya.src.main.java.fr.itldev.koya.services.impl.InvitationServiceImpl.java", "BodyUseAPI": ["java.util.Map.isEmpty()"], "Fixed commit": "796c4121c36ef6031afbfa5659a2017009ef02bb", "Url": "https://api.github.com/repos/Itldev/Koya", "Date": "2014-12-15T18:43:13Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.strategies.complete()) throw com.tinkerpop.gremlin.neo4j.process.graph.util.Exceptions.traversalIsLocked();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1707/buggy-version/neo4j-gremlin.src.main.java.com.tinkerpop.gremlin.neo4j.process.graph.util.Neo4jGraphTraversal.java", "BodyUseAPI": [], "Fixed commit": "4c7ef8086677da78fe419bcc1a64b716ef7da193", "Url": "https://api.github.com/repos/tinkerpop/tinkerpop3", "Date": "2014-10-28T14:39:04Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cur.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME))", "android.database.Cursor.getString(pCur.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((mContactName.contains(name)) && (mContactNumber.contains(phoneNo))) { }else { mContactName.add(name); mContactNumber.add(phoneNo); mContAdapter = new com.contactpoc.ContactAdapter(this, mContactName, mContactNumber); mLvContactList.setAdapter(mContAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7958/buggy-version/app.src.main.java.com.contactpoc.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList.add(java.lang.String)", "java.util.ArrayList.add(java.lang.String)"], "Fixed commit": "99f66518d00f64bb7c01ec4a49a32611208c8f0e", "Url": "https://api.github.com/repos/Aalishan565/ContactPoc", "Date": "2016-11-03T07:43:12Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gbif.dwc.terms.DwcTerm.simpleName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key.equals(DwcTerm.datasetID.simpleName())) { if ((value == null) || ((value.trim().length()) == 0)) { if (((doi) != null) && ((doi.length()) > 0)) { value = doi; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1250/buggy-version/src.main.java.edu.harvard.mcz.dwcaextractor.DwCaExtractor.java", "BodyUseAPI": [], "Fixed commit": "098d16e4aa92f6d4d94bda5283145f8447c2ce6a", "Url": "https://api.github.com/repos/chicoreus/dwca_extractor", "Date": "2017-05-12T16:18:47Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rgbString.length()) == 6) { java.lang.String s = \"FF\"; rgbString = s.concat(rgbString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/442/buggy-version/Renderer.src.main.java.sec.web.render.utilities.JavaRendererUtilities.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)"], "Fixed commit": "88b1158f0ee5d4d73c11cd3aa9fb7a666e595aa6", "Url": "https://api.github.com/repos/spyhunter99/mil-sym-android", "Date": "2015-10-21T21:23:47Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["il.org.spartan.spartanizer.tippers.SingleVariableDeclaration.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((p == null) || (!(p instanceof il.org.spartan.spartanizer.tippers.EnhancedForStatement))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5119/buggy-version/src.main.java.il.org.spartan.spartanizer.tippers.SingleVariableDeclarationEnhancedForRenameParameterToCent.java", "BodyUseAPI": [], "Fixed commit": "8f60397c8347754d77741fe141ea2dcc2b228b70", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2016-12-05T00:03:41Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (m != null) m.exclude(d);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5119/buggy-version/src.main.java.il.org.spartan.spartanizer.tippers.SingleVariableDeclarationEnhancedForRenameParameterToCent.java", "BodyUseAPI": ["il.org.spartan.spartanizer.tippers.ExclusionManager.exclude(il.org.spartan.spartanizer.tippers.SingleVariableDeclaration)"], "Fixed commit": "8f60397c8347754d77741fe141ea2dcc2b228b70", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2016-12-05T00:03:41Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["il.org.spartan.spartanizer.tippers.SingleVariableDeclaration.getName()", "il.org.spartan.spartanizer.tippers.EnhancedForStatement.getBody()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((in(n.getIdentifier(), \"$\", \"\u00a2\", \"__\", \"_\")) || (haz.variableDefinition(body))) || (haz.cent(body))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5119/buggy-version/src.main.java.il.org.spartan.spartanizer.tippers.SingleVariableDeclarationEnhancedForRenameParameterToCent.java", "BodyUseAPI": [], "Fixed commit": "8f60397c8347754d77741fe141ea2dcc2b228b70", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2016-12-05T00:03:41Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["il.org.spartan.spartanizer.tippers.Collect.usesOf(n).in(il.org.spartan.spartanizer.tippers.Statement)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (uses.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5119/buggy-version/src.main.java.il.org.spartan.spartanizer.tippers.SingleVariableDeclarationEnhancedForRenameParameterToCent.java", "BodyUseAPI": [], "Fixed commit": "8f60397c8347754d77741fe141ea2dcc2b228b70", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2016-12-05T00:03:41Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["il.org.spartan.spartanizer.tippers.EnhancedForStatement.getBody()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((body == null) || (!(isJohnDoe(d)))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5119/buggy-version/src.main.java.il.org.spartan.spartanizer.tippers.SingleVariableDeclarationEnhancedForRenameParameterToCent.java", "BodyUseAPI": [], "Fixed commit": "8f60397c8347754d77741fe141ea2dcc2b228b70", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2016-12-05T00:03:41Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6182/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "ff779ccc43460ea8ef58df685529486a6a6ba111", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-18T03:49:44Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 11) { mWebView.getSettings().setDisplayZoomControls(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/124/buggy-version/src.org.wordpress.android.ui.notifications.NotificationsWebViewActivity.java", "BodyUseAPI": [], "Fixed commit": "5b261979517e8c37e94a47ce0c92b6d40062f4fb", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2013-12-03T23:16:08Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.engineering.jenkins.report.plugin.ReportPluginProjectAction.BuildFilteringMethod.valueOf(req.getParameter(\"buildsFilter\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(bf.equals(buildFilteringMethod))) || (n != (numLastBuilds))) { buildFilteringMethod = bf; numLastBuilds = n; updateFilteredBuilds(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7049/buggy-version/src.main.java.com.redhat.engineering.jenkins.report.plugin.ReportPluginProjectAction.java", "BodyUseAPI": [], "Fixed commit": "210d865d6869a6e59fbbf6a93ac40c634756892b", "Url": "https://api.github.com/repos/jrusnack/reportPlugin", "Date": "2012-04-11T15:04:12Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mHideArrow)) { animateArrow(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5840/buggy-version/src.main.java.org.angmarch.views.NiceSpinner.java", "BodyUseAPI": [], "Fixed commit": "2d1a1ecd93cd5693805c30f57a82fd6e6c2a74bf", "Url": "https://api.github.com/repos/arcadefire/nice-spinner", "Date": "2015-08-28T09:14:07Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mHideArrow)) { animateArrow(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5840/buggy-version/src.main.java.org.angmarch.views.NiceSpinner.java", "BodyUseAPI": [], "Fixed commit": "2d1a1ecd93cd5693805c30f57a82fd6e6c2a74bf", "Url": "https://api.github.com/repos/arcadefire/nice-spinner", "Date": "2015-08-28T09:14:07Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mHideArrow)) { animateArrow(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5840/buggy-version/src.main.java.org.angmarch.views.NiceSpinner.java", "BodyUseAPI": [], "Fixed commit": "2d1a1ecd93cd5693805c30f57a82fd6e6c2a74bf", "Url": "https://api.github.com/repos/arcadefire/nice-spinner", "Date": "2015-08-28T09:14:07Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cb != null) { cb.done(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5622/buggy-version/swift.web.src.main.java.edu.mayo.mprc.swift.ui.client.widgets.ParamSetSelectionController.java", "BodyUseAPI": ["edu.mayo.mprc.swift.ui.client.widgets.Callback.done()"], "Fixed commit": "c6cd6496de26f55af5ba3e29b3dc89f93d64410c", "Url": "https://api.github.com/repos/romanzenka/swift", "Date": "2013-02-18T21:36:36Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mTwoPane) { mTracks = playerIntent.tracks; position = playerIntent.position; dengn.spotifystreamer.fragments.PlayerFragment playerFragment = dengn.spotifystreamer.fragments.PlayerFragment.newInstance(mTracks, position); playerFragment.show(getSupportFragmentManager().beginTransaction(), \"Player\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7941/buggy-version/app.src.main.java.dengn.spotifystreamer.activities.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "db418134d71f0fe37345d2119e0ede10f701fff6", "Url": "https://api.github.com/repos/dengn/Spotify_Streamer", "Date": "2015-06-25T12:53:37Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nik7.upgcraft.tank.UpgCActiveTank.getFluid()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (newFluid != null) newFluid.writeToNBT(container.getTagCompound()); else container.stackTagCompound = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4703/buggy-version/src.main.java.com.nik7.upgcraft.item.ItemBlockIronTank.java", "BodyUseAPI": ["net.minecraftforge.fluids.FluidStack.writeToNBT(container.getTagCompound())"], "Fixed commit": "8fe17d5384347b3cf1a702a69060e92699780eba", "Url": "https://api.github.com/repos/nik7007/UpgradeCraft", "Date": "2015-09-16T21:30:27Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.openrdf.model.URI>.get(int)", "slib.sglib.model.graph.elements.E.getTarget()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (target.equals(v)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8910/buggy-version/sglib.sglib-algo.src.main.java.slib.sglib.algo.graph.extraction.rvf.RVF_DAG.java", "BodyUseAPI": [], "Fixed commit": "dde5995498437cf7ea564db477c01c2f10150015", "Url": "https://api.github.com/repos/sharispe/slib", "Date": "2014-05-10T10:43:58Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.http.converter.HttpMessageNotReadableException.getCause()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((cause != null) && ((cause.getClass()) == (com.fasterxml.jackson.databind.JsonMappingException.class))) { errorHandler = new org.sharedhealth.mci.web.handler.ErrorHandler(org.sharedhealth.mci.web.exception.BAD_REQUEST.value(), org.sharedhealth.mci.web.handler.ErrorHandler.INVALID_REQUEST_ERROR_CODE, org.sharedhealth.mci.web.exception.GlobalExceptionHandler.MESSAGE_INVALID_REQUEST); code = org.sharedhealth.mci.web.exception.GlobalExceptionHandler.ERROR_CODE_JSON_PARSE; msg = org.sharedhealth.mci.web.exception.GlobalExceptionHandler.MESSAGE_INVALID_PAYLOAD; }else if (cause != null) { errorHandler = new org.sharedhealth.mci.web.handler.ErrorHandler(org.sharedhealth.mci.web.exception.BAD_REQUEST.value(), org.sharedhealth.mci.web.handler.ErrorHandler.INVALID_REQUEST_ERROR_CODE, org.sharedhealth.mci.web.exception.GlobalExceptionHandler.MESSAGE_INVALID_REQUEST); code = org.sharedhealth.mci.web.exception.GlobalExceptionHandler.ERROR_CODE_JSON_PARSE; msg = org.sharedhealth.mci.web.exception.GlobalExceptionHandler.MESSAGE_INVALID_JSON; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/785/buggy-version/mci-api.src.main.java.org.sharedhealth.mci.web.exception.GlobalExceptionHandler.java", "BodyUseAPI": [], "Fixed commit": "bbeccd6fad799ca0e57193d814f1deccc6323e8e", "Url": "https://api.github.com/repos/SharedHealth/MCI-Service", "Date": "2015-04-05T02:22:47Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentList.isEmpty())) { currentList.remove(((currentList.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8038/buggy-version/src.robertsharp.voynich.trie.CountingTrie.java", "BodyUseAPI": ["java.util.concurrent.CopyOnWriteArrayList<T>.size()", "java.util.concurrent.CopyOnWriteArrayList<T>.remove(int)"], "Fixed commit": "94f144165210d45348367d8f20e212747c80fcb8", "Url": "https://api.github.com/repos/ro-sharp/voynich", "Date": "2015-11-21T16:36:55Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemPosition == 2) { controller.openMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2517/buggy-version/RefactoredProject.RefactoredProject.src.cmput301w14t13.project.views.TopicView.java", "BodyUseAPI": [], "Fixed commit": "431aba453b39071e33f922c66aed5052bfb2bcc1", "Url": "https://api.github.com/repos/CMPUT301W14T13/Team13GPSCommentLogger", "Date": "2014-04-09T21:36:22Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5504/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "92826c1937b3f097ecd9ef08e7c710e985a89d71", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((patents[j].getPublicationNumber().length()) <= 1) { j++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4380/buggy-version/src.citationsearch.utility.ExcelFileWriter.java", "BodyUseAPI": [], "Fixed commit": "b4ea707dc29120c876db4e1c7285ed82a12f947a", "Url": "https://api.github.com/repos/zxg618/CitationSearch", "Date": "2017-06-18T08:02:56Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (CloudifyConstants.ERR_MESSAGE_CODE_MISSING_RESOURCE.equalsIgnoreCase(e.getMessageCode())) { throw new org.cloudifysource.shell.exceptions.CLIStatusException(org.cloudifysource.dsl.internal.CloudifyConstants.ERR_REASON_CODE_FAILED_TO_LOCATE_APP, applicationName); }else { throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1710/buggy-version/CLI.src.main.java.org.cloudifysource.shell.commands.ListServices.java", "BodyUseAPI": [], "Fixed commit": "1d91f204fad8fdb7093d37e1bd0ee09934457f7a", "Url": "https://api.github.com/repos/AsherBond/cloudify", "Date": "2013-09-18T10:51:31Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.client.protocol.HttpClientContext.create()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((clientContext.getCredentialsProvider()) == null) { clientContext.setCredentialsProvider(new org.expath.httpclient.impl.BasicCredentialsProvider()); }else { clientContext.getCredentialsProvider().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3495/buggy-version/http-client-java.src.main.java.org.expath.httpclient.impl.ApacheHttpConnection.java", "BodyUseAPI": ["org.apache.http.client.protocol.HttpClientContext.setCredentialsProvider(org.expath.httpclient.impl.BasicCredentialsProvider)", "org.apache.http.client.protocol.HttpClientContext.getCredentialsProvider()", "clientContext.getCredentialsProvider().clear()"], "Fixed commit": "de19d7340e9b4945bbd2a7eda38c65907ec48cc1", "Url": "https://api.github.com/repos/adamretter/expath-http-client-java", "Date": "2017-11-16T21:14:05Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sum == 0) { weight.put(PropertyConstant.AUTHOR, 30.0); weight.put(PropertyConstant.TITLE, 50.0); weight.put(PropertyConstant.JOURNAL, 20.0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7739/buggy-version/recommendation.src.main.java.edu.nju.paperCiteAnalysis.recommendation.weight.SearchWeight.java", "BodyUseAPI": [], "Fixed commit": "e89a752229e340414dd30bdbe2cfd9cf639788c0", "Url": "https://api.github.com/repos/HazelChen/paper-cite-analysis", "Date": "2016-03-15T08:18:15Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((indexOfComponent(selected)) == 0) { setSelectedIndex(1); }else if ((indexOfComponent(selected)) == 1) { setSelectedIndex(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/287/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.MainView.java", "BodyUseAPI": [], "Fixed commit": "cc25923704fe2e6b5a1f1e4ad7cb600f97929181", "Url": "https://api.github.com/repos/alexbragdon/wpi-suite", "Date": "2014-04-15T19:16:08Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (type == (ui.BackgroundChoice.TYPE_CHOOSE)) color = java.awt.Color.WHITE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7475/buggy-version/BaNG.src.ui.BackgroundChoice.java", "BodyUseAPI": [], "Fixed commit": "5592e427adb116d0666d9f60369516b1674a9446", "Url": "https://api.github.com/repos/bobmath/BattleNationsAnimation", "Date": "2014-04-28T22:23:47Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (line == null) { throw new java.io.EOFException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5614/buggy-version/hadoop-common-project.hadoop-common.src.main.java.org.apache.hadoop.tracing.SpanReceiverHost.java", "BodyUseAPI": [], "Fixed commit": "7ab754545dca16518e8fe9353ef69b77f365426b", "Url": "https://api.github.com/repos/apache/hadoop", "Date": "2014-10-23T20:25:39Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<eu.verdelhan.bitraac.data.Period>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lastPeriods > nbPeriods) { throw new java.lang.IllegalArgumentException(\"Not enough periods\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/938/buggy-version/src.main.java.eu.verdelhan.bitraac.Indicators.java", "BodyUseAPI": [], "Fixed commit": "b65939a36a5df79e00b18822b6c08b6176b275e0", "Url": "https://api.github.com/repos/mdeverdelhan/Bitraac", "Date": "2013-11-27T13:17:57Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (bookJsonString == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5518/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.services.BookService.java", "BodyUseAPI": [], "Fixed commit": "b1d652b3c47ca6f1fa56be958d018362513e0150", "Url": "https://api.github.com/repos/willgates/AND-Super-Duo", "Date": "2015-11-14T17:14:57Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((Build.VERSION.SDK_INT) >= 23) && ((android.support.v4.content.ContextCompat.checkSelfPermission(context, android.Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) && ((android.support.v4.content.ContextCompat.checkSelfPermission(context, android.Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4759/buggy-version/src.main.java.com.github.randoapp.util.LocationHelper.java", "BodyUseAPI": [], "Fixed commit": "3b70a9bc41e003be81e0bef7d0af6a45f2117920", "Url": "https://api.github.com/repos/RandoApp/Rando-android", "Date": "2016-07-04T09:59:40Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((Build.VERSION.SDK_INT) >= 23) && ((android.support.v4.content.ContextCompat.checkSelfPermission(context, android.Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) && ((android.support.v4.content.ContextCompat.checkSelfPermission(context, android.Manifest.permission.ACCESS_COARSE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/4759/buggy-version/src.main.java.com.github.randoapp.util.LocationHelper.java", "BodyUseAPI": [], "Fixed commit": "3b70a9bc41e003be81e0bef7d0af6a45f2117920", "Url": "https://api.github.com/repos/RandoApp/Rando-android", "Date": "2016-07-04T09:59:40Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { android.os.Parcelable[] parcelableArray = savedInstanceState.getParcelableArray(it.uniba.socialcde4android.fragments.TimeLine_AbstractFragment.WPOST_ARRAY); if (parcelableArray != null) { mListWpostItems = java.util.Arrays.copyOf(parcelableArray, parcelableArray.length, it.uniba.socialcde4android.shared.library.WPost[].class); noMoreMessages = savedInstanceState.getBoolean(it.uniba.socialcde4android.fragments.TimeLine_AbstractFragment.NO_MORE_MESSAGES); } password = savedInstanceState.getString(Preferences.PASSWORD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5483/buggy-version/Socialcde4android.src.it.uniba.socialcde4android.fragments.TimeLine_AbstractFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(Preferences.PASSWORD)", "android.os.Bundle.getParcelableArray(java.lang.String)", "android.os.Bundle.getBoolean(java.lang.String)"], "Fixed commit": "5c16cb3086abca90d53043cca6389f6d2f9e1a9e", "Url": "https://api.github.com/repos/francescoditrani/socialcde4android", "Date": "2014-04-17T15:00:07Z"},
{"Line": "=>762", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cmd.getName().equalsIgnoreCase(\"uvtptodummy\")) { if (!(useDebugDummy)) { p.sendMessage(((org.bukkit.ChatColor.RED) + \"Debug dummy is not used!\")); return true; } debugDummy.teleportTo(p.getLocation()); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2822/buggy-version/src.com.prosicraft.ultravision.ultravision.java", "BodyUseAPI": [], "Fixed commit": "fbdde5a58bccb46f2201c3e16636eeca33f764f8", "Url": "https://api.github.com/repos/prosicraft/UltraVision", "Date": "2014-06-24T20:18:15Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getPlayer().getAddress()) == null) com.prosicraft.ultravision.util.MLog.d(\"e.getPlayer().getAddress() returned null!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2822/buggy-version/src.com.prosicraft.ultravision.uvPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "fbdde5a58bccb46f2201c3e16636eeca33f764f8", "Url": "https://api.github.com/repos/prosicraft/UltraVision", "Date": "2014-06-24T20:18:15Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getPlayer()) == null) com.prosicraft.ultravision.util.MLog.d(\"e.getPlayer() returned null in uvPlayerListener::onPlayerJoin!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2822/buggy-version/src.com.prosicraft.ultravision.uvPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "fbdde5a58bccb46f2201c3e16636eeca33f764f8", "Url": "https://api.github.com/repos/prosicraft/UltraVision", "Date": "2014-06-24T20:18:15Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 0) { final com.github.r351574nc3.amex.assignment3.QuadraticFunction function = com.github.r351574nc3.amex.assignment3.QuadraticFunctionFactory.getInstance().newFunction(args[0]); final java.lang.Double[] solution = function.solve(); java.lang.System.out.println(java.lang.String.format(\"Solution: (%s, %s)\", solution[0], solution[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2924/buggy-version/assignment3.src.main.java.com.github.r351574nc3.amex.assignment3.App.java", "BodyUseAPI": ["com.github.r351574nc3.amex.assignment3.QuadraticFunctionFactory.getInstance().newFunction(java.lang.String)"], "Fixed commit": "a6edd9ae4d19ea677a466f6f0c9949216a8a08ea", "Url": "https://api.github.com/repos/r351574nc3/amex-assignments", "Date": "2015-04-08T02:06:37Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openlca.app.util.Viewers.getAllSelected(org.eclipse.jface.viewers.TableViewer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selection.contains(process.getQuantitativeReference())) { java.lang.Error.showBox(\"Cannot delete reference flow\", \"You cannot delete the reference flow of a process\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3410/buggy-version/olca-app.src.org.openlca.app.processes.ExchangeTable.java", "BodyUseAPI": [], "Fixed commit": "9d23ca19b6e5d2dd202a6247e3e3e0dd5e51c099", "Url": "https://api.github.com/repos/GreenDelta/olca-app", "Date": "2013-10-10T11:14:07Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (right >= (vs.length)) return; else { int vr = vs[right]; root.right = (vr == (-1)) ? null : new myUtils.datastructure.TreeNode(vr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8989/buggy-version/src.myUtils.TreeUtils.java", "BodyUseAPI": [], "Fixed commit": "97758864cfa218771600a72de80debd8e530d27b", "Url": "https://api.github.com/repos/qiaoshun8888/AlgorithmPractices", "Date": "2014-01-30T19:19:17Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (determinedLanguage)) { return course.getPrimaryLanguage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/7072/buggy-version/qg-import.src.main.java.de.saschafeldmann.adesso.master.thesis.elearningimport.model.LearningContent.java", "BodyUseAPI": [], "Fixed commit": "c2cf1d2ccb34a09eb989d818f633a4ef67ca2857", "Url": "https://api.github.com/repos/sasfeld-thesis/question-generator", "Date": "2016-08-24T17:57:04Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.atlassian.sal.api.pluginsettings.PluginSettings.get(((getKey()) + \".all\"))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (allSessions != null) { allSessions.remove(session.getIssue().getKey()); pluginSettings.put(((getKey()) + \".all\"), allSessions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5929/buggy-version/src.main.java.com.redhat.engineering.plugins.services.SessionService.java", "BodyUseAPI": ["com.atlassian.sal.api.pluginsettings.PluginSettings.put(((getKey()) + \".all\"),java.util.List<java.lang.String>)", "java.util.List<java.lang.String>.remove(session.getIssue().getKey())"], "Fixed commit": "4d8eb5a6fe69d06c28f9dcb53689424c5e4e4a9a", "Url": "https://api.github.com/repos/VaclavDedik/planning-poker-plugin", "Date": "2015-07-15T07:30:52Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((adapter) != null) && ((currentNode) == null)) { adapter.setNodes(listNodes, currentNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6352/buggy-version/app.src.main.java.org.esn.mobilit.fragments.Guide.GuideFragment.java", "BodyUseAPI": [], "Fixed commit": "aca66c72004a9900fa854731d5c77e685dc23c3f", "Url": "https://api.github.com/repos/donatienthorez/ESN_Mobil-IT", "Date": "2016-08-01T09:24:34Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type instanceof org.eclipse.vjet.dsf.jst.declaration.JstWildcardType) { org.eclipse.vjet.dsf.jstojava.controller.JstExpressionTypeLinkerHelper.look4ActualBinding(resolver, ((org.eclipse.vjet.dsf.jst.declaration.JstWildcardType) (type)).getType(), groupInfo); return null; }else if (type instanceof org.eclipse.vjet.dsf.jst.declaration.JstFuncType) { final org.eclipse.vjet.dsf.jst.IJstMethod func = ((org.eclipse.vjet.dsf.jst.declaration.JstFuncType) (type)).getFunction(); org.eclipse.vjet.dsf.jstojava.controller.JstExpressionTypeLinkerHelper.bindAttributedType(resolver, func, groupInfo); return null; }else if (type instanceof org.eclipse.vjet.dsf.jst.declaration.JstAttributedType) { return org.eclipse.vjet.dsf.jstojava.controller.JstExpressionTypeLinkerHelper.doAttributedTypeBindings(resolver, ((org.eclipse.vjet.dsf.jst.declaration.JstAttributedType) (type)), groupInfo); }else if (type instanceof org.eclipse.vjet.dsf.jst.declaration.JstInferredType) { org.eclipse.vjet.dsf.jst.IJstType inferredType = ((org.eclipse.vjet.dsf.jst.declaration.JstInferredType) (type)).getType(); if (!(inferredType.getName().equals(org.eclipse.vjet.dsf.jstojava.controller.JstExpressionTypeLinkerHelper.FUNCTION))) { return org.eclipse.vjet.dsf.jstojava.controller.JstExpressionTypeLinkerHelper.look4ActualBinding(resolver, inferredType, groupInfo); } return null; }else if (type.isFType()) { return type; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/8953/buggy-version/core.org.eclipse.vjet.core.jstojava.src.org.eclipse.vjet.dsf.jstojava.controller.JstExpressionTypeLinkerHelper.java", "BodyUseAPI": ["org.eclipse.vjet.dsf.jst.IJstType.isFType()"], "Fixed commit": "a8450d884491694b31771fe91fd23c2a3d267eda", "Url": "https://api.github.com/repos/nickboldt/org.eclipse.vjet.all", "Date": "2014-01-29T08:17:15Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((last_roll.getVisibility()) == (android.view.View.VISIBLE)) && ((state.rollHistory().size()) > 0)) populateStatsRow(last_roll, state.rollHistory().get(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/1848/buggy-version/src.com.group5.diceroller.StatisticsFragment.java", "BodyUseAPI": ["com.group5.diceroller.StatisticsFragment.populateStatsRow(android.view.View,state.rollHistory().get(0))", "state.rollHistory().get(int)", "com.group5.diceroller.DiceRollerState.rollHistory()"], "Fixed commit": "59f3f3121fa7fff2840a94cb01de6170df3a36c6", "Url": "https://api.github.com/repos/cookyt/DiceRoller", "Date": "2013-04-08T07:10:44Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((now.get(java.util.Calendar.MONTH)) < 10) { month = holder.substring(1, holder.indexOf(\"/\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3987/buggy-version/app.src.main.java.com.money.mmproject.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "74e024d5d3d2a91117f0a10dfc9507c2a52512eb", "Url": "https://api.github.com/repos/Nesskittycat/MMProject", "Date": "2016-01-26T01:09:16Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.description) == null) { comp = ((o.description) == null) ? 0 : 1; }else { comp = this.description().compareTo(o.description()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2035/buggy-version/src.main.java.com.madphysicist.monada.Dimension.java", "BodyUseAPI": [], "Fixed commit": "2cf7f96787715a61ea4975cf4c7cae58ba116301", "Url": "https://api.github.com/repos/madphysicist/Monada", "Date": "2014-09-02T12:00:10Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (invokeInsn.getMethodId().getName().equals(\"getDescription\")) java.lang.System.console();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/5055/buggy-version/libdexter.src.main.java.uk.ac.cam.db538.dexter.transform.taint.InvokeClassifier.java", "BodyUseAPI": [], "Fixed commit": "9bc44d6dfec7d16330f12c357e4553ebdd14c82c", "Url": "https://api.github.com/repos/davidbrazdil/dexter", "Date": "2013-08-01T11:19:14Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((call) != null) { android.util.Log.d(\"DEBUG\", (((d.getTime()) + \" Cancelled call at task \") + (apiTask.toString()))); call.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2928/buggy-version/Calendula.src.main.java.es.usc.citius.servando.calendula.pharmacies.activities.PharmaciesMapActivity.java", "BodyUseAPI": [], "Fixed commit": "b0354260fb991ec1e0af186f73ac431c31e99266", "Url": "https://api.github.com/repos/isaaccf/calendula", "Date": "2016-10-30T08:46:31Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.parseInt(java.lang.String.valueOf(actv.length()))) == 0) { android.util.Log.i(\"cp\", \"null\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6591/buggy-version/app.src.main.java.com.example.gunka.kujapom.KcalFragment.java", "BodyUseAPI": [], "Fixed commit": "49cb33fd8d0950cef97905e36be98937bd27d2f5", "Url": "https://api.github.com/repos/l2el3er/android_project", "Date": "2016-05-18T09:28:32Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Integer.parseInt(java.lang.String.valueOf(EditText01.length()))) == 0) && ((java.lang.Integer.parseInt(java.lang.String.valueOf(EditText02.length()))) == 0)) { android.util.Log.i(\"cp\", \"null\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6591/buggy-version/app.src.main.java.com.example.gunka.kujapom.BMIFragment.java", "BodyUseAPI": [], "Fixed commit": "49cb33fd8d0950cef97905e36be98937bd27d2f5", "Url": "https://api.github.com/repos/l2el3er/android_project", "Date": "2016-05-18T09:28:32Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.modelmapper.internal.TypeMapImpl<S, D>.mappingFor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (existingMapping == null) { matchSource(sourceTypeInfo, mutator); propertyNameInfo.clearSource(); sourceTypes.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/6271/buggy-version/core.src.main.java.org.modelmapper.internal.ImplicitMappingBuilder.java", "BodyUseAPI": [], "Fixed commit": "5d55c9fd768ae276296b4927bf3f8d3a201d4024", "Url": "https://api.github.com/repos/jhalterman/modelmapper", "Date": "2014-06-06T21:42:04Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((path != null) && (!(path.equals(\"\")))) this.configFileName = path;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/984/buggy-version/src.main.java.com.github.redhatqe.polarize.configurator.PolarizeYAML.java", "BodyUseAPI": [], "Fixed commit": "254fab2d3bfd0b9133281df8278c0ad0dca9df94", "Url": "https://api.github.com/repos/rarebreed/polarize", "Date": "2017-07-17T06:45:56Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getServer().getServicesManager().getRegistration(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rsp == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/466/buggy-version/src.main.java.me.beastman3226.bc.BusinessCore.java", "BodyUseAPI": [], "Fixed commit": "9d31358f62e74dad7a93feebaa2c4d317bc0b384", "Url": "https://api.github.com/repos/beastman3226/BusinessCore", "Date": "2014-04-19T16:05:50Z"},
{"Line": "=>1456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAniAdd) listName = ((java.lang.String) (util.window.AddAnimeDialog.listToAddAniComboBox.getSelectedItem())); else listName = ((java.lang.String) (util.window.AddAnimeDialog.listToAdd.getSelectedItem()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/3287/buggy-version/src.util.window.AddAnimeDialog.java", "BodyUseAPI": [], "Fixed commit": "a73445b5b96eecc43452ea2e9ed873c3a82e10f1", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-29T19:31:11Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getWhitespaceFollowedNode(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((whitespaceFollowedAst.getNextSibling()) == null) || ((whitespaceFollowedAst.getNextSibling().getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATIONS))) { final int whitespaceColumnNo = com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(whitespaceFollowedAst); final int whitespaceLineNo = whitespaceFollowedAst.getLineNo(); if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) { log(whitespaceLineNo, whitespaceColumnNo, com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.MSG_KEY, whitespaceFollowedAst.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/2659/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.log(int,int,java.lang.String,whitespaceFollowedAst.getText())", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(com.puppycrawl.tools.checkstyle.api.DetailAST)", "com.puppycrawl.tools.checkstyle.api.DetailAST.getText()"], "Fixed commit": "310748a1939193c8002efd49923358c68ba7a87b", "Url": "https://api.github.com/repos/sergileon/checkstyle", "Date": "2017-09-05T11:43:02Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.ObjectMapper.readValue(textMessage.getPayload(),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((event.getChannelId()) != null) { slackService.addDmChannel(event.getChannelId()); }else if ((event.getChannel()) != null) { slackService.addDmChannel(event.getChannel().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V74/91/buggy-version/jbot.src.main.java.me.ramswaroop.jbot.core.slack.Bot.java", "BodyUseAPI": ["me.ramswaroop.jbot.core.slack.models.Event.getChannelId()", "me.ramswaroop.jbot.core.slack.models.Event.getChannel()", "me.ramswaroop.jbot.core.slack.models.Event.getChannel()", "me.ramswaroop.jbot.core.slack.SlackService.addDmChannel(event.getChannel().getId())", "event.getChannel().getId()", "me.ramswaroop.jbot.core.slack.SlackService.addDmChannel(event.getChannelId())"], "Fixed commit": "cd6fa6f163454018e7e3079757ab7ef570d5f551", "Url": "https://api.github.com/repos/cesdperez/jbot", "Date": "2017-07-28T19:54:53Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.talend.metadata.managment.utils.MetadataConnectionUtils.createConnection(org.talend.core.model.metadata.IMetadataConnection,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(createConnection.isOk())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4660/buggy-version/main.plugins.org.talend.dataprofiler.core.src.org.talend.dataprofiler.core.helper.ResultSetHelper.java", "BodyUseAPI": [], "Fixed commit": "5e48a5c7220e3b9f0ac3d7c450a3982b114da7ba", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2015-07-10T06:01:36Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.freak.dashboard.DashboardService.DEBUG) android.util.Log.d(com.freak.dashboard.DashboardService.TAG, \"Successful bind\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/896/buggy-version/app.src.main.java.com.freak.dashboard.DashboardService.java", "BodyUseAPI": [], "Fixed commit": "20ef0829f8772a548bfec0405bb24909249509dc", "Url": "https://api.github.com/repos/Pilou44/Dashboard", "Date": "2015-08-12T08:26:34Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["userRemoteConfigs.get(0).getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (repoUrl != null) { org.jenkinsci.plugins.GitHubRepositoryName githubRepositoryName = org.jenkinsci.plugins.GitHubRepositoryName.create(repoUrl); repositoryName = ((githubRepositoryName.userName) + \"/\") + (githubRepositoryName.repositoryName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8889/buggy-version/src.main.java.org.jenkinsci.plugins.GithubRequireOrganizationMembershipACL.java", "BodyUseAPI": ["org.jenkinsci.plugins.GitHubRepositoryName.create(java.lang.String)"], "Fixed commit": "456e35e6847a08ff4a95bf7bab74755fba8f2523", "Url": "https://api.github.com/repos/sorenh/github-oauth-plugin", "Date": "2014-03-26T13:13:20Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (colored == 0) { java.lang.System.out.println(\"No colored armor in inventory! Cancelled update task\"); org.bukkit.Bukkit.getScheduler().cancelTask(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/419/buggy-version/src.net.milkycraft.Worker.java", "BodyUseAPI": [], "Fixed commit": "74a5264f2970ab229b23df39f36a64b70042c9fa", "Url": "https://api.github.com/repos/nsporillo/RainbowGear", "Date": "2014-05-11T20:34:35Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getDataFolder().exists())) getDataFolder().mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4185/buggy-version/src.main.java.org.enderspawn.EnderSpawn.java", "BodyUseAPI": [], "Fixed commit": "179a2deb1d739dc0402563a989a02c8bf7ca286a", "Url": "https://api.github.com/repos/Glitchfinder/EnderSpawn", "Date": "2012-09-27T22:46:56Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (plantId != 0) { java.util.List<com.livos.companionplants.model.PlantDetail> plantAssociations = plantsModel.getAssociatedPlants(plantId, localeCode); view.updateData(plantAssociations, plantSelectedEvent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3226/buggy-version/app.src.main.java.com.livos.companionplants.plants.PlantsPresenter.java", "BodyUseAPI": ["PlantsContract.Model.getAssociatedPlants(java.lang.Long,java.lang.String)"], "Fixed commit": "29fd62aaab1ad0473d8f8cd1a359006e6f5ff679", "Url": "https://api.github.com/repos/livos/comp", "Date": "2017-11-15T15:57:46Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["codeine.servlets.api_servlets.angular.OptionalParameter.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (includeOutput) { commandInfo.output(codeine.utils.TextFileUtils.getContents(outputfile)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/852/buggy-version/src.web_server.codeine.servlets.api_servlets.angular.CommandStatusApiServlet.java", "BodyUseAPI": [], "Fixed commit": "c9cf58169f789301821c28b1f6ec234693498c49", "Url": "https://api.github.com/repos/codeine-cd/codeine", "Date": "2016-03-29T06:04:58Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Config.FILE_CONFIG.exists()) { title = org.dyndns.fzoli.rccar.bridge.Main.VAL_MESSAGE; out = java.lang.System.out; msg.append(org.dyndns.fzoli.rccar.bridge.Main.getString(\"msg_conf_created1\")).append(org.dyndns.fzoli.rccar.bridge.Main.LS).append(org.dyndns.fzoli.rccar.bridge.Main.getString(\"msg_conf_created2\")).append(org.dyndns.fzoli.rccar.bridge.Main.LS).append(org.dyndns.fzoli.rccar.bridge.Main.LS).append(org.dyndns.fzoli.rccar.bridge.Main.getString(\"msg_conf_created3\")).append(':').append(org.dyndns.fzoli.rccar.bridge.Main.LS).append(Config.FILE_CONFIG); }else { title = org.dyndns.fzoli.rccar.bridge.Main.VAL_ERROR; out = java.lang.System.err; msg.append(org.dyndns.fzoli.rccar.bridge.Main.getString(\"config_save_error1\")).append(org.dyndns.fzoli.rccar.bridge.Main.LS).append(org.dyndns.fzoli.rccar.bridge.Main.getString(\"config_save_error2\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2497/buggy-version/src.org.dyndns.fzoli.rccar.bridge.Main.java", "BodyUseAPI": [], "Fixed commit": "e39bdd43f74efc597937e5f5e14bb73406d99e56", "Url": "https://api.github.com/repos/fzoli/RemoteControlCar", "Date": "2013-02-23T14:03:58Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.jabref.BibtexEntry.getField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (newValue == null) { compound.addEdit(new net.sf.jabref.undo.UndoableFieldChange(entry, fieldName, oldValue, null)); entry.clearField(fieldName); hasChangesBetweenCurrentAndNew = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1781/buggy-version/src.net.sf.jabref.EntryEditor.java", "BodyUseAPI": [], "Fixed commit": "d7a17aba5e4b25d1d22348c5a0051abac95ee57f", "Url": "https://api.github.com/repos/magsilva/jabref", "Date": "2015-11-02T17:51:03Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (results.isEmpty()) { mysql_string = \"INSERT into friends(user_id, friend_id) VALUES(?,?)\"; arguments = new java.lang.Object[]{ userID, friendID }; if (com.flare.database.MySQL.execute(mysql_string, arguments)) { status = \"true\"; java.lang.System.out.println((\"Added friend \" + friendID)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8782/buggy-version/src.com.flare.services.FlareService.java", "BodyUseAPI": [], "Fixed commit": "5007fcf84233a94f0266911b53fb402ca4b250ca", "Url": "https://api.github.com/repos/OscarFalcon/Flare", "Date": "2014-12-05T17:34:16Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (file.isDirectory()) absPath += \"/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/726/buggy-version/src.java.com.zenesis.qx.remote.FileApi.java", "BodyUseAPI": [], "Fixed commit": "275ac34ffa86eb2f8cab4901b0d3535acd72a5c3", "Url": "https://api.github.com/repos/johnspackman/qx-serverobjects", "Date": "2014-08-20T12:31:07Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((absolutePath.length()) == 0) { absolutePath = \"/\"; this.name = \"\"; }else { this.name = file.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/726/buggy-version/src.java.com.zenesis.qx.remote.FileApi.java", "BodyUseAPI": [], "Fixed commit": "275ac34ffa86eb2f8cab4901b0d3535acd72a5c3", "Url": "https://api.github.com/repos/johnspackman/qx-serverobjects", "Date": "2014-08-20T12:31:07Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4107/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "7e12a28d59bb75777a223abd355020e18f1bfb0b", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-06T13:02:41Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.server.distributed.task.OAbstractRecordReplicatedTask.getRecord()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (record != null) for (java.lang.String f : ((com.orientechnologies.orient.core.record.impl.ODocument) (record)).fieldNames()) { final java.lang.Object fValue = ((com.orientechnologies.orient.core.record.impl.ODocument) (record)).field(f); if (fValue instanceof com.orientechnologies.orient.core.db.record.ORecordLazyMultiValue) ((com.orientechnologies.orient.core.db.record.ORecordLazyMultiValue) (fValue)).convertLinks2Records(); else if (fValue instanceof com.orientechnologies.orient.core.id.ORecordId) ((com.orientechnologies.orient.core.record.impl.ODocument) (record)).field(f, ((com.orientechnologies.orient.core.id.ORecordId) (fValue)).getRecord()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8117/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.task.OTxTask.java", "BodyUseAPI": [], "Fixed commit": "a9a4aeb8600117ed77c3862c7c06808f90eab68b", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-03-27T22:19:05Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Boolean.parseBoolean(child.child(Consts.PARKING_SPOTS_ACTIVE).getValue().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isActive) { edu.usc.sunset.team7.www.parkhere.objectmodule.ParkingSpot currentParkingSpot = parseParkingSpot(child); currentParkingSpot.setProviderID(userID); userListings.add(currentParkingSpot); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/9044/buggy-version/app.src.main.java.edu.usc.sunset.team7.www.parkhere.Activities.MyParkingSpacesActivity.java", "BodyUseAPI": [], "Fixed commit": "b5523592c1db3b92350f9aac6612e5de4989a598", "Url": "https://api.github.com/repos/kunalkataria/ParkHere", "Date": "2016-11-27T21:13:29Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (yardline1 > 99) { yardline1 = 20; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3650/buggy-version/DONKEYTEETH.src.football.Scoreboard.java", "BodyUseAPI": [], "Fixed commit": "c87cd6e7174e161939a7e67a0008d3bfefd70046", "Url": "https://api.github.com/repos/tliggett/SuperSimFootball", "Date": "2015-11-28T04:44:36Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (yardline1 > 99) { yardline1 = 20; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3650/buggy-version/DONKEYTEETH.src.football.Scoreboard.java", "BodyUseAPI": [], "Fixed commit": "c87cd6e7174e161939a7e67a0008d3bfefd70046", "Url": "https://api.github.com/repos/tliggett/SuperSimFootball", "Date": "2015-11-28T04:44:36Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.hm.lip.pizza.driver.util.location.LastLocationFinder.getInstance(this).getLastLocation()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (lastLocation != null) { android.content.Intent intent = new android.content.Intent(this, edu.hm.lip.pizza.driver.service.DriverLocationService.class); intent.putExtra(ExtraConstants.LATITUDE_EXTRA, lastLocation.getLatitude()); intent.putExtra(ExtraConstants.LONGITUDE_EXTRA, lastLocation.getLongitude()); startService(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3821/buggy-version/PizzaAppDriver.src.edu.hm.lip.pizza.driver.activity.MainActivity.java", "BodyUseAPI": ["android.location.Location.getLongitude()", "android.location.Location.getLatitude()", "android.content.Intent.putExtra(ExtraConstants.LATITUDE_EXTRA,lastLocation.getLatitude())", "android.content.Intent.putExtra(ExtraConstants.LONGITUDE_EXTRA,lastLocation.getLongitude())"], "Fixed commit": "50e17c9b552d3df8348e2bdc9de8adf69bc16553", "Url": "https://api.github.com/repos/franzmathauser/pizzaapp", "Date": "2012-06-13T10:26:43Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getPotion().getShooter()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (thrower instanceof com.massivecraft.factions.listeners.Player) { com.massivecraft.factions.listeners.Player player = ((com.massivecraft.factions.listeners.Player) (thrower)); com.massivecraft.factions.listeners.FPlayer fPlayer = FPlayers.i.get(player); if (badjuju && (fPlayer.getFaction().isPeaceful())) { event.setCancelled(true); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/9020/buggy-version/src.main.java.com.massivecraft.factions.listeners.FactionsEntityListener.java", "BodyUseAPI": [], "Fixed commit": "eceb10c185150f60634d5959f0a149ca9b596cdd", "Url": "https://api.github.com/repos/drtshock/Factions", "Date": "2014-09-30T22:20:06Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!first) && (message.startsWith(\"&\"))) msg.addExtra(new net.mcthunder.api.TextMessage(\"&\").setStyle(new net.mcthunder.api.MessageStyle().setColor(prev)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3913/buggy-version/src.main.java.net.mcthunder.api.MessageFormat.java", "BodyUseAPI": [], "Fixed commit": "8d2228c9c860b08ab056159ac4ad12ce617b3a82", "Url": "https://api.github.com/repos/Lukario45/MCThunder", "Date": "2014-10-19T16:52:09Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aWaitForForkDisconnect) { java.lang.System.out.println(\"WAITING\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2114/buggy-version/de.gebit.integrity.runner.src.de.gebit.integrity.runner.forking.Fork.java", "BodyUseAPI": [], "Fixed commit": "366971ea983f9d44ef29264c27056ac021520650", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2016-11-22T18:21:32Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (authentication != null) { de.fred4jupiter.fredbet.service.SessionTrackingLogoutHandler.LOG.info(\"user with name {} has logged out\", authentication.getName()); sessionTrackingService.registerLogout(authentication.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7132/buggy-version/src.main.java.de.fred4jupiter.fredbet.service.SessionTrackingLogoutHandler.java", "BodyUseAPI": ["de.fred4jupiter.fredbet.service.SessionTrackingService.registerLogout(authentication.getName())", "org.springframework.security.core.Authentication.getName()", "org.slf4j.Logger.info(java.lang.String,authentication.getName())", "org.springframework.security.core.Authentication.getName()"], "Fixed commit": "771aa1594994e680352e2cbe402b2ec6342e5f4c", "Url": "https://api.github.com/repos/fred4jupiter/fredbet", "Date": "2016-06-14T17:59:00Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rendererState) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/894/buggy-version/src.org.droidupnp.view.RendererFragment.java", "BodyUseAPI": [], "Fixed commit": "9a1b960c91fb809401459cf8a8383cfc2cacad74", "Url": "https://api.github.com/repos/trishika/DroidUPnP", "Date": "2013-03-30T23:05:32Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) != 1) { java.lang.System.out.println(\"Usage: java CompanyHierarchyMain FileName\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5543/buggy-version/src.CompanyHierarchyMain.java", "BodyUseAPI": [], "Fixed commit": "86c0e8d0f27e68ab74bdabbbf45ce70ebd43035f", "Url": "https://api.github.com/repos/collielimabean/CS367_Program4", "Date": "2014-03-31T03:42:44Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (searchedProductsUSA != null) { productList.addAll(java.util.Arrays.asList(searchedProductsUSA)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2357/buggy-version/app.src.main.java.it.softlab.app_oco.MainActivity.java", "BodyUseAPI": ["java.util.Arrays.asList(it.softlab.app_oco.model.Product[])", "java.util.List<it.softlab.app_oco.model.Product>.addAll(java.util.List)"], "Fixed commit": "83e94dd358facf1ceb4b37d21548ac6aea2bdd81", "Url": "https://api.github.com/repos/softlab-project/app-co", "Date": "2017-05-05T12:04:13Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (searchedProductsITA != null) { productList.addAll(java.util.Arrays.asList(searchedProductsITA)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2357/buggy-version/app.src.main.java.it.softlab.app_oco.MainActivity.java", "BodyUseAPI": ["java.util.Arrays.asList(it.softlab.app_oco.model.Product[])", "java.util.List<it.softlab.app_oco.model.Product>.addAll(java.util.List)"], "Fixed commit": "83e94dd358facf1ceb4b37d21548ac6aea2bdd81", "Url": "https://api.github.com/repos/softlab-project/app-co", "Date": "2017-05-05T12:04:13Z"},
{"Line": "=>1029", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1331/buggy-version/src.org.broad.igv.track.FeatureTrack.java", "BodyUseAPI": [], "Fixed commit": "8de8f4d7c3d552fa7e06596c5e55213e49801cb3", "Url": "https://api.github.com/repos/broadinstitute/IGV", "Date": "2013-02-20T15:46:31Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((personagem) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8315/buggy-version/src.main.java.jogoanatomia.telas.TelaPersonagemOrgaos.java", "BodyUseAPI": [], "Fixed commit": "3d251adfa2a765887c66dfbf31064a6198ec8e9f", "Url": "https://api.github.com/repos/priscillaKW/BodyGame", "Date": "2013-11-23T12:42:58Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((drugOrder.getDose()) != null) { dosage = drugOrder.getDose().toString(); }else { dosage = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8437/buggy-version/bahmnicore-omod.src.main.java.org.bahmni.module.bahmnicore.web.v1_0.mapper.DrugOrderToTreatmentRegimenMapper.java", "BodyUseAPI": ["org.openmrs.DrugOrder.getDose()", "drugOrder.getDose().toString()"], "Fixed commit": "ad0c23f3a5c1d799f781ec51b9f5dbb05c61436c", "Url": "https://api.github.com/repos/Bahmni/bahmni-core", "Date": "2016-04-29T12:19:50Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (html != null) { saveIdPersona(html); }else { stateNetworkOn = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8162/buggy-version/app.src.main.java.com.cortocamino.yoh.multasdetransito.MainActivity.java", "BodyUseAPI": ["com.cortocamino.yoh.multasdetransito.MainActivity.DownloadIdPersona.saveIdPersona(java.lang.String)"], "Fixed commit": "209ea5fe122f3da089669305d6b43f3832ddccc5", "Url": "https://api.github.com/repos/YohMer/MultasDeTransito", "Date": "2016-07-13T19:47:40Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Input.s.isPressed()) this.y += ((((com.topr0.src.MegaMole.WIDTH) / 2) - (mole.getY())) - (this.y)) - 400.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7473/buggy-version/src.com.topr0.world.World.java", "BodyUseAPI": [], "Fixed commit": "67a6595e6c934f64b6e3f5f687ea9c83a7631584", "Url": "https://api.github.com/repos/Topr0/MegaMole", "Date": "2015-01-29T11:11:32Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.data.DatFile.getVertexManager()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(vm.isUpdated())) { if (vm.isSyncWithTextEditor()) { final boolean[] doNotWait = new boolean[]{ false }; try { new org.eclipse.jface.dialogs.ProgressMonitorDialog(org.nschmidt.ldparteditor.shells.editor3d.Editor3DWindow.getWindow().getShell()).run(true, true, new org.eclipse.jface.operation.IRunnableWithProgress() { @java.lang.Override public void run(final org.eclipse.core.runtime.IProgressMonitor monitor) throws java.lang.InterruptedException, java.lang.reflect.InvocationTargetException { monitor.beginTask(\"Waiting for update...\", IProgressMonitor.UNKNOWN); while (!(vm.isUpdated())) { if (monitor.isCanceled()) break; try { java.lang.Thread.sleep(100); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } } doNotWait[0] = monitor.isCanceled(); } }); } catch (java.lang.reflect.InvocationTargetException consumed) { return; } catch (java.lang.InterruptedException consumed) { return; } if (doNotWait[0]) { return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7837/buggy-version/src.org.nschmidt.ldparteditor.helpers.compositetext.SubfileCompiler.java", "BodyUseAPI": ["org.eclipse.jface.dialogs.ProgressMonitorDialog.run(boolean,boolean,org.eclipse.jface.operation.IRunnableWithProgress)", "org.nschmidt.ldparteditor.data.VertexManager.isUpdated()", "org.nschmidt.ldparteditor.data.VertexManager.isSyncWithTextEditor()"], "Fixed commit": "1d6a61ada72a8e98e2aff77fc639d19fc87c15fd", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-03-09T15:46:35Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uri == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3746/buggy-version/src.de.azapps.mirakel.helper.FileUtils.java", "BodyUseAPI": [], "Fixed commit": "449f716aea6c463632773857714a007afa77676d", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-10-03T14:38:40Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file_path == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3746/buggy-version/src.de.azapps.mirakel.model.file.FileMirakel.java", "BodyUseAPI": [], "Fixed commit": "449f716aea6c463632773857714a007afa77676d", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-10-03T14:38:40Z"},
{"Line": "=>1459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(value.isInvalid())) diag(S.token, err_expected_semi_for);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/584/buggy-version/src.jlang.cparser.Parser.java", "BodyUseAPI": [], "Fixed commit": "b5da7163b2b4d79c6dc87d1ea6d2cc2fa349bebd", "Url": "https://api.github.com/repos/JianpingZeng/xcc", "Date": "2017-03-28T14:32:06Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentTable.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5229/buggy-version/app.src.main.java.blackstorelongclass.personal_info_collector.DataHandler.listHandler.java", "BodyUseAPI": [], "Fixed commit": "6992394792b22544311db4098aaa1f50b1678cf8", "Url": "https://api.github.com/repos/BlackShopLongClass/Personal_Info_Collector", "Date": "2017-11-28T08:58:28Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files_ != null) { for (java.io.File file : files_) { if ((file.isFile()) && (file.getName().equalsIgnoreCase(filename))) fileList.add(file); else com.javastorm.common.file.FileFinder.listFiles(file, filename, fileList); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1521/buggy-version/mongo-api.src.main.java.com.javastorm.common.file.FileFinder.java", "BodyUseAPI": [], "Fixed commit": "7e32fca08d362d9b40e39dbbb8efb32e2d4615f9", "Url": "https://api.github.com/repos/hemant-kumar/javastorm", "Date": "2013-03-06T17:50:26Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d2 <= 0) { d2 = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4437/buggy-version/YoRPG.java", "BodyUseAPI": [], "Fixed commit": "76a6963eafed7008ceffe586867752be7bd5af5a", "Url": "https://api.github.com/repos/shivasuryan-vummidi/YoRPGv3_The-Scientific-Method", "Date": "2016-11-28T03:13:52Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d1 <= 0) { d1 = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4437/buggy-version/YoRPG.java", "BodyUseAPI": [], "Fixed commit": "76a6963eafed7008ceffe586867752be7bd5af5a", "Url": "https://api.github.com/repos/shivasuryan-vummidi/YoRPGv3_The-Scientific-Method", "Date": "2016-11-28T03:13:52Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.generator.impl.textgen.TextFacility2.serializeOutcome(jetbrains.mps.internal.make.runtime.java.FileDeltaCollector)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (status.isError()) { monitor.reportFeedback(new jetbrains.mps.make.script.IFeedback.ERROR(java.lang.String.valueOf(status.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4065/buggy-version/languages.core.core.source_gen.jetbrains.mps.lang.core.plugin.TextGen_Facet.java", "BodyUseAPI": ["jetbrains.mps.util.IStatus.getMessage()", "jetbrains.mps.make.script.IJobMonitor.reportFeedback(jetbrains.mps.make.script.IFeedback.ERROR)", "java.lang.String.valueOf(status.getMessage())"], "Fixed commit": "166e0b589754c43bb3b7b9a23e6cf3f9a97f49ad", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2015-04-23T11:08:41Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (status.isError()) { monitor.reportFeedback(new jetbrains.mps.make.script.IFeedback.ERROR(java.lang.String.valueOf(status.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4065/buggy-version/languages.core.core.source_gen.jetbrains.mps.lang.core.plugin.TextGen_Facet.java", "BodyUseAPI": ["java.lang.String.valueOf(status.getMessage())", "jetbrains.mps.make.script.IJobMonitor.reportFeedback(jetbrains.mps.make.script.IFeedback.ERROR)", "jetbrains.mps.util.IStatus.getMessage()"], "Fixed commit": "166e0b589754c43bb3b7b9a23e6cf3f9a97f49ad", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2015-04-23T11:08:41Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (change > 0) { result.avgCostMilSeconds = tchange / change; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2829/buggy-version/kiteq-commons.src.main.java.org.kiteq.commons.monitor.Counter.java", "BodyUseAPI": [], "Fixed commit": "4c51bcbf39b2aad8ce723143a13638ccbb6c80a0", "Url": "https://api.github.com/repos/blackbeans/kiteq-client-java", "Date": "2016-06-29T15:48:44Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Thread.interrupted()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4228/buggy-version/src.com.axelby.podax.PodcastPlayer.java", "BodyUseAPI": [], "Fixed commit": "3bb6d2bfc9a13be3cad4fad2cec783960c5c05ae", "Url": "https://api.github.com/repos/thasmin/Podax", "Date": "2014-01-20T13:12:10Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getType().equalsIgnoreCase(\"tpto\")) || (this.getType().equalsIgnoreCase(\"teleportto\"))) { pSender.teleport(pTarget.getLocation()); craftoplugin.core.CraftoMessenger.message(pSender, ((\"\ufffdaDer Spieler \ufffd2\" + (pTarget.getName())) + \"\ufffda hat die Teleport-Anfrage akzeptiert.\")); craftoplugin.core.CraftoMessenger.message(pTarget, \"\ufffdeDie Teleport-Anfrage wurde angenommen.\"); }else if ((this.getType().equalsIgnoreCase(\"tphere\")) || (this.getType().equalsIgnoreCase(\"teleporthere\"))) { pTarget.teleport(pSender.getLocation()); craftoplugin.core.CraftoMessenger.message(pSender, ((\"\ufffdaDer Spieler \ufffd2\" + (pTarget.getName())) + \"\ufffda hat die Teleport-Anfrage akzeptiert.\")); craftoplugin.core.CraftoMessenger.message(pTarget, \"\ufffdeDie Teleport-Anfrage wurde angenommen.\"); }else { craftoplugin.core.CraftoMessenger.message(pSender, \"\ufffdcFehler: Beim Antworten der Anfrage ist ein Fehler aufgetreten!\"); craftoplugin.core.CraftoMessenger.message(pTarget, \"\ufffdcFehler: Beim Antworten der Anfrage ist ein Fehler aufgetreten!\"); craftoplugin.core.CraftoMessenger.warn(\"Warnung: Eine TeleportAnfrage mit einem unbekannten Typ wurde erstellt!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2971/buggy-version/src.craftoplugin.modules.teleportation.TeleportAnfrage.java", "BodyUseAPI": [], "Fixed commit": "377bd872c91ccf7688937f27c82aef0fa1c0169c", "Url": "https://api.github.com/repos/Craftolution/CraftoPlugin", "Date": "2014-04-12T13:59:39Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loc.getWorld()) != (player.getWorld())) { use_vehicle = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3920/buggy-version/src.de.comniemeer.ClickWarp.WarpHandler.java", "BodyUseAPI": [], "Fixed commit": "a0135679a9b174b24f3f5ac563ebbbb8cd31941c", "Url": "https://api.github.com/repos/SimonIT/ClickWarp", "Date": "2016-10-29T19:37:13Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<Production.BoardPosition>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (next != null) { possibleEnemyMovingPositions.add(next); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7136/buggy-version/src.Production.AlgorithmUtility.java", "BodyUseAPI": ["java.util.TreeSet<Production.BoardPosition>.add(Production.BoardPosition)"], "Fixed commit": "791137fbbe6569c4eeb87a21a52a0308af4472d5", "Url": "https://api.github.com/repos/skodborg/HotChess", "Date": "2015-07-14T12:21:39Z"},
{"Line": "=>1253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (verticalOffset >= 0) { android.support.v4.view.ViewCompat.setTranslationY(child, com.ytjojo.viewlib.supernestedlayout.CollapsingTextHelper.constrain(verticalOffset, (-(mOverScrollDistance)), getMaxOffsetForPinChild(child))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2662/buggy-version/nestedscrolllayout.src.main.java.com.ytjojo.viewlib.supernestedlayout.CollapsingLayout.java", "BodyUseAPI": ["android.support.v4.view.ViewCompat.setTranslationY(android.view.View,com.ytjojo.viewlib.supernestedlayout.CollapsingTextHelper.constrain(verticalOffset, (-(mOverScrollDistance)), getMaxOffsetForPinChild(child)))", "com.ytjojo.viewlib.supernestedlayout.CollapsingTextHelper.constrain(int,int,int)"], "Fixed commit": "7a226afe375771e50016437eb562dedf095490ce", "Url": "https://api.github.com/repos/ytjojo/SuperNeestedscrollLayout", "Date": "2017-06-14T08:28:06Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 == (ls4[0])) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6124/buggy-version/src.summary.lexrank.Main.java", "BodyUseAPI": [], "Fixed commit": "556d695f93c1dd0c27abbf9fa24ef221353a5f30", "Url": "https://api.github.com/repos/Wendong-Wu/goNLP", "Date": "2013-12-15T03:18:57Z"},
{"Line": "=>1404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(SentinelTarget.v1_9)) { return (it.getType()) == (Material.POTION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3063/buggy-version/src.main.java.org.mcmonkey.sentinel.SentinelTrait.java", "BodyUseAPI": [], "Fixed commit": "24c1e123dfdacd336b9f5c60db3201fb38f6159e", "Url": "https://api.github.com/repos/mcmonkey4eva/Sentinel", "Date": "2017-08-21T17:03:08Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (SentinelTarget.v1_9) { entpotion = start.getKey().getWorld().spawnEntity(start.getKey(), ((potion.getType()) == (Material.SPLASH_POTION) ? EntityType.SPLASH_POTION : EntityType.LINGERING_POTION)); }else { entpotion = start.getKey().getWorld().spawnEntity(start.getKey(), EntityType.SPLASH_POTION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3063/buggy-version/src.main.java.org.mcmonkey.sentinel.SentinelTrait.java", "BodyUseAPI": [], "Fixed commit": "24c1e123dfdacd336b9f5c60db3201fb38f6159e", "Url": "https://api.github.com/repos/mcmonkey4eva/Sentinel", "Date": "2017-08-21T17:03:08Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.inventory.Slot.getStack()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tileEntity.isItemValidForSlot(capacitorSlot, origStack)) { merged = mergeItemStack(origStack, capacitorSlot, (capacitorSlot + 1), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/261/buggy-version/common.crazypants.enderio.machine.AbstractMachineContainer.java", "BodyUseAPI": ["crazypants.enderio.machine.AbstractMachineContainer.mergeItemStack(net.minecraft.item.ItemStack,int,int,boolean)"], "Fixed commit": "e5e502f27526e29d42b7a795eedc7cf2cf271c12", "Url": "https://api.github.com/repos/CrazyPants/EnderIO", "Date": "2013-08-24T17:41:43Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (l != null) l.setProfile(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4737/buggy-version/SProject.src.de.glurak.data.User.LabelProfile.java", "BodyUseAPI": ["de.glurak.data.User.Label.setProfile(de.glurak.data.User.LabelProfile)"], "Fixed commit": "b1e86c249c86dd6560a2358aa5e2d2c733838906", "Url": "https://api.github.com/repos/zian92/Glurak", "Date": "2014-03-05T11:23:53Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.dictionary.getModel().getWordByValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!isTypeFinded) && ((w.getInformationTypes().size()) > 0)) { this.wordsAssociations.put(w.getValue(), w.getInformationTypes().get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1815/buggy-version/src.NARVIS.src.main.java.com.narvis.engine.DetailsAnalyser.java", "BodyUseAPI": ["w.getInformationTypes().get(int)", "com.narvis.dataaccess.models.lang.word.Word.getValue()", "java.util.Map<java.lang.String, java.lang.String>.put(w.getValue(),w.getInformationTypes().get(0))", "com.narvis.dataaccess.models.lang.word.Word.getInformationTypes()"], "Fixed commit": "62bcc0dab2b676b07f97be9549bbb120baaaa973", "Url": "https://api.github.com/repos/NotAVeryIntelligentSystem/NARVIS", "Date": "2015-06-06T12:45:04Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.heldplayer.plugins.nei.mystcraft.PluginNEIMystcraft.mystcraft) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8358/buggy-version/src.me.heldplayer.plugins.nei.mystcraft.client.NEIConfig.java", "BodyUseAPI": [], "Fixed commit": "25071cbe4997f9d173847cac4f7170d525771b1c", "Url": "https://api.github.com/repos/heldplayer/MystNEI-Plugin", "Date": "2013-09-17T19:05:24Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(\"bearer-only\".equals(input.getOidcAccessType()))) && (((input.getOidcRedirectUri()) == null) || (input.getOidcRedirectUri().trim().isEmpty()))) { throw new net.maritimecloud.identityregistry.exception.McBasicRestException(org.springframework.http.HttpStatus.BAD_REQUEST, net.maritimecloud.identityregistry.utils.MCIdRegConstants.OIDC_MISSING_REDIRECT_URL, request.getServletPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4117/buggy-version/src.main.java.net.maritimecloud.identityregistry.controllers.ServiceController.java", "BodyUseAPI": [], "Fixed commit": "e41325693c46aa8eec1949349db85dd2f9e677ed", "Url": "https://api.github.com/repos/MaritimeConnectivityPlatform/IdentityRegistry", "Date": "2017-02-06T08:19:54Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(\"bearer-only\".equals(input.getOidcAccessType()))) && (((input.getOidcRedirectUri()) == null) || (input.getOidcRedirectUri().trim().isEmpty()))) { throw new net.maritimecloud.identityregistry.exception.McBasicRestException(org.springframework.http.HttpStatus.BAD_REQUEST, net.maritimecloud.identityregistry.utils.MCIdRegConstants.OIDC_MISSING_REDIRECT_URL, request.getServletPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4117/buggy-version/src.main.java.net.maritimecloud.identityregistry.controllers.ServiceController.java", "BodyUseAPI": [], "Fixed commit": "e41325693c46aa8eec1949349db85dd2f9e677ed", "Url": "https://api.github.com/repos/MaritimeConnectivityPlatform/IdentityRegistry", "Date": "2017-02-06T08:19:54Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.charAt(0)) == '/') is = new java.io.FileInputStream(new java.io.File(name)); else is = apkContext.getAssets().open(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5177/buggy-version/src.com.mojang.minecraftpe.MainActivity.java", "BodyUseAPI": ["apkContext.getAssets().open(java.lang.String)"], "Fixed commit": "1916fb4b88911f7c4c27e3c5eed80ff875c89d3b", "Url": "https://api.github.com/repos/derderder77/GenericLauncher", "Date": "2016-03-09T17:43:54Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.charAt(0)) == '/') is = new java.io.FileInputStream(new java.io.File(name)); else is = getInputStreamForAsset(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5177/buggy-version/src.com.mojang.minecraftpe.MainActivity.java", "BodyUseAPI": ["com.mojang.minecraftpe.MainActivity.getInputStreamForAsset(java.lang.String)"], "Fixed commit": "1916fb4b88911f7c4c27e3c5eed80ff875c89d3b", "Url": "https://api.github.com/repos/derderder77/GenericLauncher", "Date": "2016-03-09T17:43:54Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5177/buggy-version/src.com.mojang.minecraftpe.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1916fb4b88911f7c4c27e3c5eed80ff875c89d3b", "Url": "https://api.github.com/repos/derderder77/GenericLauncher", "Date": "2016-03-09T17:43:54Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fieldInfo.unwrapped) && (propertyValue instanceof java.util.Map)) { java.util.Map map = ((java.util.Map) (propertyValue)); if ((map.size()) == 0) { fieldUnwrappedNull = true; }else if (!(serializer.isEnabled(SerializerFeature.WriteMapNullValue))) { boolean hasNotNull = false; for (java.lang.Object value : map.values()) { if (value != null) { hasNotNull = true; break; } } if (!hasNotNull) { fieldUnwrappedNull = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5680/buggy-version/src.main.java.com.alibaba.fastjson.serializer.JavaBeanSerializer.java", "BodyUseAPI": [], "Fixed commit": "d35a1a16b9594615d369c0b02ba26b9a0869b5b8", "Url": "https://api.github.com/repos/FlakyTestDetection/fastjson", "Date": "2017-10-01T17:20:46Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!fieldUnwrappedNull) { commaFlag = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5680/buggy-version/src.main.java.com.alibaba.fastjson.serializer.JavaBeanSerializer.java", "BodyUseAPI": [], "Fixed commit": "d35a1a16b9594615d369c0b02ba26b9a0869b5b8", "Url": "https://api.github.com/repos/FlakyTestDetection/fastjson", "Date": "2017-10-01T17:20:46Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (request != null) { final java.lang.Object tag = request.getTag(); if (tag != null) { return tag.toString().equals(getRequestTag()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/405/buggy-version/Yancha.src.main.java.net.ichigotake.yancha.BaseFragment.java", "BodyUseAPI": ["com.android.volley.Request<?>.getTag()"], "Fixed commit": "c232f13b350e0fdf7698cd91d08a1c479a35e64f", "Url": "https://api.github.com/repos/ichigotake/Android-yancha", "Date": "2014-02-23T10:16:14Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(configured)) { configure(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7646/buggy-version/src.main.java.org.osgl.inject.Module.java", "BodyUseAPI": [], "Fixed commit": "468576d45f4170d0706a85e2efcd1141edd582de", "Url": "https://api.github.com/repos/osglworks/java-di", "Date": "2016-08-10T21:26:00Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mHomeRunning)) { mAutoJobHandler.startJob(AutoJobHandler.FGO_PURE_BATTLE_JOB); mHeadIconList.get(com.mumu.joshautomation.HeadService.IDX_HOME_ICON).getImageView().setImageResource(R.drawable.ic_pause); }else { mAutoJobHandler.stopJob(AutoJobHandler.FGO_PURE_BATTLE_JOB); mHeadIconList.get(com.mumu.joshautomation.HeadService.IDX_HOME_ICON).getImageView().setImageResource(R.drawable.ic_menu_home_outline); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3488/buggy-version/app.src.main.java.com.mumu.joshautomation.HeadService.java", "BodyUseAPI": [], "Fixed commit": "675c7543de5ed9db5249634f226cf9eb43bcd052", "Url": "https://api.github.com/repos/josh-hsu/JoshAutomation", "Date": "2017-03-26T09:37:02Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.jet.lang.resolve.ClassDescriptor.getKind()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (kind == (ClassKind.CLASS_OBJECT)) { return ((org.jetbrains.jet.lang.resolve.ClassDescriptor) (descriptor.getContainingDeclaration())).getVisibility(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2410/buggy-version/compiler.frontend.src.org.jetbrains.jet.lang.resolve.ModifiersChecker.java", "BodyUseAPI": [], "Fixed commit": "f25b2b937672480c186b9251dea06c29558a130d", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2013-08-02T12:50:47Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((session != null) && ((session.getCurrentUser()) != null)) { hu.tilos.radio.backend.comment.BasicDBList or = new hu.tilos.radio.backend.comment.BasicDBList(); or.add(new hu.tilos.radio.backend.comment.BasicDBObject(\"status\", CommentStatus.ACCEPTED.ordinal())); or.add(new hu.tilos.radio.backend.comment.BasicDBObject(\"author.ref\", new hu.tilos.radio.backend.comment.DBRef(db, \"user\", session.getCurrentUser().getId()))); query.put(\"$or\", or); }else { query.put(\"status\", CommentStatus.ACCEPTED.ordinal()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4761/buggy-version/service.src.main.java.hu.tilos.radio.backend.comment.CommentService.java", "BodyUseAPI": ["session.getCurrentUser().getId()", "hu.tilos.radio.backend.comment.BasicDBList.add(hu.tilos.radio.backend.comment.BasicDBObject)", "hu.tilos.radio.backend.Session.getCurrentUser()"], "Fixed commit": "7e338182bc1c6f7fc6a6d08577a35648b9e8a878", "Url": "https://api.github.com/repos/tilosradio/web2-backend", "Date": "2015-06-13T21:38:33Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isVertical(first)) || (isVertical(second))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3955/buggy-version/src.BattleshipModel.java", "BodyUseAPI": [], "Fixed commit": "19a196ae7e473661ea0fe828b85560b067742da6", "Url": "https://api.github.com/repos/nlflint/BattleshipModelInterface", "Date": "2015-11-29T06:42:53Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAlive())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8983/buggy-version/PixelDungeon.src.main.java.com.watabou.pixeldungeon.actors.Char.java", "BodyUseAPI": [], "Fixed commit": "4fdcc563cddbfac2ee034c5dbbd2e358d94a9ca2", "Url": "https://api.github.com/repos/NYRDS/pixel-dungeon-remix", "Date": "2017-01-14T20:25:03Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initialDelay > 0) { delay = initialDelay; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4817/buggy-version/caddisfly-app.app.src.main.java.org.akvo.caddisfly.sensor.turbidity.TurbidityConfig.java", "BodyUseAPI": [], "Fixed commit": "1950621c058764eec7af2e73a31b8179db697e6c", "Url": "https://api.github.com/repos/akvo/akvo-caddisfly", "Date": "2015-12-08T07:02:21Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.grzegorz.androidterminalemulator.InputStreamTerminalWriter.readUntilEnd(java.io.InputStreamReader)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (text.endsWith(java.lang.String.valueOf('\\uffff'))) { finished = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2460/buggy-version/android.Android_Terminal_Emulator.app.src.main.java.com.example.grzegorz.androidterminalemulator.InputStreamTerminalWriter.java", "BodyUseAPI": [], "Fixed commit": "9e565c031b3771f54a21d821724bd9cc4f59e733", "Url": "https://api.github.com/repos/jifwin/AndroidTerminalEmulator", "Date": "2016-01-02T10:06:11Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recalculateSignature) { jwtIM.setJWTKey(jwtST.getKeyFieldValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6735/buggy-version/src.app.controllers.JWTInterceptTabController.java", "BodyUseAPI": [], "Fixed commit": "50807d0e6a7f204feacfe30f8c66efe817434055", "Url": "https://api.github.com/repos/mvetsch/JWT4B", "Date": "2017-05-01T13:03:14Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["counter.get(curDest).keySet().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (totalVotes >= minVotes) { if ((counter.get(curDest).get(new java.lang.Integer(curSource.getLanguage().getId()))) <= maxVotesPerLang) { graph.addEdge((edgeCounter++), curSource, curDest); } }else { if (print) { try { org.wikibrain.mapper.algorithms.conceptualign3.ILLSplitter.LOG.info((((\"Removing edge: \" + (lpDao.getById(curSource).getTitle())) + \" --> \") + (lpDao.getById(curDest).getTitle()))); } catch (org.wikibrain.core.dao.DaoException e) { throw new org.wikibrain.core.WikiBrainException(e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/463/buggy-version/wikibrain-mapper.src.main.java.org.wikibrain.mapper.algorithms.conceptualign3.ILLSplitter.java", "BodyUseAPI": [], "Fixed commit": "71561d0bd6e8dd6752487172f7739f433b637af2", "Url": "https://api.github.com/repos/leusonmario/wikibrain", "Date": "2014-05-21T07:53:48Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"ClockIn\".equalsIgnoreCase(eventType)) { if (!(com.jobviewer.util.Utils.checkIfStartDateIsGreater(time, com.jobviewer.util.Utils.getCurrentDateAndTime()))) { errorMsg = context.getResources().getString(R.string.pastDateValidationErrorMsg); return false; }else { java.lang.String eventType1 = ((java.lang.String) (getIntent().getExtras().get(\"eventType1\"))); if (!(com.jobviewer.util.Utils.isNullOrEmpty(eventType1))) { if (eventType1.equalsIgnoreCase(Utils.SHIFT_START)) { Utils.startShiftTimeRequest.setIs_overriden(ActivityConstants.TRUE); Utils.startShiftTimeRequest.setOverride_timestamp(time); }else { Utils.callStartTimeRequest.setIs_overriden(ActivityConstants.TRUE); Utils.callStartTimeRequest.setOverride_timestamp(time); } } } }else if (\"EndOnCall\".equalsIgnoreCase(eventType)) { java.lang.String timeToCompare = com.jobviewer.util.Utils.formattedDateFromMillis(com.jobviewer.provider.JobViewerDBHandler.getBreakShiftTravelCall(context).getCallStartTime()); java.lang.String presentTime = com.jobviewer.util.Utils.getCurrentDateAndTime(); if (!(com.jobviewer.util.Utils.checkIfStartDateIsGreater(timeToCompare, time))) { errorMsg = (((context.getResources().getString(R.string.dateAndTimeMustAfterCallStart)) + \" (\") + timeToCompare) + \")\"; return false; }else if (!(com.jobviewer.util.Utils.checkIfStartDateIsGreater(time, presentTime))) { errorMsg = context.getResources().getString(R.string.pastDateValidationErrorMsg); return false; } }else { Utils.endTimeRequest.setOverride_timestamp(time); eventTypeValue = \"endtravel\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3818/buggy-version/JobViewer.src.com.jobviewer.util.ChangeTimeDialog.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "6f1a5fe26af566a2bf04fe5399c9258ce44f36e1", "Url": "https://api.github.com/repos/raghunaikbadde/FieldViewer", "Date": "2016-05-14T11:12:48Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.atlassian.confluence.user.AuthenticatedUserThreadLocal.getUser()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (authUser == null) { timeZone = com.atlassian.confluence.core.TimeZone.getDefault(); }else { com.atlassian.confluence.user.ConfluenceUserPreferences prefs = userAccessor.getConfluenceUserPreferences(authUser); timeZone = prefs.getTimeZone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1420/buggy-version/src.main.java.com.baloise.confluence.JenkinsJobStatusMacro.java", "BodyUseAPI": ["com.atlassian.confluence.user.UserAccessor.getConfluenceUserPreferences(com.atlassian.user.User)"], "Fixed commit": "45c5e2816b54e05feecd893151c423e9f99c709d", "Url": "https://api.github.com/repos/baloise/dashboard-plus", "Date": "2014-07-14T09:04:28Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.block.Block.getBlockFromName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (theBlock == (net.minecraft.init.Blocks.lava)) { theMetadata = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3115/buggy-version/src.main.java.com.blogspot.jabelarminecraft.magicbeans.structures.Structure.java", "BodyUseAPI": [], "Fixed commit": "d02fc63ba25560c918f09635eeab2c737f4c6005", "Url": "https://api.github.com/repos/jabelar/MagicBeans-1.7.10", "Date": "2015-03-18T05:51:19Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ctx.getCompiler().getDebugProfiles().get(org.thingml.compilers.java.Thing)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((!(debugProfile == null)) && (debugProfile.getDebugFunctions().contains(f))) { builder.append(((\"printDebug(\\\"\" + (ctx.traceFunctionDone(thing, f))) + \"\\\");\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8567/buggy-version/compilers.java.src.main.java.org.thingml.compilers.java.JavaThingImplCompiler.java", "BodyUseAPI": ["org.thingml.compilers.Context.traceFunctionDone(org.thingml.compilers.java.Thing,org.thingml.compilers.java.Function)", "java.lang.StringBuilder.append(((\"printDebug(\\\"\" + (ctx.traceFunctionDone(thing, f))) + \"\\\");\"))"], "Fixed commit": "f94850b3aa58e684c89e23453699249e8d1e584d", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2015-11-25T18:03:44Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (channelOpen) { super.send(item); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3294/buggy-version/rpc.src.main.java.io.datakernel.rpc.protocol.stream.RpcStreamProtocol.java", "BodyUseAPI": [], "Fixed commit": "a62e9d4159ba04bbabb81122d5e2daeb52bb12be", "Url": "https://api.github.com/repos/softindex/datakernel", "Date": "2016-04-08T16:36:11Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7983/buggy-version/src.main.java.org.psidnell.omnifocus.expr.ExpressionFunctions.java", "BodyUseAPI": [], "Fixed commit": "38cdade4274a5fed72ee018e9bae530b032efa1c", "Url": "https://api.github.com/repos/psidnell/ofexport2", "Date": "2015-04-05T10:06:00Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mResultView) != null) { mResultView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/669/buggy-version/Manat.app.src.main.java.org.ogasimli.manat.fragment.MainActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "7e7fd69795c01ccee0f6f8ef7289388246d57f6c", "Url": "https://api.github.com/repos/ogasimli/Capstone-Project", "Date": "2016-11-13T11:05:08Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mResultView) != null) { mResultView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/669/buggy-version/Manat.app.src.main.java.org.ogasimli.manat.fragment.MainActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "7e7fd69795c01ccee0f6f8ef7289388246d57f6c", "Url": "https://api.github.com/repos/ogasimli/Capstone-Project", "Date": "2016-11-13T11:05:08Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mErrorView) != null) { mErrorView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/669/buggy-version/Manat.app.src.main.java.org.ogasimli.manat.fragment.MainActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "7e7fd69795c01ccee0f6f8ef7289388246d57f6c", "Url": "https://api.github.com/repos/ogasimli/Capstone-Project", "Date": "2016-11-13T11:05:08Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mErrorView) != null) { mErrorView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/669/buggy-version/Manat.app.src.main.java.org.ogasimli.manat.fragment.MainActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "7e7fd69795c01ccee0f6f8ef7289388246d57f6c", "Url": "https://api.github.com/repos/ogasimli/Capstone-Project", "Date": "2016-11-13T11:05:08Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s.contains(v))) { relax(minHeap, u, v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8650/buggy-version/TP1.src.main.grafos.recorridos.Dijkstra.java", "BodyUseAPI": ["grafos.recorridos.Dijkstra.relax(java.util.Queue<java.lang.Integer>,java.lang.Integer,java.lang.Integer)"], "Fixed commit": "cde1e703d7c7ffe495062f93be890f1d0a430082", "Url": "https://api.github.com/repos/eduardoneira/TDA2C2016", "Date": "2016-10-15T02:39:44Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.facebook.presto.type.TypeRegistry.getType(com.facebook.presto.spi.type.TypeSignature)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parameterType == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2342/buggy-version/presto-main.src.main.java.com.facebook.presto.type.TypeRegistry.java", "BodyUseAPI": [], "Fixed commit": "5fa45a93054d03a4fae421f05ecc8acaa01f64cf", "Url": "https://api.github.com/repos/saurabhgupta1403/presto", "Date": "2015-02-25T19:12:00Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (j != p) { edu.msergey.jalg.sorting.QuickSortPartition3.exchange(i, j); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3855/buggy-version/src.main.java.edu.msergey.jalg.sorting.QuickSortPartition3.java", "BodyUseAPI": ["edu.msergey.jalg.sorting.QuickSortPartition3.exchange(int,int)"], "Fixed commit": "ce37fa08a745f05870595f63792c66e1ca9b10cf", "Url": "https://api.github.com/repos/msergey/jalg", "Date": "2016-03-12T20:22:17Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (idx < (_tickets.size())) { int priorityAtIdx = _tickets.get(idx); if (priorityAtIdx == priority) { errorDuplicatePriority(priority); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6605/buggy-version/src.TicketSystem.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)"], "Fixed commit": "ac20b7548d65a1b2ec95812817c07339942bbde7", "Url": "https://api.github.com/repos/johnandrewsduvall/CSC_316_Project2", "Date": "2015-11-08T23:57:22Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (jobID == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/371/buggy-version/src.main.java.com.treasure_data.client.AbstractClientAdaptor.java", "BodyUseAPI": [], "Fixed commit": "6b4e42c3e271e42b658882f0faf896e078fd692b", "Url": "https://api.github.com/repos/treasure-data/td-client-java", "Date": "2014-02-14T18:44:56Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (embeddableType == type) { propertyType = entityType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/465/buggy-version/querydsl-codegen.src.main.java.com.mysema.query.codegen.GenericExporter.java", "BodyUseAPI": [], "Fixed commit": "98e2db2274887b5de1b81df026ec2652fa94910c", "Url": "https://api.github.com/repos/mysema/querydsl", "Date": "2012-09-04T13:49:28Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tingeltangel.tools.FileEnvironment.getAudioDirectory(book.getID())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (audioDir.exists()) { java.io.File[] tracks = audioDir.listFiles(); for (int i = 0; i < (tracks.length); i++) { if (tracks[i].isFile()) { tracks[i].delete(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6897/buggy-version/src.main.java.tingeltangel.wimmelbuch.Wimmelbuch.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "9c6f57bca71c22c9d4fb0a5e93525da18340687e", "Url": "https://api.github.com/repos/Martin-Dames/Tingeltangel", "Date": "2016-03-22T22:27:23Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (res.equals(\"\")) { res = login; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5710/buggy-version/src.main.java.com.app.entity.Person.java", "BodyUseAPI": [], "Fixed commit": "8789f6c235c29535bc5c65aa8188f03ffaf31bde", "Url": "https://api.github.com/repos/Orbit3v1/adminUsers", "Date": "2016-07-12T07:53:42Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lastName) != null) && (!(lastName.equals(\"\")))) { res += lastName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5710/buggy-version/src.main.java.com.app.entity.Person.java", "BodyUseAPI": [], "Fixed commit": "8789f6c235c29535bc5c65aa8188f03ffaf31bde", "Url": "https://api.github.com/repos/Orbit3v1/adminUsers", "Date": "2016-07-12T07:53:42Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (productivity.notes.rivisto.utils.Helpers.isConnectedToInternet(getActivity())) { createNewAccount(); }else { android.support.design.widget.Snackbar.make(view, \"Internet connectivity is required\", Snackbar.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2958/buggy-version/app.src.main.java.productivity.notes.rivisto.configure.ConfigureFragment.java", "BodyUseAPI": [], "Fixed commit": "fdfc1cef9d94f8936fc1c0a942e31c7f899bda52", "Url": "https://api.github.com/repos/ParitoshBh/Rivisto-Android", "Date": "2016-10-30T03:59:44Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dyConsumed < 0) && ((child.getVisibility()) != (android.view.View.VISIBLE))) { if ((child.getId()) == (R.id.fabAddBlock)) { if (com.twotowerstudios.virtualnotebookdesign.NotebookSelection.NotebookSelection.isMainfabOpen()) { child.show(); }else { } }else { child.show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2799/buggy-version/app.src.main.java.com.twotowerstudios.virtualnotebookdesign.NotebookSelection.ScrollAwareFABBehavior.java", "BodyUseAPI": ["android.support.design.widget.FloatingActionButton.getId()", "android.support.design.widget.FloatingActionButton.show()", "android.support.design.widget.FloatingActionButton.show()"], "Fixed commit": "9da6d01e898fb053d999a79e91e22d2a13d49409", "Url": "https://api.github.com/repos/coldblade2000/VirtualNotebookDesign", "Date": "2016-11-16T15:46:08Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getModel().getRuleModelList().size()) > (previousTabIndex)) { if (((previousTabIndex) == (-1)) || (((ch.ffhs.hdo.client.ui.regelset.RegelPanel) (tabbedPane.getComponentAt(previousTabIndex))).isPanelValid())) { previousTabIndex = tabbedPane.getSelectedIndex(); }else { tabChangePrevented = true; tabbedPane.setSelectedIndex(previousTabIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8839/buggy-version/hdo-projekt.src.main.java.ch.ffhs.hdo.client.ui.regelset.RegelsetView.java", "BodyUseAPI": [], "Fixed commit": "dcfe00fe3363755ffaf610b35377877250b80dc4", "Url": "https://api.github.com/repos/hdo-team/hdo-pa5", "Date": "2016-12-15T00:04:56Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tachyon.master.LocalTachyonClusterMultiMaster.sReinitializer) == null) { tachyon.client.ClientContext.accessReinitializer(tachyon.master.LocalTachyonClusterMultiMaster.sReinitializerAccesser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6627/buggy-version/minicluster.src.main.java.tachyon.master.LocalTachyonClusterMultiMaster.java", "BodyUseAPI": [], "Fixed commit": "cd3a2f66c36c52dc4813cf96e9706541fbdaeb1c", "Url": "https://api.github.com/repos/calvinjia/tachyon", "Date": "2015-09-14T22:50:16Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mContext) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3947/buggy-version/src.sk.boinc.androboinc.service.NetworkStatisticsHandler.java", "BodyUseAPI": [], "Fixed commit": "1b7a31db504644e289536cc36396c278e6b79e36", "Url": "https://api.github.com/repos/palo-m/androboinc", "Date": "2012-09-06T15:51:48Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mContext) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3947/buggy-version/src.sk.boinc.androboinc.service.NetworkStatisticsHandler.java", "BodyUseAPI": [], "Fixed commit": "1b7a31db504644e289536cc36396c278e6b79e36", "Url": "https://api.github.com/repos/palo-m/androboinc", "Date": "2012-09-06T15:51:48Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mContext) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3947/buggy-version/src.sk.boinc.androboinc.service.NetworkStatisticsHandler.java", "BodyUseAPI": [], "Fixed commit": "1b7a31db504644e289536cc36396c278e6b79e36", "Url": "https://api.github.com/repos/palo-m/androboinc", "Date": "2012-09-06T15:51:48Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request) != null) { for (org.apache.http.Header header : request.getAllHeaders()) { com.momock.util.Logger.debug((((header.getName()) + \" = \") + (header.getValue()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1307/buggy-version/momock.src.com.momock.http.HttpSession.java", "BodyUseAPI": [], "Fixed commit": "d8450e2c80a62faf2077b28ac6a7e1cb7f0e8ada", "Url": "https://api.github.com/repos/momock/momock-android", "Date": "2013-07-08T13:19:25Z"},
{"Line": "=>801", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player == null) { player = EnderIO.proxy.getClientPlayer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7750/buggy-version/src.main.java.crazypants.enderio.conduit.BlockConduitBundle.java", "BodyUseAPI": [], "Fixed commit": "47f78f891a4bc9d1b244aa0b613ce2a1aa3f471b", "Url": "https://api.github.com/repos/CrazyPants/EnderIO", "Date": "2014-11-23T08:04:29Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((usedArray) != null) { java.lang.String sub = usedArray.get(pager.getCurrentItem()); if ((!(sub.equals(\"frontpage\"))) && (!(sub.equals(\"all\")))) { ((android.support.v4.widget.DrawerLayout) (findViewById(R.id.drawer_layout))).openDrawer(Gravity.RIGHT); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2115/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.SubredditOverview.java", "BodyUseAPI": [], "Fixed commit": "7ce637e58c930fc81e5ce29bead5b38a9ca6ac08", "Url": "https://api.github.com/repos/ccrama/Slide", "Date": "2015-10-28T22:30:29Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.elasticsearch.hadoop.rest.RestClient.get(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((version == null) || (!(org.elasticsearch.hadoop.util.StringUtils.hasText(version.get(\"number\"))))) { return \"Unknown\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4938/buggy-version/mr.src.main.java.org.elasticsearch.hadoop.rest.RestClient.java", "BodyUseAPI": [], "Fixed commit": "d638e896d6b72c67e13f2276c5e85fc78f0ab417", "Url": "https://api.github.com/repos/elastic/elasticsearch-hadoop", "Date": "2015-10-28T18:15:55Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((treatment.getDoubleOrNull(\"insulin\")) != null) { info.nightscout.client.NSClient.log.debug((((\"Received from NS: \" + (isCurrent(treatment))) + \" \") + (treatment.getData().toString()))); info.nightscout.client.NSClient.log.debug((\"Received from NS: \" + (new java.util.Date(treatment.getMills()).toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2751/buggy-version/app.src.main.java.info.nightscout.client.NSClient.java", "BodyUseAPI": ["info.nightscout.client.data.NSTreatment.getData()", "treatment.getData().toString()", "org.slf4j.Logger.debug((((\"Received from NS: \" + (isCurrent(treatment))) + \" \") + (treatment.getData().toString())))", "java.util.Date.toString()", "org.slf4j.Logger.debug(java.lang.String)", "1.isCurrent(info.nightscout.client.data.NSTreatment)", "info.nightscout.client.data.NSTreatment.getMills()"], "Fixed commit": "dae907569a6bda3a37f74025811b83285a8a66db", "Url": "https://api.github.com/repos/nightscout/NSClient-Android", "Date": "2016-05-20T11:00:36Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) { if (!(player.hasPermission(\"finddeathlocation.tp\"))) { player.sendMessage(convertedLang(\"notPermitted\")); return true; }else { if ((deathData.getString(player.getName())) == null) { player.sendMessage(convertedLang(\"notDied\")); return true; }else { teleportPlayer(player, player.getName()); if (!(player.hasPermission(\"finddeathlocation.tp.bypass\"))) { if ((getConfig().getInt(\"cooldownSeconds\")) > 0) { cooldown(player); } } return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/954/buggy-version/src.me.kevinnovak.finddeathlocation.FindDeathLocation.java", "BodyUseAPI": [], "Fixed commit": "8665ab28995f2dbd7b03100e809b07492857a094", "Url": "https://api.github.com/repos/KevinNovak/DeathFeathers", "Date": "2016-01-26T05:24:45Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.hasPermission(\"finddeathlocation.tp.bypass\"))) { if ((getConfig().getInt(\"cooldownSeconds\")) > 0) { cooldown(player); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/954/buggy-version/src.me.kevinnovak.finddeathlocation.FindDeathLocation.java", "BodyUseAPI": ["me.kevinnovak.finddeathlocation.FindDeathLocation.cooldown(org.bukkit.entity.Player)"], "Fixed commit": "8665ab28995f2dbd7b03100e809b07492857a094", "Url": "https://api.github.com/repos/KevinNovak/DeathFeathers", "Date": "2016-01-26T05:24:45Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(conversation.owner.equals(getAdmin().id))) addUserToConversation(getAdmin().id, conversation.id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4138/buggy-version/src.codeu.chat.server.Model.java", "BodyUseAPI": ["codeu.chat.server.Model.addUserToConversation(getAdmin().id,conversation.id)"], "Fixed commit": "5e3b5bce383beedc546b88754020165e306c7828", "Url": "https://api.github.com/repos/shadowfirex/codeu_project_2017", "Date": "2017-06-03T01:11:39Z"},
{"Line": "=>1512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((value != null) && (value.equals(\"-1\"))) { this.setRejectOnArrival(null); }else { org.mobicents.smsc.mproc.RejectType rejectOnArrival = org.mobicents.smsc.mproc.RejectType.parse(value); if (rejectOnArrival.equals(RejectType.NONE)) this.setRejectOnArrival(null); else this.setRejectOnArrival(rejectOnArrival); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1452/buggy-version/core.smsc-common-library.src.main.java.org.mobicents.smsc.mproc.impl.MProcRuleDefaultImpl.java", "BodyUseAPI": ["org.mobicents.smsc.mproc.RejectType.parse(java.lang.String)"], "Fixed commit": "75da1286dd9a5fc3cb27b4bdb6be080cb9794dcb", "Url": "https://api.github.com/repos/vetss/smscgateway", "Date": "2017-07-25T10:09:33Z"},
{"Line": "=>801", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["indi.yume.tools.renderercalendar.CalendarPage.getTouchDay(float,float)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (touchDay == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1837/buggy-version/app.src.main.java.indi.yume.tools.renderercalendar.CalendarView.java", "BodyUseAPI": [], "Fixed commit": "f06511b3d771e168f27a96f9a10979790896b0b8", "Url": "https://api.github.com/repos/Yumenokanata/RendererCalendar", "Date": "2016-05-05T04:27:46Z"},
{"Line": "=>775", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["indi.yume.tools.renderercalendar.CalendarPage.getTouchDay(float,float)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (touchDay == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1837/buggy-version/app.src.main.java.indi.yume.tools.renderercalendar.CalendarView.java", "BodyUseAPI": [], "Fixed commit": "f06511b3d771e168f27a96f9a10979790896b0b8", "Url": "https://api.github.com/repos/Yumenokanata/RendererCalendar", "Date": "2016-05-05T04:27:46Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item.getItemMeta().hasDisplayName()) { if (item.getItemMeta().getDisplayName().equalsIgnoreCase(\"Key\")) { event.setCancelled(true); ((org.bukkit.entity.Player) (event.getWhoClicked())).sendMessage((((plugin.getPrefix()) + (org.bukkit.ChatColor.RED)) + \"You may not use keys as a substitute for iron ingots! ;)\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5522/buggy-version/WaywardLocks.src.main.java.net.wayward_realms.waywardlocks.CraftItemListener.java", "BodyUseAPI": ["item.getItemMeta().getDisplayName()", "item.getItemMeta().getDisplayName().equalsIgnoreCase(java.lang.String)", "org.bukkit.inventory.ItemStack.getItemMeta()"], "Fixed commit": "8cbd59e34b4395b40cfa6d7d8db271bed37db39b", "Url": "https://api.github.com/repos/WaywardRealms/Wayward", "Date": "2014-06-01T14:43:26Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(ports.isEmpty())) { view.getControlConnect().getPortsList().addItems(ports); view.getControlConnect().getPortsList().setCaptionLabel(ports.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2212/buggy-version/src.com.madebyferdi.folume.printer.view.PrinterViewController.java", "BodyUseAPI": [], "Fixed commit": "def6e4db2403b8ddcf04a1cc27fab65cd69f2161", "Url": "https://api.github.com/repos/ferdikoomen/folume", "Date": "2017-10-07T14:19:08Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cursor) != null) { if (!(cursor.moveToFirst())) { finishGame(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6672/buggy-version/app.src.main.java.k1noo.bonb.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d97123ec267cc12fc2e4b5f8a3d2fe144ed0acf2", "Url": "https://api.github.com/repos/k1noo/BONB", "Date": "2017-06-01T13:06:55Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.jsl.collider.Collider.s_logger.isLoggable(java.util.logging.Level.WARNING)) org.jsl.collider.Collider.s_logger.warning(ex.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7838/buggy-version/core.src.org.jsl.collider.Collider.java", "BodyUseAPI": ["java.util.logging.Logger.warning(java.lang.String)"], "Fixed commit": "480c742d3e3e5fa22df9b63b4e8b65a06863c5b6", "Url": "https://api.github.com/repos/js-labs/js-collider", "Date": "2013-08-03T20:36:54Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tools.TempBlock.isTempBlock(block)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1587/buggy-version/Bending2.src.waterbending.FreezeMelt.java", "BodyUseAPI": [], "Fixed commit": "a8592f4a6a66b94cc0e193ade882f755dcf8882c", "Url": "https://api.github.com/repos/orion304/MinecraftTLA", "Date": "2012-09-13T00:59:29Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((ch) != ',') && ((ch) != '}')) && ((ch) != ']')) { sym = Constant.error; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3008/buggy-version/SimpleJSONParser.src.org.julien.simplejsonparser.Scanner.java", "BodyUseAPI": [], "Fixed commit": "52084f52dbf4802a4a6ee197978496a616cc77de", "Url": "https://api.github.com/repos/julien-klaus/simpleJSONParser", "Date": "2015-12-20T12:30:24Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((options.outWidth) >= (org.qii.weiciyuan.support.utils.Utility.getScreenWidth())) || ((options.outHeight) >= (org.qii.weiciyuan.support.utils.Utility.getScreenHeight()))) { readLarge(large, url, bitmapPath); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2391/buggy-version/src.org.qii.weiciyuan.support.gallery.GalleryActivity.java", "BodyUseAPI": [], "Fixed commit": "6fcaae5a97ba8e5e2b3e5dc1f407a5f2bb6e2b7f", "Url": "https://api.github.com/repos/Jewelzqiu/weiciyuan", "Date": "2013-09-17T08:56:37Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.momo.automation.log.Log4jReader.getPropertiesFileKey(java.util.Properties)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (logNameKey != null) { prop.setProperty(this.getPropertiesFileKey(prop), ((\"logs/\" + (org.momo.automation.utils.DateUtils.getTime(\"yyyy-MM-dd\"))) + \".log\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2771/buggy-version/momo.src.main.java.org.momo.automation.log.Log4jReader.java", "BodyUseAPI": [], "Fixed commit": "218c094b14789865ea2923235b27a1d137ea7474", "Url": "https://api.github.com/repos/cmr1990/momo", "Date": "2016-08-18T07:35:17Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value instanceof org.netbeans.modules.bugtracking.issuetable.IssueNode.IssueProperty) { c = superRenderer.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column); }else { c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/411/buggy-version/src.main.java.eu.doppel_helix.netbeans.mantisintegration.query.MantisQueryTableCellRenderer.java", "BodyUseAPI": ["javax.swing.table.TableCellRenderer.getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)", "javax.swing.table.DefaultTableCellRenderer.getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int)"], "Fixed commit": "1bea796ea28de460740e5bd640d542bdc238e6c5", "Url": "https://api.github.com/repos/matthiasblaesing/netbeans-mantis-integration", "Date": "2013-04-07T18:40:29Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((org.netbeans.modules.bugtracking.issuetable.IssueNode.IssueProperty) (originalValue)).getName().startsWith(\"mantis.issue.\")) { value = ((org.netbeans.modules.bugtracking.issuetable.IssueNode.IssueProperty) (value)).getValue(); if (\"mantis.issue.status\".equals(((org.netbeans.modules.bugtracking.issuetable.IssueNode.IssueProperty) (originalValue)).getName())) { if (value instanceof biz.futureware.mantisconnect.ObjectRef) { biz.futureware.mantisconnect.ObjectRef or = ((biz.futureware.mantisconnect.ObjectRef) (value)); java.math.BigInteger level = or.getId(); if ((colorMap.get(level)) != null) { overrideColor = colorMap.get(level); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/411/buggy-version/src.main.java.eu.doppel_helix.netbeans.mantisintegration.query.MantisQueryTableCellRenderer.java", "BodyUseAPI": ["java.lang.Object.getName()", "java.lang.String.equals(((org.netbeans.modules.bugtracking.issuetable.IssueNode.IssueProperty) (originalValue)).getName())"], "Fixed commit": "1bea796ea28de460740e5bd640d542bdc238e6c5", "Url": "https://api.github.com/repos/matthiasblaesing/netbeans-mantis-integration", "Date": "2013-04-07T18:40:29Z"},
{"Line": "=>1440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.ipbhalle.metfrag.similarity.SimilarityGroup.getCandidateTocompare()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (similarityGroup.getSimilarCompounds().get(i).getCompoundID().equals(baseCand)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1799/buggy-version/src.de.ipbhalle.metfrag.web.controller.MetFragBean.java", "BodyUseAPI": [], "Fixed commit": "87efe67cc4b9fa0723e9568128d8654e5dac426f", "Url": "https://api.github.com/repos/s-wolf/MetFragWeb", "Date": "2011-02-15T10:14:17Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((header.isEmpty()) || (content.isEmpty())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2439/buggy-version/app.src.main.java.alexandre.bolot.seacom2017.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b10e3536abd7ea23eed99a4f90f85ef60588e389", "Url": "https://api.github.com/repos/AlexBolot/Seacom2017", "Date": "2017-07-16T14:42:55Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (watchUrl != null) mLiveBanner.setTag(watchUrl);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8394/buggy-version/sdk.src.main.java.io.kickflip.sdk.fragment.BroadcastFragment.java", "BodyUseAPI": ["android.widget.TextView.setTag(java.lang.String)"], "Fixed commit": "e97b19f7575a75a764e170a9ab26f501c56afb3a", "Url": "https://api.github.com/repos/Kickflip/kickflip-android-sdk", "Date": "2014-02-25T17:21:48Z"},
{"Line": "=>795", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parameterIndex < 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4181/buggy-version/compiler.backend.src.org.jetbrains.kotlin.codegen.inline.InlineCodegen.java", "BodyUseAPI": [], "Fixed commit": "c021188a390278e39560484c7afd62b2c62036f4", "Url": "https://api.github.com/repos/zarechenskiy/kotlin", "Date": "2016-10-25T11:16:51Z"},
{"Line": "=>1021", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((event.getX()) < 0) || ((event.getX()) > (getWidth()))) || ((event.getY()) < 0)) || ((event.getY()) > (getHeight()))) { setState(com.software.shell.fab.ActionButton.State.NORMAL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4877/buggy-version/fab.src.main.java.com.software.shell.fab.ActionButton.java", "BodyUseAPI": [], "Fixed commit": "d8a08000dd62b9d8fdc29bc8651a7fcd93de7812", "Url": "https://api.github.com/repos/Scalified/fab", "Date": "2015-03-06T12:24:10Z"},
{"Line": "=>1309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.ravenfeld.easyvideoplayer.BuildConfig.DEBUG) { android.util.Log.e(com.ravenfeld.easyvideoplayer.internal.PlayerView.TAG, \"throwError \", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6553/buggy-version/library.src.main.java.com.ravenfeld.easyvideoplayer.internal.PlayerView.java", "BodyUseAPI": [], "Fixed commit": "9d731e4d93f41e25ab6c4cf5764e934d592ac8a5", "Url": "https://api.github.com/repos/ravenfeld/easy-video-player", "Date": "2017-12-05T14:44:34Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((meta / 2) == 0) { state = state.withProperty(inc.a13xis.legacy.dendrology.block.HALF, EnumHalf.BOTTOM); }else { state = state.withProperty(inc.a13xis.legacy.dendrology.block.HALF, EnumHalf.TOP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2560/buggy-version/src.main.java.inc.a13xis.legacy.dendrology.block.ModStairsBlock.java", "BodyUseAPI": [], "Fixed commit": "32d38c43ec911bb339aefe2853023653d39ba82c", "Url": "https://api.github.com/repos/A13XIS/dendrology-legacy-mod", "Date": "2017-01-27T22:27:17Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.github.dfa.diaspora_android.BuildConfig.IS_TEST_BUILD) { navheaderImage.setImageResource(R.drawable.ic_launcher_test); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5889/buggy-version/app.src.main.java.com.github.dfa.diaspora_android.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a2910d187a4ebb1b6c3343621151cf13be95b02f", "Url": "https://api.github.com/repos/gsantner/dandelion", "Date": "2017-03-19T19:16:47Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((captured) != null) { board.setOccupant(captured.position().x, captured.position().y, captured); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4718/buggy-version/src.main.java.chessboard.moves.Promotion.java", "BodyUseAPI": [], "Fixed commit": "0df17325236703b22547f7bb7a23b78e0a0d89e8", "Url": "https://api.github.com/repos/nhouser9/ChessAi", "Date": "2017-02-21T05:45:18Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((extras.get(com.application.letssound.services.MediaService.PARAM_TRACK_URI)) instanceof android.os.Parcelable) soundTrackUrl = extras.getParcelable(com.application.letssound.services.MediaService.PARAM_TRACK_URI);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7057/buggy-version/app.src.main.java.com.application.letssound.services.MediaService.java", "BodyUseAPI": ["android.os.Bundle.getParcelable(java.lang.String)"], "Fixed commit": "cd3d374545b46b2d109f151649ac3923641516a5", "Url": "https://api.github.com/repos/dadoz/LetsSound", "Date": "2017-08-13T20:36:32Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.hadoop.mapred.YarnChild.DEBUG) org.apache.hadoop.mapred.YarnChild.LOG.info(\"Connection accepted by the child\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5968/buggy-version/hadoop-mapreduce-project.hadoop-mapreduce-client.hadoop-mapreduce-client-app.src.main.java.org.apache.hadoop.mapred.YarnChild.java", "BodyUseAPI": [], "Fixed commit": "a6a4e99e33247845e3dbe5e27d125240856d9763", "Url": "https://api.github.com/repos/sandy197/Phadoop-2.2.0-src", "Date": "2014-03-14T06:52:33Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirst) { yc.yarnChildMain(args[0], java.lang.Integer.parseInt(args[1]), args[2], java.lang.Integer.parseInt(args[3])); isFirst = false; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5968/buggy-version/hadoop-mapreduce-project.hadoop-mapreduce-client.hadoop-mapreduce-client-app.src.main.java.org.apache.hadoop.mapred.YarnChild.java", "BodyUseAPI": [], "Fixed commit": "a6a4e99e33247845e3dbe5e27d125240856d9763", "Url": "https://api.github.com/repos/sandy197/Phadoop-2.2.0-src", "Date": "2014-03-14T06:52:33Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(taskName.equals(newTaskName))) { if (taskMap.containsKey(newTaskName.toLowerCase())) { throw new exception.StreamModificationException(java.lang.String.format(model.StreamObject.ERROR_NEW_TASK_NAME_NOT_AVAILABLE, newTaskName)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3680/buggy-version/src.model.StreamObject.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "java.lang.String.toLowerCase()", "java.util.HashMap<java.lang.String, model.StreamTask>.containsKey(java.lang.String)"], "Fixed commit": "1a785310173a7231ff6db37fefbf71c20e358e4a", "Url": "https://api.github.com/repos/cs2103aug2014-f10-1j/main", "Date": "2014-10-23T06:34:19Z"},
{"Line": "=>1345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.ICE_CREAM_SANDWICH)) { android.widget.TextView pushbulletSelection = ((android.widget.TextView) (layout.findViewById(R.id.pushbullet))); pushbulletSelection.setVisibility(View.VISIBLE); pushbulletSelection.setOnClickListener(new it.feio.android.omninotes.DetailFragment.AttachmentOnClickListener()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3579/buggy-version/omniNotes.src.main.java.it.feio.android.omninotes.DetailFragment.java", "BodyUseAPI": [], "Fixed commit": "2d82c91c1560f4e3ea215abf909dcf1407342d30", "Url": "https://api.github.com/repos/federicoiosue/Omni-Notes", "Date": "2014-09-22T17:21:00Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nextIdx > idx) { logP += model.getPathProbability(lastTime, treeEvent.time, stateList.get(idx), eventList.subList(idx, (nextIdx - 1))); }else { logP += model.getIntervalProbability(stateList.get(idx), ((treeEvent.time) - lastTime)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5625/buggy-version/src.epiinf.operators.TrajectoryOperator.java", "BodyUseAPI": ["java.util.List<epiinf.EpidemicState>.get(int)", "epiinf.EpidemicModel.getIntervalProbability(stateList.get(idx),((treeEvent.time) - lastTime))", "java.util.List<epiinf.EpidemicState>.get(int)", "epiinf.EpidemicModel.getPathProbability(double,treeEvent.time,stateList.get(idx),eventList.subList(idx, (nextIdx - 1)))", "java.util.List<epiinf.EpidemicEvent>.subList(int,int)"], "Fixed commit": "15edca2a4c5f68ed0243fbf59ad4e81c8d616a72", "Url": "https://api.github.com/repos/tgvaughan/EpiInf", "Date": "2013-11-15T23:02:04Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (a < (com.neophob.sematrix.glue.Collector.NR_OF_PRESENT_SLOTS)) { col.setSelectedPresent(a); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2090/buggy-version/src.main.java.com.neophob.sematrix.listener.MessageProcessor.java", "BodyUseAPI": ["com.neophob.sematrix.glue.Collector.setSelectedPresent(int)"], "Fixed commit": "b23da90fa62d3d26410353de80ac21092867681c", "Url": "https://api.github.com/repos/neophob/PixelController", "Date": "2012-12-12T13:33:47Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scrollMode) == null) { return com.neophob.sematrix.generator.ColorScroll.ScrollMode.EXPLODE_CIRCLE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2090/buggy-version/src.main.java.com.neophob.sematrix.generator.ColorScroll.java", "BodyUseAPI": [], "Fixed commit": "b23da90fa62d3d26410353de80ac21092867681c", "Url": "https://api.github.com/repos/neophob/PixelController", "Date": "2012-12-12T13:33:47Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.crafted.chrisb.ecoCreature.events.RewardEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (player != null) { dropCoin(player.getName(), reward); dropItems(reward); dropEntities(reward); plugin.getMetrics().addCount(reward.getName()); if (se.crafted.chrisb.ecoCreature.commons.ECLogger.getInstance().isDebug()) { se.crafted.chrisb.ecoCreature.commons.ECLogger.getInstance().debug(this.getClass(), (\"Added metrics count for \" + (reward.getName()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1879/buggy-version/src.main.java.se.crafted.chrisb.ecoCreature.events.listeners.RewardEventListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.getName()", "se.crafted.chrisb.ecoCreature.events.listeners.RewardEventListener.dropCoin(player.getName(),se.crafted.chrisb.ecoCreature.rewards.Reward)"], "Fixed commit": "d9cce3ee359a7e05413ccc9ee25a362b0c1c0c3f", "Url": "https://api.github.com/repos/Herocraft/ecoCreature", "Date": "2012-10-22T06:22:25Z"},
{"Line": "=>1224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ent.isOWLClass()) { cls = ent.asOWLClass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5074/buggy-version/src.main.java.gov.nih.nci.ui.NCIEditTab.java", "BodyUseAPI": ["org.semanticweb.owlapi.model.OWLEntity.asOWLClass()"], "Fixed commit": "0d46429853340a7631fa9161f130aabd0d299020", "Url": "https://api.github.com/repos/bdionne/nci-edit-tab", "Date": "2017-02-14T12:24:17Z"},
{"Line": "=>1230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cls != null) { setCurrentlyEditing(cls, true); classModified(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5074/buggy-version/src.main.java.gov.nih.nci.ui.NCIEditTab.java", "BodyUseAPI": ["gov.nih.nci.ui.NCIEditTab.setCurrentlyEditing(org.semanticweb.owlapi.model.OWLClass,boolean)"], "Fixed commit": "0d46429853340a7631fa9161f130aabd0d299020", "Url": "https://api.github.com/repos/bdionne/nci-edit-tab", "Date": "2017-02-14T12:24:17Z"},
{"Line": "=>816", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["engine.clients.Client.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((object.getGroupId()) != 0) && ((core.objectService.getObject(object.getGroupId())) instanceof resources.objects.group.GroupObject)) object.makeAware(core.objectService.getObject(object.getGroupId()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1345/buggy-version/src.services.SimulationService.java", "BodyUseAPI": ["core.objectService.getObject(object.getGroupId())", "resources.objects.creature.CreatureObject.getGroupId()", "resources.objects.creature.CreatureObject.makeAware(core.objectService.getObject(object.getGroupId()))"], "Fixed commit": "dfd7f1e9a92622db620889b7e88f1d9402df4191", "Url": "https://api.github.com/repos/ProjectSWGCore/NGECore2", "Date": "2014-03-29T17:32:29Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((outputTank.getCapacity()) + (recipe.getOutputFluids().get(0).amount)) > (outputTank.getCapacity())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1776/buggy-version/java.k4unl.minecraft.Hydraulicraft.tileEntities.consumers.TileHydraulicFilter.java", "BodyUseAPI": [], "Fixed commit": "795e760aa9b09cdf6f564bf75d7c90b31e72b8b3", "Url": "https://api.github.com/repos/K-4U/Hydraulicraft", "Date": "2016-02-12T11:34:02Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((outputTank.getCapacity()) + (recipe.getOutputFluids().get(0).amount)) > (outputTank.getCapacity())) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1776/buggy-version/java.k4unl.minecraft.Hydraulicraft.tileEntities.consumers.TileHydraulicFilter.java", "BodyUseAPI": [], "Fixed commit": "795e760aa9b09cdf6f564bf75d7c90b31e72b8b3", "Url": "https://api.github.com/repos/K-4U/Hydraulicraft", "Date": "2016-02-12T11:34:02Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (r == 0) r = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6061/buggy-version/app.src.main.java.acceptable_risk.nik.uniobuda.hu.andrawid.Color.java", "BodyUseAPI": [], "Fixed commit": "d33b2cefc3aec08580ce92038348a7301e63d212", "Url": "https://api.github.com/repos/Bence886/anDrawid", "Date": "2017-04-12T21:21:25Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (b == 0) b = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6061/buggy-version/app.src.main.java.acceptable_risk.nik.uniobuda.hu.andrawid.Color.java", "BodyUseAPI": [], "Fixed commit": "d33b2cefc3aec08580ce92038348a7301e63d212", "Url": "https://api.github.com/repos/Bence886/anDrawid", "Date": "2017-04-12T21:21:25Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (kb.hasNextLine()) kb.nextLine();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5284/buggy-version/src.edu.cpp.cs.cs141.final_project.UI.java", "BodyUseAPI": ["java.util.Scanner.nextLine()"], "Fixed commit": "7073b5efca50605fdb2ba055f481e82c6fa340f9", "Url": "https://api.github.com/repos/mrdanley/EscapeTheDungeonProject", "Date": "2016-11-28T05:26:55Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(com.jobviewer.util.Utils.isNullOrEmpty(eventType1))) { if (eventType1.equalsIgnoreCase(Utils.SHIFT_START)) { Utils.startShiftTimeRequest.setIs_overriden(ActivityConstants.TRUE); Utils.startShiftTimeRequest.setOverride_timestamp(time); }else { Utils.callStartTimeRequest.setIs_overriden(ActivityConstants.TRUE); Utils.callStartTimeRequest.setOverride_timestamp(time); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/801/buggy-version/JobViewer.src.com.jobviewer.util.ChangeTimeDialog.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(Utils.SHIFT_START)"], "Fixed commit": "5f241487f1c8197cd64ac3682f91b608f1b0d10c", "Url": "https://api.github.com/repos/raghunaikbadde/FieldViewer", "Date": "2016-05-10T17:10:16Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["at.becast.youploader.util.TagUtil.trimTags(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i < (tags.length)) { lenght += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2883/buggy-version/src.main.java.at.becast.youploader.util.TagUtil.java", "BodyUseAPI": [], "Fixed commit": "4ad6dbdbb8f5713b3b76f810508c80b60866a240", "Url": "https://api.github.com/repos/becast/YouPloader", "Date": "2016-04-24T01:30:23Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["v.getComponent(2).evaluate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (z == 0.0) { z = 1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1684/buggy-version/src.main.java.org.vorthmann.zome.app.impl.OrbitSetController.java", "BodyUseAPI": [], "Fixed commit": "c15d1cfd594cb31054a18d6df71857a973f2e68c", "Url": "https://api.github.com/repos/david-hall/vzome-desktop", "Date": "2017-08-12T00:46:08Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.record.impl.ODocumentHelper.getFieldValue(com.orientechnologies.orient.core.db.record.OIdentifiable,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((conditionFieldValue != null) && (fieldValue != null)) conditionFieldValue = com.orientechnologies.orient.core.metadata.schema.OType.convert(conditionFieldValue, fieldValue.getClass());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/399/buggy-version/core.src.main.java.com.orientechnologies.orient.core.record.impl.ODocumentHelper.java", "BodyUseAPI": ["com.orientechnologies.orient.core.metadata.schema.OType.convert(java.lang.Object,java.lang.Class<? extends java.lang.Object>)", "java.lang.Object.getClass()"], "Fixed commit": "7cdc98339c3fb2040667b56270a272a6c8c8a327", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-08-10T15:40:06Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (source.contains(\"**\")) { if (source.contains(\"\\\\\")) { source = source.replaceAll(\"\\\\\\\\\", \"/\"); source = source.replaceAll(\"/+\", \"/\"); } if (sources.contains(\"\\\\\")) { sources = sources.replaceAll(\"\\\\\\\\\", \"/\"); sources = sources.replaceAll(\"/+\", \"/\"); } java.lang.String[] sourceNodes = source.split(\"\\\\*\\\\*\"); for (int i = 0; i < (sourceNodes.length); i++) { if (sources.contains(sourceNodes[i])) { sources = sources.replaceFirst(sourceNodes[i], \"\"); }else if (((sourceNodes.length) - 1) == i) { if (sourceNodes[i].contains(\"/\")) { java.lang.String[] sourceNodesTmp = sourceNodes[i].split(\"/\"); for (int j = 0; j < (sourceNodesTmp.length); j++) { if (sources.contains(sourceNodesTmp[j])) { sources = sources.replaceFirst(sourceNodesTmp[j], \"\"); }else if ((org.apache.commons.lang3.StringUtils.indexOfAny(sourceNodesTmp[j], new java.lang.String[]{ \"*\", \"?\", \"[\", \"]\", \".\" })) >= 0) { sources = sources.substring(0, sources.lastIndexOf(\"/\")); } } }else if (sources.contains(\".\")) { sources = \"\"; } } } replacement = sources; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2335/buggy-version/src.main.java.com.crowdin.cli.utils.CommandUtils.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "f2e28c3ae2d25eeda6ffd32567cc89a738e1acaa", "Url": "https://api.github.com/repos/crowdin/crowdin-cli-2", "Date": "2017-08-03T08:01:51Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mp3bib.backend.mp3library.Mp3IO.getMP3Tags(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (mp3 != null) com.mp3bib.backend.BackendprocessService.getInstance().database.addEntry(mp3);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3184/buggy-version/src.main.java.com.mp3bib.backend.mp3library.Mp3IO.java", "BodyUseAPI": ["com.mp3bib.backend.BackendprocessService.getInstance().database.addEntry(com.beaglebuddy.mp3.MP3)"], "Fixed commit": "283715cc3e9dc8e82f2cc1b9b6924e950671fbc4", "Url": "https://api.github.com/repos/Saphs/Mp3Bib-Java", "Date": "2017-11-15T21:02:41Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.andrew.apollo.adapters.FileAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((file.canExecute()) && (file.canRead())) { mDirectory = file; mAdapter.changeDirectory(mDirectory); mListView.setSelection(0); }else com.devspark.appmsg.AppMsg.makeText(getActivity(), R.string.permission_denied, AppMsg.STYLE_ALERT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4402/buggy-version/src.com.andrew.apollo.ui.fragments.FileFragment.java", "BodyUseAPI": [], "Fixed commit": "4533d45d5e3ed0cbb438d677eb41ae7c0884a1a7", "Url": "https://api.github.com/repos/Elemir/Apollo", "Date": "2014-08-08T11:22:04Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFile.delete()) mAdapter.refresh(); else com.devspark.appmsg.AppMsg.makeText(getActivity(), R.string.cannot_delete, AppMsg.STYLE_ALERT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4402/buggy-version/src.com.andrew.apollo.ui.fragments.FileFragment.java", "BodyUseAPI": [], "Fixed commit": "4533d45d5e3ed0cbb438d677eb41ae7c0884a1a7", "Url": "https://api.github.com/repos/Elemir/Apollo", "Date": "2014-08-08T11:22:04Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.widgets.Tree.getSelection()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((selection.length) > 0) { org.eclipse.swt.widgets.TreeItem item = selection[0]; if ((item.getParentItem()) == null) { tree.deselectAll(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3540/buggy-version/CompositeLauncher2.src.com.github.dvefimov.launcher.ui.CompositeTab.java", "BodyUseAPI": [], "Fixed commit": "4f62bee1482cf6bb9c6606ff6a384d43a9ba0f5d", "Url": "https://api.github.com/repos/dvefimov/testRepo", "Date": "2014-06-25T19:11:47Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scouter.agent.trace.TraceMain.startService(java.lang.String,<nulltype>,<nulltype>,<nulltype>,<nulltype>,<nulltype>,XLogTypes.APP_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (localContext != null) { ((scouter.agent.trace.LocalContext) (localContext)).service = true; if (scouter.agent.trace.TraceMain.conf._trace_auto_service_backstack_enabled) { java.lang.String stack = scouter.agent.trace.ThreadUtil.getStackTrace(java.lang.Thread.currentThread().getStackTrace(), 2); scouter.agent.trace.AutoServiceStartAnalyzer.put(classMethod, stack); scouter.lang.step.MessageStep m = new scouter.lang.step.MessageStep(); m.message = \"SERVICE BACKSTACK:\\n\" + stack; ((scouter.agent.trace.LocalContext) (localContext)).context.profile.add(m); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4429/buggy-version/scouter.agent.java.src.scouter.agent.trace.TraceMain.java", "BodyUseAPI": [], "Fixed commit": "9c6a2b447b08a26d6572139a03d1c45c8b749fc4", "Url": "https://api.github.com/repos/scouter-project/scouter", "Date": "2016-08-01T10:27:25Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.deidentifier.arx.gui.model.Model.getInputDefinition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (definition == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1063/buggy-version/src.gui.org.deidentifier.arx.gui.model.Model.java", "BodyUseAPI": [], "Fixed commit": "0a010b15207e0dd6d3ed97e4fab78d4aa1fc45cb", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-06-26T10:17:33Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputConfig) == null) return null; else if ((inputConfig.getInput()) == null) return null; else return inputConfig.getInput().getDefinition();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1063/buggy-version/src.gui.org.deidentifier.arx.gui.model.Model.java", "BodyUseAPI": [], "Fixed commit": "0a010b15207e0dd6d3ed97e4fab78d4aa1fc45cb", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-06-26T10:17:33Z"},
{"Line": "=>830", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (configGroups.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/392/buggy-version/server.software-mgmt-plugin-ambari.src.main.java.com.vmware.bdd.plugin.ambari.service.AmbariImpl.java", "BodyUseAPI": [], "Fixed commit": "9099f640bc9f4f87cfcec28613120441b6494d5c", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-08-21T18:10:28Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valuesNb > 0) { if (outputLinks) { links = new java.lang.String[valuesNb]; } for (int i = 0; i < valuesNb; i++) { final java.lang.String val = values[i]; if (outputLinks) { links[i] = getTargetLink(val, jsonProperty.isPath()); } addReferencesIfNeeded(val); } if (outputLinks) { addLink(org.jahia.modules.jcrestapi.links.JSONLink.createLink(API.TARGET, links)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4987/buggy-version/src.main.java.org.jahia.modules.jcrestapi.links.APIDecorator.java", "BodyUseAPI": [], "Fixed commit": "261b2df438d4042e0c6fbf42275d1b21e3e62131", "Url": "https://api.github.com/repos/Jahia/jcrestapi", "Date": "2015-03-12T16:22:18Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getHandleContaining(x, y)) != null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/187/buggy-version/ui.src.main.java.com.kotcrab.vis.ui.widget.MultiSplitPane.java", "BodyUseAPI": [], "Fixed commit": "90e84cbe1b3c86dfc1ed4cc1333494f65e3764c4", "Url": "https://api.github.com/repos/ericnondahl/vis-editor", "Date": "2017-04-13T12:57:19Z"},
{"Line": "=>1080", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aquery.getResultListener()) != null) { aquery.getResultListener().end(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2676/buggy-version/client.src.main.java.com.orientechnologies.orient.client.remote.OStorageRemote.java", "BodyUseAPI": ["aquery.getResultListener().end()", "com.orientechnologies.orient.core.command.OCommandRequestText.getResultListener()"], "Fixed commit": "aebdf0e91eacb82f022dd532e2629c860645869d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-08-07T17:04:35Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (providedAcceptVersionsString != null) { java.lang.String[] providedAcceptVersions = providedAcceptVersionsString.split(\",\"); if (providedAcceptVersions != null) { map.put(\"version\", providedAcceptVersions); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2175/buggy-version/52n-wps-server.src.main.java.org.n52.wps.server.request.CapabilitiesRequest.java", "BodyUseAPI": [], "Fixed commit": "92f9b9af5da203e14832ddbda32f94e0fdbd52ac", "Url": "https://api.github.com/repos/52North/WPS", "Date": "2013-05-17T09:46:55Z"},
{"Line": "=>3001", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (t != null) { q.setCancelReason(\"NETWORK_FAILURE\"); q.setErrorDetail(((t.getMessage()) != null ? t.getMessage() : t.getClass().getName())); }else { q.setCancelReason(\"USER_REQUEST\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6502/buggy-version/src.main.java.com.logpresso.client.Logpresso.java", "BodyUseAPI": ["java.lang.Throwable.getMessage()", "java.lang.Throwable.getClass()", "java.lang.Throwable.getMessage()", "java.lang.Class<? extends java.lang.Throwable>.getName()", "com.logpresso.client.Query.setErrorDetail(((t.getMessage()) != null ? t.getMessage() : t.getClass().getName()))"], "Fixed commit": "80eaf268f78a9c1a7e2339a899ea77da816e743c", "Url": "https://api.github.com/repos/logpresso/logpresso-sdk-java", "Date": "2016-11-02T13:04:55Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 21) { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_DOCUMENT); }else { intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1323/buggy-version/app.src.main.java.com.example.android.sunshine.app.DetailActivity.java", "BodyUseAPI": [], "Fixed commit": "cddf971c34ffd9611679ae7f3eb67caf4993fd69", "Url": "https://api.github.com/repos/slmolloy/sunshine", "Date": "2016-05-21T20:24:27Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((order.getOrderTypeLimit().getOrderType()) != (OrderType.MarketOrder)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5261/buggy-version/src.main.java.com.euronextclone.OrderBook.java", "BodyUseAPI": [], "Fixed commit": "a423ce9cedd739d5a2fc262314f8950265435bbf", "Url": "https://api.github.com/repos/mattdavey/EuronextClone", "Date": "2012-07-21T02:13:05Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (limit == 0) { while ((limit < bufSize) && ((wrapInfo.get(limit)) == (org.daisy.pipeline.braille.common.AbstractBrailleTranslator.util.DefaultLineBreaker.SOFT_WRAP_AFTER_SPACE))) limit++; flushBuffer(limit); return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4796/buggy-version/pipeline-braille-utils.common-utils.src.main.java.org.daisy.pipeline.braille.common.AbstractBrailleTranslator.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Byte>.get(int)"], "Fixed commit": "d86079ac20b63872fc82f148e9bfa5bc28b46c5a", "Url": "https://api.github.com/repos/daisy/pipeline-mod-braille", "Date": "2016-01-20T11:20:58Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((disk.getHardwareUUID()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/553/buggy-version/server.dal.src.main.java.com.vmware.bdd.entity.NodeEntity.java", "BodyUseAPI": [], "Fixed commit": "b53da6a1847bc608c6526ae32bcd442251a0fabb", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-08-07T08:31:54Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((((((((((((((((((((((compareRate(wechatClient.getAppointStakeRate(), new java.math.BigDecimal(\"9.7\"))) && (compareRate(wechatClient.getRankingStakeRate(), new java.math.BigDecimal(\"1.94\")))) && (compareRate(wechatClient.getUpOrDownRate(), new java.math.BigDecimal(\"1.94\")))) && (compareRate(wechatClient.getFirstAddSecondOddRate(), new java.math.BigDecimal(\"1.63\")))) && (compareRate(wechatClient.getFirstAddSecondEvenRate(), new java.math.BigDecimal(\"2\")))) && (compareRate(wechatClient.getFirstAddSecondBigRate(), new java.math.BigDecimal(\"2\")))) && (compareRate(wechatClient.getFirstAddSecondSmallRate(), new java.math.BigDecimal(\"1.63\")))) && (compareRate(wechatClient.getFirstAddSecondAppoint3StakeRate(), new java.math.BigDecimal(\"41\")))) && (compareRate(wechatClient.getFirstAddSecondAppoint4StakeRate(), new java.math.BigDecimal(\"41\")))) && (compareRate(wechatClient.getFirstAddSecondAppoint5StakeRate(), new java.math.BigDecimal(\"21\")))) && (compareRate(wechatClient.getFirstAddSecondAppoint6StakeRate(), new java.math.BigDecimal(\"21\")))) && (compareRate(wechatClient.getFirstAddSecondAppoint7StakeRate(), new java.math.BigDecimal(\"12\")))) && (compareRate(wechatClient.getFirstAddSecondAppoint8StakeRate(), new java.math.BigDecimal(\"12\")))) && (compareRate(wechatClient.getFirstAddSecondAppoint9StakeRate(), new java.math.BigDecimal(\"10.3\")))) && (compareRate(wechatClient.getFirstAddSecondAppoint10StakeRate(), new java.math.BigDecimal(\"10.3\")))) && (compareRate(wechatClient.getFirstAddSecondAppoint11StakeRate(), new java.math.BigDecimal(\"8.3\")))) && (compareRate(wechatClient.getFirstAddSecondAppoint12StakeRate(), new java.math.BigDecimal(\"10.3\")))) && (compareRate(wechatClient.getFirstAddSecondAppoint13StakeRate(), new java.math.BigDecimal(\"10.3\")))) && (compareRate(wechatClient.getFirstAddSecondAppoint14StakeRate(), new java.math.BigDecimal(\"12\")))) && (compareRate(wechatClient.getFirstAddSecondAppoint15StakeRate(), new java.math.BigDecimal(\"12\")))) && (compareRate(wechatClient.getFirstAddSecondAppoint16StakeRate(), new java.math.BigDecimal(\"21\")))) && (compareRate(wechatClient.getFirstAddSecondAppoint17StakeRate(), new java.math.BigDecimal(\"21\")))) && (compareRate(wechatClient.getFirstAddSecondAppoint18StakeRate(), new java.math.BigDecimal(\"41\")))) && (compareRate(wechatClient.getFirstAddSecondAppoint19StakeRate(), new java.math.BigDecimal(\"41\")))) { int result = wechatClientRepo.update(wechatClient); if (result == 1) { return com.racing.controller.vo.ApiResult.createSuccessReuslt(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3223/buggy-version/racing_server.src.main.java.com.racing.service.user.WechatClientService.java", "BodyUseAPI": ["com.racing.model.repo.WechatClientRepo.update(com.racing.model.po.WechatClient)"], "Fixed commit": "12a66ba604fcd3c19f609d78211f2e07f48ece9d", "Url": "https://api.github.com/repos/leon-repository/racing_server", "Date": "2016-10-16T04:31:10Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAlive()) setHealthPoint(((getHealthPoint()) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4784/buggy-version/core.src.com.group12.cookiesrising.GameObjects.Mage.java", "BodyUseAPI": [], "Fixed commit": "e4e6d27de0a072a3f4c2a0c83d53f3cf031f1a4a", "Url": "https://api.github.com/repos/b5710546232/Cookie-rising", "Date": "2016-05-31T11:37:14Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAlive()) setHealthPoint(((getHealthPoint()) + 2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4784/buggy-version/core.src.com.group12.cookiesrising.GameObjects.Warrior.java", "BodyUseAPI": [], "Fixed commit": "e4e6d27de0a072a3f4c2a0c83d53f3cf031f1a4a", "Url": "https://api.github.com/repos/b5710546232/Cookie-rising", "Date": "2016-05-31T11:37:14Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAlive()) setHealthPoint(((getHealthPoint()) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4784/buggy-version/core.src.com.group12.cookiesrising.GameObjects.Gunner.java", "BodyUseAPI": [], "Fixed commit": "e4e6d27de0a072a3f4c2a0c83d53f3cf031f1a4a", "Url": "https://api.github.com/repos/b5710546232/Cookie-rising", "Date": "2016-05-31T11:37:14Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(googleReverse.get(\"status\").toString().equals(\"OK\"))) || (!(Tools.FixData.getValue(googleReverse.get(\"iso\")).toLowerCase().equals(Tools.FixData.getValue(entity.get(\"final_iso2\")).toLowerCase())))) comments += \". Coordinates do not match to country in source data\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3627/buggy-version/OccurrencesValidation.src.Controllers.Occurrences.CTempOccurrences.java", "BodyUseAPI": [], "Fixed commit": "e4165a45dff79f38a6e697cceef4746b4ea17e88", "Url": "https://api.github.com/repos/CIAT-DAPA/cwr_occurrencesvalidation", "Date": "2015-07-02T13:26:27Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (context.isAuthorized()) { if (offline) { org.telegram.api.UserStore.getInstance().updateUserStatus(context.getUserId(), new org.telegram.tl.account.UserStatusOffline()); }else { org.telegram.api.UserStore.getInstance().updateUserStatus(context.getUserId(), new org.telegram.tl.account.UserStatusOnline(120)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2161/buggy-version/src.org.telegram.tl.account.UpdateStatus.java", "BodyUseAPI": ["org.telegram.api.TLContext.getUserId()", "org.telegram.api.UserStore.getInstance().updateUserStatus(context.getUserId(),org.telegram.tl.account.UserStatusOnline)", "org.telegram.api.UserStore.getInstance().updateUserStatus(context.getUserId(),org.telegram.tl.account.UserStatusOffline)", "org.telegram.api.TLContext.getUserId()"], "Fixed commit": "e0368c418f457159a89bcd47a05d2cf205cc39ae", "Url": "https://api.github.com/repos/aykutalparslan/Telegram-Server", "Date": "2015-12-03T22:03:14Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(modelProcessor instanceof org.sourcepit.b2.maven.internal.wrapper.B2ModelProcessor)) { throw new java.lang.IllegalArgumentException(\"Maven default module processor is expected to ne overriden by a b2 specific implementation.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6390/buggy-version/b2-bootstrapper.src.main.java.org.sourcepit.b2.maven.internal.wrapper.B2Bootstrapper.java", "BodyUseAPI": [], "Fixed commit": "081a0ecf4d990e52ae15eb4aa6186e4215dfa07c", "Url": "https://api.github.com/repos/sourcepit/b2", "Date": "2014-04-07T11:33:51Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.monster.taint.Monster.v().isSink(((soot.jimple.Stmt) (currUnit)))) { logger.info(\"Oh, my God! We arrived at Sink!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4480/buggy-version/soot-infoflow.src.com.monster.taint.problem.ForwardsProblem.java", "BodyUseAPI": [], "Fixed commit": "170bec40ab8795fa0f93644a504aae47bd8e50ce", "Url": "https://api.github.com/repos/0-14N/Monster", "Date": "2014-02-26T14:36:12Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.equals(root)) name = name + \"index.html\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4416/buggy-version/com.buglabs.bug.base.bug20.com.buglabs.bug.base.Activator.java", "BodyUseAPI": [], "Fixed commit": "375e31b5a57d5dddc51cfa5159ea89d7284fbe22", "Url": "https://api.github.com/repos/buglabs/bug-osgi", "Date": "2011-07-15T23:45:03Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.mh4j.examples.solver.LocalSearchSorter.nextInt(((currentSolution.getAmountOfNumbers()) - 1))", "de.mh4j.examples.solver.LocalSearchSorter.nextInt(currentSolution.getAmountOfNumbers())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (randomIndex1 <= randomIndex2) { randomIndex2++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2152/buggy-version/MetaHeuristics4Java-Examples.src.main.java.de.mh4j.examples.solver.LocalSearchSorter.java", "BodyUseAPI": [], "Fixed commit": "0d540432feceb6995da964618a4a4d016a753608", "Url": "https://api.github.com/repos/MH4J/MetaHeuristics4Java", "Date": "2012-05-17T13:13:41Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (refname != null) { java.lang.String[] authorityNameWithKey = refname.split(\":\"); crs = org.cts.crs.CRSHelper.createCoordinateReferenceSystem(new org.cts.Identifier(authorityNameWithKey[0], authorityNameWithKey[1], name), prjParameters); }else { crs = org.cts.crs.CRSHelper.createCoordinateReferenceSystem(new org.cts.Identifier(name, name, name), prjParameters); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2192/buggy-version/src.main.java.org.cts.parser.prj.PrjParser.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "c3d81a47f1c0d796b2ad995dfc9d51c344548d36", "Url": "https://api.github.com/repos/ebocher/CTS", "Date": "2013-06-20T07:38:13Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < (rb.size())) ndirs.add(rb.get(i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2637/buggy-version/src.org.avuna.httpd.dns.zone.ZoneFile.java", "BodyUseAPI": ["java.util.ArrayList<org.avuna.httpd.dns.zone.IDirective>.add(rb.get(i))", "java.util.ArrayList<org.avuna.httpd.dns.zone.IDirective>.get(int)"], "Fixed commit": "0e2d614f7174e7df6900198ae3aa3e9f255e4367", "Url": "https://api.github.com/repos/paullaz/Avuna-HTTPD", "Date": "2015-07-05T19:33:28Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (viewHolderInfo == null) { java.lang.Class<? extends com.dancing.bigw.lib.adapter.BaseViewHolder> viewHolderClass = viewHolderInfoProvider.getViewHolderClass(item); com.dancing.bigw.lib.adapter.ViewHolderActionListener actionListener = viewHolderInfoProvider.getActionListener(item); viewHolderInfo = new com.dancing.bigw.lib.adapter.BaseAdapter.ViewHolderInfo(viewHolderClass, actionListener); mViewHolderInfos.put(generatedViewType, viewHolderInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8547/buggy-version/lib.src.main.java.com.dancing.bigw.lib.adapter.BaseAdapter.java", "BodyUseAPI": [], "Fixed commit": "f1237a85c9ed86e00ef9dd6503e538ed3eb980c8", "Url": "https://api.github.com/repos/wangfangbing/Tango", "Date": "2017-08-27T14:42:52Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { positionExo = player.getCurrentPosition(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2297/buggy-version/app.src.main.java.com.udacity.bakingapp.RecipeDetailVideoFragment.java", "BodyUseAPI": [], "Fixed commit": "11f0ff2b01de8ad44ac8688fdf21c708f58f55e1", "Url": "https://api.github.com/repos/pahlevikun/BakingApp", "Date": "2017-10-21T00:54:25Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!supportReadOnly) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8960/buggy-version/src.main.java.com.alibaba.fastjson.parser.JavaBeanInfo.java", "BodyUseAPI": [], "Fixed commit": "cb6c561353716ba4e61cfd4bd4712e7d022667af", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-06-27T02:44:37Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((modifiers & (java.lang.reflect.Modifier.FINAL)) != 0) { java.lang.Class<?> fieldType = f.getType(); boolean supportReadOnly = (java.util.Map.class.isAssignableFrom(fieldType)) || (java.util.Collection.class.isAssignableFrom(fieldType)); if (!supportReadOnly) { continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8960/buggy-version/src.main.java.com.alibaba.fastjson.parser.JavaBeanInfo.java", "BodyUseAPI": [], "Fixed commit": "cb6c561353716ba4e61cfd4bd4712e7d022667af", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-06-27T02:44:37Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((modifiers & (java.lang.reflect.Modifier.PUBLIC)) != 0) { classfields.add(f); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8960/buggy-version/src.main.java.com.alibaba.fastjson.parser.JavaBeanInfo.java", "BodyUseAPI": [], "Fixed commit": "cb6c561353716ba4e61cfd4bd4712e7d022667af", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-06-27T02:44:37Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((asteroids[j].orbit.a) < (asteroids[i].orbit.a)) energySum += pb.g5.Hohmann.transfer(asteroids[j], asteroids[i].orbit.a); else energySum += pb.g5.Hohmann.reverseTransfer(asteroids[j], asteroids[i].orbit.a);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/699/buggy-version/g5.Hohmann.java", "BodyUseAPI": ["pb.g5.Hohmann.reverseTransfer(asteroids[j],asteroids[i].orbit.a)", "pb.g5.Hohmann.transfer(asteroids[j],asteroids[i].orbit.a)"], "Fixed commit": "e738bb060a47330ba87e8219f9718baaaa796b87", "Url": "https://api.github.com/repos/amardhingra/Planet-Builder", "Date": "2015-10-21T03:08:59Z"},
{"Line": "=>891", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getCurrentWeek()) != 1) && (seasonStarted)) { for (int i = 0; i < (coffs.size()); i++) { data.Contestant c = new data.Contestant(); c.fromJSONObject(((json.simple.JSONObject) (coffs.get(i)))); try { setCastOff(i, c); } catch (java.lang.NullPointerException ie) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/710/buggy-version/src.data.GameData.java", "BodyUseAPI": [], "Fixed commit": "708e535fcc1dfb8edd68f0f11a9f473c4012244d", "Url": "https://api.github.com/repos/CS2212-2012-G2/SurvivorPool", "Date": "2012-03-29T17:47:22Z"},
{"Line": "=>912", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentWeek()) >= 2) selections.fromJSONObject(obj);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/710/buggy-version/src.data.GameData.java", "BodyUseAPI": [], "Fixed commit": "708e535fcc1dfb8edd68f0f11a9f473c4012244d", "Url": "https://api.github.com/repos/CS2212-2012-G2/SurvivorPool", "Date": "2012-03-29T17:47:22Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (shownDialog != null) { fragmentTransaction.remove(shownDialog); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6268/buggy-version/TrainingApplication.app.src.main.java.com.company.mbelogorodtsev.trainingapplication.HomeActivity.java", "BodyUseAPI": ["android.support.v4.app.FragmentTransaction.remove(android.support.v4.app.Fragment)"], "Fixed commit": "a747a2448647099751c1a0d93a3669cfa157fc74", "Url": "https://api.github.com/repos/mawhi/AndroidFirstTask", "Date": "2015-08-28T05:54:53Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modItems) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6498/buggy-version/src.main.java.org.mapdb.TxMaker.java", "BodyUseAPI": [], "Fixed commit": "a8dec630ba8dff79a411ea78e9391ded113d5eb2", "Url": "https://api.github.com/repos/jankotek/MapDB", "Date": "2013-06-01T22:22:30Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isClosed()) throw new java.lang.IllegalAccessError(\"already closed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6498/buggy-version/src.main.java.org.mapdb.TxMaker.java", "BodyUseAPI": [], "Fixed commit": "a8dec630ba8dff79a411ea78e9391ded113d5eb2", "Url": "https://api.github.com/repos/jankotek/MapDB", "Date": "2013-06-01T22:22:30Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isClosed()) throw new java.lang.IllegalAccessError(\"already closed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6498/buggy-version/src.main.java.org.mapdb.TxMaker.java", "BodyUseAPI": [], "Fixed commit": "a8dec630ba8dff79a411ea78e9391ded113d5eb2", "Url": "https://api.github.com/repos/jankotek/MapDB", "Date": "2013-06-01T22:22:30Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pDialog.isShowing()) pDialog.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4114/buggy-version/XMLParser.app.src.main.java.com.abhishek.pal.xmlparser.MainActivity.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "3ba98b02b9108416311f3e186cb22312d0985201", "Url": "https://api.github.com/repos/PalAbhi/DisasterManagement", "Date": "2017-07-04T08:31:27Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.rascalmpl.values.uptr.TreeAdapter.isAppl(((org.eclipse.imp.pdb.facts.IConstructor) (argValues[0]))))) { throw new org.rascalmpl.interpreter.control_exceptions.MatchFailed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2349/buggy-version/src.org.rascalmpl.interpreter.result.ConcretePatternDispatchedFunction.java", "BodyUseAPI": [], "Fixed commit": "3d6f5506e20db552f578bdc41f211c8c62c83987", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2013-07-26T14:25:23Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mapFile.exists()) { map = new bomber.BomberMap(mapFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1519/buggy-version/bomber.src.main.java.bomber.graphics.GameUI.java", "BodyUseAPI": [], "Fixed commit": "0d38aa6c2029916a3b62f6ad969243385b5a3e42", "Url": "https://api.github.com/repos/mbordas/cogamu", "Date": "2016-08-17T20:51:14Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mifos.application.servicefacade.ApplicationContextProvider.getBean(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (personnelServiceFacade != null) { java.lang.String value = messageSource.getMessage(this.name(), null, personnelServiceFacade.getUserPreferredLocale()); if (org.apache.commons.lang.StringUtils.isNotEmpty(message)) { message = value; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3365/buggy-version/appdomain.src.main.java.org.mifos.framework.util.helpers.ConversionError.java", "BodyUseAPI": ["org.springframework.context.MessageSource.getMessage(java.lang.String,<nulltype>,personnelServiceFacade.getUserPreferredLocale())", "org.mifos.application.admin.servicefacade.PersonnelServiceFacade.getUserPreferredLocale()"], "Fixed commit": "d657d362dec790a6dc37006268d75820135a848b", "Url": "https://api.github.com/repos/mifos/head", "Date": "2012-04-08T08:13:18Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.beans.admin.AdminController.getUserFull(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((theModifiedUser.isPropertyUpdatableByUser(property.getKey())) || ((isAdmin()) && (theModifiedUser.isPropertyUpdatableByAdmin(property.getKey())))) { theModifiedUser.setValue(property.getKey(), property.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8987/buggy-version/war-core.src.main.java.com.silverpeas.socialnetwork.myProfil.control.MyProfilSessionController.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "com.stratelia.webactiv.beans.admin.UserFull.setValue(java.lang.String,java.lang.String)"], "Fixed commit": "84b4b45b12eb083fa066fabc7109a1b74e95b125", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Core", "Date": "2015-08-26T09:38:01Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.infinispan.commands.remote.GMUClusteredGetCommand.log.isTraceEnabled()) { org.infinispan.commands.remote.GMUClusteredGetCommand.log.tracef(\"Max GMU version=%s, this node value=%s, Non-Existing=%s\", maxGMUVersion, (maxGMUVersion != null ? maxGMUVersion.getThisNodeVersionValue() : \"N/A\"), GMUEntryVersion.NON_EXISTING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/278/buggy-version/core.src.main.java.org.infinispan.commands.remote.GMUClusteredGetCommand.java", "BodyUseAPI": ["org.infinispan.util.logging.Log.tracef(java.lang.String,org.infinispan.container.versioning.gmu.GMUEntryVersion,(maxGMUVersion != null ? maxGMUVersion.getThisNodeVersionValue() : \"N/A\"),GMUEntryVersion.NON_EXISTING)"], "Fixed commit": "975398bb490c36fd49d11e7c4ce220d55431b62e", "Url": "https://api.github.com/repos/pruivo/infinispan", "Date": "2012-11-28T19:26:07Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((score) > (highscore)) { highscore = score; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8721/buggy-version/src.com.denyszaiats.myreactions.RememberColorFragment.java", "BodyUseAPI": [], "Fixed commit": "bc4edbe24671cde04376c64db57a78a6b5e1241a", "Url": "https://api.github.com/repos/dayok/myreactions", "Date": "2014-12-19T16:50:50Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.mjr.extraplanets.Config.RADIATION) this.potashGen = new micdoodle8.mods.galacticraft.core.world.gen.WorldGenMinableMeta(com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.ORE_POTASH, 5, 0, true, com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.MERCURY_BLOCKS, 2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7741/buggy-version/src.main.java.com.mjr.extraplanets.planets.Mercury.worldgen.BiomeDecoratorMercury.java", "BodyUseAPI": [], "Fixed commit": "d99d703470164ed2317f30e41a598fc57cb22dda", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-07-07T15:22:31Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.RADIATION) this.generateOre(10, this.potashGen, 0, 20);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7741/buggy-version/src.main.java.com.mjr.extraplanets.planets.Mercury.worldgen.BiomeDecoratorMercury.java", "BodyUseAPI": [], "Fixed commit": "d99d703470164ed2317f30e41a598fc57cb22dda", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-07-07T15:22:31Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spoon.reflect.visitor.ImportScannerImpl.addClassImport(spoon.reflect.reference.CtTypeReference)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (importSuccess) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4665/buggy-version/src.main.java.spoon.reflect.visitor.ImportScannerImpl.java", "BodyUseAPI": [], "Fixed commit": "c0bf4369f9da90c65f4ed5346b63689aa93839e4", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2017-06-22T09:52:34Z"},
{"Line": "=>1102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.importsContext.isImported(invocation.getExecutable()))) { try (spoon.reflect.visitor.PrintingContext.Writable _context = context.modify()) { if ((invocation.getTarget()) instanceof spoon.reflect.code.CtTypeAccess) { _context.ignoreGenerics(true); } scan(invocation.getTarget()); } if (printer.hasNewContent()) { printer.write(\".\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4665/buggy-version/src.main.java.spoon.reflect.visitor.DefaultJavaPrettyPrinter.java", "BodyUseAPI": ["spoon.reflect.visitor.DefaultJavaPrettyPrinter.scan(invocation.getTarget())", "spoon.reflect.code.CtInvocation<T>.getTarget()", "spoon.reflect.code.CtInvocation<T>.getTarget()"], "Fixed commit": "c0bf4369f9da90c65f4ed5346b63689aa93839e4", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2017-06-22T09:52:34Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasPickedUp) { container.onContainerClosed(entityPlayer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/472/buggy-version/src.main.java.de.eydamos.backpack.util.BackpackUtil.java", "BodyUseAPI": [], "Fixed commit": "b2725aac0110890ee7acfc123c7d828ea44662e6", "Url": "https://api.github.com/repos/Eydamos/Minecraft-Backpack-Mod", "Date": "2014-09-27T13:32:20Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase(java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((ix = msgL.indexOf(GhcMessages.CAST_FROM_CHAR_SHORT)) > 1) { addPragma(res, \"-XOverloadedStrings\"); }else if ((ix = msgL.indexOf(GhcMessages.CAST_FROM_CHAR_7_8)) > 1) { addPragma(res, \"-XOverloadedStrings\"); }else if ((ix = msgL.indexOf(GhcMessages.CAST_FROM_CHAR_SHORT_7_8)) > 1) { addPragma(res, \"-XOverloadedStrings\"); }else if ((msgL.indexOf(GhcMessages.MISSING_MODULE)) > (-1)) { int start = GhcMessages.MISSING_MODULE.length(); int length = GhcMessages.MISSING_MODULE_ADD_START.length(); ix = msgL.indexOf(GhcMessages.MISSING_MODULE_ADD_START, start); if (ix == (-1)) { ix = msgL.indexOf(GhcMessages.MISSING_MODULE_ADD_START_7_8, ix); length = GhcMessages.MISSING_MODULE_ADD_START_7_8.length(); } if (ix > (-1)) { java.util.Set<java.lang.String> pkgs = new java.util.HashSet<>(); while (ix > (-1)) { int ix2 = msgL.indexOf(GhcMessages.MISSING_MODULE_ADD_END, ix); if (ix2 == (-1)) { ix2 = msgL.indexOf(GhcMessages.MISSING_MODULE_ADD_END_7_8, ix); } if (ix2 > (-1)) { java.lang.String pkg = msg.substring((ix + length), ix2); if (pkgs.add(pkg)) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.AddPackageDependency(pkg)); } ix = ix2; } int st = ix + 1; length = GhcMessages.MISSING_MODULE_ADD_START.length(); ix = msgL.indexOf(GhcMessages.MISSING_MODULE_ADD_START, st); if (ix == (-1)) { ix = msgL.indexOf(GhcMessages.MISSING_MODULE_ADD_START_7_8, st); length = GhcMessages.MISSING_MODULE_ADD_START_7_8.length(); } } } int l = msgL.indexOf(\"\\n\", (start + 1)); if (l > (-1)) { java.lang.String sug = msg.substring(l); java.util.List<java.lang.String> suggestions = net.sf.eclipsefp.haskell.ui.internal.resolve.ReplaceTextResolution.getSuggestionsFromGHCMessage(sug, msgL.substring(l)); msgL = msgL.substring(0, l); int end = msgL.lastIndexOf(GhcMessages.NOT_IN_SCOPE_END); if (end == (-1)) { end = msgL.lastIndexOf(GhcMessages.NOT_IN_SCOPE_END_7_8); } java.lang.String notInScope = msg.substring((start + 2), end); for (java.lang.String suggestion : suggestions) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.ReplaceTextResolution(notInScope, suggestion)); } } }else if ((ix = msgL.indexOf(GhcMessages.NOT_IN_SCOPE_START)) > (-1)) { net.sf.eclipsefp.haskell.ui.internal.resolve.ResolutionSuggestion s = new net.sf.eclipsefp.haskell.ui.internal.resolve.ResolutionSuggestion(msg, ix, msgL); if ((s.getSuggestions()) != null) { for (java.lang.String suggestion : s.getSuggestions()) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.ReplaceTextResolution(s.getOutOfScope(), suggestion)); } } addBrowserSuggestions(marker, s.getOutOfScopeName(), s.getOutOfScopeQualifier(), res); addUsageSuggestions(marker, s.getOutOfScopeName(), s.getOutOfScopeQualifier(), res); }else if ((msgL.indexOf(GhcMessages.IS_A_DATA_CONSTRUCTOR)) > (-1)) { int btix = msg.indexOf('`'); int sqix = msg.indexOf('\\'', btix); btix = msg.indexOf('`', sqix); sqix = msg.indexOf('\\'', btix); java.lang.String constructor = msg.substring((btix + 1), sqix); btix = msg.indexOf('`', sqix); sqix = msg.indexOf('\\'', btix); java.lang.String type = msg.substring((btix + 1), sqix); res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.ReplaceImportElement(constructor, (((type + \"(\") + constructor) + \")\"))); res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.ReplaceImportElement(constructor, (type + \"(..)\"))); }else if ((msgL.indexOf(GhcMessages.DO_DISCARDED_START)) > (-1)) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.AddGhcPragmaResolution(\"-fno-warn-unused-do-bind\")); res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.AddGHCOptionResolution(\"-fno-warn-unused-do-bind\")); }else if ((ix = msgL.indexOf(CabalMessages.DEPENDENCIES_MISSING)) > (-1)) { if (!(net.sf.eclipsefp.haskell.ui.internal.backend.BackendManager.getCabalImplDetails().isSandboxed())) { int nlid = msg.indexOf(\"\\n\", ix); java.util.Set<java.lang.String> all = new java.util.HashSet<>(); for (java.lang.String s : msg.substring(nlid).split(\"\\\\n\")) { s = s.trim(); if ((s.length()) > 0) { for (java.lang.String p : s.split(\",\")) { p = p.trim(); if (p.endsWith(CabalMessages.ANY)) { p = p.substring(0, ((p.length()) - (CabalMessages.ANY.length()))).trim(); } all.add(p); res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.InstallMissingPackage(java.util.Collections.singleton(p))); } } } if ((all.size()) > 1) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.InstallMissingPackage(all)); } }else { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.InstallDeps()); } }else if ((msgL.indexOf(GhcMessages.NAKED)) > (-1)) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.AddLanguagePragmaResolution(\"TemplateHaskell\")); }else if ((msgL.indexOf(GhcMessages.INPUT_CASE)) > (-1)) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.AddLanguagePragmaResolution(\"LambdaCase\")); }else if ((ix = msgL.indexOf(CabalMessages.CABAL_VERSION)) > (-1)) { ix += CabalMessages.CABAL_VERSION.length(); int ix2 = msgL.indexOf('\\'', ix); if (ix2 > (-1)) { java.lang.String value = msg.substring(ix, ix2).trim(); if ((value.length()) > 0) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.CabalFieldSetter(net.sf.eclipsefp.haskell.core.cabalmodel.CabalSyntax.FIELD_CABAL_VERSION, value)); } } }else if ((msg.indexOf(\"DeriveDataTypeable\")) > (-1)) { res.add(new net.sf.eclipsefp.haskell.ui.internal.resolve.AddLanguagePragmaResolution(\"DeriveDataTypeable\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3468/buggy-version/net.sf.eclipsefp.haskell.ui.src.net.sf.eclipsefp.haskell.ui.internal.resolve.BuildMarkerResolutionGenerator.java", "BodyUseAPI": ["net.sf.eclipsefp.haskell.ui.internal.resolve.ReplaceTextResolution.getSuggestionsFromGHCMessage(java.lang.String,java.lang.String)", "java.lang.String.indexOf(GhcMessages.MISSING_MODULE_ADD_END_7_8,int)", "java.lang.String.indexOf(GhcMessages.CAST_FROM_CHAR_SHORT_7_8)", "java.lang.String.substring(int)", "java.lang.String.indexOf(GhcMessages.MISSING_MODULE_ADD_START,int)", "java.lang.String.indexOf(GhcMessages.MISSING_MODULE_ADD_START_7_8,int)", "java.lang.String.indexOf(GhcMessages.MISSING_MODULE)", "java.lang.String.indexOf(java.lang.String,int)", "java.lang.String.indexOf(GhcMessages.CAST_FROM_CHAR_7_8)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(GhcMessages.MISSING_MODULE_ADD_START,int)", "java.lang.String.indexOf(GhcMessages.MISSING_MODULE_ADD_START_7_8,int)", "java.lang.String.indexOf(GhcMessages.MISSING_MODULE_ADD_END,int)"], "Fixed commit": "963e71ea30d749656bb1a1c92bd12d86bf1d9c4a", "Url": "https://api.github.com/repos/JPMoresmau/eclipsefp", "Date": "2014-07-01T15:11:39Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (favoritos) datos = emcafoz.com.snackatap.modelos.Producto.getFavs(); else datos = emcafoz.com.snackatap.modelos.Producto.ALL;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7324/buggy-version/app.src.main.java.emcafoz.com.snackatap.ListaProductos.java", "BodyUseAPI": [], "Fixed commit": "2f0c40928e07ad137f5ff1cdae73c992d6ce9eb1", "Url": "https://api.github.com/repos/aranchafoz/SnackATap", "Date": "2016-03-13T19:06:16Z"},
{"Line": "=>1564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.egit.ui.internal.history.SWTWalk.parseAny(ref.getObjectId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (refTarget instanceof org.eclipse.jgit.revwalk.RevCommit) currentWalk.markStart(((org.eclipse.jgit.revwalk.RevCommit) (refTarget)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5340/buggy-version/org.eclipse.egit.ui.src.org.eclipse.egit.ui.internal.history.GitHistoryPage.java", "BodyUseAPI": [], "Fixed commit": "85f284e4e995fd11de1f54dedac9e6d3ffe5d82f", "Url": "https://api.github.com/repos/mdoninger/egit", "Date": "2011-03-30T23:04:23Z"},
{"Line": "=>896", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.getCastDate()) == (getCurrentWeek())) { this.setElimCont(c); this.setElimExists(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6953/buggy-version/src.data.GameData.java", "BodyUseAPI": ["data.GameData.setElimCont(data.Contestant)"], "Fixed commit": "a75c46b90cb79c6a7ed7e0d22913b7474c66b3e0", "Url": "https://api.github.com/repos/CS2212-2012-G2/SurvivorPool", "Date": "2012-03-31T00:28:27Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (command.hasParameter(\"priceId\")) { priceId = command.longValueOfParameterNamed(\"priceId\"); }else { priceId = ((long) (0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8400/buggy-version/obsplatform.src.main.java.org.mifosplatform.organisation.voucher.domain.Voucher.java", "BodyUseAPI": ["org.mifosplatform.infrastructure.core.api.JsonCommand.longValueOfParameterNamed(java.lang.String)"], "Fixed commit": "0b6b8a618dc36de42de73a56f981f576163dc8f9", "Url": "https://api.github.com/repos/kiranhugo/Project-One", "Date": "2015-02-26T10:19:26Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.defano.hypercard.parts.field.SelectableTextModel.getSelection()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((selection.length()) == 0) { return new com.defano.hypertalk.ast.common.Value(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6851/buggy-version/src.main.java.com.defano.hypercard.parts.field.AddressableSelection.java", "BodyUseAPI": [], "Fixed commit": "ccaa112227fa994550c47b1dfae401e304472d3a", "Url": "https://api.github.com/repos/defano/wyldcard", "Date": "2017-11-22T01:13:51Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentPhase == (Phase.REQUEST)) { long startId = (java.lang.Long.parseLong(p.getProperty(\"maxid1\"))) + 1; LOG.info((\"Request phase: setting startId to \" + startId)); idGenerator.set(startId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5101/buggy-version/src.main.java.edu.berkeley.cs.LinkStoreNeo4j.java", "BodyUseAPI": [], "Fixed commit": "8c426a21cc89ba641cb11fd16622107bdf886bd4", "Url": "https://api.github.com/repos/anuragkh/linkbench", "Date": "2016-08-02T08:34:06Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getBuild()) != null) { for (org.apache.maven.model.Plugin plugin : model.getBuild().getPlugins()) { if (!(\"maven-compiler-plugin\".equals(plugin.getArtifactId()))) { continue; } org.codehaus.plexus.util.xml.Xpp3Dom configuration = ((org.codehaus.plexus.util.xml.Xpp3Dom) (plugin.getConfiguration())); org.codehaus.plexus.util.xml.Xpp3Dom source = configuration.getChild(\"source\"); if (source != null) { return java.lang.Integer.parseInt(extractVariable(source.getValue()).substring(2)); } break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6147/buggy-version/src.main.java.spoon.MavenLauncher.java", "BodyUseAPI": ["org.apache.maven.model.Model.getBuild()", "model.getBuild().getPlugins()"], "Fixed commit": "332939edd7d389ce1e089dd85e3d34776b181017", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2017-11-13T16:22:54Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((d.getStatus()) == (nz.emissary.emissaryapp.Constants.STATUS_ACCEPTED)) { viewHolder.mView.findViewById(R.id.list_view_root).setBackground(getResources().getDrawable(R.drawable.selector_row_accepted)); }else if ((d.getStatus()) == (nz.emissary.emissaryapp.Constants.STATUS_DELIVERED)) { viewHolder.mView.findViewById(R.id.list_view_root).setBackground(getResources().getDrawable(R.drawable.selector_row_delivered)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4523/buggy-version/app.src.main.java.nz.emissary.emissaryapp.activities.ViewMyListingsActivity.java", "BodyUseAPI": ["nz.emissary.emissaryapp.Delivery.getStatus()"], "Fixed commit": "6ef3b98d18f61483a29d837f865d5a9105b6cda1", "Url": "https://api.github.com/repos/SDupZ/EmissaryApp", "Date": "2016-03-08T09:34:44Z"},
{"Line": "=>909", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.almalence.opencam.cameracontroller.CameraController.cameraParameters) != null) { java.util.List<android.hardware.Camera.Size> sizes = com.almalence.opencam.cameracontroller.CameraController.cameraParameters.getSupportedPictureSizes(); for (android.hardware.Camera.Size sz : sizes) pictureSizes.add(this.new Size(sz.width, sz.height)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5738/buggy-version/src.com.almalence.opencam.cameracontroller.CameraController.java", "BodyUseAPI": [], "Fixed commit": "121ca2edcc56acf4f1459455ec32620e9fa9f507", "Url": "https://api.github.com/repos/MaTriXy/OpenCamera", "Date": "2014-06-25T03:13:34Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Double.isNaN(mortgage)) || (java.lang.Double.isInfinite(mortgage))) { mResultTextView.setText(\"\u221e\"); }else { mResultTextView.setText(java.lang.String.format(\"$%.2f\", mortgage)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7399/buggy-version/app.src.main.java.com.example.android.mortgagecalc.CalcFragment.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,double)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "efc7d21f3202f1a3f0ab936cd10924de9e000950", "Url": "https://api.github.com/repos/keyurgolani/MortgageCalc", "Date": "2017-03-22T03:55:30Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.android.mortgagecalc.Mortgage.getMortgageAmount()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((java.lang.Double.isNaN(mortgage)) || (java.lang.Double.isInfinite(mortgage))) { mResultTextView.setText(\"\u221e\"); }else { mResultTextView.setText(java.lang.String.format(\"$%.2f\", mortgage)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7399/buggy-version/app.src.main.java.com.example.android.mortgagecalc.CalcFragment.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.Double)"], "Fixed commit": "efc7d21f3202f1a3f0ab936cd10924de9e000950", "Url": "https://api.github.com/repos/keyurgolani/MortgageCalc", "Date": "2017-03-22T03:55:30Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ticket.getModComment()) != null) && ((ticket.getStatus()) >= 2)) { sender.sendMessage(((((org.bukkit.ChatColor.YELLOW) + \"Comment: \") + (org.bukkit.ChatColor.DARK_GREEN)) + (ticket.getModComment()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2757/buggy-version/src.main.java.com.nyancraft.reportrts.command.sub.ReadTicket.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(((((org.bukkit.ChatColor.YELLOW) + \"Comment: \") + (org.bukkit.ChatColor.DARK_GREEN)) + (ticket.getModComment())))", "com.nyancraft.reportrts.data.HelpRequest.getModComment()"], "Fixed commit": "c272619f70e7362553aeb37c001cadbc62cfb44b", "Url": "https://api.github.com/repos/ProjectInfinity/ReportRTS", "Date": "2014-08-24T19:44:32Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (corner1.equals(corner2)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2715/buggy-version/src.view.LinePanel.java", "BodyUseAPI": [], "Fixed commit": "149f277ec5d4d1be7fc241bb4095bb7fd0a3bb47", "Url": "https://api.github.com/repos/gnapo/HamSanApp", "Date": "2014-05-31T18:05:03Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context) != null) { org.kie.spring.KieSpringUtils.setReleaseIdForContext(releaseId, context); org.kie.spring.KieSpringUtils.setDefaultReleaseId(releaseId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/674/buggy-version/kie-spring.src.main.java.org.kie.spring.KModuleBeanFactoryPostProcessor.java", "BodyUseAPI": [], "Fixed commit": "e5c3baabfb240162bb025dc8a7d1367324a77098", "Url": "https://api.github.com/repos/etirelli/droolsjbpm-integration", "Date": "2014-04-01T13:15:47Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (out.contains(\",\\\"object\\\":null\")) { out = out.replace(\",\\\"object\\\":null\", \"\"); java.lang.System.out.println(out); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2922/buggy-version/src.de.uulm.mi.mind.servlet.Servlet.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "48635a89f98f6eeec0ce106cfd764024a02d7e34", "Url": "https://api.github.com/repos/xamino/mind_server", "Date": "2014-03-27T21:46:03Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((world.getBlockId(x, (y - 1), z)) != (Block.bedrock.blockID)) || ((world.getBlockId(x, (y - 1), z)) != (Block.obsidian.blockID))) { world.setBlock(x, (y - 1), z, this.blockID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4460/buggy-version/electro.oreProccessing.sulphuricAcid.java", "BodyUseAPI": ["net.minecraft.world.World.setBlock(int,int,int,this.blockID)"], "Fixed commit": "9f0e981ac49badad29ac3472cd6be2a09608b5fc", "Url": "https://api.github.com/repos/Clarky158/Electrolysm", "Date": "2014-01-03T17:42:26Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (annotations != null) { for (com.sun.codemodel.JAnnotationUse annotationUse : annotations) { org.eclipse.persistence.jaxb.javamodel.xjc.XJCJavaAnnotationImpl xjcAnnotation = new org.eclipse.persistence.jaxb.javamodel.xjc.XJCJavaAnnotationImpl(annotationUse, dynamicClassLoader); annotationsList.add(xjcAnnotation); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3554/buggy-version/moxy.org.eclipse.persistence.moxy.dynamicxjc.src.org.eclipse.persistence.jaxb.javamodel.xjc.XJCJavaFieldImpl.java", "BodyUseAPI": [], "Fixed commit": "795a5ad1bc3d1d0cc8d7e56f08482bf8b9efbfdb", "Url": "https://api.github.com/repos/sabineheider/eclipselink.runtime", "Date": "2013-02-19T19:42:34Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((artikelRegisterForm.getArtikelAfbeelding()) != null) { com.adm.web.controllers.ArtikelController.slaAfbeeldingOp(artikel.getId(), artikelRegisterForm.getArtikelAfbeelding()); artikel.setPlaatje(com.adm.web.controllers.ArtikelController.getProductPictureDataString(artikel.getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1540/buggy-version/src.main.java.com.adm.web.controllers.ArtikelController.java", "BodyUseAPI": ["com.adm.web.forms.ArtikelRegisterForm.getArtikelAfbeelding()", "com.adm.web.controllers.ArtikelController.slaAfbeeldingOp(artikel.getId(),artikelRegisterForm.getArtikelAfbeelding())"], "Fixed commit": "c11c3723370cb25f96fb69e4a0469c9a7696e4ce", "Url": "https://api.github.com/repos/milanverheij/RSVIERPROJECT2", "Date": "2016-08-28T19:20:15Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (exception instanceof com.abiquo.api.exceptions.UnsupportedMediaException) { if (com.abiquo.api.exceptions.mapper.APIExceptionMapper.logger.isTraceEnabled()) { com.abiquo.api.exceptions.mapper.APIExceptionMapper.logger.trace((((\"API Response \" + (Status.UNSUPPORTED_MEDIA_TYPE.name())) + \"\\n\") + (dto.toString())), exception); } return javax.ws.rs.core.Response.Status.UNSUPPORTED_MEDIA_TYPE; }else { com.abiquo.api.exceptions.mapper.APIExceptionMapper.logger.error(\"Unknown exception thrown.\", exception); return javax.ws.rs.core.Response.Status.INTERNAL_SERVER_ERROR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3559/buggy-version/api.src.main.java.com.abiquo.api.exceptions.mapper.APIExceptionMapper.java", "BodyUseAPI": ["org.slf4j.Logger.trace((((\"API Response \" + (Status.UNSUPPORTED_MEDIA_TYPE.name())) + \"\\n\") + (dto.toString())),com.abiquo.api.exceptions.APIException)", "org.slf4j.Logger.error(java.lang.String,com.abiquo.api.exceptions.APIException)"], "Fixed commit": "c93b42f5cdbaacfaa2e47d4685d27413b1b8eeb1", "Url": "https://api.github.com/repos/abiquo/abiquo", "Date": "2011-10-11T09:02:34Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(getGame(gameJoined).getPlayer(getLoggedInUser()).isBetPlaced())) { return new CardGame.ResponseHit(protocolId, FAIL, NO_BET); }else if (getGame(gameJoined).getPlayer(getLoggedInUser()).isPlayerStand()) { return new CardGame.ResponseHit(protocolId, FAIL, ALREADY_STANDING); }else if (!(getGame(gameJoined).getPlayer(getLoggedInUser()).isPlayerStand())) { getGame(gameJoined).hit(getLoggedInUser()); return new CardGame.ResponseHit(protocolId, SUCCESS); }else { return new CardGame.ResponseHit(protocolId, FAIL, UNKNOWN_ERROR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5908/buggy-version/src.main.java.CardGame.GameServerThread.java", "BodyUseAPI": ["getGame(gameJoined).getPlayer(getLoggedInUser()).isPlayerStand()", "CardGame.GameEngine.GameLobby.getPlayer(CardGame.User)", "CardGame.GameServerThread.getGame(java.lang.String)", "CardGame.GameEngine.GameLobby.hit(CardGame.User)", "CardGame.GameServerThread.getGame(java.lang.String)", "CardGame.GameServerThread.getGame(java.lang.String)", "getGame(gameJoined).getPlayer(getLoggedInUser()).isPlayerStand()", "CardGame.GameEngine.GameLobby.getPlayer(CardGame.User)"], "Fixed commit": "e653c86b14a544abf2df5440c44169e0d639754d", "Url": "https://api.github.com/repos/tombrereton/bordeaux", "Date": "2017-03-22T21:13:30Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { setIsRefreshingCompat(swipe, true); pagingAdapter.enableAndStartLoad(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/605/buggy-version/sample.src.main.java.com.a6v.pagingadapter.sample.SwipeRefreshActivity.java", "BodyUseAPI": [], "Fixed commit": "2be4dd85a970b78a44532a4f8ef011d14c58a546", "Url": "https://api.github.com/repos/marwinxxii/RecyclerViewPagingAdapter", "Date": "2016-07-10T20:15:03Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(interviewee.getBelong().getCompany())) { message.append(((interviewee.getBelong().getCompany()) + \"\u516c\u53f8\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7062/buggy-version/src.main.java.com.zhupan.application.mailnotifier.IntervieweeEmailNotifierImpl.java", "BodyUseAPI": ["interviewee.getBelong().getCompany()", "com.zhupan.application.domain.interviewee.Interviewee.getBelong()", "java.lang.StringBuilder.append(((interviewee.getBelong().getCompany()) + \"\u516c\u53f8\"))"], "Fixed commit": "3e72aa384cbfec216a0931e0681ef1f1e702d0c4", "Url": "https://api.github.com/repos/zhupan/pas", "Date": "2017-07-05T04:59:54Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((interviewee.getBelong().getGender()) == (com.zhupan.application.domain.user.Gender.FEMALE)) { message.append(\"\u5c0f\u59d0\"); }else if ((interviewee.getBelong().getGender()) == (com.zhupan.application.domain.user.Gender.MALE)) { message.append(\"\u5148\u751f\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7062/buggy-version/src.main.java.com.zhupan.application.mailnotifier.IntervieweeEmailNotifierImpl.java", "BodyUseAPI": ["interviewee.getBelong().getGender()", "com.zhupan.application.domain.interviewee.Interviewee.getBelong()"], "Fixed commit": "3e72aa384cbfec216a0931e0681ef1f1e702d0c4", "Url": "https://api.github.com/repos/zhupan/pas", "Date": "2017-07-05T04:59:54Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((classString != null) && ((classString.length()) < 1)) classString = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3350/buggy-version/com.vaguehope.morrigan.server.src.com.vaguehope.morrigan.server.feedreader.MixedMediaDbFeedParser.java", "BodyUseAPI": [], "Fixed commit": "027dd6807be84c3c2baa657168a7bd23181d6dfb", "Url": "https://api.github.com/repos/haku/Morrigan", "Date": "2011-10-01T21:06:10Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedData.rows.size()) > 0) { return selectedData; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2353/buggy-version/src.main.java.br.usp.icmc.vicg.vp.model.data.DataMatrix.java", "BodyUseAPI": [], "Fixed commit": "bab4602bbc1f80c9355e229690ba7e4d81de20d1", "Url": "https://api.github.com/repos/fatore/dual", "Date": "2013-04-15T23:52:04Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values.length) > 0) { matrix.dense.DenseVector newVector = new matrix.dense.DenseVector(values, v.getId(), v.getKlass()); selectedData.addRow(newVector, this.getLabel(v.getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2353/buggy-version/src.main.java.br.usp.icmc.vicg.vp.model.data.DataMatrix.java", "BodyUseAPI": [], "Fixed commit": "bab4602bbc1f80c9355e229690ba7e4d81de20d1", "Url": "https://api.github.com/repos/fatore/dual", "Date": "2013-04-15T23:52:04Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tree.hasChildren()) { children.addAll(tree.children()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4109/buggy-version/mastik-core.src.main.java.org.mastik.query.PredicatesTree.java", "BodyUseAPI": ["org.mastik.query.PredicatesTree.children()", "java.util.List<org.mastik.query.PredicatesTree>.addAll(java.util.List<org.mastik.query.PredicatesTree>)"], "Fixed commit": "58cb8dd2f9eab11f934e0c1494deb4314f1b8043", "Url": "https://api.github.com/repos/imri/mastik", "Date": "2017-01-13T14:00:17Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tree.hasPredicates()) { predicates.addAll(tree.predicates()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4109/buggy-version/mastik-core.src.main.java.org.mastik.query.PredicatesTree.java", "BodyUseAPI": ["java.util.List<org.apache.tinkerpop.gremlin.process.traversal.step.util.HasContainer>.addAll(java.util.List<org.apache.tinkerpop.gremlin.process.traversal.step.util.HasContainer>)", "org.mastik.query.PredicatesTree.predicates()"], "Fixed commit": "58cb8dd2f9eab11f934e0c1494deb4314f1b8043", "Url": "https://api.github.com/repos/imri/mastik", "Date": "2017-01-13T14:00:17Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.adobe.epubcheck.ctc.PackageManifest.getItem(si.getIdref())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (mi != null) { java.lang.String path = mi.getHref(); path = com.adobe.epubcheck.util.PathUtil.resolveRelativeReference(navDocEntry, path, null); if ((((path != null) && (!(path.equals(tocFileName)))) && (!(path.equals(navDocEntry)))) && (!(tocLinkSet.contains(path)))) { report.message(MessageId.OPF_059, new com.adobe.epubcheck.messages.MessageLocation(navDocEntry, (-1), (-1), path)); } }else { report.message(MessageId.OPF_049, new com.adobe.epubcheck.messages.MessageLocation(navDocEntry, (-1), (-1), epack.getPackageMainPath()), si.getIdref()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7668/buggy-version/src.main.java.com.adobe.epubcheck.ctc.EpubNCXCheck.java", "BodyUseAPI": ["com.adobe.epubcheck.ctc.ManifestItem.getHref()"], "Fixed commit": "40df50478c7bf6541993aaf1b09a8396c88b3a9b", "Url": "https://api.github.com/repos/IDPF/epubcheck", "Date": "2013-12-10T19:55:40Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (group != null) { groups.add(group); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5924/buggy-version/Product.Modeler.src.org.openremote.modeler.domain.component.UIComponent.java", "BodyUseAPI": ["java.util.Set<org.openremote.modeler.domain.ClientGroup>.add(org.openremote.modeler.domain.ClientGroup)"], "Fixed commit": "491ee72d80b0236a55c335bf73744d6a3ac6c7ac", "Url": "https://api.github.com/repos/DomoTop/DomoTop", "Date": "2012-05-22T07:50:57Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getVisualStation()) == null) return new kj.scotlyard.board.Point2D.Double();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4377/buggy-version/Board.src.kj.scotlyard.board.Piece.java", "BodyUseAPI": [], "Fixed commit": "af9b5edf7247de4a9d63c42b1d956907cd79969f", "Url": "https://api.github.com/repos/jakob190590/ScotlYard", "Date": "2012-09-11T05:36:13Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getVisualStation()) == null) return new java.awt.Dimension();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4377/buggy-version/Board.src.kj.scotlyard.board.Piece.java", "BodyUseAPI": [], "Fixed commit": "af9b5edf7247de4a9d63c42b1d956907cd79969f", "Url": "https://api.github.com/repos/jakob190590/ScotlYard", "Date": "2012-09-11T05:36:13Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getVisualStation()) == null) return new java.awt.geom.Rectangle2D.Double();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4377/buggy-version/Board.src.kj.scotlyard.board.Piece.java", "BodyUseAPI": [], "Fixed commit": "af9b5edf7247de4a9d63c42b1d956907cd79969f", "Url": "https://api.github.com/repos/jakob190590/ScotlYard", "Date": "2012-09-11T05:36:13Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((headers.size()) == 1) { dateSlider.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4015/buggy-version/src.main.java.org.syncany.gui.history.MainPanel.java", "BodyUseAPI": [], "Fixed commit": "e5b76cd4af22b291394841cb765218d299ee4254", "Url": "https://api.github.com/repos/syncany/syncany-plugin-gui", "Date": "2015-03-07T12:55:32Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.row_title)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (txt != null) { title = title.substring(0, ((title.length()) - 12)); txt.setText(title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6831/buggy-version/app.src.main.java.com.workingagenda.democracydroid.Adapters.DownloadsAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "2712b21f7a6ff0c72e270e1dd16b905f9a27ce0b", "Url": "https://api.github.com/repos/fenimore/DemocracyDroid", "Date": "2016-07-31T19:42:08Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((danielm59.deathlog.handler.LogHandler.data) == null) danielm59.deathlog.handler.LogHandler.data = new java.util.LinkedHashMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5292/buggy-version/src.main.java.danielm59.deathlog.handler.LogHandler.java", "BodyUseAPI": [], "Fixed commit": "51e77921d7383cf595c3e25051fa35273fce0b6b", "Url": "https://api.github.com/repos/danielm59/DeathLog", "Date": "2015-09-13T12:35:08Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((currentAnimationController) == null) || ((currentAnimationController.getInput()) == null)) { cboTypes.setSelectedIndex(0); updateCustomizerPanel(types.get(0)); }else { dae.animation.rig.InputConnector ic = currentAnimationController.getInput(); cboTypes.setSelectedItem(ic.getConnectorType()); updateCustomizerPanel(ic.getConnectorType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7081/buggy-version/src.dae.animation.rig.gui.InputConnectorPanel.java", "BodyUseAPI": ["dae.animation.rig.AnimationController.getInput()"], "Fixed commit": "de0a0203c9301f016d74e0413175ef0bfb448554", "Url": "https://api.github.com/repos/samynk/DArtE", "Date": "2017-11-23T07:58:40Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source.startsWith(\"/\")) { try { java.net.URL url = new java.net.URL(mPath); source = (\"http://\" + (url.getHost())) + source; } catch (java.net.MalformedURLException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8764/buggy-version/app.src.main.java.com.peter.parttime.managershare.WebArticleActivity.java", "BodyUseAPI": [], "Fixed commit": "891c7062ca63715b498505f8d03e2a7319ac97a7", "Url": "https://api.github.com/repos/XJianfei/ManagerShare", "Date": "2015-05-08T04:03:40Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getSupportFragmentManager().beginTransaction().add(R.id.fragment_container, new com.travelersdiary.fragments.DiaryFragment()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4618/buggy-version/app.src.main.java.com.travelersdiary.activities.DiaryActivity.java", "BodyUseAPI": [], "Fixed commit": "e37a34a2e716d0bf6c50aa84128ba14d37c19010", "Url": "https://api.github.com/repos/trigor74/travelers-diary", "Date": "2016-01-17T20:25:14Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params.size()) == 0) { firstParamUnnamed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1238/buggy-version/src.twg2.parser.codeParser.extractors.AnnotationExtractor.java", "BodyUseAPI": [], "Fixed commit": "b9daa86ffc419aeda0ac3d1b62b5bdae46dc42f2", "Url": "https://api.github.com/repos/TeamworkGuy2/JParseCode", "Date": "2016-04-13T03:59:53Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Optional.ofNullable(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (optionalTotal.isPresent()) { total = ((java.lang.Integer) (apiResponse.get(HarvesterConstants.SIERRA_API_RESPONSE_TOTAL))); items = addItemsFromAPIResponse(apiResponse, items); if (total < limit) { return items; }else { return getAllItemsForTimeRange(response, total, items, limit, offset, startTime, newUpdatedTime); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2853/buggy-version/src.main.java.org.nypl.harvester.sierra.processor.ItemIdUpdateHarvester.java", "BodyUseAPI": [], "Fixed commit": "4b6f4462d7ccc4c6f74ff40cbb7c80da89a9d74f", "Url": "https://api.github.com/repos/NYPL-discovery/sierraupdatepoller", "Date": "2017-03-07T15:42:52Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zimbra.cs.account.Provisioning.getInstance().get(AccountBy.id,zmbox.getAccountId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (acct == null) { ZimbraLog.imap.error(\"Cannot get ImapServerListener for %s. Account does not exist.\", zmbox.getAccountId()); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5095/buggy-version/store.src.java.com.zimbra.cs.imap.ImapServerListenerPool.java", "BodyUseAPI": [], "Fixed commit": "064da068dc5e33e7ef57adea757d0bf65ae6c327", "Url": "https://api.github.com/repos/ilyusha/zm-mailbox", "Date": "2017-05-10T18:05:53Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.hslf.record.DocInfoListContainer.findFirstOfType(RecordTypes.VBAInfo.typeID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (vbaInfo == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8695/buggy-version/tika-parsers.src.main.java.org.apache.tika.parser.microsoft.HSLFExtractor.java", "BodyUseAPI": [], "Fixed commit": "cb7b84a48aa7f500c08733b06fc78e6c1f0bba14", "Url": "https://api.github.com/repos/apache/tika", "Date": "2017-07-06T00:24:52Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ppt.getDocumentRecord().findFirstOfType(RecordTypes.List.typeID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (list == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8695/buggy-version/tika-parsers.src.main.java.org.apache.tika.parser.microsoft.HSLFExtractor.java", "BodyUseAPI": [], "Fixed commit": "cb7b84a48aa7f500c08733b06fc78e6c1f0bba14", "Url": "https://api.github.com/repos/apache/tika", "Date": "2017-07-06T00:24:52Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.hslf.record.VBAInfoContainer.findFirstOfType(RecordTypes.VBAInfoAtom.typeID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (vbaAtom == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8695/buggy-version/tika-parsers.src.main.java.org.apache.tika.parser.microsoft.HSLFExtractor.java", "BodyUseAPI": [], "Fixed commit": "cb7b84a48aa7f500c08733b06fc78e6c1f0bba14", "Url": "https://api.github.com/repos/apache/tika", "Date": "2017-07-06T00:24:52Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(firstStart)) { de.aaronoe.greet.ui.groupdetail.GroupFragment fragment = de.aaronoe.greet.ui.groupdetail.GroupFragment_.builder().mGroup(mGroup).build(); getSupportFragmentManager().beginTransaction().add(R.id.group_host_frame, fragment).commit(); firstStart = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8152/buggy-version/app.src.main.java.de.aaronoe.greet.ui.groupdetail.GroupHostActivity.java", "BodyUseAPI": [], "Fixed commit": "1ba14ec7cd24273207b6ea403947ae7cbcd3b023", "Url": "https://api.github.com/repos/aaronoe/Greet", "Date": "2017-10-31T08:38:41Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(entry[4].equalsIgnoreCase(\".\"))) { vcf.setAlt(entry[4].split(\",\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7130/buggy-version/src.edu.unc.genomics.VCFEntry.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "edu.unc.genomics.VCFEntry.setAlt(java.lang.String[])"], "Fixed commit": "8467158e8835ff917d893ac0d83e8cf58b013d02", "Url": "https://api.github.com/repos/timpalpant/java-genomics-io", "Date": "2013-10-18T11:57:54Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(entry[5].equalsIgnoreCase(\".\"))) { vcf.setQual(java.lang.Double.parseDouble(entry[5])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7130/buggy-version/src.edu.unc.genomics.VCFEntry.java", "BodyUseAPI": ["edu.unc.genomics.VCFEntry.setQual(double)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "8467158e8835ff917d893ac0d83e8cf58b013d02", "Url": "https://api.github.com/repos/timpalpant/java-genomics-io", "Date": "2013-10-18T11:57:54Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ctx.expr()) != null) return ((tabs()) + (visit(ctx.expr()))) + \";\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8882/buggy-version/rppGrammar.rppWalk.java", "BodyUseAPI": ["rppWalk.visit(ctx.expr())", "rppParser.LineContext.expr()"], "Fixed commit": "f885bf4f620d4659860d6ecc0c5d5d4953589a0b", "Url": "https://api.github.com/repos/bmabsout/ReadablePlusPlus", "Date": "2015-01-05T23:08:50Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataNode.getParentNode()) == null) { return oldValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1291/buggy-version/src.main.java.org.xmlbeam.XBProjected.java", "BodyUseAPI": [], "Fixed commit": "a4e7b88a8eb1b60e3ca56efa269c562c71b6e8ce", "Url": "https://api.github.com/repos/SvenEwald/xmlbeam", "Date": "2016-11-03T19:50:35Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message.contains(\"_\")) return message.substring(((message.lastIndexOf(\"_\")) + 1)); else return message;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1962/buggy-version/src.main.java.helper.TelegramMessages.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "5e4a574bb6281f986a8b46fae152d221390a6397", "Url": "https://api.github.com/repos/soreana/TravelAssistant", "Date": "2017-03-06T05:05:44Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7240/buggy-version/framework.rest-client.src.main.java.org.xlcloud.rest.client.config.LoggingFilterHelper.java", "BodyUseAPI": [], "Fixed commit": "2c110debd31722c3614fbbf141c831ceb18cc4f1", "Url": "https://api.github.com/repos/ow2-xlcloud/xlcloud", "Date": "2014-02-17T09:34:33Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mAddStepAdapter.getCount()) == 0) { mAddStepAdapter.addAndAdjustHeight(new com.example.foodnote.AddStepItem(\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7228/buggy-version/app.src.main.java.com.example.foodnote.FullscreenActivity.java", "BodyUseAPI": ["com.example.foodnote.AddStepListAdapter.addAndAdjustHeight(com.example.foodnote.AddStepItem)"], "Fixed commit": "e76fa2268c083c73f6b4472ad3e432ca86c95fb9", "Url": "https://api.github.com/repos/sanggonlee/FoodNote", "Date": "2016-02-01T19:31:38Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.LinearLayout.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (currentTab == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6913/buggy-version/library.src.com.astuetz.PagerSlidingTabStrip.java", "BodyUseAPI": [], "Fixed commit": "b21379df902c16cac7372563f143eaeed311b1e4", "Url": "https://api.github.com/repos/h6ah4i/PagerSlidingTabStrip", "Date": "2015-07-09T07:09:48Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.LinearLayout.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (currentTab != null) { left = currentTab.getLeft(); right = currentTab.getRight(); }else { left = 0; right = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6913/buggy-version/library.src.com.astuetz.PagerSlidingTabStrip.java", "BodyUseAPI": ["android.view.View.getLeft()", "android.view.View.getRight()"], "Fixed commit": "b21379df902c16cac7372563f143eaeed311b1e4", "Url": "https://api.github.com/repos/h6ah4i/PagerSlidingTabStrip", "Date": "2015-07-09T07:09:48Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (left != right) { rectPaint.setColor(indicatorColor); canvas.drawRect(left, top, right, (top + (indicatorHeight)), rectPaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6913/buggy-version/library.src.com.astuetz.PagerSlidingTabStrip.java", "BodyUseAPI": ["android.graphics.Canvas.drawRect(float,float,float,float,android.graphics.Paint)"], "Fixed commit": "b21379df902c16cac7372563f143eaeed311b1e4", "Url": "https://api.github.com/repos/h6ah4i/PagerSlidingTabStrip", "Date": "2015-07-09T07:09:48Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (it.jaschke.alexandria.MainActivity.isNetworkAvailable(getActivity())) { android.content.Intent bookIntent = new android.content.Intent(getActivity(), it.jaschke.alexandria.services.BookService.class); bookIntent.putExtra(BookService.EAN, ean); bookIntent.setAction(BookService.FETCH_BOOK); getActivity().startService(bookIntent); this.restartLoader(); }else { android.widget.Toast.makeText(getActivity(), R.string.noNetwork_connection, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7949/buggy-version/app.src.main.java.it.jaschke.alexandria.AddBook.java", "BodyUseAPI": [], "Fixed commit": "ed7d11192d29c6b784bafb0bd6334c536fac7df3", "Url": "https://api.github.com/repos/Kevin321an/Book-Barcode-Scanner", "Date": "2015-09-10T05:05:53Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.serverless.models.DynamoDBAdapter.getInstance().getSubscriber(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(user.getIsVerified())) { if (com.serverless.utils.Validation.validateHash(verifyToken, user.getVerifyHash())) { com.serverless.ConfirmSubscriberHandler.LOG.info(\"Subscriber verifyToken is valid\"); user.setIsVerified(java.lang.Boolean.TRUE); com.serverless.models.DynamoDBAdapter.getInstance().putSubscriber(user); com.serverless.ConfirmSubscriberHandler.LOG.info(\"Update subscriber isVerified in database\"); }else { com.serverless.ConfirmSubscriberHandler.LOG.info(\"Subscriber verifyToken is NOT valid\"); } com.serverless.ConfirmSubscriberHandler.LOG.info(\"Subscriber email is already verified\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1624/buggy-version/src.main.java.com.serverless.ConfirmSubscriberHandler.java", "BodyUseAPI": ["com.serverless.utils.Validation.validateHash(java.lang.String,user.getVerifyHash())", "com.serverless.models.DynamoDBAdapter.getInstance().putSubscriber(com.serverless.data.Subscriber)", "com.serverless.data.Subscriber.getVerifyHash()", "com.serverless.data.Subscriber.setIsVerified(java.lang.Boolean)"], "Fixed commit": "46fe2d71723731859b3dcc7181afa942b009abd8", "Url": "https://api.github.com/repos/lesterrivera/simple-serverless-registration-java", "Date": "2017-08-09T04:41:31Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (account != null) { io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5396/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": ["io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).set(boolean)", "io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN)", "io.cattle.platform.object.util.DataAccessor.fields(io.cattle.platform.core.model.Account)"], "Fixed commit": "e24babdb1ad5ad0bcec831c14c54b5d6b713e17b", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.iaas.api.auth.dao.AuthDao.hasAccessToAnyProject(java.util.Set<io.cattle.platform.api.auth.Identity>,boolean,<nulltype>)", "io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((!hasAccessToAProject) && (hasLoggedIn != null)) && (!((java.lang.Boolean) (hasLoggedIn)))) { projectResourceManager.createProjectForUser(account); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5396/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": [], "Fixed commit": "e24babdb1ad5ad0bcec831c14c54b5d6b713e17b", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>826", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lhings.java.annotations.Action.getInputs()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((arguments.get(j).getType()) == \"timestamp\") { args[j] = new java.util.Date((1000 * (java.lang.Long.valueOf(argumentValues.get(arguments.get(j).getName()).toString())))); }else args[j] = argumentValues.get(arguments.get(j).getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3359/buggy-version/src.main.java.com.lhings.java.LhingsDevice.java", "BodyUseAPI": ["java.util.List<com.lhings.java.model.Argument>.get(int)", "java.lang.Object.toString()", "arguments.get(j).getName()", "java.util.Map<java.lang.String, java.lang.Object>.get(arguments.get(j).getName())", "java.util.Map<java.lang.String, java.lang.Object>.get(arguments.get(j).getName())", "java.util.List<com.lhings.java.model.Argument>.get(int)", "arguments.get(j).getName()", "java.lang.Long.valueOf(argumentValues.get(arguments.get(j).getName()).toString())"], "Fixed commit": "37ac472b208208f310df3006b78da2855921a7de", "Url": "https://api.github.com/repos/lhings/java_lhings_library", "Date": "2015-07-28T10:01:05Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((actionBar.getNavigationMode()) == (android.app.ActionBar.NAVIGATION_MODE_LIST)) { actionBar.setSelectedNavigationItem(currentPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/9126/buggy-version/Skrumaz.src.main.java.com.skrumaz.app.ui.Projects.java", "BodyUseAPI": ["android.app.ActionBar.setSelectedNavigationItem(int)"], "Fixed commit": "143247413569026be3f14c24bb6b449ad7c3d27d", "Url": "https://api.github.com/repos/PaitoAnderson/SkrumazAndroid", "Date": "2014-04-22T02:17:38Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getApplicationContext().getPackageName().endsWith(\".dev\")) { appVersionString += \" DEV\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/9126/buggy-version/Skrumaz.src.main.java.com.skrumaz.app.Settings.java", "BodyUseAPI": [], "Fixed commit": "143247413569026be3f14c24bb6b449ad7c3d27d", "Url": "https://api.github.com/repos/PaitoAnderson/SkrumazAndroid", "Date": "2014-04-22T02:17:38Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (newObject == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4952/buggy-version/BDELocationExtraction.src.main.java.gr.demokritos.iit.location.extraction.RESTfulResultJSONFilter.java", "BodyUseAPI": [], "Fixed commit": "62eebe8dc5af50cde2be7a91cdf753d8b0ae9137", "Url": "https://api.github.com/repos/npit/bde-event-detection-sc7", "Date": "2017-09-13T13:32:12Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\u00a2.getTutorials().isEmpty())) $.add(\u00a2.getTutorials());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6111/buggy-version/src.main.java.logic.Scheduler.java", "BodyUseAPI": ["java.util.ArrayList<java.util.List<model.course.LessonGroup>>.add(\u00a2.getTutorials())", "model.course.Course.getTutorials()"], "Fixed commit": "61d72428d2354406ed8742854d8538b7ed08ce7d", "Url": "https://api.github.com/repos/TechnionYP5777/UpAndGo", "Date": "2017-01-15T16:47:35Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\u00a2.getLectures().isEmpty())) $.add(\u00a2.getLectures());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6111/buggy-version/src.main.java.logic.Scheduler.java", "BodyUseAPI": ["java.util.ArrayList<java.util.List<model.course.LessonGroup>>.add(\u00a2.getLectures())", "model.course.Course.getLectures()"], "Fixed commit": "61d72428d2354406ed8742854d8538b7ed08ce7d", "Url": "https://api.github.com/repos/TechnionYP5777/UpAndGo", "Date": "2017-01-15T16:47:35Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((messages.isEmpty()) || (!(messages.containsKey(message)))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8005/buggy-version/commons.che-core-commons-gwt.src.main.java.org.eclipse.che.ide.ui.loader.IdeLoader.java", "BodyUseAPI": [], "Fixed commit": "e0c89cc8152bd044a10595829fcd6767d8052777", "Url": "https://api.github.com/repos/codenvy-legacy/che-core", "Date": "2015-08-11T14:33:48Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (changed) { mDecorView.getWindowVisibleDisplayFrame(mWindowRect); if ((mSlideTarget) == (com.github.eddieringle.android.libs.undergarment.widgets.DrawerGarment.SLIDE_TARGET_WINDOW)) { mDrawerContent.layout(left, (top + (mWindowRect.top)), right, bottom); }else { mDrawerContent.layout(left, mDecorContent.getTop(), right, (bottom - top)); } mDecorContent.layout(mDecorContent.getLeft(), mDecorContent.getTop(), ((mDecorContent.getLeft()) + right), bottom); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3874/buggy-version/src.com.github.eddieringle.android.libs.undergarment.widgets.DrawerGarment.java", "BodyUseAPI": [], "Fixed commit": "42fb222f67e76a7ea981359818ca9b31be1d8ecf", "Url": "https://api.github.com/repos/kurthardin/android-undergarment", "Date": "2012-09-06T20:16:44Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerMoveEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((player.getFoodLevel()) < 30) player.setFoodLevel(((player.getFoodLevel()) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3632/buggy-version/src.main.java.io.github.jisaacs1207.kingdoms5k.Kingdoms5k.java", "BodyUseAPI": ["org.bukkit.entity.Player.getFoodLevel()", "org.bukkit.entity.Player.setFoodLevel(((player.getFoodLevel()) + 1))"], "Fixed commit": "df81cbb98f499851e27c2f7ca22c7aacff7c437f", "Url": "https://api.github.com/repos/jisaacs1207/5kkingdoms", "Date": "2014-08-19T12:39:55Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerMoveEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((player.getHealth()) < 30) player.setHealth(((player.getHealth()) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3632/buggy-version/src.main.java.io.github.jisaacs1207.kingdoms5k.Kingdoms5k.java", "BodyUseAPI": ["org.bukkit.entity.Player.getHealth()", "org.bukkit.entity.Player.setHealth(((player.getHealth()) + 1))"], "Fixed commit": "df81cbb98f499851e27c2f7ca22c7aacff7c437f", "Url": "https://api.github.com/repos/jisaacs1207/5kkingdoms", "Date": "2014-08-19T12:39:55Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((adapter.getCount()) < (restList.size())) { restForsend = searchResultList.get(i); }else { restForsend = restList.get(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7821/buggy-version/app.src.main.java.com.khtn.mammam.SuggestionActivity.java", "BodyUseAPI": ["java.util.List<com.khtn.mammam.pojo.Restaurant>.get(int)"], "Fixed commit": "db9255f43dba6da4c2472988f5cd456c49f7994f", "Url": "https://api.github.com/repos/tennoujikotarou/mammam", "Date": "2017-02-09T02:40:31Z"},
{"Line": "=>1172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(status.isSuccess())) { android.util.Log.e(com.google.devrel.wcl.WearManager.TAG, ((((\"receiveFile(): Failed to receive file with \" + \"status code = \") + statusCode) + \", and status: \") + (status.getStatus()))); for (com.google.devrel.wcl.callbacks.WearConsumer consumer : mWearConsumers) { consumer.onWearableFileReceivedResult(statusCode, requestId, outFile, name); } }else { channel.addListener(mGoogleApiClient, new com.google.android.gms.wearable.ChannelApi.ChannelListener() { @java.lang.Override public void onChannelOpened(com.google.android.gms.wearable.Channel channel) { } @java.lang.Override public void onChannelClosed(com.google.android.gms.wearable.Channel channel, int closeReason, int appSpecificErrorCode) { } @java.lang.Override public void onInputClosed(com.google.android.gms.wearable.Channel channel, int closeReason, int appSpecificErrorCode) { int resultStatusCode; if (closeReason != (CLOSE_REASON_NORMAL)) { android.util.Log.e(com.google.devrel.wcl.WearManager.TAG, ((((\"receiveFile(): Failed to receive file with \" + \"status closeReason = \") + closeReason) + \", and appSpecificErrorCode: \") + appSpecificErrorCode)); resultStatusCode = com.google.android.gms.common.api.CommonStatusCodes.ERROR; }else if (size != (outFile.length())) { android.util.Log.e(com.google.devrel.wcl.WearManager.TAG, (\"receiveFile(): Size of the transferred \" + \"file doesn't match the original size\")); resultStatusCode = com.google.android.gms.common.api.CommonStatusCodes.ERROR; }else { resultStatusCode = com.google.android.gms.common.api.CommonStatusCodes.SUCCESS; } for (com.google.devrel.wcl.callbacks.WearConsumer consumer : mWearConsumers) { consumer.onWearableFileReceivedResult(resultStatusCode, requestId, outFile, name); } } @java.lang.Override public void onOutputClosed(com.google.android.gms.wearable.Channel channel, int closeReason, int appSpecificErrorCode) { } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2790/buggy-version/WCL.src.main.java.com.google.devrel.wcl.WearManager.java", "BodyUseAPI": ["com.google.android.gms.common.api.Status.getStatus()", "android.util.Log.e(java.lang.String,((((\"receiveFile(): Failed to receive file with \" + \"status code = \") + statusCode) + \", and status: \") + (status.getStatus())))"], "Fixed commit": "e0bd4ef0e97d78b76ad370d9d05ab9ba9a6f2014", "Url": "https://api.github.com/repos/googlesamples/android-WearCompanionLibrary", "Date": "2016-03-30T22:13:56Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRecipeStep) != null) { stepsDetailFragment.provideData(mRecipeStep.getVideoURL(), mRecipeStep.getDescription()); }else { android.widget.Toast.makeText(this, \"NO Data Passed to Detail Step\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8603/buggy-version/app.src.main.java.com.prem.android.bakingtime.activities.DetailSteps.java", "BodyUseAPI": [], "Fixed commit": "d35d1ea172a2990e9c85e185b96febf153edaa44", "Url": "https://api.github.com/repos/Prem0707/Baking-Time", "Date": "2017-11-03T15:58:52Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.mMediaPlayer) != null) this.mMediaPlayer.release();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5993/buggy-version/src.com.benbentaxi.passenger.taxirequest.popup.TaxiRequestAudio.java", "BodyUseAPI": [], "Fixed commit": "704d105e53e2aa5b52a16dacd590c72a8b7468a5", "Url": "https://api.github.com/repos/chuanjiabao1981/benbentaxi_passenger", "Date": "2013-08-06T07:58:41Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((capability == (net.minecraftforge.energy.CapabilityEnergy.ENERGY)) && (hasMaster())) && (master.isFormed())) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/436/buggy-version/src.main.java.ipsis.woot.tileentity.TileEntityMobFactoryProxy.java", "BodyUseAPI": [], "Fixed commit": "a4ffb594533ba58679456e778d71d4f42795bee1", "Url": "https://api.github.com/repos/Ipsis/Woot", "Date": "2017-02-25T15:20:25Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (geometry == null) { geometry = feature; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6156/buggy-version/db.src.main.java.com.psddev.dari.db.Region.java", "BodyUseAPI": [], "Fixed commit": "9d963dac479f89bd0ebc6f716f12e17b7d11abb6", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2013-08-02T03:22:21Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (features == null) { features = ((java.util.List<java.util.Map<java.lang.String, java.lang.Object>>) (geoJSON.get(\"geometries\"))); if (features == null) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6156/buggy-version/db.src.main.java.com.psddev.dari.db.Region.java", "BodyUseAPI": [], "Fixed commit": "9d963dac479f89bd0ebc6f716f12e17b7d11abb6", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2013-08-02T03:22:21Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateDoc) xwikiContext.getWiki().getStore().saveXWikiDoc(xwikiAttachment.getDoc(), xwikiContext, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5705/buggy-version/components.xwiki-platform-cloud.xwiki-platform-cloud-blobstore.xwiki-platform-cloud-blobstore-attachments.src.main.java.org.xwiki.blobstore.attachments.legacy.internal.transactions.DeleteAttachmentMetaDataTransactionRunnable.java", "BodyUseAPI": [], "Fixed commit": "3d0d1416a382e2922597bb47814b2b5f4beedb6f", "Url": "https://api.github.com/repos/hms-dbmi/phenotips", "Date": "2015-06-04T16:22:57Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bins.indexOf(lastBin)) < ((bins.size()) - 1)) lastBin = bins.get(((bins.indexOf(lastBin)) + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/719/buggy-version/bppAlgorithm.Circulate.java", "BodyUseAPI": ["java.util.ArrayList<bppAlgorithm.Bin>.indexOf(bppAlgorithm.Bin)", "java.util.ArrayList<bppAlgorithm.Bin>.get(((bins.indexOf(lastBin)) + 1))"], "Fixed commit": "77140183e6aa3881d943d5b3d317b4be9275dd88", "Url": "https://api.github.com/repos/luukholleman/ASRSJava", "Date": "2013-05-28T10:31:08Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((replacements.length) > 0) { while (m.find()) { int n = rand.nextInt(replacements.length); sb.append(message.substring(last, m.start())); sb.append(util.ParseVariables(((java.lang.String[]) (actions.get(action)))[n], event)); last = m.end(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1256/buggy-version/src.main.java.com.minecraftdimensions.bungeechatfilter.Rule.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "4afba323c71eea0183a54e9663b9582156e97ea7", "Url": "https://api.github.com/repos/zedwick/BungeeChatFilter", "Date": "2017-06-13T18:57:19Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (jsonObj == null) { is_login = false; }else { is_login = jsonObj.getBoolean(\"is_login\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5172/buggy-version/app.src.main.java.com.example.root.citizenforumapp.LoginActivity.java", "BodyUseAPI": ["org.json.JSONObject.getBoolean(java.lang.String)"], "Fixed commit": "18358906e1f6d2537dd89eb32e99e399dd1fb4ab", "Url": "https://api.github.com/repos/utkarsh-dixit/Limco", "Date": "2016-12-20T20:57:33Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jenkinsci.plugins.securityinspector.util.JenkinsHelper.getInstanceOrFail().getItemByFullName(column.getFullName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (i == null) { return java.lang.Boolean.FALSE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5161/buggy-version/src.main.java.org.jenkinsci.plugins.securityinspector.impl.users.PermissionsForItemReportBuilder.java", "BodyUseAPI": [], "Fixed commit": "97a6db627c716f6ad1e2786dd5dde69beee576c0", "Url": "https://api.github.com/repos/ksenia-nenasheva/security-inspector-plugin", "Date": "2016-11-24T19:46:50Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.startsWith(url, \"https\"))) { server = ddf.catalog.source.solr.SolrServerFactory.getHttpSolrServer(url, ddf.catalog.solr.external.SolrHttpCatalogProvider.SOLR_CATALOG_CORE_NAME, ddf.catalog.solr.external.SolrHttpCatalogProvider.SOLR_CATALOG_CONFIG_FILE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7335/buggy-version/external.catalog-solr-external-provider.src.main.java.ddf.catalog.solr.external.SolrHttpCatalogProvider.java", "BodyUseAPI": ["ddf.catalog.source.solr.SolrServerFactory.getHttpSolrServer(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "231cba03e4abe85224039ea18fb4868e6c40575c", "Url": "https://api.github.com/repos/codice/ddf-solr", "Date": "2014-12-02T00:17:35Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (client != null) { solrServer = new org.apache.solr.client.solrj.impl.HttpSolrServer(url, client); }else { solrServer = new org.apache.solr.client.solrj.impl.HttpSolrServer(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7335/buggy-version/embedded.catalog-solr-embedded-provider.src.main.java.ddf.catalog.source.solr.SolrServerFactory.java", "BodyUseAPI": [], "Fixed commit": "231cba03e4abe85224039ea18fb4868e6c40575c", "Url": "https://api.github.com/repos/codice/ddf-solr", "Date": "2014-12-02T00:17:35Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(Constants.REQ_PARAM_MARKETPLACE_ID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((mId == null) || (mId.equals(\"\"))) { mId = ((java.lang.String) (httpRequest.getSession().getAttribute(Constants.REQ_PARAM_MARKETPLACE_ID))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8014/buggy-version/oscm-portal.javasrc.org.oscm.ui.filter.ClosedMarketplaceFilter.java", "BodyUseAPI": [], "Fixed commit": "8a4793acbf68d99cc34011c0aa90a6c7bde906d7", "Url": "https://api.github.com/repos/servicecatalog/development", "Date": "2016-07-13T08:34:47Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subject == null) return type.name(); else return ((type.name()) + \": \") + subject;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6563/buggy-version/src.game.Task.java", "BodyUseAPI": [], "Fixed commit": "9ba311ac1ec55c30cac5fddf5950b3a30360d083", "Url": "https://api.github.com/repos/Morgan-Allen/Stratos_Engine", "Date": "2017-10-21T10:11:02Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sheepit.client.standalone.GuiSwing.getClient()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((client != null) && (client.isSuspended())) { pauseButton.setText(\"Resume\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3804/buggy-version/src.com.sheepit.client.standalone.swing.activity.Working.java", "BodyUseAPI": [], "Fixed commit": "60193de44f81c7724b29d4055db7c669192996b9", "Url": "https://api.github.com/repos/principat/sheepit-client", "Date": "2017-01-29T20:03:38Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(valid)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8200/buggy-version/src.com.nilunder.bdx.GameObject.java", "BodyUseAPI": [], "Fixed commit": "dab1c7099723e6950a620fa714f362b4f6f7e5b5", "Url": "https://api.github.com/repos/rafcolson/bdx", "Date": "2015-09-30T04:16:09Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getEquippedSword()) == null) { java.lang.System.out.println(((((((player.getName()) + \" attacks \") + (npc.getName())) + \" with no sword , dealing \") + difference) + \" damage!\\n\")); }else { java.lang.System.out.println(((((((((player.getName()) + \" attacks \") + (npc.getName())) + \" with a \") + (player.getEquippedSword().getName())) + \", dealing \") + difference) + \" damage!\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4381/buggy-version/GenericRPG.src.ver0.Battle.java", "BodyUseAPI": ["ver0.PlayerActor.getName()", "ver0.PlayerActor.getName()", "java.io.PrintStream.println(((((((((player.getName()) + \" attacks \") + (npc.getName())) + \" with a \") + (player.getEquippedSword().getName())) + \", dealing \") + difference) + \" damage!\\n\"))", "player.getEquippedSword().getName()", "ver0.PlayerActor.getEquippedSword()", "java.io.PrintStream.println(((((((player.getName()) + \" attacks \") + (npc.getName())) + \" with no sword , dealing \") + difference) + \" damage!\\n\"))"], "Fixed commit": "5bdce6d70ee7b0d9346547016fa2524e01bbfaad", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-05-02T04:26:08Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getEquippedSword()) == null) { java.lang.System.out.println(((((((player.getName()) + \" attacks \") + (npc.getName())) + \" with no sword, dealing \") + difference) + \" damage!\\n\")); }else { java.lang.System.out.println(((((((((player.getName()) + \" attacks \") + (npc.getName())) + \" with a \") + (player.getEquippedSword().getName())) + \", dealing \") + difference) + \" damage!\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4381/buggy-version/GenericRPG.src.ver0.Battle.java", "BodyUseAPI": ["player.getEquippedSword().getName()", "ver0.PlayerActor.getEquippedSword()", "java.io.PrintStream.println(((((((((player.getName()) + \" attacks \") + (npc.getName())) + \" with a \") + (player.getEquippedSword().getName())) + \", dealing \") + difference) + \" damage!\\n\"))", "java.io.PrintStream.println(((((((player.getName()) + \" attacks \") + (npc.getName())) + \" with no sword, dealing \") + difference) + \" damage!\\n\"))", "ver0.PlayerActor.getName()", "ver0.PlayerActor.getName()"], "Fixed commit": "5bdce6d70ee7b0d9346547016fa2524e01bbfaad", "Url": "https://api.github.com/repos/austinBailey5624/GenericRPGConsole", "Date": "2016-05-02T04:26:08Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(pc.getChosen().isAdministrative())) && ((pc.getLength()) < 4)) { if ((pc.getEvidence().isEmpty()) && (pc.hasDefaultRuleOnly())) { points -= 10; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3317/buggy-version/Extraction.src.main.java.org.opensextant.extractors.geo.rules.LocationChooserRule.java", "BodyUseAPI": ["org.opensextant.extractors.geo.PlaceCandidate.hasDefaultRuleOnly()", "pc.getEvidence().isEmpty()", "org.opensextant.extractors.geo.PlaceCandidate.getEvidence()"], "Fixed commit": "535281782f572bcd35ad22bb748b228eafcdc15e", "Url": "https://api.github.com/repos/OpenSextant/Xponents", "Date": "2017-12-11T14:35:52Z"},
{"Line": "=>1492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(mIncidentLocation.getText().toString())) mIncidentLocation.setText(result);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7426/buggy-version/Core.src.com.ushahidi.android.app.IncidentAdd.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "b43f9f97839acb13737c8edf62cbeb064fbf22a2", "Url": "https://api.github.com/repos/pdestefanis/Ushahidi_Android", "Date": "2012-03-18T05:32:14Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.DataAccessor.getUserAuthorList(java.util.List<java.lang.Long>,author.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (userAuthorList != null) { for (com.pratilipi.data.type.UserAuthor userAuthor : userAuthorList) if ((userAuthor != null) && (userAuthor.isFollowing())) authorDataList.get(authorIdList.indexOf(userAuthor.getAuthorId())).getUser().setFollowing(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1148/buggy-version/src.main.java.com.pratilipi.data.util.UserAuthorDataUtil.java", "BodyUseAPI": [], "Fixed commit": "a6cdd757cf56b454403eb5532ee1439d3d4a3412", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-08-05T09:32:31Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((remoteCall.getParaTypes()) == null) { send(new rmi.RMIException(\"Parameter list is empty\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8383/buggy-version/src.rmi.TCPWorker.java", "BodyUseAPI": [], "Fixed commit": "4cfa3237a09d450dd72425b171888a596d999317", "Url": "https://api.github.com/repos/qingPATHng-jia/cse291d-project1", "Date": "2017-02-10T00:45:26Z"},
{"Line": "=>2152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(methodDeclaration.returnType.resolvedType, a)) { a.traverse(this, methodDeclaration.scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3747/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,methodDeclaration.scope)"], "Fixed commit": "dd4dbc973c1b09e3cdd0e93c64ca415f40937b11", "Url": "https://api.github.com/repos/GerardPaligot/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>1552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(argument.type.resolvedType, a)) { a.traverse(this, scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3747/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,org.eclipse.jdt.internal.compiler.lookup.BlockScope)"], "Fixed commit": "dd4dbc973c1b09e3cdd0e93c64ca415f40937b11", "Url": "https://api.github.com/repos/GerardPaligot/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>2028", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isContainsInTypeAnnotation(localDeclaration.type.resolvedType, a)) { a.traverse(this, scope); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3747/buggy-version/src.main.java.spoon.support.compiler.jdt.JDTTreeBuilder.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.ast.Annotation.traverse(spoon.support.compiler.jdt.JDTTreeBuilder,org.eclipse.jdt.internal.compiler.lookup.BlockScope)"], "Fixed commit": "dd4dbc973c1b09e3cdd0e93c64ca415f40937b11", "Url": "https://api.github.com/repos/GerardPaligot/spoon", "Date": "2015-02-17T14:42:39Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(root.exists())) || (!(root.isDirectory()))) { return prnlFiles; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/9147/buggy-version/src.ksp_autopruner.Main.java", "BodyUseAPI": [], "Fixed commit": "0bd20ba6ad4b3b5817f87c7db4d300a088465273", "Url": "https://api.github.com/repos/rllr/KSP_AutoPruner", "Date": "2014-12-12T11:48:01Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openpnp.model.Location.getZ()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.Double.isNaN(z))) { this.z = z; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7038/buggy-version/gui.src.main.java.org.openpnp.machine.reference.driver.GrblDriver.java", "BodyUseAPI": [], "Fixed commit": "8b369e7ada4dc3e1225a57d40d3ac113efc7f7e8", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2013-12-17T05:28:47Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openpnp.model.Location.getX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.Double.isNaN(x))) { this.x = x; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7038/buggy-version/gui.src.main.java.org.openpnp.machine.reference.driver.GrblDriver.java", "BodyUseAPI": [], "Fixed commit": "8b369e7ada4dc3e1225a57d40d3ac113efc7f7e8", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2013-12-17T05:28:47Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openpnp.model.Location.getY()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.Double.isNaN(y))) { this.y = y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7038/buggy-version/gui.src.main.java.org.openpnp.machine.reference.driver.GrblDriver.java", "BodyUseAPI": [], "Fixed commit": "8b369e7ada4dc3e1225a57d40d3ac113efc7f7e8", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2013-12-17T05:28:47Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openpnp.model.Location.getRotation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.Double.isNaN(c))) { this.c = c; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7038/buggy-version/gui.src.main.java.org.openpnp.machine.reference.driver.GrblDriver.java", "BodyUseAPI": [], "Fixed commit": "8b369e7ada4dc3e1225a57d40d3ac113efc7f7e8", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2013-12-17T05:28:47Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getCurrentLocation().getItemByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (player.addItemToBackpack(itemToPickUp)) { player.getCurrentLocation().deleteItemByName(itemName); java.lang.System.out.println((\"You picked up: \" + itemName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8168/buggy-version/src.pollaxmud.handlers.InputHandler.java", "BodyUseAPI": ["pollaxmud.entities.Player.getCurrentLocation()", "player.getCurrentLocation().deleteItemByName(java.lang.String)"], "Fixed commit": "456556a304d9bf6ba697810b9f33596987f6b121", "Url": "https://api.github.com/repos/danielekbom/pollaxmud", "Date": "2014-11-04T11:33:52Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (CurrentBackpack.addItem(item)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8168/buggy-version/src.pollaxmud.entities.Player.java", "BodyUseAPI": [], "Fixed commit": "456556a304d9bf6ba697810b9f33596987f6b121", "Url": "https://api.github.com/repos/danielekbom/pollaxmud", "Date": "2014-11-04T11:33:52Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Location.getWorld()", "com.massivecraft.factions.integration.Worldguard.toVector(org.bukkit.Location)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((com.massivecraft.factions.integration.Worldguard.wg.getRegionManager(world).getApplicableRegions(pt).size()) > 0) return com.massivecraft.factions.integration.Worldguard.wg.canBuild(player, loc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4141/buggy-version/src.com.massivecraft.factions.integration.Worldguard.java", "BodyUseAPI": ["com.sk89q.worldguard.bukkit.WorldGuardPlugin.canBuild(org.bukkit.entity.Player,org.bukkit.Location)"], "Fixed commit": "909f605343b8332333cbbb224aa00b4baa79ec9d", "Url": "https://api.github.com/repos/MassiveCraft/Factions", "Date": "2012-09-08T16:22:18Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Actions.ActionBrojac.clip) != null) Actions.ActionBrojac.clip.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/824/buggy-version/src.Actions.ActionBrojac.java", "BodyUseAPI": [], "Fixed commit": "81002a7c779ec042910ca9c0e726a73b49fc3c16", "Url": "https://api.github.com/repos/GaborVadocki/ShutDown", "Date": "2014-11-05T09:14:49Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (counts == null) counts = new java.util.HashMap<java.lang.String, java.lang.Integer>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2373/buggy-version/spring-social-instagram.src.main.java.org.springframework.social.instagram.api.InstagramProfile.java", "BodyUseAPI": [], "Fixed commit": "66064974fb6a596f1f5dd893b6d28d0e1a5bd396", "Url": "https://api.github.com/repos/kdubb1337/spring-social-instagram", "Date": "2014-05-24T17:54:09Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.mUpdateProgressTimer) != null) { fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.mUpdateProgressTimer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3521/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "40749de60a7223dc82362a4276ff991e36798b27", "Url": "https://api.github.com/repos/keivenlombo/jiecaovideoplayer", "Date": "2016-03-18T05:32:46Z"},
{"Line": "=>902", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (originalSyntax.contains(\":\")) { originalSyntax = org.apache.camel.runtimecatalog.CatalogHelper.after(originalSyntax, \":\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/47/buggy-version/camel-core.src.main.java.org.apache.camel.runtimecatalog.AbstractCamelCatalog.java", "BodyUseAPI": ["org.apache.camel.runtimecatalog.CatalogHelper.after(java.lang.String,java.lang.String)"], "Fixed commit": "2fc8c573edc31cc16f30b16f8b6836716206de62", "Url": "https://api.github.com/repos/onderson/camel", "Date": "2017-07-23T13:29:03Z"},
{"Line": "=>902", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (originalSyntax.contains(\":\")) { originalSyntax = org.apache.camel.catalog.CatalogHelper.after(originalSyntax, \":\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/47/buggy-version/platforms.camel-catalog.src.main.java.org.apache.camel.catalog.AbstractCamelCatalog.java", "BodyUseAPI": ["org.apache.camel.catalog.CatalogHelper.after(java.lang.String,java.lang.String)"], "Fixed commit": "2fc8c573edc31cc16f30b16f8b6836716206de62", "Url": "https://api.github.com/repos/onderson/camel", "Date": "2017-07-23T13:29:03Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((message.length()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1114/buggy-version/IMPlus.src.main.java.com.ctrip.implus.gui.ChatApp.java", "BodyUseAPI": [], "Fixed commit": "27ac6eac8a55d3901dc97e92810aedd06b8cd7f5", "Url": "https://api.github.com/repos/sioncheng/185f010", "Date": "2016-10-27T06:16:07Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (round < (offsets[i])) { bearings[i] = -1; }else if (round >= ((allPlaneLocs[i].size()) + (offsets[i]))) { bearings[i] = -2; }else { bearings[i] = allPlaneLocs[i].getBearingAt((round - (offsets[i]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2980/buggy-version/src.airplane.g0.PlayerT.java", "BodyUseAPI": ["allPlaneLocs[i].getBearingAt(int)", "allPlaneLocs[i].size()"], "Fixed commit": "f290a10ce9acfe9cb35dc516e1ac5b661877ee40", "Url": "https://api.github.com/repos/timmil/Airplanes", "Date": "2013-11-14T19:05:17Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["airplane.g0.PlayerT.getLocation(curr.getLocAt((time - 1)),int,curr.getBearingAt((time - 1)))", "java.util.ArrayList<airplane.sim.Plane>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((currentLoc.distance(p.getDestination())) < 0.1) { newBearing = -2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2980/buggy-version/src.airplane.g0.PlayerT.java", "BodyUseAPI": [], "Fixed commit": "f290a10ce9acfe9cb35dc516e1ac5b661877ee40", "Url": "https://api.github.com/repos/timmil/Airplanes", "Date": "2013-11-14T19:05:17Z"},
{"Line": "=>2153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((event.getKeyCode()) == (android.view.KeyEvent.KEYCODE_VOLUME_UP)) || (keyCode == (android.view.KeyEvent.KEYCODE_VOLUME_DOWN))) { mVolumeKeyCursorControl = Settings.System.getIntForUser(getContentResolver(), Settings.System.VOLUME_KEY_CURSOR_CONTROL, 0, UserHandle.USER_CURRENT_OR_SELF); if ((isInputViewShown()) && ((mVolumeKeyCursorControl) != (android.inputmethodservice.InputMethodService.VOLUME_CURSOR_OFF))) { return true; } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6451/buggy-version/core.java.android.inputmethodservice.InputMethodService.java", "BodyUseAPI": [], "Fixed commit": "89ddf8e78a8bd0ca840924f4718b53f1ded82e40", "Url": "https://api.github.com/repos/nitrogen-project/android_frameworks_base", "Date": "2017-04-14T02:45:27Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (request != null) { request.abort(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1061/buggy-version/src.com.android.browser.FetchUrlMimeType.java", "BodyUseAPI": ["org.apache.http.client.methods.HttpHead.abort()"], "Fixed commit": "44834adbefc94cac7f6bdad9d4cc70a19dfafb45", "Url": "https://api.github.com/repos/0-kaladin/packages_apps_Browser", "Date": "2013-06-10T21:11:29Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (request != null) { request.abort(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1061/buggy-version/src.com.android.browser.FetchUrlMimeType.java", "BodyUseAPI": ["org.apache.http.client.methods.HttpHead.abort()"], "Fixed commit": "44834adbefc94cac7f6bdad9d4cc70a19dfafb45", "Url": "https://api.github.com/repos/0-kaladin/packages_apps_Browser", "Date": "2013-06-10T21:11:29Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cd.id.equals(this.id)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5816/buggy-version/A5.GroupContactSharing.src.se.kth.ict.id2216.groupcontactsharing.ContactViewModel.java", "BodyUseAPI": [], "Fixed commit": "e8f172fee857f18e790ab7620a2ddd22568e2834", "Url": "https://api.github.com/repos/Zazcallabah/id2216", "Date": "2013-02-20T13:30:14Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mContactsDictionary) != null) { com.anysoftkeyboard.dictionaries.DictionaryASyncLoader loader = new com.anysoftkeyboard.dictionaries.DictionaryASyncLoader(null); loader.execute(mContactsDictionary); loader.waitTillLoadingStarted(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2214/buggy-version/src.com.anysoftkeyboard.dictionaries.Suggest.java", "BodyUseAPI": [], "Fixed commit": "7f21cc46bc4d069678e20e786f8b53a6dac7b723", "Url": "https://api.github.com/repos/eyedol/AnySoftKeyboard", "Date": "2013-06-10T20:32:28Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((location) != null) { map.setMyLocationEnabled(true); map.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new com.google.android.gms.maps.model.LatLng(location.getLatitude(), location.getLongitude()), 13)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4781/buggy-version/app.src.main.java.co.createch.MetroRappid.ui.RouteViewActivity.java", "BodyUseAPI": [], "Fixed commit": "8cd54b87bf59afd7b745980ce769a969b9540ccd", "Url": "https://api.github.com/repos/sethgho/MetroRappidAndroid", "Date": "2014-06-01T14:19:07Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name.startsWith(ResourceUrlConnection.PROTO_SITEWHERE)) { result = new com.sitewhere.server.resource.ResourceUrlConnection(new java.net.URL(null, name, handler)); }else if ((getTenantId()) != null) { result = new com.sitewhere.server.resource.ResourceUrlConnection(new java.net.URL(com.sitewhere.server.resource.ResourceUrlConnection.PROTO_SITEWHERE, com.sitewhere.server.resource.ResourceUrlConnection.SUBJECT_RESOURCE, (-1), (((((((\"/\" + (com.sitewhere.server.resource.ResourceUrlConnection.TYPE_TENANT_RESOURCE)) + \"/\") + (getTenantId())) + \"/\") + (com.sitewhere.configuration.ResourceManagerGlobalConfigurationResolver.SCRIPTS_FOLDER)) + \"/groovy/\") + name), handler)); }else { result = new com.sitewhere.server.resource.ResourceUrlConnection(new java.net.URL(com.sitewhere.server.resource.ResourceUrlConnection.PROTO_SITEWHERE, com.sitewhere.server.resource.ResourceUrlConnection.SUBJECT_RESOURCE, (-1), (((((\"/\" + (com.sitewhere.server.resource.ResourceUrlConnection.TYPE_GLOBAL_RESOURCE)) + \"/global/\") + (com.sitewhere.configuration.ResourceManagerGlobalConfigurationResolver.SCRIPTS_FOLDER)) + \"/groovy/\") + name), handler)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6205/buggy-version/sitewhere-groovy.src.main.java.com.sitewhere.groovy.SiteWhereResourceConnector.java", "BodyUseAPI": [], "Fixed commit": "916a421ba7450796d4662168f883b6f726920aa8", "Url": "https://api.github.com/repos/sitewhere/sitewhere", "Date": "2016-08-12T01:30:21Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((map) != null) { setMap(map); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5501/buggy-version/RouteMeMobile.src.de.unipotsdam.nexplorer.client.android.js.Marker.java", "BodyUseAPI": [], "Fixed commit": "213c8bf16450f667c039b91fc775531ee7ceee63", "Url": "https://api.github.com/repos/ItsNotYou/RouteMeBA", "Date": "2013-03-20T22:11:47Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reperceive) { org.openscience.cdk.tools.manipulator.AtomContainerManipulator.percieveAtomTypesAndConfigureAtoms(molecule); org.openscience.cdk.aromaticity.CDKHueckelAromaticityDetector.detectAromaticity(molecule); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8042/buggy-version/src.main.org.openscience.cdk.smiles.SmilesGenerator.java", "BodyUseAPI": [], "Fixed commit": "9ab29cabbf158ff6c05601c2ca4389dd4562fbcf", "Url": "https://api.github.com/repos/johnmay/cdk", "Date": "2013-06-03T14:34:08Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.count) > 1) { this.netas[1] = \"\u3068\u308d\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7432/buggy-version/TDDLesson.src.Conveyer.java", "BodyUseAPI": [], "Fixed commit": "d9190a671ee23d661d0bb5504d8ac292dafe4dd8", "Url": "https://api.github.com/repos/AkkeyLab/JavaEx", "Date": "2017-05-08T00:14:41Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((tiles[human.position.x][human.position.y]) instanceof StrongholdCrusader.Map.Plain)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/209/buggy-version/src.StrongholdCrusader.Network.Game.java", "BodyUseAPI": [], "Fixed commit": "a94124f8a0a3e96bff5b46560b84b0dfd4197c13", "Url": "https://api.github.com/repos/alijamaliz/Stronghold-crusader", "Date": "2017-07-10T13:14:51Z"},
{"Line": "=>936", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tokens.length) > 5) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3405/buggy-version/src.ciir.umass.edu.sum.Hierarchy.java", "BodyUseAPI": [], "Fixed commit": "dadea51c2b612177515cac58dcaa85b546b911af", "Url": "https://api.github.com/repos/keikha/DSP-Galago", "Date": "2014-06-11T16:57:50Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((indexComments >= 0) && (indexComments <= index)) { index = indexComments; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/931/buggy-version/src.main.java.jatoo.maven.plugin.set_license.SetLicenseHeaderMojo.java", "BodyUseAPI": [], "Fixed commit": "9f787b20202636c1cc91a669bcd7e39cfd9ffd9f", "Url": "https://api.github.com/repos/cristian-sulea/maven-plugin-set-license", "Date": "2016-09-02T06:14:07Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Exception.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (message == null) message = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5837/buggy-version/src.main.java.com.digitalpebble.storm.crawler.bolt.FetcherBolt.java", "BodyUseAPI": [], "Fixed commit": "52a1e4873e1ab8e362ca92f22034aa3696cc92ac", "Url": "https://api.github.com/repos/DigitalPebble/storm-crawler", "Date": "2015-01-21T15:01:06Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(candidates.isEmpty())) { foundBean = candidates.iterator().next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1762/buggy-version/src.main.java.com.github.chrisruffalo.eeconfig.resources.BeanResolver.java", "BodyUseAPI": ["java.util.Set<javax.enterprise.inject.spi.Bean<?>>.iterator()", "candidates.iterator().next()"], "Fixed commit": "f2fc752200aa7aa668c55959cf6e4aec3223d853", "Url": "https://api.github.com/repos/chrisruffalo/ee-config", "Date": "2014-08-11T18:16:09Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node == (firstNode)) removeFirst();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8586/buggy-version/src.main.java.com.eagulyi.interview.datastructures.MyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "8467958ce6ec5cad674c872d0e11689428bd7a2f", "Url": "https://api.github.com/repos/JackGoode/CS-data-structures", "Date": "2017-01-28T20:03:34Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node == (lastNode)) removeLast();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8586/buggy-version/src.main.java.com.eagulyi.interview.datastructures.MyLinkedList.java", "BodyUseAPI": [], "Fixed commit": "8467958ce6ec5cad674c872d0e11689428bd7a2f", "Url": "https://api.github.com/repos/JackGoode/CS-data-structures", "Date": "2017-01-28T20:03:34Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alreadyCalled) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6373/buggy-version/android-app.src.com.comsysto.dalli.android.activity.PartyActivity.java", "BodyUseAPI": [], "Fixed commit": "024c11120b538ea90ef003cc026245bcbcd1b215", "Url": "https://api.github.com/repos/comsysto/findparty", "Date": "2012-11-21T14:17:53Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((device) != null) { device = null; mBluetoothLeService.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7834/buggy-version/app.src.main.java.com.example.user.appskeleton.HomePageActivity.java", "BodyUseAPI": [], "Fixed commit": "4105175e9637acdf10afaf4aa7f4fc2f9d7193ef", "Url": "https://api.github.com/repos/adalga/S-RAndroidDeneme", "Date": "2017-06-07T07:15:18Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4382/buggy-version/src.edu.cuny.qc.speech.AuToBI.core.Spectrum.java", "BodyUseAPI": [], "Fixed commit": "5e447fec5e4cb9bf89f6bfe6ce0a096ea655b6a3", "Url": "https://api.github.com/repos/AndrewRosenberg/AuToBI", "Date": "2011-11-16T17:14:52Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (startFlag && (!(android.text.TextUtils.isEmpty(pretender)))) { result.add(pretender); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2976/buggy-version/app.src.main.java.com.eleks.voiceassistant.voiceassistantpoc.mining.WhereMiner.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "97f7ec39774353bbee9be408f7b285ea160a23d7", "Url": "https://api.github.com/repos/eleks/VoiceAssistantPoC", "Date": "2015-06-03T18:31:34Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ev.newThing) != null) audioManager.sound(\"thing\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7367/buggy-version/core.src.ru.mitrakov.self.rush.screens.ScreenBattle.java", "BodyUseAPI": [], "Fixed commit": "e785b75172fd1fd05c4575a894f1031489b26aed", "Url": "https://api.github.com/repos/mitrakov/winesaps", "Date": "2017-05-11T09:08:11Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((r) > 50000) || ((r) < 0)) { android.widget.Toast.makeText(getActivity().getApplicationContext(), \"Please enter a radius between 0 and 50,000 meteres\", Toast.LENGTH_SHORT).show(); }else { com.example.ronan.practicenavigationdrawer.DatabaseFragment.GeocodeAsyncTaskForQuery asyncTaskForQuery = new com.example.ronan.practicenavigationdrawer.DatabaseFragment.GeocodeAsyncTaskForQuery(); frameLayout.setVisibility(View.VISIBLE); asyncTaskForQuery.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2264/buggy-version/app.src.main.java.com.example.ronan.practicenavigationdrawer.DatabaseFragment.java", "BodyUseAPI": [], "Fixed commit": "c274336b73aa8413500fb73fe685951f4d7bfc6d", "Url": "https://api.github.com/repos/ronanbrowne88/Final-Year-Project", "Date": "2016-12-11T22:22:41Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOverlay) != null) { removeHeatMap(); stolenBikesDatabse.addValueEventListener(bikeListener); }else android.widget.Toast.makeText(getActivity().getApplicationContext(), \"Already on default map view\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2264/buggy-version/app.src.main.java.com.example.ronan.practicenavigationdrawer.GmapFragment.java", "BodyUseAPI": [], "Fixed commit": "c274336b73aa8413500fb73fe685951f4d7bfc6d", "Url": "https://api.github.com/repos/ronanbrowne88/Final-Year-Project", "Date": "2016-12-11T22:22:41Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this._cycleTime) <= 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5507/buggy-version/src.radlab.rain.workload.redis.RedisGenerator.java", "BodyUseAPI": [], "Fixed commit": "70e10e42f8153bdbf2316d917bc2be5824944373", "Url": "https://api.github.com/repos/sguazt/rain-workload-toolkit", "Date": "2015-10-21T09:53:25Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this._thinkTime) > 0) { this._thinkTimeRng = new radlab.rain.util.NegativeExponential(this._thinkTime, this._random); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5507/buggy-version/src.radlab.rain.workload.redis.RedisGenerator.java", "BodyUseAPI": [], "Fixed commit": "70e10e42f8153bdbf2316d917bc2be5824944373", "Url": "https://api.github.com/repos/sguazt/rain-workload-toolkit", "Date": "2015-10-21T09:53:25Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this._thinkTime) <= 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5507/buggy-version/src.radlab.rain.workload.redis.RedisGenerator.java", "BodyUseAPI": [], "Fixed commit": "70e10e42f8153bdbf2316d917bc2be5824944373", "Url": "https://api.github.com/repos/sguazt/rain-workload-toolkit", "Date": "2015-10-21T09:53:25Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this._cycleTime) > 0) { this._cycleTimeRng = new radlab.rain.util.NegativeExponential(this._cycleTime, this._random); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5507/buggy-version/src.radlab.rain.workload.redis.RedisGenerator.java", "BodyUseAPI": [], "Fixed commit": "70e10e42f8153bdbf2316d917bc2be5824944373", "Url": "https://api.github.com/repos/sguazt/rain-workload-toolkit", "Date": "2015-10-21T09:53:25Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (projectPath.startsWith(\"\\\"\")) { this.filePath = projectPath.substring(1, ((projectPath.length()) - 1)); }else { this.filePath = projectPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5919/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.core.model.metadata.AvroMetadataTable.java", "BodyUseAPI": [], "Fixed commit": "e1af3411ce2f6c6136940dd383314ba27602cd97", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2015-02-10T09:34:08Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getSource()) == (exitButton)) { java.lang.System.exit(0); }else if ((e.getSource()) == (searchTagField)) { java.lang.System.out.println((\"searchTagField: \" + (searchTagField.getText()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/429/buggy-version/GPCode.DemoGUI.java", "BodyUseAPI": ["java.awt.event.ActionEvent.getSource()"], "Fixed commit": "7050a6fd21d8cb61d605bc68d5c45e59ec2bb53a", "Url": "https://api.github.com/repos/omegabytes/photo-app", "Date": "2016-12-05T20:29:17Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serie.get_id()) != 0) isRefreshing = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3108/buggy-version/app.src.main.java.ivan.capstone.com.capstone.DetailSerieFragment.java", "BodyUseAPI": [], "Fixed commit": "cc95a16f2137197a734dfee46ac5b8b9e1f4c12e", "Url": "https://api.github.com/repos/iruizeguilaz/Capstone", "Date": "2016-03-15T21:44:43Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFirstGlobalLayoutPerformed) { mLastScrollPosition = scrollPosition; mLastDampedScroll = dampedScroll; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3205/buggy-version/library.src.com.manuelpeinado.fadingactionbar.FadingActionBarHelper.java", "BodyUseAPI": [], "Fixed commit": "7b527eb70a8859362f094e20434bef6fb1d0989c", "Url": "https://api.github.com/repos/ManuelPeinado/FadingActionBar-Native", "Date": "2013-07-13T10:05:17Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (medicineQuantityEt.getText().toString().matches(\"[0]+\")) { medicineQuantityEt.setError(\"Quantity Required\"); }else { java.lang.String msgBody = (((((\"My malaria pills will last for the coming \" + (medicineStore)) + \" days only.\\n Send the following immediately: \\n\") + \"Medicine Name: \") + (drugName)) + \"\\n\") + \"Quantity: \"; android.telephony.SmsManager smsManager = android.telephony.SmsManager.getDefault(); smsManager.sendTextMessage(\"123\", null, (msgBody + (java.lang.Integer.parseInt(medicineQuantityEt.getText().toString()))), null, null); android.widget.Toast.makeText(this, \"SMS sent.\", Toast.LENGTH_SHORT).show(); orderMedicineDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1358/buggy-version/malaria-app-android.src.main.java.com.peacecorps.malaria.activities.MedicineStore.java", "BodyUseAPI": ["medicineQuantityEt.getText().toString()", "android.telephony.SmsManager.sendTextMessage(java.lang.String,<nulltype>,(msgBody + (java.lang.Integer.parseInt(medicineQuantityEt.getText().toString()))),<nulltype>,<nulltype>)", "android.widget.EditText.setError(java.lang.String)", "android.widget.EditText.getText()", "java.lang.Integer.parseInt(medicineQuantityEt.getText().toString())"], "Fixed commit": "806ed769a0e6da8f3c0fcb9bbc4c532bd8abc588", "Url": "https://api.github.com/repos/codingblazer/malaria-app-android", "Date": "2016-12-19T19:08:37Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (medicineQuantityEt.getText().toString().matches(\"[0]+\")) { medicineQuantityEt.setError(\"Quantity Required\"); }else { java.lang.String msgBody = (((((((((\"My malaria pills will last for the coming \" + \"<b>\") + (medicineStore)) + \"</b>\") + \" days only.<br> Send the following immediately: <br>\") + \"Medicine Name: \") + \"<b>\") + (drugName)) + \"</b>\") + \"<br>\") + \"Quantity: \"; android.content.Intent emailIntent = new android.content.Intent(android.content.Intent.ACTION_SEND); emailIntent.setData(android.net.Uri.parse(\"mailto:\")); emailIntent.setType(\"text/plain\"); emailIntent.putExtra(Intent.EXTRA_EMAIL, new java.lang.String[]{ \"yatnavermaa@gmail.com\", \"yatna.verma.ece13@itbhu.ac.in\" }); emailIntent.putExtra(Intent.EXTRA_SUBJECT, \"URGENT: Reqiured Malaria Medicines\"); emailIntent.putExtra(Intent.EXTRA_TEXT, android.text.Html.fromHtml((((msgBody + \"<b>\") + (java.lang.Integer.parseInt(medicineQuantityEt.getText().toString()))) + \"</b>\"))); startActivity(android.content.Intent.createChooser(emailIntent, \"Send mail via...\")); orderMedicineDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1358/buggy-version/malaria-app-android.src.main.java.com.peacecorps.malaria.activities.MedicineStore.java", "BodyUseAPI": ["android.widget.EditText.setError(java.lang.String)", "java.lang.Integer.parseInt(medicineQuantityEt.getText().toString())", "medicineQuantityEt.getText().toString()", "android.widget.EditText.getText()", "android.text.Html.fromHtml((((msgBody + \"<b>\") + (java.lang.Integer.parseInt(medicineQuantityEt.getText().toString()))) + \"</b>\"))", "android.content.Intent.putExtra(Intent.EXTRA_TEXT,android.text.Html.fromHtml((((msgBody + \"<b>\") + (java.lang.Integer.parseInt(medicineQuantityEt.getText().toString()))) + \"</b>\")))"], "Fixed commit": "806ed769a0e6da8f3c0fcb9bbc4c532bd8abc588", "Url": "https://api.github.com/repos/codingblazer/malaria-app-android", "Date": "2016-12-19T19:08:37Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((viewerAccount == null) || (viewerAccount.hasRole(\"ROLE_EVIL\"))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1923/buggy-version/social-service.src.main.java.com.tissue.social.services.OwnerService.java", "BodyUseAPI": [], "Fixed commit": "37a64f6e9677ba8705faec87b9eea9acfab274d9", "Url": "https://api.github.com/repos/guoyingshou/profile", "Date": "2013-04-18T14:29:02Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (path.startsWith(\"/\")) { isAbsPath = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5225/buggy-version/common.src.main.java.tachyon.util.CommonUtils.java", "BodyUseAPI": [], "Fixed commit": "0fea48d80a7a94d1366f15b5a95dee6f8d1d999b", "Url": "https://api.github.com/repos/tianyin/tachyon", "Date": "2015-07-02T06:41:20Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((trimmedPathList.size()) == 1) && (trimmedPathList.get(0).isEmpty())) && isAbsPath) { return \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5225/buggy-version/common.src.main.java.tachyon.util.CommonUtils.java", "BodyUseAPI": [], "Fixed commit": "0fea48d80a7a94d1366f15b5a95dee6f8d1d999b", "Url": "https://api.github.com/repos/tianyin/tachyon", "Date": "2015-07-02T06:41:20Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tyrannyofheaven.bukkit.zPermissions.dao.PermissionDao.getGroups(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (groups.isEmpty()) groups.add(getResolver().getDefaultGroup());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7264/buggy-version/src.main.java.org.tyrannyofheaven.bukkit.zPermissions.service.ZPermissionsServiceImpl.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(getResolver().getDefaultGroup())"], "Fixed commit": "c5f2c0cc6889272a6b08a84dfccc277628dfdfbb", "Url": "https://api.github.com/repos/ZerothAngel/zPermissions", "Date": "2013-02-18T18:21:12Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.compworkx.service.Row.getCell(translatable.getColTargetLang())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (targetCell == null) { targetCell = currentRow.createCell(translatable.getColTargetLang()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/9116/buggy-version/src.main.java.com.compworkx.service.TranslationService.java", "BodyUseAPI": [], "Fixed commit": "df089adbcc65daba2eddb791022fa917ff62e078", "Url": "https://api.github.com/repos/glueckandi/SPSTranslation", "Date": "2017-02-27T12:47:34Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((huwelijksAkteFlow.getHuwttl().getId()) != null) { huwttlRepository.delete(huwelijksAkteFlow.getHuwttl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5876/buggy-version/src.main.java.org.iish.hsn.invoer.service.akte.HuwelijksAkteService.java", "BodyUseAPI": ["org.iish.hsn.invoer.service.akte.HuwttlRepository.delete(huwelijksAkteFlow.getHuwttl())", "org.iish.hsn.invoer.flow.state.HuwelijksAkteFlowState.getHuwttl()"], "Fixed commit": "b0efd904b644c4b1b8fd53d4564f71f402298bfd", "Url": "https://api.github.com/repos/IISH/hsn-invoer", "Date": "2016-06-28T08:35:52Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["huwelijksAkteFlow.getHuwknd().getNgtg()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nGtg == 0) { huwelijksAkteFlow.getHuwknd().setNgtg(huwgtg.length); }else { org.iish.hsn.invoer.service.akte.Huwgtg[] newHuwgtg = new org.iish.hsn.invoer.service.akte.Huwgtg[nGtg]; for (int i = 0; i < (newHuwgtg.length); i++) { if (i < (huwgtg.length)) { newHuwgtg[i] = huwgtg[i]; }else { newHuwgtg[i] = new org.iish.hsn.invoer.service.akte.Huwgtg((i + 1)); } } if ((huwgtg.length) >= (newHuwgtg.length)) { java.util.List<org.iish.hsn.invoer.service.akte.Huwgtg> toDelete = java.util.Arrays.asList(huwgtg).subList(newHuwgtg.length, huwgtg.length); huwgtgRepository.delete(toDelete); } huwelijksAkteFlow.setHuwgtg(newHuwgtg); huwelijksAkteFlow.setCurHuwgtgIndex(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5876/buggy-version/src.main.java.org.iish.hsn.invoer.service.akte.HuwelijksAkteService.java", "BodyUseAPI": [], "Fixed commit": "b0efd904b644c4b1b8fd53d4564f71f402298bfd", "Url": "https://api.github.com/repos/IISH/hsn-invoer", "Date": "2016-06-28T08:35:52Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shonshampain.streamrecorder.db.PlaylistHelper.getInstance().fetch(getBaseContext(),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((playlist.position) >= (mPlayer.getDuration())) { playlist.position = 0L; com.shonshampain.streamrecorder.db.PlaylistHelper.getInstance().update(getBaseContext(), playlist, mId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4942/buggy-version/app.src.main.java.com.shonshampain.streamrecorder.services.PlayerService.java", "BodyUseAPI": [], "Fixed commit": "059ad17b9cd4cee596490b50f234f05c12b005cc", "Url": "https://api.github.com/repos/shonshampain/StreamRecord", "Date": "2015-11-07T18:09:56Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { android.widget.ArrayAdapter adapter = new android.widget.ArrayAdapter(getActivity(), android.R.layout.select_dialog_item, ATIVIDADES); autoCompleteTextView = ((android.widget.AutoCompleteTextView) (rootView.findViewById(R.id.name_atv))); autoCompleteTextView.setThreshold(1); autoCompleteTextView.setAdapter(adapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8130/buggy-version/SemTempo.app.src.main.java.com.example.semtempo.fragments.AddFragment.java", "BodyUseAPI": [], "Fixed commit": "0713fcdd24d9dab48f135f5020d3dd52fb8154a6", "Url": "https://api.github.com/repos/gabrielguim/les-piloto", "Date": "2016-11-28T02:51:52Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (out.isDirectory()) { log.warn((\"Output is a directory, will remove it \" + out)); out.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8478/buggy-version/src.main.java.phoenix.impl.DynamicMenusAPI.java", "BodyUseAPI": ["java.io.File.delete()", "org.apache.log4j.Logger.warn(java.lang.String)"], "Fixed commit": "5129a9c1edf7c29725cb7f5d1bc10f8e7cd2914c", "Url": "https://api.github.com/repos/stuckless/sagetv-phoenix-core", "Date": "2017-02-12T18:49:02Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends com.cinchapi.concourse.importer.Importer>.getSimpleName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((name.length()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/781/buggy-version/concourse-import.src.main.java.com.cinchapi.concourse.importer.cli.ImportCli.java", "BodyUseAPI": [], "Fixed commit": "2379ae1936c5eea1f2535d7fa235aa6af6c780c8", "Url": "https://api.github.com/repos/Backgammon-/concourse", "Date": "2016-02-21T22:08:44Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (operand instanceof com.iconmaster.iconuscalc.element.ExpressionElement) { for (com.iconmaster.iconuscalc.element.Element e : ((com.iconmaster.iconuscalc.element.ExpressionElement) (operand)).content) { a.add(e); } }else { a.add(operand); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7997/buggy-version/src.com.iconmaster.iconuscalc.element.Element.java", "BodyUseAPI": ["java.util.ArrayList<com.iconmaster.iconuscalc.element.Element>.add(com.iconmaster.iconuscalc.element.Element)"], "Fixed commit": "5c1be2e51e798644b44091a10978933e00e1389b", "Url": "https://api.github.com/repos/iconmaster5326/IconusCalc", "Date": "2014-09-04T23:40:47Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (operand instanceof com.iconmaster.iconuscalc.element.ExpressionElement) { for (com.iconmaster.iconuscalc.element.Element e : ((com.iconmaster.iconuscalc.element.ExpressionElement) (operand)).content) { a.add(e); } }else { a.add(operand); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7997/buggy-version/src.com.iconmaster.iconuscalc.element.Element.java", "BodyUseAPI": ["java.util.ArrayList<com.iconmaster.iconuscalc.element.Element>.add(com.iconmaster.iconuscalc.element.Element)"], "Fixed commit": "5c1be2e51e798644b44091a10978933e00e1389b", "Url": "https://api.github.com/repos/iconmaster5326/IconusCalc", "Date": "2014-09-04T23:40:47Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clearHierarchies) { view.clearStore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4172/buggy-version/ui.de-lib.src.main.java.org.iplantc.de.admin.desktop.client.ontologies.presenter.OntologiesPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "d209f05dbf21c8fddc44404901e5a26e8088f58c", "Url": "https://api.github.com/repos/ash3rz/DE", "Date": "2016-06-10T23:58:14Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.iplantc.de.admin.desktop.client.ontologies.events.SaveOntologyHierarchyEvent.getIris()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((iris.indexOf(iri)) == ((iris.size()) - 1)) { isLast = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4172/buggy-version/ui.de-lib.src.main.java.org.iplantc.de.admin.desktop.client.ontologies.presenter.OntologiesPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "d209f05dbf21c8fddc44404901e5a26e8088f58c", "Url": "https://api.github.com/repos/ash3rz/DE", "Date": "2016-06-10T23:58:14Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getObject()) == null) { item.setObject(contributionFactory.create(item.getContributionURI(), getContext(item))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4387/buggy-version/org.semanticsoft.vaaclipse.presentation.src.org.semanticsoft.vaaclipse.presentation.renderers.ToolItemRenderer.java", "BodyUseAPI": ["org.eclipse.e4.ui.model.application.ui.menu.MDirectToolItem.getContributionURI()", "org.eclipse.e4.core.services.contributions.IContributionFactory.create(item.getContributionURI(),getContext(item))", "org.semanticsoft.vaaclipse.presentation.renderers.ToolItemRenderer.getContext(org.eclipse.e4.ui.model.application.ui.menu.MDirectToolItem)", "org.eclipse.e4.ui.model.application.ui.menu.MDirectToolItem.setObject(contributionFactory.create(item.getContributionURI(), getContext(item)))"], "Fixed commit": "b3c875f42029d1d0484e8d0fd38744fb056bdf5f", "Url": "https://api.github.com/repos/florianpirchner/vaaclipse", "Date": "2013-02-12T15:59:53Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((name.equals(\"gi_taxid-March2015X.bin\")) || (name.equals(\"gi2kegg-Nov2015X.bin\"))) || (name.equals(\"gi2tax-Feb2016.bin\"))) || (name.equals(\"gi2tax-Feb2016X.bin\"))) megan.fx.NotificationsInSwing.showWarning(((\"The mapping file '\" + name) + \"' is known to contain errors, please use latest file from the MEGAN6 download page\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5856/buggy-version/src.megan.classification.IdMapper.java", "BodyUseAPI": ["megan.fx.NotificationsInSwing.showWarning(java.lang.String)"], "Fixed commit": "c3036334af5a86a2e89d165eb2ffcaf58570515a", "Url": "https://api.github.com/repos/danielhuson/megan-ce", "Date": "2016-07-10T11:32:16Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(results.containsKey(uri))) { results.put(uri, com.metabroadcast.common.base.Maybe.<org.atlasapi.media.entity.Identified>nothing()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4885/buggy-version/src.main.java.org.atlasapi.persistence.content.cassandra.CassandraContentStore.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.metabroadcast.common.base.Maybe<org.atlasapi.media.entity.Identified>>.put(java.lang.String,com.metabroadcast.common.base.Maybe.<org.atlasapi.media.entity.Identified>nothing())"], "Fixed commit": "5924bf3ae76f3748608be7880c45da3a3af3f230", "Url": "https://api.github.com/repos/atlasapi/atlas-persistence", "Date": "2012-05-18T09:53:13Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.atlasapi.persistence.content.cassandra.CassandraContentStore.readContainer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (foundContainer != null) { results.put(uri, com.metabroadcast.common.base.Maybe.<org.atlasapi.media.entity.Identified>just(foundContainer)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4885/buggy-version/src.main.java.org.atlasapi.persistence.content.cassandra.CassandraContentStore.java", "BodyUseAPI": ["com.metabroadcast.common.base.Maybe.just(org.atlasapi.media.entity.Content)", "java.util.Map<java.lang.String, com.metabroadcast.common.base.Maybe<org.atlasapi.media.entity.Identified>>.put(java.lang.String,com.metabroadcast.common.base.Maybe.<org.atlasapi.media.entity.Identified>just(foundContainer))"], "Fixed commit": "5924bf3ae76f3748608be7880c45da3a3af3f230", "Url": "https://api.github.com/repos/atlasapi/atlas-persistence", "Date": "2012-05-18T09:53:13Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dreamdigitizers.drugmanagement.presenters.abstracts.IPresenterMedicineEdit.loadImage(java.lang.String,this.mImgMedicinePicture.getWidth(),this.mImgMedicinePicture.getHeight())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (bitmap != null) { this.mImgMedicinePicture.setImageBitmap(bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3574/buggy-version/app.src.main.java.com.dreamdigitizers.drugmanagement.views.implementations.fragments.screens.ScreenMedicineEdit.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "168a588c42c77ad09276a04e7fd09593c166345f", "Url": "https://api.github.com/repos/daole/MedicineNotebook", "Date": "2015-11-14T08:37:58Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((entry.directives) != null) && (\"optional\".equalsIgnoreCase(((java.lang.String) (entry.directives.get(\"availability\")))))) { ri.setOptional(true); }else { ri.setOptional(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6649/buggy-version/org.osgi.impl.bundle.bindex.src.org.osgi.impl.bundle.obr.resource.BundleInfo.java", "BodyUseAPI": [], "Fixed commit": "61ac5b17352d1188c96479ed9feb4b0d36d27b40", "Url": "https://api.github.com/repos/garethcollins/bindex", "Date": "2012-06-10T14:05:11Z"},
{"Line": "=>727", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dcm4chee.arc.exporter.ExportContext.getXDSiManifest()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (xdsiManifest == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8297/buggy-version/dcm4chee-arc-audit.src.main.java.org.dcm4chee.arc.audit.AuditService.java", "BodyUseAPI": [], "Fixed commit": "239a750ff91b439e26caeab7d6bfb553ebb39ed4", "Url": "https://api.github.com/repos/dcm4che/dcm4chee-arc-light", "Date": "2017-03-22T14:11:37Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getObject(this.sourceId)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (object == null) { object = game.getLastKnownInformation(this.sourceId, Zone.BATTLEFIELD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4074/buggy-version/Mage.src.mage.abilities.ActivatedAbilityImpl.java", "BodyUseAPI": [], "Fixed commit": "432bade09160c26c31c522125aa37d3e92afd1e9", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-04-06T06:55:28Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxValue < (bonferroniThreshold)) maxValue = bonferroniThreshold;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/846/buggy-version/src.at.gmi.nordborglab.widgets.gwasgeneviewer.client.GWASGeneViewer.java", "BodyUseAPI": [], "Fixed commit": "e1fb6dda49083ce5a596bc1295826e24c52e39f2", "Url": "https://api.github.com/repos/timeu/GWASViewer", "Date": "2011-03-21T15:16:21Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.certh.iti.cloud4all.inference.OntologyManager.getInstance().getIndexInUserPrefs(\"org.nvda-project\")) != (-1)) && ((com.certh.iti.cloud4all.inference.OntologyManager.getInstance().solutionIsInstalled(\"org.nvda-project\")) == true)) { tempSelectedScrReaderID = \"org.nvda-project\"; }else { tempSelectedScrReaderID = \"webinsight.webAnywhere.windows\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4729/buggy-version/src.main.java.com.certh.iti.cloud4all.inference.RulesManager.java", "BodyUseAPI": [], "Fixed commit": "dee0a757632f12e95b7fe8cb5531a7f178df7167", "Url": "https://api.github.com/repos/NickKaklanis/RuleBasedMatchMaker_RESTful_WS_Maven", "Date": "2014-01-11T17:38:13Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (confirmed) { sb.append(lineSeparator).append(f.format(precio)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3084/buggy-version/Lab02.app.src.main.java.ar.edu.utn.frsf.isi.dam.lab02.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6bce1e575ccb6d59feaf10756f54b47281fce2aa", "Url": "https://api.github.com/repos/andreschort/dam", "Date": "2016-09-20T23:30:30Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Percolation.root(int)", "Percolation.root(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (r1 == r2) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1792/buggy-version/src.main.java.Percolation.java", "BodyUseAPI": [], "Fixed commit": "34afdcf0cbdbf4dac055e5f7b70ba8e0349c74de", "Url": "https://api.github.com/repos/tiden0614/coursera_algorithm", "Date": "2014-10-20T00:49:17Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.equals(v, iv)) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2242/buggy-version/src.main.java.com.github.kdvolder.tttree.TTTree.java", "BodyUseAPI": [], "Fixed commit": "5401218edf18d298c89a5c738ab6b50044588d8a", "Url": "https://api.github.com/repos/kdvolder/two-three-tree", "Date": "2016-06-05T03:18:18Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y == nilIndex) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7023/buggy-version/src.ilpInference.InferenceWrappers.java", "BodyUseAPI": [], "Fixed commit": "8ba0577a14256bb6ce7c0a5a7b838e203aee2bb3", "Url": "https://api.github.com/repos/ajaynagesh/multir", "Date": "2014-03-28T06:01:15Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rowStart != (-1)) { rv.add(m.getSubMatrix(0, rowStart, m.getWidth(), ((m.getHeight()) - rowStart))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5529/buggy-version/src.main.java.ch.zhaw.ocr.BitmapParser.RowParser.java", "BodyUseAPI": ["java.util.List<ch.zhaw.ocr.BitmapParser.ContrastMatrix>.add(m.getSubMatrix(0, rowStart, m.getWidth(), ((m.getHeight()) - rowStart)))", "ch.zhaw.ocr.BitmapParser.ContrastMatrix.getSubMatrix(int,int,m.getWidth(),((m.getHeight()) - rowStart))"], "Fixed commit": "526dae991fcc57e91c06d94ddfc2a56bbfb101ef", "Url": "https://api.github.com/repos/aschi/ocr", "Date": "2012-04-18T17:32:19Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ctrip.hermes.meta.entity.Topic.findConsumerGroup(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (consumerGroup != null) { boolean removed = t.removeConsumerGroup(consumer); if (removed) { m_storageService.delConsumerStorage(t, consumerGroup); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4430/buggy-version/hermes-portal.src.main.java.com.ctrip.hermes.portal.service.ConsumerService.java", "BodyUseAPI": ["com.ctrip.hermes.portal.service.storage.TopicStorageService.delConsumerStorage(com.ctrip.hermes.meta.entity.Topic,com.ctrip.hermes.meta.entity.ConsumerGroup)"], "Fixed commit": "cf8ef79d9c86c315cdf6ec47506ff6dd12cd8aaf", "Url": "https://api.github.com/repos/yiming187/hermes", "Date": "2015-06-10T06:55:19Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edges.contains(\"/\")) configFile = (edges.substring(0, edges.lastIndexOf('/'))) + \"/contigs.csv\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8256/buggy-version/src.main.Main.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "07f1c467ba3ed09634d20bb686526b893a81670d", "Url": "https://api.github.com/repos/yoann-dufresne/ContigSearch", "Date": "2016-01-22T14:40:42Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isSpecialText()) { textSize = (resources.getDimension(R.dimen.spot_text)) * 2; }else { textSize = resources.getDimension(R.dimen.spot_text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1687/buggy-version/app.src.main.java.io.github.t3r1jj.pbmap.view.map.SpotView.java", "BodyUseAPI": [], "Fixed commit": "4170d02e104d638c9c4935e979743594b950d8fd", "Url": "https://api.github.com/repos/T3r1jj/PBMap", "Date": "2017-04-10T21:39:08Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSpecialText()) { textView.setTypeface(typeface, Typeface.BOLD); }else { textView.setTypeface(typeface); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1687/buggy-version/app.src.main.java.io.github.t3r1jj.pbmap.view.map.SpotView.java", "BodyUseAPI": [], "Fixed commit": "4170d02e104d638c9c4935e979743594b950d8fd", "Url": "https://api.github.com/repos/T3r1jj/PBMap", "Date": "2017-04-10T21:39:08Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.TreeSpecies.getByData(block.getData())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (species == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6912/buggy-version/src.main.java.com.gmail.nossr50.skills.gathering.WoodCutting.java", "BodyUseAPI": [], "Fixed commit": "7b47d32a969c29613ab1dce8a916f71d57df6df3", "Url": "https://api.github.com/repos/mcMMO-Dev/mcMMO", "Date": "2012-08-14T21:09:49Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.profile) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6912/buggy-version/src.main.java.com.gmail.nossr50.skills.archery.ArcheryManager.java", "BodyUseAPI": [], "Fixed commit": "7b47d32a969c29613ab1dce8a916f71d57df6df3", "Url": "https://api.github.com/repos/mcMMO-Dev/mcMMO", "Date": "2012-08-14T21:09:49Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.example.quizletclone.ListActivity.positionOfFlashcards.size()) != 0) { successfulCreation = mvc.createManualTest(\"TEST 1\", com.example.quizletclone.ListActivity.positionOfFlashcards); com.example.quizletclone.ListActivity.positionOfFlashcards.clear(); if (successfulCreation) { android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), \"Quiz created\", Toast.LENGTH_SHORT); toast.show(); new android.os.Handler().postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.example.quizletclone.TestListActivity.class); startActivity(intent); finish(); } }, 1500); }else { android.widget.Toast toast = android.widget.Toast.makeText(getApplicationContext(), \"Failed to create quiz\", Toast.LENGTH_SHORT); toast.show(); } }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5798/buggy-version/app.src.main.java.com.example.quizletclone.ListActivity.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.clear()", "com.example.quizletclone.ModelViewController.createManualTest(java.lang.String,java.util.List<java.lang.Integer>)"], "Fixed commit": "a1572d7f2141308e41518b1a545d58d006edafe3", "Url": "https://api.github.com/repos/zhl108/quizapp", "Date": "2015-12-02T08:16:45Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ArrayStorage.search(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (arrayResults != null) { java.util.Collections.sort(arrayResults); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4427/buggy-version/PrefixMatcher.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.LinkedList<java.lang.String>)"], "Fixed commit": "f0f492137737c9affcfd8d184e77407ce92395ac", "Url": "https://api.github.com/repos/jpeak5/prefixMatching", "Date": "2011-12-01T13:41:56Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.getInitialAmountMoney()) >= (weapon.getPrice())) { this.weapons.add(weapon); }else { throw new immigrantsTask.exceptions.IllegalImmigrantDiedFromRageException(\"Immigrant had not enough money to buy weapon and died from rage.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2640/buggy-version/src.immigrantsTask.immigrants.RadikalImmigrant.java", "BodyUseAPI": ["java.util.ArrayList<immigrantsTask.weapons.Weapon>.add(immigrantsTask.weapons.Weapon)"], "Fixed commit": "ce6947db36360a7035ef3f47d1943aa719429bcd", "Url": "https://api.github.com/repos/GeorgiAndreev/Test2_ImmigrantsTask", "Date": "2016-08-03T18:18:49Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((weapon.isSold()) == true) { java.lang.System.out.println(\"Weapon is already sold.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2640/buggy-version/src.immigrantsTask.immigrants.RadikalImmigrant.java", "BodyUseAPI": [], "Fixed commit": "ce6947db36360a7035ef3f47d1943aa719429bcd", "Url": "https://api.github.com/repos/GeorgiAndreev/Test2_ImmigrantsTask", "Date": "2016-08-03T18:18:49Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (immigrantsTask.helpClasses.Validation.validateObject(passport)) { this.pasport = passport; }else { throw new immigrantsTask.exceptions.ImmigrantException(\"Invalid passport.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2640/buggy-version/src.immigrantsTask.immigrants.RadikalImmigrant.java", "BodyUseAPI": [], "Fixed commit": "ce6947db36360a7035ef3f47d1943aa719429bcd", "Url": "https://api.github.com/repos/GeorgiAndreev/Test2_ImmigrantsTask", "Date": "2016-08-03T18:18:49Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(weapon instanceof immigrantsTask.weapons.IShooting)) { java.lang.System.out.println(\"Radical immigrants can buy only shooting weapons.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2640/buggy-version/src.immigrantsTask.immigrants.RadikalImmigrant.java", "BodyUseAPI": [], "Fixed commit": "ce6947db36360a7035ef3f47d1943aa719429bcd", "Url": "https://api.github.com/repos/GeorgiAndreev/Test2_ImmigrantsTask", "Date": "2016-08-03T18:18:49Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.everit.osgi.ecm.metadata.ReferenceMetadata.getServiceInterface()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (serviceInterface != null) { directives.put(Constants.OBJECTCLASS, serviceInterface.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8691/buggy-version/core.src.main.java.org.everit.osgi.ecm.component.ri.internal.resource.ComponentRevisionImpl.java", "BodyUseAPI": ["java.lang.Class<?>.getName()", "java.util.Map<java.lang.String, java.lang.String>.put(Constants.OBJECTCLASS,java.lang.String)"], "Fixed commit": "78fa4dbb27e4daa33a39ebd5c3d7d1951dbcfbb7", "Url": "https://api.github.com/repos/everit-org/ecm-component", "Date": "2015-03-23T14:40:03Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((thesaurusTerm.getPrefered()) == null) { preferred = false; }else { preferred = thesaurusTerm.getPrefered(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8614/buggy-version/ginco-impl.src.main.java.fr.mcc.ginco.services.IndexerServiceImpl.java", "BodyUseAPI": ["fr.mcc.ginco.services.ThesaurusTerm.getPrefered()"], "Fixed commit": "ef71c01ecfc9b126ce908a79aae374615653e3aa", "Url": "https://api.github.com/repos/culturecommunication/ginco", "Date": "2013-04-12T15:47:57Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userUpdateRequest.getPassword()) != null) { user.setPassword(org.springframework.security.crypto.bcrypt.BCrypt.hashpw(userUpdateRequest.getPassword(), org.springframework.security.crypto.bcrypt.BCrypt.gensalt())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5423/buggy-version/alien4cloud-security.src.main.java.alien4cloud.security.UserService.java", "BodyUseAPI": ["org.springframework.security.crypto.bcrypt.BCrypt.hashpw(userUpdateRequest.getPassword(),org.springframework.security.crypto.bcrypt.BCrypt.gensalt())", "alien4cloud.security.User.setPassword(org.springframework.security.crypto.bcrypt.BCrypt.hashpw(userUpdateRequest.getPassword(), org.springframework.security.crypto.bcrypt.BCrypt.gensalt()))", "alien4cloud.security.UpdateUserRequest.getPassword()"], "Fixed commit": "b5c1ee2df4726bfd1ef2b8b06229d7496ad4f708", "Url": "https://api.github.com/repos/igorng/alien4cloud", "Date": "2015-03-10T09:02:15Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (toBeDeleted.exists()) { toBeDeleted.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2823/buggy-version/src.com.hulq.ImgurCam.ImgurUploadTask.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "ca84f67433243b349c015d702c6ae439b946cc8b", "Url": "https://api.github.com/repos/useyourname/ImgurCam", "Date": "2014-01-10T04:39:25Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (photoFile.exists()) { photoFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2823/buggy-version/src.com.hulq.ImgurCam.MyActivity.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "ca84f67433243b349c015d702c6ae439b946cc8b", "Url": "https://api.github.com/repos/useyourname/ImgurCam", "Date": "2014-01-10T04:39:25Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((progressDialog != null) && (progressDialog.isShowing())) progressDialog.quitShowing();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1559/buggy-version/src.com.wafflestudio.siksha.dialog.DownloadingRetryDialog.java", "BodyUseAPI": ["com.wafflestudio.siksha.dialog.ProgressDialog.quitShowing()"], "Fixed commit": "4ac3af2f28609171d1c4a6e82f134707c3de634f", "Url": "https://api.github.com/repos/wafflestudio/siksha", "Date": "2015-03-30T15:13:44Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((progressDialog != null) && (progressDialog.isShowing())) progressDialog.quitShowing();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1559/buggy-version/src.com.wafflestudio.siksha.dialog.DownloadingRetryDialog.java", "BodyUseAPI": ["com.wafflestudio.siksha.dialog.ProgressDialog.quitShowing()"], "Fixed commit": "4ac3af2f28609171d1c4a6e82f134707c3de634f", "Url": "https://api.github.com/repos/wafflestudio/siksha", "Date": "2015-03-30T15:13:44Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["itba.pdc.proxy.lib.ReadProxyConfiguration.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5971/buggy-version/src.main.java.itba.pdc.proxy.lib.ReadProxyConfiguration.java", "BodyUseAPI": [], "Fixed commit": "fdd11f0a1cb39bd6734a61fa863b0d453662b0ea", "Url": "https://api.github.com/repos/MartuPuri/PDC-Proxy", "Date": "2013-11-06T23:09:41Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((buffer.limit()) == 0) || ((buffer.limit()) == (buffer.position()))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5971/buggy-version/src.main.java.itba.pdc.proxy.httpparser.HttpParserResponse.java", "BodyUseAPI": [], "Fixed commit": "fdd11f0a1cb39bd6734a61fa863b0d453662b0ea", "Url": "https://api.github.com/repos/MartuPuri/PDC-Proxy", "Date": "2013-11-06T23:09:41Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mTrailer.size()) > 0) { shareIntent.putExtra(Intent.EXTRA_TEXT, mTrailer.get(0).getUrl()); return shareIntent; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1109/buggy-version/app.src.main.java.com.fract.nano.williamyoung.popularmovies.DetailFragment.java", "BodyUseAPI": ["android.content.Intent.putExtra(Intent.EXTRA_TEXT,mTrailer.get(0).getUrl())", "java.util.ArrayList<com.fract.nano.williamyoung.popularmovies.Trailer>.get(int)", "mTrailer.get(0).getUrl()"], "Fixed commit": "f57f6fdcde755a2bc7611826432459bace13264e", "Url": "https://api.github.com/repos/fractalwizz/1-PopularMovies", "Date": "2015-09-24T23:40:07Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((marker.getTag()) != null) { marker.showInfoWindow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7182/buggy-version/app.src.main.java.com.codepath.enroute.fragments.PlacesMapFragment.java", "BodyUseAPI": ["com.google.android.gms.maps.model.Marker.showInfoWindow()"], "Fixed commit": "23758ce13a5c2396309d15b93f75069860de9539", "Url": "https://api.github.com/repos/codepath2017androidgroup10/EnRoute", "Date": "2017-10-27T22:48:49Z"},
{"Line": "=>873", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((drop.getTrigger()) == (com.gmail.zariust.otherdrops.parameters.Trigger.PLAYER_RESPAWN)) { drop.setDelay(com.gmail.zariust.otherdrops.options.IntRange.parse(node.getString(\"delay\", \"1\"))); }else { drop.setDelay(com.gmail.zariust.otherdrops.options.IntRange.parse(node.getString(\"delay\", \"0\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6998/buggy-version/src.com.gmail.zariust.otherdrops.OtherDropsConfig.java", "BodyUseAPI": ["com.gmail.zariust.otherdrops.event.CustomDrop.setDelay(com.gmail.zariust.otherdrops.options.IntRange.parse(node.getString(\"delay\", \"1\")))", "com.gmail.zariust.otherdrops.event.CustomDrop.setDelay(com.gmail.zariust.otherdrops.options.IntRange.parse(node.getString(\"delay\", \"0\")))"], "Fixed commit": "b8b33c0cdecd27602df25d8abcaf23ecd24c55c1", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2013-04-07T14:17:51Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((customDrop.getTrigger()) == (com.gmail.zariust.otherdrops.parameters.Trigger.PLAYER_RESPAWN)) && ((currentEvent.getPlayerAttacker()) != null)) { location = currentEvent.getPlayerAttacker().getLocation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6998/buggy-version/src.com.gmail.zariust.otherdrops.event.DropRunner.java", "BodyUseAPI": ["com.gmail.zariust.otherdrops.event.OccurredEvent.getPlayerAttacker()", "currentEvent.getPlayerAttacker().getLocation()"], "Fixed commit": "b8b33c0cdecd27602df25d8abcaf23ecd24c55c1", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2013-04-07T14:17:51Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state == (toSet.getCompleteState())) { throw new seedu.address.model.task.exceptions.DuplicateTaskException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3185/buggy-version/src.main.java.seedu.address.model.ModelManager.java", "BodyUseAPI": [], "Fixed commit": "0b4c561ec6086e0fdd2630e36875c91945f6b22a", "Url": "https://api.github.com/repos/Esilocke/addressbook-level4", "Date": "2017-11-01T10:09:40Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paramOne > 0) cmdObj = new commands.Command_CLR(paramOne);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7660/buggy-version/src.chronoTimerItems.ChronoTimer.java", "BodyUseAPI": [], "Fixed commit": "5d3311d16c51d73425e04a6fb3eec61dd5ec61b6", "Url": "https://api.github.com/repos/TeamBolt/Sprint1", "Date": "2015-05-05T17:04:19Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((book.getIsbn()) != null) && (!(book.getIsbn().equals(\"\")))) { ModelHandler.removeItem(book.getIsbn(), \"has_isbn\", book.getIsbn(), 'L', model); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5965/buggy-version/project.src.main.java.ModelHandler.java", "BodyUseAPI": ["ModelHandler.removeItem(book.getIsbn(),java.lang.String,book.getIsbn(),char,Model)", "Book.getIsbn()", "Book.getIsbn()"], "Fixed commit": "99895f2c03e4950f7223f4a3ad2a47b245bea37b", "Url": "https://api.github.com/repos/flomic/semanticTechnologies", "Date": "2017-02-02T09:38:25Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((book.getIsbn()) != null) && (!(book.getIsbn().equals(\"\")))) { ModelHandler.addItem(book.getIsbn(), \"has_isbn\", book.getIsbn(), 'L', model); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5965/buggy-version/project.src.main.java.ModelHandler.java", "BodyUseAPI": ["Book.getIsbn()", "ModelHandler.addItem(book.getIsbn(),java.lang.String,book.getIsbn(),char,Model)", "Book.getIsbn()"], "Fixed commit": "99895f2c03e4950f7223f4a3ad2a47b245bea37b", "Url": "https://api.github.com/repos/flomic/semanticTechnologies", "Date": "2017-02-02T09:38:25Z"},
{"Line": "=>793", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) { for (; i > 0; i-- , col--) { mask <<= 1; mask |= ((offsets[col]) != (eu.stratosphere.pact.common.type.PactRecord.NULL_INDICATOR_OFFSET)) ? 1 : 0; } serializer.writeByte(mask); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2376/buggy-version/pact.pact-common.src.main.java.eu.stratosphere.pact.common.type.PactRecord.java", "BodyUseAPI": [], "Fixed commit": "9658b7070314c0d1ee840955749f8fa46e335dd3", "Url": "https://api.github.com/repos/stratosphere-eu/stratosphere", "Date": "2012-01-24T17:26:34Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["femr.data.daos.IRepository<femr.common.models.IPatient>.findAll(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((patients.size()) > 0) { response.setResponseObject(patients); }else { response.addError(\"patients\", \"No patients available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8543/buggy-version/app.femr.business.services.ResearchService.java", "BodyUseAPI": ["femr.business.dtos.ServiceResponse<java.util.List<? extends femr.common.models.IPatient>>.setResponseObject(java.util.List<? extends femr.common.models.IPatient>)"], "Fixed commit": "3685c7368b7d362a9a33abf9843a0aa2b1ad79d4", "Url": "https://api.github.com/repos/codeitandloadit/research", "Date": "2014-03-09T04:02:22Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((setValue.toString().equals(\"true\")) || (setValue.toString().equals(\"false\"))) { setValue = new java.lang.Boolean(setValue.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1672/buggy-version/src.main.java.com.gpii.transformer.TransformerManager.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "6047c08f45d1de95d9a85fe245fb654f8984adf0", "Url": "https://api.github.com/repos/NickKaklanis/RuleBasedMatchMaker_RESTful_WS_Maven", "Date": "2014-12-14T20:28:12Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTriggered)) { currentTimer.stop(); resetCurrentTimer(); roundView.setText(java.lang.String.format(\"0/%d\", maxRoundNumber)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3795/buggy-version/app.src.main.java.com.fighttimer.stambeto09.fighttimer.FightTimer.java", "BodyUseAPI": [], "Fixed commit": "083ff48bca05064b0673390a60a316c67ad7e16e", "Url": "https://api.github.com/repos/stambeto09/FightTimer", "Date": "2015-02-14T12:15:06Z"},
{"Line": "=>674", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.firebase.client.DataSnapshot.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (value != null) { boolean inRide = value.toLowerCase().contains(CentralData.uid.toLowerCase()); if (inRide) { CentralData.myRides.add(key1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3605/buggy-version/app.src.main.java.boilerride.com.boilerride.ShowRidesActivity.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.contains(CentralData.uid.toLowerCase())"], "Fixed commit": "fec0ef614c0cc2e7e70c18c4223bfa894f8b6722", "Url": "https://api.github.com/repos/mahmoodn1/CS307Project", "Date": "2016-04-29T18:31:15Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tree.root) == null) return \"Tree has no nodes.\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/913/buggy-version/src.com.jwetherell.algorithms.data_structures.Trie.java", "BodyUseAPI": [], "Fixed commit": "025fca6b83e3a672ac3f2f32cd70ac617ecb426a", "Url": "https://api.github.com/repos/phishman3579/java-algorithms-implementation", "Date": "2017-08-09T19:18:54Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tree.root) == null) return \"Tree has no nodes.\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/913/buggy-version/src.com.jwetherell.algorithms.data_structures.PatriciaTrie.java", "BodyUseAPI": [], "Fixed commit": "025fca6b83e3a672ac3f2f32cd70ac617ecb426a", "Url": "https://api.github.com/repos/phishman3579/java-algorithms-implementation", "Date": "2017-08-09T19:18:54Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((que.peek()) == (-1)) counter++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/924/buggy-version/FormatWords.java", "BodyUseAPI": [], "Fixed commit": "03f58139d3bd15b043889f55ea1d8d5caab5ecaf", "Url": "https://api.github.com/repos/jessexu20/Leetcode", "Date": "2015-12-19T17:11:39Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((body.getLinearVelocity().y) < 0) { body.setLinearVelocity(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6117/buggy-version/core.src.com.develorain.game.Tools.PlayerController.java", "BodyUseAPI": ["com.badlogic.gdx.physics.box2d.Body.setLinearVelocity(int,int)"], "Fixed commit": "24171011fe9f0e41dbc7c004130a627b7b1a5d0c", "Url": "https://api.github.com/repos/Develorain/Illumination", "Date": "2015-10-17T02:04:22Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((body.getLinearVelocity().y) < 0) { body.setLinearVelocity(body.getLinearVelocity().x, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6117/buggy-version/core.src.com.develorain.game.Tools.PlayerController.java", "BodyUseAPI": ["com.badlogic.gdx.physics.box2d.Body.getLinearVelocity()", "com.badlogic.gdx.physics.box2d.Body.setLinearVelocity(body.getLinearVelocity().x,int)"], "Fixed commit": "24171011fe9f0e41dbc7c004130a627b7b1a5d0c", "Url": "https://api.github.com/repos/Develorain/Illumination", "Date": "2015-10-17T02:04:22Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((body.getLinearVelocity().y) < 0) { body.setLinearVelocity(body.getLinearVelocity().x, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6117/buggy-version/core.src.com.develorain.game.Tools.PlayerController.java", "BodyUseAPI": ["com.badlogic.gdx.physics.box2d.Body.setLinearVelocity(body.getLinearVelocity().x,int)", "com.badlogic.gdx.physics.box2d.Body.getLinearVelocity()"], "Fixed commit": "24171011fe9f0e41dbc7c004130a627b7b1a5d0c", "Url": "https://api.github.com/repos/Develorain/Illumination", "Date": "2015-10-17T02:04:22Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((body.getLinearVelocity().y) < 0) { body.setLinearVelocity(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6117/buggy-version/core.src.com.develorain.game.Tools.PlayerController.java", "BodyUseAPI": ["com.badlogic.gdx.physics.box2d.Body.setLinearVelocity(int,int)"], "Fixed commit": "24171011fe9f0e41dbc7c004130a627b7b1a5d0c", "Url": "https://api.github.com/repos/Develorain/Illumination", "Date": "2015-10-17T02:04:22Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.user.appskeleton.HomePageActivity.findViewById(R.id.myo_switch)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (myoSwitch != null) { myoSwitch.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener() { public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) { } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1606/buggy-version/app.src.main.java.com.example.user.appskeleton.HomePageActivity.java", "BodyUseAPI": ["android.widget.Switch.setOnCheckedChangeListener(android.widget.CompoundButton.OnCheckedChangeListener)"], "Fixed commit": "aef55e00b26b842c13d243afebd5ca614f70fdb0", "Url": "https://api.github.com/repos/adalga/S-RAndroidDeneme", "Date": "2017-05-22T16:22:49Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.user.appskeleton.HomePageActivity.findViewById(R.id.hearth_rate_switch)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (hearthRateSwitch != null) { hearthRateSwitch.setOnCheckedChangeListener(new android.widget.CompoundButton.OnCheckedChangeListener() { public void onCheckedChanged(android.widget.CompoundButton buttonView, boolean isChecked) { } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1606/buggy-version/app.src.main.java.com.example.user.appskeleton.HomePageActivity.java", "BodyUseAPI": ["android.widget.Switch.setOnCheckedChangeListener(android.widget.CompoundButton.OnCheckedChangeListener)"], "Fixed commit": "aef55e00b26b842c13d243afebd5ca614f70fdb0", "Url": "https://api.github.com/repos/adalga/S-RAndroidDeneme", "Date": "2017-05-22T16:22:49Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getFirstMeasurement()) == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5849/buggy-version/org.envirocar.app.src.org.envirocar.app.storage.Track.java", "BodyUseAPI": [], "Fixed commit": "fbda9f9af736e28b1869fe2944ada8146f5bae57", "Url": "https://api.github.com/repos/enviroCar/enviroCar-app", "Date": "2013-09-11T12:26:40Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t.getFirstMeasurement()) == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5849/buggy-version/org.envirocar.app.src.org.envirocar.app.storage.Track.java", "BodyUseAPI": [], "Fixed commit": "fbda9f9af736e28b1869fe2944ada8146f5bae57", "Url": "https://api.github.com/repos/enviroCar/enviroCar-app", "Date": "2013-09-11T12:26:40Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.endsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endsWithDot) { pathBuilder.append(fr.faylixe.marklet.MarkletDocumentBuilder.UP_DIRECTORY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4348/buggy-version/src.main.java.fr.faylixe.marklet.MarkletDocumentBuilder.java", "BodyUseAPI": [], "Fixed commit": "e987eed3dba8117fc16b3fdb341c6267b12602f1", "Url": "https://api.github.com/repos/Faylixe/marklet", "Date": "2016-01-11T13:26:33Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(common.equals(target))) { final java.lang.String forward = target.substring((endsWithDot ? start : start + 1)); pathBuilder.append(forward.replace('.', '/')); pathBuilder.append('/'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4348/buggy-version/src.main.java.fr.faylixe.marklet.MarkletDocumentBuilder.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "e987eed3dba8117fc16b3fdb341c6267b12602f1", "Url": "https://api.github.com/repos/Faylixe/marklet", "Date": "2016-01-11T13:26:33Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((e.getDamager()) instanceof org.bukkit.entity.TNTPrimed) || ((e.getDamager()) instanceof org.bukkit.entity.Creeper)) { backend.logDamage(player, 3); }else { backend.logDamage(player, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/85/buggy-version/src.main.java.net.h31ix.anticheat.event.EntityListener.java", "BodyUseAPI": [], "Fixed commit": "c647bb4b6a7bf6fdff478c8f6b61c650cfcb667a", "Url": "https://api.github.com/repos/h31ix/AntiCheat", "Date": "2012-08-06T21:12:27Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((l1[1]) == 0) || ((l2[1]) == 0)) { l1[1] += 0.999999; l2[1] += 0.999999; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4345/buggy-version/app.src.main.java.org.aminb.mathtools.app.fragment.vector.LinesFragment.java", "BodyUseAPI": [], "Fixed commit": "1626fb7b87aa768ea8a6599fefd14026d136cbb3", "Url": "https://api.github.com/repos/aminb/mathtools", "Date": "2014-08-05T15:15:57Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i <= 9) { index = \"0\" + i; }else { index = \"\" + i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6320/buggy-version/src.BoardDisplay.java", "BodyUseAPI": [], "Fixed commit": "485e632301c507d50e7edb1bded2ed289921a975", "Url": "https://api.github.com/repos/NGrant92/ca-boardgame", "Date": "2017-03-22T21:33:58Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Bitmap.createBitmap(android.graphics.Bitmap,rect.left,rect.top,rect.width(),rect.height(),android.graphics.Matrix,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (result == bitmap) { result = bitmap.copy(bitmap.getConfig(), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1134/buggy-version/cropper.src.main.java.com.theartofdev.edmodo.cropper.BitmapUtils.java", "BodyUseAPI": ["android.graphics.Bitmap.copy(bitmap.getConfig(),boolean)", "android.graphics.Bitmap.getConfig()"], "Fixed commit": "87514b07d851f6b68eb43bc975db6cccb933b21b", "Url": "https://api.github.com/repos/ArthurHub/Android-Image-Cropper", "Date": "2016-04-20T16:55:14Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Bitmap.createBitmap(android.graphics.Bitmap,int,int,bitmap.getWidth(),bitmap.getHeight(),android.graphics.Matrix,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (newBitmap != bitmap) { bitmap.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1134/buggy-version/cropper.src.main.java.com.theartofdev.edmodo.cropper.BitmapUtils.java", "BodyUseAPI": ["android.graphics.Bitmap.recycle()"], "Fixed commit": "87514b07d851f6b68eb43bc975db6cccb933b21b", "Url": "https://api.github.com/repos/ArthurHub/Android-Image-Cropper", "Date": "2016-04-20T16:55:14Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(data.isNull(\"location\"))) { ((org.openstreetmap.josm.plugins.mapillary.MapillaryImage) (image)).setLocation(data.getString(\"location\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3749/buggy-version/src.org.openstreetmap.josm.plugins.mapillary.io.download.MapillaryImageInfoDownloadThread.java", "BodyUseAPI": ["javax.json.JsonObject.getString(java.lang.String)", "org.openstreetmap.josm.plugins.mapillary.MapillaryAbstractImage.setLocation(data.getString(\"location\"))"], "Fixed commit": "518df5601c34c6a4aba720762437708ff76b6d77", "Url": "https://api.github.com/repos/floscher/josm-mapillary-plugin", "Date": "2016-07-31T10:46:45Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((progress) >= (buildingRef.productionTime)) product = buildingRef.product;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/109/buggy-version/src.units.Building.java", "BodyUseAPI": [], "Fixed commit": "741b6e1d44d3d553dd16f10ccd25955eee671168", "Url": "https://api.github.com/repos/abar193/AbarCards", "Date": "2014-11-20T20:37:28Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.whizzosoftware.hobson.api.config.ConfigurationProperty>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((cp != null) && ((cp.getValue()) != null)) { map.put(name, cp.getValue().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8156/buggy-version/src.main.java.com.whizzosoftware.hobson.api.config.Configuration.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,cp.getValue().toString())", "com.whizzosoftware.hobson.api.config.ConfigurationProperty.getValue()", "cp.getValue().toString()"], "Fixed commit": "dfe070d1d842bb7feef91cf40ce36af4d3fb2195", "Url": "https://api.github.com/repos/whizzosoftware/hobson-hub-api", "Date": "2015-01-13T20:47:34Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter == null) { throw new java.lang.IllegalStateException(\"metric counter is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4093/buggy-version/core.server.worker.src.main.java.alluxio.worker.netty.DataServerBlockWriteHandler.java", "BodyUseAPI": [], "Fixed commit": "3553480f33eb63f654652e59b7cec8062fe1e56e", "Url": "https://api.github.com/repos/maobaolong/alluxio", "Date": "2017-06-09T03:48:14Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["serviceInstanceJson.getAsJsonObject().getAsJsonObject(\"spec\").get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (((instanceId == null) || (instanceId.isJsonNull())) || (instanceId.getAsString().isEmpty())) { serviceInstance.setId(com.asiainfo.ocmanager.rest.utils.UUIDFactory.getUUID()); }else { serviceInstance.setId(instanceId.getAsString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6129/buggy-version/src.com.asiainfo.ocmanager.rest.resource.TenantResource.java", "BodyUseAPI": ["com.asiainfo.ocmanager.persistence.model.ServiceInstance.setId(instanceId.getAsString())", "com.google.gson.JsonElement.getAsString()"], "Fixed commit": "b1388d9e9532a9b5551c4055c5ac97bed7d1704d", "Url": "https://api.github.com/repos/OCManager/RestServer", "Date": "2017-07-28T08:15:43Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eta < 0) eta = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5998/buggy-version/src.com.revin.util.VideoTranscoder.java", "BodyUseAPI": [], "Fixed commit": "e699a505119e19d2d4b8f40e170ecf9b5fb7831c", "Url": "https://api.github.com/repos/revintec/VideoTranscoder", "Date": "2015-01-25T06:10:44Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (agentList == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3524/buggy-version/src.edu.ucla.loni.server.Database.java", "BodyUseAPI": [], "Fixed commit": "ab75c3e62bff75eac47e7ec7038e5573b34b3ed8", "Url": "https://api.github.com/repos/suzannamw/CS130", "Date": "2012-06-07T16:43:50Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 4) channel = inputSplit[4].substring(1); else channel = inputSplit[i];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7535/buggy-version/Source.src.de.fro_ozen.cl4ire.IRCInputListener.java", "BodyUseAPI": [], "Fixed commit": "540bac0c3ecbbd6943dce8eb45235a1803da2b33", "Url": "https://api.github.com/repos/froozen/Claire", "Date": "2013-09-05T15:41:23Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["querqy.model.Term.toCharSequenceWithField()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(querqy.ComparableCharSequence.class.isAssignableFrom(seq.getClass()))) { seq = new querqy.ComparableCharSequenceWrapper(seq); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/665/buggy-version/querqy-core.src.main.java.querqy.rewrite.commonrules.model.DeleteInstruction.java", "BodyUseAPI": [], "Fixed commit": "cb4d7624c45ab949862f48b01834768d07cfceb5", "Url": "https://api.github.com/repos/shopping24/querqy", "Date": "2014-08-13T12:26:28Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.tileType) == 'H') { this.printNodeHashes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3390/buggy-version/Tile.java", "BodyUseAPI": [], "Fixed commit": "2cfc728a89d626a24d6e5d6abd309bb959e0e38b", "Url": "https://api.github.com/repos/Atonement100/tiger-zone", "Date": "2016-12-02T22:51:59Z"},
{"Line": "=>1116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.terrydr.eyeScope.FileOperateUtil.listFiles(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (imageListRight != null) { if (imageListRight.isEmpty()) { if (imageList != null) { if (imageList.isEmpty()) { finish(); return; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/99/buggy-version/src.android.com.terrydr.eyeScope.CameraActivity.java", "BodyUseAPI": ["java.util.List<java.io.File>.isEmpty()"], "Fixed commit": "5d10236b8fa00fece164cc740488e981561cbd24", "Url": "https://api.github.com/repos/liang19901030/com.junruihealthcare.JREye", "Date": "2016-06-07T09:43:17Z"},
{"Line": "=>1106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.terrydr.eyeScope.FileOperateUtil.listFiles(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (imageList != null) { if (imageList.isEmpty()) { if (imageListRight != null) { if (imageListRight.isEmpty()) { finish(); return; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/99/buggy-version/src.android.com.terrydr.eyeScope.CameraActivity.java", "BodyUseAPI": ["java.util.List<java.io.File>.isEmpty()"], "Fixed commit": "5d10236b8fa00fece164cc740488e981561cbd24", "Url": "https://api.github.com/repos/liang19901030/com.junruihealthcare.JREye", "Date": "2016-06-07T09:43:17Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.droidplanner.android.graphic.map.GraphicGuided.isVisible()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isGuidedVisible) { markersOnTheMap.remove(guided); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8440/buggy-version/Android.src.org.droidplanner.android.fragments.DroneMap.java", "BodyUseAPI": [], "Fixed commit": "c3278b53cb5f862399a64810ebf5bf45c266b06b", "Url": "https://api.github.com/repos/DroidPlanner/droidplanner", "Date": "2014-10-22T07:49:28Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.droidplanner.android.graphic.map.GraphicGuided.isVisible()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isGuidedVisible) { mMapFragment.updateMarker(guided); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8440/buggy-version/Android.src.org.droidplanner.android.fragments.DroneMap.java", "BodyUseAPI": [], "Fixed commit": "c3278b53cb5f862399a64810ebf5bf45c266b06b", "Url": "https://api.github.com/repos/DroidPlanner/droidplanner", "Date": "2014-10-22T07:49:28Z"},
{"Line": "=>950", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.FontMetrics.stringWidth(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (actualWidth > maxWidth) { java.awt.Graphics2D g2 = ((java.awt.Graphics2D) (gfx.create())); g2.translate(xCoord, baseLine); g2.scale((((double) (maxWidth)) / actualWidth), 1); g2.drawString(s, 0, 0); g2.dispose(); }else { gfx.drawChars(renderingBuffer.getBuf(), ((buf.getStart()) + offset), newBlockLen, xCoord, baseLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5019/buggy-version/src-terminal.com.jediterm.terminal.ui.TerminalPanel.java", "BodyUseAPI": ["java.awt.Graphics2D.scale(double,int)"], "Fixed commit": "640a18dd206f7c9bc2219cb999cc7e10370d861a", "Url": "https://api.github.com/repos/neoedmund/jediterm", "Date": "2015-12-15T07:28:43Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isUpdateDone) { isUpdateDone = false; new pt.drawgeo.map.MapsActivity.GetDrawsNear().execute(point); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8523/buggy-version/Android.src.pt.drawgeo.map.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "bdc384efb0f5f695c55d7d1477717cc95eeb4e6f", "Url": "https://api.github.com/repos/tiagobabo/drawgeo", "Date": "2012-06-18T15:06:16Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reset) { executeErrorLastTime = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2053/buggy-version/src.main.java.com.alibaba.druid.stat.JdbcSqlStat.java", "BodyUseAPI": [], "Fixed commit": "4d403fb158a9e0bce0489088e7b52866a3720bc9", "Url": "https://api.github.com/repos/ptma/druid", "Date": "2013-07-15T13:32:07Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reset) { executeErrorLast = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2053/buggy-version/src.main.java.com.alibaba.druid.stat.JdbcSqlStat.java", "BodyUseAPI": [], "Fixed commit": "4d403fb158a9e0bce0489088e7b52866a3720bc9", "Url": "https://api.github.com/repos/ptma/druid", "Date": "2013-07-15T13:32:07Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reset) { lastSlowParameters = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2053/buggy-version/src.main.java.com.alibaba.druid.stat.JdbcSqlStat.java", "BodyUseAPI": [], "Fixed commit": "4d403fb158a9e0bce0489088e7b52866a3720bc9", "Url": "https://api.github.com/repos/ptma/druid", "Date": "2013-07-15T13:32:07Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reset) { executeNanoSpanMaxOccurTime = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2053/buggy-version/src.main.java.com.alibaba.druid.stat.JdbcSqlStat.java", "BodyUseAPI": [], "Fixed commit": "4d403fb158a9e0bce0489088e7b52866a3720bc9", "Url": "https://api.github.com/repos/ptma/druid", "Date": "2013-07-15T13:32:07Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reset) { executeLastStartTime = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2053/buggy-version/src.main.java.com.alibaba.druid.stat.JdbcSqlStat.java", "BodyUseAPI": [], "Fixed commit": "4d403fb158a9e0bce0489088e7b52866a3720bc9", "Url": "https://api.github.com/repos/ptma/druid", "Date": "2013-07-15T13:32:07Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.incode.module.classification.dom.impl.category.CategoryRepository.findByReference(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (taxonomy == null) { final java.lang.String taxonomyName = org.apache.isis.applib.util.Enums.getFriendlyNameOf(this.taxonomyReference); taxonomy = categoryRepository.createTaxonomy(taxonomyName); taxonomy.setReference(this.taxonomyReference); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1480/buggy-version/estatioapp.app.src.main.java.org.estatio.module.application.seed.ClassificationApplicabilitySeedService.java", "BodyUseAPI": [], "Fixed commit": "b28b0e305f0d270b4dda2a76205c7ba60e4e7913", "Url": "https://api.github.com/repos/estatio/estatio", "Date": "2017-11-24T14:28:17Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (descExists) listener.getLogger().println(\"Desc Exists\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7623/buggy-version/src.main.java.org.jenkinsci.plugins.pagerduty.pipeline.PagerDutyTriggerStep.java", "BodyUseAPI": [], "Fixed commit": "167dc56745029e9aa15906b7645fbab3d42e645a", "Url": "https://api.github.com/repos/jenkinsci/pagerduty-plugin", "Date": "2017-12-30T23:37:24Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchString.length()) == 0) searchString = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8279/buggy-version/src.gui.SearchGUI.java", "BodyUseAPI": [], "Fixed commit": "0b79a9b693063ff833abd25162e6213373083b80", "Url": "https://api.github.com/repos/ak-padmalayan/TrackMyDownloads", "Date": "2015-10-18T09:07:52Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof java.util.Map) { java.util.Map<java.lang.String, java.lang.Object> map = ((java.util.Map<java.lang.String, java.lang.Object>) (o)); for (java.lang.String newKey : map.keySet()) { predicates.addAll(getPredicates(cb, path, newKey, map.get(newKey))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8090/buggy-version/ejbModule.com.cirs.dao.AbstractDao.java", "BodyUseAPI": [], "Fixed commit": "16ab9d56dfa73614542f10032dcff14183d12a44", "Url": "https://api.github.com/repos/rohankamat94/reportit-ejb", "Date": "2016-02-03T19:29:40Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["meeting.getGroup().getId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (groupId == (statusService.getNewestGroup(mr.getStudent().getId()))) evaluated.add(mr.getStudent().getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5830/buggy-version/src.main.java.ua.ukma.nc.controller.MeetingController.java", "BodyUseAPI": ["mr.getStudent().getId()", "java.util.List<java.lang.Long>.add(mr.getStudent().getId())", "ua.ukma.nc.entity.MeetingReview.getStudent()"], "Fixed commit": "34eb4d98d5c0b729c4728cfe9e32c4c0dd09125f", "Url": "https://api.github.com/repos/YSSerious/TrainingCoursesManagementSystem", "Date": "2016-12-05T02:27:14Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(coordinates.equals(\"\"))) { java.lang.String[] splitcoordinates = coordinates.split(\" \"); jsonObjectArray.add(jj); addItem(\"testpunkt\", \"testpunkt\", new org.osmdroid.util.GeoPoint(java.lang.Double.parseDouble(splitcoordinates[0]), java.lang.Double.parseDouble(splitcoordinates[1]))); java.lang.System.out.println(java.lang.Double.parseDouble(splitcoordinates[0])); }else { java.lang.System.out.println(\"Leer\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7374/buggy-version/mw-android-friendica-01.src.de.unidue.stud.sehawagnsephbart.android.friendicaclient.geoaddon.LocationEventsOverlay.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "90384c2599f55dc5e1f9e8893792238b1cdb854a", "Url": "https://api.github.com/repos/pokerazor/friendica-for-android", "Date": "2013-01-08T17:45:12Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((condition1 && condition2) && condition3) && condition4) && condition5) { if (rowComesFirst) { try { rowCoord = java.lang.Integer.parseInt(answer.substring(((answer.indexOf(\"ROW\")) + 3), answer.indexOf(\"COL\"))); } catch (java.lang.NumberFormatException e1) { java.lang.System.out.println(e1); format1 = false; } try { colCoord = java.lang.Integer.parseInt(answer.substring(((answer.indexOf(\"COL\")) + 3), answer.length())); } catch (java.lang.NumberFormatException e1) { java.lang.System.out.println(e1); format1 = false; } format1 = true; }else { try { colCoord = java.lang.Integer.parseInt(answer.substring(((answer.indexOf(\"COL\")) + 3), answer.indexOf(\"ROW\"))); } catch (java.lang.NumberFormatException e1) { java.lang.System.out.println(e1); format1 = false; } try { colCoord = java.lang.Integer.parseInt(answer.substring(((answer.indexOf(\"ROW\")) + 3), answer.length())); } catch (java.lang.NumberFormatException e1) { java.lang.System.out.println(e1); format1 = false; } format1 = true; } }else format1 = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1695/buggy-version/CodeForcesExamples.src.Examples.Sheet.java", "BodyUseAPI": [], "Fixed commit": "7141b3475c954b6421d221b4f22dd0334587e3e3", "Url": "https://api.github.com/repos/Garend95/Java-practice", "Date": "2017-06-16T10:09:30Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input == null) || ((input.length()) <= 0)) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8184/buggy-version/src.main.java.com.imdp.instaclimb.Helpers.java", "BodyUseAPI": [], "Fixed commit": "517fce161818985c834db23035477f562fbfeb56", "Url": "https://api.github.com/repos/gambineri/InstaClimb", "Date": "2014-10-08T22:00:14Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4494/buggy-version/src.obj.Field.java", "BodyUseAPI": [], "Fixed commit": "3511cf0c83c4428838bed8bb6a578637b3458794", "Url": "https://api.github.com/repos/LionCherry/EPMS", "Date": "2017-12-05T09:03:40Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b == null) return b;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4494/buggy-version/src.obj.Field.java", "BodyUseAPI": [], "Fixed commit": "3511cf0c83c4428838bed8bb6a578637b3458794", "Url": "https://api.github.com/repos/LionCherry/EPMS", "Date": "2017-12-05T09:03:40Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((clientMap) != null) && (!(clientMap.isEmpty()))) { for (com.impetus.kundera.client.Client client : clientMap.values()) { client.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8719/buggy-version/kundera-core.src.main.java.com.impetus.kundera.persistence.PersistenceDelegator.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.impetus.kundera.client.Client>.values()"], "Fixed commit": "e3ddcbf1afd768ac1059f108483d1a75319eb929", "Url": "https://api.github.com/repos/Impetus/Kundera", "Date": "2011-11-17T12:37:32Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kotcrab.vis.editor.serializer.ShaderComponentSerializer.parentRead(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class<com.kotcrab.vis.runtime.component.ShaderComponent>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((component.asset) != null) { component.shader = shaderCache.get(component.asset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3968/buggy-version/Editor.src.com.kotcrab.vis.editor.serializer.ShaderComponentSerializer.java", "BodyUseAPI": ["com.kotcrab.vis.editor.module.project.ShaderCacheModule.get(component.asset)"], "Fixed commit": "53827196f28ae87e60617f8744b0f713b3b1832e", "Url": "https://api.github.com/repos/kotcrab/vis-editor", "Date": "2015-10-02T18:50:50Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kotcrab.vis.editor.module.scene.ComponentMapper<com.kotcrab.vis.runtime.component.ShaderComponent>.get(com.kotcrab.vis.editor.module.scene.Entity)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((shader.asset) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3968/buggy-version/Editor.src.com.kotcrab.vis.editor.module.scene.ShaderReloaderManager.java", "BodyUseAPI": [], "Fixed commit": "53827196f28ae87e60617f8744b0f713b3b1832e", "Url": "https://api.github.com/repos/kotcrab/vis-editor", "Date": "2015-10-02T18:50:50Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ancestor != null) { q = new com.textquo.twist.object.Query(kind, ancestor).addSort(sort.getKey(), sort.getValue()); }else { q = new com.textquo.twist.object.Query(kind).addSort(sort.getKey(), sort.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2336/buggy-version/src.main.java.com.textquo.twist.object.QueryStore.java", "BodyUseAPI": ["com.textquo.twist.object.Query.addSort(sort.getKey(),sort.getValue())"], "Fixed commit": "5a6d20fb217b4e0bbee0915d44f34f430817eedd", "Url": "https://api.github.com/repos/dotweblabs/twirl", "Date": "2015-01-09T22:12:50Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeTrajectory) == (joystickTraj)) { joystickTraj.updateVelocity(); joystickTraj.updateOmega(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5663/buggy-version/src.org.usfirst.frc.team1197.robot.TorMotionProfile.java", "BodyUseAPI": [], "Fixed commit": "85912d9f69c2bbd688d98f3cd7546ef1341463ab", "Url": "https://api.github.com/repos/FRC-Team-1197-Torbots/2017_Steamworks", "Date": "2017-02-11T03:50:38Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mListFilm.get(position).getCast()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((i + 1) == (castList.size())) { stringBuilder.append(\"...\"); }else { stringBuilder.append(\", \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3557/buggy-version/src.main.java.com.thedeveloperworldisyous.writereadxml.adapters.ListAdapter.java", "BodyUseAPI": [], "Fixed commit": "558bb6a9756e0ae80ba1e707c7931b2b88f6916e", "Url": "https://api.github.com/repos/CabezasGonzalezJavier/WriteReadXML", "Date": "2015-10-14T19:14:27Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((year % 100) == 0) return false; else if ((year % 400) == 0) return true; else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7189/buggy-version/src.CampingPrj.DialogCheckInTent.java", "BodyUseAPI": [], "Fixed commit": "703e07578c3c1cbd2d3a5692ae6a6d8681b4a4cc", "Url": "https://api.github.com/repos/natefun/Project-3-CIS-163", "Date": "2017-11-02T17:54:27Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((year % 100) == 0) return false; else if ((year % 400) == 0) return true; else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7189/buggy-version/src.CampingPrj.DialogCheckInRv.java", "BodyUseAPI": [], "Fixed commit": "703e07578c3c1cbd2d3a5692ae6a6d8681b4a4cc", "Url": "https://api.github.com/repos/natefun/Project-3-CIS-163", "Date": "2017-11-02T17:54:27Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.DocumentMapper.getDocument(d.getBuildingId()).getFile()) != null) { data.DocumentMapper.deleteDocument(d.getBuildingId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1482/buggy-version/PolygonWeb.src.data.DocumentMapper.java", "BodyUseAPI": ["data.DocumentMapper.deleteDocument(d.getBuildingId())", "entity.Document.getBuildingId()"], "Fixed commit": "4d9823e50cd75487ab659631444b03802ecde5b2", "Url": "https://api.github.com/repos/YousefMohsen/Polygon", "Date": "2016-12-08T03:02:16Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.broadinstitute.hellbender.utils.io.IOUtils.getPath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(inputPath.toUri().getScheme().startsWith(\"hdfs\"))) { logger.warn(\"Input folder is not in HDFS: {}\", () -> inputPath.toUri().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8800/buggy-version/src.main.java.org.magicdgs.readtools.tools.distmap.DownloadDistmapResult.java", "BodyUseAPI": ["inputPath.toUri().toString()", "org.magicdgs.readtools.tools.distmap.DownloadDistmapResult.warn(java.lang.String,() -> inputPath.toUri().toString())", "java.nio.file.Path.toUri()"], "Fixed commit": "f396ec2248ce06f54a73ab34bcf59e751516b91a", "Url": "https://api.github.com/repos/magicDGS/ReadTools", "Date": "2017-05-05T15:37:10Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["essentials.communication.worlddata_server2008.FellowPlayer.getAngleToPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((vAngleLeft < (-180.0)) && ((vAngleToPlayer >= (360 + vAngleLeft)) || (vAngleToPlayer <= vAngleRight))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1743/buggy-version/bot_mrlib.src.mrlib.core.PlayersLib.java", "BodyUseAPI": [], "Fixed commit": "46c503945e9b6a4d67015af7d89852bcc85de808", "Url": "https://api.github.com/repos/NorthernStars/MR-FWNS", "Date": "2016-11-04T13:35:48Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["essentials.communication.worlddata_server2008.FellowPlayer.getAngleToPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((vAngleToPlayer >= vAngleLeft) && (vAngleToPlayer <= vAngleRight)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1743/buggy-version/bot_mrlib.src.mrlib.core.PlayersLib.java", "BodyUseAPI": [], "Fixed commit": "46c503945e9b6a4d67015af7d89852bcc85de808", "Url": "https://api.github.com/repos/NorthernStars/MR-FWNS", "Date": "2016-11-04T13:35:48Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == 8) && ((questions.get(8).answer) == 1)) { i = 14; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4876/buggy-version/app.models.QuestionnaireModel.java", "BodyUseAPI": [], "Fixed commit": "13d3ee6a033c0d3e96f5c7556ea92059480a39f0", "Url": "https://api.github.com/repos/BISDigital/promptpayments", "Date": "2017-01-11T15:17:35Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(hasStrictHierarchicalRelation(parentOp, childOp, subset, iRC))) { hasNoParentWithChildrenMap.get(parentOp).remove(childOp); }else { updateHierarchicalRelation(parentOp, root, childOp, iRC); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/9206/buggy-version/src.main.java.sequenceplanner.visualization.algorithms.HierarchicalPartition.java", "BodyUseAPI": ["sequenceplanner.visualization.algorithms.HierarchicalPartition.updateHierarchicalRelation(sequenceplanner.model.data.OperationData,sequenceplanner.model.SOP.ISopNode,sequenceplanner.model.data.OperationData,sequenceplanner.visualization.algorithms.IRelationContainer)", "hasNoParentWithChildrenMap.get(parentOp).remove(sequenceplanner.model.data.OperationData)", "java.util.Map<sequenceplanner.model.data.OperationData, java.util.Set<sequenceplanner.model.data.OperationData>>.get(sequenceplanner.model.data.OperationData)"], "Fixed commit": "727e8120041f464b2b6d2b1f03762fa0140fea1f", "Url": "https://api.github.com/repos/kristoferB/javaSP", "Date": "2011-11-04T09:10:24Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.mifos.selfserviceapp.utils.Network.isConnected(getActivity()))) { org.mifos.selfserviceapp.utils.Toaster.show(rootView, getString(R.string.internet_not_connected)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5782/buggy-version/app.src.main.java.org.mifos.selfserviceapp.ui.fragments.TransferProcessFragment.java", "BodyUseAPI": [], "Fixed commit": "360ab400bd946912cb37963df27f1cb83254623b", "Url": "https://api.github.com/repos/openMF/mifos-mobile", "Date": "2017-07-27T07:42:39Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8623/buggy-version/src.main.java.com.hippo.yorozuya.Utilities.java", "BodyUseAPI": [], "Fixed commit": "45baecfb9991b8cbfb091a9b3aeddc569eadc3ff", "Url": "https://api.github.com/repos/seven332/Yorozuya", "Date": "2015-09-05T07:36:19Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((o == null) && (obj == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8623/buggy-version/src.main.java.com.hippo.yorozuya.Utilities.java", "BodyUseAPI": [], "Fixed commit": "45baecfb9991b8cbfb091a9b3aeddc569eadc3ff", "Url": "https://api.github.com/repos/seven332/Yorozuya", "Date": "2015-09-05T07:36:19Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (idx >= 0) updateStatusBar(varsTableModel.getVariable(idx)); else updateStatusBar(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2539/buggy-version/lpc-debugger.src.main.java.selfbus.debugger.gui.MainWindow.java", "BodyUseAPI": ["1.updateStatusBar(varsTableModel.getVariable(idx))", "selfbus.debugger.gui.table.VariablesTableModel.getVariable(int)"], "Fixed commit": "181ca620f3a4ea4be2b3413af3119e4f1adcb40c", "Url": "https://api.github.com/repos/selfbus/development-tools", "Date": "2014-04-13T06:04:53Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.ListSelectionModel.getMinSelectionIndex()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (idx >= 0) idx = rowSorter.convertRowIndexToModel(idx);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2539/buggy-version/lpc-debugger.src.main.java.selfbus.debugger.gui.MainWindow.java", "BodyUseAPI": ["javax.swing.table.TableRowSorter<selfbus.debugger.gui.table.VariablesTableModel>.convertRowIndexToModel(int)"], "Fixed commit": "181ca620f3a4ea4be2b3413af3119e4f1adcb40c", "Url": "https://api.github.com/repos/selfbus/development-tools", "Date": "2014-04-13T06:04:53Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((usage.averageCpuUsage) > 1) { usage.averageCpuUsage = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/970/buggy-version/Forschungsmethoden_Benchmarks.src.benchmark.harness.ResourceMonitor.java", "BodyUseAPI": [], "Fixed commit": "c096f73d4b891529fd20711be1a960d70c8cdfb2", "Url": "https://api.github.com/repos/fleckb/forschungsmethoden", "Date": "2012-11-25T18:51:10Z"},
{"Line": "=>1061", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((linesArea) != null) { basePaint.setShader(buildPaintColor(colors)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6395/buggy-version/lib.src.main.java.tech.linjiang.suitlines.SuitLines.java", "BodyUseAPI": [], "Fixed commit": "b4f09f5990176eae049b11b8c6e8bcc9ed7bf97f", "Url": "https://api.github.com/repos/whataa/SuitLines", "Date": "2017-05-15T03:23:24Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clean) >= (playersIn.size())) { cleanRound = true; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7661/buggy-version/HandOfPoker.java", "BodyUseAPI": [], "Fixed commit": "4776e2f936174d5ce006cf8cc9f4698d08adb9f3", "Url": "https://api.github.com/repos/COMP30050DHK/PokerBot", "Date": "2017-04-21T12:33:25Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ILanguageInfo.Registry.INSTANCE.getLanguageByFileExtension(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (info == null) throw new java.lang.RuntimeException(((\"There is no Xtext-language installed for file extension '\" + ext) + \"'.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1436/buggy-version/org.xpect.ui.src.org.xpect.ui.editor.XtEditorExecutableExtensionFactory.java", "BodyUseAPI": [], "Fixed commit": "e5fca33663473dc700bbc60d007e79db227f21c1", "Url": "https://api.github.com/repos/eclipse/Xpect", "Date": "2015-07-29T13:18:04Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (colorIndex.isEmpty()) colorIndex = \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5054/buggy-version/app.src.main.java.com.mikeklem.spaceexplorer.Star.java", "BodyUseAPI": [], "Fixed commit": "ce9519457703d71e05cee2639102fca1f58b279a", "Url": "https://api.github.com/repos/MikeKlemarewski/SpaceExplorer", "Date": "2014-11-10T01:18:15Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (context instanceof android.app.Activity) { ((android.app.Activity) (context)).finish(); }else { com.lwj.utils.log.LogUtil.w(\"this %s can't convert to activity\", com.lwj.utils.log.DebugUtil.getTag(context)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6508/buggy-version/library.common-utils.src.main.java.com.lwj.utils.ActivityUtil.java", "BodyUseAPI": ["com.lwj.utils.log.LogUtil.w(java.lang.String,com.lwj.utils.log.DebugUtil.getTag(context))", "com.lwj.utils.log.DebugUtil.getTag(android.content.Context)"], "Fixed commit": "483fb6abd830c2ccf8fb155b50963dd5e5bc1f46", "Url": "https://api.github.com/repos/lwjfork/common-utils", "Date": "2017-03-21T03:53:41Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subscriptionTrips) != null) { subscriptionTrips.unsubscribe(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4859/buggy-version/app.src.main.java.com.eleith.calchoochoo.TripFilterActivity.java", "BodyUseAPI": [], "Fixed commit": "602a526fcdf20afc95498b2746aecb066688c167", "Url": "https://api.github.com/repos/eleith/calchoochoo", "Date": "2017-04-18T05:05:14Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlockState(pos.down())", "net.minecraft.world.World.getBlockState(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((net.silentchaos512.wit.config.Config.enableSunflowerBugfix) && ((state.getBlock()) == (net.minecraft.init.Blocks.DOUBLE_PLANT))) && ((stateDown.getBlock()) == (net.minecraft.init.Blocks.DOUBLE_PLANT))) { state = stateDown; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3017/buggy-version/common.net.silentchaos512.wit.WIT.java", "BodyUseAPI": [], "Fixed commit": "ffde6101c458472ce8dd2cb2da5285be41fbe0e5", "Url": "https://api.github.com/repos/SilentChaos512/WIT", "Date": "2016-05-21T19:37:55Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSession()) != null) { getSession().invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2687/buggy-version/motu-web.src.main.java.fr.cls.atoll.motu.web.usl.request.actions.LogoutAction.java", "BodyUseAPI": [], "Fixed commit": "3c502b3b3ae340a65453519d2009b2f1b5a7e862", "Url": "https://api.github.com/repos/clstoulouse/motu", "Date": "2016-10-27T15:30:06Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nodes.Graph.getNode(s.getObject().toString())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (dst != null) selection.add(dst);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4636/buggy-version/src.nodes.ModifierPopulator.java", "BodyUseAPI": ["nodes.Selection.add(nodes.Node)"], "Fixed commit": "c208c08deb51cfac32ed73989052ab2d0dac9830", "Url": "https://api.github.com/repos/kdbanman/nodes", "Date": "2013-10-10T06:34:43Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nodes.Graph.getNode(s.getObject().toString())", "nodes.Graph.getNode(s.getSubject().toString())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((src != null) && (dst != null)) { nodes.Edge edge = graph.getEdge(src, dst); if (edge != null) selection.add(graph.getEdge(src, dst)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4636/buggy-version/src.nodes.ModifierPopulator.java", "BodyUseAPI": ["nodes.Selection.add(graph.getEdge(src, dst))", "nodes.Graph.getEdge(nodes.Node,nodes.Node)", "nodes.Graph.getEdge(nodes.Node,nodes.Node)"], "Fixed commit": "c208c08deb51cfac32ed73989052ab2d0dac9830", "Url": "https://api.github.com/repos/kdbanman/nodes", "Date": "2013-10-10T06:34:43Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nodes.Graph.getNode(s.getSubject().toString())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (src != null) selection.add(src);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4636/buggy-version/src.nodes.ModifierPopulator.java", "BodyUseAPI": ["nodes.Selection.add(nodes.Node)"], "Fixed commit": "c208c08deb51cfac32ed73989052ab2d0dac9830", "Url": "https://api.github.com/repos/kdbanman/nodes", "Date": "2013-10-10T06:34:43Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getBestProvider(android.location.Criteria,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (provider != null) { try { myLocation = lm.getLastKnownLocation(provider); } catch (java.lang.SecurityException e) { android.util.Log.w(\"Map\", \"Permission denied for GPS location\"); } }else { android.util.Log.w(\"Map\", \"No location provider found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8107/buggy-version/app.src.main.java.com.platypii.asr.MapsActivity.java", "BodyUseAPI": ["android.location.LocationManager.getLastKnownLocation(java.lang.String)"], "Fixed commit": "09b739914c9e4a5cdaf7542c0a19901ea82f273f", "Url": "https://api.github.com/repos/platypii/AntennaMap", "Date": "2016-01-12T04:39:42Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (urls.containsKey(aQuality)) { return urls.get(aQuality).getFileSize(); }else { return 0L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3942/buggy-version/src.main.java.de.mediathekview.mlib.daten.Film.java", "BodyUseAPI": ["urls.get(aQuality).getFileSize()", "java.util.Map<de.mediathekview.mlib.daten.Qualities, de.mediathekview.mlib.daten.FilmUrl>.get(de.mediathekview.mlib.daten.Qualities)"], "Fixed commit": "37095757f1948d9731bed9628e554093c19a4c7f", "Url": "https://api.github.com/repos/mediathekview/MLib", "Date": "2017-06-13T17:09:09Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.item.isVisited()) { visitedBox.setChecked(true); }else { visitedBox.setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7210/buggy-version/BlocSpot.src.main.java.com.bloc.blocspot.adapters.ItemAdapter.java", "BodyUseAPI": [], "Fixed commit": "63a38fec23c396bf8a0c7ac92f895dc39d5cf44b", "Url": "https://api.github.com/repos/MkWf/android-blocspot", "Date": "2015-02-16T23:39:52Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (version == 400) { motd.setVersion(\"4.0.1\"); motd.addChange(tr(lang, \"Solucionado problema con estaciones de Meteocat\", \"Solved problem with Meteocat stations\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6084/buggy-version/Project.tolometGae.src.main.java.com.akrog.tolomet.gae.Controller.java", "BodyUseAPI": [], "Fixed commit": "2cd6a13ba240fdfcb8b8ba13328b0f7ab0332784", "Url": "https://api.github.com/repos/akrogp/tolomet", "Date": "2016-02-10T11:49:13Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (driver.findElement(org.openqa.selenium.By.xpath(\"//tr[contains(@class,'item-row')]\")).getText().contains(\"secs\")) com.voyanta.data.pageobject.voyanta.pageobject.WaitUtils.waitForTextIsNotPresentInElement(driver, org.openqa.selenium.By.xpath(\"//tr[contains(@class,'item-row')]\"), Text);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3071/buggy-version/src.main.java.com.voyanta.data.pageobject.voyanta.pageobject.DataManager.java", "BodyUseAPI": ["com.voyanta.data.pageobject.voyanta.pageobject.WaitUtils.waitForTextIsNotPresentInElement(org.openqa.selenium.WebDriver,org.openqa.selenium.By.xpath(\"//tr[contains(@class,'item-row')]\"),java.lang.String)"], "Fixed commit": "473ba90b0e4faab3b3ddc38eef9680329874358d", "Url": "https://api.github.com/repos/sangajala/voyanta-data-tests", "Date": "2014-08-07T10:59:11Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((files[i].isDirectory()) && (files[i].getName().startsWith(\".\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5539/buggy-version/src.freemail.MessageBank.java", "BodyUseAPI": [], "Fixed commit": "8126f54c03c31cb89a382fe044ff9b87c8e040e9", "Url": "https://api.github.com/repos/freenet/plugin-Freemail-staging", "Date": "2011-05-15T15:09:27Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mapFragment) != null) { getChildFragmentManager().beginTransaction().remove(mapFragment).commit(); mapFragment = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1297/buggy-version/app.src.main.java.social.entourage.android.map.tour.information.TourInformationFragment.java", "BodyUseAPI": [], "Fixed commit": "49af481f3fca917b7d5798fd8e8dea6b304dd03e", "Url": "https://api.github.com/repos/ReseauEntourage/entourage-android", "Date": "2016-03-22T10:47:39Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getPageManager().getRepository().getStub(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(userfolder.exists())) { java.io.File userfolderfile = new java.io.File(userfolder.getAbsolutePath()); userfolderfile.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3674/buggy-version/src.java.com.openedit.users.filesystem.XmlUserArchive.java", "BodyUseAPI": ["org.openedit.repository.ContentItem.getAbsolutePath()"], "Fixed commit": "751efc8b15d5be7ee9461a7c75aaad37087bc1db", "Url": "https://api.github.com/repos/entermedia-community/entermedia-core", "Date": "2015-12-01T15:50:08Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.get(i)) instanceof se.lth.cs.srl.corpus.Predicate) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2706/buggy-version/src.se.lth.cs.srl.pipeline.PredicateIdentifier.java", "BodyUseAPI": [], "Fixed commit": "f2830bb92f81ee8ef65872691dde015e609ba1b9", "Url": "https://api.github.com/repos/microth/mateplus", "Date": "2016-03-04T14:16:17Z"},
{"Line": "=>1329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(playType.equals(\"Penalty\"))) fieldPos += gnLs;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7033/buggy-version/app.src.main.java.com.kerbysoft.qwikcut.speakstats.Game.java", "BodyUseAPI": [], "Fixed commit": "edcb9291c9c8e71076e78228dda4916d386642b6", "Url": "https://api.github.com/repos/jkerb8/SpeakStats", "Date": "2016-04-10T00:54:17Z"},
{"Line": "=>1499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playType.equals(\"Penalty\")) { if (defensivePenalty) fieldPos += gnLs; else fieldPos -= gnLs; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7033/buggy-version/app.src.main.java.com.kerbysoft.qwikcut.speakstats.Game.java", "BodyUseAPI": [], "Fixed commit": "edcb9291c9c8e71076e78228dda4916d386642b6", "Url": "https://api.github.com/repos/jkerb8/SpeakStats", "Date": "2016-04-10T00:54:17Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (iStorageType != null) { if (!(iDatabaseURL.toLowerCase().startsWith(iStorageType.toLowerCase()))) throw new java.lang.IllegalArgumentException(((\"Storage type '\" + iStorageType) + \"' is different by storage type in URL\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1491/buggy-version/tools.src.main.java.com.orientechnologies.orient.console.OConsoleDatabaseApp.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "2a47954de8c5fe2b1e71f5abbba4de35edb33d9c", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-09-01T10:37:07Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.inventory.InventoryClickEvent.getInventory()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((chestInv.getHolder()) instanceof org.bukkit.block.Chest) { loc = ((org.bukkit.block.Chest) (chestInv.getHolder())).getLocation(); }else if ((chestInv.getHolder()) instanceof org.bukkit.block.DoubleChest) { loc = ((org.bukkit.block.DoubleChest) (chestInv.getHolder())).getLocation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2775/buggy-version/src.main.java.de.epiceric.shopchest.listeners.ShopInteractListener.java", "BodyUseAPI": ["org.bukkit.inventory.Inventory.getHolder()", "((org.bukkit.block.Chest) (chestInv.getHolder())).getLocation()", "org.bukkit.inventory.Inventory.getHolder()", "((org.bukkit.block.DoubleChest) (chestInv.getHolder())).getLocation()", "org.bukkit.inventory.Inventory.getHolder()"], "Fixed commit": "8533c017e7ec150c3c4f4f99f0045ea4589e457a", "Url": "https://api.github.com/repos/EpicEricEE/ShopChest", "Date": "2017-06-27T19:57:17Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initialised) { data.drawBFCprimitive_GL20(drawOnlyMode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8574/buggy-version/src.org.nschmidt.ldparteditor.data.PGDataProxy.java", "BodyUseAPI": [], "Fixed commit": "b8f33c33af96d9aa0034cdc238a31bdfd7a29ea7", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-08-20T08:39:50Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initialised) { data.drawBFCprimitive_GL33(stack, drawOnlyMode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8574/buggy-version/src.org.nschmidt.ldparteditor.data.PGDataProxy.java", "BodyUseAPI": [], "Fixed commit": "b8f33c33af96d9aa0034cdc238a31bdfd7a29ea7", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-08-20T08:39:50Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (name == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3070/buggy-version/src.Structure.ClassInfo.java", "BodyUseAPI": [], "Fixed commit": "35fc259c25c0e71aebd55133460a9068672aaef6", "Url": "https://api.github.com/repos/dontpanic42/Diss-O-Tron", "Date": "2014-04-23T15:56:30Z"},
{"Line": "=>2661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bitcoinj.core.TransactionInput.getConnectedOutput()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (output.isMineOrWatched(this)) checkState(myUnspents.add(output));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6745/buggy-version/core.src.main.java.org.bitcoinj.core.Wallet.java", "BodyUseAPI": ["org.bitcoinj.core.Wallet.checkState(myUnspents.add(output))", "java.util.HashSet<org.bitcoinj.core.TransactionOutput>.add(org.bitcoinj.core.TransactionOutput)"], "Fixed commit": "512d281d374c49b109eb79687042efafc083a072", "Url": "https://api.github.com/repos/bitcoinj/bitcoinj", "Date": "2016-03-05T00:04:22Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.qweex.callisto.chat.IrcService.instance) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1712/buggy-version/src.com.qweex.callisto.chat.IrcService.java", "BodyUseAPI": [], "Fixed commit": "efeb747019973d0e6345aef5b3ccfda9a873b2b9", "Url": "https://api.github.com/repos/notbryant/callisto-app", "Date": "2014-07-18T08:46:08Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((password.length) == (password2.length)) { for (int i = 0; (i < (password.length)) && same; i++) { same = (password[i]) == (password2[i]); } }else { same = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4974/buggy-version/src.data.PokeUtils.java", "BodyUseAPI": [], "Fixed commit": "f99ccbd38c7015277ade14c0b57a66d3f9a5a152", "Url": "https://api.github.com/repos/JimiHFord/PokeManz", "Date": "2013-05-03T04:53:22Z"},
{"Line": "=>1736", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c.type) == (Type.T_INT)) { bytecodes.add(new wyjc.io.Bytecode.Invoke(((wyjc.io.JvmType.Clazz) (type)), \"intDivide\", ftype, Bytecode.VIRTUAL)); }else { bytecodes.add(new wyjc.io.Bytecode.Invoke(((wyjc.io.JvmType.Clazz) (type)), \"divide\", ftype, Bytecode.VIRTUAL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/700/buggy-version/src.wyjc.io.ClassFileBuilder.java", "BodyUseAPI": [], "Fixed commit": "d47e0645a6ee42db340bb820705bce6b7aeb4911", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-20T04:26:47Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (super.dispatchKeyEvent(event)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/769/buggy-version/kouchat-android-impl.src.main.java.net.usikkert.kouchat.android.controller.MainChatController.java", "BodyUseAPI": [], "Fixed commit": "3c20e187118ec20aef24a7bf30176c5c506a00fe", "Url": "https://api.github.com/repos/blurpy/kouchat-android", "Date": "2013-07-14T08:19:35Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (super.dispatchKeyEvent(event)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/769/buggy-version/kouchat-android-impl.src.main.java.net.usikkert.kouchat.android.controller.PrivateChatController.java", "BodyUseAPI": [], "Fixed commit": "3c20e187118ec20aef24a7bf30176c5c506a00fe", "Url": "https://api.github.com/repos/blurpy/kouchat-android", "Date": "2013-07-14T08:19:35Z"},
{"Line": "=>617", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (info.contains(\"\\n\")) { msi.gaml.statements.GamaPoint p = new msi.gaml.statements.GamaPoint(getLocation(scope)); double stringLenghtMax = 0; for (java.lang.String line : info.split(\"\\n\")) { g.drawString(line, getColor(scope), p, fSize, fName, getRotation(scope), fBitmap); p.y = (p.y) + fSize; if ((line.length()) > stringLenghtMax) { stringLenghtMax = line.length(); } } return new java.awt.geom.Rectangle2D.Double(getLocation(scope).getX(), getLocation(scope).getY(), stringLenghtMax, 3); }else { return g.drawString(info, getColor(scope), getLocation(scope), fSize, fName, getRotation(scope), fBitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6657/buggy-version/msi.gama.core.src.msi.gaml.statements.DrawStatement.java", "BodyUseAPI": ["msi.gaml.statements.IGraphics.drawString(java.lang.String,java.awt.Color,msi.gaml.statements.ILocation,double,java.awt.Font,java.lang.Double,java.lang.Boolean)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "abf657290224e06ef999272b981c43a31ed7321d", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2016-01-15T18:02:08Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(osbbService.findByNameContaining(newOsbb.getName()).isEmpty())) { throw new java.lang.IllegalArgumentException(((\"osbb with such name \" + (newOsbb.getName())) + \" already exists\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5810/buggy-version/service.src.main.java.com.softserve.osbb.service.impl.RegistrationServiceImpl.java", "BodyUseAPI": ["com.softserve.osbb.model.Osbb.getName()"], "Fixed commit": "4a7451e6ff0944c89b46f31b869be48c01af33bc", "Url": "https://api.github.com/repos/NazDov/myosbb", "Date": "2016-10-30T12:53:10Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Range<java.lang.Double>.contains(java.lang.Double)", "com.google.common.collect.Range<java.lang.Double>.contains(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mzMatch && rtMatch) { if ((rowIonAnnotations.size()) > 0) { io.github.msdk.datamodel.ionannotations.IonAnnotation firstionAnnotation = rowIonAnnotations.get(0); if (firstionAnnotation.isNA()) rowIonAnnotations.remove(0); } boolean addIon = true; for (io.github.msdk.datamodel.ionannotations.IonAnnotation ionAnnotations : rowIonAnnotations) { if ((ionAnnotations.compareTo(ionAnnotation)) == 0) addIon = false; } if (addIon) rowIonAnnotations.add(ionAnnotation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7103/buggy-version/msdk-id.msdk-id-localdatabasesearch.src.main.java.io.github.msdk.id.localdatabasesearch.LocalDatabaseSearchMethod.java", "BodyUseAPI": [], "Fixed commit": "c290794a36b604868d8d9cb195aa325dc9dc04bf", "Url": "https://api.github.com/repos/tomas-pluskal/msdk", "Date": "2015-12-30T13:02:52Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\".equals(subprojectId)) { subprojectId = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3727/buggy-version/easysoa-registry-v1.easysoa-registry-rest-server.src.main.java.org.easysoa.registry.indicators.rest.IndicatorsController.java", "BodyUseAPI": [], "Fixed commit": "1eb7b8a4e3578e87b54785113237d081dcc174f9", "Url": "https://api.github.com/repos/easysoa/EasySOA-Incubation", "Date": "2013-03-05T17:31:07Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(newLayout.getClass().equals(spiderweb.TreeLayout.class))) { newLayout.setSize(currentViewer.getSize()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6971/buggy-version/src.spiderweb.GraphPopupMenu.java", "BodyUseAPI": ["spiderweb.Layout<spiderweb.graph.P2PVertex, spiderweb.graph.P2PConnection>.setSize(currentViewer.getSize())"], "Fixed commit": "7f2c8c1c07ca4defcd9f6b63e8468c868b951b70", "Url": "https://api.github.com/repos/Matthew-Smith/SpiderWeb", "Date": "2011-08-09T20:15:24Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (icommandsender instanceof net.minecraft.entity.player.EntityPlayerMP) { item = ((net.minecraft.entity.player.EntityPlayerMP) (icommandsender)).inventory.getCurrentItem(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6670/buggy-version/com.iconmaster.aec.command.ConfigCommand.java", "BodyUseAPI": [], "Fixed commit": "0cf6b89afdab6087bf16485c89be9f58f215a6bc", "Url": "https://api.github.com/repos/iconmaster5326/AetherCraft", "Date": "2014-02-18T16:05:05Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((metadataMap) != null) metadataMap.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7720/buggy-version/uk.ac.diamond.scisoft.analysis.src.uk.ac.diamond.scisoft.analysis.io.CSVLoader.java", "BodyUseAPI": [], "Fixed commit": "f8f22da6c0cdd1214f110d9c9032a1cbd5a21363", "Url": "https://api.github.com/repos/DawnScience/scisoft-core", "Date": "2015-04-28T16:29:52Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (matNode != null) { xj3d.filter.node.ArrayData ad = ((xj3d.filter.node.ArrayData) (matNode.getValue(\"diffuseColor\"))); if ((ad != null) && ((ad.data) != null)) { c.set(((float[]) (ad.data))[0], ((float[]) (ad.data))[1], ((float[]) (ad.data))[2]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7061/buggy-version/src.java.abfab3d.io.input.AttributedX3DReader.java", "BodyUseAPI": ["xj3d.filter.node.CommonEncodable.getValue(java.lang.String)"], "Fixed commit": "32297721bc22d1d51c0d11f3a0f06731b5e8d7a3", "Url": "https://api.github.com/repos/AbFab3D/AbFab3D", "Date": "2016-12-07T18:07:20Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (out != null) addTrianglesColor(coord, coordIndex, c, out);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7061/buggy-version/src.java.abfab3d.io.input.AttributedX3DReader.java", "BodyUseAPI": ["abfab3d.io.input.AttributedX3DReader.addTrianglesColor(float[],int[],abfab3d.core.Vec,abfab3d.core.AttributedTriangleCollector)"], "Fixed commit": "32297721bc22d1d51c0d11f3a0f06731b5e8d7a3", "Url": "https://api.github.com/repos/AbFab3D/AbFab3D", "Date": "2016-12-07T18:07:20Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xpjsky.oa.services.UserService.findByHql(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((dhs != null) && ((dhs.size()) > 0)) { userService.deleteAll(dhs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8791/buggy-version/src.main.java.com.xpjsky.oa.controller.admin.UserController.java", "BodyUseAPI": ["com.xpjsky.oa.services.UserService.deleteAll(java.util.List)"], "Fixed commit": "c859e5d8c56c3ac1cbfad07072ae86cffea5b9df", "Url": "https://api.github.com/repos/xpjsky/devices", "Date": "2014-12-31T03:06:58Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getIntExtra(AttributeEventExtra.EXTRA_MISSION_CURRENT_WAYPOINT,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (currentWaypoint != 0) { speak((\"Going for waypoint \" + currentWaypoint)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/737/buggy-version/Android.src.org.droidplanner.android.notifications.TTSNotificationProvider.java", "BodyUseAPI": ["org.droidplanner.android.notifications.TTSNotificationProvider.1.speak(java.lang.String)"], "Fixed commit": "f2849e523bacf48305cbc4b6a93c3e5dc68e8495", "Url": "https://api.github.com/repos/DroidPlanner/Tower", "Date": "2015-05-26T11:38:54Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.oscar.passwordgenerator.MainActivity.1.generateString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (passwordString != \"\") { result = generatePassword(passwordString, numberLenght); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2675/buggy-version/app.src.main.java.com.example.oscar.passwordgenerator.MainActivity.java", "BodyUseAPI": ["com.example.oscar.passwordgenerator.MainActivity.1.generatePassword(java.lang.String,java.lang.Integer)"], "Fixed commit": "3ec3c07b3803e75669b8f1d32a8ec355924a0e09", "Url": "https://api.github.com/repos/Balobba/PasswordGeneratorAndroidApp", "Date": "2017-11-07T13:11:17Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(voteCounts.containsKey(s))) { voteCounts.put(s, 0); this.choices.add(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5796/buggy-version/src.com.github.MikeKahn.CS356_Assignment1.Question.java", "BodyUseAPI": [], "Fixed commit": "b5b7ab8ff6cd46afade40c9129c1ba0d2e5569da", "Url": "https://api.github.com/repos/MikeKahn/CS356_Assignment1", "Date": "2016-10-18T05:40:12Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (expr != null) { expr.setParent(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3973/buggy-version/src.main.java.com.alibaba.druid.sql.ast.expr.SQLInListExpr.java", "BodyUseAPI": ["com.alibaba.druid.sql.ast.SQLExpr.setParent(com.alibaba.druid.sql.ast.expr.SQLInListExpr)"], "Fixed commit": "fb63307be3605209a6937d6735824cd2a0364f08", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2016-02-17T08:41:29Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((velocity.y) == (velocity.gravity)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2990/buggy-version/core.src.com.eogames.john.ecs.system.MovementSystem.java", "BodyUseAPI": [], "Fixed commit": "1f6f5c39d714acd3c93fd3070a0ed48efd569600", "Url": "https://api.github.com/repos/AlexandreIsMe/john", "Date": "2016-02-28T18:30:35Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((run) && (player1AI)) && (player2AI)) { while (!(gameOver)) runStep(); }else if ((run) && (player1AI)) { runStep(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5143/buggy-version/src.AIGame.java", "BodyUseAPI": [], "Fixed commit": "16d755fb348ef3e5758402b3495271916e8b540d", "Url": "https://api.github.com/repos/jab0079/AI-Program", "Date": "2014-12-08T06:21:12Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (methodName == \"getMoreResults\") return processMoreResults(method, args);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1486/buggy-version/src.main.java.org.vibur.dbcp.proxy.StatementInvocationHandler.java", "BodyUseAPI": [], "Fixed commit": "d081a8490de6e95408cbca5ee69ca4a0d1d0553b", "Url": "https://api.github.com/repos/vibur/vibur-dbcp", "Date": "2017-11-28T06:01:13Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allowOverrideDate) insertSQL = JdbcFeedPublisher.DATE_OVERRIDE_SQL;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3124/buggy-version/adapters.jdbc.src.main.java.org.atomhopper.jdbc.adapter.JdbcInserter.java", "BodyUseAPI": [], "Fixed commit": "04ba1b2ab680d5c803a9f7039d633cad668b60c1", "Url": "https://api.github.com/repos/usnavi/atom-hopper", "Date": "2014-04-08T17:56:47Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element instanceof org.eclipse.jdt.internal.core.CompilationUnit) { org.eclipse.jdt.internal.core.CompilationUnit cu = ((org.eclipse.jdt.internal.core.CompilationUnit) (element)); org.eclipse.core.resources.IResource myfile = cu.getResource(); de.ovgu.featureide.core.IFeatureProject featureProject = de.ovgu.featureide.core.CorePlugin.getFeatureProject(myfile); if (featureProject == null) { return null; } de.ovgu.featureide.core.builder.IComposerExtensionClass composer = featureProject.getComposer(); if (composer == null) { return null; } if ((composer.getGenerationMechanism()) == (de.ovgu.featureide.core.builder.IComposerExtensionClass.Mechanism.ASPECT_ORIENTED_PROGRAMMING)) { return null; } return (de.ovgu.featureide.ui.projectExplorer.ProjectExplorerLabelProvider.SPACE_STRING) + (myfile.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6789/buggy-version/plugins.de.ovgu.featureide.ui.src.de.ovgu.featureide.ui.projectExplorer.ProjectExplorerLabelProvider.java", "BodyUseAPI": [], "Fixed commit": "3c0379102e530a838b4ed5bd1befd6bc5a2e62d0", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-10-05T10:52:05Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((capacity) - (boardContainersCounts)) < containersCounts) && (((capacity) - (boardContainersCounts)) < (loadingContainersCounts))) { loadedContainers = (capacity) - (boardContainersCounts); boardContainersCounts = capacity; loadingContainersCounts -= loadedContainers; }else if ((((capacity) - (boardContainersCounts)) < containersCounts) || (containersCounts > (loadingContainersCounts))) { boardContainersCounts += loadingContainersCounts; loadedContainers = loadingContainersCounts; loadingContainersCounts = 0; }else { boardContainersCounts += containersCounts; loadingContainersCounts -= containersCounts; loadedContainers = containersCounts; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5951/buggy-version/dock-logic.src.main.java.com.yarachkin.dock.entity.Ship.java", "BodyUseAPI": [], "Fixed commit": "da8d46f9c60e40b92e01863eadea1d4f43b72f1c", "Url": "https://api.github.com/repos/IvanYarochkin/dock", "Date": "2017-12-10T19:03:44Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bytesRead) >= 0) { totalBytes += bytesRead; addBytes(b, bytesRead); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1613/buggy-version/source.com.microsoft.tfs.core.ws.runtime.src.com.microsoft.tfs.core.ws.runtime.client.TraceInputStream.java", "BodyUseAPI": [], "Fixed commit": "7f81db4ee78fa75a8d61424d10a0fe5583f2e29f", "Url": "https://api.github.com/repos/kgliang/team-explorer-everywhere", "Date": "2017-05-01T21:30:51Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bytesRead) >= 0) { totalBytes += bytesRead; addBytes(b, bytesRead); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1613/buggy-version/source.com.microsoft.tfs.core.ws.runtime.src.com.microsoft.tfs.core.ws.runtime.client.TraceInputStream.java", "BodyUseAPI": [], "Fixed commit": "7f81db4ee78fa75a8d61424d10a0fe5583f2e29f", "Url": "https://api.github.com/repos/kgliang/team-explorer-everywhere", "Date": "2017-05-01T21:30:51Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bytesRead) >= 0) { ++(totalBytes); if ((totalBytes) < (storeBytes)) { addBytes(new byte[]{ ((byte) (bytesRead)) }, 1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1613/buggy-version/source.com.microsoft.tfs.core.ws.runtime.src.com.microsoft.tfs.core.ws.runtime.client.TraceInputStream.java", "BodyUseAPI": [], "Fixed commit": "7f81db4ee78fa75a8d61424d10a0fe5583f2e29f", "Url": "https://api.github.com/repos/kgliang/team-explorer-everywhere", "Date": "2017-05-01T21:30:51Z"},
{"Line": "=>1672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (targetClass != null) { java.lang.Class fieldClass = org.eclipse.persistence.internal.helper.Helper.getClassFromClasseName(targetClass, helper.getClassLoader()); mapping.getField().setType(fieldClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2496/buggy-version/moxy.org.eclipse.persistence.moxy.src.org.eclipse.persistence.jaxb.compiler.MappingsGenerator.java", "BodyUseAPI": ["org.eclipse.persistence.internal.helper.Helper.getClassFromClasseName(java.lang.String,helper.getClassLoader())"], "Fixed commit": "089b49f4fedc3a1dc82e9a4bfeaf84b640a98c40", "Url": "https://api.github.com/repos/RallySoftware/eclipselink.runtime", "Date": "2014-01-30T19:25:23Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataViewerUrl.endsWith(\"/\")) { connURL = (dataViewerUrl) + \"api/explain/formats\"; }else { connURL = (dataViewerUrl) + \"/api/explain/formats\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4924/buggy-version/src.main.java.de.mpg.imeji.presentation.beans.ConfigurationBean.java", "BodyUseAPI": [], "Fixed commit": "733d98ea172f8f994ede12dfc1460e04988e8bc6", "Url": "https://api.github.com/repos/imeji-community/imeji", "Date": "2014-11-03T16:20:07Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (number < (size)) { for (int i = 0; i < number; i++) { hand.addCard(dealCard()); } prevSize = (size) + number; }else { throw new java.lang.IllegalArgumentException(\"Not enough cards in deck\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4054/buggy-version/GermanCards.src.org.ucoz.intelstat.gc.GDeck.java", "BodyUseAPI": [], "Fixed commit": "879455d8f2c2328466aa0d531c3abee989299bfe", "Url": "https://api.github.com/repos/InteLStaT/gcards", "Date": "2017-09-02T19:49:09Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((assignStmt.getRightOp()) instanceof soot.jimple.ArrayRef) { if (targetType instanceof soot.ArrayType) { targetType = ((soot.ArrayType) (targetType)).getElementType(); }else { targetType = ((soot.jimple.ArrayRef) (assignStmt.getRightOp())).getType(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7195/buggy-version/src.soot.jimple.infoflow.problems.InfoflowProblem.java", "BodyUseAPI": ["soot.jimple.AssignStmt.getRightOp()", "((soot.jimple.ArrayRef) (assignStmt.getRightOp())).getType()"], "Fixed commit": "017af5abbdb1ff5c4d7c5f92b9e63be6716d7bf1", "Url": "https://api.github.com/repos/titze/soot-infoflow", "Date": "2014-03-14T09:26:57Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.jimple.infoflow.util.BaseSelector.selectBase(defStmt.getLeftOp(),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (leftValue instanceof soot.jimple.ArrayRef) newType = buildArrayOrAddDimension(newType); else if ((defStmt.getRightOp()) instanceof soot.jimple.ArrayRef) { if (newType instanceof soot.ArrayType) { newType = ((soot.ArrayType) (newType)).getElementType(); }else { java.lang.System.out.println(\"no Array type!\"); newType = ((soot.jimple.ArrayRef) (defStmt.getRightOp())).getType(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7195/buggy-version/src.soot.jimple.infoflow.problems.BackwardsInfoflowProblem.java", "BodyUseAPI": [], "Fixed commit": "017af5abbdb1ff5c4d7c5f92b9e63be6716d7bf1", "Url": "https://api.github.com/repos/titze/soot-infoflow", "Date": "2014-03-14T09:26:57Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Looper.myLooper()) == null) { android.os.Looper.prepare(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/666/buggy-version/src.android.com.claudetech.medialister.MediaLister.java", "BodyUseAPI": [], "Fixed commit": "352169b74012e1ba3daf411d25fa54d5df1e1239", "Url": "https://api.github.com/repos/claudetech/cordova-plugin-media-lister", "Date": "2015-07-16T10:09:18Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerMoveEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((powerup.getLocation().getBlockY()) == (player.getLocation().getBlockY())) { if ((powerup.getLocation().getBlockZ()) == (player.getLocation().getBlockZ())) { for (int i = 0; i < 9; i++) { if ((player.getInventory().getItem(i)) == null) { com.endercrest.colorcube.events.MessageManager.getInstance().sendFMessage(\"game.pickup\", player, (\"type-\" + (com.endercrest.colorcube.events.PowerupManager.getInstance().getPowerupName(powerup.getType())))); remove.add(powerup); break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2841/buggy-version/src.main.java.com.endercrest.colorcube.events.PlayerMoveListener.java", "BodyUseAPI": ["java.util.List<com.endercrest.colorcube.game.Powerup>.add(com.endercrest.colorcube.game.Powerup)", "org.bukkit.entity.Player.getInventory()", "com.endercrest.colorcube.game.Powerup.getLocation()", "com.endercrest.colorcube.events.MessageManager.getInstance().sendFMessage(java.lang.String,org.bukkit.entity.Player,(\"type-\" + (com.endercrest.colorcube.events.PowerupManager.getInstance().getPowerupName(powerup.getType()))))", "org.bukkit.entity.Player.getLocation()", "com.endercrest.colorcube.events.PowerupManager.getInstance().getPowerupName(powerup.getType())", "powerup.getLocation().getBlockZ()", "com.endercrest.colorcube.game.Powerup.getType()", "player.getLocation().getBlockZ()", "player.getInventory().getItem(int)"], "Fixed commit": "dc83facf713cabd787126caa1fefa493f8b3b007", "Url": "https://api.github.com/repos/endercrest/ColorCube", "Date": "2015-01-09T21:11:46Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < (bits.length)) ret.append((bits[(i + start)] ? \"1\" : \"0\")); else ret.append('0');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3907/buggy-version/src.main.java.org.redstonechips.util.BooleanArrays.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "f42e97f8f444808bd7d30f96ff09b4f0b58517ba", "Url": "https://api.github.com/repos/socram8888/RedstoneChips", "Date": "2014-06-12T09:27:25Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((src.getLastInstructionIndex()) >= 0) { final com.ibm.wala.ssa.SSAInstruction relevantInstruction = src.getLastInstruction(); if ((relevantInstruction != null) && (this.filter.alwaysThrowsException(relevantInstruction))) { result = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2126/buggy-version/com.ibm.wala.core.src.com.ibm.wala.ipa.cfg.exceptionpruning.ExceptionFilter2EdgeFilter.java", "BodyUseAPI": ["Block.getLastInstruction()"], "Fixed commit": "65fcc2d5da113ab0fbc5bd1ef2648d0a3ce7de30", "Url": "https://api.github.com/repos/GrammaTech/WALA", "Date": "2015-10-23T12:55:39Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (options.isSetLoadMetadataType()) { mLoadMetadataType = alluxio.wire.LoadMetadataType.fromThrift(options.getLoadMetadataType()); }else if (!(options.isLoadDirectChildren())) { mLoadMetadataType = alluxio.wire.LoadMetadataType.Never; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4056/buggy-version/core.server.src.main.java.alluxio.master.file.options.ListStatusOptions.java", "BodyUseAPI": [], "Fixed commit": "8e3b4767aa36de0bb373cbcc2b68299c1b970f1d", "Url": "https://api.github.com/repos/gilv/tachyon", "Date": "2016-07-06T23:54:35Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((w.length()) != (x.length())) || ((x.length()) != (y.length()))) throw new java.lang.ArithmeticException(\"All 3 vector inputs must have equal lengths\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/903/buggy-version/JSAT.src.jsat.linear.VecOps.java", "BodyUseAPI": [], "Fixed commit": "599e1091ec433b49964254f34afd11a0297c8ee8", "Url": "https://api.github.com/repos/TKlerx/JSAT", "Date": "2015-05-16T06:02:29Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((w.length()) != (x.length())) || ((x.length()) != (y.length()))) throw new java.lang.ArithmeticException(\"All 3 vector inputs must have equal lengths\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/903/buggy-version/JSAT.src.jsat.linear.VecOps.java", "BodyUseAPI": [], "Fixed commit": "599e1091ec433b49964254f34afd11a0297c8ee8", "Url": "https://api.github.com/repos/TKlerx/JSAT", "Date": "2015-05-16T06:02:29Z"},
{"Line": "=>913", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((ident != null) && (ident.hasPlayer())) point = new com.forgeessentials.commons.selections.WorldPoint(ident.getPlayerMP());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3890/buggy-version/src.main.java.com.forgeessentials.permissions.core.ZonedPermissionHelper.java", "BodyUseAPI": ["com.forgeessentials.api.UserIdent.getPlayerMP()"], "Fixed commit": "9b637b853ecae904f57c32b027fc532c071f748b", "Url": "https://api.github.com/repos/Gakai/ForgeEssentialsMain", "Date": "2015-06-16T08:17:14Z"},
{"Line": "=>922", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((ident != null) && (ident.hasPlayer())) point = new com.forgeessentials.commons.selections.WorldPoint(ident.getPlayerMP());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3890/buggy-version/src.main.java.com.forgeessentials.permissions.core.ZonedPermissionHelper.java", "BodyUseAPI": ["com.forgeessentials.api.UserIdent.getPlayerMP()"], "Fixed commit": "9b637b853ecae904f57c32b027fc532c071f748b", "Url": "https://api.github.com/repos/Gakai/ForgeEssentialsMain", "Date": "2015-06-16T08:17:14Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (top instanceof org.mustbe.consulo.csharp.lang.psi.impl.source.resolve.type.CSharpRefTypeRef) { top = ((org.mustbe.consulo.csharp.lang.psi.impl.source.resolve.type.CSharpRefTypeRef) (top)).getInnerTypeRef(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2986/buggy-version/csharp-psi-impl.src.org.mustbe.consulo.csharp.lang.psi.impl.CSharpTypeUtil.java", "BodyUseAPI": [], "Fixed commit": "bb1a2c277ca66936743e30befafddde2f915caf3", "Url": "https://api.github.com/repos/consulo/consulo-csharp", "Date": "2016-07-18T20:59:40Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target instanceof org.mustbe.consulo.csharp.lang.psi.impl.source.resolve.type.CSharpRefTypeRef) { target = ((org.mustbe.consulo.csharp.lang.psi.impl.source.resolve.type.CSharpRefTypeRef) (target)).getInnerTypeRef(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2986/buggy-version/csharp-psi-impl.src.org.mustbe.consulo.csharp.lang.psi.impl.CSharpTypeUtil.java", "BodyUseAPI": [], "Fixed commit": "bb1a2c277ca66936743e30befafddde2f915caf3", "Url": "https://api.github.com/repos/consulo/consulo-csharp", "Date": "2016-07-18T20:59:40Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((date1.getTime()) >= ((date2.getTime()) - 86000000)) { getView().getTabsPane().getReportPanel().warnDateAfter(); }else if (((date1.getTime()) + 86400000) > (java.util.Calendar.getInstance().getTimeInMillis())) { javax.swing.JOptionPane.showMessageDialog(getView().getTabsPane().getReportPanel(), \"You can't select dates from the future!\", \"Wrong dates selected!\", 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7139/buggy-version/src.com.group8.controller.ReportsController.java", "BodyUseAPI": ["java.sql.Date.getTime()"], "Fixed commit": "6105115ad3e6231828bfce5fad01fed7316eaede", "Url": "https://api.github.com/repos/junysz/ProMusicaInventorySystem", "Date": "2014-05-05T22:47:13Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((token.length()) == 0) throw new java.lang.IllegalArgumentException(\"empty token string\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7278/buggy-version/src.statdoc.items.StatdocItemHub.java", "BodyUseAPI": [], "Fixed commit": "651e141de537151563d2f69f28d1351f8e48c23b", "Url": "https://api.github.com/repos/mas802/statdoc", "Date": "2015-05-07T04:36:35Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((syb5phrases.size()) > 1) && ((syb7phrases.size()) > 0)) { java.lang.System.out.println(\"=Haiku=\"); java.lang.System.out.println(syb5phrases.get(0)._phrase); java.lang.System.out.println(syb7phrases.get(0)._phrase); java.lang.System.out.println(syb5phrases.get(1)._phrase); java.lang.System.out.println(); }else { java.lang.System.out.println(\"No More Haikus\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3075/buggy-version/src.hackathon.Haiku.java", "BodyUseAPI": ["java.io.PrintStream.println(syb5phrases.get(1)._phrase)", "java.io.PrintStream.println(syb7phrases.get(0)._phrase)", "java.io.PrintStream.println(syb5phrases.get(0)._phrase)", "java.util.ArrayList<hackathon.Phrase>.get(int)", "java.util.ArrayList<hackathon.Phrase>.get(int)", "java.util.ArrayList<hackathon.Phrase>.get(int)"], "Fixed commit": "d992d7b6fc43846829be697d4fd011f63b780926", "Url": "https://api.github.com/repos/lbeitzel/WikiPoetry", "Date": "2017-11-05T17:25:31Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.lucene.document.InetAddressPoint.encode(java.net.InetAddress)", "org.apache.lucene.document.InetAddressPoint.encode(java.net.InetAddress)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.apache.lucene.util.StringHelper.compare(org.apache.lucene.document.InetAddressRange.BYTES, minEncoded, 0, maxEncoded, 0)) > 0) { throw new java.lang.IllegalArgumentException(\"min value cannot be greater than max value for InetAddressRange field\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7881/buggy-version/lucene.misc.src.java.org.apache.lucene.document.InetAddressRange.java", "BodyUseAPI": [], "Fixed commit": "ef8126e5eab7aec9c8775c2e08bd6c2bb1ef690f", "Url": "https://api.github.com/repos/abhidemon/lucene-solr", "Date": "2017-04-05T16:10:15Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(csvFile.exists())) { java.nio.file.Path zipFile = java.nio.file.Paths.get(file); java.nio.file.FileSystem fileSystem = java.nio.file.FileSystems.newFileSystem(zipFile, null); java.nio.file.Path source = fileSystem.getPath(csvFileName); java.nio.file.Files.copy(source, csvFile.toPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5282/buggy-version/server.src.findep.MarmotServlet.java", "BodyUseAPI": ["java.nio.file.Files.copy(java.nio.file.Path,java.nio.file.Path)", "java.io.File.toPath()"], "Fixed commit": "9127892876aacc8db472aebb30a625410cf7d6e1", "Url": "https://api.github.com/repos/samisalkosuo/finnish-dep-parser-docker", "Date": "2017-12-22T11:55:13Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((remainingAmmo) > 0) { nearbyActors.get(0).setActive(false); nearbyActors.clear(); this.remainingAmmo -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4171/buggy-version/src.edu.cpp.cs.cs141.final_project.Game_Objects.Actors.Player.java", "BodyUseAPI": [], "Fixed commit": "525b8639f9b9ae46bf61dc805723a03c2b545f61", "Url": "https://api.github.com/repos/fanfare00/CS141_FinalProject", "Date": "2016-11-22T18:41:45Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(deptRaw.isEmpty())) { dept = java.lang.Integer.parseInt(deptRaw); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1498/buggy-version/UsedCar.src.java.controller.Calculate.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "b451e93084052dbcfe56eb61fd2945825458c712", "Url": "https://api.github.com/repos/icerisa/UsedCar", "Date": "2017-07-28T15:26:03Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.itextpdf.text.pdf.PdfReader.getInfo()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((info.get(s)) != null) author = info.get(s);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5784/buggy-version/eREADer.app.src.main.java.at.ac.tuwien.ims.ereader.Services.BookService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "68926d31280b8348349924a763aabac2fd839add", "Url": "https://api.github.com/repos/SoulRiser/eREADer", "Date": "2014-09-15T09:32:28Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bookOfContent == null) || (content == null)) throw new at.ac.tuwien.ims.ereader.Services.ServiceException(ebook_loading_failed);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5784/buggy-version/eREADer.app.src.main.java.at.ac.tuwien.ims.ereader.Services.BookService.java", "BodyUseAPI": [], "Fixed commit": "68926d31280b8348349924a763aabac2fd839add", "Url": "https://api.github.com/repos/SoulRiser/eREADer", "Date": "2014-09-15T09:32:28Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.itextpdf.text.pdf.PdfReader.getInfo()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((info.get(s)) != null) title = info.get(s);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5784/buggy-version/eREADer.app.src.main.java.at.ac.tuwien.ims.ereader.Services.BookService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "68926d31280b8348349924a763aabac2fd839add", "Url": "https://api.github.com/repos/SoulRiser/eREADer", "Date": "2014-09-15T09:32:28Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(activeSiteId)) { throw new java.lang.IllegalStateException(\"No valid active site UUID found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8700/buggy-version/dbclient.src.main.java.com.emc.storageos.db.client.util.VdcConfigUtil.java", "BodyUseAPI": [], "Fixed commit": "da62a12be881e8598e92128643b75c572f02d652", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-14T10:00:20Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.SortedSet<org.qi4j.library.scheduler.schedule.ScheduleTime>.first()", "java.util.SortedSet<org.qi4j.library.scheduler.schedule.ScheduleTime>.first()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(first.equals(newFirst))) { if (((scheduleHandler) != null) && ((scheduleHandler.future) != null)) { scheduleHandler.future.cancel(true); } dispatchHandler(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6571/buggy-version/libraries.scheduler.src.main.java.org.qi4j.library.scheduler.SchedulerMixin.java", "BodyUseAPI": [], "Fixed commit": "8f89de588ebeb2e551fcc8b917565f8db2af7f7b", "Url": "https://api.github.com/repos/apache/polygene-java", "Date": "2015-07-08T06:33:45Z"},
{"Line": "=>566", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((point.getSecond()) != 0) { double factor = (((point.getSecond()) + currentSecond) - second) / (point.getSecond()); currentMeter += factor * (point.getMeter()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8551/buggy-version/SimulationView.src.railview.simulation.ui.GraphPaneController.java", "BodyUseAPI": ["railview.simulation.ui.GraphPaneController.TimeDistance.getSecond()", "railview.simulation.ui.GraphPaneController.TimeDistance.getMeter()", "railview.simulation.ui.GraphPaneController.TimeDistance.getSecond()"], "Fixed commit": "82f0397f1572cde0ea3069d5269d93ca33ddba8e", "Url": "https://api.github.com/repos/herrcui/RailView", "Date": "2016-07-25T08:29:24Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((child.getNodeType()) == (org.w3c.dom.Node.CDATA_SECTION_NODE)) { if (child instanceof org.w3c.dom.CharacterData) { org.w3c.dom.CharacterData cd = ((org.w3c.dom.CharacterData) (child)); return cd.getData(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2517/buggy-version/app.src.main.java.com.ubb.app.xml.XMLHelper.java", "BodyUseAPI": [], "Fixed commit": "4d574b520e07508fa7fcb7f96612f803a132f697", "Url": "https://api.github.com/repos/boldijar/ubb", "Date": "2015-10-04T12:13:21Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.awt.SystemTray.isSupported()) MagicGUI.trayNotifier.displayMessage(caption, text, type);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6343/buggy-version/src.org.magic.services.MTGControler.java", "BodyUseAPI": [], "Fixed commit": "f0d3a32ac36f549f2e334b0a12cae818a4811f37", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-07-09T11:21:44Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (_lastModifiedTime != null) { attributes.put(\"lastModifiedTime\", new java.util.Date(((org.kie.commons.java.nio.file.attribute.FileTime) (_lastModifiedTime)).toMillis())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6674/buggy-version/uberfire-backend.uberfire-backend-server.src.main.java.org.uberfire.backend.server.util.Paths.java", "BodyUseAPI": [], "Fixed commit": "9247155bbf905fcf1f6e2b759e528fb1d1bee9ff", "Url": "https://api.github.com/repos/winklerm/uberfire", "Date": "2013-04-10T14:23:38Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (_creationTime != null) { attributes.put(\"creationTime\", new java.util.Date(((org.kie.commons.java.nio.file.attribute.FileTime) (_creationTime)).toMillis())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6674/buggy-version/uberfire-backend.uberfire-backend-server.src.main.java.org.uberfire.backend.server.util.Paths.java", "BodyUseAPI": [], "Fixed commit": "9247155bbf905fcf1f6e2b759e528fb1d1bee9ff", "Url": "https://api.github.com/repos/winklerm/uberfire", "Date": "2013-04-10T14:23:38Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<T>.add(T)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (success) { for (java.util.Map.Entry<tachyon.master.IndexedSet.FieldIndex<T>, java.lang.Integer> index : mIndexMap.entrySet()) { java.util.Map<java.lang.Object, java.util.Set<T>> fieldValueToSet = mSetIndexedByFieldValue.get(index.getValue()); java.lang.Object value = index.getKey().getFieldValue(object); if (fieldValueToSet.containsKey(value)) { success = (fieldValueToSet.get(value).add(object)) && success; }else { fieldValueToSet.put(value, com.google.common.collect.Sets.newHashSet(object)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6931/buggy-version/servers.src.main.java.tachyon.master.IndexedSet.java", "BodyUseAPI": [], "Fixed commit": "31aa34b10c69a5d99385b9cd7ce87ea2f02aef22", "Url": "https://api.github.com/repos/shimingfei/Alluxio", "Date": "2015-09-10T05:36:10Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subTeam.getSubTeamsHasMembers()) == null) { subTeam.setSubTeamsHasMembers(new java.util.LinkedList<svm.domain.implementation.model.ISubTeamsHasMembersEntity>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5410/buggy-version/svm.domain.implementation.src.svm.domain.implementation.model.SubTeam.java", "BodyUseAPI": ["svm.domain.implementation.model.ISubTeamEntity.setSubTeamsHasMembers(java.util.LinkedList<svm.domain.implementation.model.ISubTeamsHasMembersEntity>)"], "Fixed commit": "a1a82bbf59367fdd958b4efd5b382406fd2a2d35", "Url": "https://api.github.com/repos/michaelzangerle/Team-C-SVM-Domain", "Date": "2012-11-09T11:06:30Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subTeam.getSubTeamsHasMembers()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5410/buggy-version/svm.domain.implementation.src.svm.domain.implementation.model.SubTeam.java", "BodyUseAPI": [], "Fixed commit": "a1a82bbf59367fdd958b4efd5b382406fd2a2d35", "Url": "https://api.github.com/repos/michaelzangerle/Team-C-SVM-Domain", "Date": "2012-11-09T11:06:30Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kardo.mancala.model.AbstractBowl.getPlayer()", "com.kardo.mancala.model.AbstractBowl.empty()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((bowl.getNext().isEmpty()) && ((bowl.getNext().getPlayer()) == player)) && ((bowl.getNext()) instanceof com.kardo.mancala.model.Bowl)) && (i == seeds)) { int idxOfBowl = board.indexOf(bowl.getNext()); int gravaHalIdx = (player * 7) - 1; int oppositeBowlIdx = ((6 - idxOfBowl) * 2) + idxOfBowl; if (!(board.get(oppositeBowlIdx).isEmpty())) { int opponentsSeeds = board.get(oppositeBowlIdx).empty(); ((com.kardo.mancala.model.GravaHal) (board.get(gravaHalIdx))).addSeeds((1 + opponentsSeeds)); } }else if (((bowl.getNext()) instanceof com.kardo.mancala.model.Bowl) || isUsersGravaHal) { bowl.getNext().increment(); bowl = bowl.getNext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6746/buggy-version/src.main.java.com.kardo.mancala.controller.CircularBoard.java", "BodyUseAPI": ["bowl.getNext().increment()", "com.kardo.mancala.model.AbstractBowl.getNext()", "com.kardo.mancala.model.AbstractBowl.getNext()", "java.util.ArrayList<com.kardo.mancala.model.AbstractBowl>.indexOf(bowl.getNext())", "com.kardo.mancala.model.AbstractBowl.getNext()", "com.kardo.mancala.model.AbstractBowl.getNext()"], "Fixed commit": "cff6ff75702dc89f068892b7419917af82a18fe3", "Url": "https://api.github.com/repos/zygote1984/kardo-mancala", "Date": "2014-12-15T08:15:46Z"},
{"Line": "=>520", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasArg(\"(uuid)\")) { java.util.ArrayList<java.lang.String> uuids = new java.util.ArrayList<java.lang.String>(); for (org.bukkit.entity.Player player : org.bukkit.Bukkit.getOnlinePlayers()) { uuids.add(player.getUniqueId().toString()); } for (java.lang.String name : plugin.getUuids().values()) { if (!(uuids.contains(name))) { uuids.add(name); } } addTabCompleteOption(\"(uuid)\", uuids); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3168/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Objects.CommandHandler.java", "BodyUseAPI": [], "Fixed commit": "80885c0cdda66e658cea4023477f569299412448", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-10-19T17:55:49Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasArg(\"(Player)\")) { java.util.ArrayList<java.lang.String> players = new java.util.ArrayList<java.lang.String>(); for (org.bukkit.entity.Player player : org.bukkit.Bukkit.getOnlinePlayers()) { players.add(player.getName()); } for (java.lang.String name : plugin.getUuids().keySet()) { if (!(players.contains(name))) { players.add(name); } } addTabCompleteOption(\"(Player)\", players); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3168/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Objects.CommandHandler.java", "BodyUseAPI": [], "Fixed commit": "80885c0cdda66e658cea4023477f569299412448", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-10-19T17:55:49Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i > 0) { return (dataset.getYValue(series, (i - 1))) + ((((dataset.getYValue(series, i)) - (dataset.getYValue(series, (i - 1)))) * (arg - (dataset.getXValue(series, (i - 1))))) / ((dataset.getXValue(series, i)) - (dataset.getXValue(series, (i - 1))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5448/buggy-version/src.main.java.com.isti.traceview.transformations.psd.ViewPSD.java", "BodyUseAPI": ["org.jfree.data.xy.XYSeriesCollection.getYValue(int,int)", "org.jfree.data.xy.XYSeriesCollection.getXValue(int,int)", "org.jfree.data.xy.XYSeriesCollection.getYValue(int,int)", "org.jfree.data.xy.XYSeriesCollection.getXValue(int,int)", "org.jfree.data.xy.XYSeriesCollection.getYValue(int,int)", "org.jfree.data.xy.XYSeriesCollection.getXValue(int,int)"], "Fixed commit": "d7864a55cbd8a49d7592951199dc9caa658eb37e", "Url": "https://api.github.com/repos/usgs/xmax", "Date": "2016-02-08T19:34:22Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.hof.university.app.data.DataManager.getInstance().getMyScheduleSize(getActivity().getApplicationContext())) > 0) { android.widget.Toast.makeText(getView().getContext(), getString(R.string.refreshFailed), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/2826/buggy-version/app.src.main.java.de.hof.university.app.fragment.AbstractListFragment.java", "BodyUseAPI": [], "Fixed commit": "eb19e74adaa10b9ad297b2cbc3062e8a7907510f", "Url": "https://api.github.com/repos/HochschuleHofStundenplanapp/AndroidStundenplanHof", "Date": "2016-11-09T17:00:21Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (stockroom != null) { criteria.add(org.hibernate.criterion.Restrictions.and(org.hibernate.criterion.Restrictions.or(org.hibernate.criterion.Restrictions.eq(HibernateCriteriaConstants.SOURCE, stockroom), org.hibernate.criterion.Restrictions.eq(HibernateCriteriaConstants.DESTINATION, stockroom)), org.hibernate.criterion.Restrictions.or(org.hibernate.criterion.Restrictions.eq(HibernateCriteriaConstants.CREATOR, user), org.hibernate.criterion.Property.forName(HibernateCriteriaConstants.INSTANCE_TYPE).in(subQuery)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/775/buggy-version/api.src.main.java.org.openmrs.module.openhmis.inventory.api.impl.StockOperationDataServiceImpl.java", "BodyUseAPI": ["org.hibernate.criterion.Restrictions.and(org.hibernate.criterion.Restrictions.or(org.hibernate.criterion.Restrictions.eq(HibernateCriteriaConstants.SOURCE, stockroom), org.hibernate.criterion.Restrictions.eq(HibernateCriteriaConstants.DESTINATION, stockroom)),org.hibernate.criterion.Restrictions.or(org.hibernate.criterion.Restrictions.eq(HibernateCriteriaConstants.CREATOR, user), org.hibernate.criterion.Property.forName(HibernateCriteriaConstants.INSTANCE_TYPE).in(subQuery)))", "org.hibernate.criterion.Restrictions.eq(HibernateCriteriaConstants.DESTINATION,org.openmrs.module.openhmis.inventory.api.model.Stockroom)", "org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.and(org.hibernate.criterion.Restrictions.or(org.hibernate.criterion.Restrictions.eq(HibernateCriteriaConstants.SOURCE, stockroom), org.hibernate.criterion.Restrictions.eq(HibernateCriteriaConstants.DESTINATION, stockroom)), org.hibernate.criterion.Restrictions.or(org.hibernate.criterion.Restrictions.eq(HibernateCriteriaConstants.CREATOR, user), org.hibernate.criterion.Property.forName(HibernateCriteriaConstants.INSTANCE_TYPE).in(subQuery))))", "org.hibernate.criterion.Restrictions.eq(HibernateCriteriaConstants.SOURCE,org.openmrs.module.openhmis.inventory.api.model.Stockroom)", "org.hibernate.criterion.Restrictions.or(org.hibernate.criterion.Restrictions.eq(HibernateCriteriaConstants.SOURCE, stockroom),org.hibernate.criterion.Restrictions.eq(HibernateCriteriaConstants.DESTINATION, stockroom))"], "Fixed commit": "3b35017c14e1e34ec1255584b7036a5440b72533", "Url": "https://api.github.com/repos/OpenHMIS/openmrs-module-openhmis.inventory", "Date": "2015-05-05T13:40:08Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<fr.vinze.textanalysis.document.SegmentedTextDocument>.indexOf(fr.vinze.textanalysis.document.SegmentedTextDocument)", "java.util.List<fr.vinze.textanalysis.document.Token>.indexOf(fr.vinze.textanalysis.document.Token)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((docId == (-1)) || (tokenId == (-1))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/1423/buggy-version/src.main.java.fr.vinze.textanalysis.statistics.impl.TokenFrequencyMatrix.java", "BodyUseAPI": [], "Fixed commit": "a7b14d8ad7591bb21d68fe62161f5c11446f2265", "Url": "https://api.github.com/repos/vinzelec/textanalysis", "Date": "2014-10-23T20:35:48Z"},
{"Line": "=>1187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (animationResetCbx.isSelected()) getAnimationWidget().gotoBeginning();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3281/buggy-version/src.ucar.unidata.idv.ui.ImageSequenceGrabber.java", "BodyUseAPI": [], "Fixed commit": "455c80692991e3f4883df8167e5911642d255c9a", "Url": "https://api.github.com/repos/Unidata/IDV", "Date": "2014-06-20T18:32:45Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debug) { java.lang.System.err.println(java.lang.String.format(\"%s: %s\", channel, e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7015/buggy-version/src.me.drton.jmavlib.mavlink.MAVLinkStream.java", "BodyUseAPI": [], "Fixed commit": "11a5adbc3b9de14f6a367b91708820f6a39b7266", "Url": "https://api.github.com/repos/DrTon/jMAVlib", "Date": "2015-05-15T09:45:30Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tanaguru.service.command.AuditCommandImpl.executeCommand(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (resultW3C != null) { resultW3C = resultW3C.replace(\"\u201c\", \"\\\"\").replace(\"\u201d\", \"\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6345/buggy-version/engine.tanaguru-engine.src.main.java.org.tanaguru.service.command.AuditCommandImpl.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "f3f21d9339792cd57560d642ca6f0d6b942ee9fe", "Url": "https://api.github.com/repos/Tanaguru/Tanaguru", "Date": "2017-06-23T13:21:47Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ContentResolver.query(android.net.Uri,<nulltype>,java.lang.String,java.lang.String[],java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (cursor.moveToFirst()) { before = cursor.getLong(cursor.getColumnIndex(\"date\")); currency = ((cursor.getFloat(cursor.getColumnIndex(\"sell\"))) + (cursor.getFloat(cursor.getColumnIndex(\"buy\")))) / 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4536/buggy-version/app.src.main.java.com.sungjae.app.showmethemoney.service.OperationService.java", "BodyUseAPI": ["android.database.Cursor.getFloat(cursor.getColumnIndex(\"buy\"))", "android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.getLong(cursor.getColumnIndex(\"date\"))", "android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.getFloat(cursor.getColumnIndex(\"sell\"))"], "Fixed commit": "ee386b6761d702f60e1da58f552e27b841ddaa88", "Url": "https://api.github.com/repos/jaebae/ShowMeTheMoney", "Date": "2017-08-05T15:04:50Z"},
{"Line": "=>965", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(keyType.equals(\"SSK\"))) { throw new java.lang.IllegalStateException((\"No docName for key of type \" + (keyType))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3334/buggy-version/src.freenet.keys.FreenetURI.java", "BodyUseAPI": [], "Fixed commit": "85d0f258d45d2575efa8166edce5686d090bbb82", "Url": "https://api.github.com/repos/Osndok/fred-staging", "Date": "2012-12-20T16:56:20Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(e.getMember().getVoiceState().inVoiceChannel())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/7029/buggy-version/src.main.java.Audio.FM.java", "BodyUseAPI": [], "Fixed commit": "617a012cbfcb41de49cfcca919cdd4879579788b", "Url": "https://api.github.com/repos/AlienIdeology/AIBot", "Date": "2017-04-18T04:00:12Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etName.getText().toString()", "etLink.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((name.isEmpty()) || (link.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6607/buggy-version/app.src.main.java.de.appphil.webcamviewerwidget.activities.LinkListActivity.java", "BodyUseAPI": [], "Fixed commit": "45b8a99459ebe563e5063c7a62fa630ad2914ea4", "Url": "https://api.github.com/repos/PhilippDE/WebcamViewerWidget", "Date": "2017-02-25T16:50:11Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(properties.containsKey(de.appphil.categories.utils.ObjectUtils.PROPERTY_GAME_DATA_VERSION))) { throw new de.appphil.categories.utils.exceptions.PropertiesVersionTooOldException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6398/buggy-version/app.src.main.java.de.appphil.categories.utils.ObjectUtils.java", "BodyUseAPI": [], "Fixed commit": "fe0d5196aa3138b1cd44f9675feed48bd8a5ae75", "Url": "https://api.github.com/repos/PhilippDE/Categories", "Date": "2017-05-20T16:13:48Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isMissing())) { dependencyChecker.scheduleMethodAnalysis(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3618/buggy-version/teavm-core.src.main.java.org.teavm.dependency.MethodDependency.java", "BodyUseAPI": [], "Fixed commit": "8696bff1cdb459c97420484b93ad30e873a3737d", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2014-09-25T14:22:16Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bundle.getSymbolicName().endsWith(\"switchyard\")) { java.lang.System.out.println(\"SWITCHYARD\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/315/buggy-version/plugins.org.savara.tools.scenario.src.main.java.org.savara.tools.scenario.designer.simulate.ScenarioSimulationLauncher.java", "BodyUseAPI": [], "Fixed commit": "1ddb193113cc2f99a8b6e12d7dd3bf7f43e7329a", "Url": "https://api.github.com/repos/savara/savara-tools-eclipse", "Date": "2012-08-17T13:49:21Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m.isBridge()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/3393/buggy-version/javers-core.src.main.java.org.javers.common.reflection.JaversMethodFactory.java", "BodyUseAPI": [], "Fixed commit": "6d3488b5e9871d9e52d480603c721a450230b11e", "Url": "https://api.github.com/repos/javers/javers", "Date": "2016-11-15T10:19:05Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Machine.gamedrv.source_file.equals(\"simpsons.java\")) { super.setSize(((((width * 2) + (this._insets.left)) + (this._insets.right)) - ((int) (width * 0.78))), (((height * 2) + (this._insets.top)) + (this._insets.bottom))); }else { super.setSize((((width * 2) + (this._insets.left)) + (this._insets.right)), (((height * 2) + (this._insets.top)) + (this._insets.bottom))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/205/buggy-version/emulator.src.arcadeflex.software_gfx.java", "BodyUseAPI": [], "Fixed commit": "eed5714366caca95396d70cbb52025fe3d7e1778", "Url": "https://api.github.com/repos/georgemoralis/arcadeflex036", "Date": "2015-06-01T21:28:29Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Machine.gamedrv.source_file.equals(\"simpsons.java\")) { localGraphics2D.drawImage(this._image, ((this._insets.left) - ((int) (i * 0.39))), this._insets.top, (i + ((int) (i * 0.78))), j, null); }else { localGraphics2D.drawImage(this._image, this._insets.left, this._insets.top, i, j, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/205/buggy-version/emulator.src.arcadeflex.software_gfx.java", "BodyUseAPI": [], "Fixed commit": "eed5714366caca95396d70cbb52025fe3d7e1778", "Url": "https://api.github.com/repos/georgemoralis/arcadeflex036", "Date": "2015-06-01T21:28:29Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (log.isDebugEnabled()) { java.lang.Object authObject = (authentication == null) ? null : authentication.getPrincipal(); log.info(\"logging out: '{}'\", authObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/4880/buggy-version/samples.webconsole.security.src.main.java.pl.kubiczak.felix.shark.samples.security.WebConsoleAuthHelper.java", "BodyUseAPI": ["org.slf4j.Logger.info(java.lang.String,java.lang.Object)"], "Fixed commit": "3a85b12c585b5f74cc00ae1caee2cb9494ba77d1", "Url": "https://api.github.com/repos/wiiitek/pl.kubiczak.felix.shark.samples", "Date": "2016-12-17T20:17:33Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.gitblit.utils.ArrayUtils.isEmpty(repositoryModel.availableHeads))) { availableHeads.addAll(repositoryModel.availableHeads); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6397/buggy-version/src.com.gitblit.wicket.pages.EditRepositoryPage.java", "BodyUseAPI": ["java.util.List<java.lang.String>.addAll(repositoryModel.availableHeads)"], "Fixed commit": "ddbf6701b4df04d2c7a84080dfb4d64ef9d3f7a0", "Url": "https://api.github.com/repos/jonnybbb/gitblit", "Date": "2012-02-03T00:10:21Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fileMetadata.getId()) == null) || ((fileMetadata.getDatasetVersion().getId()) == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/8398/buggy-version/src.main.java.edu.harvard.iq.dataverse.FilePage.java", "BodyUseAPI": [], "Fixed commit": "d43b836d6e29f8a9ef8900ff44fedc92fd54fc50", "Url": "https://api.github.com/repos/IQSS/dataverse", "Date": "2016-10-12T15:40:10Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((android.text.TextUtils.isEmpty(plainEditAmountText)) || (plainEditAmountText.equals(\".\"))) { return java.math.BigDecimal.ZERO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/5492/buggy-version/app.src.main.java.com.github.polurival.cc.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3c665b0ace7d7ea0651bfd65ae58684ce68f02a5", "Url": "https://api.github.com/repos/Polurival/CurrencyConverter", "Date": "2017-06-20T20:39:14Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTriggerListeners.size()) >= (android.hardware.SystemSensorManager.MAX_LISTENER_COUNT)) { throw new java.lang.IllegalStateException(((\"request failed, \" + \"the trigger listeners size has exceeded the maximum limit \") + (android.hardware.SystemSensorManager.MAX_LISTENER_COUNT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6925/buggy-version/core.java.android.hardware.SystemSensorManager.java", "BodyUseAPI": [], "Fixed commit": "148ab7a68a4e96b0355692a6d8fcb1a9b7919cec", "Url": "https://api.github.com/repos/scotthartbti/android_frameworks_base", "Date": "2017-04-17T17:16:50Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSensorListeners.size()) >= (android.hardware.SystemSensorManager.MAX_LISTENER_COUNT)) { throw new java.lang.IllegalStateException(((\"register failed, \" + \"the sensor listeners size has exceeded the maximum limit \") + (android.hardware.SystemSensorManager.MAX_LISTENER_COUNT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V75/6925/buggy-version/core.java.android.hardware.SystemSensorManager.java", "BodyUseAPI": [], "Fixed commit": "148ab7a68a4e96b0355692a6d8fcb1a9b7919cec", "Url": "https://api.github.com/repos/scotthartbti/android_frameworks_base", "Date": "2017-04-17T17:16:50Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kiwi.auready_ver2.tasks.TasksActivity.getSupportActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (actionBar != null) { actionBar.setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5259/buggy-version/app.src.main.java.com.kiwi.auready_ver2.tasks.TasksActivity.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.setDisplayHomeAsUpEnabled(boolean)"], "Fixed commit": "8e66b13f4a0e909512702766d2ea54ef79ba0dd1", "Url": "https://api.github.com/repos/kiwi-choe/auready", "Date": "2017-06-22T07:58:50Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTargetFragment()) instanceof com.kiwi.auready_ver2.util.view.ColorPickerSwatch.OnColorSelectedListener) { final com.kiwi.auready_ver2.util.view.ColorPickerSwatch.OnColorSelectedListener listener = ((com.kiwi.auready_ver2.util.view.ColorPickerSwatch.OnColorSelectedListener) (getTargetFragment())); listener.onColorSelected(color); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5259/buggy-version/app.src.main.java.com.kiwi.auready_ver2.util.view.ColorPickerDialog.java", "BodyUseAPI": [], "Fixed commit": "8e66b13f4a0e909512702766d2ea54ef79ba0dd1", "Url": "https://api.github.com/repos/kiwi-choe/auready", "Date": "2017-06-22T07:58:50Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.aayaffe.sailingracecoursemanager.activities.GoogleMapsActivity.users.getCurrentUser()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3793/buggy-version/app.src.main.java.com.aayaffe.sailingracecoursemanager.activities.GoogleMapsActivity.java", "BodyUseAPI": [], "Fixed commit": "db87c081bf327f3b4025898af14432862950f4ec", "Url": "https://api.github.com/repos/aayaffe/SailingRaceCourseManager", "Date": "2017-01-06T18:45:30Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.videoplayer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((jzvd != null) && (jzvd.getCurrentUrl().equals(JZMediaManager.CURRENT_PLAYING_URL))) { cn.jzvd.JZVideoPlayer.releaseAllVideos(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1787/buggy-version/app.src.main.java.cn.jzvd.demo.ActivityListViewRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "dc135b31947466b28581d276e4965045d9a70648", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2017-11-03T09:55:09Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"programs\".equals(tableName)) { org.hibernate.Query query = sessionFactory.getCurrentSession().createSQLQuery(((\"SELECT id, programName from \" + tableName) + \" where status = 1 order by programName asc\")); return query.list(); }else if (\"lu_programmodules\".equals(tableName)) { org.hibernate.Query query = sessionFactory.getCurrentSession().createSQLQuery(((\"SELECT id, displayName from \" + tableName) + \" order by displayName asc\")); return query.list(); }else { try { org.hibernate.Query query = sessionFactory.getCurrentSession().createSQLQuery(((\"SELECT id, displayText from \" + tableName) + \" where status = 1 order by displayText asc\")); return query.list(); } catch (java.lang.Exception e) { try { org.hibernate.Query query = sessionFactory.getCurrentSession().createSQLQuery(((((\"SELECT id, name from \" + tableName) + \" where programId = \") + programId) + \" order by name asc\")); return query.list(); } catch (java.lang.Exception ex) { return null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6362/buggy-version/src.main.java.com.bowlink.rr.dao.impl.dataElementDAOImpl.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "sessionFactory.getCurrentSession().createSQLQuery(java.lang.String)", "sessionFactory.getCurrentSession().createSQLQuery(java.lang.String)", "sessionFactory.getCurrentSession().createSQLQuery(java.lang.String)", "sessionFactory.getCurrentSession().createSQLQuery(java.lang.String)"], "Fixed commit": "9c4c1b66c38a5c67f86ec7ddad105bb94a60f33c", "Url": "https://api.github.com/repos/bowlinktech/rapidregistry", "Date": "2016-11-09T16:52:15Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((query.category) != null) { store.fetchSubcategories(subQuery, new api.APIBack<api.response.SubcategoryListResponse>() { public void onSuccess(api.response.SubcategoryListResponse res) { configureDialogForSubcategories(res.subcategories); } public void onError(api.response.APIError err) { java.lang.System.err.println(err); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7216/buggy-version/app.src.main.java.activity.ProductGridFragment.java", "BodyUseAPI": [], "Fixed commit": "6bd56d05dc71f6c254cb4ed422034b3c8f3a3573", "Url": "https://api.github.com/repos/lsoncini/neonstoreapp", "Date": "2015-06-22T18:42:09Z"},
{"Line": "=>988", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vw) != null) { this.controller.addListener(vw); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4826/buggy-version/src.com.willwinder.universalgcodesender.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "139f574d340404efc6ff903f206752932365d7c3", "Url": "https://api.github.com/repos/winder/Universal-G-Code-Sender", "Date": "2013-06-17T01:35:15Z"},
{"Line": "=>1183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.controller) != null) { this.controller.addListener(vw); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4826/buggy-version/src.com.willwinder.universalgcodesender.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "139f574d340404efc6ff903f206752932365d7c3", "Url": "https://api.github.com/repos/winder/Universal-G-Code-Sender", "Date": "2013-06-17T01:35:15Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clearDevice == null) || (installDevice == null)) { throw ImageServerControllerException.exceptions.deviceNotKnown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3211/buggy-version/controllersvc.src.main.java.com.emc.storageos.imageservercontroller.impl.PxeIntegrationService.java", "BodyUseAPI": [], "Fixed commit": "27fa1a5a20d8df206fad08da5f799b6689caf370", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-02-16T14:30:17Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.isSneaking()) { if ((player.getHeldItem()) != null) { if ((player.getHeldItem().getItem()) == (com.bluepowermod.init.BPItems.screwdriver)) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2721/buggy-version/src.main.java.com.bluepowermod.blocks.BlockContainerBase.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.getHeldItem()", "net.minecraft.entity.player.EntityPlayer.getHeldItem()", "player.getHeldItem().getItem()"], "Fixed commit": "219f1a47ff4957176ff52be9d42c3ea7fee4d275", "Url": "https://api.github.com/repos/Qmunity/BluePower", "Date": "2014-08-06T09:27:26Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlock(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (block instanceof com.bluepowermod.blocks.BlockContainerBase) { if ((((com.bluepowermod.blocks.BlockContainerBase) (block)).getGuiID()) != (com.bluepowermod.references.GuiIDs.INVALID)) { if (player.isSneaking()) { block.rotateBlock(world, x, y, z, net.minecraftforge.common.util.ForgeDirection.getOrientation(side)); if (!(player.capabilities.isCreativeMode)) { stack.setItemDamage(((stack.getItemDamage()) + 1)); } } }else { block.rotateBlock(world, x, y, z, net.minecraftforge.common.util.ForgeDirection.getOrientation(side)); if (!(player.capabilities.isCreativeMode)) { stack.setItemDamage(((stack.getItemDamage()) + 1)); } } }else { block.rotateBlock(world, x, y, z, net.minecraftforge.common.util.ForgeDirection.getOrientation(side)); if (!(player.capabilities.isCreativeMode)) { stack.setItemDamage(((stack.getItemDamage()) + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2721/buggy-version/src.main.java.com.bluepowermod.items.ItemScrewdriver.java", "BodyUseAPI": ["net.minecraft.block.Block.rotateBlock(net.minecraft.world.World,int,int,int,net.minecraftforge.common.util.ForgeDirection.getOrientation(side))", "net.minecraft.block.Block.rotateBlock(net.minecraft.world.World,int,int,int,net.minecraftforge.common.util.ForgeDirection.getOrientation(side))", "net.minecraft.block.Block.rotateBlock(net.minecraft.world.World,int,int,int,net.minecraftforge.common.util.ForgeDirection.getOrientation(side))"], "Fixed commit": "219f1a47ff4957176ff52be9d42c3ea7fee4d275", "Url": "https://api.github.com/repos/Qmunity/BluePower", "Date": "2014-08-06T09:27:26Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this._logger) == null) { throw new javax.servlet.ServletException(\"Cannot create an instance of Logger\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4185/buggy-version/servlets.src.java.edu.rice.rubis.servlets.BaseRubisHttpServlet.java", "BodyUseAPI": [], "Fixed commit": "8394171b4f64caa964647e5533d6ab57ebd6b7af", "Url": "https://api.github.com/repos/sguazt/dcsj-rubis", "Date": "2013-07-18T11:31:19Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.Inventory.getContents()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((chestContents[i]) != null) { items[i] = new org.bukkit.inventory.ItemStack(chestContents[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/645/buggy-version/src.main.java.com.dumptruckman.chestrestock.DefaultCRChest.java", "BodyUseAPI": [], "Fixed commit": "b28680b3ef693ea70d94bbaa64f069076970cebf", "Url": "https://api.github.com/repos/zrocweb/ChestRestock", "Date": "2013-04-05T17:50:49Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((part.length) == 0) { bakatxt.core.BakaParser._description = null; }else { bakatxt.core.BakaParser._description = part[1].trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7004/buggy-version/src.bakatxt.core.BakaParser.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "56cb0481e02935aa626125ab4e3c4b948e7423a1", "Url": "https://api.github.com/repos/cs2103aug2014-t09-4j/main", "Date": "2014-11-09T11:43:52Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((milestone.getCrpProgramOutcome().getYear()) != null) { if ((milestone.getCrpProgramOutcome().getYear().intValue()) < (milestone.getYear().intValue())) { this.addMessage(action.getText(\"outcome.action.milestone.year.required\", params)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1781/buggy-version/marlo-web.src.main.java.org.cgiar.ccafs.marlo.validation.impactPathway.OutcomeValidator.java", "BodyUseAPI": ["milestone.getCrpProgramOutcome().getYear()", "org.cgiar.ccafs.marlo.data.model.CrpMilestone.getYear()", "milestone.getCrpProgramOutcome().getYear().intValue()", "org.cgiar.ccafs.marlo.data.model.CrpMilestone.getCrpProgramOutcome()", "milestone.getYear().intValue()"], "Fixed commit": "24ccf4abdf2fef4100ed0a4e1e91b9c4055c0248", "Url": "https://api.github.com/repos/CCAFS/MARLO", "Date": "2016-06-24T20:48:37Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.ServletRequest.getRequestURI()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (isLogined && (requestUrl.startsWith(apiPrefix))) { request.getRequestDispatcher((\"/apisso/\" + (requestUrl.substring(apiPrefix.length())))).forward(request, response); }else { chain.doFilter(request, response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2095/buggy-version/hermes-portal.src.main.java.com.ctrip.hermes.portal.web.HermesValidationFilter.java", "BodyUseAPI": ["javax.servlet.ServletRequest.getRequestDispatcher(java.lang.String)", "request.getRequestDispatcher((\"/apisso/\" + (requestUrl.substring(apiPrefix.length())))).forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)", "java.lang.String.substring(int)", "java.lang.String.length()"], "Fixed commit": "21e582255de63685cc980c8599e7426f31831888", "Url": "https://api.github.com/repos/yiming187/hermes", "Date": "2016-02-01T12:46:18Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.msingleton.templecraft.TempleCraft.debuglog) != null) { for (java.util.logging.Handler h : com.msingleton.templecraft.TempleCraft.debuglog.getHandlers()) { com.msingleton.templecraft.TempleCraft.debuglog.removeHandler(h); h.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6199/buggy-version/src.com.msingleton.templecraft.TempleCraft.java", "BodyUseAPI": [], "Fixed commit": "2d564fd5c8c598862d80b1556a98f4dc16595522", "Url": "https://api.github.com/repos/Bootscreen/Bukkit-TempleCraft", "Date": "2012-05-07T19:44:07Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(leaderList.contains(each))) { leaderList.add(each); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4775/buggy-version/Phase3.src.CFG.CreateCFG.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "982f5775548d2d0aff91fa6fd98cc74eca6aac7e", "Url": "https://api.github.com/repos/nirvan543/CS-4240---Phase-3", "Date": "2014-04-24T02:37:15Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.atlassian.plugins.proteus.jira.issue.view.util.IssueInfo.getLastDeploymentToEnv(<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (lastDep != null) { java.util.Map.Entry<java.lang.String, java.lang.String> oneComp = lastDep.getComponentVersionMap().entrySet().iterator().next(); this.deployedComponent = oneComp.getKey(); this.deployedVersion = oneComp.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4357/buggy-version/deployed-releases-report.src.main.java.com.atlassian.plugins.proteus.jira.issue.view.util.IssueInfo.java", "BodyUseAPI": ["lastDep.getComponentVersionMap().entrySet()", "lastDep.getComponentVersionMap().entrySet().iterator().next()", "com.atlassian.plugins.proteus.jira.issue.view.util.DeploymentActivityRecord.getComponentVersionMap()", "lastDep.getComponentVersionMap().entrySet().iterator()"], "Fixed commit": "c916db52f6054285c843107a090bf0d9b8d3ffa5", "Url": "https://api.github.com/repos/tanghongfa/jira-reports", "Date": "2015-04-09T06:22:01Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((replyAdapter.getReply()) != null) { b.putInt(at.diamonddogs.service.processor.ServiceProcessor.BUNDLE_EXTRA_MESSAGE_HTTPSTATUSCODE, ((at.diamonddogs.data.dataobjects.WebReply) (replyAdapter.getReply())).getHttpStatusCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2942/buggy-version/library.src.at.diamonddogs.service.processor.ServiceProcessor.java", "BodyUseAPI": ["android.os.Bundle.putInt(java.lang.String,((at.diamonddogs.data.dataobjects.WebReply) (replyAdapter.getReply())).getHttpStatusCode())", "at.diamonddogs.data.adapter.ReplyAdapter.getReply()", "((at.diamonddogs.data.dataobjects.WebReply) (replyAdapter.getReply())).getHttpStatusCode()"], "Fixed commit": "861f6d1d976067c8ed3b1fe95552ee6e7e60cab5", "Url": "https://api.github.com/repos/SphericalElephant/android-http", "Date": "2014-03-24T14:42:20Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((replyAdapter.getReply()) != null) { b.putInt(at.diamonddogs.service.processor.ServiceProcessor.BUNDLE_EXTRA_MESSAGE_HTTPSTATUSCODE, ((at.diamonddogs.data.dataobjects.WebReply) (replyAdapter.getReply())).getHttpStatusCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2942/buggy-version/library.src.at.diamonddogs.service.processor.ServiceProcessor.java", "BodyUseAPI": ["at.diamonddogs.data.adapter.ReplyAdapter.getReply()", "android.os.Bundle.putInt(java.lang.String,((at.diamonddogs.data.dataobjects.WebReply) (replyAdapter.getReply())).getHttpStatusCode())", "((at.diamonddogs.data.dataobjects.WebReply) (replyAdapter.getReply())).getHttpStatusCode()"], "Fixed commit": "861f6d1d976067c8ed3b1fe95552ee6e7e60cab5", "Url": "https://api.github.com/repos/SphericalElephant/android-http", "Date": "2014-03-24T14:42:20Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.api.component.ResourcePerspectives.as(java.lang.Class,org.sonar.api.resources.Resource)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (issuable != null) { for (org.sonar.squidbridge.api.CheckMessage checkMessage : messages) { java.lang.Object check = checkMessage.getCheck(); org.sonar.api.rule.RuleKey ruleKey; if (check instanceof org.sonar.api.rule.RuleKey) { ruleKey = ((org.sonar.api.rule.RuleKey) (check)); }else { ruleKey = checks.ruleKey(((org.sonar.squidbridge.api.CodeVisitor) (checkMessage.getCheck()))); } if (ruleKey != null) { org.sonar.api.issue.Issue issue = issuable.newIssueBuilder().ruleKey(ruleKey).line(checkMessage.getLine()).message(checkMessage.formatDefaultMessage()).build(); issuable.addIssue(issue); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/9044/buggy-version/sonar-java-plugin.src.main.java.org.sonar.plugins.java.bridges.ChecksBridge.java", "BodyUseAPI": ["issuable.newIssueBuilder().ruleKey(ruleKey).line(checkMessage.getLine()).message(checkMessage.formatDefaultMessage())", "issuable.newIssueBuilder().ruleKey(ruleKey).line(checkMessage.getLine())", "org.sonar.api.issue.Issuable.newIssueBuilder()", "issuable.newIssueBuilder().ruleKey(ruleKey).line(checkMessage.getLine()).message(checkMessage.formatDefaultMessage()).build()", "org.sonar.api.issue.Issuable.addIssue(org.sonar.api.issue.Issue)", "issuable.newIssueBuilder().ruleKey(org.sonar.api.rule.RuleKey)"], "Fixed commit": "44dd322fb83852d90c24ed3b08b37b9d0b3b35b5", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2015-03-27T08:34:35Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (o != null) { org.anon.utilities.reflect.DataContext ctx = pctx.createContext(o); ctx.setType((\"\" + cnt)); ctx.setCustom(pctx.getCustom()); ctx.setParentPath((((pctx.fieldpath()) + \".\") + (ctx.getType()))); java.lang.Object modified = traverse(traverse, ctx, visit, mod, at); cnt++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4359/buggy-version/src.main.java.org.anon.utilities.reflect.CollectionType.java", "BodyUseAPI": ["org.anon.utilities.reflect.DataContext.createContext(java.lang.Object)"], "Fixed commit": "7cfb1c39266d8a8291911ea71ee9520727ea3a7e", "Url": "https://api.github.com/repos/smartplatf/a-utilities", "Date": "2014-01-14T13:20:28Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stringobj instanceof java.lang.Number) { java.lang.Number number = ((java.lang.Number) (stringobj)); if (((number instanceof java.lang.Float) || (number instanceof java.lang.Double)) || (number instanceof java.math.BigDecimal)) { return number.doubleValue(); } return number.intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5860/buggy-version/src.main.mondrian.olap.fun.vba.Vba.java", "BodyUseAPI": [], "Fixed commit": "d545dc4b964373336483c254fa841398d9e486b7", "Url": "https://api.github.com/repos/wgorman/mondrian", "Date": "2014-12-04T18:01:56Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(startFragment)) { this.recreate(); }else { super.onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1404/buggy-version/app.src.main.java.cl.cadcc.folio.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "96396ff16134f5bff089a06c760d61966f83e551", "Url": "https://api.github.com/repos/cadcc/Fol.io", "Date": "2016-07-03T22:18:22Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(shell.isDisposed())) { block.run(this); shell.getDisplay().timerExec((1000 / fps), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2488/buggy-version/src.com.jshoes.JShoes.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Shell.getDisplay()", "shell.getDisplay().timerExec(int,com.jshoes.JShoes.1)"], "Fixed commit": "050579f132ed3c26be85a4235b4c6fb58f066fa9", "Url": "https://api.github.com/repos/ramgole/JShoes", "Date": "2011-07-09T06:09:29Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity == 2) { java.lang.System.out.println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/761/buggy-version/gdx-kitten-rescue.src.main.java.de.hochschuletrier.gdw.ss14.ecs.systems.DogMovementSystem.java", "BodyUseAPI": [], "Fixed commit": "5e5be04c947970b4acc8cd2a4387a7f7b531a3fd", "Url": "https://api.github.com/repos/Lusito/GameDevWeek", "Date": "2014-10-02T08:18:08Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (menuInfo instanceof android.widget.AdapterView.AdapterContextMenuInfo) { android.widget.AdapterView.AdapterContextMenuInfo acmi = ((android.widget.AdapterView.AdapterContextMenuInfo) (menuInfo)); java.lang.System.out.println((\">>>>> pos -> \" + (acmi.position))); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2880/buggy-version/android.AndroidTutorial.app.src.main.java.org.shenit.tutorial.android.menu.ContextMenuExampleActivity.java", "BodyUseAPI": [], "Fixed commit": "cb79c875214bc88e29492ed759639d6c0fd7333f", "Url": "https://api.github.com/repos/jgnan/edu", "Date": "2016-07-03T00:44:15Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<com.b3dgs.lionengine.game.platform.CollisionTileCategory<?>, com.b3dgs.lionengine.game.CoordTile>.get(com.b3dgs.lionengine.game.platform.CollisionTileCategory<C>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (offsets != null) { collOffX = offsets.getX(); collOffY = offsets.getY(); final T tile = map.getFirstTileHit(this, category.getCollisions()); return tile; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5543/buggy-version/lionengine-game-platform.src.main.java.com.b3dgs.lionengine.game.platform.entity.EntityPlatform.java", "BodyUseAPI": ["com.b3dgs.lionengine.game.CoordTile.getY()", "com.b3dgs.lionengine.game.CoordTile.getX()"], "Fixed commit": "930cf2de635b408d1cb0058154cc92233347f460", "Url": "https://api.github.com/repos/DjThunder/lionengine", "Date": "2014-01-31T21:56:09Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["i.getExtras().getDouble(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (lat != null) { populateLocation(lat, lon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2357/buggy-version/app.src.main.java.com.example.don.emertext.LocationDetails.java", "BodyUseAPI": ["com.example.don.emertext.LocationDetails.populateLocation(java.lang.Double,java.lang.Double)"], "Fixed commit": "c82bd98016bafe3b7969ace6c0869fac8c84f38f", "Url": "https://api.github.com/repos/DonBlaine/EmerText", "Date": "2016-11-22T21:17:35Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.provebit.merkle.Merkle.isLeftNode(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nodeOnLeft) { if ((tree[(currentIndex + 1)]) == null) sibling = tree[currentIndex]; else sibling = tree[(currentIndex + 1)]; }else { sibling = tree[(currentIndex - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5696/buggy-version/provebit-parent.provebit-core.src.main.java.org.provebit.merkle.Merkle.java", "BodyUseAPI": [], "Fixed commit": "0e30cc6268fc33500f1d4d8d505cbfec873c7fd3", "Url": "https://api.github.com/repos/thereal1024/ProveBit", "Date": "2015-04-21T07:37:47Z"},
{"Line": "=>677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.esa.beam.framework.gpf.pointop.ProductConfigurer.getTargetProduct()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(targetProduct.containsBand(EnvisatConstants.MERIS_AMORGOS_L1B_CORR_LATITUDE_BAND_NAME))) { productConfigurer.copyBands(EnvisatConstants.MERIS_AMORGOS_L1B_CORR_LATITUDE_BAND_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/574/buggy-version/beam-wew-water.src.main.java.wew.water.gpf.WaterProcessorOp.java", "BodyUseAPI": [], "Fixed commit": "5c96b5a348064fb1464bc6f2c775c89aeca09028", "Url": "https://api.github.com/repos/bcdev/beam-third-party", "Date": "2012-08-28T09:34:57Z"},
{"Line": "=>674", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.esa.beam.framework.gpf.pointop.ProductConfigurer.getTargetProduct()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(targetProduct.containsBand(EnvisatConstants.MERIS_AMORGOS_L1B_CORR_LONGITUDE_BAND_NAME))) { productConfigurer.copyBands(EnvisatConstants.MERIS_AMORGOS_L1B_CORR_LONGITUDE_BAND_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/574/buggy-version/beam-wew-water.src.main.java.wew.water.gpf.WaterProcessorOp.java", "BodyUseAPI": [], "Fixed commit": "5c96b5a348064fb1464bc6f2c775c89aeca09028", "Url": "https://api.github.com/repos/bcdev/beam-third-party", "Date": "2012-08-28T09:34:57Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((len == 0) || ((buffer.length) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8807/buggy-version/voltron-proxy.voltron-proxy-common.src.main.java.org.terracotta.voltron.proxy.SerializationCodec.java", "BodyUseAPI": [], "Fixed commit": "ea6234df591e0898824a1b4e39e29e3e32e6f315", "Url": "https://api.github.com/repos/jd0-sag/terracotta-platform", "Date": "2017-03-23T14:58:34Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((savedState.offset) < (mEditText.getText().length())) mEditText.setSelection(savedState.offset);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7284/buggy-version/app.src.main.java.com.jecelyin.editor2.ui.EditorDelegate.java", "BodyUseAPI": ["com.jecelyin.editor2.core.widget.JecEditText.setSelection(int)"], "Fixed commit": "e73cf82496e452a737b5ba4cccc3fd25a49ce767", "Url": "https://api.github.com/repos/jecelyin/920-text-editor-v2", "Date": "2016-06-05T14:11:52Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.editorState) != null) dest.writeParcelable(this.editorState, flags);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7284/buggy-version/app.src.main.java.com.jecelyin.editor2.ui.EditorDelegate.java", "BodyUseAPI": [], "Fixed commit": "e73cf82496e452a737b5ba4cccc3fd25a49ce767", "Url": "https://api.github.com/repos/jecelyin/920-text-editor-v2", "Date": "2016-06-05T14:11:52Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (hasState == 1) this.editorState = in.readParcelable(TextView.SavedState.class.getClassLoader());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7284/buggy-version/app.src.main.java.com.jecelyin.editor2.ui.EditorDelegate.java", "BodyUseAPI": [], "Fixed commit": "e73cf82496e452a737b5ba4cccc3fd25a49ce767", "Url": "https://api.github.com/repos/jecelyin/920-text-editor-v2", "Date": "2016-06-05T14:11:52Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((param.blockRadius) < 0) param_blockRadius = ((param.imageWidth) / orig_param_resolution) / 2; else param_blockRadius = param.blockRadius;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/308/buggy-version/src.main.java.org.janelia.alignment.MatchLayersByMaxPMCC.java", "BodyUseAPI": [], "Fixed commit": "7efe0e419afdbca1c638473ecd5a196111794ffb", "Url": "https://api.github.com/repos/cmor/FijiBento", "Date": "2014-08-27T03:02:38Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (touchedRenderedData != null) { eventToProcess.setProjected(touchedRenderedData.getRenderData().isRenderProjected()); eventToProcess.setTouchedRenderDataId(touchedRenderedData.getRenderData().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8686/buggy-version/src.net.matthiasauer.stwp4j.libgdx.graphic.InteractionSubProcess.java", "BodyUseAPI": ["touchedRenderedData.getRenderData().getId()", "net.matthiasauer.stwp4j.libgdx.graphic.InputTouchEventData.setProjected(touchedRenderedData.getRenderData().isRenderProjected())", "touchedRenderedData.getRenderData().isRenderProjected()", "net.matthiasauer.stwp4j.libgdx.graphic.RenderedData.getRenderData()", "net.matthiasauer.stwp4j.libgdx.graphic.RenderedData.getRenderData()", "net.matthiasauer.stwp4j.libgdx.graphic.InputTouchEventData.setTouchedRenderDataId(touchedRenderedData.getRenderData().getId())"], "Fixed commit": "932b4c045ff162251262d625484077c84d134b06", "Url": "https://api.github.com/repos/Stromausfall/STWP4J-Libgdx-Tools", "Date": "2015-12-11T18:54:21Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.isOnline()) { player.offer(Keys.FIRE_TICKS, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4432/buggy-version/src.main.java.com.awesomeman.xtrapunish.punish.PlayerBurning.java", "BodyUseAPI": ["org.spongepowered.api.entity.living.player.Player.offer(Keys.FIRE_TICKS,int)"], "Fixed commit": "354a88422631ef9052868cd64fd366352d00dbaa", "Url": "https://api.github.com/repos/XtraStudio/XtraPunish", "Date": "2016-04-23T14:17:23Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spongepowered.api.entity.living.player.Player.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((location.add(0, 99, 0).getY()) > 255) { src.sendMessage(org.spongepowered.api.text.Text.of(TextColors.RED, \"Cannot set a block above the height limit! Try again at a lower altitude.\")); return org.spongepowered.api.command.CommandResult.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4432/buggy-version/src.main.java.com.awesomeman.xtrapunish.punish.PlayerGlass.java", "BodyUseAPI": [], "Fixed commit": "354a88422631ef9052868cd64fd366352d00dbaa", "Url": "https://api.github.com/repos/XtraStudio/XtraPunish", "Date": "2016-04-23T14:17:23Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.eclipse.emf.ecore.InternalEObject, java.lang.Integer>.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { result = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5817/buggy-version/plugins.org.eclipse.viatra2.emf.incquery.runtime.src.org.eclipse.viatra2.emf.incquery.runtime.derived.IncqueryDerivedFeature.java", "BodyUseAPI": [], "Fixed commit": "37618fb662086ee76a15062e170551fcff7f59e7", "Url": "https://api.github.com/repos/ujhelyiz/EMF-IncQuery", "Date": "2012-07-31T14:22:22Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((roles.size()) > 1) { for (int n = 0; n < (possibleGrandChildren.size()); n++) { org.ggp.base.player.gamer.statemachine.sample.MinMaxGameNode grandChild = possibleGrandChildren.get(n); if (grandChild.getState().equals(s)) { root = grandChild; root.setParent(null); return; } } }else { org.ggp.base.player.gamer.statemachine.sample.MinMaxGameNode child = possibleChildren.get(i); if (child.getState().equals(s)) { root = child; root.setParent(null); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4602/buggy-version/ggp-base-master.src.main.java.org.ggp.base.player.gamer.statemachine.sample.MCTSMinMax.java", "BodyUseAPI": [], "Fixed commit": "62cdad6802cef0fdff690f129d11d376be637c0f", "Url": "https://api.github.com/repos/brianmhiggins/cs227B-LighthouseParty", "Date": "2016-05-23T00:36:11Z"},
{"Line": "=>776", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.startsWithIgnoreCase(trimmedQuery, \"SELECT\"))) { throw new eionet.cr.dao.DAOException(\"Was expecting the query to strat with a 'SELECT' statement!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6450/buggy-version/src.main.java.eionet.cr.staging.exp.ExportRunner.java", "BodyUseAPI": [], "Fixed commit": "d7f145af405fa12faf13e30ce8ff7c35c19fe00a", "Url": "https://api.github.com/repos/digital-agenda-data/scoreboard.contreg", "Date": "2016-04-17T18:26:30Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.gmail.nossr50.util.EventUtils.shouldProcessEvent(event.getBlock(), false))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2623/buggy-version/src.main.java.com.gmail.nossr50.listeners.BlockListener.java", "BodyUseAPI": [], "Fixed commit": "f76771f0a8a4a4893d6c7eeff183579c576f703d", "Url": "https://api.github.com/repos/DarthCraft/mcMMO", "Date": "2015-03-11T12:31:56Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cdata) != null) { if (offset > (cdata.length())) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); } if ((offset + count) > (cdata.length())) { cdata.delete(offset, ((cdata.length()) - offset)); }else { cdata.delete(offset, count); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3737/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "3e6c01f22bfd53c9159f60c4d7ff8bc56a0b74f0", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > length) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3737/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "3e6c01f22bfd53c9159f60c4d7ff8bc56a0b74f0", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((offset + count) > length) { document.alpha[nodeNumber] = inDocOffset + offset; document.alphaLen[nodeNumber] = length - offset; }else { document.alpha[nodeNumber] = inDocOffset + offset; document.alphaLen[nodeNumber] = count; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3737/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "3e6c01f22bfd53c9159f60c4d7ff8bc56a0b74f0", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3737/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "3e6c01f22bfd53c9159f60c4d7ff8bc56a0b74f0", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset > length) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3737/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "3e6c01f22bfd53c9159f60c4d7ff8bc56a0b74f0", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:12:34Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.channel.Channel.write(org.jboss.netty.buffer.ChannelBuffer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(channelFuture.await(10000))) throw new com.cloudhopper.smpp.type.SmppChannelException(channelFuture.getCause().getMessage(), channelFuture.getCause());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4762/buggy-version/src.main.java.com.cloudhopper.smpp.impl.DefaultSmppSession.java", "BodyUseAPI": ["org.jboss.netty.channel.ChannelFuture.getCause()", "org.jboss.netty.channel.ChannelFuture.getCause()", "channelFuture.getCause().getMessage()"], "Fixed commit": "061821bf0fc1e9faead964480f957086465e419a", "Url": "https://api.github.com/repos/RestComm/cloudhopper-smpp", "Date": "2017-08-08T08:56:51Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.channel.Channel.write(org.jboss.netty.buffer.ChannelBuffer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(channelFuture.await(timeoutMillis))) throw new com.cloudhopper.smpp.type.SmppChannelException(channelFuture.getCause().getMessage(), channelFuture.getCause());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4762/buggy-version/src.main.java.com.cloudhopper.smpp.impl.DefaultSmppSession.java", "BodyUseAPI": ["org.jboss.netty.channel.ChannelFuture.getCause()", "channelFuture.getCause().getMessage()", "org.jboss.netty.channel.ChannelFuture.getCause()"], "Fixed commit": "061821bf0fc1e9faead964480f957086465e419a", "Url": "https://api.github.com/repos/RestComm/cloudhopper-smpp", "Date": "2017-08-08T08:56:51Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) getActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { searchedPlaces.clear(); adapterElements.clear(); adapter.resetAdapter(); } });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5633/buggy-version/CityZenApp.app.src.main.java.com.cityzen.cityzen.Fragments.SearchFragment.java", "BodyUseAPI": [], "Fixed commit": "ab97b49d7803e1a5b9f8d6c36d6c7fa37ffa4230", "Url": "https://api.github.com/repos/CityZenApp/Android-Development", "Date": "2017-08-26T17:10:12Z"},
{"Line": "=>3233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(is_internal(com.idevicesinc.sweetblue.CONNECTING_OVERALL))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7790/buggy-version/src.com.idevicesinc.sweetblue.BleDevice.java", "BodyUseAPI": [], "Fixed commit": "5690f0d52462dad3a6e5237b140af2cb493c3667", "Url": "https://api.github.com/repos/iDevicesInc/SweetBlue", "Date": "2015-04-01T18:57:35Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((java.lang.Integer.parseInt(mapNode[1])) > counter) counter = java.lang.Integer.parseInt(mapNode[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1255/buggy-version/src.graph_builder.GraphConverterUtil.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "a1cb186997d6e12852e9cb124d43ceafbc42da76", "Url": "https://api.github.com/repos/arminbalalaie/repo-graph-miner", "Date": "2014-11-29T10:03:41Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((photo) != null) { addPhoto.setImageBitmap(photo); moodEvent.setPhoto(photo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/340/buggy-version/app.src.main.java.com.example.android.sendmoods.EditMoodActivity.java", "BodyUseAPI": [], "Fixed commit": "573818cb5d751d5ba92292f4e2477082a1e85d9b", "Url": "https://api.github.com/repos/CMPUT301W17T17/MoodSwings", "Date": "2017-04-01T21:40:13Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((moodEvent.getPhoto()) != null) { photo.setImageBitmap(moodEvent.getPhoto()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/340/buggy-version/app.src.main.java.com.example.android.sendmoods.MoodPopupActivity.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(moodEvent.getPhoto())", "com.example.android.sendmoods.MoodEvent.getPhoto()"], "Fixed commit": "573818cb5d751d5ba92292f4e2477082a1e85d9b", "Url": "https://api.github.com/repos/CMPUT301W17T17/MoodSwings", "Date": "2017-04-01T21:40:13Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.agpu.oc.client.renderer.AdvancedMonitorRenderer.getScaleFactor(m.getMonitorsWidth(),int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (s2 == 1.0F) { org.lwjgl.opengl.GL11.glTranslatef((0.5F * s1), 0, 0.5F); org.lwjgl.opengl.GL11.glRotatef((rotation * (-90)), 0, 1, 0); org.lwjgl.opengl.GL11.glTranslatef(((-0.5F) * s1), 0, (-0.5F)); }else { org.lwjgl.opengl.GL11.glTranslatef(0.5F, 0, (0.5F * s2)); org.lwjgl.opengl.GL11.glRotatef((rotation * (-90)), 0, 1, 0); org.lwjgl.opengl.GL11.glTranslatef(((-0.5F) * s2), 0, (-0.5F)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5987/buggy-version/src.main.java.org.agpu.oc.client.renderer.AdvancedMonitorRenderer.java", "BodyUseAPI": ["org.lwjgl.opengl.GL11.glTranslatef(float,int,float)", "org.lwjgl.opengl.GL11.glTranslatef(float,int,float)"], "Fixed commit": "9e59164a672a0b0c9021920bdad7b8973b64142a", "Url": "https://api.github.com/repos/TheArni/Advanced-Graphics-Processing-Units", "Date": "2015-08-03T23:00:48Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (bitmap == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5159/buggy-version/ByakuGallery.src.com.diegocarloslima.byakugallery.lib.TileBitmapDrawable.java", "BodyUseAPI": [], "Fixed commit": "34c8b17220d3543d7e5204fa760d4ff8e2ef8f20", "Url": "https://api.github.com/repos/diegocarloslima/ByakuGallery", "Date": "2014-03-09T20:53:42Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((constraints) != null) { for (java.util.Map.Entry<java.lang.Object, java.lang.Object> prop : constraints.entrySet()) { java.lang.String data = java.net.URLEncoder.encode((((prop.getKey()) + \"=\") + (prop.getValue())), \"UTF-8\"); connection.data(\"constraints[]\", data); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4905/buggy-version/src.main.java.be.maximvdw.modules.ModuleUploaderMojo.java", "BodyUseAPI": [], "Fixed commit": "665b08d8ad14b86c0128d07de68e07a87c8e2856", "Url": "https://api.github.com/repos/Maximvdw/ModuleUploader-MavenPlugin", "Date": "2017-01-16T18:05:11Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((screenshots) != null) { for (java.lang.String screenshot : screenshots) { connection.data(\"screenshots[]\", screenshot); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4905/buggy-version/src.main.java.be.maximvdw.modules.ModuleUploaderMojo.java", "BodyUseAPI": [], "Fixed commit": "665b08d8ad14b86c0128d07de68e07a87c8e2856", "Url": "https://api.github.com/repos/Maximvdw/ModuleUploader-MavenPlugin", "Date": "2017-01-16T18:05:11Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((videos) != null) { for (java.lang.String video : videos) { connection.data(\"videos[]\", video); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4905/buggy-version/src.main.java.be.maximvdw.modules.ModuleUploaderMojo.java", "BodyUseAPI": [], "Fixed commit": "665b08d8ad14b86c0128d07de68e07a87c8e2856", "Url": "https://api.github.com/repos/Maximvdw/ModuleUploader-MavenPlugin", "Date": "2017-01-16T18:05:11Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.inightmare.xmlizer.XSDPathRegistry.getPath(java.lang.Class<?>)", "org.inightmare.xmlizer.XSDPathRegistry.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((path != null) && (location != null)) { writer.writeAttribute(XmlConstants.XML_SCHEMA_INSTANCE_PREFIX, XmlConstants.XML_SCHEMA_INSTANCE_NAMESPACE, location.name(), path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1860/buggy-version/src.main.java.org.inightmare.xmlizer.WriterContext.java", "BodyUseAPI": ["javax.xml.stream.XMLStreamWriter.writeAttribute(XmlConstants.XML_SCHEMA_INSTANCE_PREFIX,XmlConstants.XML_SCHEMA_INSTANCE_NAMESPACE,location.name(),java.lang.String)", "org.inightmare.xmlizer.misc.XmlConstants.SchemaLocation.name()"], "Fixed commit": "0699df6fefcd2608368a47472b6daaf581fe1a91", "Url": "https://api.github.com/repos/kolesan/jxmlizer", "Date": "2015-12-08T10:24:17Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.xrtb.db.DataBaseObject.map) == null) com.xrtb.db.DataBaseObject.map = new java.util.concurrent.ConcurrentHashMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4671/buggy-version/src.com.xrtb.db.DataBaseObject.java", "BodyUseAPI": [], "Fixed commit": "88179b4a7e79df8bd22a2725616f8b29cc354a5b", "Url": "https://api.github.com/repos/benmfaul/XRTB", "Date": "2016-10-06T00:40:43Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((inputInput) && (step.equals(retractedStep))) && (slot.equals(retractedSlot))) { decomp.getGoal().deleteSlotValue(depend.slot); }else if ((((!(TaskEngine.DEBUG)) && (identity)) && (target.isDefinedSlot(slot))) && (!(edu.wpi.cetask.Utils.equals(target.getSlotValue(slot), dependTask.getSlotValue(depend.slot))))) throw new edu.wpi.cetask.DecompositionClass.Contradiction((((((((((this) + \"=\\\"\") + (engine.toString(target.getSlotValue(slot)))) + \"\\\" and \") + depend) + \"=\\\"\") + (engine.toString(dependTask.getSlotValue(depend.slot)))) + \"\\\" in \") + (this)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/576/buggy-version/task.java.edu.wpi.cetask.DecompositionClass.java", "BodyUseAPI": ["edu.wpi.cetask.Task.isDefinedSlot(java.lang.String)", "edu.wpi.cetask.Task.getSlotValue(java.lang.String)", "edu.wpi.cetask.Task.getSlotValue(java.lang.String)", "edu.wpi.cetask.Utils.equals(target.getSlotValue(slot),dependTask.getSlotValue(depend.slot))", "edu.wpi.cetask.DecompositionClass.Binding.toString(target.getSlotValue(slot))"], "Fixed commit": "0468caa8c32a26c1b4fb9b485d3c19555ec1cd57", "Url": "https://api.github.com/repos/charlesrich/Disco", "Date": "2014-07-23T18:05:19Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.invoke(T)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (value != null) { properties.setProperty(propertyName, value.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5559/buggy-version/src.ru.spbau.valikiy.task6.ReflectionSerializer.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.Properties.setProperty(java.lang.String,java.lang.String)"], "Fixed commit": "b09354ce3b36c0b7122adc2ba85b47bdc23896a5", "Url": "https://api.github.com/repos/jonyrock/javaAptuTask6", "Date": "2012-05-30T23:40:45Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contains(\"[^x]\", s.replaceAll(\"[^a-zA-Z]\", \"\"))) return s;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5680/buggy-version/src.com.KrakenRisingOrSomething.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "de1ce38451df939636ab9319375a036c93089739", "Url": "https://api.github.com/repos/PiJoules/ExpressionSolver", "Date": "2014-06-13T20:42:00Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["integration.listener.gps.AddressParser.getCoordinates(business.applicationservice.Intervento)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (adressGPS != null) { business.applicationservice.ApplicationServiceRilevazione.gpsList.add(adressGPS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1568/buggy-version/src.business.applicationservice.ApplicationServiceRilevazione.java", "BodyUseAPI": ["java.util.List<business.applicationservice.GPS>.add(business.applicationservice.GPS)"], "Fixed commit": "9ba35bac088108936cf23bfecf698119573ff9e4", "Url": "https://api.github.com/repos/Stafflute/ADISysMobile", "Date": "2013-09-17T01:39:10Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.res.AssetManager.list(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == webkit) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2994/buggy-version/main.src.com.beastbikes.framework.ui.android.WebActivity.java", "BodyUseAPI": [], "Fixed commit": "d5b457fedac77afd70969a2798cdc97684fcc4b8", "Url": "https://api.github.com/repos/beastbikes/com.beastbikes.framework.ui.android", "Date": "2015-03-18T14:12:12Z"},
{"Line": "=>964", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.openmrs.module.ModuleFactory.actualStartupOrder) != null) { org.openmrs.module.ModuleFactory.actualStartupOrder.remove(moduleId); for (java.lang.Module depModule : dependentModulesStopped) { org.openmrs.module.ModuleFactory.actualStartupOrder.remove(depModule.getModuleId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2448/buggy-version/api.src.main.java.org.openmrs.module.ModuleFactory.java", "BodyUseAPI": [], "Fixed commit": "5d92276117c8929ace46b34ef3179a23d81275ff", "Url": "https://api.github.com/repos/wluyima/openmrs-core", "Date": "2013-10-06T16:46:04Z"},
{"Line": "=>643", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rs_ont.getProperty(NdlCommons.ip4LocalIPAddressProperty).getResource()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ip_rs.hasProperty(NdlCommons.ip4NetmaskProperty)) ip_ind.addProperty(NdlCommons.ip4NetmaskProperty, ip_rs.getProperty(NdlCommons.ip4NetmaskProperty).getString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3742/buggy-version/embed.src.main.java.orca.embed.cloudembed.controller.CloudHandler.java", "BodyUseAPI": ["com.hp.hpl.jena.rdf.model.Resource.getProperty(NdlCommons.ip4NetmaskProperty)", "com.hp.hpl.jena.ontology.Individual.addProperty(NdlCommons.ip4NetmaskProperty,ip_rs.getProperty(NdlCommons.ip4NetmaskProperty).getString())", "ip_rs.getProperty(NdlCommons.ip4NetmaskProperty).getString()"], "Fixed commit": "e9e175bc6f3444a993c4d5c6d1bcc93ada434ac7", "Url": "https://api.github.com/repos/RENCI-NRIG/orca5", "Date": "2016-10-26T04:24:28Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.plugin.randomjobbuilder.GeneratorController.getRuntimeState(jenkins.plugin.randomjobbuilder.LoadGenerator)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (state == null) { return hudson.util.HttpResponses.errorWithoutStack(500, (\"Generator not registered with ID \" + generatorId)); }else if (state.isActive()) { gen.stop(state); }else { gen.start(state); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/9234/buggy-version/src.main.java.jenkins.plugin.randomjobbuilder.LoadGeneratorAction.java", "BodyUseAPI": ["jenkins.plugin.randomjobbuilder.LoadGenerator.start(jenkins.plugin.randomjobbuilder.LoadGeneratorRuntimeState)", "jenkins.plugin.randomjobbuilder.LoadGenerator.stop(jenkins.plugin.randomjobbuilder.LoadGeneratorRuntimeState)", "jenkins.plugin.randomjobbuilder.LoadGeneratorRuntimeState.isActive()"], "Fixed commit": "5237b1ce0e48c75e6ce6968c080db03df70683dd", "Url": "https://api.github.com/repos/svanoort/random-job-builder-plugin", "Date": "2017-10-25T18:10:57Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.plugin.randomjobbuilder.GeneratorController.getRuntimeState(jenkins.plugin.randomjobbuilder.LoadGenerator)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (state == null) { return hudson.util.HttpResponses.errorWithoutStack(500, (\"Generator not registered with short name \" + shortName)); }else if (state.isActive()) { gen.stop(state); }else { gen.start(state); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/9234/buggy-version/src.main.java.jenkins.plugin.randomjobbuilder.LoadGeneratorAction.java", "BodyUseAPI": ["jenkins.plugin.randomjobbuilder.LoadGenerator.stop(jenkins.plugin.randomjobbuilder.LoadGeneratorRuntimeState)", "jenkins.plugin.randomjobbuilder.LoadGeneratorRuntimeState.isActive()", "jenkins.plugin.randomjobbuilder.LoadGenerator.start(jenkins.plugin.randomjobbuilder.LoadGeneratorRuntimeState)"], "Fixed commit": "5237b1ce0e48c75e6ce6968c080db03df70683dd", "Url": "https://api.github.com/repos/svanoort/random-job-builder-plugin", "Date": "2017-10-25T18:10:57Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((state.getNumPlayers()) != (players.length)) { throw new java.lang.IllegalArgumentException(\"num players mismatch\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3955/buggy-version/src.main.java.hanabi.GameController.java", "BodyUseAPI": [], "Fixed commit": "384d1088c2df17e58a0bff45ad668af23586d888", "Url": "https://api.github.com/repos/jingw/hanabi-bot", "Date": "2015-08-19T02:59:57Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDrawable()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1158/buggy-version/FramedImageView.src.main.java.com.wmbest.widgets.FramedImageView.java", "BodyUseAPI": [], "Fixed commit": "a48ae08e783c6aaf505920aafc0eda2cdcaa9941", "Url": "https://api.github.com/repos/wmbest2/FramedImageView", "Date": "2013-08-13T20:23:11Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getWidth()) == 0) || ((getHeight()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1158/buggy-version/FramedImageView.src.main.java.com.wmbest.widgets.FramedImageView.java", "BodyUseAPI": [], "Fixed commit": "a48ae08e783c6aaf505920aafc0eda2cdcaa9941", "Url": "https://api.github.com/repos/wmbest2/FramedImageView", "Date": "2013-08-13T20:23:11Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPaint.getShader()) == null) initPaint();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1158/buggy-version/FramedImageView.src.main.java.com.wmbest.widgets.FramedImageView.java", "BodyUseAPI": [], "Fixed commit": "a48ae08e783c6aaf505920aafc0eda2cdcaa9941", "Url": "https://api.github.com/repos/wmbest2/FramedImageView", "Date": "2013-08-13T20:23:11Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(view.isShowing())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/9201/buggy-version/src.classes.FindRoadPanel.java", "BodyUseAPI": [], "Fixed commit": "4ef025e73f1b45eae2bbd2287f1f0b36b5c21ff0", "Url": "https://api.github.com/repos/Machtan/First-year-project", "Date": "2014-03-31T13:08:27Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clusterSize == 0) { return 0; }else { return (clusterSize / 2) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3602/buggy-version/src.main.java.org.apache.zab.ClusterConfiguration.java", "BodyUseAPI": [], "Fixed commit": "d45a042f7699bb0db3bc0a803512569d17f27cc4", "Url": "https://api.github.com/repos/EasonLiao/javazab", "Date": "2014-08-17T23:41:12Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.zab.ClusterConfiguration.getQuorumSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (quorumSize == 0) { return cnf.getVersion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3602/buggy-version/src.main.java.org.apache.zab.AckProcessor.java", "BodyUseAPI": [], "Fixed commit": "d45a042f7699bb0db3bc0a803512569d17f27cc4", "Url": "https://api.github.com/repos/EasonLiao/javazab", "Date": "2014-08-17T23:41:12Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((typeRow) != null) { java.lang.String value = typeRow.getValue(); if ((value != null) && (!(value.isEmpty()))) { return java.lang.Boolean.valueOf(value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4817/buggy-version/plugins.org.jboss.tools.windup.ui.src.org.jboss.tools.windup.ui.internal.rules.delegate.RuleDelegate.java", "BodyUseAPI": [], "Fixed commit": "c7907832709dcefe32c57ceec0445a4477cd9ec9", "Url": "https://api.github.com/repos/windup/windup-eclipse-plugin", "Date": "2017-10-19T19:37:34Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.googlecode.mgwt.ui.client.MGWT.getOsDetection().isBlackBerry()) { index = ((int) (java.lang.Long.parseLong(idxString))); }else { index = java.lang.Integer.parseInt(idxString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2753/buggy-version/src.main.java.com.googlecode.mgwt.ui.client.widget.CellList.java", "BodyUseAPI": [], "Fixed commit": "3747f2704debbbd8c7591a061f2312507bc33cb1", "Url": "https://api.github.com/repos/dankurka/mgwt", "Date": "2012-04-12T20:05:25Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cardpool.equals(com.madarasz.netrunnerstats.Statistics.LAST_3)) { cardPack = cardPackRepository.findByName(cardPools.get(2).getTitle()); }else { cardPack = cardPackRepository.findByName(cardpool); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/446/buggy-version/src.main.java.com.madarasz.netrunnerstats.Statistics.java", "BodyUseAPI": ["com.madarasz.netrunnerstats.CardPackRepository.findByName(java.lang.String)"], "Fixed commit": "590cf5866e86b450d0ffc9ea808fd0dfdd08e16b", "Url": "https://api.github.com/repos/madarasz/NetrunnerMeta", "Date": "2016-04-14T09:03:30Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (change) { super.graphicChanged(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8982/buggy-version/BlaiseGraphics.src.main.java.com.googlecode.blaisemath.graphics.core.DelegatingPointSetGraphic.java", "BodyUseAPI": [], "Fixed commit": "82bd3b039fd4d2fd154b510a0120c531a673b10b", "Url": "https://api.github.com/repos/triathematician/blaisemath", "Date": "2016-01-20T01:52:40Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPreserveHeadersContained) { configuration.getSharedPassThroughHttpSender().removePreserveHttpHeader(HTTP.USER_AGENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1617/buggy-version/components.org.wso2.carbon.integrator.core.src.main.java.org.wso2.carbon.integrator.core.handler.IntegratorSynapseHandler.java", "BodyUseAPI": [], "Fixed commit": "8af16b3a4bba9a77cce4f52db638a028a1959c35", "Url": "https://api.github.com/repos/wso2/product-ei", "Date": "2017-01-21T18:50:18Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((impassableRoads) == null) { return new long[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5623/buggy-version/OsmAnd-java.src.net.osmand.router.GeneralRouter.java", "BodyUseAPI": [], "Fixed commit": "4565612ee6c458f1ee530944ea8c25899fef2ae5", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2014-10-25T12:15:10Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mPlayer.isPlaying()) { mPlayer.stop(); mPlayer.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7765/buggy-version/app.src.main.java.com.bauble_app.bauble.ViewFragment.java", "BodyUseAPI": ["android.media.MediaPlayer.stop()", "android.media.MediaPlayer.reset()"], "Fixed commit": "f02f2de38c73352f742f5daeaa80b4928db98001", "Url": "https://api.github.com/repos/eduardrg/TellToo", "Date": "2017-05-06T03:43:25Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (is != null) is.get().clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6662/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.java", "BodyUseAPI": ["java.util.Deque<com.tinkerpop.blueprints.impls.orient.OrientBaseGraph>.clear()", "java.lang.ThreadLocal<java.util.Deque<com.tinkerpop.blueprints.impls.orient.OrientBaseGraph>>.get()"], "Fixed commit": "2d0457dc5c4209a2fbf729ef8dfcab175c09f9cf", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-01-19T15:24:53Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((v != null) && ((v.length()) > 0)) ret.add(v);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6557/buggy-version/ddia-common.src.coopci.ddia.util.Funcs.java", "BodyUseAPI": ["java.util.HashSet<java.lang.String>.add(java.lang.String)"], "Fixed commit": "3c75f9d2aaafc91dbdf5fa6162a424babc33ee49", "Url": "https://api.github.com/repos/coopci/ddia", "Date": "2017-07-10T08:51:18Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.treasure.v2.service.TbkItemInfoService.getItemInfoBuNumId(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((info.getDescInfo()) != null) { detail = tbkItemInfoService.getItemDetailByNumId(itemId, info.getDescInfo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3589/buggy-version/treasure-web.src.main.java.com.treasure.v2.api.ItemController.java", "BodyUseAPI": ["com.treasure.v2.model.TbkItemInfoApi.getDescInfo()", "com.treasure.v2.service.TbkItemInfoService.getItemDetailByNumId(java.lang.Long,info.getDescInfo())"], "Fixed commit": "b4afa3d196df1529a67a8c4ce73d11447ccd2b8e", "Url": "https://api.github.com/repos/derekac/tk", "Date": "2017-05-30T03:19:55Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((wifiPassword.compareTo(\"<!>end<!>\")) != 0) { this.wifiPassword = wifiPassword; }else { this.wifiPassword = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8738/buggy-version/app.src.main.java.capstone.thermajust.Model.Device.java", "BodyUseAPI": [], "Fixed commit": "42ab791001ec65abc081c6d3cdc089e06df3b968", "Url": "https://api.github.com/repos/JoeHGeogheganCode/Thermajust-Capstone", "Date": "2015-11-11T05:50:11Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((w.serialQ) == null) { sb.append(\" (no serialQ)\"); }else { sb.append(\" serialQsize=\"); sb.append(w.serialQ.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7253/buggy-version/TantalumLibrary.src.org.tantalum.Worker.java", "BodyUseAPI": ["java.lang.StringBuffer.append(int)", "java.util.Vector.size()"], "Fixed commit": "92d659daa9ac17270212e92fc04a486d2655ef86", "Url": "https://api.github.com/repos/TantalumMobile/Tantalum", "Date": "2013-04-02T12:25:38Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_throttleOn)) { _cb.highWaterMark(); _throttleOn = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3855/buggy-version/storm-core.src.jvm.backtype.storm.utils.DisruptorQueue.java", "BodyUseAPI": [], "Fixed commit": "5673c54365710a559d8edf69831e97e582d78c45", "Url": "https://api.github.com/repos/revans2/incubator-storm", "Date": "2015-09-28T20:20:46Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_throttleOn) { _throttleOn = false; _cb.lowWaterMark(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3855/buggy-version/storm-core.src.jvm.backtype.storm.utils.DisruptorQueue.java", "BodyUseAPI": [], "Fixed commit": "5673c54365710a559d8edf69831e97e582d78c45", "Url": "https://api.github.com/repos/revans2/incubator-storm", "Date": "2015-09-28T20:20:46Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.searchKeyword) == null) || (this.searchKeyword.trim().isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2695/buggy-version/src.com.github.rutvijkumar.imagesearch.activities.SearchScreenActivity.java", "BodyUseAPI": [], "Fixed commit": "41de2be863814eaa24080b6f2be3c7806d336173", "Url": "https://api.github.com/repos/rutvijkumarshah/ImageSearch", "Date": "2014-06-17T22:58:19Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lvl < 0) { p.sendMessage(((pl.nameP) + \"You can't provide a negative number\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1302/buggy-version/src.me.Xiretza.EPsell.Commands.CommandEPS.java", "BodyUseAPI": [], "Fixed commit": "763cd07a5ee4d24b5314b02cedee7f222fc93cd0", "Url": "https://api.github.com/repos/Xiretza/EPsell", "Date": "2013-04-12T15:50:22Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((objectKey == null) || (objectKey.isEmpty())) { objectKey = sourceFile.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7951/buggy-version/src.main.java.org.mvnsearch.ali.oss.spring.shell.commands.OssOperationCommands.java", "BodyUseAPI": [], "Fixed commit": "c6e666c4c54cdb2d910341f8d3c9e09e17cacf8a", "Url": "https://api.github.com/repos/linux-china/ali-oss-java-cli", "Date": "2012-09-20T06:15:56Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((instance.getTypeId()) != 10) { java.lang.System.out.println(instance.getTypeId()); it.unitn.disi.sweb.webapi.model.eb.Entity entity = ((it.unitn.disi.sweb.webapi.model.eb.Entity) (instance)); eu.trentorise.opendatarise.semantics.model.entity.EntityODR entityODR = new eu.trentorise.opendatarise.semantics.model.entity.EntityODR(api, entity); entities.add(entityODR); }else { it.unitn.disi.sweb.webapi.model.eb.Name name = ((it.unitn.disi.sweb.webapi.model.eb.Name) (instance)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8197/buggy-version/src.main.java.eu.trentorise.opendatarise.semantics.services.Search.java", "BodyUseAPI": ["it.unitn.disi.sweb.webapi.model.eb.Instance.getTypeId()", "java.io.PrintStream.println(instance.getTypeId())"], "Fixed commit": "43a1831f7f84a31c8906f264332fcb998ef1669f", "Url": "https://api.github.com/repos/opendatatrentino/disi-open-data-client", "Date": "2014-03-31T11:46:52Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (status != null) { final org.mifosplatform.portfolio.loanaccount.domain.LoanStatus loanStatus = org.mifosplatform.portfolio.loanaccount.domain.LoanStatus.fromInt(status); if ((loanStatus.isActiveOrAwaitingApprovalOrDisbursal()) || (loanStatus.isUnderTransfer())) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5293/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.account.service.AccountAssociationsReadPlatformServiceImpl.java", "BodyUseAPI": ["org.mifosplatform.portfolio.loanaccount.domain.LoanStatus.fromInt(java.lang.Integer)"], "Fixed commit": "65dc78ac983417d94e584818060e263ac702c805", "Url": "https://api.github.com/repos/Musoni/mifosx", "Date": "2014-10-16T14:36:40Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (status != null) { final org.mifosplatform.portfolio.savings.domain.SavingsAccountStatusType saveStatus = org.mifosplatform.portfolio.savings.domain.SavingsAccountStatusType.fromInt(status); if ((saveStatus.isActiveOrAwaitingApprovalOrDisbursal()) || (saveStatus.isUnderTransfer())) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5293/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.account.service.AccountAssociationsReadPlatformServiceImpl.java", "BodyUseAPI": ["org.mifosplatform.portfolio.savings.domain.SavingsAccountStatusType.fromInt(java.lang.Integer)"], "Fixed commit": "65dc78ac983417d94e584818060e263ac702c805", "Url": "https://api.github.com/repos/Musoni/mifosx", "Date": "2014-10-16T14:36:40Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (now2.after(now)) { year--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1735/buggy-version/src.com.ds.avare.utils.NetworkHelper.java", "BodyUseAPI": [], "Fixed commit": "6ad92ffa8839cbc49b3b1f4ab09cdc27f06f5e60", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2015-01-02T00:15:26Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numberOfPods == 0) { numberOfPods = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1752/buggy-version/library.src.main.java.com.example.podslider.PodSlider.java", "BodyUseAPI": [], "Fixed commit": "e7111a069bf82da47fb0b462d538b31477f34125", "Url": "https://api.github.com/repos/bhargavms/PodSLider", "Date": "2016-07-05T16:50:20Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mode) != (org.usfirst.frc.team4215.robot.Drivetrain.AutoMode.StrafeControl)) { mode = org.usfirst.frc.team4215.robot.Drivetrain.AutoMode.StrafeControl; java.lang.System.out.println(\"Changing AutoMode to StrafeControl\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7/buggy-version/src.main.java.org.usfirst.frc.team4215.robot.Drivetrain.java", "BodyUseAPI": [], "Fixed commit": "1957495fb77dbf707f935a1b46a2c2f4cffb6c64", "Url": "https://api.github.com/repos/TrinityTrihawks/2017", "Date": "2017-04-06T22:49:51Z"},
{"Line": "=>1161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (direction < 0) { target = computePanelTopPosition(0.0F); }else if (((mAnchorPoint) != 1) && ((mSlideOffset) >= ((1.0F + (mAnchorPoint)) / 2))) { target = computePanelTopPosition(1.0F); }else if (((mAnchorPoint) == 1) && ((mSlideOffset) >= 0.5F)) { target = computePanelTopPosition(1.0F); }else if (((mAnchorPoint) != 1) && ((mSlideOffset) >= (mAnchorPoint))) { target = computePanelTopPosition(mAnchorPoint); }else if (((mAnchorPoint) != 1) && ((mSlideOffset) >= ((mAnchorPoint) / 2))) { target = computePanelTopPosition(mAnchorPoint); }else { target = computePanelTopPosition(0.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1900/buggy-version/library.src.com.sothree.slidinguppanel.SlidingUpPanelLayout.java", "BodyUseAPI": [], "Fixed commit": "08f2d2cedb0de26a516a05603ca970358e9c2e05", "Url": "https://api.github.com/repos/itlonewolf/AndroidSlidingUpPanel", "Date": "2014-06-04T23:32:42Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (address == ((byte) (173))) { ccre.log.Logger.config(\"UM7LT gyro calibrating...\"); }else if (address == ((byte) (12))) { ccre.log.Logger.config(\"UM7LT gyro calibration updated.\"); }else if (address != 0) { ccre.log.Logger.finest(((((((((\"UNHANDLED BINARY MESSAGE \" + (java.lang.Integer.toHexString((address & 255)))) + \" \") + (ccre.util.CArrayUtils.asList(data))) + \" [\") + is_hidden) + \":\") + is_command_failed) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/705/buggy-version/CommonChickenRuntimeEngine.src.ccre.drivers.chrobotics.InternalUM7LT.java", "BodyUseAPI": ["ccre.log.Logger.finest(((((((((\"UNHANDLED BINARY MESSAGE \" + (java.lang.Integer.toHexString((address & 255)))) + \" \") + (ccre.util.CArrayUtils.asList(data))) + \" [\") + is_hidden) + \":\") + is_command_failed) + \"]\"))", "java.lang.Integer.toHexString(int)"], "Fixed commit": "07928301a0f56a20e51e02bebb63ff668d6d6231", "Url": "https://api.github.com/repos/flamingchickens1540/common-chicken-runtime-engine", "Date": "2015-01-20T23:14:52Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getSender()) == (this)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8962/buggy-version/org.caleydo.core.src.org.caleydo.core.data.selection.MultiSelectionManagerMixin.java", "BodyUseAPI": [], "Fixed commit": "ad19dc3260a05984e17a55a0e43c65e6d8d6125b", "Url": "https://api.github.com/repos/Caleydo/caleydo", "Date": "2013-08-19T09:23:58Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getSender()) == (this)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8962/buggy-version/org.caleydo.core.src.org.caleydo.core.data.selection.MultiSelectionManagerMixin.java", "BodyUseAPI": [], "Fixed commit": "ad19dc3260a05984e17a55a0e43c65e6d8d6125b", "Url": "https://api.github.com/repos/Caleydo/caleydo", "Date": "2013-08-19T09:23:58Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (options == null) { if (throwable == null) { return new java.lang.Object[0]; }else { return new java.lang.Object[]{ throwable }; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/9199/buggy-version/src.main.java.nablarch.integration.log.slf4j.Slf4JLogger.java", "BodyUseAPI": [], "Fixed commit": "4c215021077519368129f2b6eb41edb2485c4547", "Url": "https://api.github.com/repos/nablarch/nablarch-slf4j-adaptor", "Date": "2017-03-21T03:08:26Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v.getId()) == (createButton.getId())) { mListener.onButtonClicked(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8580/buggy-version/app.src.main.java.com.tusk.baton.finalproject.MyRelaysFragment.java", "BodyUseAPI": [], "Fixed commit": "fabe2b2033f28109d8dac3939409dcc0f85cb83e", "Url": "https://api.github.com/repos/u-a/FinalProject-MobileSoftware", "Date": "2017-05-02T01:14:51Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getWhitespaceFollowedNode(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((whitespaceFollowedAst.getNextSibling()) == null) || ((whitespaceFollowedAst.getNextSibling().getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATIONS))) { final int whitespaceColumnNo = com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(whitespaceFollowedAst); final int whitespaceLineNo = whitespaceFollowedAst.getLineNo(); if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) { log(whitespaceLineNo, whitespaceColumnNo, com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.MSG_KEY, whitespaceFollowedAst.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2704/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getText()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.log(int,int,java.lang.String,whitespaceFollowedAst.getText())", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Fixed commit": "60a4d43f6179cd670a1881ea6fbc381d98ae5158", "Url": "https://api.github.com/repos/sergileon/checkstyle", "Date": "2017-09-05T11:43:02Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"POST\".equals(request.getMethod()))) { org.oscarehr.util.MiscUtils.getLogger().error(\"Someone is trying to login with a GET request.\", new java.lang.Exception()); java.lang.String newURL = mapping.findForward(\"error\").getPath(); newURL = newURL + \"?errormsg=Application Error. See Log.\"; return new org.apache.struts.action.ActionForward(newURL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7959/buggy-version/src.main.java.oscar.login.LoginAction.java", "BodyUseAPI": [], "Fixed commit": "a237a959fed76bfb7fd7d8a986459416c56239eb", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2015-10-29T19:16:12Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kayako.sdk.android.k5.messenger.messagelistpage.helpers.ReplyBoxViewHelper.getReplyBoxVisibility((!(mConversationHelper.isConversationCreated())),((mMessengerPrefHelper.getEmail()) != null),((mConversationHelper.isConversationClosed()) || (mConversationHelper.isConversationCompleted())),mListHelper.getListPageState())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stateToApply == null) { throw new java.lang.IllegalStateException(\"Can not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2144/buggy-version/ProjectSource.app-library.src.main.java.com.kayako.sdk.android.k5.messenger.messagelistpage.MessageListContainerPresenter.java", "BodyUseAPI": [], "Fixed commit": "c52a5b1b997692c7f1405a5185ef521b71daf3b6", "Url": "https://api.github.com/repos/metalwihen/Kayako-Android-SDK", "Date": "2017-05-18T11:38:07Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.lang.RuntimeException) { throw ((java.lang.RuntimeException) (e)); }else { throw new java.lang.RuntimeException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5522/buggy-version/rt.transports.jms.src.main.java.org.apache.cxf.transport.jms.util.MessageListenerContainer.java", "BodyUseAPI": [], "Fixed commit": "ea303974b03322a221de2d042a16e8c4f484056e", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2014-04-03T14:54:17Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == (questionPanels.size())) { i = displayed; }else add(questionPanels.get(i), \"wrap\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3301/buggy-version/LogicBox.src.prototype.mcq.McqPanel.java", "BodyUseAPI": ["java.util.ArrayList<prototype.mcq.McqQuestionPanel>.get(int)", "prototype.mcq.McqPanel.add(questionPanels.get(i),java.lang.String)"], "Fixed commit": "da6668d90653e9c67679463376f2daeed7d30578", "Url": "https://api.github.com/repos/LeeCIT/LogicBox", "Date": "2014-03-03T15:54:05Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.select(\"[summary=This layout table is used to present the seating numbers.]\").first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (el == null) { util.Logger.error(\"Null document retrieved. Did you enter a valid CRN?\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6814/buggy-version/src.parsing.Parser.java", "BodyUseAPI": [], "Fixed commit": "ff0a490b1431078e30a5420202370c4982d24f87", "Url": "https://api.github.com/repos/matthewoshaughnessy/gtregalert", "Date": "2014-05-05T02:34:25Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == null) this.c = c;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5875/buggy-version/BNUBot.src.net.bnubot.bot.CommandEventHandler.java", "BodyUseAPI": [], "Fixed commit": "baeebe8bb66a5f823e914c647319d751e1be8fde", "Url": "https://api.github.com/repos/scottanderson/bnubot", "Date": "2007-11-19T06:14:27Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.plugin.gcm.NotificationService.getInstance(context).isForeground()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isPushPluginInForeground) { if (((extras.getString(com.plugin.gcm.GCMIntentService.MESSAGE)) != null) && ((extras.getString(com.plugin.gcm.GCMIntentService.MESSAGE).length()) != 0)) { createNotification(context, extras); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8035/buggy-version/src.android.com.plugin.gcm.GCMIntentService.java", "BodyUseAPI": [], "Fixed commit": "7d9dee0206713adb243dfa04f529a64f87ff2089", "Url": "https://api.github.com/repos/AppGyver/PushNotifications", "Date": "2015-02-18T12:19:48Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.getAutoStartContainers()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.arquillian.cube.docker.impl.util.AutoStartOrderUtil.isCommaSeparatedBased(autoStartContainers)) { for (java.lang.String autoStart : autoStartContainers) { if (containerDefinitions.containsKey(autoStart)) { nodes.put(autoStart, org.arquillian.cube.docker.impl.util.AutoStartOrderUtil.Node.from(autoStart)); } } }else { if (org.arquillian.cube.docker.impl.util.AutoStartOrderUtil.isRegularExpressionBased(autoStartContainers)) { java.lang.String regularExpression = autoStartContainers[0]; java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(regularExpression); java.util.Set<java.lang.String> definedContainers = containerDefinitions.keySet(); for (java.lang.String containerName : definedContainers) { java.util.regex.Matcher matcher = pattern.matcher(containerName); if (matcher.matches()) { nodes.put(containerName, org.arquillian.cube.docker.impl.util.AutoStartOrderUtil.Node.from(containerName)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8206/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.util.AutoStartOrderUtil.java", "BodyUseAPI": ["org.arquillian.cube.docker.impl.util.AutoStartOrderUtil.isRegularExpressionBased(java.lang.String[])"], "Fixed commit": "ed2452b2e7bc06d5a7724fdb56435bebedb0b02d", "Url": "https://api.github.com/repos/AndyGee/arquillian-cube", "Date": "2015-07-29T11:00:16Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.github.dfa.diaspora_android.BuildConfig.IS_TEST_BUILD) { navheaderImage.setImageResource(R.drawable.ic_launcher_test); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/787/buggy-version/app.src.main.java.com.github.dfa.diaspora_android.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8d6b09c8008d35e9212dacd225106d7599c0e52a", "Url": "https://api.github.com/repos/gsantner/dandelion", "Date": "2017-03-19T22:32:18Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((groups.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7270/buggy-version/app.src.main.java.com.codepath.apps.findmate.activities.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "9ce3a783b43c391daeccf5d4118f13eecb49c201", "Url": "https://api.github.com/repos/codepath-2016-group5/Moments", "Date": "2016-11-22T05:24:23Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((methResults.get(Constants.SVM)) != null) { predictorVariable = svm.get(element).getPredictorVariable(); predictorVariableID = svm.get(element).getPredictorVariableID(); }else if ((methResults.get(Constants.PCR)) != null) { predictorVariable = pcr.get(element).getPredictorVariable(); predictorVariableID = pcr.get(element).getPredictorVariableID(); }else if ((methResults.get(Constants.PLS)) != null) { predictorVariable = pls.get(element).getPredictorVariable(); predictorVariableID = pls.get(element).getPredictorVariableID(); }else if ((methResults.get(Constants.RIDGE)) != null) { predictorVariable = ridge.get(element).getPredictorVariable(); predictorVariableID = ridge.get(element).getPredictorVariableID(); }else if ((methResults.get(Constants.LASSO)) != null) { predictorVariable = lasso.get(element).getPredictorVariable(); predictorVariableID = lasso.get(element).getPredictorVariableID(); }else if ((methResults.get(Constants.EN)) != null) { predictorVariable = en.get(element).getPredictorVariable(); predictorVariableID = en.get(element).getPredictorVariableID(); }else if ((methResults.get(Constants.SPLS)) != null) { predictorVariable = spls.get(element).getPredictorVariable(); predictorVariableID = spls.get(element).getPredictorVariableID(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6049/buggy-version/src.main.java.nl.wur.plantbreeding.omicsfusion.results.RetrieveResultsSummaryAction.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<nl.wur.plantbreeding.omicsfusion.datatypes.SummaryDataType>>.get(Constants.PCR)", "java.util.HashMap<java.lang.String, java.util.ArrayList<nl.wur.plantbreeding.omicsfusion.datatypes.SummaryDataType>>.get(Constants.LASSO)", "java.util.HashMap<java.lang.String, java.util.ArrayList<nl.wur.plantbreeding.omicsfusion.datatypes.SummaryDataType>>.get(Constants.EN)", "java.util.HashMap<java.lang.String, java.util.ArrayList<nl.wur.plantbreeding.omicsfusion.datatypes.SummaryDataType>>.get(Constants.PLS)", "java.util.HashMap<java.lang.String, java.util.ArrayList<nl.wur.plantbreeding.omicsfusion.datatypes.SummaryDataType>>.get(Constants.RIDGE)", "java.util.HashMap<java.lang.String, java.util.ArrayList<nl.wur.plantbreeding.omicsfusion.datatypes.SummaryDataType>>.get(Constants.SPLS)"], "Fixed commit": "3f685e1b43086de955215cba81ebd1e6ff0d3263", "Url": "https://api.github.com/repos/rfinkers/omicsFusion", "Date": "2014-09-30T06:53:30Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x) >= (list.length)) { dispose(); new edu.ucsb.cs56.projects.games.simon_says.SimonMenu().setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2763/buggy-version/src.edu.ucsb.cs56.projects.games.simon_says.SimonRules.java", "BodyUseAPI": [], "Fixed commit": "8fcf9b282a6e8e1a215ca83870aa10c12cf1b169", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-simon-says", "Date": "2017-11-07T20:10:10Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (className != null) { ((com.orientechnologies.orient.core.serialization.serializer.record.string.ODocument) (iRecord)).setClassName(className); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3244/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerJSON.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.ORecord.setClassName(java.lang.String)"], "Fixed commit": "fdf5cc6853fdd7cc7b6a2cdd98f7a74925fae57d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-03-27T15:09:32Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.common.io.OIOUtils.getStringContent(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (fieldName.equals(ODocumentHelper.ATTRIBUTE_CLASS)) { continue; }else if (fieldName.equals(ODocumentHelper.ATTRIBUTE_TYPE)) { continue; }else if ((fieldName.equals(com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerJSON.ATTRIBUTE_FIELD_TYPES)) && (iRecord instanceof com.orientechnologies.orient.core.serialization.serializer.record.string.ODocument)) { continue; }else if ((fieldName.equals(\"value\")) && (!(iRecord instanceof com.orientechnologies.orient.core.serialization.serializer.record.string.ODocument))) { if (\"null\".equals(fieldValue)) iRecord.fromStream(OCommonConst.EMPTY_BYTE_ARRAY); else if (iRecord instanceof com.orientechnologies.orient.core.serialization.serializer.record.string.OBlob) { iRecord.fromStream(com.orientechnologies.orient.core.serialization.OBase64Utils.decode(fieldValueAsString)); }else if (iRecord instanceof com.orientechnologies.orient.core.record.ORecordStringable) { ((com.orientechnologies.orient.core.record.ORecordStringable) (iRecord)).value(fieldValueAsString); }else throw new java.lang.IllegalArgumentException(\"unsupported type of record\"); }else if (iRecord instanceof com.orientechnologies.orient.core.serialization.serializer.record.string.ODocument) { final com.orientechnologies.orient.core.serialization.serializer.record.string.ODocument doc = ((com.orientechnologies.orient.core.serialization.serializer.record.string.ODocument) (iRecord)); com.orientechnologies.orient.core.metadata.schema.OType type = determineType(doc, fieldName); final java.lang.Object v = getValue(doc, fieldName, fieldValue, fieldValueAsString, type, null, fieldTypes, noMap, iOptions); if (v != null) if ((v instanceof java.util.Collection<?>) && (!(((java.util.Collection<?>) (v)).isEmpty()))) { if (v instanceof com.orientechnologies.orient.core.db.record.ORecordLazyMultiValue) ((com.orientechnologies.orient.core.db.record.ORecordLazyMultiValue) (v)).setAutoConvertToRecord(false); if (type == null) { java.lang.Object first = ((java.util.Collection<?>) (v)).iterator().next(); if (((first != null) && (first instanceof com.orientechnologies.orient.core.record.ORecord)) && (!(((com.orientechnologies.orient.core.record.ORecord) (first)).getIdentity().isValid()))) type = (v instanceof java.util.Set<?>) ? com.orientechnologies.orient.core.metadata.schema.OType.EMBEDDEDSET : com.orientechnologies.orient.core.metadata.schema.OType.EMBEDDEDLIST; } if (type != null) { doc.field(fieldName, v, type); continue; } }else if ((v instanceof java.util.Map<?, ?>) && (!(((java.util.Map<?, ?>) (v)).isEmpty()))) { java.lang.Object first = ((java.util.Map<?, ?>) (v)).values().iterator().next(); if (((first != null) && (first instanceof com.orientechnologies.orient.core.record.ORecord)) && (!(((com.orientechnologies.orient.core.record.ORecord) (first)).getIdentity().isValid()))) { doc.field(fieldName, v, OType.EMBEDDEDMAP); continue; } }else if (((v instanceof com.orientechnologies.orient.core.serialization.serializer.record.string.ODocument) && (type != null)) && (type.isLink())) { java.lang.String className1 = ((com.orientechnologies.orient.core.serialization.serializer.record.string.ODocument) (v)).getClassName(); if ((className1 != null) && ((className1.length()) > 0)) ((com.orientechnologies.orient.core.serialization.serializer.record.string.ODocument) (v)).save(); } if (((type == null) && (fieldTypes != null)) && (fieldTypes.containsKey(fieldName))) type = com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerStringAbstract.getType(fieldValue, fieldTypes.get(fieldName)); if (v instanceof com.orientechnologies.orient.core.db.record.OTrackedSet<?>) { if ((com.orientechnologies.common.collection.OMultiValue.getFirstValue(((java.util.Set<?>) (v)))) instanceof com.orientechnologies.orient.core.db.record.OIdentifiable) type = com.orientechnologies.orient.core.metadata.schema.OType.LINKSET; }else if (v instanceof com.orientechnologies.orient.core.db.record.OTrackedList<?>) { if ((com.orientechnologies.common.collection.OMultiValue.getFirstValue(((java.util.List<?>) (v)))) instanceof com.orientechnologies.orient.core.db.record.OIdentifiable) type = com.orientechnologies.orient.core.metadata.schema.OType.LINKLIST; } if (type != null) doc.field(fieldName, v, type); else doc.field(fieldName, v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3244/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerJSON.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "com.orientechnologies.orient.core.serialization.serializer.record.string.ODocument.field(java.lang.String,java.lang.Object)", "java.lang.String.equals(java.lang.String)", "com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerStringAbstract.getType(java.lang.String,java.lang.Character)", "com.orientechnologies.orient.core.serialization.serializer.record.string.ODocument.field(java.lang.String,java.lang.Object,com.orientechnologies.orient.core.metadata.schema.OType)", "com.orientechnologies.orient.core.serialization.serializer.record.string.ODocument.field(java.lang.String,java.lang.Object,com.orientechnologies.orient.core.metadata.schema.OType)", "com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerJSON.determineType(com.orientechnologies.orient.core.serialization.serializer.record.string.ODocument,java.lang.String)", "java.lang.String.equals(ODocumentHelper.ATTRIBUTE_TYPE)", "java.util.Map<java.lang.String, java.lang.Character>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Character>.containsKey(java.lang.String)", "com.orientechnologies.orient.core.serialization.serializer.record.string.ODocument.field(java.lang.String,java.lang.Object,OType.EMBEDDEDMAP)", "com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerJSON.getValue(com.orientechnologies.orient.core.serialization.serializer.record.string.ODocument,java.lang.String,java.lang.String,java.lang.String,com.orientechnologies.orient.core.metadata.schema.OType,<nulltype>,java.util.Map<java.lang.String, java.lang.Character>,boolean,java.lang.String)"], "Fixed commit": "fdf5cc6853fdd7cc7b6a2cdd98f7a74925fae57d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-03-27T15:09:32Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isCollidingX && isCollidingY) { (nBoxY.getPosition().y)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3441/buggy-version/Tables.src.com.graphics.world.Entity.java", "BodyUseAPI": [], "Fixed commit": "23ec35e8b3713bad3f51ea7061286a0a20d308ab", "Url": "https://api.github.com/repos/Craigspaz/Flying-Ferris-Wheel-Engine", "Date": "2017-04-13T01:44:54Z"},
{"Line": "=>1087", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (singleEnd3p) { if (orientation.equals(Strand.POSITIVE)) window.setOrientation(Strand.NEGATIVE); else if (orientation.equals(Strand.NEGATIVE)) window.setOrientation(Strand.POSITIVE); }else { window.setOrientation(orientation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7006/buggy-version/src.java.nextgen.core.scripture.AddEndRNASeqToScripture.java", "BodyUseAPI": [], "Fixed commit": "2004ad404212831f93955c1b03dcac04ece5a3cb", "Url": "https://api.github.com/repos/mgarber/scriptureV2", "Date": "2013-10-24T17:31:05Z"},
{"Line": "=>1193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (singleEnd3p) { nextgen.core.annotation.Annotation.Strand s = window.getOrientation(); if (s.equals(Strand.POSITIVE)) block.setOrientation(Strand.NEGATIVE); else if (s.equals(Strand.NEGATIVE)) block.setOrientation(Strand.POSITIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7006/buggy-version/src.java.nextgen.core.scripture.AddEndRNASeqToScripture.java", "BodyUseAPI": [], "Fixed commit": "2004ad404212831f93955c1b03dcac04ece5a3cb", "Url": "https://api.github.com/repos/mgarber/scriptureV2", "Date": "2013-10-24T17:31:05Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (out != null) { try { out.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3786/buggy-version/src.main.java.nl.tudelft.thefirstorder.web.rest.UploadResource.java", "BodyUseAPI": ["java.io.OutputStream.close()"], "Fixed commit": "eecbfebc16532ad2fc19743c8b39a86333ab5a19", "Url": "https://api.github.com/repos/rubenwiersma/thefirstorder", "Date": "2016-06-17T11:07:45Z"},
{"Line": "=>4015", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lb.isArg) lb.idx -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8606/buggy-version/src.jvm.clojure.lang.Compiler.java", "BodyUseAPI": [], "Fixed commit": "41af70c9e27afbfda0d7214f5165905a72b661ba", "Url": "https://api.github.com/repos/MichaelBlume/clojure", "Date": "2015-09-21T15:41:27Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPlayer.getPlayNum()) == 1) { (board[6])++; }else (board[13])++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7685/buggy-version/MancalaGame.java", "BodyUseAPI": [], "Fixed commit": "e05ac1330acfac61a87f234e2faaae2369ac9948", "Url": "https://api.github.com/repos/jardinargent/CS151Mancala", "Date": "2016-05-08T01:35:30Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rx_activity_result.RxActivityResult.Builder<T>.getTargetFragment(java.util.List<android.support.v4.app.Fragment>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (candidate != null) return candidate;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8364/buggy-version/rx_activity_result.src.main.java.rx_activity_result.RxActivityResult.java", "BodyUseAPI": [], "Fixed commit": "4fc236e749448012cca5766634ba854bb494ecff", "Url": "https://api.github.com/repos/VictorAlbertos/RxActivityResult", "Date": "2016-05-15T16:16:27Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (encodedData == (java.lang.Integer.MIN_VALUE)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7960/buggy-version/src.adl_2daa.gen.encoder.ADLNestingDecoder.java", "BodyUseAPI": [], "Fixed commit": "638d6be8721c66c865fd2dd13221161025249034", "Url": "https://api.github.com/repos/pichitpr/ADLminingGen", "Date": "2016-03-22T06:48:13Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (diffDays == 0) { friendlyDate = this.context.getResources().getString(R.string.today); }else if (diffDays == 1) { friendlyDate = this.context.getResources().getString(R.string.a_day_ago); }else { friendlyDate = ((java.lang.Integer.toString(diffDays)) + \" \") + (this.context.getResources().getString(R.string.days_ago)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5885/buggy-version/project.src.com.kaju.helo.ContactScoreRowAdapter.java", "BodyUseAPI": ["java.lang.Integer.toString(int)"], "Fixed commit": "ae15e003fbc5e7ee5c3597bd76c4734cc428de79", "Url": "https://api.github.com/repos/saurabhinhyd/helo", "Date": "2014-04-07T05:15:53Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eachEvent.select(\"a\").attr(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (activityRep.isExisted(eventDetailUrl, parser)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5070/buggy-version/src.main.java.com.siwimi.webparsers.parser.Parse_DetroitZoo.java", "BodyUseAPI": [], "Fixed commit": "68b1dcb37a3e9d9699247aa633170982df66319d", "Url": "https://api.github.com/repos/WayneSan/siwimi-parseEvent", "Date": "2016-01-21T15:04:41Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.select.Elements.attr(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (activityRep.isExisted(eventUrl, parser)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5070/buggy-version/src.main.java.com.siwimi.webparsers.parser.Parse_HenryFord.java", "BodyUseAPI": [], "Fixed commit": "68b1dcb37a3e9d9699247aa633170982df66319d", "Url": "https://api.github.com/repos/WayneSan/siwimi-parseEvent", "Date": "2016-01-21T15:04:41Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["au.com.wallaceit.voicemail.Preferences.getPreferences(context).getAccounts()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((accounts.size()) < 1) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7299/buggy-version/app.src.main.java.au.com.wallaceit.voicemail.service.MissedCallReceiver.java", "BodyUseAPI": [], "Fixed commit": "72cb13f731af1dceabd1cfa9f6c269a53c16284c", "Url": "https://api.github.com/repos/micwallace/visualvoicemail", "Date": "2015-12-21T03:53:39Z"},
{"Line": "=>11419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (LenIndex != 7) { return cn.niot.rule.RuleFunction.ERR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5972/buggy-version/source.niot.src.cn.niot.rule.RuleFunction.java", "BodyUseAPI": [], "Fixed commit": "6fdbfe661061176f1dbe5a8655a45d63b3a4b989", "Url": "https://api.github.com/repos/cnnic/niot", "Date": "2014-03-31T09:53:44Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.get(pimp.model.Product)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (obj != null) { data = fields[i].get(product).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4235/buggy-version/src.pimp.persistence.DBDataAccessor.java", "BodyUseAPI": [], "Fixed commit": "db51c7e57f33b10310e35d6d62ae377a94a207e3", "Url": "https://api.github.com/repos/dpschramm/pimp", "Date": "2012-05-06T04:46:54Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof net.tridentsdk.server.player.TridentPlayer) { return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8568/buggy-version/src.main.java.net.tridentsdk.server.entity.TridentEntity.java", "BodyUseAPI": [], "Fixed commit": "7afc2403405c0ee8e2c8e80510edf6241c0f7128", "Url": "https://api.github.com/repos/lenis0012/Trident", "Date": "2014-12-19T08:56:25Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (data == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7314/buggy-version/app.src.main.java.by.madcat.development.f1newsreader.classesUI.TextOnlineActivity.java", "BodyUseAPI": [], "Fixed commit": "e163c8837391738a0c0bf47e05a19933599a3361", "Url": "https://api.github.com/repos/orloffski/F1-News", "Date": "2017-07-07T19:37:41Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.skcraft.launcher.Launcher.dataDir.exists())) { com.skcraft.launcher.Launcher.dataDir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2042/buggy-version/src.main.java.com.skcraft.launcher.Launcher.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "a54dca2962d7c0479b5e8a06abae8ada7d5e9183", "Url": "https://api.github.com/repos/James137137/LolnetLauncher", "Date": "2014-08-22T05:24:50Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((calcs.getFood()) != null) { calories += ((calcs.getFood().getKcal()) * (calcs.getValue())) / 100.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2487/buggy-version/src.main.java.com.goodfood.service.impl.CalcServiceImpl.java", "BodyUseAPI": ["com.goodfood.model.CalcFood.getFood()", "calcs.getFood().getKcal()", "com.goodfood.model.CalcFood.getValue()"], "Fixed commit": "f32cffdc8000fb5ab39e6f203a0613284a58bc07", "Url": "https://api.github.com/repos/motomen/my-qualification-work", "Date": "2015-04-25T11:41:40Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kse.crypto.x509.X509ExtensionType.resolveOid(oid.getId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { return org.kse.utilities.io.HexUtil.getHexClearDump(octets); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/733/buggy-version/kse.src.org.kse.crypto.x509.X509Ext.java", "BodyUseAPI": [], "Fixed commit": "e052811d3572392124e89ed3c05ee9168cfac59f", "Url": "https://api.github.com/repos/kaikramer/keystore-explorer", "Date": "2017-11-17T15:33:30Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!cloudCollision) { (jumps)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/625/buggy-version/core.src.de.bitbrain.clouboy.core.PlayerBehavior.java", "BodyUseAPI": [], "Fixed commit": "ef50736b11b8e6037399341f8bc5952d2160784d", "Url": "https://api.github.com/repos/bitbrain/clouboy", "Date": "2015-07-01T15:02:28Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pData == null) || ((((pData.getData()) == null) && (com.aviadmini.quickimagepick.QiPick.API_18)) && ((pData.getClipData()) == null))) { pCallback.onCancel(PickSource.CAMERA, requestType); com.aviadmini.quickimagepick.QiPick.deleteLastCameraPic(pContext); }else { pCallback.onCancel(PickSource.DOCUMENTS, requestType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/895/buggy-version/library.src.main.java.com.aviadmini.quickimagepick.QiPick.java", "BodyUseAPI": [], "Fixed commit": "343812fce43a0efb73a8fc2e49c88fe24ec3688f", "Url": "https://api.github.com/repos/aviadmini/quickimagepick", "Date": "2016-09-13T17:06:58Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (canResolveCustomType(arg)) { arg = resolveCustomType(arg); }else if (arg instanceof java.util.concurrent.atomic.AtomicReference) { arg = ((java.util.concurrent.atomic.AtomicReference<?>) (arg)).get(); }else if (arg instanceof java.util.concurrent.atomic.AtomicBoolean) { return ((java.util.concurrent.atomic.AtomicBoolean) (arg)).get() ? 1 : 0; }else if (arg instanceof java.lang.Enum<?>) { return ((java.lang.Enum<?>) (arg)).name(); }else if (arg instanceof java.lang.ThreadLocal) { arg = ((java.lang.ThreadLocal<?>) (arg)).get(); }else { return arg; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1389/buggy-version/squidb.src.com.yahoo.squidb.sql.DefaultArgumentResolver.java", "BodyUseAPI": ["com.yahoo.squidb.sql.DefaultArgumentResolver.resolveCustomType(java.lang.Object)"], "Fixed commit": "d5e4b35fa18781bba801b15f079f4484762d8fff", "Url": "https://api.github.com/repos/yahoo/squidb", "Date": "2016-08-30T15:09:13Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.Exchange.getProperty(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isXalanTransformer) { javax.xml.stream.XMLStreamReader reader = exchange.getContext().getTypeConverter().tryConvertTo(javax.xml.stream.XMLStreamReader.class, exchange, body); if (reader != null) { source = new org.apache.camel.converter.jaxp.StaxSource(reader); } }else { if (isAllowStAX()) { source = exchange.getContext().getTypeConverter().tryConvertTo(javax.xml.transform.stax.StAXSource.class, exchange, body); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2599/buggy-version/camel-core.src.main.java.org.apache.camel.builder.xml.XsltBuilder.java", "BodyUseAPI": [], "Fixed commit": "488538a2e113db82eda781565610cb3a45c268d8", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-01-24T02:27:54Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.floorMod(long,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (yearStart > daysInLongCycle) { year--; yearStart -= ((org.threeten.extra.chrono.AccountingDate.WEEKS_IN_YEAR) + (chronology.isLeapYear(year) ? 1 : 0)) * (org.threeten.extra.chrono.AccountingDate.DAYS_IN_WEEK); }else if ((daysInLongCycle - yearStart) >= (((org.threeten.extra.chrono.AccountingDate.WEEKS_IN_YEAR) + (chronology.isLeapYear(year) ? 1 : 0)) * (org.threeten.extra.chrono.AccountingDate.DAYS_IN_WEEK))) { yearStart += ((org.threeten.extra.chrono.AccountingDate.WEEKS_IN_YEAR) + (chronology.isLeapYear(year) ? 1 : 0)) * (org.threeten.extra.chrono.AccountingDate.DAYS_IN_WEEK); year++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4152/buggy-version/src.main.java.org.threeten.extra.chrono.AccountingDate.java", "BodyUseAPI": [], "Fixed commit": "bc48d2e4e7ca5bbba51fb4861ccd8fc551546fb1", "Url": "https://api.github.com/repos/Clockwork-Muse/threeten-extra", "Date": "2014-11-11T10:47:52Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controlPanel) != null) { menuOptionsWindow.setSize(com.teamdev.jxmaps.demo.PopupMenu.MENU_WIDTH, controlPanel.getPreferredHeight()); menuOptionsWindow.getContentPane().revalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8052/buggy-version/src.com.teamdev.jxmaps.demo.PopupMenu.java", "BodyUseAPI": [], "Fixed commit": "3649f552358c9a64ca0f253d64a74a2dbb4704cc", "Url": "https://api.github.com/repos/TeamDev-Ltd/JxMaps-Examples", "Date": "2016-10-17T07:36:43Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSearch) { javax.swing.JTextField jtf = ((javax.swing.JTextField) (e.getSource())); jtf.setText(\"\"); isSearch = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3732/buggy-version/src.prd.fms.executor.SearchTextFieldFocusExecutor.java", "BodyUseAPI": [], "Fixed commit": "99bd6b6afc91499617323b5a359cb939abed0103", "Url": "https://api.github.com/repos/zhoubo1832/fms", "Date": "2016-12-07T06:12:09Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((compiledAppended) == null) { compiledAppended = java.util.regex.Pattern.compile(appended); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/33/buggy-version/compiler.src.main.java.com.github.mustachejava.codes.WriteCode.java", "BodyUseAPI": [], "Fixed commit": "bc8e73c8f0a15621b3f4ea1718bb67d3ef7a65bd", "Url": "https://api.github.com/repos/spullara/mustache.java", "Date": "2014-04-29T02:52:57Z"},
{"Line": "=>1409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["activePlayer.getPlayer().getInventory().getItemInHand()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.elmakers.mine.bukkit.plugins.magic.Wand.isWand(newWandItem)) { item = newWandItem; updateName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2883/buggy-version/src.main.java.com.elmakers.mine.bukkit.plugins.magic.Wand.java", "BodyUseAPI": [], "Fixed commit": "226d43c0694b8de6a2817c0d02c8ecd77abd8f65", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2014-01-06T04:10:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.distributed.app.RestClient.1.processMessage(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (r != null) reply = r;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2626/buggy-version/src.main.java.com.distributed.app.RestClient.java", "BodyUseAPI": [], "Fixed commit": "1c90343ce2c126f7ef07b30a87f4f426817c109b", "Url": "https://api.github.com/repos/Crystal-Solutions/Distributed_Project", "Date": "2017-11-09T18:27:25Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((values.length) == 4) { data.setMetadata(com.ibm.nmon.util.DataHelper.newString(values[1]), com.ibm.nmon.util.DataHelper.newString(values[3])); }else { data.setMetadata(com.ibm.nmon.util.DataHelper.newString(values[1]), com.ibm.nmon.util.DataHelper.newString(values[2])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2403/buggy-version/src.com.ibm.nmon.parser.NMONParser.java", "BodyUseAPI": ["com.ibm.nmon.parser.NMONDataSet.setMetadata(com.ibm.nmon.util.DataHelper.newString(values[1]),com.ibm.nmon.util.DataHelper.newString(values[2]))", "com.ibm.nmon.util.DataHelper.newString(java.lang.String)", "com.ibm.nmon.util.DataHelper.newString(java.lang.String)", "com.ibm.nmon.util.DataHelper.newString(java.lang.String)", "com.ibm.nmon.parser.NMONDataSet.setMetadata(com.ibm.nmon.util.DataHelper.newString(values[1]),com.ibm.nmon.util.DataHelper.newString(values[3]))", "com.ibm.nmon.util.DataHelper.newString(java.lang.String)"], "Fixed commit": "3b2a53b84d18df9db59e2e6627b1ce9adbccf3cc", "Url": "https://api.github.com/repos/nmonvisualizer/nmonvisualizer", "Date": "2014-04-17T14:25:56Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (checksum == null) { throw new java.lang.NullPointerException(\"Parameter checksum must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2953/buggy-version/src.main.java.org.apache.commons.compress.utils.ChecksumCalculatingInputStream.java", "BodyUseAPI": [], "Fixed commit": "6f379134ae1807cd404ed6c9579707e5dc6a6df0", "Url": "https://api.github.com/repos/salewski/commons-compress", "Date": "2017-06-16T19:30:03Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (in == null) { throw new java.lang.NullPointerException(\"Parameter in must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2953/buggy-version/src.main.java.org.apache.commons.compress.utils.ChecksumCalculatingInputStream.java", "BodyUseAPI": [], "Fixed commit": "6f379134ae1807cd404ed6c9579707e5dc6a6df0", "Url": "https://api.github.com/repos/salewski/commons-compress", "Date": "2017-06-16T19:30:03Z"},
{"Line": "=>432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (engine.Screen.isDisposed) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5852/buggy-version/src.engine.Screen.java", "BodyUseAPI": [], "Fixed commit": "ae6d98ed641900729765f99f13be7c10b615bb35", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-09-22T11:01:54Z"},
{"Line": "=>1026", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSharePhotos) != null) { returnToObsList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/337/buggy-version/iNaturalist.src.main.java.org.inaturalist.android.ObservationEditor.java", "BodyUseAPI": [], "Fixed commit": "3d72d78b43283eaefd8a48dde9dc6f169cb07059", "Url": "https://api.github.com/repos/inaturalist/iNaturalistAndroid", "Date": "2017-11-22T20:49:42Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.model.typechecker.model.Functional.getFirstParameterList()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (firstParameterList != null) { for (com.redhat.ceylon.model.typechecker.model.Parameter p : firstParameterList.getParameters()) { if (p != null) { if (paramName.equals(p.getName())) { return \"it\"; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7977/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.refactor.MoveOutRefactoring.java", "BodyUseAPI": ["com.redhat.ceylon.model.typechecker.model.ParameterList.getParameters()"], "Fixed commit": "c5fc51af1b81aea645f280e1bf092dd669f61e84", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2015-09-13T09:27:29Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.isCollection()) { ln(((((\" return entity.contains\" + (ilarkesto.base.Str.uppercaseFirstLetter(p.getNameSingular()))) + \"(\") + (p.getName())) + \");\")); }else { ln(((((\" return entity.is\" + (ilarkesto.base.Str.uppercaseFirstLetter(p.getName()))) + \"(\") + (p.getName())) + \");\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3025/buggy-version/src.main.java.ilarkesto.mda.legacy.generator.EntityGenerator.java", "BodyUseAPI": ["ilarkesto.mda.legacy.model.PropertyModel.getNameSingular()", "ilarkesto.base.Str.uppercaseFirstLetter(p.getNameSingular())", "ilarkesto.mda.legacy.model.PropertyModel.getName()", "ilarkesto.mda.legacy.model.PropertyModel.getName()", "ilarkesto.base.Str.uppercaseFirstLetter(p.getName())", "ilarkesto.mda.legacy.model.PropertyModel.getName()", "ilarkesto.mda.legacy.generator.EntityGenerator.ln(((((\"                return entity.is\" + (ilarkesto.base.Str.uppercaseFirstLetter(p.getName()))) + \"(\") + (p.getName())) + \");\"))", "ilarkesto.mda.legacy.generator.EntityGenerator.ln(((((\"                return entity.contains\" + (ilarkesto.base.Str.uppercaseFirstLetter(p.getNameSingular()))) + \"(\") + (p.getName())) + \");\"))"], "Fixed commit": "cfcfbe71896b309a0b8a6f15df3a8da1e800401b", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2014-06-03T05:42:33Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.isCollection()) byType = p.getContentType();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3025/buggy-version/src.main.java.ilarkesto.mda.legacy.generator.EntityGenerator.java", "BodyUseAPI": ["ilarkesto.mda.legacy.model.PropertyModel.getContentType()"], "Fixed commit": "cfcfbe71896b309a0b8a6f15df3a8da1e800401b", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2014-06-03T05:42:33Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (smpCursor.moveToFirst()) { int tmpCnt = smpCursor.getInt(smpCursor.getColumnIndex(\"cnt\")); int tmp = 0; int tmp1 = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8725/buggy-version/app.src.main.java.com.example.takahiro.alarmapp.SubActivity.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.getInt(smpCursor.getColumnIndex(\"cnt\"))"], "Fixed commit": "62295dae80b6dd32a12b11836b9ca4aa933dd87f", "Url": "https://api.github.com/repos/takaneo/alarmApp", "Date": "2016-01-25T13:34:09Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox<net.nikr.eve.jeveasset.data.sde.Item>.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(object instanceof net.nikr.eve.jeveasset.data.sde.Item)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1717/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.tabs.stockpile.StockpileItemDialog.java", "BodyUseAPI": [], "Fixed commit": "bcc43d094062a7745e24aa766a66093d80a78a5e", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-11-20T09:46:36Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox<net.nikr.eve.jeveasset.data.sde.Item>.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (object == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1717/buggy-version/src.main.java.net.nikr.eve.jeveasset.gui.tabs.stockpile.StockpileItemDialog.java", "BodyUseAPI": [], "Fixed commit": "bcc43d094062a7745e24aa766a66093d80a78a5e", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-11-20T09:46:36Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (widget != null) { addChild(widget); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3540/buggy-version/gui.DecoratedEdges.java", "BodyUseAPI": ["fi.henu.gdxextras.gui.DecoratedEdges.addChild(fi.henu.gdxextras.gui.Widget)"], "Fixed commit": "40946cf8eef26976a9f1c6425f1dc0a6353af865", "Url": "https://api.github.com/repos/henu/gdxextras", "Date": "2014-11-01T13:52:39Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value == null) && (!(getAsBoolean(R.string.column_hasDetail)))) { value = getApplicationContext().getString(R.string.NoCat); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/90/buggy-version/monma.src.main.java.de.aw.monma.databinding.UmsatzViewModel.java", "BodyUseAPI": [], "Fixed commit": "98cdc70fdfd20b5fcf76ce6edd40ffb30f7879fe", "Url": "https://api.github.com/repos/gitwalex/MonMa", "Date": "2017-02-28T11:10:49Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.springframework.roo.support.util.OsUtils.isWindows()) { sb.append(decorate(word, org.springframework.roo.shell.jline.osgi.FG_GREEN)); }else { sb.append(decorate(word, org.springframework.roo.shell.jline.osgi.FG_GREEN, org.springframework.roo.shell.jline.osgi.UNDERSCORE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3862/buggy-version/shell-jline-osgi.src.main.java.org.springframework.roo.shell.jline.osgi.JLineShellComponent.java", "BodyUseAPI": [], "Fixed commit": "0f847445f67e080bdf0be1ad52ef8ef4ed3faa6d", "Url": "https://api.github.com/repos/spring-projects/spring-roo", "Date": "2011-09-12T01:08:34Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.world.getBlockState(event.pos).getBlock()) instanceof com.uberverse.arkcraft.common.block.crafter.BlockRefiningForge) { if ((item != null) && ((item.getItem()) == (com.uberverse.arkcraft.init.ARKCraftRangedWeapons.rocket_propelled_grenade))) { if (((((action.RIGHT_CLICK_BLOCK) != null) && ((action.RIGHT_CLICK_AIR) != null)) && (item.getDisplayName().equals(\"Michael_Bay\"))) && (event.entityPlayer.isSneaking())) { net.minecraft.client.entity.EntityPlayerSP player = net.minecraft.client.Minecraft.getMinecraft().thePlayer; Easter.MICHAEL_BAY.createExplosionNoDamage(event.entityPlayer, event.world, 50, event.entityPlayer.posX, event.entityPlayer.posY, event.entityPlayer.posZ, 0, 1, 0); page.getAchievements().add(achievement); player.addStat(achievement, 1); net.minecraft.client.Minecraft.getMinecraft().guiAchievement.displayAchievement(achievement); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5430/buggy-version/src.main.java.com.uberverse.arkcraft.client.event.ClientEventHandler.java", "BodyUseAPI": ["Easter.MICHAEL_BAY.createExplosionNoDamage(event.entityPlayer,event.world,int,event.entityPlayer.posX,event.entityPlayer.posY,event.entityPlayer.posZ,int,int,int)", "event.entityPlayer.isSneaking()"], "Fixed commit": "1b789afdd72b57d8ea93204549be2ee3f49466fa", "Url": "https://api.github.com/repos/BubbleTrouble14/ARKCraft", "Date": "2016-09-09T04:16:20Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(qp.main.gui.frame.Frame.FPSUPDATER.isAlive())) { qp.main.gui.frame.Frame.FPSUPDATER.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4514/buggy-version/QuickProject.src.qp.main.gui.frame.Frame.java", "BodyUseAPI": ["java.lang.Thread.start()"], "Fixed commit": "94c726c6df3060ca6c7b45bd3ea45e9332934268", "Url": "https://api.github.com/repos/clannoobz/QuickProject", "Date": "2012-09-05T02:47:58Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buildOrdersFile.exists()) { return customBuildOrders; }else { java.lang.String atlantisDefaultBuildOrders = \"Atlantis_\" + customBuildOrders; return atlantisDefaultBuildOrders; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4184/buggy-version/src.atlantis.production.orders.AtlantisBuildOrders.java", "BodyUseAPI": [], "Fixed commit": "bc83765408d1dfb46a81028a0609ff1b6503990f", "Url": "https://api.github.com/repos/Ravaelles/Atlantis", "Date": "2016-04-08T18:54:17Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mInstrument) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6207/buggy-version/src.org.adaptlab.chpir.android.survey.SurveyFragment.java", "BodyUseAPI": [], "Fixed commit": "b6da13296de151584247d24d1a6d7486b0015af0", "Url": "https://api.github.com/repos/mnipper/AndroidSurvey", "Date": "2014-02-04T21:03:46Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == (at.tugraz.ist.catroid.stage.StageActivity.STAGE_ACTIVITY_FINISH)) { loadProjectAsync = true; at.tugraz.ist.catroid.ProjectManager projectManager = at.tugraz.ist.catroid.ProjectManager.getInstance(); projectManager.loadProjectAsync(projectManager.getCurrentProject().getName(), this, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4864/buggy-version/catroid.src.at.tugraz.ist.catroid.ui.MainMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "62ba7d56bd2fb024c1b8eaa597d9696d951acb4c", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2012-08-23T13:57:42Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(loadProjectAsync)) { ProjectManager.INSTANCE.loadProject(ProjectManager.INSTANCE.getCurrentProject().getName(), this, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4864/buggy-version/catroid.src.at.tugraz.ist.catroid.ui.MainMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "62ba7d56bd2fb024c1b8eaa597d9696d951acb4c", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2012-08-23T13:57:42Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((idList == null) || (idList.isEmpty())) { return java.util.Collections.EMPTY_LIST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6658/buggy-version/src.main.java.com.github.wens.framework.service.impl.SuperServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "be2b46ea07c338bed73f6dccb0b5d1000752af5e", "Url": "https://api.github.com/repos/wenzuojing/mybatis-quick", "Date": "2017-05-12T10:48:15Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (result.getString(\"inventoryMap\").equals(\"{}\")) { store = new project.Store(result.getString(\"id\"), result.getString(\"name\"), result.getString(\"address\")); }else { java.util.HashMap<java.lang.String, java.lang.Integer> map = buildMap(result.getString(\"inventoryMap\")); java.util.List<project.Product> productList = project.DbSupport.buildList(result.getString(\"inventoryList\")); store = new project.Store(result.getString(\"id\"), result.getString(\"name\"), result.getString(\"address\"), productList, map); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8549/buggy-version/src.project.DbSupport.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "project.DbSupport.buildList(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "project.DbSupport.buildMap(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "93a6a89bb7c051e91f206923b2ca82dd6b944cb4", "Url": "https://api.github.com/repos/somenobody0/cs362", "Date": "2016-04-25T20:57:21Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umass.ckc.wo.woreports.ClassTopicLevelsReport.getStudentTopicData(java.util.List<edu.umass.ckc.wo.woreports.ClassTopicLevelsReport.StudentTopicData>,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((td.seen) >= 10) sb.append(((((\"<td bgcolor=\\\"\" + (getColor(td.mastery))) + \"\\\">\") + (getLinkToTopicMasteryTrajectoryReport(td.mastery, label, sd.studId, f.topicId))) + \"</td>\")); else sb.append(((\"<td>\" + (getLinkToTopicMasteryTrajectoryReport(td.mastery, label, sd.studId, f.topicId))) + \"</td>\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2161/buggy-version/woServer.src.edu.umass.ckc.wo.woreports.ClassTopicLevelsReport.java", "BodyUseAPI": ["edu.umass.ckc.wo.woreports.ClassTopicLevelsReport.getLinkToTopicMasteryTrajectoryReport(double,java.lang.String,int,int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "edu.umass.ckc.wo.woreports.ClassTopicLevelsReport.getLinkToTopicMasteryTrajectoryReport(double,java.lang.String,int,int)", "edu.umass.ckc.wo.woreports.ClassTopicLevelsReport.getColor(double)"], "Fixed commit": "d9e6ed835c7a48affaba93e299028874e5f388c2", "Url": "https://api.github.com/repos/marshall62/mathspring", "Date": "2016-01-06T13:17:53Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (app == null) { throw new java.lang.IllegalArgumentException(\"app cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4738/buggy-version/lib.src.main.java.io.demor.nuts.lib.logger.LoggerFactory.java", "BodyUseAPI": [], "Fixed commit": "f35f41c32bac2c7ebfe38b12186c21b7c62be632", "Url": "https://api.github.com/repos/hellokent/Nuts", "Date": "2016-02-01T04:18:26Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stream == null) { throw new java.lang.IllegalArgumentException(\"stream cannot be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4738/buggy-version/lib.src.main.java.io.demor.nuts.lib.logger.LoggerFactory.java", "BodyUseAPI": [], "Fixed commit": "f35f41c32bac2c7ebfe38b12186c21b7c62be632", "Url": "https://api.github.com/repos/hellokent/Nuts", "Date": "2016-02-01T04:18:26Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mRecentsListView)) { mRecentsListView.setOnChildClickListener(null); mRecentsListView.setOnItemLongClickListener(null); mRecentsListView.setOnScrollListener(null); mRecentsListView.mDragAndDropEventsListener = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/430/buggy-version/vector.src.main.java.im.vector.fragments.VectorRecentsListFragment.java", "BodyUseAPI": [], "Fixed commit": "31a1491deaf20409ccbeede1804937c74c5adb05", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-12-19T07:48:46Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.antcontrib.design.Design.retreivePack(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p == null) throw new org.apache.tools.ant.BuildException(net.sf.antcontrib.design.Design.getNoDefinitionError(className), location);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7392/buggy-version/trunk.ant-contrib.src.java.net.sf.antcontrib.design.Design.java", "BodyUseAPI": [], "Fixed commit": "055b4e3979aba67ef521cd8dbebad92922870254", "Url": "https://api.github.com/repos/crazy-max/ant-contrib", "Date": "2006-10-16T16:50:25Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { if ((formulaStack.size()) == 2) { formulaStack.removeFirst(); } formulaStack.addFirst(pc); (nVPs)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8/buggy-version/src.net.ssehub.kernel_haven.metric_haven.VariationPointerCounter.java", "BodyUseAPI": [], "Fixed commit": "d32245278cfc33c11edcc04974ff8663e432d8d3", "Url": "https://api.github.com/repos/KernelHaven/MetricHaven", "Date": "2017-12-07T08:22:50Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.exit13.model.AccessPoint.getApTimeStamp()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((apTimeStamp.getSecond()) == 0) { apTimeStampString = apTimeStampString + \":00\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1240/buggy-version/src.main.java.de.exit13.elastic.ElasticImporterV2.java", "BodyUseAPI": [], "Fixed commit": "634fb339a04ffa3c06f4c302c030a6c327068216", "Url": "https://api.github.com/repos/elshotodore/retarded-submarine-from-space", "Date": "2017-09-04T11:04:20Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (query.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6195/buggy-version/src.de.suse.lib.sqlmap.SQLMapper.java", "BodyUseAPI": [], "Fixed commit": "415ed2e853d75c7803faf89c393eac9b0d31be6c", "Url": "https://api.github.com/repos/SUSE/tiny-sqlmap", "Date": "2013-10-31T18:58:08Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameterValues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(positionData[j].isEmpty())) { positions.add(new ru.javawebinar.basejava.web.Organization.Position(java.time.LocalDate.parse(positionData[j]), (!(positionData[(j + 1)].isEmpty()) ? java.time.LocalDate.parse(positionData[(j + 1)]) : NOW), positionData[(j + 2)], positionData[(j + 3)])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8753/buggy-version/src.ru.javawebinar.basejava.web.ResumeServlet.java", "BodyUseAPI": ["java.util.List<Organization.Position>.add(ru.javawebinar.basejava.web.Organization.Position)", "java.lang.String.isEmpty()", "java.time.LocalDate.parse(java.lang.String)", "java.time.LocalDate.parse(java.lang.String)"], "Fixed commit": "f7c8b3e78598aa420467196bde5dc01c43e5c386", "Url": "https://api.github.com/repos/akuzovlev/basejava", "Date": "2017-12-24T23:24:50Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(config.hasNoAdditionalReferences())) { if (((entry.getIsoforms()) == null) || (entry.getIsoforms().isEmpty())) { entry.setIsoforms(this.isoformService.findIsoformsByEntryName(entry.getUniqueName())); } if (((entry.getPublications()) == null) || (entry.getPublications().isEmpty())) { entry.setPublications(this.publicationService.findPublicationsByMasterUniqueName(entry.getUniqueName())); } if (((entry.getXrefs()) == null) || (entry.getXrefs().isEmpty())) { entry.setXrefs(this.xrefService.findDbXrefsByMaster(entry.getUniqueName())); } if (((entry.getExperimentalContexts()) == null) || (entry.getExperimentalContexts().isEmpty())) { entry.setExperimentalContexts(this.experimentalContextService.findExperimentalContextsByEntryName(entry.getUniqueName())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5457/buggy-version/core.src.main.java.org.nextprot.api.core.service.impl.EntryBuilderServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "6c34a9710ebb12aa6cadcf10ba45594b6d9ce01a", "Url": "https://api.github.com/repos/calipho-sib/nextprot-api", "Date": "2015-08-04T15:53:02Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.checkerframework.checker.lock.LockVisitor.getAnnotatedType(com.sun.source.tree.ExpressionTree)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((atmOfReceiver.getKind()) != (javax.lang.model.type.TypeKind.VOID)) { javax.lang.model.element.AnnotationMirror gb = atmOfReceiver.getEffectiveAnnotationInHierarchy(atypeFactory.GUARDEDBYUNKNOWN); checkLock(tree.getExpression(), gb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8981/buggy-version/checker.src.org.checkerframework.checker.lock.LockVisitor.java", "BodyUseAPI": ["org.checkerframework.framework.type.AnnotatedTypeMirror.getEffectiveAnnotationInHierarchy(atypeFactory.GUARDEDBYUNKNOWN)"], "Fixed commit": "996d256ebc5982d02714d1cebc70665985eb3aaa", "Url": "https://api.github.com/repos/typetools/checker-framework", "Date": "2017-10-03T22:20:50Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (isMilkSku(sku)) { Utils.ConsolePrinting.println(sku, avg, \"is milk\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6382/buggy-version/src.GradDataWarehousing.HW3.HW3PreProcessor.java", "BodyUseAPI": ["Utils.ConsolePrinting.println(java.lang.Integer,java.lang.Integer,java.lang.String)"], "Fixed commit": "e5830f7e76c0fc1fb84be4eb3c63a061a8357b1e", "Url": "https://api.github.com/repos/seedor87/java_stuff", "Date": "2017-09-26T15:47:14Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pathParts1[2].equals(pathParts2[2])) { com.jme3.animation.AnimControl animationControl1 = modelObjects[modelIndex].getModelSpatial().getControl(com.jme3.animation.AnimControl.class); com.jme3.animation.AnimControl animationControl2 = modelObjects[index].getModelSpatial().getControl(com.jme3.animation.AnimControl.class); if ((animationControl1 != null) && (animationControl2 != null)) { com.jme3.animation.AnimChannel animationChannel1 = modelObjects[modelIndex].getModelSpatial().getControl(com.jme3.animation.AnimControl.class).getChannel(0); com.jme3.animation.AnimChannel animationChannel2 = modelObjects[index].getModelSpatial().getControl(com.jme3.animation.AnimControl.class).getChannel(0); amara.libraries.applications.display.JMonkeyUtil.copyAnimation(animationChannel1, animationChannel2); } }else { animationIndex = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2961/buggy-version/Projects.Amara-Tool-Model-Viewer.src.amara.tools.modelviewer.appstates.ModelAppState.java", "BodyUseAPI": [], "Fixed commit": "e5b65bda6b0142db6a3892eae4c056ba11055e99", "Url": "https://api.github.com/repos/destroflyer/amara", "Date": "2016-03-09T00:33:46Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(inWhere.isQuestion())) acceptUncritically(you, inWhere);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4565/buggy-version/src.deadlybanquet.ai.NPCBrain.java", "BodyUseAPI": ["deadlybanquet.ai.NPCBrain.acceptUncritically(java.lang.String,deadlybanquet.ai.Whereabouts)"], "Fixed commit": "37689f879c1d6ec6e2643c4e1423dff0b5e100b2", "Url": "https://api.github.com/repos/Mathcar/DeadlyBanquet", "Date": "2016-04-26T12:02:36Z"},
{"Line": "=>646", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((financeCheck.getCurrCorpBalanceSheet().getShortLoan()) != null) { ci.setDebtBalance(financeCheck.getCurrCorpBalanceSheet().getLongLoan().add(financeCheck.getCurrCorpBalanceSheet().getShortLoan())); }else { ci.setDebtBalance(financeCheck.getCurrCorpBalanceSheet().getLongLoan()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6217/buggy-version/src.main.java.com.brxt.service.impl.ReportManagerImpl.java", "BodyUseAPI": ["com.brxt.model.report.FinanceCheck.getCurrCorpBalanceSheet()", "financeCheck.getCurrCorpBalanceSheet().getShortLoan()", "com.brxt.model.CreditInformation.setDebtBalance(financeCheck.getCurrCorpBalanceSheet().getLongLoan().add(financeCheck.getCurrCorpBalanceSheet().getShortLoan()))", "com.brxt.model.report.FinanceCheck.getCurrCorpBalanceSheet()", "com.brxt.model.report.FinanceCheck.getCurrCorpBalanceSheet()", "financeCheck.getCurrCorpBalanceSheet().getLongLoan()", "financeCheck.getCurrCorpBalanceSheet().getLongLoan()", "financeCheck.getCurrCorpBalanceSheet().getLongLoan().add(financeCheck.getCurrCorpBalanceSheet().getShortLoan())", "com.brxt.model.CreditInformation.setDebtBalance(financeCheck.getCurrCorpBalanceSheet().getLongLoan())"], "Fixed commit": "8b466ea54a8a5343af476c619daf77d075949280", "Url": "https://api.github.com/repos/yegaofei/brxt", "Date": "2014-12-01T08:06:08Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((financeCheck.getCurrCorpBalanceSheet().getShortLoan()) != null) { ci.setDebtBalance(financeCheck.getCurrCorpBalanceSheet().getLongLoan().add(financeCheck.getCurrCorpBalanceSheet().getShortLoan())); }else { ci.setDebtBalance(financeCheck.getCurrCorpBalanceSheet().getLongLoan()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6217/buggy-version/src.main.java.com.brxt.service.impl.ReportManagerImpl.java", "BodyUseAPI": ["financeCheck.getCurrCorpBalanceSheet().getLongLoan()", "financeCheck.getCurrCorpBalanceSheet().getLongLoan()", "com.brxt.model.report.FinanceCheck.getCurrCorpBalanceSheet()", "com.brxt.model.CreditInformation.setDebtBalance(financeCheck.getCurrCorpBalanceSheet().getLongLoan().add(financeCheck.getCurrCorpBalanceSheet().getShortLoan()))", "com.brxt.model.report.FinanceCheck.getCurrCorpBalanceSheet()", "com.brxt.model.report.FinanceCheck.getCurrCorpBalanceSheet()", "financeCheck.getCurrCorpBalanceSheet().getShortLoan()", "financeCheck.getCurrCorpBalanceSheet().getLongLoan().add(financeCheck.getCurrCorpBalanceSheet().getShortLoan())", "com.brxt.model.CreditInformation.setDebtBalance(financeCheck.getCurrCorpBalanceSheet().getLongLoan())"], "Fixed commit": "8b466ea54a8a5343af476c619daf77d075949280", "Url": "https://api.github.com/repos/yegaofei/brxt", "Date": "2014-12-01T08:06:08Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (subscriptions.contains(subscriber)) subscriber.update();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8400/buggy-version/app.src.main.java.samuelpalmer.sensorautorotation.utilities.eventhandling.EventRegistrar.java", "BodyUseAPI": ["samuelpalmer.sensorautorotation.utilities.eventhandling.EventHandler.update()"], "Fixed commit": "9e6062405806b7e5940b4deb675778dfa811f002", "Url": "https://api.github.com/repos/sampalmer/sideways-mode", "Date": "2017-10-27T06:36:01Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ret == 0) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3849/buggy-version/src.main.java.tachyon.client.RemoteBlockInStream.java", "BodyUseAPI": [], "Fixed commit": "0d7076584c95ca1bfc1192021b837ec0d970d325", "Url": "https://api.github.com/repos/amplab/tachyon", "Date": "2013-08-04T19:57:17Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((me.INemesisI.XcraftSignGate.Blocklistener.plugin.gateHandler.getGate(event.getBlock())) != null) event.getPlayer().sendMessage(((me.INemesisI.XcraftSignGate.Blocklistener.plugin.getName()) + \"Das Gate wurde erstellt\")); else { event.getPlayer().sendMessage((((me.INemesisI.XcraftSignGate.Blocklistener.plugin.getName()) + (org.bukkit.ChatColor.RED)) + \"Das Gate konnte nicht erstellt werden!\")); event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4335/buggy-version/src.me.INemesisI.XcraftSignGate.Blocklistener.java", "BodyUseAPI": ["event.getPlayer().sendMessage(((me.INemesisI.XcraftSignGate.Blocklistener.plugin.getName()) + \"Das Gate wurde erstellt\"))", "me.INemesisI.XcraftSignGate.XcraftSignGate.getName()", "org.bukkit.event.block.SignChangeEvent.setCancelled(boolean)", "org.bukkit.event.block.SignChangeEvent.getPlayer()", "event.getPlayer().sendMessage((((me.INemesisI.XcraftSignGate.Blocklistener.plugin.getName()) + (org.bukkit.ChatColor.RED)) + \"Das Gate konnte nicht erstellt werden!\"))", "me.INemesisI.XcraftSignGate.XcraftSignGate.getName()", "org.bukkit.event.block.SignChangeEvent.getPlayer()"], "Fixed commit": "53fdebcd10317c525987b52a9106eb1efde4636d", "Url": "https://api.github.com/repos/XcraftPlugins/XcraftSignGate", "Date": "2011-12-11T14:33:06Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c <= 0) { min = root; org.jheaps.CostlessMeldPairingHeap.Node<K, V> childrenTree = combine(cutChildren(root)); root = null; if (childrenTree != null) { addPool(childrenTree, false); } consolidate(); }else { min = poolMin; org.jheaps.CostlessMeldPairingHeap.Node<K, V> childrenTree = combine(cutChildren(poolMin)); if (childrenTree != null) { decreasePool[decreasePoolMinPos] = childrenTree; childrenTree.poolIndex = decreasePoolMinPos; }else { decreasePool[decreasePoolMinPos] = decreasePool[((decreasePoolSize) - 1)]; decreasePool[decreasePoolMinPos].poolIndex = decreasePoolMinPos; decreasePool[((decreasePoolSize) - 1)] = null; (decreasePoolSize)--; } poolMin.poolIndex = org.jheaps.CostlessMeldPairingHeap.Node.NO_INDEX; consolidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1280/buggy-version/src.main.java.org.jheaps.CostlessMeldPairingHeap.java", "BodyUseAPI": [], "Fixed commit": "4a516ce75f4257260e2c7488e3a0daa3cb96af7e", "Url": "https://api.github.com/repos/d-michail/jheaps", "Date": "2016-11-26T17:38:58Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((params.getString(\"is_private\")) == \"on\") { if (((!(params.containsKey(\"room_pw\"))) || (params.getString(\"room_pw\").isEmpty())) || (params.getString(\"room_pw\").equals(\"\"))) { res.put(\"result_code\", (-1)); res.put(\"result_msg\", \"\ube44\ubc00\ubc88\ud638\ub97c \uc785\ub825\ud574\uc8fc\uc138\uc694.\"); return res; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7003/buggy-version/src.main.java.api.MakeRoomAPI.java", "BodyUseAPI": ["io.vertx.core.json.JsonObject.containsKey(java.lang.String)", "io.vertx.core.json.JsonObject.getString(java.lang.String)", "params.getString(\"room_pw\").isEmpty()", "io.vertx.core.json.JsonObject.getString(java.lang.String)", "params.getString(\"room_pw\").equals(java.lang.String)"], "Fixed commit": "b4a1b5b5cd7bb7132f5d30df526dfb0b9d9df8eb", "Url": "https://api.github.com/repos/kyeongwan/OneCardServer", "Date": "2016-05-30T22:22:51Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flavourChanged) flavourChanged = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3868/buggy-version/src.processingApps.DrawingCanvas.java", "BodyUseAPI": [], "Fixed commit": "f19426e975af1c966234ab2ea4f872160fe450e6", "Url": "https://api.github.com/repos/alejandromm90/RoboticArmGUI", "Date": "2014-06-02T12:26:36Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((java.util.ArrayList) (tempCol)).size()) > index) { tempCol = ((java.util.ArrayList) (tempCol)).get(index); }else { tempCol = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2456/buggy-version/mongodbreader.src.main.java.com.alibaba.datax.plugin.reader.mongodbreader.MongoDBReader.java", "BodyUseAPI": ["java.lang.Object.get(java.lang.Integer)"], "Fixed commit": "06ec3115c2dff832061402316cc203f64b26d722", "Url": "https://api.github.com/repos/calfzhou/DataX", "Date": "2016-08-18T03:08:24Z"},
{"Line": "=>984", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.executionFactory.getVersion().compareTo(MongoDBExecutionFactory.TWO_6)) >= 0) { append(args.get((paramIndex++))); b.add(\"$minDistance\", this.onGoingExpression.pop()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4128/buggy-version/connectors.translator-mongodb.src.main.java.org.teiid.translator.mongodb.MongoDBSelectVisitor.java", "BodyUseAPI": [], "Fixed commit": "15838c2c6349edf1b3b748dee52bf9435cbd1140", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2015-05-15T16:52:20Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pathName == null) { pathName = \"\"; }else { pathName += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6419/buggy-version/front-app.src.main.java.com.td.insta.rest.RootResourceRESTService.java", "BodyUseAPI": [], "Fixed commit": "8842b0c0fff472589690343165e80fde390202cf", "Url": "https://api.github.com/repos/JasonFR/instafake", "Date": "2017-12-14T13:41:49Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pathName == null) { pathName = \"\"; }else { pathName += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6419/buggy-version/front-app.src.main.java.com.td.insta.rest.PublicationResourceRESTService.java", "BodyUseAPI": [], "Fixed commit": "8842b0c0fff472589690343165e80fde390202cf", "Url": "https://api.github.com/repos/JasonFR/instafake", "Date": "2017-12-14T13:41:49Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((seekBar.getProgress()) >= duration) { seekBar.setProgress(0); isPlaying = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7898/buggy-version/app.src.main.java.com.udacitiy.nanodegree.spotifystage1.MediaPlayerFragment.java", "BodyUseAPI": ["android.widget.SeekBar.setProgress(int)"], "Fixed commit": "19ff5c82e1e57f3b6e2a65e7ce57dfd5f5b0e05a", "Url": "https://api.github.com/repos/yash256/SpotifyStage1", "Date": "2015-09-14T04:01:48Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((finishing) && ((inputPage) == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8344/buggy-version/presto-main.src.main.java.com.facebook.presto.operator.RowNumberOperator.java", "BodyUseAPI": [], "Fixed commit": "0d3dcc70cf91f75ad7034414442baf298b2962b0", "Url": "https://api.github.com/repos/treasure-data/presto", "Date": "2014-12-03T09:11:41Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) != null) { editor.putInt(com.fiuba.tdp.petadopt.model.User.USER_ID, id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4371/buggy-version/app.src.main.java.com.fiuba.tdp.petadopt.model.User.java", "BodyUseAPI": [], "Fixed commit": "a85cfe6b82d056703ae7de06d60b573bd5df8cb2", "Url": "https://api.github.com/repos/TheFIUBABoys/pet-frontend", "Date": "2015-10-29T06:55:11Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(validate())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7826/buggy-version/src.com.tresleches.aadp.fragment.DonateFragment.java", "BodyUseAPI": [], "Fixed commit": "38d9b7aeb247e2d79e172282a6b8f3e054852333", "Url": "https://api.github.com/repos/AndroidTresLeches/AADP_AndroidClient", "Date": "2014-10-30T00:14:21Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numBytes > 8) || (numBytes <= 0)) { throw new edu.brown.cs.systems.tracingplane.atom_layer.types.AtomLayerException(((\"Invalid UInt64 with \" + numBytes) + \" bytes\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5352/buggy-version/atom-layer.src.main.java.edu.brown.cs.systems.tracingplane.atom_layer.types.UnsignedLexVarint.java", "BodyUseAPI": [], "Fixed commit": "28552c94f21a0085ed182bbbf5b24e666f6147c9", "Url": "https://api.github.com/repos/tracingplane/tracingplane-java", "Date": "2017-04-03T22:40:39Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numBytes > 8) || (numBytes <= 0)) { throw new edu.brown.cs.systems.tracingplane.atom_layer.types.AtomLayerException(((\"Invalid UInt64 with \" + numBytes) + \" bytes\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5352/buggy-version/atom-layer.src.main.java.edu.brown.cs.systems.tracingplane.atom_layer.types.UnsignedLexVarint.java", "BodyUseAPI": [], "Fixed commit": "28552c94f21a0085ed182bbbf5b24e666f6147c9", "Url": "https://api.github.com/repos/tracingplane/tracingplane-java", "Date": "2017-04-03T22:40:39Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tabsContainer) != null) && ((tabsContainer.getChildAt(position)) != null)) { scrollToChild(position, ((int) (positionOffset * (tabsContainer.getChildAt(position).getWidth())))); invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1303/buggy-version/src.main.java.com.astuetz.pagerslidingtabstrip.PagerSlidingTabStrip.java", "BodyUseAPI": ["com.astuetz.pagerslidingtabstrip.PagerSlidingTabStrip.PageListener.scrollToChild(int,((int) (positionOffset * (tabsContainer.getChildAt(position).getWidth()))))", "android.widget.LinearLayout.getChildAt(int)", "tabsContainer.getChildAt(position).getWidth()"], "Fixed commit": "a40d806a428f0978c17350103fd748bd9aa3b6c3", "Url": "https://api.github.com/repos/trafi/PagerSlidingTabStrip", "Date": "2015-11-16T08:16:31Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((typeMirror.getKind()) == (javax.lang.model.type.TypeKind.ERROR)) { type = new org.versly.rest.wsdoc.JsonPrimitive(\"(unresolvable type)\"); }else { throw new java.lang.UnsupportedOperationException(typeMirror.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4014/buggy-version/src.main.java.org.versly.rest.wsdoc.AnnotationProcessor.java", "BodyUseAPI": ["javax.lang.model.type.TypeMirror.toString()"], "Fixed commit": "015f3a3de431271849a35c7338262c6cfed38b61", "Url": "https://api.github.com/repos/balthorium/wsdoc", "Date": "2015-02-04T16:55:27Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.information) != null) try { b.append((((qualifier.getFullQualifier()) + \":\") + (this.information.toString()))); } catch (java.lang.Exception ex) { b.append(((((qualifier.getFullQualifier()) + \":\") + \"[ERROR] information.toString() threw an Exception: \") + (ex.getMessage()))); } else b.append((((qualifier.getFullQualifier()) + \":\") + \"null\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1540/buggy-version/org.livingplace.controlling.informations.api.src.main.java.org.livingplace.controlling.informations.api.providers.Information.java", "BodyUseAPI": [], "Fixed commit": "a8c960cd3e683034204045b6e100924f16a4fbbd", "Url": "https://api.github.com/repos/kjellski/org.livingplace.controlling", "Date": "2013-03-22T15:47:20Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((st.countTokens()) == 1) { java.lang.String name = st.nextToken(); sys.getEDs().put(name, new simergy.userinterface.EmergencyDept(name)); java.lang.System.out.println(((\"New ED : \" + name) + \" added to SimErgy.\")); }else { java.lang.System.err.println(\"You need to specify your ED's name.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2691/buggy-version/src.simergy.userinterface.CommandLineUserInterface.java", "BodyUseAPI": ["java.util.StringTokenizer.nextToken()"], "Fixed commit": "36759e8a22b32bfd969a380e6b2faedf3828274d", "Url": "https://api.github.com/repos/DonaCrio/simergy", "Date": "2017-11-29T21:29:12Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(zone.getPoints().isEmpty())) { try { MainActivity.pixelGeom.remove(geomCache); com.ecn.urbapp.zones.UtilCharacteristicsZone.addInMainActivityZones(new com.ecn.urbapp.zones.Zone(zone)); exitAction(); } catch (com.vividsolutions.jts.geom.TopologyException e) { com.ecn.urbapp.dialogs.TopologyExceptionDialogFragment diag = new com.ecn.urbapp.dialogs.TopologyExceptionDialogFragment(); diag.show(getFragmentManager(), \"TopologyExceptionDialogFragment\"); } }else { exitAction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/398/buggy-version/Code.src.com.ecn.urbapp.fragments.ZoneFragment.java", "BodyUseAPI": ["com.ecn.urbapp.zones.UtilCharacteristicsZone.addInMainActivityZones(com.ecn.urbapp.zones.Zone)"], "Fixed commit": "0b9504ed4ee753568c8d23cd4ac71d4762f47828", "Url": "https://api.github.com/repos/jparty/FeatureApp", "Date": "2013-12-01T16:34:14Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"install\".equals(action)) { app.setLocation(((org.wso2.carbon.appmgt.mobile.utils.HostResolver.getHost(org.wso2.carbon.appmgt.mobile.utils.MobileConfigurations.getInstance().getAppDownloadHost())) + (artifact.getAttribute(\"overview_url\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6309/buggy-version/components.appmgt.org.wso2.carbon.appmgt.mobile.src.main.java.org.wso2.carbon.appmgt.mobile.mdm.AppDataLoader.java", "BodyUseAPI": [], "Fixed commit": "d701ea0dde5b5a46488c5a31c3adccd420991ced", "Url": "https://api.github.com/repos/ruwanta/carbon-appmgt", "Date": "2015-03-18T08:03:53Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonarlint.intellij.config.project.SonarLintProjectSettings.getProjectKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (projectKey == null) { org.sonarlint.intellij.core.SonarLintProjectNotifications.get(project).notifyModuleInvalid(); throw new java.lang.IllegalStateException(\"Project as an invalid binding\"); }else { console.info(java.lang.String.format(\"Using configuration of '%s' in server '%s'\", projectSettings.getProjectKey(), projectSettings.getServerId())); return createConnectedFacade(project, serverId, projectKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6497/buggy-version/src.main.java.org.sonarlint.intellij.core.SonarLintServerManager.java", "BodyUseAPI": ["org.sonarlint.intellij.core.SonarLintServerManager.createConnectedFacade(com.intellij.openapi.project.Project,java.lang.String,java.lang.String)"], "Fixed commit": "8cab3336237a6e29f8bc36c7ed389883311c471b", "Url": "https://api.github.com/repos/SonarSource/sonarlint-intellij", "Date": "2016-07-22T11:31:38Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((binArray) != null) { builder.append(\", binary length = \"); builder.append(binArray.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6346/buggy-version/core.src.main.java.dk.frv.ais.message.binary.UnknownAsm.java", "BodyUseAPI": [], "Fixed commit": "7ca4567620640de1127594c59f6354709137da7b", "Url": "https://api.github.com/repos/DaMSA/AisLib", "Date": "2012-11-01T12:09:59Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tradeOrders.contains(order)) { tradeOrders.remove(order); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1844/buggy-version/src.main.java.RMIServer.EntityProviders.Impl.TradeOrderProvider.java", "BodyUseAPI": ["java.util.Set<Model.TradeOrder>.remove(Model.TradeOrder)"], "Fixed commit": "16c8bda77841c5904d2e3f7cf27753d8b77378a0", "Url": "https://api.github.com/repos/fexman/SpaceBasedSS15GsiLuetNit", "Date": "2015-05-09T19:00:09Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Number.class.isAssignableFrom(pClass)) && (\"\".equals(value))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4685/buggy-version/rt.frontend.jaxrs.src.main.java.org.apache.cxf.jaxrs.utils.InjectionUtils.java", "BodyUseAPI": [], "Fixed commit": "91b2c201227e6fd150e68f45a29c4995d69f4555", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-03-31T11:59:06Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!((java.lang.Character.TYPE.equals(type)) || (java.lang.Character.class.equals(type)))) && (value != null)) && (value.equals(\"\"))) { value = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4685/buggy-version/core.src.main.java.org.apache.cxf.common.util.PrimitiveUtils.java", "BodyUseAPI": [], "Fixed commit": "91b2c201227e6fd150e68f45a29c4995d69f4555", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-03-31T11:59:06Z"},
{"Line": "=>525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.continuousassurance.swamp.cli.DefaultParser.parse(org.continuousassurance.swamp.cli.Options,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parsed_options.hasOption(\"Q\")) { cred_map.put(\"quiet\", true); }else { cred_map.put(\"quiet\", false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3877/buggy-version/src.main.java.org.continuousassurance.swamp.cli.Cli.java", "BodyUseAPI": [], "Fixed commit": "e6e2fa069671aa60f3871e48be3a96691010e64f", "Url": "https://api.github.com/repos/vamshikr/java-cli", "Date": "2017-11-06T17:54:51Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jacoco.core.analysis.ISourceFileCoverage.getPackageName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((packageName != null) && (!(packageName.equals(\"\")))) { path = (packageName + \"/\") + path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/9236/buggy-version/sonar-groovy-plugin.src.main.java.org.sonar.plugins.groovy.jacoco.AbstractAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "e90068cccf204f74f6bb6281061515cb49710d4e", "Url": "https://api.github.com/repos/JV-ration/sonar-groovy", "Date": "2017-09-29T19:25:01Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (thereWereNoNodes()) { text = \"No nodes found.\"; }else { text = java.lang.String.format(\"Node [%d] does not contain any of the specified titles\", failedNode.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6801/buggy-version/src.koan.java.org.neo4j.tutorial.matchers.ContainsOnlySpecificTitles.java", "BodyUseAPI": [], "Fixed commit": "848389f3e1a86f2f65e2b6e6f4700c7c20d28065", "Url": "https://api.github.com/repos/benbc/neo4j-tutorial", "Date": "2011-08-16T19:12:50Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAnswersRadioGroup.getCheckedRadioButtonId()) != (-1)) { java.lang.String toastMessage = getResultMessage(mCurrentQuestion); displayResult(v.getContext(), toastMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2960/buggy-version/app.src.main.java.com.quiz.javi.quizapp.QuizActivity.java", "BodyUseAPI": [], "Fixed commit": "47db5a807456e46d26d8848d97bebbfdec3c8786", "Url": "https://api.github.com/repos/JaviMera/Quiz-App", "Date": "2016-09-25T06:37:44Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((edu.ualberta.med.biobank.widgets.infotables.InfoTableBgrLoader.ListUpdater.getTableViewer().getControl().isDisposed()) || ((paginationWidget) == null)) || (paginationWidget.isDisposed())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/88/buggy-version/eclipse_ws.biobank2.src.edu.ualberta.med.biobank.widgets.infotables.InfoTableBgrLoader.java", "BodyUseAPI": [], "Fixed commit": "94872340d531a1a7f9fff2d0509680efe6c0af47", "Url": "https://api.github.com/repos/cbsrbiobank/biobank", "Date": "2012-10-23T17:37:24Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.getComponent(src).size()) > 1) this.addEdge(src, src);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1209/buggy-version/graal.graal-util.src.main.java.fr.lirmm.graphik.util.graph.scc.StronglyConnectedComponentsGraph.java", "BodyUseAPI": [], "Fixed commit": "c9750a796a3a92714f29bc2b9bff7e89309be06d", "Url": "https://api.github.com/repos/graphik-team/graal", "Date": "2015-09-02T16:53:16Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (locationNodeRef == null) { se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.validator.ChecksumValidatorWorkerImpl.LOG.error((\"Checksum validation error while reading file \" + location)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4447/buggy-version/platform-mellanarkiv.src.main.java.se.vgregion.alfresco.mellanarkiv.platform.pipeline.ingest.impl.validator.ChecksumValidatorWorkerImpl.java", "BodyUseAPI": [], "Fixed commit": "05fd6cfc7599b16715715ad937c1ac15a233671c", "Url": "https://api.github.com/repos/Vastra-Gotalandsregionen/alfresco-mellanarkiv", "Date": "2017-12-06T16:11:27Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPlayer) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/129/buggy-version/app.src.net.reichholf.dreamdroid.activities.VideoActivity.java", "BodyUseAPI": [], "Fixed commit": "5ba7925c3ce98179b93f8a5fe4cabe26fbeac0d0", "Url": "https://api.github.com/repos/sreichholf/dreamDroid", "Date": "2016-10-21T12:32:31Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pListItem.getItemUniqueID()) == (-1)) { db.execSQL(((((((((((\"INSERT INTO \" + (matt.listmaker.ListDBHelper.TABLE_LIST_ITEMS)) + \"(\") + (matt.listmaker.ListDBHelper.KEY_ITEM_LIST_ID)) + \",\") + (matt.listmaker.ListDBHelper.KEY_TEXT)) + \") VALUES('\") + (pListItem.getItemLinkID())) + \"','\") + (pListItem.getItemText())) + \"')\")); }else { db.execSQL(((((((((((((((\"INSERT INTO \" + (matt.listmaker.ListDBHelper.TABLE_LIST_ITEMS)) + \"(\") + (matt.listmaker.ListDBHelper.KEY_ITEM_ID)) + \",\") + (matt.listmaker.ListDBHelper.KEY_ITEM_LIST_ID)) + \",\") + (matt.listmaker.ListDBHelper.KEY_TEXT)) + \") VALUES (\") + (pListItem.getItemUniqueID())) + \",\") + (pListItem.getItemLinkID())) + \",'\") + (pListItem.getItemText())) + \"')\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5130/buggy-version/app.src.main.java.matt.listmaker.ListDBHelper.java", "BodyUseAPI": ["matt.listmaker.ListItem.getItemText()", "android.database.sqlite.SQLiteDatabase.execSQL(((((((((((\"INSERT INTO \" + (matt.listmaker.ListDBHelper.TABLE_LIST_ITEMS)) + \"(\") + (matt.listmaker.ListDBHelper.KEY_ITEM_LIST_ID)) + \",\") + (matt.listmaker.ListDBHelper.KEY_TEXT)) + \") VALUES('\") + (pListItem.getItemLinkID())) + \"','\") + (pListItem.getItemText())) + \"')\"))", "matt.listmaker.ListItem.getItemLinkID()", "android.database.sqlite.SQLiteDatabase.execSQL(((((((((((((((\"INSERT INTO \" + (matt.listmaker.ListDBHelper.TABLE_LIST_ITEMS)) + \"(\") + (matt.listmaker.ListDBHelper.KEY_ITEM_ID)) + \",\") + (matt.listmaker.ListDBHelper.KEY_ITEM_LIST_ID)) + \",\") + (matt.listmaker.ListDBHelper.KEY_TEXT)) + \") VALUES (\") + (pListItem.getItemUniqueID())) + \",\") + (pListItem.getItemLinkID())) + \",'\") + (pListItem.getItemText())) + \"')\"))", "matt.listmaker.ListItem.getItemUniqueID()", "matt.listmaker.ListItem.getItemText()", "matt.listmaker.ListItem.getItemLinkID()"], "Fixed commit": "990cf865a27259ed2476e1650645eb16c46ade58", "Url": "https://api.github.com/repos/matthewhunter404/ListMaker", "Date": "2017-02-22T04:49:06Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.undertow.util.HeaderMap.getFirst(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((host.indexOf(':')) != (-1)) { host = host.substring(0, host.indexOf(\":\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8930/buggy-version/server.src.main.java.com.networknt.light.server.handler.RestHandler.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "8fd7606d9be9cf83c1b7e62760d8e78955dffa62", "Url": "https://api.github.com/repos/networknt/light", "Date": "2014-12-22T23:58:43Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.shrinkwrap.api.Node.getAsset()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((asset.getClass()) == (org.jboss.shrinkwrap.api.asset.ArchiveAsset.class)) { return org.jboss.shrinkwrap.api.asset.ArchiveAsset.class.cast(asset).getArchive().as(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7831/buggy-version/impl-base.src.main.java.org.jboss.shrinkwrap.impl.base.ArchiveBase.java", "BodyUseAPI": ["java.lang.Class.cast(org.jboss.shrinkwrap.api.asset.Asset)", "org.jboss.shrinkwrap.api.asset.ArchiveAsset.class.cast(asset).getArchive().as(java.lang.Class<X>)", "org.jboss.shrinkwrap.api.asset.ArchiveAsset.getArchive()"], "Fixed commit": "081bbd175a650d1e71b0144a1907666682b0b56f", "Url": "https://api.github.com/repos/shrinkwrap/shrinkwrap", "Date": "2014-03-03T06:52:57Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((com.rockwellcollins.atc.agree.agree.NodeDefExpr) (container)).getNodeBody()) != null) { result.addAll(((com.rockwellcollins.atc.agree.agree.NodeDefExpr) (container)).getNodeBody().getLocs()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8033/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.src.com.rockwellcollins.atc.agree.scoping.AgreeScopeProvider.java", "BodyUseAPI": ["java.util.Set<org.osate.aadl2.Element>.addAll(((com.rockwellcollins.atc.agree.agree.NodeDefExpr) (container)).getNodeBody().getLocs())", "((com.rockwellcollins.atc.agree.agree.NodeDefExpr) (container)).getNodeBody().getLocs()", "org.eclipse.emf.ecore.EObject.getNodeBody()"], "Fixed commit": "aa2d51dfcf74e054cf7bda6916b9728ca4576f59", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2017-05-17T15:33:30Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((outfilePath.lastIndexOf('/')) >= 0) { java.lang.String outDirPath = outfilePath.substring(0, outfilePath.lastIndexOf('/')); java.io.File outDir = new java.io.File(outDirPath); outDir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2140/buggy-version/src.java.com.joliciel.csvLearner.CSVLearner.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(char)"], "Fixed commit": "4f450192e9c4ce13665520bc6d0324d6e9c95f7f", "Url": "https://api.github.com/repos/urieli/csvLearner", "Date": "2012-05-01T16:15:23Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.getStackTraceId()) != null) searchesByStackTraceId.put(result.getStackTraceId(), result);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6636/buggy-version/src.main.java.com.samebug.clients.idea.components.project.SearchResultNotifier.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.samebug.clients.search.api.entities.SearchResults>.put(result.getStackTraceId(),com.samebug.clients.search.api.entities.SearchResults)", "com.samebug.clients.search.api.entities.SearchResults.getStackTraceId()"], "Fixed commit": "ada763ff4335ba071dd5eb92b44ceaf22f2b4daf", "Url": "https://api.github.com/repos/samebug/samebug-idea-plugin", "Date": "2016-09-19T14:36:40Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["rv.getLayoutManager().getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((view.getVisibility()) != (android.view.View.VISIBLE)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5689/buggy-version/Library.src.main.java.com.emtronics.dragsortrecycler.DragSortRecycler.java", "BodyUseAPI": [], "Fixed commit": "8ed03bc3aa90ddc0dc08b267960bbd8ab4286de2", "Url": "https://api.github.com/repos/emileb/DragSortRecycler", "Date": "2015-01-18T20:10:29Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (below != (java.lang.Integer.MAX_VALUE)) { if (below < (selectedDragItemPos)) below++; return below - 1; }else { if (above < (selectedDragItemPos)) above++; return above; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5689/buggy-version/Library.src.main.java.com.emtronics.dragsortrecycler.DragSortRecycler.java", "BodyUseAPI": [], "Fixed commit": "8ed03bc3aa90ddc0dc08b267960bbd8ab4286de2", "Url": "https://api.github.com/repos/emileb/DragSortRecycler", "Date": "2015-01-18T20:10:29Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (previusRecentBoardList != null) if ((previusRecentBoardList.length()) != 0) if (com.thoughtworks.orteroid.utilities.SharedData.isBoardAlreadyInList(boardId, previusRecentBoardList)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8445/buggy-version/src.com.thoughtworks.orteroid.utilities.SharedData.java", "BodyUseAPI": ["com.thoughtworks.orteroid.utilities.SharedData.isBoardAlreadyInList(java.lang.String,java.lang.String)", "java.lang.String.length()"], "Fixed commit": "d809fb5519f41f9000289581afb5a72be169997c", "Url": "https://api.github.com/repos/dhavalsdoshi/orteroid", "Date": "2013-01-09T12:10:48Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextGuess) == 0) { java.lang.System.out.print(guess); }else { java.lang.System.out.print(nextGuess); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1397/buggy-version/H2.0.squareRoot.java", "BodyUseAPI": [], "Fixed commit": "b6bc43899a53f0780fc5c2ff0abcad16508610c5", "Url": "https://api.github.com/repos/dylanMurphyUA/h2.0", "Date": "2017-02-23T19:29:38Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getEntity()) instanceof org.bukkit.entity.LivingEntity) { e.setDamage(EntityDamageEvent.DamageModifier.ARMOR, 0.0); org.bukkit.entity.LivingEntity le = ((org.bukkit.entity.LivingEntity) (e.getEntity())); life.grass.grasscombat.entity.Victim victim = new life.grass.grasscombat.entity.Victim(le); victim.causeDamage(damage, DamageType.BASIC_DAMAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8340/buggy-version/src.main.java.life.grass.grasscombat.listener.BowListener.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()", "org.bukkit.event.entity.EntityDamageByEntityEvent.setDamage(EntityDamageEvent.DamageModifier.ARMOR,double)"], "Fixed commit": "6fca8b33f34c6b2c2330fbc85231ae6b8b188568", "Url": "https://api.github.com/repos/GrassLife/GrassCombat", "Date": "2017-09-10T14:28:04Z"},
{"Line": "=>1575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (duplicateTermCount > 0) { org.apache.lucene.util.FixedBitSet tmpTerms = new org.apache.lucene.util.FixedBitSet(((terms.length()) + duplicateTermCount)); tmpTerms.or(terms); terms = tmpTerms; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/9229/buggy-version/src.main.java.org.apache.solr.handler.component.FacetComponent.java", "BodyUseAPI": [], "Fixed commit": "260d95ce67e00184abde0630cab298daa439c07a", "Url": "https://api.github.com/repos/upenn-libraries/solrplugins", "Date": "2016-11-29T18:52:26Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (accessToken == null) { timber.log.Timber.d(\"invalid auth response or test code\"); accessToken = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4829/buggy-version/app.src.main.java.com.blogspot.spartandeveloper.playlistmessagesforspotify.ui.main.MainPresenter.java", "BodyUseAPI": [], "Fixed commit": "e75a7af2ffb78866837ca070ffa432685b730feb", "Url": "https://api.github.com/repos/clevertrevor/Playlist-Messages-for-Spotify", "Date": "2017-12-19T06:27:13Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.singond.pdfriend.imposition.CommonSettings.getMargins()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (margins == (CommonSettings.AUTO_MARGINS)) { margins = new com.github.singond.pdfriend.geometry.Margins(new com.github.singond.pdfriend.geometry.Length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8152/buggy-version/src.com.github.singond.pdfriend.imposition.Booklet.java", "BodyUseAPI": [], "Fixed commit": "5ecbbbfd1b63356d1fc363e5f1307fbb4a55c2a4", "Url": "https://api.github.com/repos/Singond/PDFriend", "Date": "2017-09-28T13:27:06Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l == null) throw new java.lang.IllegalArgumentException(\"One of the summed lengths is null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8152/buggy-version/src.com.github.singond.pdfriend.geometry.Length.java", "BodyUseAPI": [], "Fixed commit": "5ecbbbfd1b63356d1fc363e5f1307fbb4a55c2a4", "Url": "https://api.github.com/repos/Singond/PDFriend", "Date": "2017-09-28T13:27:06Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.dart.compiler.backend.js.JsIf.getElseStatement()", "com.google.dart.compiler.backend.js.JsIf.getThenStatement()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((elseStatement != null) && (thenStmt instanceof com.google.dart.compiler.backend.js.JsIf)) && ((((com.google.dart.compiler.backend.js.JsIf) (thenStmt)).getElseStatement()) == null)) { thenStmt = new com.google.dart.compiler.backend.js.JsBlock(thenStmt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1619/buggy-version/js.js.dart-ast.src.com.google.dart.compiler.backend.js.JsToStringGenerationVisitor.java", "BodyUseAPI": [], "Fixed commit": "b0aefd5212a0e11932e37e373c5d64bb75a7f4ed", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2014-08-19T15:14:50Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index >= (CrafterContainer.SLOT_CRAFTINPUT)) && (index <= (CrafterContainer.SLOT_CRAFTOUTPUT))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4317/buggy-version/src.main.java.mcjty.rftools.blocks.crafter.CrafterBaseTE.java", "BodyUseAPI": [], "Fixed commit": "9453c9df995f7cc51a84b0615304aa0e2626b687", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2016-08-12T08:00:11Z"},
{"Line": "=>947", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dexPatch) { patchBundleInfo.setName(mainBundleDexPatchName); }else { patchBundleInfo.setName(mainBundleName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8713/buggy-version/atlas-gradle-plugin.dexpatch.src.main.java.com.taobao.android.TPatchTool.java", "BodyUseAPI": [], "Fixed commit": "bac1558446729c6b294fba66183c27d38cda0d51", "Url": "https://api.github.com/repos/alibaba/atlas", "Date": "2017-09-11T02:38:09Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ret == false) { writer.println(\"isEmpty.signalAll();\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2434/buggy-version/JavaProcessor.java", "BodyUseAPI": [], "Fixed commit": "684d965069c2ce59507362fdc4a2726fa2fc0c15", "Url": "https://api.github.com/repos/akkaul1195/monitors", "Date": "2017-04-25T01:45:43Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position == 8) { fragmentManager.beginTransaction().replace(R.id.container, com.offsec.nethunter.IptablesFragment.newInstance(position)).addToBackStack(null).commit(); }else { android.content.Intent target = new android.content.Intent(); target.setClassName(getApplicationContext(), activity); startActivity(target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8679/buggy-version/src.com.offsec.nethunter.AppNavHomeActivity.java", "BodyUseAPI": ["fragmentManager.beginTransaction().replace(R.id.container, com.offsec.nethunter.IptablesFragment.newInstance(position)).addToBackStack(<nulltype>)", "fragmentManager.beginTransaction().replace(R.id.container,com.offsec.nethunter.IptablesFragment.newInstance(position))", "com.offsec.nethunter.IptablesFragment.newInstance(int)", "fragmentManager.beginTransaction().replace(R.id.container, com.offsec.nethunter.IptablesFragment.newInstance(position)).addToBackStack(null).commit()"], "Fixed commit": "9e5bef33f1f1a8ef4a6c78c08d607865dba0f2e3", "Url": "https://api.github.com/repos/binkybear/nethunter-app", "Date": "2015-02-11T17:20:42Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isInterrupted()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/587/buggy-version/BlueMesh.src.blue.mesh.ClientThread.java", "BodyUseAPI": [], "Fixed commit": "6506a38b96013f9fe5063792d0357fb2961331e4", "Url": "https://api.github.com/repos/schnej7/Blue-Mesh", "Date": "2013-02-06T18:27:52Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.playingClients.containsKey(conn)) { int gameID = this.playingClients.get(conn); this.mdsInterpreters.get(gameID).onLostConnection(conn); int activeplayers = ((java.lang.Integer) (this.getGameInfoValue(gameID, \"activeplayers\"))) - 1; this.updateGameInfo(gameID, \"activeplayers\", activeplayers); this.notifyLobby(); this.playingClients.remove(conn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/960/buggy-version/MdsServer.src.de.hsbremen.mds.server.domain.MdsComServer.java", "BodyUseAPI": ["java.util.Map<org.java_websocket.WebSocket, java.lang.Integer>.remove(org.java_websocket.WebSocket)", "this.mdsInterpreters.get(gameID).onLostConnection(org.java_websocket.WebSocket)", "java.util.Map<org.java_websocket.WebSocket, java.lang.Integer>.get(org.java_websocket.WebSocket)"], "Fixed commit": "3dc9d8bf4866fe2cabf36c5746c26e683cecdfda", "Url": "https://api.github.com/repos/MachDeinSpiel/MdsServer", "Date": "2014-05-26T15:20:17Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(visitedFirstNode)) { closest = map.closestNode(); visitedFirstNode = true; }else { closest = new map.Node(((xPos) - (((java.lang.Math.sqrt(3)) * (SCAN_RANGE)) / 2)), ((yPos) + (1.5 * (SCAN_RANGE)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7342/buggy-version/rover.rover.src.main.java.rover.ScoutRover.java", "BodyUseAPI": [], "Fixed commit": "39ee44828d2abb0634907e728401bd5205a6b1b5", "Url": "https://api.github.com/repos/Birdfriender/IA-AgentScape-Rover", "Date": "2016-11-22T15:34:59Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fs.getLocation()) != null) && (fs.getLocation().getWorld().equals(loc.getWorld()))) { if ((java.lang.Math.abs(fs.getLocation().distance(loc))) <= radius) { fs.remove(); removed = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7228/buggy-version/src.com.projectkorra.ProjectKorra.firebending.FireCombo.java", "BodyUseAPI": ["com.projectkorra.ProjectKorra.firebending.FireCombo.FireComboStream.remove()", "java.lang.Math.abs(fs.getLocation().distance(loc))", "org.bukkit.Location.distance(org.bukkit.Location)", "com.projectkorra.ProjectKorra.firebending.FireCombo.FireComboStream.getLocation()"], "Fixed commit": "e452e7090635790ccbcccfe69c36b7fd09e55398", "Url": "https://api.github.com/repos/Alex-The-Coder/ProjectKorra", "Date": "2015-06-21T06:24:38Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { com.facebook.stetho.Stetho.initializeWithDefaults(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/9165/buggy-version/app.src.main.java.com.example.davit_zakaryan.mvvmapp.App.java", "BodyUseAPI": [], "Fixed commit": "1af51f16234834f2f453bca2a0f9b181ba3ee2d2", "Url": "https://api.github.com/repos/zakaryan-davit/android-mvvm-architecture", "Date": "2017-11-24T08:10:13Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ptank.brain.world.simpleworld.mental.mouse.MouseEyes.TileIterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tile.isOccupied()) { for (int i = 0; i < (com.ptank.brain.world.simpleworld.mental.mouse.MouseEyes.knownObjects.length); i++) { java.lang.Class<?> obj = com.ptank.brain.world.simpleworld.mental.mouse.MouseEyes.knownObjects[i]; if (((tile.getUnitOnTile()) != null) && (obj.isAssignableFrom(tile.getUnitOnTile().getClass()))) { set(result, i, tileIndex); break; } } }else if (!(tile.isPassable())) { set(result, com.ptank.brain.world.simpleworld.mental.mouse.MouseEyes.knownObjects.length, tileIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4884/buggy-version/Brain.src.main.java.com.ptank.brain.world.simpleworld.mental.mouse.MouseEyes.java", "BodyUseAPI": ["com.ptank.util.gridworld.Tile.getUnitOnTile()", "com.ptank.util.gridworld.Tile.isPassable()", "tile.getUnitOnTile().getClass()", "java.lang.Class<?>.isAssignableFrom(tile.getUnitOnTile().getClass())", "com.ptank.util.gridworld.Tile.getUnitOnTile()"], "Fixed commit": "292bb3fc566afc219e23f3f73d29bc0fdf6e7723", "Url": "https://api.github.com/repos/westonpace/MotherBrain", "Date": "2012-08-15T03:42:23Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["file.getURL().getProtocol()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (Constants.PROTOCOL_FILE.equals(protocol)) { protocol = org.wso2.carbon.transport.filesystem.connector.server.util.Constants.PROTOCOL_FILE_SYSTEM; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/30/buggy-version/file.org.wso2.carbon.transport.file-system.src.main.java.org.wso2.carbon.transport.filesystem.connector.server.FileSystemProcessor.java", "BodyUseAPI": [], "Fixed commit": "ebd37c06751fe2118531375df373c08d055862d5", "Url": "https://api.github.com/repos/chamil321/carbon-transports", "Date": "2017-07-21T05:10:14Z"},
{"Line": "=>601", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getServer().getPluginManager().getPlugin(\"LogBlock\")) != null) { getServer().dispatchCommand(player, \"lb toolblock on\"); getServer().dispatchCommand(player, \"lb tool on\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2490/buggy-version/src.at.junction.tier2.Tier2.java", "BodyUseAPI": [], "Fixed commit": "221e81ad7b10fbae66f9e72430a75a7cbe7a4339", "Url": "https://api.github.com/repos/JunctionAt/Tier2", "Date": "2014-04-25T02:19:29Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.CustomerDAO.read(form.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (customer != null) { customer.setCash(((customer.getCash()) + (java.lang.Double.parseDouble(form.getCash())))); customerDAO.update(customer); obj.addProperty(\"message\", \"The check was successfully deposited\"); }else { obj.addProperty(\"message\", \"The input you provided is not valid\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5772/buggy-version/src.controller.DepositCheck.java", "BodyUseAPI": ["model.CustomerDAO.update(databeans.Customer)", "databeans.Customer.getCash()", "databeans.Customer.setCash(((customer.getCash()) + (java.lang.Double.parseDouble(form.getCash()))))"], "Fixed commit": "de525a6dfed6951f7e4306a24c4b2fe126ee3262", "Url": "https://api.github.com/repos/dhingrakaran/Web-Service-Task8", "Date": "2017-02-18T20:19:25Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((progressView.getVisibility()) == (android.view.View.VISIBLE)) { backgroundTransitionGroup.startTransition(org.mozilla.focus.fragment.BrowserFragment.ANIMATION_DURATION); progressView.setProgress(progressView.getMax()); progressView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5156/buggy-version/app.src.main.java.org.mozilla.focus.fragment.BrowserFragment.java", "BodyUseAPI": ["org.mozilla.focus.widget.AnimatedProgressBar.setProgress(progressView.getMax())", "org.mozilla.focus.widget.AnimatedProgressBar.getMax()", "org.mozilla.focus.widget.AnimatedProgressBar.setVisibility(View.GONE)"], "Fixed commit": "bc2c056d3c3ba21087420d1f90aa5ef1d9b1f2b8", "Url": "https://api.github.com/repos/layely/focus-android", "Date": "2017-10-21T05:29:14Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newTime) > 0) { timer = new com.alejandrolai.sfpark.Timer.ReminderActivity.CounterClass(newTime, 1000); timer.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4343/buggy-version/app.src.main.java.com.alejandrolai.sfpark.Timer.ReminderActivity.java", "BodyUseAPI": [], "Fixed commit": "6f22108a454047660d7e998416264cdccd0e3876", "Url": "https://api.github.com/repos/alejandrolai/SFPalPark", "Date": "2015-05-12T19:31:30Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (littleBlock.canRenderInPass(BlockLittleChunk.currentPass)) { littleBlocks.addLittleBlockToRender(littleBlock, coords[0], coords[1], coords[2]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7889/buggy-version/LB-source.slimevoid.littleblocks.client.render.blocks.LittleBlocksRenderer.java", "BodyUseAPI": ["slimevoid.littleblocks.client.render.blocks.LittleBlocksLittleRenderer.addLittleBlockToRender(net.minecraft.block.Block,int,int,int)"], "Fixed commit": "26bd12ab6269265dede22e8869305fa271261fb9", "Url": "https://api.github.com/repos/SlimeVoid/LittleBlocks-FML", "Date": "2013-07-18T22:16:23Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.count) == 0) { this.count = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8514/buggy-version/services.dynamo.src.main.java.org.sagebionetworks.dynamo.workers.DynamoRdsSynchronizer.java", "BodyUseAPI": [], "Fixed commit": "eaa2f6746b2e4d2fa585daa617040c477ea1da67", "Url": "https://api.github.com/repos/eric-wu/Synapse-Repository-Services", "Date": "2013-01-18T20:20:02Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["input.get(i).getEndDate().getTime()", "java.util.Date.getTime()", "java.util.Date.getTime()", "input.get(i).getDueDate().getTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inputStartTime < startTime) && (inputEndTime > endTime)) { return input.get(i).getID(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/46/buggy-version/source.src.planner.SearchLogic.java", "BodyUseAPI": [], "Fixed commit": "41168520202b1deeef34e92f1e78ce005b116c6f", "Url": "https://api.github.com/repos/cs2103jan2015-w15-4j/main", "Date": "2015-04-13T14:47:26Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isDead) { playerMap.put(playerSender.ID, new entities.Player(\"sir derp\", playerSender.xPos, playerSender.yPos, new com.badlogic.gdx.graphics.g2d.Sprite(model.getTextureHandler().getTextureByName(\"ful.png\")), playerSender.speed, ((playerSender.ID) / 1000000), ((playerSender.ID) % 1000000))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4735/buggy-version/SpaghettiWars.src.networking.SpaghettiServer.java", "BodyUseAPI": [], "Fixed commit": "ecf29ffa062a9f2f4e7582d2e381059e6894ac29", "Url": "https://api.github.com/repos/Xiaoming94/epicFoodWarGameProject", "Date": "2014-05-19T11:25:12Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((soundQueue) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5648/buggy-version/base.ejs-base.src.ejs.base.sound.JavaSoundListener.java", "BodyUseAPI": [], "Fixed commit": "bbab0de9a10edd131efb967c3efcd07f60fbfd28", "Url": "https://api.github.com/repos/eswartz/emul", "Date": "2017-03-05T15:52:24Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["appeng.block.storage.BlockChest.getTileEntity(net.minecraft.world.World,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (GuiBridge.GUI_CHEST.hasPermissions(tg, x, y, z, net.minecraftforge.common.util.ForgeDirection.values()[side], p)) { tg.openGui(p, ch, cell, side); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3175/buggy-version/src.main.java.appeng.block.storage.BlockChest.java", "BodyUseAPI": ["appeng.tile.storage.TileChest.openGui(net.minecraft.entity.player.EntityPlayer,appeng.api.storage.ICellHandler,net.minecraft.item.ItemStack,int)"], "Fixed commit": "24062d83b431109a5b1af5bb40d49a0550fb679c", "Url": "https://api.github.com/repos/thepaperpilot/Applied-Energistics-2", "Date": "2014-09-25T22:25:31Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((predictions.size()) > 1) { java.util.Collections.reverse(predictions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4045/buggy-version/src.main.java.org.arthur.salesman.evaluation.Evaluation.java", "BodyUseAPI": ["java.util.Collections.reverse(java.util.List<org.arthur.salesman.model.Recommendation>)"], "Fixed commit": "51a1ca81c0fcb84d8c81cd9b3c0ee55c2279ddf6", "Url": "https://api.github.com/repos/arthurgrava/salesman-java", "Date": "2016-04-19T04:33:48Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((main.Combinatoria.getListaPanelesCentral().size()) == 1) main.Combinatoria.anadirCompPanelCentral(new paneles.Panel2());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8242/buggy-version/Combinatoria.src.paneles.Panel1.java", "BodyUseAPI": [], "Fixed commit": "cf42d90532a6d4d4ed219ec06ed39bf8437d33a1", "Url": "https://api.github.com/repos/Lorite/Combinatoria", "Date": "2017-02-22T20:34:04Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((main.Combinatoria.getListaPanelesCentral().size()) == 1) main.Combinatoria.anadirCompPanelCentral(new paneles.Panel3());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8242/buggy-version/Combinatoria.src.paneles.Panel1.java", "BodyUseAPI": [], "Fixed commit": "cf42d90532a6d4d4ed219ec06ed39bf8437d33a1", "Url": "https://api.github.com/repos/Lorite/Combinatoria", "Date": "2017-02-22T20:34:04Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(fields[pubmedPMIDColumn].isEmpty())) && (!(fields[pubmedPMIDColumn].replace(\" \", \"\").replace(\"NA\", \"\").replace(\"NULL\", \"\").replace(\"\\t\", \"\").replace(\".\", \"\").replace(\"-\", \"\").isEmpty()))) { cosmic.setBibliography(java.util.Collections.singletonList((\"PMID:\" + (fields[pubmedPMIDColumn])))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4055/buggy-version/cellbase-app.src.main.java.org.opencb.cellbase.app.transform.clinical.variant.CosmicIndexer.java", "BodyUseAPI": ["org.opencb.biodata.models.variant.avro.Somatic.setBibliography(java.util.List<java.lang.String>)", "java.util.Collections.singletonList(java.lang.String)"], "Fixed commit": "f0252719c46c59fd8047ea14e9015e8038c49020", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2017-02-28T17:46:42Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.tiogasolutions.notify.processor.push.PushDestinationType.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (destinationType.isSmtpEmailMsg()) { pushList = toSmtpEmailPush(domainProfile, notification, task, argMap, from, recipients); }else if (destinationType.isPhoneCall()) { pushList = toPhoneCallPush(); }else { java.lang.String msg = java.lang.String.format(\"The task type \\\"%s\\\" is not supported.\", destinationType); throw new java.lang.UnsupportedOperationException(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1998/buggy-version/tioga-notify-processor-push.src.main.java.org.tiogasolutions.notify.processor.push.PushTaskProcessor.java", "BodyUseAPI": ["org.tiogasolutions.notify.processor.push.PushDestinationType.isPhoneCall()", "java.lang.String.format(java.lang.String,org.tiogasolutions.notify.processor.push.PushDestinationType)"], "Fixed commit": "aef66019fc310ec5c827ea7c0d0164d7e233f718", "Url": "https://api.github.com/repos/tioga/Notify", "Date": "2015-11-24T01:41:23Z"},
{"Line": "=>884", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.tehkode.permissions.PermissionEntity.getMatchingExpression(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { result = ru.tehkode.permissions.PermissionUser.PERMISSION_NOT_FOUND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3911/buggy-version/src.main.java.ru.tehkode.permissions.PermissionUser.java", "BodyUseAPI": [], "Fixed commit": "35588019d4aa7ccdbcfc31aa7471e9187ed85f14", "Url": "https://api.github.com/repos/PEXPlugins/PermissionsEx", "Date": "2013-02-01T10:13:38Z"},
{"Line": "=>893", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ru.tehkode.permissions.PermissionUser.PERMISSION_NOT_FOUND.equals(result)) { result = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3911/buggy-version/src.main.java.ru.tehkode.permissions.PermissionUser.java", "BodyUseAPI": [], "Fixed commit": "35588019d4aa7ccdbcfc31aa7471e9187ed85f14", "Url": "https://api.github.com/repos/PEXPlugins/PermissionsEx", "Date": "2013-02-01T10:13:38Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (newOrientationEstimate != null) { previousOrientationEstimate = newOrientationEstimate.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8327/buggy-version/source.TrainNavigationService.Library.src.com.traintrax.navigation.service.position.DiscretePositionCalculator.java", "BodyUseAPI": ["com.traintrax.navigation.service.ValueUpdate<com.traintrax.navigation.service.rotation.EulerAngleRotation>.getValue()"], "Fixed commit": "41017ed6e7a34d87106d11aa4f45c788057fe0f7", "Url": "https://api.github.com/repos/Rmadyun/CPE656TL", "Date": "2016-04-24T15:43:18Z"},
{"Line": "=>721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dialog.isCancelled())) { net.sf.memoranda.Template template = dialog.getTemplate(); if (template != null) { int[] dateDifference = template.getDateDifference(); int priority = template.getPriority(); long effort = template.getEffort(); float effortInHours = ((((float) (effort)) / 1000) / 60) / 60; java.lang.String description = template.getDescription(); java.lang.String type = template.getType(); if ((dateDifference[0]) < 0) { net.sf.memoranda.util.Util.debug(\"No end date\"); jCheckBoxEndDate.setSelected(false); chkEndDate_actionPerformed(null); }else { jCheckBoxEndDate.setSelected(true); chkEndDate_actionPerformed(null); java.util.Date startDate = ((java.util.Date) (jSpinnerStartDate.getModel().getValue())); java.util.Calendar endDate = new net.sf.memoranda.date.CalendarDate(startDate).getCalendar(); endDate.roll(java.util.Calendar.YEAR, dateDifference[2]); endDate.roll(java.util.Calendar.MONTH, dateDifference[1]); endDate.roll(java.util.Calendar.DAY_OF_MONTH, dateDifference[0]); jSpinnerEndDate.getModel().setValue(new net.sf.memoranda.date.CalendarDate(endDate).getDate()); } if (description != \"\") { descriptionField.setText(template.getDescription()); } if (type != \"\") { jTextFieldType.setText(type); } effortField.setText((effortInHours + \"\")); jComboBoxPriority.setSelectedIndex(priority); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3352/buggy-version/src.net.sf.memoranda.ui.TaskDialog.java", "BodyUseAPI": ["net.sf.memoranda.ui.TemplateSelectDialog.getTemplate()"], "Fixed commit": "8f0adcf025a76fffac2549562c102554951c679c", "Url": "https://api.github.com/repos/cst316/spring16project-Ada", "Date": "2016-03-13T22:54:10Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getProject().getParentProjectId()) != null) { return gov.nih.nci.cbiit.scimgmt.gds.constants.ApplicationConstants.SUBPROJECT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7718/buggy-version/src.gov.nih.nci.cbiit.scimgmt.gds.actions.GeneralInfoSubmissionAction.java", "BodyUseAPI": [], "Fixed commit": "b3e3e11f14b9eefcf5f2c133a91a794d51ee28ac", "Url": "https://api.github.com/repos/yaoh4/sm_gds", "Date": "2016-08-07T03:39:00Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(envTopicsList.isEmpty())) { target.put(MdekKeys.ENV_TOPICS, envTopicsList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4985/buggy-version/ingrid-import-export.src.main.java.de.ingrid.mdek.xml.importer.mapper.AbstractXMLToDocMapper.java", "BodyUseAPI": ["de.ingrid.utils.IngridDocument.put(MdekKeys.ENV_TOPICS,java.util.List<java.lang.Integer>)"], "Fixed commit": "d0207aa4f2af95ed0acebff6840c72501dc6e2c3", "Url": "https://api.github.com/repos/informationgrid/ingrid-mdek", "Date": "2016-12-06T14:39:35Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(openDataList.isEmpty())) { target.put(MdekKeys.OPEN_DATA_CATEGORY_LIST, openDataList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4985/buggy-version/ingrid-import-export.src.main.java.de.ingrid.mdek.xml.importer.mapper.AbstractXMLToDocMapper.java", "BodyUseAPI": ["de.ingrid.utils.IngridDocument.put(MdekKeys.OPEN_DATA_CATEGORY_LIST,java.util.List<de.ingrid.utils.IngridDocument>)"], "Fixed commit": "d0207aa4f2af95ed0acebff6840c72501dc6e2c3", "Url": "https://api.github.com/repos/informationgrid/ingrid-mdek", "Date": "2016-12-06T14:39:35Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(in.hasRemaining())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7850/buggy-version/src.transport.protocols.src.main.java.org.hbird.transport.protocols.kiss.KissSyncerDecoder.java", "BodyUseAPI": [], "Fixed commit": "90d24fdfd7911fa326eeadcc546c1adede878dea", "Url": "https://api.github.com/repos/JohannesKlug/hbird", "Date": "2013-03-14T22:39:12Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(in.hasRemaining())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7850/buggy-version/src.transport.protocols.src.main.java.org.hbird.transport.protocols.kiss.KissSyncerDecoder.java", "BodyUseAPI": [], "Fixed commit": "90d24fdfd7911fa326eeadcc546c1adede878dea", "Url": "https://api.github.com/repos/JohannesKlug/hbird", "Date": "2013-03-14T22:39:12Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.yj.multids.DataSourceHolder.getInstance().getDataSource()) == null) || (\"\".equals(com.yj.multids.DataSourceHolder.getInstance().getDataSource()))) { throw new java.lang.NullPointerException(\"curDataSource can not be empty\"); }else if (((curDataSource) != null) && (curDataSource.equals(com.yj.multids.DataSourceHolder.getInstance().getDataSource()))) { throw new com.yj.multids.NotSupportDistributeTransactionException(); }else { curDataSource = com.yj.multids.DataSourceHolder.getInstance().getDataSource(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4422/buggy-version/multiDS.src.main.java.com.yj.multids.SpringManagedTransactionWithMultiDataSource.java", "BodyUseAPI": [], "Fixed commit": "2af2080684f7c49db81f1ab82d3db4f6811899a9", "Url": "https://api.github.com/repos/vhypnus/base", "Date": "2016-12-21T09:59:38Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"\".equals(mobile)) { }else { cn.jpush.api.utils.Preconditions.checkArgument(cn.jpush.api.utils.StringUtils.isMobileNumber(mobile), (\"The mobile format is incorrect. \" + mobile)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5864/buggy-version/src.main.java.cn.jpush.api.device.DeviceClient.java", "BodyUseAPI": ["cn.jpush.api.utils.StringUtils.isMobileNumber(java.lang.String)", "cn.jpush.api.utils.Preconditions.checkArgument(cn.jpush.api.utils.StringUtils.isMobileNumber(mobile),java.lang.String)"], "Fixed commit": "74fa6f14aad3f125d49e18b4cc10fd8f84ec6493", "Url": "https://api.github.com/repos/jpush/jpush-api-java-client", "Date": "2016-03-16T01:47:17Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (addresstable.containsKey(packet.getSource())) { addresstable.remove(packet.getSource()); if (!(addresstable.get(packet.getSource()).equals((((\"(\" + (network.Router.getStringIP(packet.getSource()))) + \") \") + name)))) { controller.removeRecipientToView(getName(packet.getSource())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8806/buggy-version/Integration-Project.src.network.Router.java", "BodyUseAPI": ["network.JRTVPacket.getSource()", "network.JRTVPacket.getSource()", "network.JRTVPacket.getSource()", "java.lang.String.equals((((\"(\" + (network.Router.getStringIP(packet.getSource()))) + \") \") + name))", "network.Router.getStringIP(packet.getSource())", "java.util.Map<java.lang.Integer, java.lang.String>.remove(packet.getSource())", "java.util.Map<java.lang.Integer, java.lang.String>.get(packet.getSource())", "application.Controller.removeRecipientToView(java.lang.String)", "network.Router.getName(packet.getSource())", "network.JRTVPacket.getSource()"], "Fixed commit": "fd05a57249a682d98aa9afc92313082971a61aa1", "Url": "https://api.github.com/repos/JordyvdZwan/IntegrationProject", "Date": "2016-04-08T09:45:42Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getUntilDate()) != 0) { s.setUntilDate(request.getUntilDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/9156/buggy-version/server.plugins.mmxmgmt.src.main.java.com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.java", "BodyUseAPI": ["com.magnet.mmx.server.plugin.mmxmgmt.push.config.model.MMXPushSuppress.setUntilDate(java.lang.Long)", "com.magnet.mmx.server.plugin.mmxmgmt.servlet.integration.PushConfigSuppressResource.PushConfigSuppressRequest.getUntilDate()"], "Fixed commit": "26b49de669dc8b3d4112eb5a7051637a3fb72515", "Url": "https://api.github.com/repos/magnetsystems/message-server", "Date": "2016-04-25T19:21:48Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((settings.allIvcs) || (MiniJKind.active)) { director.broadcast(new jkind.engines.messages.ValidMessage(vm.source, valid, k, invariants, ivc, itinerary, null)); }else { director.broadcast(new jkind.engines.messages.ValidMessage(vm.source, valid, k, invariants, trimNode(ivc), itinerary, null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6916/buggy-version/jkind.src.jkind.engines.IvcReductionEngine.java", "BodyUseAPI": [], "Fixed commit": "08eba723af4ea8f2445e3346966aff31508a1169", "Url": "https://api.github.com/repos/elaghs/jkind", "Date": "2016-06-28T23:27:46Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moze_intel.projecte.emc.SimpleGraphMapper.logFoundExploits) moze_intel.projecte.utils.PELogger.logWarn(java.lang.String.format(\"EMC Exploit: ingredients (%s) cost %s but output value is %s (setValueFromConversion: %s)\", conversion, conversionValue, resultValueSingle, overwriteConversion.get(conversion.output)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2396/buggy-version/src.main.java.moze_intel.projecte.emc.SimpleGraphMapper.java", "BodyUseAPI": [], "Fixed commit": "8db029c526a61cc673f080a60c66beb18fdeceb0", "Url": "https://api.github.com/repos/sinkillerj/ProjectE", "Date": "2017-02-03T15:15:50Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v instanceof com.orientechnologies.orient.core.db.record.OIdentifiable) id = ((com.orientechnologies.orient.core.db.record.OIdentifiable) (v)); else id = new com.orientechnologies.orient.core.record.impl.ODocument(((java.util.Map) (o)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7833/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.operator.OQueryOperatorContains.java", "BodyUseAPI": [], "Fixed commit": "01d5002eba25af06913f99f6f38ed2a4c8266507", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-02-27T17:50:35Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position < 0) || (position >= (getCount()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8704/buggy-version/app.src.main.java.edu.rutgers.css.Rutgers.channels.bus.model.PredictionAdapter.java", "BodyUseAPI": [], "Fixed commit": "673efbf18edfbe0f21a87f9f50a43fd162d13774", "Url": "https://api.github.com/repos/rutgersmobile/android-client", "Date": "2016-09-22T14:59:09Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.Model<T>.insertReturningGeneratedId(T)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (id != null) { newT = get(t.getColumnName(primaryKey), id.toString()); }else { newT = get(t.getColumnName(primaryKey), t.getFieldValueAsString(t.getField(primaryKey))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1847/buggy-version/Database-Helper.src.model.Model.java", "BodyUseAPI": ["model.Model<T>.get(t.getColumnName(primaryKey),java.lang.String)", "java.lang.Integer.toString()"], "Fixed commit": "c944fa15fae9b6bbca3b52c5d2f8d6b5b727e9b9", "Url": "https://api.github.com/repos/MuriloACQ/Database-Helper-MySQL", "Date": "2014-08-29T06:11:32Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ExplodingEggs.pluginST.getConfig().getList(java.lang.String)", "player.getWorld().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (worldList.contains(cWorld)) { if (toggleMap.ee.containsKey(player)) { toggleMap.ee.remove(player); player.sendMessage(((org.bukkit.ChatColor.AQUA) + \"Egg explosion disabled. use /ee to reenable it\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/902/buggy-version/ExplodingEggsRevived.src.pro.homiecraft.WorldChange.java", "BodyUseAPI": [], "Fixed commit": "676148394a700416c6585e9d662bd4012e1a7e5e", "Url": "https://api.github.com/repos/GudfareN/ExplodingEggsRevived", "Date": "2013-03-13T23:45:00Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((a1.getBlock()) instanceof cyano.poweradvantage.api.ISwitchingConduit) && ((((cyano.poweradvantage.api.ISwitchingConduit) (a1.getBlock())).canConduct(a1)) == false)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4028/buggy-version/src.main.java.cyano.poweradvantage.util.PowerHelper.java", "BodyUseAPI": [], "Fixed commit": "bd28b06b4a5f9d6a021d984d7fb46eed0411eead", "Url": "https://api.github.com/repos/cyanobacterium/PowerAdvantageAPI", "Date": "2016-01-25T00:55:02Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((a2.getBlock()) instanceof cyano.poweradvantage.api.ISwitchingConduit) && ((((cyano.poweradvantage.api.ISwitchingConduit) (a2.getBlock())).canConduct(a2)) == false)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4028/buggy-version/src.main.java.cyano.poweradvantage.util.PowerHelper.java", "BodyUseAPI": [], "Fixed commit": "bd28b06b4a5f9d6a021d984d7fb46eed0411eead", "Url": "https://api.github.com/repos/cyanobacterium/PowerAdvantageAPI", "Date": "2016-01-25T00:55:02Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (plugin.tardisDematerialising.contains(java.lang.Integer.valueOf(id))) { plugin.tardisDematerialising.remove(java.lang.Integer.valueOf(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8730/buggy-version/src.main.java.me.eccentric_nz.TARDIS.builders.TARDISPresetBuilderFactory.java", "BodyUseAPI": ["plugin.tardisDematerialising.remove(java.lang.Integer)", "java.lang.Integer.valueOf(int)"], "Fixed commit": "df7e9e81a17482ccd640794b2dfd88839d054f92", "Url": "https://api.github.com/repos/eccentricdevotion/TARDIS", "Date": "2014-01-01T00:37:31Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (plugin.tardisDematerialising.contains(java.lang.Integer.valueOf(id))) { plugin.tardisDematerialising.remove(java.lang.Integer.valueOf(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8730/buggy-version/src.main.java.me.eccentric_nz.TARDIS.builders.TARDISPresetBuilderFactory.java", "BodyUseAPI": ["java.lang.Integer.valueOf(int)", "plugin.tardisDematerialising.remove(java.lang.Integer)"], "Fixed commit": "df7e9e81a17482ccd640794b2dfd88839d054f92", "Url": "https://api.github.com/repos/eccentricdevotion/TARDIS", "Date": "2014-01-01T00:37:31Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(plugin.getConfig().getBoolean(\"police_box.materialise\"))) { plugin.tardisDematerialising.remove(java.lang.Integer.valueOf(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8730/buggy-version/src.main.java.me.eccentric_nz.TARDIS.destroyers.TARDISDeinstaPreset.java", "BodyUseAPI": ["plugin.tardisDematerialising.remove(java.lang.Integer)"], "Fixed commit": "df7e9e81a17482ccd640794b2dfd88839d054f92", "Url": "https://api.github.com/repos/eccentricdevotion/TARDIS", "Date": "2014-01-01T00:37:31Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lamfire.jmongo.mapping.MappedClass.getMappedFieldByJavaField(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (field != null) { storeFieldName = field.getNameToStore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3997/buggy-version/src.main.java.com.lamfire.jmongo.dao.DAOImpl.java", "BodyUseAPI": ["com.lamfire.jmongo.mapping.MappedField.getNameToStore()"], "Fixed commit": "095fdf4bd3e5d709abacdc257b2f18cf89b158b1", "Url": "https://api.github.com/repos/lamfire/jmongo", "Date": "2016-06-15T09:25:07Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ArmyC2.C2SD.Utilities.MilStdSymbol.getModifiers_AM_AN_X(ModifiersTG.AN_AZIMUTH)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (AN == null) AN = new java.util.ArrayList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7502/buggy-version/core.JavaRendererServer.src.main.java.RenderMultipoints.clsRenderer.java", "BodyUseAPI": [], "Fixed commit": "f3838acdbc692f116588d6b3a3cd52f50d46a1c8", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2016-08-01T21:01:14Z"},
{"Line": "=>791", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (AN.isEmpty()) AN.add(0.0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7502/buggy-version/core.JavaRendererServer.src.main.java.RenderMultipoints.clsRenderer.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Double>.add(double)"], "Fixed commit": "f3838acdbc692f116588d6b3a3cd52f50d46a1c8", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2016-08-01T21:01:14Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.storage.backup.sftp.APIAddSftpBackupStorageMsg.getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dir.startsWith(\"/proc\")) || (dir.startsWith(\"/dev\"))) { throw new org.zstack.header.apimediator.ApiMessageInterceptionException(argerr(\" the url contains an invalid folder[/dev or /proc]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3348/buggy-version/plugin.sftpBackupStorage.src.main.java.org.zstack.storage.backup.sftp.SftpBackupStorageApiInterceptor.java", "BodyUseAPI": [], "Fixed commit": "3c09ef6dacb67bbf82761e3b1aa9b8e471b45c31", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-04-08T13:37:32Z"},
{"Line": "=>1313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActionMode) != null) { mActionMode.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/487/buggy-version/src.it.feio.android.omninotes.ListFragment.java", "BodyUseAPI": [], "Fixed commit": "d65efcebb98302ae7b738d23537ceb043a8320c2", "Url": "https://api.github.com/repos/federicoiosue/Omni-Notes", "Date": "2014-05-15T10:54:15Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTimer) != null) { mTimer.cancel(); mTimer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/9142/buggy-version/src.wei.mark.delete.ShareToDeleteService.java", "BodyUseAPI": [], "Fixed commit": "baaa47d18a1819d9eef62f3cfc3ffc30aed5885e", "Url": "https://api.github.com/repos/pingpongboss/Share-To-Delete", "Date": "2012-05-29T21:09:33Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mailEditText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((mail == null) || ((mail.length()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4889/buggy-version/src.main.java.de.mbentwicklung.android.clickTracker.ClickTrackerActivity.java", "BodyUseAPI": [], "Fixed commit": "4f6ba9c470f2afac251a65678667e9ae483abd34", "Url": "https://api.github.com/repos/MBEntwicklung/ClickTracker", "Date": "2011-10-22T20:07:10Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (config != null) { m_configs.put(time, config); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5606/buggy-version/cat-home.src.main.java.com.dianping.cat.report.service.impl.RouterConfigService.java", "BodyUseAPI": ["java.util.Map<java.lang.Long, com.dianping.cat.home.router.entity.RouterConfig>.put(long,com.dianping.cat.home.router.entity.RouterConfig)"], "Fixed commit": "9020f7cfafd6a13c3078acaa34111d1357105fb7", "Url": "https://api.github.com/repos/dianping/cat", "Date": "2014-09-16T05:50:36Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((__currToken.getType()) == (edu.uci.ccai6.cs241.Token.TokenType.VARIABLE)) { java.lang.String tokenValue = __currToken.getValue(); edu.uci.ccai6.cs241.VarScoper.declare(tokenValue); __funUtil.newVarName(tokenValue); long basePtr = (__IR.getCurrPc()) + 1; __IR.putCode((((\"POP \" + (__funUtil.getFunName())) + (edu.uci.ccai6.cs241.Parser.__SEP)) + tokenValue)); __currToken = __lx.nextToken(); while ((__currToken.getType()) == (edu.uci.ccai6.cs241.Token.TokenType.COMMA)) { __currToken = __lx.nextToken(); if ((__currToken.getType()) == (edu.uci.ccai6.cs241.Token.TokenType.VARIABLE)) { tokenValue = __currToken.getValue(); edu.uci.ccai6.cs241.VarScoper.declare(tokenValue); __funUtil.newVarName(tokenValue); __IR.putCode((((\"POP \" + (__funUtil.getFunName())) + (edu.uci.ccai6.cs241.Parser.__SEP)) + tokenValue), basePtr); __currToken = __lx.nextToken(); }else { reportError(\"Missing a viarable! In function formal parameter part.\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1330/buggy-version/src.edu.uci.ccai6.cs241.Parser.java", "BodyUseAPI": ["edu.uci.ccai6.cs241.Token.getValue()"], "Fixed commit": "799bf7a0de2781cc52f745ccd6939e7e437eb90f", "Url": "https://api.github.com/repos/frankgt40/CS241", "Date": "2016-03-06T08:44:32Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (what instanceof org.bukkit.entity.EnderCrystal) return null; else if (what instanceof org.bukkit.entity.ItemFrame) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1187/buggy-version/src.com.gmail.zariust.otherdrops.event.OccurredEvent.java", "BodyUseAPI": [], "Fixed commit": "4b1a52aa500f78f4c06bcf526dc639bd0d345caa", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2013-01-09T15:00:35Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getRootNodeChildCount()) > 0) { getCategoryTreeModel().insertNodeInto(nodeToAdd, getRootNode(), getRootNodeChildCount()); }else { getRootNode().add(nodeToAdd); getCategoryTreeModel().reload(getRootNode()); setLeafIconToBullet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8891/buggy-version/fhaes.src.main.java.org.fhaes.gui.CategoryEntryPanel.java", "BodyUseAPI": [], "Fixed commit": "72de4471776e5ea129570a1bc60f9d8790652eea", "Url": "https://api.github.com/repos/valorcrow/fhaes", "Date": "2015-07-27T17:37:29Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name) == null) { totalMicros += java.util.concurrent.TimeUnit.NANOSECONDS.toMicros(timer.getTotal()); count += timer.getCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7795/buggy-version/core.src.main.java.org.glowroot.collector.AggregateTimer.java", "BodyUseAPI": [], "Fixed commit": "2e0e5e33cec8d3118b0cb3d05d4c6219ad443e57", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2015-06-20T19:02:40Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((favoriteinput.getText().toString().trim().length()) == 0) || (favoriteinput.getText().toString().isEmpty())) { android.widget.Toast instruction = android.widget.Toast.makeText(getApplicationContext(), \"Please enter in a value\", Toast.LENGTH_SHORT); instruction.setGravity(((android.view.Gravity.CENTER_VERTICAL) | (android.view.Gravity.CENTER_HORIZONTAL)), 0, 0); instruction.show(); return; }else { com.groupc.officelocator.floorplan.savetofavorites = favoriteinput.getText().toString().trim(); addUserFavorite(com.groupc.officelocator.floorplan.modifiedfavorite); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6841/buggy-version/OfficeLocator.app.src.main.java.com.groupc.officelocator.floorplan.java", "BodyUseAPI": ["android.widget.EditText.getText()", "favoriteinput.getText().toString().trim()", "favoriteinput.getText().toString()"], "Fixed commit": "c99cee3d1151d814268681cc346aad968f6a5d4c", "Url": "https://api.github.com/repos/cnorton18/capstone2017", "Date": "2017-08-20T21:54:38Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.codjo.segmentation.common.message.SegmentationJobRequest.getSegmentationIds()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (segmentationIds == null) { splits = new java.lang.String[0]; }else { splits = segmentationIds.replaceAll(\" \", \"\").split(\",\"); stringBuilder.append(splits[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3697/buggy-version/codjo-segmentation-server.src.main.java.net.codjo.segmentation.server.audit.SegmentationStringifier.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "8aa6c29ce56d944234d8c2dd0a1378edeb77ea3f", "Url": "https://api.github.com/repos/codjo-sandbox/codjo-segmentation", "Date": "2013-08-30T09:50:30Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.drugis.addis.entities.analysis.MetaAnalysis, org.drugis.mtc.summary.TransformedMultivariateNormalSummary>.get(org.drugis.addis.entities.analysis.MetaAnalysis)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (summary.getDefined()) { int index = getNonBaselineAlternatives().indexOf(subject); return createDistribution(om, summary.getMeanVector()[index], java.lang.Math.sqrt(summary.getCovarianceMatrix()[index][index])); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3833/buggy-version/application.src.main.java.org.drugis.addis.entities.analysis.MetaBenefitRiskAnalysis.java", "BodyUseAPI": ["org.drugis.addis.entities.analysis.MetaBenefitRiskAnalysis.createDistribution(org.drugis.addis.entities.OutcomeMeasure,summary.getMeanVector()[index],double)", "java.lang.Math.sqrt(summary.getCovarianceMatrix()[index][index])", "org.drugis.mtc.summary.MultivariateNormalSummary.getMeanVector()", "org.drugis.mtc.summary.MultivariateNormalSummary.getCovarianceMatrix()"], "Fixed commit": "2b3f0749735c53ce12b97d84159737ae4a6b5b3f", "Url": "https://api.github.com/repos/gertvv/addis", "Date": "2012-03-28T10:33:58Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (phoneNumber.isEmpty()) { phoneNumber = friendEmail; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7990/buggy-version/Coupling.src.coupling.app.Invite.java", "BodyUseAPI": [], "Fixed commit": "9d538ecaeaef7186827c3ee7a3ff64da995e98c7", "Url": "https://api.github.com/repos/noamtz/SyncMe", "Date": "2014-02-09T11:02:35Z"},
{"Line": "=>1479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ofy().get(com.googlecode.objectify.Key<org.rapidnewsawards.core.Vote>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((v.authority) > 0) { (space.numFundedLinks)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7651/buggy-version/project.src.org.rapidnewsawards.server.DAO.java", "BodyUseAPI": [], "Fixed commit": "f7f6577e51ed19586fc1c289e2eb6b7e96246148", "Url": "https://api.github.com/repos/laheadle/rapidnewsawards", "Date": "2011-07-09T20:13:02Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (left > 0) { java.lang.System.arraycopy(array, ix, result, ix, left); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2669/buggy-version/src.main.java.com.fasterxml.jackson.databind.util.ArrayBuilders.java", "BodyUseAPI": ["java.lang.System.arraycopy(T[],int,T[],int,int)"], "Fixed commit": "3bde5becd2bbd07fe678314da7ebbd93aedb95c6", "Url": "https://api.github.com/repos/spaceapegames/jackson-databind", "Date": "2013-02-01T19:29:04Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getTileEntity(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((tileEntity.getParentTile()) != null) && ((tileEntity.getParentTile().getParentTile()) != null)) { tileEntity.getParentTile().setSwitchState(cam72cam.immersiverailroading.util.SwitchUtil.getSwitchState(tileEntity.getParentTile())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8118/buggy-version/src.main.java.cam72cam.immersiverailroading.blocks.BlockRailBase.java", "BodyUseAPI": ["cam72cam.immersiverailroading.util.SwitchUtil.getSwitchState(tileEntity.getParentTile())", "cam72cam.immersiverailroading.tile.TileRailBase.getParentTile()", "tileEntity.getParentTile().setSwitchState(cam72cam.immersiverailroading.util.SwitchUtil.getSwitchState(tileEntity.getParentTile()))", "cam72cam.immersiverailroading.tile.TileRailBase.getParentTile()"], "Fixed commit": "9a4f6317b590dc53b1f1b25b3bfef72e8d73ead2", "Url": "https://api.github.com/repos/cam72cam/ImmersiveRailroading", "Date": "2017-09-04T19:18:36Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(wakeUp)) { this.wakeUp = true; this.interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3108/buggy-version/src.main.java.com.github.cypher.gui.Executor.java", "BodyUseAPI": [], "Fixed commit": "d3850ec67a2cb1f4348fd5baffa7c078c2d05393", "Url": "https://api.github.com/repos/Gurgy/Cypher", "Date": "2017-05-26T16:21:05Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (health >= 0) { com.github.migi_1.Context.server.ServerWrapper serverWrapper = main.getServer(); com.jme3.network.Server server = serverWrapper.getServer(); if (server != null) { server.broadcast(message); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4873/buggy-version/ContextDesktop.src.main.java.com.github.migi_1.Context.server.HealthMessenger.java", "BodyUseAPI": [], "Fixed commit": "709d6529a1c72631563a34d164006f16287ba8ac", "Url": "https://api.github.com/repos/LMiljak/ContextMigi-1", "Date": "2016-06-15T10:03:50Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teavm.interop.Address.add(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == (org.teavm.backend.wasm.WasmRuntime.initStack())) { result = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6767/buggy-version/core.src.main.java.org.teavm.backend.wasm.WasmRuntime.java", "BodyUseAPI": [], "Fixed commit": "3039e62a69641be1dcd5a3c943c9f244d0626e24", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2016-09-08T20:20:07Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((games.size()) > 0) gameIDIndex = games.size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5650/buggy-version/src.Ozlympic.Driver.java", "BodyUseAPI": [], "Fixed commit": "c2187858546c3b73e067ccb260789b7b87d5ebfb", "Url": "https://api.github.com/repos/rmit-s3528894-yanjie-zhang/assignment2", "Date": "2017-05-16T13:15:51Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (holeRadius >= 0.5F) { mCircleHoleRadius = com.github.mikephil.charting.utils.Utils.convertDpToPixel(holeRadius); }else { android.util.Log.e(\"LineDataSet\", \"Circle radius cannot be < 0.5\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5957/buggy-version/MPChartLib-Realm.src.main.java.com.github.mikephil.charting.data.realm.implementation.RealmLineDataSet.java", "BodyUseAPI": ["com.github.mikephil.charting.utils.Utils.convertDpToPixel(float)"], "Fixed commit": "09f37ef2056fce2dabaa2d2f261db13dcfa1d2f8", "Url": "https://api.github.com/repos/PhilJay/MPAndroidChart-Realm", "Date": "2016-08-12T18:51:36Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (configuration == null) { configuration = new org.intelligentsia.keystone.kernel.init.KernelConfiguration(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1352/buggy-version/modules.keystone-kernel.src.main.java.org.intelligentsia.keystone.kernel.init.KeystoneApplication.java", "BodyUseAPI": [], "Fixed commit": "0c92221e15ec77bcda759de8e40845ed96bbf752", "Url": "https://api.github.com/repos/geronimo-iia/keystone", "Date": "2012-08-03T14:03:37Z"},
{"Line": "=>916", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.sql.parser.OExpression.execute(com.orientechnologies.orient.core.record.impl.ODocument,com.orientechnologies.orient.core.sql.parser.OCommandContext)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((executed instanceof com.orientechnologies.orient.core.record.impl.ODocument) && (!(((com.orientechnologies.orient.core.record.impl.ODocument) (executed)).getIdentity().isValid()))) { doc.field(returnAlias.getStringValue(), executed, OType.EMBEDDED); }else { doc.field(returnAlias.getStringValue(), executed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8198/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.parser.OMatchStatement.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.field(returnAlias.getStringValue(),java.lang.Object)", "com.orientechnologies.orient.core.record.impl.ODocument.field(returnAlias.getStringValue(),java.lang.Object,OType.EMBEDDED)"], "Fixed commit": "57f8c7353b0efa0f448152854a3eedba6b42050c", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-08-02T08:24:01Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.ServletConfig.getInitParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (dbHome == null) { dbHome = config.getServletContext().getRealPath(\"/\"); }else { dbHome = config.getServletContext().getRealPath(dbHome); if (dbHome == null) { java.lang.String dir = config.getServletContext().getRealPath(\"/\"); if (dir != null) { dbHome = new java.io.File(dir, \"WEB-INF\").getAbsolutePath(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7486/buggy-version/src.org.exist.http.servlets.AbstractExistHttpServlet.java", "BodyUseAPI": ["config.getServletContext().getRealPath(java.lang.String)"], "Fixed commit": "0cb429b371224336603929006777d81721776d43", "Url": "https://api.github.com/repos/shabanovd/exist", "Date": "2014-06-27T08:17:48Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showOptionDialog(<nulltype>,java.lang.String,java.lang.String,int,int,<nulltype>,java.lang.Object[],java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ret == 2) { saveFile(); gameRunningDialog = false; if (gA.getTitle().endsWith(\"*\")) return true; return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4179/buggy-version/mastermind_gui.gui.java", "BodyUseAPI": [], "Fixed commit": "b102cb4f8e0f79239ba7c2adb7b865cf31ac4bed", "Url": "https://api.github.com/repos/h8h/MasterMind", "Date": "2013-01-25T12:06:35Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < ((map.length) - 1)) { if (((map[i][j]) != null) && ((map[(i + 1)][j]) == null)) { fallingBlocks.add(new drtetris.MovingBlock(new drtetris.Tile[][]{ new drtetris.Tile[]{ map[i][j] } }, TileMap.ROTATENONE, j, (i * (Config.BLOCKSIZE)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/889/buggy-version/src.drtetris.Field.java", "BodyUseAPI": ["java.util.List<drtetris.MovingBlock>.add(drtetris.MovingBlock)"], "Fixed commit": "cd9fa25c4b491bbec5fb40c9030c4fcb8a4639aa", "Url": "https://api.github.com/repos/RHSBPASoftwareDevelopment2014/DrTetris", "Date": "2015-02-02T16:27:26Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getOldCurrent()) == (event.getNewCurrent())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1923/buggy-version/src.com.niccholaspage.nICs.nICsBlockListener.java", "BodyUseAPI": [], "Fixed commit": "117ce84620f9b19a8a5ecfbbe557cdb9efdff947", "Url": "https://api.github.com/repos/niccholaspage/nICs", "Date": "2011-04-13T21:31:10Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (this.batteryDbOpenHelper)) { this.batteryDbOpenHelper.close(); this.batteryStatisticsDatabase = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5848/buggy-version/app.src.com.halcyonwaves.apps.energize.services.MonitorBatteryStateService.java", "BodyUseAPI": [], "Fixed commit": "2a2cefc638a17362b39f5fbe72541db23bde3a7b", "Url": "https://api.github.com/repos/thuetz/Energize", "Date": "2012-11-01T18:56:48Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nameNormalized) == null) { if (!(org.lealone.storage.fs.FileUtils.isAbsolute(name))) { if (((((name.indexOf(\"./\")) < 0) && ((name.indexOf(\".\\\\\")) < 0)) && ((name.indexOf(\":/\")) < 0)) && ((name.indexOf(\":\\\\\")) < 0)) { throw org.lealone.common.message.DbException.get(ErrorCode.URL_RELATIVE_TO_CWD, url); } } java.lang.String suffix = Constants.SUFFIX_MV_FILE; java.lang.String n = org.lealone.storage.fs.FileUtils.toRealPath((name + suffix)); java.lang.String fileName = org.lealone.storage.fs.FileUtils.getName(n); if ((fileName.length()) < ((suffix.length()) + 1)) { throw org.lealone.common.message.DbException.get(ErrorCode.INVALID_DATABASE_NAME_1, name); } nameNormalized = n.substring(0, ((n.length()) - (suffix.length()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4206/buggy-version/lealone-common.src.main.java.org.lealone.db.ConnectionInfo.java", "BodyUseAPI": [], "Fixed commit": "75556de99bd92776197473837238e6e6d124f22c", "Url": "https://api.github.com/repos/newsky/Lealone", "Date": "2015-09-25T13:01:41Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasEmptyLineAfter(ast))) { log(nextToken.getLineNo(), com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck.MSG_SHOULD_BE_SEPARATED, nextToken.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/422/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck.java", "BodyUseAPI": [], "Fixed commit": "3d0ef3140c2c43fee8fda400efa6c530230c60d4", "Url": "https://api.github.com/repos/mkordas/checkstyle", "Date": "2015-05-02T13:27:07Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (folderObj != null) { org.ednovo.gooru.application.client.gin.AppClientFactory.getInjector().getHomeService().getLTIAssessmentUrl(folderObj.getUrl(), folderObj.getGooruOid(), new org.ednovo.gooru.application.client.SimpleAsyncCallback<java.lang.String>() { @java.lang.Override public void onSuccess(java.lang.String result) { LTI_URL = result; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2272/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gshelf.righttabs.MyCollectionsRightClusterView.java", "BodyUseAPI": ["org.ednovo.gooru.application.shared.model.folder.FolderDo.getUrl()", "org.ednovo.gooru.application.shared.model.folder.FolderDo.getGooruOid()", "org.ednovo.gooru.application.client.gin.AppClientFactory.getInjector().getHomeService().getLTIAssessmentUrl(folderObj.getUrl(),folderObj.getGooruOid(),org.ednovo.gooru.application.client.SimpleAsyncCallback<java.lang.String>)"], "Fixed commit": "9f72a803a8b820df7f979debe8459b59e6ea11ab", "Url": "https://api.github.com/repos/chandrasekharv/Gooru-Web", "Date": "2015-10-01T05:58:34Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.foodvotebox.mapper.FvbUserMapper.queryByUserName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (checkUser == null) { if ((user.getUserId()) == (fvbUserMapper.queryByUserName(username).getUserId())) { logger.log(java.util.logging.Level.INFO, user.toString()); model.put(\"user\", user); return \"loginSuccess\"; } logger.log(java.util.logging.Level.INFO, \"You can only visit your profile\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3313/buggy-version/fvb_web.src.main.java.com.foodvotebox.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "f57a3e77c813b0414f048f781fff8b497fe96d66", "Url": "https://api.github.com/repos/QianleHe/fvb_parent", "Date": "2017-06-29T22:15:51Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"\".equals(user.getName())) { return user.getId(); }else { return user.getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6380/buggy-version/app.src.main.java.net.hokiegeek.android.dondeestas.data.Model.java", "BodyUseAPI": ["net.hokiegeek.android.dondeestas.data.Person.getName()", "net.hokiegeek.android.dondeestas.data.Person.getId()"], "Fixed commit": "e0a79a3b03d69d5738d5e46fbe18545cb36756d6", "Url": "https://api.github.com/repos/HokieGeek/DondeEstas", "Date": "2016-12-05T03:33:46Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logDirectory.mkdirs()) { java.util.Date date = new java.util.Date(); java.lang.System.out.println((\"Date : \" + (date.getTime()))); com.narvis.common.generics.NarvisLogger.INSTANCE.addHandler(new java.util.logging.FileHandler((((logDirectoryPath + \"/narvis-log.\") + (date.getTime())) + \".txt\"))); }else { com.narvis.common.generics.NarvisLogger.INSTANCE.warning(\"Can't create logs directory...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1795/buggy-version/src.NARVIS.src.main.java.com.narvis.common.generics.NarvisLogger.java", "BodyUseAPI": [], "Fixed commit": "c13c8995a86ecbbf8cacfd2c8b47b7e3c530fe80", "Url": "https://api.github.com/repos/NotAVeryIntelligentSystem/NARVIS", "Date": "2015-06-04T14:26:45Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.epg.grabber.ProgramGrabberThread.getContent(org.jsoup.nodes.Element)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (actors_ != null) { for (java.lang.String actor : actors_.split(\"\\\\,\")) { actors.add(actor.trim()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/303/buggy-version/src.main.java.com.epg.grabber.ProgramGrabberThread.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "044bbc316698f1ff473164da2b6c173f744ff7a2", "Url": "https://api.github.com/repos/mahytom/web-epg", "Date": "2015-01-06T21:34:59Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (datafiles.getFilePatch(i).GEtParentName().toLowerCase().equals(\".gitignore\")) { error++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7753/buggy-version/Fab.src.View.actionGenerate.java", "BodyUseAPI": [], "Fixed commit": "096de4e1cef574c3bfe11d7ae1bddec2fa1039fd", "Url": "https://api.github.com/repos/fabiomd/PDFmanipulator", "Date": "2016-10-17T12:11:17Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isPortraitMode())) { final int temp = cameraWidth; cameraWidth = cameraHeight; cameraHeight = temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2378/buggy-version/app.src.main.java.de.rrsoftware.suicidalthoughts.smileactivity.camera.CameraView.java", "BodyUseAPI": [], "Fixed commit": "788404aae78652d0db403e576f9c404affc5b0fb", "Url": "https://api.github.com/repos/RocketRider/Suicidal-thoughts", "Date": "2016-03-29T10:14:26Z"},
{"Line": "=>7878", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enabled && ((_rects.length) > 0)) { if (((((_rects[0].x) + (_rects[0].width)) + (_additionalWidth)) - (_rects[((_rects.length) - 1)].x)) < (viewRect.width)) { enabled = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3007/buggy-version/src.com.jidesoft.plaf.basic.BasicJideTabbedPaneUI.java", "BodyUseAPI": [], "Fixed commit": "349636507b3875374c42a5179af9468a07c888ff", "Url": "https://api.github.com/repos/jidesoft/jide-oss", "Date": "2012-07-09T19:15:56Z"},
{"Line": "=>7896", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enabled && ((_rects.length) > 0)) { if (((((_rects[0].x) + (_rects[0].width)) + (_additionalWidth)) - (_rects[((_rects.length) - 1)].x)) < (viewRect.width)) { enabled = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3007/buggy-version/src.com.jidesoft.plaf.basic.BasicJideTabbedPaneUI.java", "BodyUseAPI": [], "Fixed commit": "349636507b3875374c42a5179af9468a07c888ff", "Url": "https://api.github.com/repos/jidesoft/jide-oss", "Date": "2012-07-09T19:15:56Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((groupchat.getUsers()) != null) { for (gilles.firemessage.Models.User usr : groupchat.getUsers()) { if (usr != null) { users.add(usr); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7749/buggy-version/FireMessage.app.src.main.java.gilles.firemessage.Views.GroupMessageActivity.java", "BodyUseAPI": ["gilles.firemessage.Models.GroupChat.getUsers()"], "Fixed commit": "08e4c6bbba39d1b59b37d29859fcb833e8dbd95e", "Url": "https://api.github.com/repos/GillesPl/MobileAppProject", "Date": "2017-05-18T18:12:29Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ch == '{') inConstant = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2746/buggy-version/src.net.dfranek.typoscript.lexer.TSScanner.java", "BodyUseAPI": [], "Fixed commit": "3273ee19147e9b9fa57dfc61ddee37616bda37a7", "Url": "https://api.github.com/repos/dfranek/NetBeans-TypoScript", "Date": "2012-02-28T20:23:41Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (constant) return java.util.regex.Pattern.matches(\"[\\\\w\\\\$_{}]\", input); else return java.util.regex.Pattern.matches(\"[\\\\w\\\\$_]\", input);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2746/buggy-version/src.net.dfranek.typoscript.lexer.TSScanner.java", "BodyUseAPI": [], "Fixed commit": "3273ee19147e9b9fa57dfc61ddee37616bda37a7", "Url": "https://api.github.com/repos/dfranek/NetBeans-TypoScript", "Date": "2012-02-28T20:23:41Z"},
{"Line": "=>684", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != fileOrDirectory) { if (fileOrDirectory.isDirectory()) for (java.io.File child : fileOrDirectory.listFiles()) { boolean status = child.delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3537/buggy-version/MovieBioscope.videoplayer.src.main.java.com.lib.videoplayer.util.VideoData.java", "BodyUseAPI": ["java.io.File.isDirectory()", "java.io.File.listFiles()"], "Fixed commit": "2f122333b7fae21a5d22a10def2eee52cfc3d99c", "Url": "https://api.github.com/repos/IdroidzDevelopers/MovieBioscope", "Date": "2017-03-21T15:57:16Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof com.alliander.osgp.shared.exceptionhandling.OsgpException) { osgpException = ((com.alliander.osgp.shared.exceptionhandling.OsgpException) (e)); }else { osgpException = new com.alliander.osgp.shared.exceptionhandling.TechnicalException(com.alliander.osgp.shared.exceptionhandling.ComponentType.UNKNOWN, \"An unknown error occurred\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3693/buggy-version/osgp-adapter-domain-tariffswitching.src.main.java.com.alliander.osgp.adapter.domain.tariffswitching.application.services.DefaultDeviceResponseService.java", "BodyUseAPI": [], "Fixed commit": "1f6a7086e81d5246baeb6b15143329e0e7ceff27", "Url": "https://api.github.com/repos/OSGP/Platform", "Date": "2016-11-01T15:17:35Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["staticFamily.StaticApp.findClassByDexName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (c == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1525/buggy-version/src.staticFamily.StaticApp.java", "BodyUseAPI": [], "Fixed commit": "80228b6a7b7a01b6e702e8b4516c7a246e1e0b25", "Url": "https://api.github.com/repos/Wenhao-Chen/StaticComponent", "Date": "2015-04-07T15:54:10Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (long_end > (longer.length())) long_end = longer.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6200/buggy-version/src.com.xdrop.fuzzywuzzy.ratios.PartialRatio.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "48d31c074ca0980db6a51e5829819e7653d10690", "Url": "https://api.github.com/repos/xdrop/fuzzywuzzy", "Date": "2016-09-13T09:33:13Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.opt(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.oculusinfo.binning.util.JsonUtilities.JSON_NULL.equals(value)) { if (baseValue instanceof org.json.JSONObject) { result.put(i, com.oculusinfo.binning.util.JsonUtilities.deepClone(((org.json.JSONObject) (baseValue)))); }else if (baseValue instanceof org.json.JSONArray) { result.put(i, com.oculusinfo.binning.util.JsonUtilities.deepClone(((org.json.JSONArray) (baseValue)))); }else { result.put(i, baseValue); } }else if (value instanceof org.json.JSONObject) { if ((null != baseValue) && (baseValue instanceof org.json.JSONObject)) { result.put(i, com.oculusinfo.binning.util.JsonUtilities.overlayInPlace(((org.json.JSONObject) (baseValue)), ((org.json.JSONObject) (value)))); }else { result.put(i, com.oculusinfo.binning.util.JsonUtilities.deepClone(((org.json.JSONObject) (value)))); } }else if (value instanceof org.json.JSONArray) { if ((null != baseValue) && (baseValue instanceof org.json.JSONArray)) { result.put(i, com.oculusinfo.binning.util.JsonUtilities.overlay(((org.json.JSONArray) (baseValue)), ((org.json.JSONArray) (value)))); }else { result.put(i, com.oculusinfo.binning.util.JsonUtilities.deepClone(((org.json.JSONArray) (value)))); } }else { result.put(i, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3806/buggy-version/binning-utilities.src.main.java.com.oculusinfo.binning.util.JsonUtilities.java", "BodyUseAPI": ["org.json.JSONArray.put(int,java.lang.Object)"], "Fixed commit": "e9c073768949a89e0fa52daa31e78cce7015fd08", "Url": "https://api.github.com/repos/unchartedsoftware/aperture-tiles", "Date": "2015-08-21T14:59:29Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (label != null) { jobId = (jobId + '-') + label; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3406/buggy-version/src.main.hivemall.LearnerBaseUDTF.java", "BodyUseAPI": [], "Fixed commit": "59841931f4b26b3ed5574eee09819de93ff7e127", "Url": "https://api.github.com/repos/myui/hivemall", "Date": "2014-09-02T14:00:57Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputString.equals(\"\")) return inputString;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3807/buggy-version/src.main.java.ru.onyx.clipper.utils.StrUtils.java", "BodyUseAPI": [], "Fixed commit": "6ec925f9c3fae3c80e7c4661a6f1df5a24aad744", "Url": "https://api.github.com/repos/MasterSPB/pdf-generator", "Date": "2014-07-14T10:54:57Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((songList.size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4047/buggy-version/src.com.fave100.client.widgets.UserThumbList.java", "BodyUseAPI": [], "Fixed commit": "432db20ede9036cf0d325d76927aa2ee72d833b1", "Url": "https://api.github.com/repos/yissachar/fave100", "Date": "2013-04-05T18:38:52Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mShell.getApi().getSteps(stepArray).execute().body().getSteps()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((steps == null) || ((steps.size()) == 0)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7963/buggy-version/app.src.main.java.org.stepic.droid.view.fragments.VideoStepFragment.java", "BodyUseAPI": [], "Fixed commit": "a3c29a30493b748fe800245473a38ea8ea43d791", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2015-12-24T13:42:10Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(Helper.funArgList.contains(var.toString()))) super.newVars.add(var.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2081/buggy-version/src.CuStat.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(var.toString())", "CuVvc.toString()"], "Fixed commit": "a43328c32a7e7a013d5d52921aca07cf8b0a3dde", "Url": "https://api.github.com/repos/lalalah/Compilers-PS4", "Date": "2013-11-04T07:44:45Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (latest == null) { latest = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/374/buggy-version/dbpa-manage.src.main.java.com.hauldata.dbpa.manage.resources.JobsResource.java", "BodyUseAPI": [], "Fixed commit": "e3a74a6d96e956417c9bdb23faeec82146825b87", "Url": "https://api.github.com/repos/rdesantis/hauldata", "Date": "2016-11-17T02:42:27Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((virtualNetworkFunctionRecord.getId()) == null) vnfrRepository.save(virtualNetworkFunctionRecord);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/9037/buggy-version/vnfm.vnfm-impl.src.main.java.org.openbaton.nfvo.vnfm_reg.tasks.ErrorTask.java", "BodyUseAPI": ["org.openbaton.nfvo.vnfm_reg.tasks.ErrorTask.save(org.openbaton.nfvo.vnfm_reg.tasks.ErrorTask)"], "Fixed commit": "6e59bfbeba39911609e4a16794bf16432d258f45", "Url": "https://api.github.com/repos/openbaton/NFVO", "Date": "2016-09-14T10:28:26Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files != null) { for (java.io.File f : files) { check(verifier, f); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/942/buggy-version/applications.opibuilder.opibuilder-plugins.org.csstudio.opibuilder.validation.src.org.csstudio.opibuilder.validation.Application.java", "BodyUseAPI": [], "Fixed commit": "90b92b53855904d9e46252dba0e2815fc20fd511", "Url": "https://api.github.com/repos/css-iter/cs-studio", "Date": "2015-07-17T08:01:02Z"},
{"Line": "=>1325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (autoSetPref != null) { if (MainActivity.spxConfig.isAutoSetpointWithoutOff()) { if (de.dmarcini.submatix.android4.full.ApplicationDEBUG.DEBUG) { android.util.Log.v(de.dmarcini.submatix.android4.full.gui.SPX42PreferencesFragment.TAG, \"onCreate: isSixMetersAutoSetpoint without OFF...found resource\"); } autoSetPref.setEntries(R.array.highsetpointSixDepthNamesArrayWoOff); autoSetPref.setEntryValues(R.array.highsetpointSixDepthValuesArrayWoOff); if (de.dmarcini.submatix.android4.full.ApplicationDEBUG.DEBUG) { android.util.Log.v(de.dmarcini.submatix.android4.full.gui.SPX42PreferencesFragment.TAG, \"onCreate: isSixMetersAutoSetpoint without OFF...set resource\"); } }else { if (de.dmarcini.submatix.android4.full.ApplicationDEBUG.DEBUG) { android.util.Log.v(de.dmarcini.submatix.android4.full.gui.SPX42PreferencesFragment.TAG, \"onCreate: isSixMetersAutoSetpoint...found resource\"); } autoSetPref.setEntries(R.array.highsetpointSixDepthNamesArray); autoSetPref.setEntryValues(R.array.highsetpointSixDepthValuesArray); if (de.dmarcini.submatix.android4.full.ApplicationDEBUG.DEBUG) { android.util.Log.v(de.dmarcini.submatix.android4.full.gui.SPX42PreferencesFragment.TAG, \"onCreate: isSixMetersAutoSetpoint...set resource\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/858/buggy-version/src.main.java.de.dmarcini.submatix.android4.full.gui.SPX42PreferencesFragment.java", "BodyUseAPI": ["android.preference.ListPreference.setEntries(R.array.highsetpointSixDepthNamesArrayWoOff)", "android.preference.ListPreference.setEntryValues(R.array.highsetpointSixDepthValuesArray)", "android.preference.ListPreference.setEntryValues(R.array.highsetpointSixDepthValuesArrayWoOff)", "android.preference.ListPreference.setEntries(R.array.highsetpointSixDepthNamesArray)"], "Fixed commit": "d37464a002518de6fd760371dd5a853a1e1574af", "Url": "https://api.github.com/repos/dmarc0001/submatixBTAndroid4", "Date": "2015-10-21T17:30:39Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((setter) == null) && ((((com.redhat.ceylon.compiler.typechecker.model.Value) (declaration)).getSetter()) != null)) { synchronized(com.redhat.ceylon.compiler.java.runtime.metamodel.Metamodel.getLock()) { if ((setter) == null) { com.redhat.ceylon.compiler.typechecker.model.Setter setterModel = ((com.redhat.ceylon.compiler.typechecker.model.Value) (declaration)).getSetter(); if (setterModel != null) this.setter = ((com.redhat.ceylon.compiler.java.runtime.metamodel.FreeSetter) (com.redhat.ceylon.compiler.java.runtime.metamodel.Metamodel.getOrCreateMetamodel(setterModel))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/34/buggy-version/runtime.com.redhat.ceylon.compiler.java.runtime.metamodel.FreeValue.java", "BodyUseAPI": ["com.redhat.ceylon.compiler.java.runtime.metamodel.FreeValue.getSetter()"], "Fixed commit": "d98953b32ea13e124a583be57c9a5e67d3924b48", "Url": "https://api.github.com/repos/ceylon/ceylon.language", "Date": "2014-03-31T15:49:17Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(args[0].equalsIgnoreCase(sender.getName()))) { sender.sendMessage(((((((GOLD) + \"You have reset \") + (RED)) + (args[0])) + (GOLD)) + \"'s warnings.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5666/buggy-version/src.me.synapz.warnings.commands.CommandReset.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(((((((GOLD) + \"You have reset \") + (RED)) + (args[0])) + (GOLD)) + \"'s warnings.\"))"], "Fixed commit": "e1df8067ef196f3aa45d99a4105f7caba3937340", "Url": "https://api.github.com/repos/Synapz1/WarningManager", "Date": "2015-08-10T19:07:07Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"\".equals(queryString)) || (queryString == null)) { return allStarredClips; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6032/buggy-version/app.src.main.java.com.catchingnow.tinyclipboardmanager.Storage.java", "BodyUseAPI": [], "Fixed commit": "619a29dcf6bd2349f9fd5ad1ef5709ad4e7f1a84", "Url": "https://api.github.com/repos/heruoxin/Clip-Stack", "Date": "2015-03-01T13:50:22Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<T, java.lang.Integer>.remove(T)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (index == ((heap.size()) - 1)) { heap.remove(((int) (index))); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8610/buggy-version/src.main.com.trendrr.oss.PriorityUpdateQueue.java", "BodyUseAPI": ["java.util.List<T>.remove(java.lang.Integer)"], "Fixed commit": "bbb9ada22d2238ce1196cf46bc5efe8af91ddfd2", "Url": "https://api.github.com/repos/trendrr/java-oss-lib", "Date": "2012-10-12T17:02:46Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSensorFusion) == null) { mSensorFusion = BalanduinoActivity.mSensorFusion; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6527/buggy-version/src.com.tkjelectronics.balanduino.RemoteControlFragment.java", "BodyUseAPI": [], "Fixed commit": "6eb58a8128831f678408691c2abbec6f808755bf", "Url": "https://api.github.com/repos/TKJElectronics/BalanduinoAndroidApp", "Date": "2012-12-24T22:59:04Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["swag49.dao.DataAccessObject<swag49.model.Player, java.lang.Long>.queryByExample(swag49.model.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((queryResult.size()) != 1) { log.warn(\"no or too many players with playerId {} found, sending message aborted\", userId); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3651/buggy-version/swag49.swag49.web.swag49.web.map.src.main.java.swag49.web.service.MessagingService.java", "BodyUseAPI": [], "Fixed commit": "c812624cfa14418e0ddde482f5a2e31b5e23abd0", "Url": "https://api.github.com/repos/pmarschik/swag4911", "Date": "2011-06-11T18:06:29Z"},
{"Line": "=>1202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getConfig().getStrings(YarnConfiguration.YARN_APPLICATION_CLASSPATH,YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (strs != null) { for (java.lang.String c : strs) { classPathEnv.append(java.io.File.pathSeparatorChar); classPathEnv.append(c.trim()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2339/buggy-version/hoya-core.src.main.java.org.apache.hadoop.hoya.yarn.client.HoyaClient.java", "BodyUseAPI": [], "Fixed commit": "58223d0b90018cbda7b4d8b31421eea9487981f7", "Url": "https://api.github.com/repos/hortonworks/hoya", "Date": "2013-11-07T22:39:30Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (solid == (this)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6356/buggy-version/shapes.Shape.java", "BodyUseAPI": [], "Fixed commit": "0159c89b3313e72e46db946572c1864f5176269c", "Url": "https://api.github.com/repos/nate00/shapes", "Date": "2013-03-25T05:41:18Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (projectStageAssignCommentModels != null) mProjectStageAssignCommentModelList = new java.util.ArrayList<com.construction.pm.models.ProjectStageAssignCommentModel>(java.util.Arrays.asList(projectStageAssignCommentModels)); else mProjectStageAssignCommentModelList = new java.util.ArrayList<com.construction.pm.models.ProjectStageAssignCommentModel>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1002/buggy-version/app.src.main.java.com.construction.pm.views.project_stage.ProjectStageAssignCommentListView.java", "BodyUseAPI": ["java.util.Arrays.asList(com.construction.pm.models.ProjectStageAssignCommentModel[])"], "Fixed commit": "986865c5d045f53b1a923495693118cdf842e26f", "Url": "https://api.github.com/repos/firmandata/android-project_management", "Date": "2017-04-04T08:42:22Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (notificationModels != null) mNotificationModelList = new java.util.ArrayList<com.construction.pm.models.NotificationModel>(java.util.Arrays.asList(notificationModels)); else mNotificationModelList = new java.util.ArrayList<com.construction.pm.models.NotificationModel>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1002/buggy-version/app.src.main.java.com.construction.pm.views.notification.NotificationListView.java", "BodyUseAPI": ["java.util.Arrays.asList(com.construction.pm.models.NotificationModel[])"], "Fixed commit": "986865c5d045f53b1a923495693118cdf842e26f", "Url": "https://api.github.com/repos/firmandata/android-project_management", "Date": "2017-04-04T08:42:22Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) != 5) { session.setAttribute(\"state\", 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/9232/buggy-version/aliada.aliada-user-interface.src.main.java.eu.aliada.gui.action.LinkingInfoAction.java", "BodyUseAPI": [], "Fixed commit": "6b4d5e78a93cd91178092e3903aeacffede94203", "Url": "https://api.github.com/repos/ALIADA/aliada-tool", "Date": "2014-09-19T08:33:19Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) != 5) { session.setAttribute(\"state\", 4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/9232/buggy-version/aliada.aliada-user-interface.src.main.java.eu.aliada.gui.action.LdsAction.java", "BodyUseAPI": [], "Fixed commit": "6b4d5e78a93cd91178092e3903aeacffede94203", "Url": "https://api.github.com/repos/ALIADA/aliada-tool", "Date": "2014-09-19T08:33:19Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (next == '+') { next = ' '; }else if ((next == '=') && (nextQueryParam == null)) { nextQueryParam = stringBuilder.substring(queryParamPos); queryParamPos = (stringBuilder.length()) + 1; }else if ((next == '&') && (nextQueryParam == null)) { if ((mapCount++) > (maxParameters)) { throw UndertowMessages.MESSAGES.tooManyQueryParameters(maxParameters); } exchange.addQueryParam(stringBuilder.substring(queryParamPos), \"\"); queryParamPos = (stringBuilder.length()) + 1; }else if (next == '&') { if ((mapCount++) > (maxParameters)) { throw UndertowMessages.MESSAGES.tooManyQueryParameters(maxParameters); } exchange.addQueryParam(nextQueryParam, stringBuilder.substring(queryParamPos)); queryParamPos = (stringBuilder.length()) + 1; nextQueryParam = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8231/buggy-version/core.src.main.java.io.undertow.server.HttpRequestParser.java", "BodyUseAPI": [], "Fixed commit": "02f15891c62a2385cc9615531b8d31374868930d", "Url": "https://api.github.com/repos/pferraro/undertow", "Date": "2013-05-13T01:34:43Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (startIn > 0) { int jobId = new com.evernote.android.job.JobRequest.Builder(com.awesome.scottquach.proximitypush_upcounter.Constants.REMINDER_JOB).setExact(startIn).build().schedule(); return jobId; }else return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2153/buggy-version/app.src.main.java.com.awesome.scottquach.proximitypush_upcounter.jobs.ReminderJob.java", "BodyUseAPI": ["new com.evernote.android.job.JobRequest.Builder(com.awesome.scottquach.proximitypush_upcounter.Constants.REMINDER_JOB).setExact(startIn).build()", "com.evernote.android.job.JobRequest.Builder.setExact(int)", "new com.evernote.android.job.JobRequest.Builder(com.awesome.scottquach.proximitypush_upcounter.Constants.REMINDER_JOB).setExact(startIn).build().schedule()"], "Fixed commit": "be8cd0054a49cd13ee6f1b82db65daccbb4d035a", "Url": "https://api.github.com/repos/scottquach/Proximity-Push-Up-Counter", "Date": "2017-12-07T17:30:41Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["module.main.schema.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(schema.getFields().isEmpty())) { java.lang.String soqlQuery = ((org.talend.components.salesforce.schema.SalesforceSchemaHelper<org.apache.avro.Schema>) (salesforceSourceOrSink)).guessQuery(schema, moduleName); query.setValue(soqlQuery); validationResult.setStatus(ValidationResult.Result.OK); }else { java.lang.String errorMessage = getI18nMessage(\"errorMessage.validateGuessQueryError\"); validationResult.setStatus(ValidationResult.Result.ERROR).setMessage(errorMessage); query.setValue(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/110/buggy-version/components.components-salesforce.components-salesforce-definition.src.main.java.org.talend.components.salesforce.tsalesforceinput.TSalesforceInputProperties.java", "BodyUseAPI": ["org.talend.components.salesforce.common.SalesforceRuntimeSourceOrSink.guessQuery(org.apache.avro.Schema,java.lang.String)"], "Fixed commit": "75ed6388f53b721246de2ab96fd570a9a979fa5a", "Url": "https://api.github.com/repos/Talend/components", "Date": "2017-04-27T09:05:16Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(\"js\")) { buffer.put(this.SEMICOLON); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7891/buggy-version/src.com.alibaba.f2e.ycombo.Combiner.java", "BodyUseAPI": [], "Fixed commit": "c2c7a366d129f3442fe2f8a140d1d1e3022bbd49", "Url": "https://api.github.com/repos/nqdeng/YCombo", "Date": "2012-04-27T10:47:54Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(\"js\")) { len += this.SEMICOLON.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7891/buggy-version/src.com.alibaba.f2e.ycombo.Combiner.java", "BodyUseAPI": [], "Fixed commit": "c2c7a366d129f3442fe2f8a140d1d1e3022bbd49", "Url": "https://api.github.com/repos/nqdeng/YCombo", "Date": "2012-04-27T10:47:54Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message == null) { message = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6511/buggy-version/client.AutoUpdateApk.java", "BodyUseAPI": [], "Fixed commit": "5f18bf0ff9df5bc1d1f12ebf987e90ed227bee8e", "Url": "https://api.github.com/repos/EugeneWechsler/ApkUpdate", "Date": "2014-02-24T03:47:42Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ieee.odm.adapter.ieeecdf.mapper.IeeeCDFBranchDataMapper.createAngleAdjustmentXmlType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((angAdj.getRange()) == null) angAdj.setRange(new org.ieee.odm.schema.LimitXmlType());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6425/buggy-version/ieee.odm_pss.src.org.ieee.odm.adapter.ieeecdf.mapper.IeeeCDFBranchDataMapper.java", "BodyUseAPI": ["org.ieee.odm.schema.AngleAdjustmentXmlType.setRange(org.ieee.odm.schema.LimitXmlType)"], "Fixed commit": "b1510aec19eaca1a5bca6b180973f441fd07b3ee", "Url": "https://api.github.com/repos/InterPSS-Project/ipss-odm", "Date": "2013-11-16T00:12:45Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getPlayer().getWorld()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(world.isChunkLoaded(cx, cz))) { world.loadChunk(cx, cz); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6853/buggy-version/src.org.getspout.spout.SpoutNetServerHandler.java", "BodyUseAPI": ["org.bukkit.World.loadChunk(int,int)"], "Fixed commit": "abb4d19c38609760f87ba37a47a5468c8b5cd5a3", "Url": "https://api.github.com/repos/SpoutDev/Spout", "Date": "2011-08-17T22:22:57Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.util.Set<tau.tac.adx.report.adn.MarketSegment>, java.lang.Double>.get(java.util.Set<tau.tac.adx.report.adn.MarketSegment>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((old_value - chunk) > 0) info_day.put(segment, (old_value - chunk)); else info_day.remove(segment);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6622/buggy-version/adx-agent.src.CompetitionTracker.java", "BodyUseAPI": ["java.util.HashMap<java.util.Set<tau.tac.adx.report.adn.MarketSegment>, java.lang.Double>.put(java.util.Set<tau.tac.adx.report.adn.MarketSegment>,double)"], "Fixed commit": "46dd5acbef60b2820fd1bb5c1ae84c59e90f6025", "Url": "https://api.github.com/repos/behuec/ADXCompetition", "Date": "2016-12-10T22:25:30Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.util.HashMap<java.util.Set<tau.tac.adx.report.adn.MarketSegment>, java.lang.Double>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((competitionDay.get(targetSegment)) != null) totalDemand += competitionDay.get(targetSegment);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6622/buggy-version/adx-agent.src.CompetitionTracker.java", "BodyUseAPI": ["java.util.HashMap<java.util.Set<tau.tac.adx.report.adn.MarketSegment>, java.lang.Double>.get(java.util.Set<tau.tac.adx.report.adn.MarketSegment>)"], "Fixed commit": "46dd5acbef60b2820fd1bb5c1ae84c59e90f6025", "Url": "https://api.github.com/repos/behuec/ADXCompetition", "Date": "2016-12-10T22:25:30Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.api.services.youtube.model.Video.getStatistics()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((stats.getLikeCount()) != null) { tokens.put(\"Likes\", stats.getLikeCount().toString()); }else { tokens.put(\"Likes\", \"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4851/buggy-version/gmsworldlayers.src.main.java.net.gmsworld.server.layers.YoutubeUtils.java", "BodyUseAPI": ["stats.getLikeCount().toString()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,stats.getLikeCount().toString())", "com.google.api.services.youtube.model.VideoStatistics.getLikeCount()"], "Fixed commit": "0dc9244465a47a83db88bbe2366d35776717f4f9", "Url": "https://api.github.com/repos/jstakun/gms-world-server", "Date": "2015-10-16T15:16:23Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.ide.util.PropertiesComponent.getValue(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (valuesString.isEmpty()) { return null; }else { java.lang.String[] dirs = valuesString.split(Configuration.CUSTOM_VALUES_DIR_SEPARATOR); return java.util.Arrays.asList(dirs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4240/buggy-version/src.Configuration.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "13bff9ac61f6c792c5e7e42ad946d28c03be1fc6", "Url": "https://api.github.com/repos/chanthuang/MyIntelliJPlugin", "Date": "2016-12-30T13:41:54Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getSource()) == (animate)) { bal.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4663/buggy-version/src.ControlePaneelZuid.java", "BodyUseAPI": [], "Fixed commit": "47b1ecc02a4efa2e6300fd839ca24e707628bf20", "Url": "https://api.github.com/repos/IOGP3/Oefeningen", "Date": "2013-09-17T20:29:33Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getSource()) == (stop)) { controller.pleaseStop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4663/buggy-version/src.ControlePaneelZuid.java", "BodyUseAPI": [], "Fixed commit": "47b1ecc02a4efa2e6300fd839ca24e707628bf20", "Url": "https://api.github.com/repos/IOGP3/Oefeningen", "Date": "2013-09-17T20:29:33Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof java.lang.String) { return com.alibaba.fastjson.JSON.parseObject(((java.lang.String) (value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/236/buggy-version/src.main.java.com.alibaba.fastjson.JSONObject.java", "BodyUseAPI": [], "Fixed commit": "fd59f99431b030049077baca1e6898bdc3c61149", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-08-25T02:49:20Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getActivity()) != null) && (!(dataDownloadStarted))) { middlewareService.loadComments(getActivity(), complaintDto, 0, 5); dataDownloadStarted = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/521/buggy-version/app.src.main.java.com.next.eswaraj.fragments.CommentsFragment.java", "BodyUseAPI": [], "Fixed commit": "a85256d717f721d5bcb0f3b01144214029837d4f", "Url": "https://api.github.com/repos/eswaraj/eswaraj-android", "Date": "2015-02-26T19:45:31Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(dataDownloadStarted)) && ((complaintDto) != null)) { middlewareService.loadComments(getActivity(), complaintDto, 0, 5); dataDownloadStarted = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/521/buggy-version/app.src.main.java.com.next.eswaraj.fragments.CommentsFragment.java", "BodyUseAPI": [], "Fixed commit": "a85256d717f721d5bcb0f3b01144214029837d4f", "Url": "https://api.github.com/repos/eswaraj/eswaraj-android", "Date": "2015-02-26T19:45:31Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((aIndex) == (aMax)) || ((bIndex) == (bMax))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5389/buggy-version/uk.ac.diamond.scisoft.analysis.dataset.src.uk.ac.diamond.scisoft.analysis.dataset.BroadcastIterator.java", "BodyUseAPI": [], "Fixed commit": "a1a743768f77a99c5d3a3c0cd4dd5f726dd48e81", "Url": "https://api.github.com/repos/DawnScience/scisoft-core", "Date": "2014-07-30T12:55:43Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(value.equals(\"0\"))) { java.text.DecimalFormat decimalFormat = new java.text.DecimalFormat(\"#,###.00\"); return \"$\" + (decimalFormat.format(java.lang.Double.valueOf(value))); }else { return \"$0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4383/buggy-version/src.util.Formatter.java", "BodyUseAPI": ["java.lang.Double.valueOf(java.lang.String)", "java.text.DecimalFormat.format(java.lang.Double)"], "Fixed commit": "57a6e5202df8815eabc42180f7f96d87db7f4306", "Url": "https://api.github.com/repos/rfenters95/CarDealership", "Date": "2017-03-26T20:43:59Z"},
{"Line": "=>623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 18) startForeground(ViPER4Android.NOTIFY_FOREGROUND_ID, new android.app.Notification());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3791/buggy-version/android_4.x.src.com.vipercn.viper4android.service.HeadsetService.java", "BodyUseAPI": [], "Fixed commit": "766bfd6b34baf17d216b98b7d118bbb43bdc0c64", "Url": "https://api.github.com/repos/vipersaudio/viper4android_fx", "Date": "2013-09-04T14:27:21Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 18) stopForeground(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3791/buggy-version/android_4.x.src.com.vipercn.viper4android.service.HeadsetService.java", "BodyUseAPI": [], "Fixed commit": "766bfd6b34baf17d216b98b7d118bbb43bdc0c64", "Url": "https://api.github.com/repos/vipersaudio/viper4android_fx", "Date": "2013-09-04T14:27:21Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.foodstore.serg.utils.CheckMealUtils.create(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.foodstore.serg.service.MealService.add(meal)) { out.write(com.foodstore.serg.controller.AddMealServlet.SUCCESS); }else { out.write(com.foodstore.serg.controller.AddMealServlet.NOT_ADDED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8418/buggy-version/src.com.foodstore.serg.controller.AddMealServlet.java", "BodyUseAPI": [], "Fixed commit": "fa5ce5830761551da4ad134c695f55251d883066", "Url": "https://api.github.com/repos/romankovsv/FoodStore", "Date": "2016-03-09T21:21:04Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userCmd == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1941/buggy-version/src.parser.LanguageProcessor.java", "BodyUseAPI": [], "Fixed commit": "f6b157cfef2939215709a7ea7e6e5d7984769b06", "Url": "https://api.github.com/repos/cs2103aug2015-w14-3j/main", "Date": "2015-10-28T05:45:42Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((al) == 0) a = 0; else a = java.lang.Float.parseFloat(sp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/240/buggy-version/calculator.src.calculator.home.java", "BodyUseAPI": [], "Fixed commit": "d1eb8b609c3be3e4ecdafc16ce2b3bf601ad0211", "Url": "https://api.github.com/repos/thamshid/calculator", "Date": "2014-11-03T02:56:50Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(synchronizedMethodLocks.tryLock())) { com.mcintyret.jvm.core.Heap.threadSleeping(); synchronizedMethodLocks.lock(); com.mcintyret.jvm.core.Heap.threadWaking(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6223/buggy-version/core.src.main.java.com.mcintyret.jvm.core.exec.Execution.java", "BodyUseAPI": [], "Fixed commit": "2aa87f585b376f8d159213441dc2a1c5fe19d591", "Url": "https://api.github.com/repos/mcintyret/jvm", "Date": "2015-12-27T22:21:57Z"},
{"Line": "=>2519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mPrefFixArabic) { mTypeCorrect = org.amr.arabic.ArabicUtilities.reshapeSentence(mTypeCorrect, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8084/buggy-version/src.com.ichi2.anki.Reviewer.java", "BodyUseAPI": [], "Fixed commit": "095cfeafc49cb55c513018586ab7143b2df66f5d", "Url": "https://api.github.com/repos/iniju/Anki-Android", "Date": "2012-07-06T00:29:28Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSuperstep()) > 0) voteToHalt();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4226/buggy-version/v3.1.src.main.java.in.dream_lab.goffish.godb.NetworkDistr.java", "BodyUseAPI": [], "Fixed commit": "20a79b98b83ed546ae46544fc1f2078749281027", "Url": "https://api.github.com/repos/abhilashsharma/Hama-GoDB-Refactored", "Date": "2017-11-13T13:22:52Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (labelChanged) treeModel.nodeChanged(node);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1350/buggy-version/platform.src.main.java.gov.nasa.arc.mct.defaults.view.NodeViewManifestation.java", "BodyUseAPI": [], "Fixed commit": "734577addd6ba8e22eb53fec2c0345dd65015543", "Url": "https://api.github.com/repos/nasa/mct", "Date": "2012-07-19T21:11:31Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_sortSelectBox) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2294/buggy-version/src-gwt.org.opencms.ade.galleries.client.ui.CmsVfsTab.java", "BodyUseAPI": [], "Fixed commit": "41d416214f31621c4d8b6d4bfa5d42b60f5a1781", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2012-12-20T11:26:25Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ninja.aqrln.editor.net.cloud.EditorCloudAPI.publishDocument(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (url == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/501/buggy-version/src.ninja.aqrln.editor.ui.ApplicationUI.java", "BodyUseAPI": [], "Fixed commit": "05d7a745279d73abd4de5673c52afd24a9507bcb", "Url": "https://api.github.com/repos/aqrln/coursework-editor", "Date": "2016-05-19T19:57:27Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((unicode.length()) == 0) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3018/buggy-version/PdfBoxAndroid.src.org.apache.fontbox.ttf.TrueTypeFont.java", "BodyUseAPI": [], "Fixed commit": "ec332d3f5a79831dc60a760f3701465a153e3b5d", "Url": "https://api.github.com/repos/TomRoush/PdfBox-Android", "Date": "2015-02-11T03:27:47Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openqa.selenium.remote.RemoteWebDriver.getCapabilities()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (capabilities != null) { ((org.openqa.selenium.remote.DesiredCapabilities) (enhancedInstance.getCapabilities())).setCapability(org.jboss.arquillian.drone.webdriver.augmentation.AugmentingEnhancer.DRONE_AUGMENTED, java.lang.Boolean.FALSE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/9189/buggy-version/drone-webdriver.src.main.java.org.jboss.arquillian.drone.webdriver.augmentation.AugmentingEnhancer.java", "BodyUseAPI": [], "Fixed commit": "cd5ac1d135dc8323f4b3585c40c954f75dafa0ef", "Url": "https://api.github.com/repos/yurloc/arquillian-extension-drone", "Date": "2013-07-22T12:30:45Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.openqa.selenium.remote.RemoteWebDriver.class) == type) || ((org.jboss.arquillian.drone.webdriver.factory.remote.reusable.ReusableRemoteWebDriver.class) == type)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/9189/buggy-version/drone-webdriver.src.main.java.org.jboss.arquillian.drone.webdriver.augmentation.AugmentingEnhancer.java", "BodyUseAPI": [], "Fixed commit": "cd5ac1d135dc8323f4b3585c40c954f75dafa0ef", "Url": "https://api.github.com/repos/yurloc/arquillian-extension-drone", "Date": "2013-07-22T12:30:45Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.openqa.selenium.remote.RemoteWebDriver.class.isAssignableFrom(type)) && (org.jboss.arquillian.drone.webdriver.spi.DroneAugmented.class.isAssignableFrom(type))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/9189/buggy-version/drone-webdriver.src.main.java.org.jboss.arquillian.drone.webdriver.augmentation.AugmentingEnhancer.java", "BodyUseAPI": [], "Fixed commit": "cd5ac1d135dc8323f4b3585c40c954f75dafa0ef", "Url": "https://api.github.com/repos/yurloc/arquillian-extension-drone", "Date": "2013-07-22T12:30:45Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data != null) { min = java.lang.Math.min(min, ((java.lang.Integer) (data))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4410/buggy-version/src.main.mondrian.rolap.RolapAggregator.java", "BodyUseAPI": [], "Fixed commit": "a0b84ba0e2fa977bd45df5db039bfbee8fecfcfe", "Url": "https://api.github.com/repos/pentaho/mondrian", "Date": "2012-08-17T15:10:35Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data != null) { min = java.lang.Math.max(min, ((java.lang.Long) (data))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4410/buggy-version/src.main.mondrian.rolap.RolapAggregator.java", "BodyUseAPI": [], "Fixed commit": "a0b84ba0e2fa977bd45df5db039bfbee8fecfcfe", "Url": "https://api.github.com/repos/pentaho/mondrian", "Date": "2012-08-17T15:10:35Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data != null) { min = java.lang.Math.min(min, ((java.lang.Double) (data))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4410/buggy-version/src.main.mondrian.rolap.RolapAggregator.java", "BodyUseAPI": [], "Fixed commit": "a0b84ba0e2fa977bd45df5db039bfbee8fecfcfe", "Url": "https://api.github.com/repos/pentaho/mondrian", "Date": "2012-08-17T15:10:35Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data != null) { min = java.lang.Math.min(min, ((java.lang.Long) (data))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4410/buggy-version/src.main.mondrian.rolap.RolapAggregator.java", "BodyUseAPI": [], "Fixed commit": "a0b84ba0e2fa977bd45df5db039bfbee8fecfcfe", "Url": "https://api.github.com/repos/pentaho/mondrian", "Date": "2012-08-17T15:10:35Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data != null) { min = java.lang.Math.max(min, ((java.lang.Double) (data))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4410/buggy-version/src.main.mondrian.rolap.RolapAggregator.java", "BodyUseAPI": [], "Fixed commit": "a0b84ba0e2fa977bd45df5db039bfbee8fecfcfe", "Url": "https://api.github.com/repos/pentaho/mondrian", "Date": "2012-08-17T15:10:35Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data != null) { min = java.lang.Math.max(min, ((java.lang.Integer) (data))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4410/buggy-version/src.main.mondrian.rolap.RolapAggregator.java", "BodyUseAPI": [], "Fixed commit": "a0b84ba0e2fa977bd45df5db039bfbee8fecfcfe", "Url": "https://api.github.com/repos/pentaho/mondrian", "Date": "2012-08-17T15:10:35Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BA.isEnabled()) { try { bluetoothSocket.close(); } catch (java.io.IOException e) { e.printStackTrace(); } if ((bluetoothSocket) != null) { bluetoothSocket = null; } if ((bluetoothInputStream) != null) { bluetoothInputStream = null; } if ((bluetoothOutputStream) != null) { bluetoothOutputStream = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/698/buggy-version/app.src.main.java.com.example.lukas.tabbedapp.tab3_layout.java", "BodyUseAPI": [], "Fixed commit": "5b67affe8b18898e66f53d4f6824d6b856622e77", "Url": "https://api.github.com/repos/Lukas-Heiligenbrunner/RGB-Arduino-BT-App", "Date": "2017-09-14T11:30:03Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.isEmpty()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3246/buggy-version/plugins.de.ovgu.featureide.core.mpl.src.de.ovgu.featureide.core.mpl.io.reader.ExtendedConfigurationReader.java", "BodyUseAPI": [], "Fixed commit": "8f03aa269c211d0f0266111ad37a1b44dfaa0a87", "Url": "https://api.github.com/repos/kruegers/FeatureIDE", "Date": "2014-04-25T15:26:02Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BlockMoreLeaves.BlockType.values()", "extrabiomes.items.ItemCustomMoreLeaves.unmarkedMetadata(itemstack.getItemDamage())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (metadata > (validTypes.length)) metadata = validTypes.length;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/305/buggy-version/src.main.java.extrabiomes.items.ItemCustomMoreLeaves.java", "BodyUseAPI": [], "Fixed commit": "373ebe0dfbe4df70c4ea56769bacbf57d7a2e127", "Url": "https://api.github.com/repos/jdpadrnos/ExtrabiomesXL", "Date": "2015-12-15T16:51:53Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((nextChild.getChildType()) != null) && (ca.uhn.fhir.model.api.ICompositeDatatype.class.isAssignableFrom(nextChild.getChildType()))) { ca.uhn.fhir.context.RuntimeCompositeDatatypeDefinition pdef = ((ca.uhn.fhir.context.RuntimeCompositeDatatypeDefinition) (nextChild.getSingleChildOrThrow())); defn.getDefinition().addType().setCode(DataTypeEnum.VALUESET_BINDER.fromCodeString(pdef.getName())); }else { ca.uhn.fhir.context.RuntimeResourceBlockDefinition pdef = ((ca.uhn.fhir.context.RuntimeResourceBlockDefinition) (nextChild.getSingleChildOrThrow())); scanForExtensions(theProfile, pdef); for (ca.uhn.fhir.context.RuntimeChildDeclaredExtensionDefinition nextChildExt : pdef.getExtensions()) { ca.uhn.fhir.model.dstu.resource.Profile.StructureElementDefinitionType type = defn.getDefinition().addType(); type.setCode(DataTypeEnum.EXTENSION); type.setProfile((\"#\" + (myExtensionDefToCode.get(nextChildExt)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8156/buggy-version/hapi-fhir-base.src.main.java.ca.uhn.fhir.context.RuntimeResourceDefinition.java", "BodyUseAPI": ["ca.uhn.fhir.context.RuntimeChildDeclaredExtensionDefinition.getSingleChildOrThrow()", "ca.uhn.fhir.context.RuntimeChildDeclaredExtensionDefinition.getSingleChildOrThrow()"], "Fixed commit": "d9e21a7192b6a6fc90e85fb2dc8fa6447048b0eb", "Url": "https://api.github.com/repos/jamesagnew/hapi-fhir", "Date": "2014-10-29T19:50:43Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currMod.delete()) { java.lang.System.out.println(\"Successfully Deleted Old Mod! Update Success!\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5661/buggy-version/java.KCInstallModsV1.java", "BodyUseAPI": [], "Fixed commit": "b8a72c5fee8c5b68e398414b1b3856c03402dbfd", "Url": "https://api.github.com/repos/KILLER-CHIEF/Halocraft-KCWM", "Date": "2015-09-10T12:10:49Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotEmpty(hbm2ddl)) { configuration.setProperty(\"hibernate.hbm2ddl.auto\", hbm2ddl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5236/buggy-version/webapp.src.main.java.nl.zoostation.database.app.config.DatasourceConfig.java", "BodyUseAPI": ["org.springframework.context.annotation.Configuration.setProperty(java.lang.String,java.lang.String)"], "Fixed commit": "6d5f3c9791121d47bb23d27230551d92effa74a4", "Url": "https://api.github.com/repos/ZooStationgithub/database", "Date": "2016-12-31T20:09:07Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (eventProdToFigures.containsKey(epn)) { org.eclipse.draw2d.geometry.Rectangle selectedZone = eventProdToFigures.get(epn); draw(selectedZone.x, selectedZone.y, ((selectedZone.x()) + (selectedZone.width())), ((selectedZone.y()) + (selectedZone.height()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2540/buggy-version/fr.inria.soctrace.tools.ocelotl.ui.src.fr.inria.soctrace.tools.ocelotl.ui.views.unitAxisView.UnitAxisView.java", "BodyUseAPI": ["java.util.HashMap<fr.inria.soctrace.tools.ocelotl.core.dataaggregmanager.spacetime.EventProducerHierarchy.EventProducerNode, org.eclipse.draw2d.geometry.Rectangle>.get(fr.inria.soctrace.tools.ocelotl.core.dataaggregmanager.spacetime.EventProducerHierarchy.EventProducerNode)"], "Fixed commit": "f866d7e0dbe4273a0d87a8110d7c546d2fc7431b", "Url": "https://api.github.com/repos/soctrace-inria/ocelotl", "Date": "2014-12-12T10:23:49Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (signedUser != null) bufferWritter.write(((((((signedUser.id) + \": \") + date) + \": \") + message) + \"\\n\")); else bufferWritter.write((((((\"No id\" + \": \") + date) + \": \") + message) + \"\\n\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8905/buggy-version/SEBA_FitNex.app.controllers.LogMaker.java", "BodyUseAPI": ["java.io.BufferedWriter.write(((((((signedUser.id) + \": \") + date) + \": \") + message) + \"\\n\"))"], "Fixed commit": "c71db997825a5fc688e2a6708d55a3dd49068223", "Url": "https://api.github.com/repos/bojankolosnjaji/SEBA_Fitnex", "Date": "2013-06-21T20:44:58Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((instance) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6456/buggy-version/src.main.java.emoji.gwt.emoji.Emoji.java", "BodyUseAPI": [], "Fixed commit": "0aac0e9d45d4f516895efcd90f3a46dd88e06f9b", "Url": "https://api.github.com/repos/billy1380/emoji-gwt", "Date": "2017-03-13T18:37:55Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.microsoft.tfs.core.clients.versioncontrol.soapextensions.Item.getServerItem()", "com.microsoft.gittf.core.tasks.CreateCommitForPendingSetsTask.updateServerItemWithParentRename(java.util.Set<java.lang.String>,java.lang.String,java.util.Map<java.lang.String, com.microsoft.tfs.core.clients.versioncontrol.soapextensions.PendingChange>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.microsoft.tfs.core.clients.versioncontrol.path.ServerPath.isChild(serverPathToUse, destinationServerItem)) { createBlob(repositoryInserter, pendingSetTreeHeirarchy, destinationServerItem, treeWalker.getObjectId(0), treeWalker.getFileMode(0), progressMonitor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1737/buggy-version/com.microsoft.gittf.core.src.main.java.com.microsoft.gittf.core.tasks.CreateCommitForPendingSetsTask.java", "BodyUseAPI": ["com.microsoft.gittf.core.tasks.CreateCommitForPendingSetsTask.createBlob(org.eclipse.jgit.lib.ObjectInserter,java.util.Map<com.microsoft.gittf.core.util.tree.CommitTreePath, java.util.Map<com.microsoft.gittf.core.util.tree.CommitTreePath, com.microsoft.gittf.core.util.tree.CommitTreeEntry>>,java.lang.String,treeWalker.getObjectId(0),treeWalker.getFileMode(0),com.microsoft.gittf.core.tasks.framework.TaskProgressMonitor)"], "Fixed commit": "795014a61c8621ce70787021a77223707dfe892d", "Url": "https://api.github.com/repos/PKRoma/gittf", "Date": "2012-10-26T21:47:54Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(feedBack.content))) { showLoading(\"\u6b63\u5728\u4e0a\u4f20\u53cd\u9988...\"); mPresenter.feedBack(feedBack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2053/buggy-version/app.src.main.java.com.joe.zatuji.module.homesettingpage.HomeSettingFragment.java", "BodyUseAPI": ["com.joe.zatuji.module.homesettingpage.HomeSettingFragment.2.feedBack(com.joe.zatuji.data.bean.FeedBackBean)"], "Fixed commit": "71ab71a3dbd851876fd83cd516af91807c1d00a5", "Url": "https://api.github.com/repos/JoeSteven/Zatuji", "Date": "2016-07-28T10:31:49Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["database.DBSet.fork()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((this.creator.getConfirmedBalance(fork).compareTo(java.math.BigDecimal.ZERO)) == (-1)) { return NO_BALANCE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2445/buggy-version/Qora.src.qora.transaction.ArbitraryTransactionV3.java", "BodyUseAPI": [], "Fixed commit": "b16c88d4b8d4d7025b4c9edc86bb06add4f1d291", "Url": "https://api.github.com/repos/Qoracoin/Qora", "Date": "2016-02-09T21:02:57Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.flowable.engine.impl.context.Context.getTransactionContext()) != null) { org.flowable.engine.impl.jobexecutor.JobAddedTransactionListener jobAddedTransactionListener = new org.flowable.engine.impl.jobexecutor.JobAddedTransactionListener(job, getAsyncExecutor()); org.flowable.engine.impl.context.Context.getTransactionContext().addTransactionListener(TransactionState.COMMITTED, jobAddedTransactionListener); }else { org.flowable.engine.impl.jobexecutor.AsyncJobAddedNotification jobAddedNotification = new org.flowable.engine.impl.jobexecutor.AsyncJobAddedNotification(job, getAsyncExecutor()); getCommandContext().addCloseListener(jobAddedNotification); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8533/buggy-version/modules.flowable-engine.src.main.java.org.flowable.engine.impl.asyncexecutor.DefaultJobManager.java", "BodyUseAPI": [], "Fixed commit": "37e54d1006174416182f7be34f7fd1fd76233fce", "Url": "https://api.github.com/repos/flowable/flowable-engine", "Date": "2017-01-19T15:23:34Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resource.getState().isDeleted()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8528/buggy-version/src.org.opencms.search.CmsSearchManager.java", "BodyUseAPI": [], "Fixed commit": "b81e46f764a861fd2a273830e2f6515d4b36cb36", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2012-11-05T09:49:54Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resource.getState().isDeleted()) { result.add(resource); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8528/buggy-version/src.org.opencms.search.CmsSearchManager.java", "BodyUseAPI": ["java.util.List<org.opencms.db.CmsPublishedResource>.add(org.opencms.db.CmsPublishedResource)"], "Fixed commit": "b81e46f764a861fd2a273830e2f6515d4b36cb36", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2012-11-05T09:49:54Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ttx.get().row(parentRowId).col(accismus.stress.trie.Constants.COUNT_WAIT_COL).toInteger()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (parentWait == null) { parentWait = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5094/buggy-version/modules.stress.src.main.java.accismus.stress.trie.NodeObserver.java", "BodyUseAPI": [], "Fixed commit": "1731173ce1a1b32cde6da6a56f42beb3be72de1b", "Url": "https://api.github.com/repos/mikewalch/Accismus", "Date": "2014-06-27T20:47:14Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj.getClass()) == (getClass())) { java.lang.Object oid = ((org.oobium.persist.Model) (obj)).getId(); if ((id.getClass()) != (oid.getClass())) { try { oid = coerce(oid, id.getClass()); } catch (java.lang.Exception e) { } } return id.equals(oid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4597/buggy-version/org.oobium.persist.src.org.oobium.persist.Model.java", "BodyUseAPI": [], "Fixed commit": "880204d805ef444001ad5aee21b4bd786dddcee2", "Url": "https://api.github.com/repos/oobium/framework", "Date": "2011-09-15T05:50:41Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNew()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4597/buggy-version/org.oobium.persist.src.org.oobium.persist.Model.java", "BodyUseAPI": [], "Fixed commit": "880204d805ef444001ad5aee21b4bd786dddcee2", "Url": "https://api.github.com/repos/oobium/framework", "Date": "2011-09-15T05:50:41Z"},
{"Line": "=>1022", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.oobium.utils.json.JsonUtils.toStringMap(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (fields.containsKey(\"id\")) { java.lang.Object id = fields.remove(\"id\"); setId(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4597/buggy-version/org.oobium.persist.src.org.oobium.persist.Model.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.remove(java.lang.String)"], "Fixed commit": "880204d805ef444001ad5aee21b4bd786dddcee2", "Url": "https://api.github.com/repos/oobium/framework", "Date": "2011-09-15T05:50:41Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((classesToScan) != null) { for (java.lang.String fullyQualifiedClassName : classesToScan) { if (iStreams == null) { iStreams = new java.io.InputStream[classesToScan.size()]; } java.lang.String classRelativePath = fullyQualifiedClassName.replace(\".\", \"/\"); java.io.InputStream is = this.getClass().getClassLoader().getResourceAsStream((classRelativePath + \".class\")); iStreams[(counter++)] = is; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6673/buggy-version/kundera-core.src.main.java.com.impetus.kundera.classreading.ClasspathReader.java", "BodyUseAPI": [], "Fixed commit": "f9c4b2c2a3b2bacb3188fe65fb7ec1e19e1c06ae", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2013-07-06T15:18:18Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((additionalParams != null) && (!(additionalParams.equals(\"\")))) { params2.addAll(java.util.Arrays.asList(additionalParams.split(\" \"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2259/buggy-version/src.main.java.de.uni_potsdam.hpi.asg.resyntool.io.ResynInvoker.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String[])", "java.lang.String.split(java.lang.String)", "java.util.List<java.lang.String>.addAll(java.util.List<java.lang.String>)"], "Fixed commit": "c4faa738a119c74b92a66043f9c39fa4e2f1439e", "Url": "https://api.github.com/repos/nkluge/asgresyn", "Date": "2016-06-15T14:15:03Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (json == (org.json.JSONObject.NULL)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7687/buggy-version/src.org.json.serialization.JSONConvert.java", "BodyUseAPI": [], "Fixed commit": "96c47c37ce6b5ef327e552c898525b2817ddd9ab", "Url": "https://api.github.com/repos/XuPeiYao/JsonSerializationExtension", "Date": "2015-10-14T15:13:54Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javassist.ClassPool.getCtClass(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.zaxxer.hikari.util.JavassistProxyFactory.isDefaultMethod(intf, intfCt, intfMethod)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7085/buggy-version/src.main.java.com.zaxxer.hikari.util.JavassistProxyFactory.java", "BodyUseAPI": [], "Fixed commit": "33403be932f0c18a3c87033c624c104b67d16112", "Url": "https://api.github.com/repos/brettwooldridge/HikariCP", "Date": "2017-01-27T00:13:46Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loaded) { fillLocationsAndResourceGrps(currentSub); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7989/buggy-version/PluginsAndFeatures.azure-toolkit-for-eclipse.com.microsoft.azuretools.azureexplorer.src.com.microsoft.azuretools.azureexplorer.forms.createrediscache.CreateRedisCacheForm.java", "BodyUseAPI": [], "Fixed commit": "2d7fae62bd7fe2aab8ad9414ed83aebee3b5eea3", "Url": "https://api.github.com/repos/Microsoft/azure-tools-for-java", "Date": "2017-05-21T12:16:08Z"},
{"Line": "=>836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((host != null) && ((host.getComputeElement()) != null)) { host.setComputeElement(com.emc.storageos.db.client.util.NullColumnValueGetter.getNullURI()); _dbClient.persistObject(host); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7152/buggy-version/controllersvc.src.main.java.com.emc.storageos.computecontroller.impl.ucs.UcsComputeDevice.java", "BodyUseAPI": ["com.emc.storageos.db.client.DbClient.persistObject(com.emc.storageos.db.client.model.Host)", "com.emc.storageos.db.client.model.Host.setComputeElement(com.emc.storageos.db.client.util.NullColumnValueGetter.getNullURI())"], "Fixed commit": "5a3249ae223370d21837000c23b728562574feb9", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-12-07T10:51:40Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pathing.size()) > 0) move(pathing.poll(), com.example.framaz1.myapplication.Game.gamedepths[com.example.framaz1.myapplication.Game.layer].field[yCoordinates][xCoordinates]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6295/buggy-version/app.src.main.java.com.example.framaz1.myapplication.Creatures.PlayCreature.java", "BodyUseAPI": ["com.example.framaz1.myapplication.Creatures.PlayCreature.move(pathing.poll(),com.example.framaz1.myapplication.Game.gamedepths[com.example.framaz1.myapplication.Game.layer].field[yCoordinates][xCoordinates])", "com.example.framaz1.myapplication.Creatures.PlayCreature.poll()"], "Fixed commit": "7c097f2531c22bc40381c59b9e97e21753c6d5ac", "Url": "https://api.github.com/repos/framaz/The_Game_No_Name", "Date": "2015-07-27T09:24:21Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.framaz1.myapplication.Game.gamedepths[com.example.framaz1.myapplication.Game.layer].field[toY][toX].iswall) com.example.framaz1.myapplication.Game.pathFindingHelpArray[toY][toX] = 100000000;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6295/buggy-version/app.src.main.java.com.example.framaz1.myapplication.Game.java", "BodyUseAPI": [], "Fixed commit": "7c097f2531c22bc40381c59b9e97e21753c6d5ac", "Url": "https://api.github.com/repos/framaz/The_Game_No_Name", "Date": "2015-07-27T09:24:21Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(queryString)) { queryString = queryString.replaceAll(\"[^A-Za-z0-9\u00e4\u00f6\u00fc\u00c4\u00d6\u00dc\u00df\u00e9\u00e8\u00e1\u00e0\u00fa\u00f9\u00f3\u00f2=']\", \" \"); if ((com.google.common.base.Strings.isNullOrEmpty(lang)) || (!(\"fr\".equals(lang)))) { queryString += \" lang=en\"; }else { queryString += \" lang=\" + lang; } if (!(com.google.common.base.Strings.isNullOrEmpty(cost))) { if ((java.lang.Integer.valueOf(cost)) >= 7) { queryString += \" cost>=\" + cost; }else { queryString += \" cost=\" + cost; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7017/buggy-version/src.main.java.com.geminicode.hssc.utils.SearchUtil.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "8a7186bc3aa9958e7772a2d29575bfa843e872f7", "Url": "https://api.github.com/repos/Angelima/Hearthstone-search", "Date": "2015-06-18T14:49:38Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((v.getId()) == (R.id.buttonHyp)) { java.lang.String indHyp = tvIndHyp.getText().toString(); if (indHyp.equals(\"hyp\")) { tvIndHyp.setText(\"\"); }else { tvIndHyp.setText(\"hyp\"); } }else { onLongClick(v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7236/buggy-version/calc.src.ru.olega.calc.MainActivity.java", "BodyUseAPI": ["ru.olega.calc.MainActivity.onLongClick(android.view.View)"], "Fixed commit": "bf835dbaedc50361bf2cb5f68597d412b2f11107", "Url": "https://api.github.com/repos/shilleroleg/calc", "Date": "2014-02-03T15:01:37Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((x < 0.5) && (x > (-0.5))) { angle = (y <= 0) ? 90 : 270; }else angle = ((int) ((180 / (java.lang.Math.PI)) * (java.lang.Math.atan((y / x)))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1996/buggy-version/Octapad.src.PlayerClient.java", "BodyUseAPI": ["java.lang.Math.atan(double)"], "Fixed commit": "adc32148da0da6c6beafdcd3d6ca7e9463b91ff0", "Url": "https://api.github.com/repos/ItsWillsWei/Octopad", "Date": "2016-06-14T15:53:24Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Configuration.CLEANUP_BUILD_FOLDER) { if (this.buildDir.exists()) { this.buildDir.deleteOnExit(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5923/buggy-version/src.main.java.net.d4rkfly3r.hourofcode.kuragigo.Kuragigo.java", "BodyUseAPI": [], "Fixed commit": "6e9a0fd00caca2e2f4556e8f0a4ae9f6b06b2506", "Url": "https://api.github.com/repos/d4rkfly3r/lingvo-de-kura-igo", "Date": "2016-11-17T22:13:19Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slidePanelLayout.isPanelExpanded()) { mMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLng(new com.google.android.gms.maps.model.LatLng(((latLng.latitude) - 0.006), latLng.longitude))); }else { mMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLng(latLng)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3069/buggy-version/src.com.yoneko.areyouthereyet.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "1833a69df2079b410acdc9df57d0540931e4726a", "Url": "https://api.github.com/repos/reidisaki/dumpy", "Date": "2014-08-27T06:40:41Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.nav_fan_home)) { getFragmentManager().popBackStackImmediate(); setTitle(\"Home\"); com.liamd.giggity_app.FanUserHomeFragment fragment = new com.liamd.giggity_app.FanUserHomeFragment(); android.app.FragmentTransaction fragmentTransaction = getFragmentManager().beginTransaction(); fragmentTransaction.replace(R.id.frame, fragment, \"FanUserHomeFragment\"); fragmentTransaction.commit(); }else if (id == (R.id.nav_profile)) { com.liamd.giggity_app.FanUserMainActivity.ClearBackStack(this); setTitle(\"My Fan Profile\"); com.liamd.giggity_app.FanUserProfileFragment fragment = new com.liamd.giggity_app.FanUserProfileFragment(); android.os.Bundle arguments = new android.os.Bundle(); fragment.setArguments(arguments); android.app.FragmentTransaction fragmentTransaction = getFragmentManager().beginTransaction(); fragmentTransaction.replace(R.id.frame, fragment, \"FanUserProfileFragment\").addToBackStack(null).commit(); }else if (id == (R.id.nav_gig_finder)) { com.liamd.giggity_app.FanUserMainActivity.ClearBackStack(this); setTitle(\"Gig Finder\"); com.liamd.giggity_app.MusicianUserGigFinderFragment fragment = new com.liamd.giggity_app.MusicianUserGigFinderFragment(); android.os.Bundle arguments = new android.os.Bundle(); arguments.putString(\"UserType\", \"Fan\"); fragment.setArguments(arguments); android.app.FragmentTransaction fragmentTransaction = getFragmentManager().beginTransaction(); fragmentTransaction.replace(R.id.frame, fragment, \"MusicianUserGigFinderFragment\").addToBackStack(null).commit(); }else if (id == (R.id.nav_my_gigs)) { com.liamd.giggity_app.FanUserMainActivity.ClearBackStack(this); setTitle(\"My Gigs\"); com.liamd.giggity_app.MusicianUserViewGigsFragment fragment = new com.liamd.giggity_app.MusicianUserViewGigsFragment(); android.os.Bundle arguments = new android.os.Bundle(); arguments.putString(\"UserType\", \"Fan\"); fragment.setArguments(arguments); android.app.FragmentTransaction fragmentTransaction = getFragmentManager().beginTransaction(); fragmentTransaction.replace(R.id.frame, fragment, \"MusicianUserViewGigsFragment\").addToBackStack(null).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/722/buggy-version/app.src.main.java.com.liamd.giggity_app.FanUserMainActivity.java", "BodyUseAPI": [], "Fixed commit": "135bf7957482d5cbbf40af85eab3c7746397f6be", "Url": "https://api.github.com/repos/Woody1ooo/PRCO304-Giggity-App", "Date": "2017-05-20T00:46:51Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.app.FragmentManager.findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == fragment) fragment = new com.github.jasonwangdev.filepicker.demo.MainFragment();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2513/buggy-version/app.src.main.java.com.github.jasonwangdev.filepicker.demo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "601b7aa895ef99cac3e120b3449723b306928f0f", "Url": "https://api.github.com/repos/JasonWangDev/filepicker-android", "Date": "2017-07-03T06:36:28Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (request != null) { java.lang.String _authHeader = request.getHeader(\"authorization\"); if (_authHeader != null) { _authRequest = _authHeader.split(\" \"); if (_authRequest[0].equals(\"Basic\")) { java.lang.String[] _auth64 = java.util.Base64.decode(_authRequest[1]).split(\":\"); getGlobalVar(\"_SERVER\").put(new com.caucho.quercus.env.ConstStringValue(\"PHP_AUTH_USER\"), new com.caucho.quercus.env.ConstStringValue(_auth64[0])); getGlobalVar(\"_SERVER\").put(new com.caucho.quercus.env.ConstStringValue(\"PHP_AUTH_PW\"), new com.caucho.quercus.env.ConstStringValue(_auth64[1])); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/9197/buggy-version/quercus.src.main.java.com.caucho.quercus.env.Env.java", "BodyUseAPI": [], "Fixed commit": "9f8f6e2554ddf72b84cd6775aec258ee64bef45e", "Url": "https://api.github.com/repos/CleverCloud/Quercus", "Date": "2011-04-23T23:28:32Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.matthewtamlin.spyglass.library.core.Spyglass.getValueHandlerAnnotation(java.lang.reflect.Field)", "com.matthewtamlin.spyglass.library.core.Spyglass.getValueHandlerAdapter(java.lang.reflect.Field)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (handlerAdapter.isMandatory(handlerAnnotation)) { final java.lang.String message = \"Missing mandatory attribute in view \\\"%1$s\\\".\"; throw new com.matthewtamlin.spyglass.library.core.MandatoryAttributeMissingException(java.lang.String.format(message, view)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7277/buggy-version/library.src.main.java.com.matthewtamlin.spyglass.library.core.Spyglass.java", "BodyUseAPI": [], "Fixed commit": "440b4ef7c8ab6931b8fc5e92058392deb8af5145", "Url": "https://api.github.com/repos/MatthewTamlin/Spyglass", "Date": "2017-04-17T13:51:10Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.Message.getHeader(Configuration.CONTENT,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (content != null) { contentManager.saveInHistory(content, user); }else { net.seedboxer.mule.processor.DownloadHistory.LOGGER.error(\"Is not a content or can't be parsed. File: {}\", msg.getHeader(Configuration.FILE_NAME, java.lang.String.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8054/buggy-version/seedboxer-core.src.main.java.net.seedboxer.mule.processor.DownloadHistory.java", "BodyUseAPI": ["net.seedboxer.core.logic.ContentManager.saveInHistory(net.seedboxer.core.domain.Content,net.seedboxer.core.domain.User)"], "Fixed commit": "97ad8942e95faa616bbfda8c94ccbb6295d572a7", "Url": "https://api.github.com/repos/seedboxer/seedboxer", "Date": "2014-03-05T13:26:41Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(selectedAccount.getCustomer().equals(seller))) { throw new java.lang.Exception(\"Selected account does not belong to the selected customer.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1287/buggy-version/ejbModule.ch.uzh.ejb.bank.impl.BankApplication.java", "BodyUseAPI": [], "Fixed commit": "b96baceea891e8775c22840f43d98aacf77ad7c5", "Url": "https://api.github.com/repos/nethad/bdse-bankservice", "Date": "2011-05-30T21:09:36Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((conn != null) && ((org.apache.synapse.transport.passthru.TargetContext.getState(conn)) == (ProtocolState.REQUEST_READY))) { targetConfiguration.getConnections().releaseConnection(conn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8832/buggy-version/modules.transports.core.nhttp.src.main.java.org.apache.synapse.transport.passthru.DeliveryAgent.java", "BodyUseAPI": ["targetConfiguration.getConnections().releaseConnection(org.apache.http.nio.NHttpClientConnection)"], "Fixed commit": "9ec5e63ebcc2be47e4f749dd0a7bea4c16c10101", "Url": "https://api.github.com/repos/wso2/wso2-synapse", "Date": "2016-08-03T04:46:44Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stringProperty == null) || ((stringProperty.getCharacterString()) == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4973/buggy-version/src.main.java.au.gov.ga.geodesy.support.mapper.orika.StringToStringPropertyConverter.java", "BodyUseAPI": [], "Fixed commit": "3a802425d0e55d8fd8588be94420f5d6eacd4529", "Url": "https://api.github.com/repos/GeoscienceAustralia/Geodesy-Web-Services", "Date": "2016-09-14T11:12:09Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((property == null) || ((property.getCharacterString()) == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4973/buggy-version/src.main.java.au.gov.ga.geodesy.support.mapper.orika.InternationalStringToStringPropertyConverter.java", "BodyUseAPI": [], "Fixed commit": "3a802425d0e55d8fd8588be94420f5d6eacd4529", "Url": "https://api.github.com/repos/GeoscienceAustralia/Geodesy-Web-Services", "Date": "2016-09-14T11:12:09Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (staffToUpdate.getPermissions().equals(\"TA\")) { http += \"Teaching skills:\" + \"<input class=\\'createStaffInput\\' type=\\\"text\\\" id=\\'teachingSkills\\' name=\\'teachingSkills\\' value=\\'\"; java.util.List<java.lang.String> listskills = staffToUpdate.getSkills(); if ((listskills != null) && (!(listskills.isEmpty()))) { java.lang.String skills = \"\"; for (java.lang.String i : listskills) { skills += \" \" + i; } http += skills; } http += \"'/><br>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6035/buggy-version/Project361.src.edu.uwm.cs361.EditStaffContactServlet.java", "BodyUseAPI": ["edu.uwm.cs361.Staff.getSkills()"], "Fixed commit": "bd642f976ac7863a366050eb6ca4a6f7dd48a8c2", "Url": "https://api.github.com/repos/ovid-nis/Project361", "Date": "2014-12-19T00:34:34Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.mikephil.charting.charts.LineChart.getHighlighted()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((highlights[0].getX()) < minimumVisibleXValue) { gpxItem.chartHighlightPos = minimumVisibleXValue; }else if ((highlights[0].getX()) > maximumVisibleXValue) { gpxItem.chartHighlightPos = maximumVisibleXValue; }else { gpxItem.chartHighlightPos = highlights[0].getX(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5918/buggy-version/OsmAnd.src.net.osmand.plus.mapcontextmenu.other.TrackDetailsMenu.java", "BodyUseAPI": ["highlights[0].getX()", "highlights[0].getX()"], "Fixed commit": "7675977a485ccc79801cd3645b2a5ca3fea46e14", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2017-06-16T10:22:04Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.candidateView.getSuggestion().size()) > 0) { this.onChooseWord(this.candidateView.getSuggestion().get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7901/buggy-version/src.com.linkomnia.android.Changjie.ChangjieIME.java", "BodyUseAPI": ["com.linkomnia.android.Changjie.ChangjieIME.onChooseWord(this.candidateView.getSuggestion().get(0))", "this.candidateView.getSuggestion().get(int)", "com.linkomnia.android.Changjie.CandidateView.getSuggestion()"], "Fixed commit": "647f6b735a13a3f57ee92f399e879e90c8f40588", "Url": "https://api.github.com/repos/wanleung/ChangjieIME", "Date": "2013-12-26T05:30:57Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.inputView) != null) { this.inputView.closing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7901/buggy-version/src.com.linkomnia.android.Changjie.ChangjieIME.java", "BodyUseAPI": [], "Fixed commit": "647f6b735a13a3f57ee92f399e879e90c8f40588", "Url": "https://api.github.com/repos/wanleung/ChangjieIME", "Date": "2013-12-26T05:30:57Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.declaration) instanceof de.skuzzle.polly.parsing.declarations.FunctionDeclaration) { stack.push(new de.skuzzle.polly.parsing.tree.literals.StringLiteral(\"Funktion gespeichert\")); }else if ((this.declaration) instanceof de.skuzzle.polly.parsing.declarations.VarDeclaration) { this.expression.collapse(stack); ((de.skuzzle.polly.parsing.declarations.VarDeclaration) (this.declaration)).setExpression(stack.peek()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1167/buggy-version/parser.src.de.skuzzle.polly.parsing.tree.AssignmentExpression.java", "BodyUseAPI": [], "Fixed commit": "5bc38b67892a3d1e3310678dee7b04fbbe9e169f", "Url": "https://api.github.com/repos/skuzzle/polly", "Date": "2012-04-03T17:14:58Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (evt.getPropertyName().equals(FIBBrowserElement.ACTIONS_KEY)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7914/buggy-version/gina-core.src.main.java.org.openflexo.fib.view.widget.browser.FIBBrowserElementType.java", "BodyUseAPI": [], "Fixed commit": "65191536ce40887341a27ba904012dbe734b6cfa", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2014-05-09T12:12:11Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (reader.current(theEndOfDocument())) { return identify; }else if (reader.current(elementName(localPart(equalTo(\"description\"))))) { identify.withDescription(reader.get(descriptionParser())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5432/buggy-version/xoai-service-provider.src.main.java.com.lyncode.xoai.serviceprovider.parsers.IdentifyParser.java", "BodyUseAPI": ["com.lyncode.xoai.model.oaipmh.Identify.withDescription(reader.get(descriptionParser()))", "com.lyncode.xml.XmlReader.current(elementName(localPart(equalTo(\"description\"))))", "com.lyncode.xml.XmlReader.get(descriptionParser())"], "Fixed commit": "e729c7c36a17cc2d9c43be800e3c61edf2d69ee1", "Url": "https://api.github.com/repos/brambg/xoai", "Date": "2014-07-24T17:04:33Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<models.TrendQuery>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (maxBound == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8439/buggy-version/src.main.java.agents.StockTrader.java", "BodyUseAPI": [], "Fixed commit": "4b9976013afb2bd78079c825fa45bc09c67b2290", "Url": "https://api.github.com/repos/pnikrat/MultiAgentStock", "Date": "2017-07-08T10:23:11Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.graphics.drawable.VectorDrawableCompat.create(radioButton.getContext().getResources(),R.drawable.abc_btn_radio_material,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (radioDrawable == null) { radioDrawable = android.support.v4.content.ContextCompat.getDrawable(radioButton.getContext(), R.drawable.abc_btn_radio_material); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6050/buggy-version/core.src.main.java.com.afollestad.materialdialogs.internal.MDTintHelper.java", "BodyUseAPI": [], "Fixed commit": "bf2f2c5c578937b08b0abf2421c39b56e6910582", "Url": "https://api.github.com/repos/mariotaku/material-dialogs", "Date": "2016-03-17T06:48:31Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastLogin.delete()) { de.craften.craftenlauncher.logic.Logger.getInstance().logInfo(((\"LastLogin at: \" + path) + \" deleted!\")); }else { de.craften.craftenlauncher.logic.Logger.getInstance().logError((\"Could not delete LastLogin at: \" + path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4277/buggy-version/src.de.craften.craftenlauncher.logic.auth.AuthenticationService.java", "BodyUseAPI": [], "Fixed commit": "9d209e953687579370134639a65b2d71d10f91d9", "Url": "https://api.github.com/repos/TeamWertarbyte/craften-launcher", "Date": "2014-03-19T20:35:21Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((priceDTO.getAdrSurchargeMinimum()) == null) && ((priceDTO.getCalculatedAdrSurcharge()) == null)) { }else { if ((priceDTO.getAdrSurchargeMinimum().doubleValue()) > (priceDTO.getCalculatedAdrSurcharge().doubleValue())) { priceDTO.setResultingPriceSurcharge(priceDTO.getAdrSurchargeMinimum()); }else { priceDTO.setResultingPriceSurcharge(priceDTO.getCalculatedAdrSurcharge()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5063/buggy-version/xlra.src.main.java.com.moorkensam.xlra.service.impl.CalculationServiceImpl.java", "BodyUseAPI": ["com.moorkensam.xlra.dto.PriceCalculationDTO.getCalculatedAdrSurcharge()", "priceDTO.getAdrSurchargeMinimum().doubleValue()", "com.moorkensam.xlra.dto.PriceCalculationDTO.setResultingPriceSurcharge(priceDTO.getAdrSurchargeMinimum())", "com.moorkensam.xlra.dto.PriceCalculationDTO.getAdrSurchargeMinimum()", "priceDTO.getCalculatedAdrSurcharge().doubleValue()", "com.moorkensam.xlra.dto.PriceCalculationDTO.getCalculatedAdrSurcharge()", "com.moorkensam.xlra.dto.PriceCalculationDTO.getAdrSurchargeMinimum()", "com.moorkensam.xlra.dto.PriceCalculationDTO.setResultingPriceSurcharge(priceDTO.getCalculatedAdrSurcharge())"], "Fixed commit": "8f4a1576a50ef065893fd0779b4ad0754812133e", "Url": "https://api.github.com/repos/basmoorkens/xlra", "Date": "2015-10-19T21:36:15Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mContinue) { registerReceivers(); }else { mButton.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5517/buggy-version/src.org.servalproject.maps.DisclaimerActivity.java", "BodyUseAPI": [], "Fixed commit": "96eb3f98a73d938bbd7c984802028d4bba9d32da", "Url": "https://api.github.com/repos/servalproject/ServalMaps", "Date": "2012-04-18T01:46:51Z"},
{"Line": "=>1463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((me.ccrama.redditslide.SettingValues.actionbarVisible) && ((downvotebutton.getVisibility()) != (android.view.View.VISIBLE))) { downvotebutton.setVisibility(View.VISIBLE); upvotebutton.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8798/buggy-version/app.src.main.java.me.ccrama.redditslide.SubmissionViews.PopulateSubmissionViewHolder.java", "BodyUseAPI": ["android.widget.ImageView.setVisibility(View.VISIBLE)"], "Fixed commit": "962d20935bfac86a5ec257b017c7126dc6cefa6e", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-03-30T19:25:08Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(c.exists())) c.mkdir();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6228/buggy-version/org.wikipathways.bots.src.org.wikipathways.bots.Bot.java", "BodyUseAPI": [], "Fixed commit": "72f6515ae1fa6e8fd61fae3fe0b1099293a51810", "Url": "https://api.github.com/repos/wikipathways/java-bots", "Date": "2016-08-08T11:48:23Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(symbol.substring(((symbol.length()) - 1)).equals(\"!\"))) { symbol = symbol += \"!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3953/buggy-version/src.Piece.java", "BodyUseAPI": [], "Fixed commit": "673b74d604f672f3a4ee8c56f60caf03f54efc8c", "Url": "https://api.github.com/repos/dma-gh/Java-Shogi", "Date": "2016-05-11T17:34:04Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((children.size()) < 4) func = 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3260/buggy-version/TreeMutator.src.main.java.ASTEntry.java", "BodyUseAPI": [], "Fixed commit": "3df1a6975953bf59eb7c3d9900c02662a4f2584d", "Url": "https://api.github.com/repos/ArsenyZorin/RNNCodeClones", "Date": "2017-09-29T15:35:45Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (StaticResource.connect.equals(\"\u672a\u8fde\u63a5\")) { request.getSession().setAttribute(\"openResult\", \"\u95e8\u9501\u5c1a\u672a\u8fde\u63a5\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458\uff01\"); response.sendRedirect(((request.getContextPath()) + \"/open.jsp\")); }else { com.lock.service.WebOpenDoorService WebOpenDoorService = new com.lock.service.WebOpenDoorService(studentId, passWord); java.lang.String openResult = WebOpenDoorService.open(); request.getSession().setAttribute(\"openResult\", openResult); response.sendRedirect(((request.getContextPath()) + \"/open.jsp\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5421/buggy-version/src.com.lock.servlet.OpenDoorServlet.java", "BodyUseAPI": [], "Fixed commit": "5ca0cd75943a5fe6f2e9c4a8b9024f761e4c9e3f", "Url": "https://api.github.com/repos/549876099/GateLockWeb", "Date": "2016-11-03T12:10:34Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newBegin == null) { begin = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1814/buggy-version/src.jm.tex.lib.equationeditor.editorboard.objects.MathLine.java", "BodyUseAPI": [], "Fixed commit": "88ce27ddc725319ed3fa1c15e569def83b525f46", "Url": "https://api.github.com/repos/BJMg/EquationEditor", "Date": "2014-02-21T10:32:26Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jm.tex.lib.equationeditor.LaTeXMenu.DataObject.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (type != null) { if (type.equals(\"power\")) { setPower(); return -1; }else if (type.equals(\"index\")) { setIndex(); return -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1814/buggy-version/src.jm.tex.lib.equationeditor.editorboard.objects.MathObject.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "88ce27ddc725319ed3fa1c15e569def83b525f46", "Url": "https://api.github.com/repos/BJMg/EquationEditor", "Date": "2014-02-21T10:32:26Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jm.tex.lib.equationeditor.editorboard.objects.MathObject.getParent()", "jm.tex.lib.equationeditor.editorboard.objects.MathObject.getLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((parent == line) && ((line.getBegin()) == (this))) { line.setBegin(null); jm.tex.lib.equationeditor.editorboard.objects.MathObject next = getNext(); if (next != null) line.setBegin(next); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1814/buggy-version/src.jm.tex.lib.equationeditor.editorboard.objects.MathObject.java", "BodyUseAPI": ["jm.tex.lib.equationeditor.editorboard.objects.MathLine.setBegin(jm.tex.lib.equationeditor.editorboard.objects.MathObject)", "jm.tex.lib.equationeditor.editorboard.objects.MathLine.setBegin(<nulltype>)"], "Fixed commit": "88ce27ddc725319ed3fa1c15e569def83b525f46", "Url": "https://api.github.com/repos/BJMg/EquationEditor", "Date": "2014-02-21T10:32:26Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isWholeCollection())) mDeckId = col.getDecks().selected(); else mDeckId = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8072/buggy-version/AnkiDroid.src.main.java.com.ichi2.anki.Statistics.java", "BodyUseAPI": [], "Fixed commit": "6a7149ccdc77d7169f040fa81e194354e253afc2", "Url": "https://api.github.com/repos/bexsadirov/Anki-Android", "Date": "2017-03-20T12:59:36Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isWholeCollection())) mDeckId = col.getDecks().selected(); else mDeckId = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8072/buggy-version/AnkiDroid.src.main.java.com.ichi2.anki.Statistics.java", "BodyUseAPI": [], "Fixed commit": "6a7149ccdc77d7169f040fa81e194354e253afc2", "Url": "https://api.github.com/repos/bexsadirov/Anki-Android", "Date": "2017-03-20T12:59:36Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetType.equals(reference)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8827/buggy-version/src.main.java.spoon.reflect.visitor.ImportScannerImpl.java", "BodyUseAPI": [], "Fixed commit": "0f8243de38cf0d7044f86c470c69f43e5d20abe2", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2017-12-07T10:30:23Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sender instanceof net.minecraft.entity.player.EntityPlayer) == false) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4347/buggy-version/src.main.java.com.lothrazar.cyclicmagic.command.CommandEnderChest.java", "BodyUseAPI": [], "Fixed commit": "85a1243e290b5101698ca90c3d67bb97ce2282fa", "Url": "https://api.github.com/repos/PrinceOfAmber/Cyclic", "Date": "2016-05-24T19:42:41Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.momia.service.course.order.Order.getCourseIds()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((orderCourseIds.size()) >= 1) { cn.momia.api.course.dto.course.Course course = courseService.get(orderCourseIds.get(0)); subjectPackage.setCover(course.getCover()); }else { subjectPackage.setCover(subject.getCover()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/412/buggy-version/course.service-course.src.main.java.cn.momia.service.course.web.ctrl.OrderController.java", "BodyUseAPI": ["cn.momia.service.course.base.CourseService.get(java.lang.Long)", "java.util.List<java.lang.Long>.get(int)"], "Fixed commit": "8e5cdf2589daa3122605d19ff52ade4fd93b97ac", "Url": "https://api.github.com/repos/lovemomia/service", "Date": "2016-04-11T08:30:53Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Map>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (unpackedDict2 != null) unpackedDict3 = unpackedDict2.get(mealString);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8840/buggy-version/app.src.main.java.com.intbridge.projects.gaucholife.DiningFragment.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Map>.get(java.lang.String)"], "Fixed commit": "0d1c7852599a5cd75a0a457b6df9e191927b2cfe", "Url": "https://api.github.com/repos/Derek-X-Wang/ProjectGaucho-Android", "Date": "2015-08-28T20:09:01Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jstakun.gms.android.ui.AlertDialogBuilder.getAlertDialog(android.app.Activity,int,<nulltype>,DialogInterface.OnClickListener)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (dialog != null) { dialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8455/buggy-version/GMSLib.src.com.jstakun.gms.android.ui.AlertDialogBuilder.java", "BodyUseAPI": ["android.app.AlertDialog.dismiss()"], "Fixed commit": "fe60ab306bf412a96ea44edcf9d70043958f489d", "Url": "https://api.github.com/repos/jstakun/gms-world-client", "Date": "2016-10-17T14:18:37Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((results.size()) == 0) { handleShowNotExistsLayout(); }else if ((results.size()) > 0) { handleShowNotExistsLayout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1610/buggy-version/app.src.main.java.ir.rasen.charsoo.view.fragment.FragmentHome.java", "BodyUseAPI": ["java.util.ArrayList<ir.rasen.charsoo.controller.object.Post>.size()"], "Fixed commit": "82585bd915d4b1d2e91f84a2d0d6c8755a500395", "Url": "https://api.github.com/repos/rasenir/charsoo", "Date": "2015-08-08T08:44:58Z"},
{"Line": "=>692", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((from.clonedInputs) != null) { if ((clonedInputs) != null) overwrite = true; clonedInputs = from.clonedInputs; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2748/buggy-version/task.java.edu.wpi.cetask.Task.java", "BodyUseAPI": [], "Fixed commit": "8c7e9a95e82447e99eb7edf8b68fdb39481a36af", "Url": "https://api.github.com/repos/charlesrich/Disco", "Date": "2015-05-04T20:52:55Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result < 0) { result = -result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1535/buggy-version/simple-runtime-permission.src.main.java.cn.f_ms.runtimepermission.simple.PermissionFragment.java", "BodyUseAPI": [], "Fixed commit": "2696c1f2497c9cc9562f566c96de77e32ba8c0b1", "Url": "https://api.github.com/repos/imfms/simple-runtime-permission", "Date": "2017-04-26T04:55:45Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attachJar) { final java.io.File jarFile = new java.io.File(project.getBuild().getDirectory(), ((+(project.getBuild().getFinalName())) + \".jar\")); projectHelper.attachArtifact(project, \"jar\", project.getArtifact().getClassifier(), jarFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2538/buggy-version/src.main.java.com.jayway.maven.plugins.android.phase09package.ApklibMojo.java", "BodyUseAPI": [], "Fixed commit": "4bbd722a73034cc3044a60f85bf29f04561a2b1e", "Url": "https://api.github.com/repos/greek1979/maven-android-plugin", "Date": "2014-02-16T01:14:03Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.cvut.fel.webrtc.UserRegistry.getBySession(org.springframework.web.socket.WebSocketSession)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (user != null) { usersByName.remove(user.getName()); usersBySessionId.remove(session.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6852/buggy-version/kurento-agent.src.main.java.cz.cvut.fel.webrtc.UserRegistry.java", "BodyUseAPI": ["cz.cvut.fel.webrtc.UserSession.getName()", "java.util.concurrent.ConcurrentHashMap<java.lang.String, cz.cvut.fel.webrtc.UserSession>.remove(user.getName())"], "Fixed commit": "f56f2e42757907412610cbc01e91732fa24d9762", "Url": "https://api.github.com/repos/charllie/webrtc", "Date": "2015-07-09T09:27:04Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (traceListener != null) { traceListener.done(null, \"Query express trace failed: response is null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1207/buggy-version/src.cn.net.yto.biz.ExpressTraceManager.java", "BodyUseAPI": ["cn.net.yto.biz.ExpressTraceManager.ExpressTraceListener.done(<nulltype>,java.lang.String)"], "Fixed commit": "5cf7f5cffce04a9d8cb9d346277647bc87f93471", "Url": "https://api.github.com/repos/kit-team/xuebao", "Date": "2013-01-08T14:12:08Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (traceListener != null) { traceListener.done(null, \"Query express trace failed: response is null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1207/buggy-version/src.cn.net.yto.biz.ExpressTraceManager.java", "BodyUseAPI": ["cn.net.yto.biz.ExpressTraceManager.ExpressTraceListener.done(<nulltype>,java.lang.String)"], "Fixed commit": "5cf7f5cffce04a9d8cb9d346277647bc87f93471", "Url": "https://api.github.com/repos/kit-team/xuebao", "Date": "2013-01-08T14:12:08Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.EditText.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(android.text.TextUtils.isEmpty(wayBillNo))) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1207/buggy-version/src.cn.net.yto.ui.ExpressTrackActivity.java", "BodyUseAPI": [], "Fixed commit": "5cf7f5cffce04a9d8cb9d346277647bc87f93471", "Url": "https://api.github.com/repos/kit-team/xuebao", "Date": "2013-01-08T14:12:08Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prefs.getBoolean(\"notify_winners\", true)) { check(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1065/buggy-version/app.src.main.java.nl.arts.mark.betty.AlarmReceiver.java", "BodyUseAPI": [], "Fixed commit": "3f8d9fc9f7014585cb64130df5ca2cac21b17483", "Url": "https://api.github.com/repos/105424/Betty", "Date": "2015-06-01T00:07:59Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((longestItemDescription.getParent()) != null) ((android.view.ViewGroup) (longestItemDescription.getParent())).removeView(longestItemDescription);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6134/buggy-version/src.com.sharpcart.android.fragment.OptimizedSharpListFragment.java", "BodyUseAPI": ["((android.view.ViewGroup) (longestItemDescription.getParent())).removeView(android.widget.TextView)", "android.widget.TextView.getParent()"], "Fixed commit": "ff893dc61756cb96acf81b895c107f035d3c4f8d", "Url": "https://api.github.com/repos/yoyogiv/SharpCartMobile", "Date": "2014-02-24T14:24:36Z"},
{"Line": "=>1391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CPS.Data.CPSPlanting.getBoolean(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (b == null) b = java.lang.Boolean.FALSE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2706/buggy-version/CropPlanning.src.CPS.Data.CPSPlanting.java", "BodyUseAPI": [], "Fixed commit": "0574cc96af62f11d50918e8c3e54814ec71d6cba", "Url": "https://api.github.com/repos/claytonrcarter/cropplanning", "Date": "2013-02-17T19:58:29Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (json != null) { io.techies.com.puzzle_8.PuzzleBoardView.listOfPlayers = gson.fromJson(json, type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4456/buggy-version/app.src.main.java.io.techies.com.puzzle_8.PuzzleBoardView.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)"], "Fixed commit": "d47afffe946add95e10e5f83790588577bab3aec", "Url": "https://api.github.com/repos/rjung00712/Techiies.io", "Date": "2017-04-07T17:10:50Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pathTokens.length) == 3) { type = org.restheart.handlers.RequestContext.TYPE.FILES_BUCKET; }else if (((pathTokens.length) == 4) && (pathTokens[3].equalsIgnoreCase(org.restheart.handlers.RequestContext._INDEXES))) { type = org.restheart.handlers.RequestContext.TYPE.COLLECTION_INDEXES; }else if (((pathTokens.length) == 4) && (!(pathTokens[3].equalsIgnoreCase(org.restheart.handlers.RequestContext._INDEXES)))) { type = org.restheart.handlers.RequestContext.TYPE.FILE; }else if (((pathTokens.length) > 4) && (pathTokens[3].equalsIgnoreCase(org.restheart.handlers.RequestContext._INDEXES))) { type = org.restheart.handlers.RequestContext.TYPE.INDEX; }else if ((((pathTokens.length) > 4) && (!(pathTokens[3].equalsIgnoreCase(org.restheart.handlers.RequestContext._INDEXES)))) && (!(pathTokens[4].equalsIgnoreCase(org.restheart.handlers.RequestContext.BINARY_CONTENT)))) { type = org.restheart.handlers.RequestContext.TYPE.FILE; }else if (((pathTokens.length) == 5) && (pathTokens[4].equalsIgnoreCase(org.restheart.handlers.RequestContext.BINARY_CONTENT))) { type = org.restheart.handlers.RequestContext.TYPE.FILE; }else { type = org.restheart.handlers.RequestContext.TYPE.DOCUMENT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4204/buggy-version/src.main.java.org.restheart.handlers.RequestContext.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "c9095bb028e9b39d1cd43a5e0bbecd584724b32b", "Url": "https://api.github.com/repos/SoftInstigate/restheart", "Date": "2015-02-06T12:15:47Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outgoingLanesIndex + 1) >= (t.getLanes().length)) { return t; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1831/buggy-version/OsmAnd-java.src.net.osmand.router.RouteResultPreparation.java", "BodyUseAPI": [], "Fixed commit": "16563cef0dda3903c442a931b647297625430f3d", "Url": "https://api.github.com/repos/saiarcot895/Osmand", "Date": "2014-06-07T23:50:13Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (vooga.scroller.sprites.interfaces.IDoor.class.isAssignableFrom(sprite.getClass())) { setupTool((-i), sprite); }else { setupTool(i, sprite); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4588/buggy-version/src.vooga.scroller.level_editor.controllerSuite.ToolsManager.java", "BodyUseAPI": ["vooga.scroller.level_editor.controllerSuite.ToolsManager.setupTool(int,vooga.scroller.sprites.Sprite)", "vooga.scroller.level_editor.controllerSuite.ToolsManager.setupTool(int,vooga.scroller.sprites.Sprite)"], "Fixed commit": "16676d4ce2409cc848315a5035b56aba108a80ad", "Url": "https://api.github.com/repos/duke-compsci308-spring2013/vooga", "Date": "2013-04-28T01:27:52Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.php.lang.psi.elements.FunctionReference.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (parent instanceof com.jetbrains.php.lang.psi.elements.impl.UnaryExpressionImpl) { final com.intellij.psi.PsiElement operation = ((com.jetbrains.php.lang.psi.elements.impl.UnaryExpressionImpl) (parent)).getOperation(); if ((null != operation) && ((com.jetbrains.php.lang.lexer.PhpTokenTypes.opSILENCE) == (operation.getNode().getElementType()))) { parent = parent.getParent(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2420/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.debug.ForgottenDebugOutputInspector.java", "BodyUseAPI": ["com.intellij.psi.PsiElement.getParent()"], "Fixed commit": "becee4eb39e5d0c5f3a19d88c0d26ddf207b91c3", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2016-11-03T15:12:26Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bottomCollapsibleActionBar.getState().equals(BottomCollapsibleActionBar.appBarState.EXPANDED)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/488/buggy-version/app.src.main.java.coordinatorlayout.sliding.ismaelvayra.slidingcoordinatorlayout.behaviors.AppBarLayoutSnapBehavior.java", "BodyUseAPI": [], "Fixed commit": "1a6db0776d669a267b7c8ec2ced38e5332c362a3", "Url": "https://api.github.com/repos/ismaelvayraglbnt/bottom_panel_test", "Date": "2015-12-16T20:39:18Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Blocks[i].idEu.equals(9)) { modelParameters = (((((modelParameters + (model.param.get(j))) + \"=\") + \"init_\") + (Blocks[i].GraphicalNumber.toString())) + \", \") + \"initType = Modelica.Blocks.Types.Init.InitialOutput\"; }else { modelParameters = (((modelParameters + (model.param.get(j))) + \"=\") + \"init_\") + (Blocks[i].GraphicalNumber.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1750/buggy-version/EU2Mod_MB.src.main.java.itesla.converter.ModelicaModel.java", "BodyUseAPI": ["Blocks[i].GraphicalNumber.toString()", "Blocks[i].GraphicalNumber.toString()"], "Fixed commit": "715798b07326e6eccdcdf16ccc5e460bc01076a7", "Url": "https://api.github.com/repos/machadosaia/ipst", "Date": "2016-12-16T14:42:31Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((aqiCity != null) && (!(aqiCity.isEmpty()))) { AQICities.put(id, aqiCity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/558/buggy-version/src.main.java.cn.seddat.openapi.weather.AQIClientService.java", "BodyUseAPI": [], "Fixed commit": "e6cebeb9567dc1ba57f8927f45e34e0167cc0ffd", "Url": "https://api.github.com/repos/gengmzh/openapi", "Date": "2014-02-10T14:25:33Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((player.get()) == null) && (isRequired())) throw new name.richardson.james.bukkit.utilities.argument.InvalidArgumentException(name.richardson.james.bukkit.utilities.argument.OnlinePlayerArgument.bundle.getString(\"no-longer-online\"), null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6135/buggy-version/src.main.java.name.richardson.james.bukkit.utilities.argument.OnlinePlayerArgument.java", "BodyUseAPI": [], "Fixed commit": "b76088b8420baf940baef2d5816bf652bf92c959", "Url": "https://api.github.com/repos/grandwazir/BukkitUtilities", "Date": "2013-06-22T19:08:48Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (provider.usesNoHostLinks()) { link = (provider.getBaseUrl()) + link; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6747/buggy-version/src.main.java.bookproject.scraper.impl.HtmlUnitScraper.java", "BodyUseAPI": ["bookproject.scraper.impl.BookInfoProvider.getBaseUrl()"], "Fixed commit": "19bd5464d6ab72c3b537e86fcfd7ad37d5ecff97", "Url": "https://api.github.com/repos/yannisf/bookproject", "Date": "2017-11-26T15:08:32Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.channels.FileChannel.transferTo(long,long,java.nio.channels.WritableByteChannel)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (written > 0) { transfered += written; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2788/buggy-version/transport.src.main.java.io.netty.channel.DefaultFileRegion.java", "BodyUseAPI": [], "Fixed commit": "91fa66b3d01f77c2751d4dfc07778c2932bfddd1", "Url": "https://api.github.com/repos/netty/netty", "Date": "2013-05-29T12:02:13Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trajectory) != null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4930/buggy-version/core.engine-core.src.main.java.ead.engine.core.gameobjects.effects.MoveSceneElementGO.java", "BodyUseAPI": [], "Fixed commit": "e17f1001fbef456df26e15aedd4cfab392e75f32", "Url": "https://api.github.com/repos/e-ucm/eadventure", "Date": "2013-04-12T11:37:37Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((trajectory) != null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4930/buggy-version/core.engine-core.src.main.java.ead.engine.core.gameobjects.effects.MoveSceneElementGO.java", "BodyUseAPI": [], "Fixed commit": "e17f1001fbef456df26e15aedd4cfab392e75f32", "Url": "https://api.github.com/repos/e-ucm/eadventure", "Date": "2013-04-12T11:37:37Z"},
{"Line": "=>3035", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.normalize()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((path.startsWith(getJavaHome())) || (path.startsWith(java.nio.file.Paths.get(java.lang.System.getProperty(Capsule.PROP_JAVA_HOME))))) return path;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2486/buggy-version/capsule.src.main.java.Capsule.java", "BodyUseAPI": [], "Fixed commit": "30186d38b2ddc0505c2d35b1e722656a70120680", "Url": "https://api.github.com/repos/puniverse/capsule", "Date": "2015-01-29T20:34:37Z"},
{"Line": "=>2869", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.startsWith(java.nio.file.Paths.get(java.lang.System.getProperty(Capsule.PROP_JAVA_HOME)))) p = Capsule.move(p, currentJavaHome, getJavaHome());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2486/buggy-version/capsule.src.main.java.Capsule.java", "BodyUseAPI": ["Capsule.move(java.nio.file.Path,java.nio.file.Path,java.nio.file.Path)"], "Fixed commit": "30186d38b2ddc0505c2d35b1e722656a70120680", "Url": "https://api.github.com/repos/puniverse/capsule", "Date": "2015-01-29T20:34:37Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasDictionary) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7804/buggy-version/app.src.main.java.lv.luhmirin.wordlookup.wrapper.LookupWrapper.java", "BodyUseAPI": [], "Fixed commit": "073b97fbb0d9f5a0ddd02b93b858501c8dc848bd", "Url": "https://api.github.com/repos/siga111/WordLookup", "Date": "2016-09-22T17:37:46Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((sd != null) && ((sd.getValue()) != null)) list.add(new hadoop08.util.StringDouble(sd.getString(), sd.getValue()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7858/buggy-version/Hadoop08.src.hadoop08.code.profession.ProfessionIndexMapred.java", "BodyUseAPI": ["java.util.List<hadoop08.util.StringDouble>.add(hadoop08.util.StringDouble)", "hadoop08.util.StringDouble.getString()", "hadoop08.util.StringDouble.getValue()"], "Fixed commit": "7b0406edf38b83e221e3c8c5005938d6e5a2f621", "Url": "https://api.github.com/repos/gekonwi/brandeis.big_data", "Date": "2014-10-23T22:39:15Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (file.isDirectory()) org.apache.commons.io.FileUtils.deleteDirectory(file); else file.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2990/buggy-version/com.genericworkflownodes.knime.node_generator.src.com.genericworkflownodes.knime.nodegeneration.NodeGenerator.java", "BodyUseAPI": [], "Fixed commit": "146e308830a2ce9a4c6972399a83d657ff7618f3", "Url": "https://api.github.com/repos/genericworkflownodes/GenericKnimeNodes", "Date": "2013-01-17T09:40:52Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(s)) { return '#'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6214/buggy-version/PreferencesManager.src.fr.simon.marquis.preferencesmanager.model.AppEntry.java", "BodyUseAPI": [], "Fixed commit": "cedb1a35b8f62bb4c23c6cece3b9a1266d5e5498", "Url": "https://api.github.com/repos/SimonMarquis/Android-PreferencesManager", "Date": "2013-09-11T17:22:45Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Character.toUpperCase(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((c >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z'))) { return c; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6214/buggy-version/PreferencesManager.src.fr.simon.marquis.preferencesmanager.model.AppEntry.java", "BodyUseAPI": [], "Fixed commit": "cedb1a35b8f62bb4c23c6cece3b9a1266d5e5498", "Url": "https://api.github.com/repos/SimonMarquis/Android-PreferencesManager", "Date": "2013-09-11T17:22:45Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getHandleContaining(x, y)) != null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8959/buggy-version/ui.src.main.java.com.kotcrab.vis.ui.widget.MultiSplitPane.java", "BodyUseAPI": [], "Fixed commit": "7682e0a1647add1fb26a271e90536d81d99d5a82", "Url": "https://api.github.com/repos/jojorabbit/vis-editor", "Date": "2017-04-14T08:45:46Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.FROYO)) proton.inject.state.StateManager.sDispatchers.put(java.lang.CharSequence[].class, charSequenceArrayDispatcher);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8119/buggy-version/core.src.proton.inject.state.StateManager.java", "BodyUseAPI": [], "Fixed commit": "f6900654d3e8daaa5a4c25d37011c3008c9be16f", "Url": "https://api.github.com/repos/KeithYokoma/proton", "Date": "2013-04-17T03:31:39Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(message.isRadio())) { bitOutputStream.writeBits(((adf.agent.communication.standard.bundle.StandardMessage) (message)).getTTL(), SIZE_TTL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1613/buggy-version/src.main.java.adf.agent.communication.standard.StandardCommunicationModule.java", "BodyUseAPI": [], "Fixed commit": "0d1044652e855410aec944c54ffbd5801a494047", "Url": "https://api.github.com/repos/RCRS-ADF/core", "Date": "2017-02-13T05:37:57Z"},
{"Line": "=>667", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minecraftDataFile.isDirectory()) { java.io.File dataFile = new java.io.File(minecraftDataFile, fileName); if (!(dataFile.exists())) { return null; } try { return new java.io.FileInputStream(dataFile); } catch (java.io.FileNotFoundException e) { return null; } }else { try { java.util.jar.JarFile jf = new java.util.jar.JarFile(minecraftDataFile); java.util.zip.ZipEntry zipEntry = jf.getEntry(fileName); if (zipEntry == null) { return null; } return jf.getInputStream(zipEntry); } catch (java.io.IOException e) { java.lang.System.out.println(e.toString()); return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/951/buggy-version/src.com.apocalyptech.minecraft.xray.MineCraftEnvironment.java", "BodyUseAPI": [], "Fixed commit": "76e6be872902909dc732553c5c33378f9d8eb64c", "Url": "https://api.github.com/repos/apocalyptech/minecraftxray", "Date": "2011-06-22T14:16:16Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<cz.muni.fi.publishsubscribe.countingtree.Subscription, cz.muni.fi.publishsubscribe.countingtree.Predicate>.get(cz.muni.fi.publishsubscribe.countingtree.Subscription)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (predicate.getSubscriptions().isEmpty()) { matcher.removePredicate(predicate); predicates.remove(predicate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5531/buggy-version/counting-tree.src.main.java.cz.muni.fi.publishsubscribe.countingtree.CountingTree.java", "BodyUseAPI": ["cz.muni.fi.publishsubscribe.countingtree.FilterMatcher.removePredicate(cz.muni.fi.publishsubscribe.countingtree.Predicate)", "java.util.Map<cz.muni.fi.publishsubscribe.countingtree.Predicate, cz.muni.fi.publishsubscribe.countingtree.Predicate>.remove(cz.muni.fi.publishsubscribe.countingtree.Predicate)"], "Fixed commit": "db2b288e9033d08c709c3656082c4457060f19d3", "Url": "https://api.github.com/repos/ngmon/ngmon-pub-sub", "Date": "2013-04-07T17:38:13Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((caches.get(cacheName)) != null) { throw new javax.cache.CacheException(((\"Cache \" + cacheName) + \" already exists\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6231/buggy-version/cache-ri-impl.src.main.java.javax.cache.implementation.RICacheManager.java", "BodyUseAPI": [], "Fixed commit": "e19c2a886343c5784072f8d556ef0a086be80e69", "Url": "https://api.github.com/repos/jsr107/RI", "Date": "2011-10-28T05:28:12Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResultSize()) == null) { setMaxPageNumber(1); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6731/buggy-version/src.main.java.nc.mairie.gestionagent.process.OePaginable.java", "BodyUseAPI": [], "Fixed commit": "22c0a4bcf4816d5c936aa758215305f515d238fe", "Url": "https://api.github.com/repos/DSI-Ville-Noumea/sirh", "Date": "2017-09-14T00:49:24Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Deque<java.lang.Integer>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (topRingFromPeg1 == null) { com.dmytrobr.recursion.HanoiTower.moveRing(pegs, peg2, peg1, result); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/251/buggy-version/src.main.java.com.dmytrobr.recursion.HanoiTower.java", "BodyUseAPI": [], "Fixed commit": "95215008ef6057c213f14da0062b077a34466cf1", "Url": "https://api.github.com/repos/dmytrobr/algorithm-tasks", "Date": "2017-01-06T02:27:45Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (json == null) throw new org.kairosdb.core.http.rest.BeanValidationException(new org.kairosdb.core.http.rest.QueryParser.SimpleConstraintViolation(\"query json\", \"must not be null or empty\"), \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5791/buggy-version/src.main.java.org.kairosdb.core.http.rest.MetricsResource.java", "BodyUseAPI": [], "Fixed commit": "ee5280f2d28fe39b29766f4d37b72d9501b57548", "Url": "https://api.github.com/repos/kairosdb/kairosdb", "Date": "2016-08-29T02:46:42Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((frame.getContentPane().getComponentCount()) != 0) { if ((barChartPanel) != null) { frame.getContentPane().remove(barChartPanel); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5488/buggy-version/src.popupmessages.PredictionCenter.java", "BodyUseAPI": ["javax.swing.JFrame.getContentPane()", "java.awt.Container.remove(org.jfree.chart.ChartPanel)"], "Fixed commit": "e6fae09ed86df62ed256cc18c7249985e4747b10", "Url": "https://api.github.com/repos/Investor-PAL/Investor-PAL", "Date": "2016-05-08T22:29:34Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((collection.getHtmlDescription()) != null) { description = getStringFromHTMLString(collection.getHtmlDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6255/buggy-version/android.src.main.java.com.reactnativeshopify.RNShopifyModule.java", "BodyUseAPI": ["com.reactnativeshopify.RNShopifyModule.9.getStringFromHTMLString(collection.getHtmlDescription())", "com.reactnativeshopify.Collection.getHtmlDescription()"], "Fixed commit": "3bd1386267a4a69e0b0df016284222f535870df1", "Url": "https://api.github.com/repos/ksumit7604/react-native-shopify", "Date": "2017-09-06T08:39:58Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.reactnativeshopify.Collection>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((collection.getHtmlDescription()) != null) { description = getStringFromHTMLString(collection.getHtmlDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6255/buggy-version/android.src.main.java.com.reactnativeshopify.RNShopifyModule.java", "BodyUseAPI": ["com.reactnativeshopify.Collection.getHtmlDescription()", "com.reactnativeshopify.RNShopifyModule.10.getStringFromHTMLString(collection.getHtmlDescription())"], "Fixed commit": "3bd1386267a4a69e0b0df016284222f535870df1", "Url": "https://api.github.com/repos/ksumit7604/react-native-shopify", "Date": "2017-09-06T08:39:58Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/402/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "17967e2aee380ea49d7670b9adaa0bb01bff0349", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jdom2.Document.getRootElement()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (root.getAttribute(\"error\").getBooleanValue()) { channel.sendMessage((\"Query failed - \" + (root.getChild(\"error\").getChild(\"msg\").getText()))); }else { channel.sendMessage(\"Wolfram Alpha doesn't know how to interpret that!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3041/buggy-version/src.main.java.com.drtshock.willie.command.utility.WolframCommandHandler.java", "BodyUseAPI": ["org.pircbotx.Channel.sendMessage((\"Query failed - \" + (root.getChild(\"error\").getChild(\"msg\").getText())))", "root.getChild(\"error\").getChild(java.lang.String)", "root.getChild(\"error\").getChild(\"msg\").getText()", "org.jdom2.Element.getChild(java.lang.String)"], "Fixed commit": "7cf7697dce0837c47ad446da805c8de8e5d5229c", "Url": "https://api.github.com/repos/drtshock/Willie", "Date": "2014-05-21T02:58:50Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_char > '\u00d1') return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/4393/buggy-version/src.struct.TrieNode.java", "BodyUseAPI": [], "Fixed commit": "bba36320866ea4965e6eccab5974ad9e0bf16311", "Url": "https://api.github.com/repos/haeroe/WordIndex", "Date": "2012-05-21T12:53:29Z"},
{"Line": "=>2082", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m.isBridge()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1498/buggy-version/zkbind.src.org.zkoss.bind.impl.BinderImpl.java", "BodyUseAPI": [], "Fixed commit": "94780bf7503803a73b77c55da8c9dd5dbb894174", "Url": "https://api.github.com/repos/zkoss/zk", "Date": "2016-09-08T08:58:01Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 11) { a.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR); }else { a.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6260/buggy-version/src.de.blau.android.tasks.TransferTasks.java", "BodyUseAPI": [], "Fixed commit": "a5ccb3056f5fe3de6536a79434e925991e9e3a0f", "Url": "https://api.github.com/repos/MarcusWolschon/osmeditor4android", "Date": "2016-05-16T15:17:17Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (players.isEmpty()) { winnerText = \"All players are dead, game was a draw\"; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7941/buggy-version/game.src.no.ntnu.folk.game.gameplay.models.GameModel.java", "BodyUseAPI": [], "Fixed commit": "453d5d20f4784f0d6b07dcbf74f007a2331ec5a9", "Url": "https://api.github.com/repos/Daveiac/AndroidGameProject", "Date": "2014-03-28T16:25:17Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ebi.pride.proteomes.index.repository.StatsPage<uk.ac.ebi.pride.proteomes.index.model.PeptiForm>.getFieldStatsResult(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (priceStatResult != null) { totalCountStats = priceStatResult.getDistinctCount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5137/buggy-version/src.main.java.uk.ac.ebi.pride.proteomes.index.repository.ProteomesRepositoryImpl.java", "BodyUseAPI": ["uk.ac.ebi.pride.proteomes.index.repository.FieldStatsResult.getDistinctCount()"], "Fixed commit": "f8a4d8276e1e5d0aa51e2bd493488fd42523e759", "Url": "https://api.github.com/repos/PRIDE-Proteomes/index-service", "Date": "2015-05-01T09:11:35Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((releasePrefix) != null) { noRemoteTrackBranches = branchUtil.getRemoteBranchesWithPrefix(releasePrefix).isEmpty(); pulledAllReleaseBranches = branchUtil.areAllBranchesPulled(releasePrefix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5631/buggy-version/src.git4idea.gitflow.GitflowActions.java", "BodyUseAPI": [], "Fixed commit": "a348fbc62f1e0bd5d91328957fe7cf3b51aa52c6", "Url": "https://api.github.com/repos/OpherV/gitflow4idea", "Date": "2013-08-25T09:32:25Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((featurePrefix) != null) { noRemoteFeatureBranches = branchUtil.getRemoteBranchesWithPrefix(featurePrefix).isEmpty(); pulledAllFeatureBranches = branchUtil.areAllBranchesPulled(featurePrefix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5631/buggy-version/src.git4idea.gitflow.GitflowActions.java", "BodyUseAPI": [], "Fixed commit": "a348fbc62f1e0bd5d91328957fe7cf3b51aa52c6", "Url": "https://api.github.com/repos/OpherV/gitflow4idea", "Date": "2013-08-25T09:32:25Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dim < 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2113/buggy-version/workspace.MHS.src.model.MHSDistributed.java", "BodyUseAPI": [], "Fixed commit": "372fb5c37a3c0421228a1a2beb16969f12c16e70", "Url": "https://api.github.com/repos/Luke092/MHS_Project", "Date": "2017-04-04T11:54:14Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type != 0) { hqlQueryBuilder.append(\" AND ml.type = :type\"); parameterMap.put(\"type\", type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8761/buggy-version/dep-sandbox.src.main.java.com.wso2telco.services.dep.sandbox.dao.hibernate.HibernateLoggingDao.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,int)"], "Fixed commit": "500239c546550701048ec36afecb2f5eb8a59f50", "Url": "https://api.github.com/repos/Rajithkonara/sandbox-service", "Date": "2017-08-10T11:39:59Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.math.BigDecimal.compareTo(java.math.BigDecimal)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((nc < 0) && ((ex.getStatus().equals(\"MA\")) || (ex.getStatus().startsWith(\"+\")))) { jp.commasa.fx2.dto.Order order = new jp.commasa.fx2.dto.Order(ex.getSymbol(), pos.getAmount().multiply(java.math.BigDecimal.valueOf((-1))), ex.getTickNo()); result.add(order); pos.orderCount(1); }else if ((nc > 0) && ((ex.getStatus().equals(\"MA\")) || (ex.getStatus().startsWith(\"-\")))) { jp.commasa.fx2.dto.Order order = new jp.commasa.fx2.dto.Order(ex.getSymbol(), pos.getAmount().multiply(java.math.BigDecimal.valueOf((-1))), ex.getTickNo()); result.add(order); pos.orderCount(1); }else if (uniq && ((ex.getVolatility1()) >= (volatility.doubleValue()))) { if ((ex.getStatusCount()) > (bandwalk)) { if (\"+a3\".equals(ex.getStatus())) { if ((nowAmt.compareTo(maxamount)) < 0) { jp.commasa.fx2.dto.Order order = new jp.commasa.fx2.dto.Order(ex.getSymbol(), amount, ex.getTickNo()); result.add(order); pos.orderCount(1); } } if (\"-a3\".equals(ex.getStatus())) { if ((nowAmt.compareTo(maxamount.multiply(java.math.BigDecimal.valueOf((-1))))) > 0) { jp.commasa.fx2.dto.Order order = new jp.commasa.fx2.dto.Order(ex.getSymbol(), amount.multiply(java.math.BigDecimal.valueOf((-1))), ex.getTickNo()); result.add(order); pos.orderCount(1); } } }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/7514/buggy-version/src.main.java.jp.commasa.fx2.Algorithm.java", "BodyUseAPI": ["java.lang.String.equals(ex.getStatus())", "jp.commasa.fx2.dto.PriceEx.getVolatility1()", "jp.commasa.fx2.dto.PriceEx.getSymbol()", "jp.commasa.fx2.dto.PriceEx.getSymbol()", "jp.commasa.fx2.dto.PriceEx.getStatusCount()", "jp.commasa.fx2.dto.PriceEx.getTickNo()", "jp.commasa.fx2.dto.PriceEx.getStatus()", "jp.commasa.fx2.dto.PriceEx.getSymbol()", "jp.commasa.fx2.dto.PriceEx.getStatus()", "jp.commasa.fx2.dto.PriceEx.getStatus()", "jp.commasa.fx2.dto.PriceEx.getSymbol()", "jp.commasa.fx2.dto.PriceEx.getStatus()", "ex.getStatus().startsWith(java.lang.String)", "jp.commasa.fx2.dto.PriceEx.getTickNo()", "jp.commasa.fx2.dto.PriceEx.getTickNo()", "java.lang.String.equals(ex.getStatus())", "jp.commasa.fx2.dto.PriceEx.getTickNo()", "ex.getStatus().equals(java.lang.String)"], "Fixed commit": "ad3f53f071de199ac6a715528bd9ed46a0a1b092", "Url": "https://api.github.com/repos/commasa/fx2", "Date": "2016-05-03T14:45:36Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.phresco.pom.util.PomProcessor.getProperty(Constants.POM_PROP_KEY_VALIDATE_REPORT)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(validateReportUrl)) { java.net.URL sonarURL = new java.net.URL(frameworkUtil.getSonarURL()); url = sonarURL.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2182/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.rest.api.ParameterService.java", "BodyUseAPI": [], "Fixed commit": "5a06abb59f9418f9b38529a7b0d2130ca2854b35", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2013-11-06T11:41:17Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(basePath.endsWith(\"/\"))) && (!(basePath.endsWith(\"\\\\\")))) { basePath += \"\\\\\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8401/buggy-version/tw.com.citi.catalog.web.src.tw.com.citi.catalog.web.pages.JCS5100.java", "BodyUseAPI": [], "Fixed commit": "20445bf326260d9ea2eb52209eedf5cbb8c06297", "Url": "https://api.github.com/repos/IISI/catalog", "Date": "2011-09-08T04:19:26Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Util.restaurantes) == null) { br.usp.ime.bandex.Util.setMenuStrings(this, handler); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6811/buggy-version/app.src.main.java.br.usp.ime.bandex.MoreDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "bb132e56ec06db58319b8b9a2b4b79a0de3f7129", "Url": "https://api.github.com/repos/Bandex-usp/Bandex-App", "Date": "2015-10-21T23:25:44Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.opendaylight.ipsec.buffer.IPsecConnectionBuffer.getActiveByName(input.getName())) != null) { builder.setResult(\"conn already exist\"); }else { org.opendaylight.ipsec.buffer.IPsecConnectionBuffer.addActive(input.getName(), connection); builder.setResult(\"success\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6746/buggy-version/impl.src.main.java.org.opendaylight.ipsec.impl.IPsecImpl.java", "BodyUseAPI": ["org.opendaylight.ipsec.buffer.IPsecConnectionBuffer.addActive(input.getName(),org.opendaylight.ipsec.domain.IPsecConnection)", "org.opendaylight.ipsec.impl.ConnAddInput.getName()"], "Fixed commit": "4b3c2ad6147577b2cdbb53c9edcd79119d2befb8", "Url": "https://api.github.com/repos/linfx7/odl-ipsec", "Date": "2017-02-14T14:38:53Z"},
{"Line": "=>2270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["codehint.utils.EclipseUtils.getTypeAndLoadIfNeeded(java.lang.String,org.eclipse.jdt.debug.core.IJavaStackFrame,org.eclipse.jdt.debug.core.IJavaDebugTarget,codehint.exprgen.TypeCache)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (receiverType == null) receiverType = (expression == null ? stack.getThis() : expressionMaker.getExpressionValue(expression, curEffects)).getJavaType();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6017/buggy-version/codehint-plugin.src.codehint.exprgen.ExpressionGenerator.java", "BodyUseAPI": [], "Fixed commit": "91e428ef08c9c7d28b410997f26abf4d8192ac76", "Url": "https://api.github.com/repos/jgalenson/codehint", "Date": "2013-10-11T18:58:10Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["get().getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files != null) { for (java.io.File file : files) { model.addElement(file); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/3078/buggy-version/src.main.java.org.scijava.ui.swing.widget.SwingFileListWidget.java", "BodyUseAPI": [], "Fixed commit": "8bc67fb514a2258c3f64e9c82561eee236cc1fc5", "Url": "https://api.github.com/repos/imagejan/scijava-ui-swing", "Date": "2017-07-19T08:17:52Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.stream.Stream<java.lang.String>.collect(java.util.stream.Collector<java.lang.CharSequence, ?, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((res == null) || (res.trim().isEmpty())) { return null; }else { return res; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8177/buggy-version/src.photato.core.metadata.exif.ExifMetadata.java", "BodyUseAPI": [], "Fixed commit": "777bd4aa06a8fec495866b9dcb3651d2f7765222", "Url": "https://api.github.com/repos/trebonius0/Photato", "Date": "2017-04-08T17:16:29Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.memorygame.example.zoe.tp1_memorygame.Piece>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(piecesTurned.contains(piece1))) { if ((piecesTurned.size()) >= 4) { piecesTurned.remove(0); } piecesTurned.add(piece1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8011/buggy-version/TP1_memoryGame.app.src.main.java.com.memorygame.example.zoe.tp1_memorygame.GameActivity.java", "BodyUseAPI": ["java.util.List<com.memorygame.example.zoe.tp1_memorygame.Piece>.remove(int)", "java.util.List<com.memorygame.example.zoe.tp1_memorygame.Piece>.add(com.memorygame.example.zoe.tp1_memorygame.Piece)", "java.util.List<com.memorygame.example.zoe.tp1_memorygame.Piece>.size()"], "Fixed commit": "05164d2c63eaf9daaabb9d35203a4743356fd678", "Url": "https://api.github.com/repos/ChunPATHZhang/INF8405_TP", "Date": "2015-02-15T19:48:40Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.memorygame.example.zoe.tp1_memorygame.Piece>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(piecesTurned.contains(piece2))) { if ((piecesTurned.size()) >= 4) { piecesTurned.remove(0); } piecesTurned.add(piece2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8011/buggy-version/TP1_memoryGame.app.src.main.java.com.memorygame.example.zoe.tp1_memorygame.GameActivity.java", "BodyUseAPI": ["java.util.List<com.memorygame.example.zoe.tp1_memorygame.Piece>.add(com.memorygame.example.zoe.tp1_memorygame.Piece)", "java.util.List<com.memorygame.example.zoe.tp1_memorygame.Piece>.size()", "java.util.List<com.memorygame.example.zoe.tp1_memorygame.Piece>.remove(int)"], "Fixed commit": "05164d2c63eaf9daaabb9d35203a4743356fd678", "Url": "https://api.github.com/repos/ChunPATHZhang/INF8405_TP", "Date": "2015-02-15T19:48:40Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.createQuery(\"FROM com.iquestgroup.model.Book book inner join fetch book.author\").list()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((books != null) && (!(books.isEmpty()))) { resultList = new java.util.ArrayList(); for (java.lang.Object book : books) { resultList.add(((com.iquestgroup.model.Book) (book))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/641/buggy-version/database.src.main.java.com.iquestgroup.database.impl.DefaultBookDao.java", "BodyUseAPI": [], "Fixed commit": "d8715a3e0919717c137806a64ca16e86725bbb93", "Url": "https://api.github.com/repos/Stefan-Pamparau/OnlineBookStore", "Date": "2016-08-01T11:37:57Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["core.vgdl.VGDLFactory.GetInstance().requestFieldValueInt(core.vgdl.VGDLSprite,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (destinationId == (-1)) { java.lang.String[] className = this.getClass().getName().split(\"\\\\.\"); core.logging.Logger.getInstance().addMessage(new core.logging.Message(core.logging.Message.WARNING, ((((\"[\" + (className[((className.length) - 1)])) + \"] \") + sprite2) + \" doesn't have itype.\"))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1609/buggy-version/src.ontology.effects.binary.TeleportToExit.java", "BodyUseAPI": [], "Fixed commit": "1f51c65cc6895b44e3c05325a0886f834a0c1eb2", "Url": "https://api.github.com/repos/EssexUniversityMCTS/gvgai", "Date": "2017-04-01T05:29:39Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!sslErrorHandled) { view.clearSslPreferences(); handler.cancel(); fireExceptions(new java.io.IOException(error.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1362/buggy-version/BoxAndroidLibraryV2.src.com.box.boxandroidlibv2.views.OAuthWebView.java", "BodyUseAPI": [], "Fixed commit": "d988889f760700a15b3f3c3bb35894264dac2338", "Url": "https://api.github.com/repos/mobilesystems/box-android-sdk-v2", "Date": "2013-11-19T12:01:33Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tmp.startsWith(\"1_2\")) return de.unitygaming.bukkit.vsign.Version.v1_2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/906/buggy-version/src.main.java.de.unitygaming.bukkit.vsign.Version.java", "BodyUseAPI": [], "Fixed commit": "d7f2ab26900ca314da0da0da48f5d09a68f10668", "Url": "https://api.github.com/repos/FastFelix771/vSign-API", "Date": "2016-07-24T04:52:10Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tmp.startsWith(\"1_8\")) return de.unitygaming.bukkit.vsign.Version.v1_8;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/906/buggy-version/src.main.java.de.unitygaming.bukkit.vsign.Version.java", "BodyUseAPI": [], "Fixed commit": "d7f2ab26900ca314da0da0da48f5d09a68f10668", "Url": "https://api.github.com/repos/FastFelix771/vSign-API", "Date": "2016-07-24T04:52:10Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tmp.startsWith(\"1_3\")) return de.unitygaming.bukkit.vsign.Version.v1_3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/906/buggy-version/src.main.java.de.unitygaming.bukkit.vsign.Version.java", "BodyUseAPI": [], "Fixed commit": "d7f2ab26900ca314da0da0da48f5d09a68f10668", "Url": "https://api.github.com/repos/FastFelix771/vSign-API", "Date": "2016-07-24T04:52:10Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tmp.startsWith(\"1_9\")) return de.unitygaming.bukkit.vsign.Version.v1_9;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/906/buggy-version/src.main.java.de.unitygaming.bukkit.vsign.Version.java", "BodyUseAPI": [], "Fixed commit": "d7f2ab26900ca314da0da0da48f5d09a68f10668", "Url": "https://api.github.com/repos/FastFelix771/vSign-API", "Date": "2016-07-24T04:52:10Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tmp.startsWith(\"1_10\")) return de.unitygaming.bukkit.vsign.Version.v1_10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/906/buggy-version/src.main.java.de.unitygaming.bukkit.vsign.Version.java", "BodyUseAPI": [], "Fixed commit": "d7f2ab26900ca314da0da0da48f5d09a68f10668", "Url": "https://api.github.com/repos/FastFelix771/vSign-API", "Date": "2016-07-24T04:52:10Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tmp.startsWith(\"1_5\")) return de.unitygaming.bukkit.vsign.Version.v1_5;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/906/buggy-version/src.main.java.de.unitygaming.bukkit.vsign.Version.java", "BodyUseAPI": [], "Fixed commit": "d7f2ab26900ca314da0da0da48f5d09a68f10668", "Url": "https://api.github.com/repos/FastFelix771/vSign-API", "Date": "2016-07-24T04:52:10Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tmp.startsWith(\"1_6\")) return de.unitygaming.bukkit.vsign.Version.v1_6;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/906/buggy-version/src.main.java.de.unitygaming.bukkit.vsign.Version.java", "BodyUseAPI": [], "Fixed commit": "d7f2ab26900ca314da0da0da48f5d09a68f10668", "Url": "https://api.github.com/repos/FastFelix771/vSign-API", "Date": "2016-07-24T04:52:10Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tmp.startsWith(\"1_4\")) return de.unitygaming.bukkit.vsign.Version.v1_4;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/906/buggy-version/src.main.java.de.unitygaming.bukkit.vsign.Version.java", "BodyUseAPI": [], "Fixed commit": "d7f2ab26900ca314da0da0da48f5d09a68f10668", "Url": "https://api.github.com/repos/FastFelix771/vSign-API", "Date": "2016-07-24T04:52:10Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tmp.startsWith(\"1_7\")) return de.unitygaming.bukkit.vsign.Version.v1_7;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/906/buggy-version/src.main.java.de.unitygaming.bukkit.vsign.Version.java", "BodyUseAPI": [], "Fixed commit": "d7f2ab26900ca314da0da0da48f5d09a68f10668", "Url": "https://api.github.com/repos/FastFelix771/vSign-API", "Date": "2016-07-24T04:52:10Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tmp.startsWith(\"1_1\")) return de.unitygaming.bukkit.vsign.Version.v1_1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/906/buggy-version/src.main.java.de.unitygaming.bukkit.vsign.Version.java", "BodyUseAPI": [], "Fixed commit": "d7f2ab26900ca314da0da0da48f5d09a68f10668", "Url": "https://api.github.com/repos/FastFelix771/vSign-API", "Date": "2016-07-24T04:52:10Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!ignoreMissing) { java.lang.System.out.println((\"Exception occurred while copying:\" + (err.getMessage()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6963/buggy-version/com.modelmetrics.util.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "552a5cc66c870c90accc5a7f9f53d39ba5f8d944", "Url": "https://api.github.com/repos/paulroth3d/customSalesforceAntTasks", "Date": "2013-08-30T22:02:52Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { type = ((com.thomasdh.roosterpgplus.MainActivity.PlaceholderFragment.Type) (savedInstanceState.getSerializable(\"fragmentType\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1648/buggy-version/RoosterPGPlus.src.main.java.com.thomasdh.roosterpgplus.MainActivity.java", "BodyUseAPI": ["android.os.Bundle.getSerializable(java.lang.String)"], "Fixed commit": "d405810f2d8e5a4831d53884971ccb1c09875183", "Url": "https://api.github.com/repos/ThomasdenH/RoosterPGPlus", "Date": "2013-12-30T14:03:08Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(rssArrayList.contains(rssUrl))) && (!(containsLink(rssUrl)))) { int idInList = controller.ScheduleController.get().addToSchedule(rssUrl, rssUrl.getUpdateRate()); rssUrl.setIdInTaskList(idInList); rssArrayList.add(rssUrl); util.Logger.get().addMessage((\"Rss Link added to the Task Scheduler \" + idInList)); }else { util.Logger.get().addMessage(\"Rss Link is already in list\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8261/buggy-version/src.controller.RSSListController.java", "BodyUseAPI": ["java.util.ArrayList<models.RssUrl>.add(models.RssUrl)", "models.RssUrl.setIdInTaskList(int)", "controller.ScheduleController.get().addToSchedule(models.RssUrl,rssUrl.getUpdateRate())", "models.RssUrl.getUpdateRate()"], "Fixed commit": "b724885af7ae0d29068964c47f3009bf42c10c7e", "Url": "https://api.github.com/repos/Serwerty/RSSFeedParser", "Date": "2017-06-25T17:14:31Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null == (mask.getUserAddedVolumes())) { mask.setUserAddedVolumes(new com.emc.storageos.db.client.model.StringMap()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1544/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.xtremio.XtremIOExportOperations.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.ExportMask.setUserAddedVolumes(com.emc.storageos.db.client.model.StringMap)"], "Fixed commit": "54af7e17f91de9c4a1346a42794547ae17c12481", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-02-03T20:35:14Z"},
{"Line": "=>1542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskCompleter.isCompleted()) { com.emc.storageos.volumecontroller.impl.smis.vmax.VmaxExportOperations._log.info(\"{} addInitiators END...\", (storage == null ? null : storage.getSerialNumber())); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/1544/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.smis.vmax.VmaxExportOperations.java", "BodyUseAPI": [], "Fixed commit": "54af7e17f91de9c4a1346a42794547ae17c12481", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-02-03T20:35:14Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pratilipi.getState()) != (com.pratilipi.common.type.PratilipiState.PUBLISHED)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/2682/buggy-version/src.main.java.com.pratilipi.api.impl.author.AuthorProcessApi.java", "BodyUseAPI": [], "Fixed commit": "18b0bb1559abe53d5cbef16b75928829209d397d", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-03-29T14:00:01Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.isHidden())) { files.add(f.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/9143/buggy-version/src.main.com.google.code.tvrenamer.view.UIStarter.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "5fc51b8258687873b3c1447f1da790221aefc879", "Url": "https://api.github.com/repos/tvrenamer/tvrenamer", "Date": "2011-03-21T20:49:42Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (PrefsActivity.STORAGE_OPTION_EXTERNAL.equals(storageOption)) { storagePref.setValue(storagePref.getEntryValues()[1].toString()); }else { storagePref.setValue(storageOption); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/6479/buggy-version/src.org.digitalcampus.oppia.fragments.PreferencesFragment.java", "BodyUseAPI": ["android.preference.ListPreference.setValue(java.lang.String)"], "Fixed commit": "4db2b901de92b6cca7a02aeb4be65c0b6ffffdd5", "Url": "https://api.github.com/repos/instrat-nigeria/instrat-oppia-mobile", "Date": "2015-11-20T14:23:35Z"},
{"Line": "=>800", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHeartbeatMonitor) == null) { log(\"Restarting the transport\", LogLevel.Information); startTransport(mKeepAliveData, true); }else { log(\"Stopping Heartbeat monitor\", LogLevel.Verbose); mHeartbeatMonitor.stop(); log(\"Restarting the transport\", LogLevel.Information); startTransport(mHeartbeatMonitor.getKeepAliveData(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8658/buggy-version/signalr-client-sdk.src.main.java.microsoft.aspnet.signalr.client.Connection.java", "BodyUseAPI": [], "Fixed commit": "d98f94b7b7f6e2f33c40b1dad0059da41359d95b", "Url": "https://api.github.com/repos/ZyllemJenkins/java-client", "Date": "2017-07-18T06:01:22Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck.findExpressionBlockInForLoop(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (block == null) { result = (literalFor.getLineNo()) == (literalFor.getLastChild().getLineNo()); }else { result = (literalFor.getLineNo()) == (block.getLineNo()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5874/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()"], "Fixed commit": "aaf606ee0268f140c3694baba4c13b03f7839522", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2015-10-09T00:29:57Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentCounts.getCounts()) == 0) { countMap.remove(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/5264/buggy-version/aggregator.src.main.java.com.haines.ml.rce.aggregator.Aggregator.java", "BodyUseAPI": [], "Fixed commit": "210112d8ac68fbb56883a38b96f4a0000f2752ac", "Url": "https://api.github.com/repos/andrew-haines/RCE", "Date": "2014-06-14T11:39:22Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (data != null) { this.data = new java.util.HashMap<org.investovator.core.data.api.utils.TradingDataAttribute, java.lang.Float>(); for (org.investovator.core.data.api.utils.TradingDataAttribute attr : data.keySet()) { this.data.put(attr, java.lang.Float.parseFloat(data.get(attr))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/8266/buggy-version/src.main.java.org.investovator.dataplaybackengine.events.StockUpdateEvent.java", "BodyUseAPI": [], "Fixed commit": "f1bd21e06ee65fee056b6d27e892cf9c2b625621", "Url": "https://api.github.com/repos/investovator/investovator-dataplaybackengine", "Date": "2013-10-27T11:44:49Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.canarymod.api.world.World.getBlockAt(loc.getBlockX(),loc.getBlockY(),loc.getBlockZ())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (block.isAir()) { block = world.getBlockAt(loc.getBlockX(), ((loc.getBlockY()) + 1), loc.getBlockZ()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V76/848/buggy-version/src.main.java.net.canarymod.commandsys.commands.warp.SpawnCommand.java", "BodyUseAPI": [], "Fixed commit": "f07e5f6aaea13fbd14e08ab444474807ff4b9e38", "Url": "https://api.github.com/repos/CanaryModTeam/CanaryLib", "Date": "2014-10-25T14:13:27Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (newEndDate != null) { if ((Logic.tasks.get(taskIndex).getStartDate()) != null) { if ((Logic.tasks.get(taskIndex).getStartDate().compareTo(newEndDate)) > 0) { return new main.logic.command.InvalidCommand(\"Make sure your start date precedes your end date!\"); } } }else { return new main.logic.command.InvalidCommand(\"You can't edit just the end date for this task!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7455/buggy-version/src.main.parser.CommandParser.java", "BodyUseAPI": ["Logic.tasks.get(taskIndex).getStartDate().compareTo(java.util.Date)"], "Fixed commit": "f6719b9a357721ca08e715706f118c983158d017", "Url": "https://api.github.com/repos/cs2103aug2015-t14-1j/main", "Date": "2015-11-03T10:23:54Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (newStartDate != null) { if ((Logic.tasks.get(taskIndex).getEndDate()) != null) { if ((newStartDate.compareTo(Logic.tasks.get(taskIndex).getEndDate())) > 0) { return new main.logic.command.InvalidCommand(\"Make sure your start date precedes your end date!\"); } }else { return new main.logic.command.InvalidCommand(\"You can't edit just the start date for this task!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7455/buggy-version/src.main.parser.CommandParser.java", "BodyUseAPI": ["java.util.Date.compareTo(Logic.tasks.get(taskIndex).getEndDate())"], "Fixed commit": "f6719b9a357721ca08e715706f118c983158d017", "Url": "https://api.github.com/repos/cs2103aug2015-t14-1j/main", "Date": "2015-11-03T10:23:54Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getMessage().getContent().substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (text.equals(\"horses\")) i = 11;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2275/buggy-version/src.main.net.vilborg.Robohorse.java", "BodyUseAPI": [], "Fixed commit": "2a6ff5c19c9e2188d74c3dd21635f8c3fede3083", "Url": "https://api.github.com/repos/Jaculabilis/robohorse", "Date": "2016-12-31T02:44:27Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(def.hasTimeZoneName())) { return 0L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6737/buggy-version/inst.src.main.java.com.barchart.feed.inst.provider2.InstrumentImpl.java", "BodyUseAPI": [], "Fixed commit": "cef23842821bd3ff5a2c4bb145c3b090f1c3e219", "Url": "https://api.github.com/repos/barchart/barchart-feed", "Date": "2013-07-18T15:05:22Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["def.getCalendar().getLifeTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((i.getTimeFinish()) == 0) { return com.barchart.util.value.api.TimeInterval.NULL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6737/buggy-version/inst.src.main.java.com.barchart.feed.inst.provider2.InstrumentImpl.java", "BodyUseAPI": [], "Fixed commit": "cef23842821bd3ff5a2c4bb145c3b090f1c3e219", "Url": "https://api.github.com/repos/barchart/barchart-feed", "Date": "2013-07-18T15:05:22Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(def.getCalendar().hasLifeTime())) { return com.barchart.util.value.api.TimeInterval.NULL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6737/buggy-version/inst.src.main.java.com.barchart.feed.inst.provider2.InstrumentImpl.java", "BodyUseAPI": [], "Fixed commit": "cef23842821bd3ff5a2c4bb145c3b090f1c3e219", "Url": "https://api.github.com/repos/barchart/barchart-feed", "Date": "2013-07-18T15:05:22Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((def.getCalendar().getMarketHoursCount()) == 0) { return com.barchart.util.value.api.Schedule.NULL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6737/buggy-version/inst.src.main.java.com.barchart.feed.inst.provider2.InstrumentImpl.java", "BodyUseAPI": [], "Fixed commit": "cef23842821bd3ff5a2c4bb145c3b090f1c3e219", "Url": "https://api.github.com/repos/barchart/barchart-feed", "Date": "2013-07-18T15:05:22Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pair.getValue0().equals(\"Accept\")) { hasAccept = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/937/buggy-version/src.main.java.org.poker.irc.HttpUtils.java", "BodyUseAPI": [], "Fixed commit": "e042ee997e1ce84e6f08317796b2021d83e82d92", "Url": "https://api.github.com/repos/spew/pokerbot", "Date": "2014-01-19T15:34:38Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hasAccept) { httpGet.addHeader(\"Accept\", \"application/json\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/937/buggy-version/src.main.java.org.poker.irc.HttpUtils.java", "BodyUseAPI": [], "Fixed commit": "e042ee997e1ce84e6f08317796b2021d83e82d92", "Url": "https://api.github.com/repos/spew/pokerbot", "Date": "2014-01-19T15:34:38Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (project.isAccessible()) { for (org.eclipse.core.resources.IMarker marker : project.findMarkers(SonarCorePlugin.MARKER_ID, true, IResource.DEPTH_INFINITE)) { marker.setAttribute(IMarker.SEVERITY, newSeverity); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5157/buggy-version/org.sonar.ide.eclipse.core.src.org.sonar.ide.eclipse.core.internal.markers.MarkerUtils.java", "BodyUseAPI": ["org.eclipse.core.resources.IProject.findMarkers(SonarCorePlugin.MARKER_ID,boolean,IResource.DEPTH_INFINITE)"], "Fixed commit": "8b51b403c0fc6af3f32ff6bb58cbcbfa8c792309", "Url": "https://api.github.com/repos/SonarSource/sonar-eclipse", "Date": "2012-12-11T16:52:12Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((boolean) (query.getContextValue(\"b\", false)))) { java.lang.System.out.println(\"***NEW QUERY***\"); while (true) { java.lang.System.out.println(\"SLEEPING\"); java.lang.Thread.sleep(10000); } }else if (((boolean) (query.getContextValue(\"a\", false)))) { return javax.ws.rs.core.Response.ok(\"hi\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3985/buggy-version/server.src.main.java.io.druid.server.QueryResource.java", "BodyUseAPI": ["io.druid.query.Query.getContextValue(java.lang.String,boolean)"], "Fixed commit": "82d623ada7f4f9bed7548467ea88bcd76b647191", "Url": "https://api.github.com/repos/metamx/druid", "Date": "2014-07-25T23:35:55Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Bitmap.getWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((x + w) > width) { w = w - ((x + w) - width); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7436/buggy-version/src.android.VideoFaces.java", "BodyUseAPI": [], "Fixed commit": "46f5dab0e204928f93913155122da699507f9839", "Url": "https://api.github.com/repos/gecsbernat/cordova-video-faces-plugin", "Date": "2017-08-28T08:58:54Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Bitmap.getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((y + h) > height) { h = h - ((y + h) - height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7436/buggy-version/src.android.VideoFaces.java", "BodyUseAPI": [], "Fixed commit": "46f5dab0e204928f93913155122da699507f9839", "Url": "https://api.github.com/repos/gecsbernat/cordova-video-faces-plugin", "Date": "2017-08-28T08:58:54Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newZoom > maxZoomWidth) { camera.zoom = maxZoomWidth; }else if (newZoom > maxZoomHeight) { camera.zoom = maxZoomHeight; }else { camera.zoom *= zoomFactor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/207/buggy-version/rts-prototype.core.src.com.divergentthoughtsgames.rts.graphics.CameraController.java", "BodyUseAPI": [], "Fixed commit": "4424ce2e7abf097c951db8859b935be6e3bf855f", "Url": "https://api.github.com/repos/ChristopherCanfield/Train-Prototype", "Date": "2014-06-07T22:48:20Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cell.isBlocked()) this.setRoadBlock();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8313/buggy-version/src.views.RoadPanel.java", "BodyUseAPI": [], "Fixed commit": "d76f3bc5dbfe575e212836e853a80c3ba4fa68e0", "Url": "https://api.github.com/repos/wujm2007/Monopoly", "Date": "2016-06-08T12:44:36Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.foyt.fni.illusion.IllusionEventController.findIllusionEventByUrlName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (illusionEvent != null) { if (org.apache.commons.lang3.StringUtils.endsWith(templateName, \".jade\")) { templateName = org.apache.commons.lang3.StringUtils.substring(templateName, 0, (-5)); } fi.foyt.fni.persistence.model.illusion.IllusionEventTemplate template = illusionEventController.findEventTemplate(illusionEvent, templateName); if (template != null) { return template; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3092/buggy-version/webapp.src.main.java.fi.foyt.fni.illusion.IllusionJadeTemplateLoader.java", "BodyUseAPI": ["fi.foyt.fni.illusion.IllusionEventController.findEventTemplate(fi.foyt.fni.persistence.model.illusion.IllusionEvent,java.lang.String)"], "Fixed commit": "8afe72b0e73e576531f5fe17c94ae078c44cf98f", "Url": "https://api.github.com/repos/foyt/fni", "Date": "2015-03-10T15:14:20Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logout) { ((cl.sidan.clac.MainActivity) (getActivity())).logOut(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/770/buggy-version/app.src.main.java.cl.sidan.clac.fragments.FragmentChangePassword.java", "BodyUseAPI": [], "Fixed commit": "b76d99e68c03438004a90771a32a8f1da6b54954", "Url": "https://api.github.com/repos/gabrielsson/Clac", "Date": "2016-11-08T18:53:58Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(usedSlots.add(a.getSlot()))) { throw new java.lang.IllegalStateException(((\"used slot \" + (a.getSlot())) + \" twice\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2097/buggy-version/vbox-core.src.main.java.com.alexecollins.vbox.core.task.Create.java", "BodyUseAPI": ["VirtualBox.Machine.Hardware.Network.Adapter.getSlot()"], "Fixed commit": "d71c13b3c0a8158a4fbedb99e68e6f61d2d02d7c", "Url": "https://api.github.com/repos/alexec/maven-vbox-plugin", "Date": "2012-11-09T09:16:55Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((res_num) < 0) || ((res_num) > (java.lang.Integer.MAX_VALUE))) { result.setText(R.string.error3); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3914/buggy-version/app.src.main.java.com.example.roy.contact.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7873f539ee798fe6a57f021bf65570ed9acea9af", "Url": "https://api.github.com/repos/rroyGit/IntCalc", "Date": "2017-06-21T02:53:02Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((checkItems.size()) > 0) && ((currentItem) < 0)) { currentItem = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1038/buggy-version/src.papillon.models.Check.java", "BodyUseAPI": [], "Fixed commit": "f1c41efaf40d33b0aba16850d2dd7cdf32152c04", "Url": "https://api.github.com/repos/chescaumeno/Papillon", "Date": "2015-11-30T01:30:36Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.util.Log.isLoggable(com.astifter.circatextutils.CTU.TAG, Log.DEBUG)) android.util.Log.d(com.astifter.circatextutils.CTU.TAG, ((\"fetching data with Wearable.DataApi.getDataItem(\" + (uri.toString())) + \")\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5750/buggy-version/CircaTextUtils.src.main.java.com.astifter.circatextutils.CTU.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,((\"fetching data with Wearable.DataApi.getDataItem(\" + (uri.toString())) + \")\"))"], "Fixed commit": "f9f418df3db4c221a700ce2e831f7899ba8fff26", "Url": "https://api.github.com/repos/astifter/CircaTextAW", "Date": "2015-11-10T05:33:57Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mCamera)) { mCamera.stopCamera(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8963/buggy-version/eviacam.src.main.java.com.crea_si.eviacam.common.CoreEngine.java", "BodyUseAPI": [], "Fixed commit": "0a5df158a5110df8038694cba12f2b15b06a5559", "Url": "https://api.github.com/repos/cmauri/eva_facial_mouse", "Date": "2017-05-18T12:42:04Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((valgrindReport.getAllErrors()) != null) { for (org.jenkinsci.plugins.valgrind.model.ValgrindError error : valgrindReport.getAllErrors()) { if ((error.getStacktrace()) != null) sourceGrabber.grabFromStacktrace(error.getStacktrace()); if ((error.getAuxiliaryData()) != null) { for (org.jenkinsci.plugins.valgrind.model.ValgrindAuxiliary aux : error.getAuxiliaryData()) { if ((aux.getStacktrace()) != null) sourceGrabber.grabFromStacktrace(aux.getStacktrace()); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6083/buggy-version/src.main.java.org.jenkinsci.plugins.valgrind.ValgrindPublisher.java", "BodyUseAPI": ["org.jenkinsci.plugins.valgrind.model.ValgrindReport.getAllErrors()"], "Fixed commit": "2272b12ec662afb0a158e64c33b5e289534fc1bf", "Url": "https://api.github.com/repos/jenkinsci/valgrind-plugin", "Date": "2012-09-24T16:12:11Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.iish.hsn.invoer.service.akte.OverlijdensAkteFlowState.getOvlknd()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((ovlknd.getGgmovl()) == null) || (ovlknd.getGgmovl().trim().isEmpty())) { ovlknd.setGgmovl(refGbh.getNameMunicipality()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7069/buggy-version/src.main.java.org.iish.hsn.invoer.service.akte.OverlijdensAkteService.java", "BodyUseAPI": ["org.iish.hsn.invoer.domain.invoer.ovl.Ovlknd.setGgmovl(refGbh.getNameMunicipality())"], "Fixed commit": "879728cee95679e524d097e938edb4865a2d6f72", "Url": "https://api.github.com/repos/IISH/hsn-invoer", "Date": "2015-07-27T08:11:40Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getURLs()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((urLs.length) > 0) { for (java.net.URL url : urLs) { files.add(new java.io.File(url.getPath())); } }else if (loader.getClass().getName().equals(\"org.jboss.mx.loading.UnifiedClassLoader3\")) { try { urLs = org.unidal.helper.Reflects.forMethod().invokeMethod(loader, \"getAllURLs\"); for (java.net.URL url : urLs) { files.add(new java.io.File(url.getPath())); } } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/670/buggy-version/java-fragment.src.main.java.org.unidal.script.java.JavaFragmentCompiler.java", "BodyUseAPI": [], "Fixed commit": "cb10c1d0c030eb1e6be1f716181fd4a173d16955", "Url": "https://api.github.com/repos/unidal/frameworks", "Date": "2014-01-21T02:57:06Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.edittxt_menge)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (lEdit != null) { android.text.TextWatcher lTextWatcher = ((android.text.TextWatcher) (lEdit.getTag())); if (lTextWatcher != null) { lEdit.removeTextChangedListener(lTextWatcher); } lEdit.setText(java.lang.String.valueOf(lListItem.getQuantity())); lEdit.addTextChangedListener(lListItem); lEdit.setTag(lListItem); }else { android.util.Log.e(\"AddArticleCursorTreeAdapter.getChildView\", \"edittxt_menge not found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/478/buggy-version/src.com.wbh.loewe.shoppinglist.cursoradapter.AddArticleCursorTreeAdapter.java", "BodyUseAPI": ["android.widget.EditText.removeTextChangedListener(android.text.TextWatcher)", "android.widget.EditText.getTag()", "android.widget.EditText.addTextChangedListener(com.wbh.loewe.shoppinglist.listitem.AddArticleChildListItem)", "android.widget.EditText.setText(java.lang.String)", "android.widget.EditText.setTag(com.wbh.loewe.shoppinglist.listitem.AddArticleChildListItem)"], "Fixed commit": "81a41c2c59c76c8d0cad4eb33f2f612dded93611", "Url": "https://api.github.com/repos/wbh-loewe/ShoppingList", "Date": "2011-12-21T18:36:34Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dependantTasks != null) { for (final com.kota.stratagem.ejbserviceclient.domain.TaskRepresentor taskRepresentor : dependantTasks) { dependants.add(this.taskService.read(taskRepresentor.getId())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/438/buggy-version/strat-ejbservice.src.main.java.com.kota.stratagem.ejbservice.protocol.TaskProtocolImpl.java", "BodyUseAPI": [], "Fixed commit": "5ff358f1ab76ee7aef5c34b3747f14b14af4e398", "Url": "https://api.github.com/repos/kovta/Project-Isochrone", "Date": "2017-07-21T18:58:25Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (assignedTeams != null) { for (final com.kota.stratagem.ejbserviceclient.domain.TeamRepresentor team : assignedTeams) { teams.add(this.teamService.read(team.getId())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/438/buggy-version/strat-ejbservice.src.main.java.com.kota.stratagem.ejbservice.protocol.TaskProtocolImpl.java", "BodyUseAPI": [], "Fixed commit": "5ff358f1ab76ee7aef5c34b3747f14b14af4e398", "Url": "https://api.github.com/repos/kovta/Project-Isochrone", "Date": "2017-07-21T18:58:25Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (impediments != null) { for (final com.kota.stratagem.ejbserviceclient.domain.ImpedimentRepresentor impediment : impediments) { taskImpediments.add(this.impedimentService.read(impediment.getId())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/438/buggy-version/strat-ejbservice.src.main.java.com.kota.stratagem.ejbservice.protocol.TaskProtocolImpl.java", "BodyUseAPI": [], "Fixed commit": "5ff358f1ab76ee7aef5c34b3747f14b14af4e398", "Url": "https://api.github.com/repos/kovta/Project-Isochrone", "Date": "2017-07-21T18:58:25Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (assignedUsers != null) { for (final com.kota.stratagem.ejbserviceclient.domain.AppUserRepresentor user : assignedUsers) { users.add(this.appUserService.read(user.getId())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/438/buggy-version/strat-ejbservice.src.main.java.com.kota.stratagem.ejbservice.protocol.TaskProtocolImpl.java", "BodyUseAPI": [], "Fixed commit": "5ff358f1ab76ee7aef5c34b3747f14b14af4e398", "Url": "https://api.github.com/repos/kovta/Project-Isochrone", "Date": "2017-07-21T18:58:25Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskDependencies != null) { for (final com.kota.stratagem.ejbserviceclient.domain.TaskRepresentor taskRepresentor : taskDependencies) { dependants.add(this.taskService.read(taskRepresentor.getId())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/438/buggy-version/strat-ejbservice.src.main.java.com.kota.stratagem.ejbservice.protocol.TaskProtocolImpl.java", "BodyUseAPI": [], "Fixed commit": "5ff358f1ab76ee7aef5c34b3747f14b14af4e398", "Url": "https://api.github.com/repos/kovta/Project-Isochrone", "Date": "2017-07-21T18:58:25Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (weight == 0.0) weight = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3068/buggy-version/src.org.jLOAF.reasoning.WeightedKNN.java", "BodyUseAPI": [], "Fixed commit": "bef13c2e8fbaa30b951a0de2b3355511de3fd0d2", "Url": "https://api.github.com/repos/sachag678/JLOAF", "Date": "2017-04-20T19:21:25Z"},
{"Line": "=>804", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stage.getSynchronizedState()) == (StageState.INITED)) { stage.taskScheduler.start(); org.apache.tajo.querymaster.Stage.InitAndRequestContainer.allocateContainers(stage); }else { if ((stage.getTotalScheduledObjectsCount()) == (stage.getCompletedTaskCount())) { stage.eventHandler.handle(new org.apache.tajo.querymaster.StageEvent(stage.getId(), StageEventType.SQ_STAGE_COMPLETED)); }else { stage.eventHandler.handle(new org.apache.tajo.querymaster.StageEvent(stage.getId(), StageEventType.SQ_KILL)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4667/buggy-version/tajo-core.src.main.java.org.apache.tajo.querymaster.Stage.java", "BodyUseAPI": ["org.apache.tajo.querymaster.Stage.getCompletedTaskCount()", "org.apache.hadoop.yarn.event.EventHandler<org.apache.hadoop.yarn.event.Event>.handle(org.apache.tajo.querymaster.StageEvent)", "org.apache.tajo.querymaster.Stage.InitAndRequestContainer.allocateContainers(org.apache.tajo.querymaster.Stage)", "org.apache.tajo.querymaster.Stage.getId()", "org.apache.tajo.querymaster.Stage.getTotalScheduledObjectsCount()", "org.apache.hadoop.yarn.event.EventHandler<org.apache.hadoop.yarn.event.Event>.handle(org.apache.tajo.querymaster.StageEvent)", "org.apache.tajo.querymaster.AbstractTaskScheduler.start()", "org.apache.tajo.querymaster.Stage.getId()"], "Fixed commit": "f9ecff6efb671ab6ae69da71a1d1321a2fa01594", "Url": "https://api.github.com/repos/jinossy/tajo", "Date": "2015-02-02T03:30:11Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (getfrom.exists()) for (java.io.File path : getfrom.listFiles()) loadFile(path);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/588/buggy-version/src.quickfacs.gui.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "be679969374eca73404fef37c75a7abd9295023c", "Url": "https://api.github.com/repos/mahogny/facsanadu", "Date": "2015-03-26T14:24:27Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.hm.cs.projektstudium.findlunch.webapp.repositories.PushTokenRepository.findByUserId(authenticatedUser.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(oldToken.equals(pushToken))) { pushTokenRepository.delete(oldToken.getId()); edu.hm.cs.projektstudium.findlunch.webapp.model.PushToken newToken = new edu.hm.cs.projektstudium.findlunch.webapp.model.PushToken(); newToken.setUser_id(authenticatedUser.getId()); newToken.setFcm_token(pushToken); pushTokenRepository.save(newToken); return new org.springframework.http.ResponseEntity(1, org.springframework.http.HttpStatus.OK); }else { return new org.springframework.http.ResponseEntity(2, org.springframework.http.HttpStatus.ALREADY_REPORTED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5399/buggy-version/webapp.src.main.java.edu.hm.cs.projektstudium.findlunch.webapp.controller.rest.TokenRestContoller.java", "BodyUseAPI": ["edu.hm.cs.projektstudium.findlunch.webapp.repositories.PushTokenRepository.delete(oldToken.getId())", "edu.hm.cs.projektstudium.findlunch.webapp.model.PushToken.setFcm_token(java.lang.String)", "edu.hm.cs.projektstudium.findlunch.webapp.model.PushToken.getId()"], "Fixed commit": "e947604ac29516d6caa853fe0ec922be4fc1af21", "Url": "https://api.github.com/repos/fr4gstar/findlunch", "Date": "2017-05-14T21:56:20Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((profile) != null) { greeting.setText((((getString(R.string.hello_user)) + \" \") + (profile.getFirstName()))); }else { greeting.setText(getString(R.string.hello_user)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5354/buggy-version/app.src.main.java.com.cs371m.theselfiestudio.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c6f90be708abfa9f5883ac9e743f2016d5d01b79", "Url": "https://api.github.com/repos/dmonroy93/TheSelfieStudio", "Date": "2015-04-24T21:20:12Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (conn != null) { conn.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8501/buggy-version/src.main.java.com.trendrr.nsq.lookup.NSQLookupDynMapImpl.java", "BodyUseAPI": ["java.net.HttpURLConnection.disconnect()"], "Fixed commit": "b4020522be28b56a8f9bfff5efb3551bd785cfd4", "Url": "https://api.github.com/repos/dustismo/TrendrrNSQClient", "Date": "2014-02-18T10:06:56Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listID) != (ListElementHelper.COMPLETED_LIST_ID)) { listID = reminder.getListId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8759/buggy-version/IForgotThat.src.com.ehpefi.iforgotthat.DetailedReminderActivity.java", "BodyUseAPI": [], "Fixed commit": "db9cf1328a9bb943e19e0812c7621bc932659fbd", "Url": "https://api.github.com/repos/evenh/IForgotThat", "Date": "2014-05-10T00:53:02Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDestinationValues[i]) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8189/buggy-version/vumeterlibrary.src.main.java.io.gresse.hugo.vumeterlibrary.VuMeterView.java", "BodyUseAPI": [], "Fixed commit": "48ac18fe38897c37db5c49f89ea36e1d2836d8e2", "Url": "https://api.github.com/repos/HugoGresse/AndroidVuMeter", "Date": "2015-12-17T14:54:27Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(areSettingsLoaded())) { loadSettingsIntoMemory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/114/buggy-version/runit-settings-service.src.main.java.szczepanski.gerard.runit.settings.service.loader.impl.PropertySettingsLoader.java", "BodyUseAPI": [], "Fixed commit": "a7d818ae08712c15d8fa01714a854052c5e8a980", "Url": "https://api.github.com/repos/gerardszczepanski/runit", "Date": "2017-01-20T19:08:41Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((saveFolder) == null) { saveToggle.setSelected(false); saveButton.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/818/buggy-version/src.org.wandora.application.tools.iot.PingerPanel.java", "BodyUseAPI": [], "Fixed commit": "d2176938c4e58a40ed7ac06f0e1ed832be3b60ad", "Url": "https://api.github.com/repos/wandora-team/wandora", "Date": "2015-05-04T09:35:55Z"},
{"Line": "=>751", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JCheckBox.isSelected()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selected && ((saveFolder) == null)) openFileChooser();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/818/buggy-version/src.org.wandora.application.tools.iot.PingerPanel.java", "BodyUseAPI": [], "Fixed commit": "d2176938c4e58a40ed7ac06f0e1ed832be3b60ad", "Url": "https://api.github.com/repos/wandora-team/wandora", "Date": "2015-05-04T09:35:55Z"},
{"Line": "=>1042", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (change > (java.lang.Math.PI)) { change = ((float) (change - (2 * (java.lang.Math.PI)))); }else if (change < (-(java.lang.Math.PI))) { change = ((float) ((2 * (java.lang.Math.PI)) + change)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7456/buggy-version/library.src.main.java.com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView.java", "BodyUseAPI": [], "Fixed commit": "7d116d23e372880c6472a7249f35403188a5df61", "Url": "https://api.github.com/repos/NairVish/subsampling-scale-image-view", "Date": "2017-11-04T01:00:33Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getClientSyncMetaData().getApplicationToken()) != null) { org.kaaproject.kaa.server.operations.service.akka.messages.core.endpoint.SyncRequestMessage.LOG.debug(\"Setting application token, as it was null: {}\", request.getClientSyncMetaData().getApplicationToken()); diff.getClientSyncMetaData().setApplicationToken(request.getClientSyncMetaData().getApplicationToken()); }else { org.kaaproject.kaa.server.operations.service.akka.messages.core.endpoint.SyncRequestMessage.LOG.trace(\"[{}] Application token is null for request\", request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3777/buggy-version/server.operations.src.main.java.org.kaaproject.kaa.server.operations.service.akka.messages.core.endpoint.SyncRequestMessage.java", "BodyUseAPI": ["request.getClientSyncMetaData().getApplicationToken()", "org.slf4j.Logger.trace(java.lang.String,org.kaaproject.kaa.server.sync.ClientSync)", "org.slf4j.Logger.debug(java.lang.String,request.getClientSyncMetaData().getApplicationToken())", "org.kaaproject.kaa.server.sync.ClientSync.getClientSyncMetaData()", "diff.getClientSyncMetaData().setApplicationToken(request.getClientSyncMetaData().getApplicationToken())", "org.kaaproject.kaa.server.sync.ClientSync.getClientSyncMetaData()", "request.getClientSyncMetaData().getApplicationToken()"], "Fixed commit": "6316d4fd10ebbb5e78c9f09e0808a9605b158847", "Url": "https://api.github.com/repos/kaaproject/kaa", "Date": "2015-04-10T18:24:26Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(code.isEmpty())) { if (isLoggedIn()) { controllers.AuthorizationDropboxApi.addDropboxCredential(code); }else { controllers.AuthorizationDropboxApi.loginWithDropbox(code); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2864/buggy-version/app.controllers.AuthorizationDropboxApi.java", "BodyUseAPI": ["controllers.AuthorizationDropboxApi.loginWithDropbox(java.lang.String)", "controllers.AuthorizationDropboxApi.addDropboxCredential(java.lang.String)"], "Fixed commit": "907e5669c741922124d3157a23cc8f77f99129ae", "Url": "https://api.github.com/repos/vanstr/cp-core", "Date": "2014-11-08T23:39:41Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ownAddressSring) == \"unknown\") { ownAddressSring = dsdvService.getDeviceAddress().toString(); this.setTitle((\"Own device address: \" + (ownAddressSring))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2596/buggy-version/src.de.htw.ChatFrame.java", "BodyUseAPI": ["de.htw.ChatFrame.setTitle(java.lang.String)"], "Fixed commit": "574bc68bd517a8b58963d5cacc09956c5a737567", "Url": "https://api.github.com/repos/timb-stud/DSDV", "Date": "2012-06-13T11:39:10Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((expenseDto.getDocumentDto()) != null) && ((expenseDto.getDocumentDto().getOriginalFileName()) != null)) { updateDocument(expenseDto); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5599/buggy-version/src.main.java.au.com.mason.expensemanager.service.TransactionService.java", "BodyUseAPI": ["au.com.mason.expensemanager.service.TransactionService<T, V, D>.updateDocument(T)"], "Fixed commit": "95072502e2ababa6ca1ff9ed3e921c7e62f85dfd", "Url": "https://api.github.com/repos/cjmason8/expenseManager", "Date": "2017-11-13T10:32:00Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.java.model.Plugin.getGroupId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (groupId != null) if ((groupId.equals(group)) && (i != j)) { isRepeted = true; repeated.add(plug); repeated.add(plugin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4143/buggy-version/src.main.java.engine.ProjectAnalyser.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "1e87eb72b5e115331808c1b24e48d8718901e553", "Url": "https://api.github.com/repos/gisselFdez/DockerFile-Generator", "Date": "2016-02-08T21:58:31Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.java.model.Plugin.getGroupId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (groupId != null) if (!(groupId.equals(\"org.apache.maven.plugins\"))) { for (int j = 0; j < (this.plugins.size()); j++) { main.java.model.Plugin plug = this.plugins.get(j); java.lang.String group = plug.getGroupId(); if (groupId != null) if ((groupId.equals(group)) && (i != j)) { isRepeted = true; repeated.add(plug); repeated.add(plugin); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4143/buggy-version/src.main.java.engine.ProjectAnalyser.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "1e87eb72b5e115331808c1b24e48d8718901e553", "Url": "https://api.github.com/repos/gisselFdez/DockerFile-Generator", "Date": "2016-02-08T21:58:31Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((eElement.getElementsByTagName(\"groupId\").getLength()) != 0) { plugin.setGroupId(eElement.getElementsByTagName(\"groupId\").item(0).getTextContent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4143/buggy-version/src.main.java.engine.ProjectAnalyser.java", "BodyUseAPI": ["org.w3c.dom.NodeList.item(int)", "main.java.model.Plugin.setGroupId(java.lang.String)", "org.w3c.dom.Node.getTextContent()", "org.w3c.dom.Element.getElementsByTagName(java.lang.String)"], "Fixed commit": "1e87eb72b5e115331808c1b24e48d8718901e553", "Url": "https://api.github.com/repos/gisselFdez/DockerFile-Generator", "Date": "2016-02-08T21:58:31Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(owner.getWorld)) == (location.getWorld())) remove(); else if ((owner.getLocation().distanceSquared(center)) > ((com.sucy.trap.enchant.Trap.MAX_DISTANCE) * (com.sucy.trap.enchant.Trap.MAX_DISTANCE))) remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2535/buggy-version/EnchantTrapPack.src.com.sucy.trap.enchant.Trap.java", "BodyUseAPI": ["owner.getLocation().distanceSquared(org.bukkit.Location)", "org.bukkit.entity.Player.getLocation()"], "Fixed commit": "72824489a37e8abd800c8281d6cf57548fb28b2c", "Url": "https://api.github.com/repos/huynhqtienvtag/EnchantmentPackPlus", "Date": "2017-06-22T08:13:18Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((PP5_11.Pig.accumulativeComputerPoints) <= 100) { playGame.playerRoll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/286/buggy-version/Tyler.PP5_11.Pig.java", "BodyUseAPI": [], "Fixed commit": "7c44cd793e24e6edbe1a538aa7808e30280338b5", "Url": "https://api.github.com/repos/sylsr/Chapter5StudentProjects", "Date": "2015-02-24T16:47:04Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((PP5_11.Pig.accumulativePlayerPoints) <= 100) { playGame.computerRoll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/286/buggy-version/Tyler.PP5_11.Pig.java", "BodyUseAPI": [], "Fixed commit": "7c44cd793e24e6edbe1a538aa7808e30280338b5", "Url": "https://api.github.com/repos/sylsr/Chapter5StudentProjects", "Date": "2015-02-24T16:47:04Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.github.jleahey.minicraft.GraphicsHandler.single) == null) { if (com.github.jleahey.minicraft.GraphicsHandler.awtMode) { com.github.jleahey.minicraft.GraphicsHandler.single = new com.github.jleahey.minicraft.awtgraphics.AwtGraphicsHandler(); }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/368/buggy-version/src.com.github.jleahey.minicraft.GraphicsHandler.java", "BodyUseAPI": [], "Fixed commit": "909b674cb1daf476e1d61353edc6b9df64935d38", "Url": "https://api.github.com/repos/jleahey/Minicraft", "Date": "2012-12-20T21:20:43Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3294/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "6d384e5d8e6073ff96b6038b7f316b92fc6c49fd", "Url": "https://api.github.com/repos/openmicroscopy/bioformats", "Date": "2014-04-17T13:24:33Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataRoot.endsWith(\"/\")) { dataRoot = dataRoot.substring(0, ((dataRoot.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3065/buggy-version/src.main.java.com.ibm.stocator.fs.common.StocatorPath.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "0c1bc62d961980f87666865ee9f7570ed501ab7f", "Url": "https://api.github.com/repos/CODAIT/stocator", "Date": "2017-02-16T06:37:02Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fileURLAsString.indexOf(\".jar!\")) != (-1)) { java.lang.String tillJar = fileURLAsString.substring(0, fileURLAsString.indexOf(\".jar!\")); fileURLAsString = (tillJar.substring(4, tillJar.lastIndexOf(\"/\"))) + \"/CKeditor4/editor.html\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5280/buggy-version/plugins.ru.runa.gpd.src.ru.runa.gpd.ui.dialog.EditPropertiesForRegulationsDialog.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "87b9cd653e0b91a3ad121e8decf8f086d6362134", "Url": "https://api.github.com/repos/ARyaskov/runawfe-devstudio", "Date": "2017-01-28T18:46:27Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sabras.coll8.helper.CollectConvert.newCollection(strs).isEmpty()) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3720/buggy-version/sabras-coll8.src.main.java.sabras.coll8.helper.StringJoin.java", "BodyUseAPI": [], "Fixed commit": "608589818440d244b97b5e1414ce5356fe449dc6", "Url": "https://api.github.com/repos/mwbuda/sabras-coll8", "Date": "2015-05-17T19:59:45Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mState) == (State.TIMER_RUNNING)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1302/buggy-version/android-timer.src.main.java.dev.xesam.android.toolbox.timer.CountTimer.java", "BodyUseAPI": [], "Fixed commit": "50d199651856e06b5bc740347b8ad455db118c90", "Url": "https://api.github.com/repos/xesam/AndroidTimer", "Date": "2016-12-12T08:24:12Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mState) == (State.TIMER_RUNNING)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1302/buggy-version/android-timer.src.main.java.dev.xesam.android.toolbox.timer.CountDownTimer.java", "BodyUseAPI": [], "Fixed commit": "50d199651856e06b5bc740347b8ad455db118c90", "Url": "https://api.github.com/repos/xesam/AndroidTimer", "Date": "2016-12-12T08:24:12Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldObj.isRemote)) { MinecraftForge.EVENT_BUS.post(new ic2.api.energy.event.EnergyTileUnloadEvent(this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/888/buggy-version/src.main.java.mimickal.mc.dynamo.common.TileEntityDynamo.java", "BodyUseAPI": [], "Fixed commit": "ae91c00625f7b7ca27efdc1bb00d59b1280223c3", "Url": "https://api.github.com/repos/Mimickal/DynamoGenerator", "Date": "2017-06-11T02:29:05Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getDefaultValue()) != null) && (!(getDefaultValue().isEmpty()))) { super.doLoadDefault(); updateFontStyle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8245/buggy-version/src.main.java.it.albertus.jface.preference.field.DefaultComboFieldEditor.java", "BodyUseAPI": [], "Fixed commit": "c091419820edddb5fa97ea9c0022d8f7d8c7f303", "Url": "https://api.github.com/repos/Albertus82/JFaceUtils", "Date": "2016-09-29T20:21:26Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFixedHeight) { mLabelBoxArea.setText((\"Area Box: \" + (java.lang.String.valueOf(((mMaxHeight) * maxWidth))))); }else { mLabelBoxArea.setText((\"Area Box: \" + (java.lang.String.valueOf((maxHeight * maxWidth))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1807/buggy-version/src.nl.lkeijzer.Gui.InfoPanel.java", "BodyUseAPI": [], "Fixed commit": "dbc1c5e1a584bc3ee68d7a5ac636f94c84206d92", "Url": "https://api.github.com/repos/Lau1406/2DStackingVisualizer", "Date": "2017-06-14T08:41:03Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rectangle.isRotated()) { if (((rectangle.getHeight()) + (rectangle.getBottomLeft().getX())) > maxWidth) { maxWidth = ((int) ((rectangle.getHeight()) + (rectangle.getBottomLeft().getX()))); } if (((rectangle.getWidth()) + (rectangle.getBottomLeft().getY())) > maxHeight) { maxHeight = ((int) ((rectangle.getWidth()) + (rectangle.getBottomLeft().getY()))); } }else { if (((rectangle.getWidth()) + (rectangle.getBottomLeft().getX())) > maxWidth) { maxWidth = ((int) ((rectangle.getWidth()) + (rectangle.getBottomLeft().getX()))); } if (((rectangle.getHeight()) + (rectangle.getBottomLeft().getY())) > maxHeight) { maxHeight = ((int) ((rectangle.getHeight()) + (rectangle.getBottomLeft().getY()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1807/buggy-version/src.nl.lkeijzer.Gui.InfoPanel.java", "BodyUseAPI": ["java.awt.Rectangle.getBottomLeft()", "java.awt.Rectangle.getHeight()", "java.awt.Rectangle.getBottomLeft()", "java.awt.Rectangle.getBottomLeft()", "java.awt.Rectangle.getBottomLeft()", "rectangle.getBottomLeft().getX()", "rectangle.getBottomLeft().getX()", "java.awt.Rectangle.getWidth()", "java.awt.Rectangle.getWidth()", "rectangle.getBottomLeft().getY()", "java.awt.Rectangle.getBottomLeft()", "rectangle.getBottomLeft().getY()", "java.awt.Rectangle.getBottomLeft()", "java.awt.Rectangle.getWidth()", "java.awt.Rectangle.getBottomLeft()", "java.awt.Rectangle.getHeight()", "rectangle.getBottomLeft().getY()", "rectangle.getBottomLeft().getX()", "java.awt.Rectangle.getWidth()", "java.awt.Rectangle.getHeight()", "java.awt.Rectangle.getHeight()", "java.awt.Rectangle.getBottomLeft()", "rectangle.getBottomLeft().getY()", "rectangle.getBottomLeft().getX()"], "Fixed commit": "dbc1c5e1a584bc3ee68d7a5ac636f94c84206d92", "Url": "https://api.github.com/repos/Lau1406/2DStackingVisualizer", "Date": "2017-06-14T08:41:03Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFixedHeight) { mLabelPercentageArea.setText(((\"Percentage Area: \" + (java.lang.String.valueOf(java.lang.Math.round(((((double) (minArea)) / ((double) ((mMaxHeight) * maxWidth))) * 100))))) + \"%\")); }else { mLabelPercentageArea.setText(((\"Percentage Area: \" + (java.lang.String.valueOf(java.lang.Math.round(((((double) (minArea)) / ((double) (maxHeight * maxWidth))) * 100))))) + \"%\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1807/buggy-version/src.nl.lkeijzer.Gui.InfoPanel.java", "BodyUseAPI": [], "Fixed commit": "dbc1c5e1a584bc3ee68d7a5ac636f94c84206d92", "Url": "https://api.github.com/repos/Lau1406/2DStackingVisualizer", "Date": "2017-06-14T08:41:03Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((teamNames) != null) { for (com.skandiacup.splinedevelopment.skandiacup.domain.TournamentTeam team : teamNames) { if ((team.getName().toLowerCase().contains(filterText.getText().toString().toLowerCase())) && (team.getCountryCode().equals(countryPicker.getSelectedItem().toString()))) { if ((sexPicker.getSelectedItemPosition()) == 0) { filteredTeams.add(team); } for (com.skandiacup.splinedevelopment.skandiacup.domain.MatchClass mc : matchClasses) { if (((team.getMatchClassId().equals(mc.getId())) && ((sexPicker.getSelectedItemPosition()) == 1)) && (mc.getGender().equals(\"M\"))) { filteredTeams.add(team); }else if (((team.getMatchClassId().equals(mc.getId())) && ((sexPicker.getSelectedItemPosition()) == 2)) && (mc.getGender().equals(\"F\"))) { filteredTeams.add(team); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3707/buggy-version/Skandiacup.app.src.main.java.com.skandiacup.splinedevelopment.skandiacup.MainViews.Tournament.TournamentActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "c029f3550926c185c48bcc869e63f450a45443ed", "Url": "https://api.github.com/repos/SplineDevelopment/Skandiacup-Android", "Date": "2015-12-25T12:56:41Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (mojarraMinorVersion > 2) { namespacedViewStateSupported = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1506/buggy-version/bridge-impl.src.main.java.com.liferay.faces.bridge.renderkit.bridge.internal.ResponseWriterBridgeCompat_2_0_Impl.java", "BodyUseAPI": [], "Fixed commit": "654542db4e140f5249f8a4ec699c65a54f796112", "Url": "https://api.github.com/repos/vsingleton/liferay-faces-bridge-impl", "Date": "2016-07-11T23:25:35Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (mojarraMajorVersion > 2) { namespacedViewStateSupported = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1506/buggy-version/bridge-impl.src.main.java.com.liferay.faces.bridge.renderkit.bridge.internal.ResponseWriterBridgeCompat_2_0_Impl.java", "BodyUseAPI": [], "Fixed commit": "654542db4e140f5249f8a4ec699c65a54f796112", "Url": "https://api.github.com/repos/vsingleton/liferay-faces-bridge-impl", "Date": "2016-07-11T23:25:35Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((btController) != null) { if ((btController.getState()) == (BTController.STATE_NONE)) { btController.start(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6006/buggy-version/app.src.main.java.com.fomo.bluechat.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1196914526a5ed18751f0ee0e2088ebf3aed41d8", "Url": "https://api.github.com/repos/Lego1st/BlueChat", "Date": "2017-09-13T08:10:49Z"},
{"Line": "=>1055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2799/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "0013da2307905692cb43227b5a4a5f93a6a1ee85", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.pluginmap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (operator == null) { comboBox.setEnabled(false); comboBox2.setEnabled(false); }else { beast.evolution.alignment.Taxon set = operator.m_taxonsetInput.get(); if (set != null) { int i = taxonSetIDs.indexOf(set.getID()); comboBox2.setSelectedIndex(i); } comboBox2.addActionListener(new java.awt.event.ActionListener() { @java.lang.Override public void actionPerformed(java.awt.event.ActionEvent e) { selectTaxonSet(e); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3370/buggy-version/src.beast.app.beauti.TipDatesInputEditor.java", "BodyUseAPI": ["operator.m_taxonsetInput.get()"], "Fixed commit": "5dbc268cfe108e8dffb2fb399afb66b30a38457f", "Url": "https://api.github.com/repos/CompEvol/beast2", "Date": "2013-12-02T03:00:54Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((encodedJson == null) || (encodedJson.isEmpty())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2551/buggy-version/okapi-common.src.main.java.org.folio.okapi.common.OkapiToken.java", "BodyUseAPI": [], "Fixed commit": "c11a3f7a018b7c30cbf40c18c423eb9da5195cde", "Url": "https://api.github.com/repos/folio-org/okapi", "Date": "2016-10-25T10:11:08Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.knappsack.swagger4springweb.parser.ApiListing>.get(apiListing.resourcePath())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (existingApiListing != null) { apiListing = com.knappsack.swagger4springweb.util.ApiListingUtil.mergeApiListing(existingApiListing, apiListing); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8330/buggy-version/src.main.java.com.knappsack.swagger4springweb.parser.ApiParserImpl.java", "BodyUseAPI": ["com.knappsack.swagger4springweb.util.ApiListingUtil.mergeApiListing(com.knappsack.swagger4springweb.parser.ApiListing,com.knappsack.swagger4springweb.parser.ApiListing)"], "Fixed commit": "575467d14fb96f3d07ae67fa303e280f83fa31ef", "Url": "https://api.github.com/repos/wkennedy/swagger4spring-web", "Date": "2014-03-27T14:55:22Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.stuxcrystal.configuration.node.Node<?>.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (children == null) return new java.util.ArrayList(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7505/buggy-version/src.main.java.net.stuxcrystal.configuration.types.ListType.java", "BodyUseAPI": [], "Fixed commit": "d03a494e273a6b4a1cd0f29f422620e3a4ddb16f", "Url": "https://api.github.com/repos/StuxSoftware/SimpleDev", "Date": "2013-09-20T11:21:30Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((artefactAnn != null) && (artefactAnn.value().equals(org.grails.core.artefact.DomainClassArtefactHandler.TYPE))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6318/buggy-version/grails-core.src.main.groovy.org.grails.core.artefact.DomainClassArtefactHandler.java", "BodyUseAPI": [], "Fixed commit": "904b018a36cbbbb6b5bf4d80460f39a23c4d07bb", "Url": "https://api.github.com/repos/vaskoz/grails-core", "Date": "2016-01-14T10:27:26Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (compare == 0) { compare = destination.getLocation().compareTo(other.getDestination().getLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3501/buggy-version/CircuitPlugin.src.org.workcraft.plugins.circuit.routing.basic.RouterConnection.java", "BodyUseAPI": [], "Fixed commit": "d3fbd754bffe1ddd68f0c8ea1689740f4197e426", "Url": "https://api.github.com/repos/sgaflv/workcraft", "Date": "2017-04-13T22:30:48Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.endReached) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3275/buggy-version/modules.org.restlet.src.org.restlet.engine.io.PipeStream.java", "BodyUseAPI": [], "Fixed commit": "8c610510d3f093f2bab7e8657593b600c470a394", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-05-12T23:20:18Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sipSessionKey) == null) && ((sipServletMessage) != null)) { org.mobicents.servlet.sip.core.session.MobicentsSipSessionKey sessionKey = sipServletMessage.getSipSessionKey(); if (org.mobicents.servlet.sip.message.TransactionApplicationData.logger.isDebugEnabled()) { org.mobicents.servlet.sip.message.TransactionApplicationData.logger.debug((\"session Key from sipservletmessage is \" + sessionKey)); } sipSessionKey = sessionKey; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3652/buggy-version/sip-servlets-impl.src.main.java.org.mobicents.servlet.sip.message.TransactionApplicationData.java", "BodyUseAPI": [], "Fixed commit": "465d296d1159479915aac2323f75033eb59af952", "Url": "https://api.github.com/repos/RestComm/sip-servlets", "Date": "2016-02-01T11:23:16Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.nav_lihat_data)) { fm.beginTransaction().replace(R.id.content_frame, new com.hasyim.ui.LihatDataFragment()).commit(); }else if (id == (R.id.nav_petunjuk)) { fm.beginTransaction().replace(R.id.content_frame, new com.hasyim.ui.PetunjukFragment()).commit(); }else if (id == (R.id.nav_lihat_peta)) { android.content.Intent intentPeta = new android.content.Intent(this, com.hasyim.ui.MapsActivity.class); startActivity(intentPeta); }else if (id == (R.id.nav_pengembang)) { }else if (id == (R.id.nav_logout)) { android.content.Intent intentLogout = new android.content.Intent(this, com.hasyim.ui.LoginActivity.class); intentLogout.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); startActivity(intentLogout); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3008/buggy-version/app.src.main.java.com.hasyim.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "672d1405673047b464a89fbbed96a2651624bccc", "Url": "https://api.github.com/repos/lordhasyim/SpkBayes", "Date": "2016-02-06T09:34:33Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handler) != null) { handler.emptyUrlCacheControlMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8267/buggy-version/service.http.directory.src.main.java.org.kaazing.gateway.service.http.directory.HttpDirectoryService.java", "BodyUseAPI": [], "Fixed commit": "d89304aa15212f1cb9b2ae8e9904350bb3025522", "Url": "https://api.github.com/repos/jitsni/gateway", "Date": "2016-03-31T09:04:44Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.prora.demonoteandroid.SettingsUtils.getInstances().getStringSharedPreferences(com.example.prora.demonoteandroid.Constant.KEY_SETTING_ROOT_FILE_DRIVE_ID)) == \"\") { android.widget.Toast.makeText(getContext(), \"Don't have any note in drive, you need to upload a note first\", Toast.LENGTH_SHORT).show(); }else { model.fetchNoteListFromDrive(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6559/buggy-version/app.src.main.java.com.example.prora.demonoteandroid.MVPDisplayNoteList.PresenterDisplayNoteList.java", "BodyUseAPI": [], "Fixed commit": "46db8c3e7a651816420640cfa90767ac0f64dc15", "Url": "https://api.github.com/repos/Mr93/DemoNoteAndroid", "Date": "2017-03-11T04:14:17Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (viewHolder instanceof com.nilanshu.bucketdrops.adapters.AdapterDrops.DropHolder) { mListener.onSwipe(viewHolder.getAdapterPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8544/buggy-version/app.src.main.java.com.nilanshu.bucketdrops.adapters.SimpleTouchCallback.java", "BodyUseAPI": ["com.nilanshu.bucketdrops.adapters.SwipeListener.onSwipe(viewHolder.getAdapterPosition())", "RecyclerView.ViewHolder.getAdapterPosition()"], "Fixed commit": "d6568caf36ce26d0dbe85de0baae7d49b8ab1cf6", "Url": "https://api.github.com/repos/Nilanshu/BucketDrops", "Date": "2016-12-03T20:02:04Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.openhab.binding.rfxcom.internal.RFXComConnection.serialPort) != null) { org.openhab.binding.rfxcom.internal.RFXComConnection.logger.debug(\"Close previous connection\"); org.openhab.binding.rfxcom.internal.RFXComConnection.connector.removeEventListener(eventLister); org.openhab.binding.rfxcom.internal.RFXComConnection.connector.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8248/buggy-version/bundles.binding.org.openhab.binding.rfxcom.src.main.java.org.openhab.binding.rfxcom.internal.RFXComConnection.java", "BodyUseAPI": [], "Fixed commit": "60addb78628ea6a57837400fa713e61117fc5786", "Url": "https://api.github.com/repos/the78mole/openhab", "Date": "2014-06-03T14:42:58Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gate == null) { return hasPermission(sender, permission); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4/buggy-version/src.de.craftinc.gates.controllers.PermissionController.java", "BodyUseAPI": [], "Fixed commit": "790fd5bccd34619290aeac80e1bb5a6f1b3c30fc", "Url": "https://api.github.com/repos/craftinc/craftinc-gates", "Date": "2017-01-01T09:52:13Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mondrian.rolap.RolapAggregationManager.makeCellRequest(mondrian.rolap.Member[],boolean,boolean,<nulltype>,<nulltype>,mondrian.rolap.RolapEvaluator)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (request == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5820/buggy-version/src.main.mondrian.rolap.RolapAggregationManager.java", "BodyUseAPI": [], "Fixed commit": "35244b32dc9e13a61cda6a64633fb7fde6c33779", "Url": "https://api.github.com/repos/hbfernandes/mondrian", "Date": "2015-02-02T15:29:21Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (btn == (buildSettlement)) { if ((((gManager.getCurrPlayer().getResource(Resource.ADOBE)) < 1) || ((gManager.getCurrPlayer().getResource(Resource.BANTHA)) < 1)) || (((gManager.getCurrPlayer().getResource(Resource.MOISTURE)) < 1) || ((gManager.getCurrPlayer().getResource(Resource.DURASTEEL)) < 1))) { dispose(); }else { gManager.getBoard().clickList = new java.util.ArrayList<settlers.catan.Clickable>(); for (settlers.catan.Node n : gManager.getBoard().getNodes()) { n.availabilityCheck(gManager.getCurrPlayer()); if (n.isAvailable()) { gManager.getBoard().clickList.add(((settlers.catan.Clickable) (n))); } } } }else if (btn == (buildCity)) { if (((gManager.getCurrPlayer().getResource(Resource.MOISTURE)) < 2) || ((gManager.getCurrPlayer().getResource(Resource.DURASTEEL)) < 3)) { dispose(); }else { gManager.getBoard().clickList = new java.util.ArrayList<settlers.catan.Clickable>(); for (settlers.catan.Node n : gManager.getBoard().getNodes()) { if (((n.getStatus()) == (settlers.catan.Node.NodeStatus.SETTLEMENT)) && ((n.getOwner()) == (gManager.getCurrPlayer()))) { gManager.getBoard().clickList.add(((settlers.catan.Clickable) (n))); } } } }else if (btn == (buildDevCard)) { if (((gManager.getCurrPlayer().getResource(Resource.BLUEMILK)) < 1) || (((gManager.getCurrPlayer().getResource(Resource.MOISTURE)) < 1) || ((gManager.getCurrPlayer().getResource(Resource.DURASTEEL)) < 1))) { dispose(); }else { gManager.getDeck().draw(gManager.getCurrPlayer()); } }else { dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7270/buggy-version/src.settlers.catan.Builder.java", "BodyUseAPI": [], "Fixed commit": "6aca438e01cb7976a0042b07fb98673a223d09cb", "Url": "https://api.github.com/repos/hnelken/settlers", "Date": "2015-02-08T05:23:04Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((gManager.getCurrPlayer().getResource(Resource.MOISTURE)) < 2) || ((gManager.getCurrPlayer().getResource(Resource.DURASTEEL)) < 3)) { dispose(); }else { gManager.getBoard().clickList = new java.util.ArrayList<settlers.catan.Clickable>(); for (settlers.catan.Node n : gManager.getBoard().getNodes()) { if (((n.getStatus()) == (settlers.catan.Node.NodeStatus.SETTLEMENT)) && ((n.getOwner()) == (gManager.getCurrPlayer()))) { gManager.getBoard().clickList.add(((settlers.catan.Clickable) (n))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7270/buggy-version/src.settlers.catan.Builder.java", "BodyUseAPI": ["settlers.catan.GameManager.getBoard()", "settlers.catan.GameManager.getBoard()", "settlers.catan.GameManager.getBoard()", "gManager.getBoard().clickList.add(settlers.catan.Node)", "settlers.catan.GameManager.getCurrPlayer()", "gManager.getBoard().getNodes()"], "Fixed commit": "6aca438e01cb7976a0042b07fb98673a223d09cb", "Url": "https://api.github.com/repos/hnelken/settlers", "Date": "2015-02-08T05:23:04Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((energyStage) == (EnergyStage.OVERHEAT)) && ((heat) > (MIN_HEAT))) { heat -= buildcraft.energy.TileEngineIron.COOLDOWN_RATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1249/buggy-version/common.buildcraft.energy.TileEngineIron.java", "BodyUseAPI": [], "Fixed commit": "b498bff9bddff2cb13a717cf5bdec61c7705ecdf", "Url": "https://api.github.com/repos/hea3ven/BuildCraft", "Date": "2014-12-09T17:17:05Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasGlobals())) { tearDownDatabase(); setUpDatabase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2346/buggy-version/src.org.wahlzeit.main.ModelMain.java", "BodyUseAPI": [], "Fixed commit": "7a5015cf6dd7530daf0aa269e6800a4b5c3a9d0f", "Url": "https://api.github.com/repos/dirkriehle/wahlzeit", "Date": "2014-10-06T12:45:11Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chess.model.board.BoardLocation.getX()", "chess.model.board.BoardLocation.getY()", "chess.model.board.BoardLocation.getY()", "chess.model.board.BoardLocation.getX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((start.getPresentPiece().toString().equalsIgnoreCase(\"q\")) || (start.getPresentPiece().toString().equalsIgnoreCase(\"b\"))) && ((java.lang.Math.abs((startX - destX))) == 1)) && ((java.lang.Math.abs((startY - destY))) == 1)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8557/buggy-version/chess.controller.ChessHelp.java", "BodyUseAPI": [], "Fixed commit": "7e001bace6b8f8f406d47952439475318481a1b1", "Url": "https://api.github.com/repos/stevemasta34/MyChess", "Date": "2014-05-29T22:24:44Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.quran.labs.androidquran.data.QuranInfo.getPageFromSuraAyah(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((page < 1) || (604 < page)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/9049/buggy-version/src.com.quran.labs.androidquran.ui.PagerActivity.java", "BodyUseAPI": [], "Fixed commit": "ce71934f529e9a2a617f03e1fcb5725d6d48b8cc", "Url": "https://api.github.com/repos/ahmedre/quran_android", "Date": "2012-07-12T03:08:29Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mState) == (com.quran.labs.androidquran.service.AudioService.State.Paused)) { state = com.quran.labs.androidquran.service.AudioService.AudioUpdateIntent.PAUSED; }else if ((mState) != (com.quran.labs.androidquran.service.AudioService.State.Stopped)) { state = com.quran.labs.androidquran.service.AudioService.AudioUpdateIntent.PLAYING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/9049/buggy-version/src.com.quran.labs.androidquran.service.AudioService.java", "BodyUseAPI": [], "Fixed commit": "ce71934f529e9a2a617f03e1fcb5725d6d48b8cc", "Url": "https://api.github.com/repos/ahmedre/quran_android", "Date": "2012-07-12T03:08:29Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.uw.zookeeper.data.ZNodeName.Path.root().toString().equals(path)) { return path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4235/buggy-version/src.main.java.edu.uw.zookeeper.data.ZNodeName.java", "BodyUseAPI": [], "Fixed commit": "b125db31cf16c41dd695165c1bea25c878268638", "Url": "https://api.github.com/repos/lisaglendenning/zookeeper-lite", "Date": "2013-05-10T18:22:53Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dao.UserDAO.getInstance().get(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (user != null) { cache(user); cUser = get(userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6514/buggy-version/DailyCookApp.src.main.java.com.vn.dailycookapp.cache.user.UserCache.java", "BodyUseAPI": ["com.vn.dailycookapp.cache.user.UserCache.cache(org.entity.User)"], "Fixed commit": "89f13998ebcfd748f0b4e450614b43a5ee4caec2", "Url": "https://api.github.com/repos/duyetpt/dailycook_restructe", "Date": "2015-11-25T04:02:20Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (reader != null) for (java.lang.String line; (line = reader.readLine()) != null;) { builder.append(line.trim()); } else android.widget.Toast.makeText(this, \"Sorry, the leaderboard is currently Down\", Toast.LENGTH_LONG);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7541/buggy-version/src.princeTron.UserInterface.Leaderboard.java", "BodyUseAPI": ["java.io.BufferedReader.readLine()"], "Fixed commit": "35e4c9f14b89872988b751cf213c3ef2b7e30e56", "Url": "https://api.github.com/repos/44maagnum/princetron_android", "Date": "2012-05-09T15:23:46Z"},
{"Line": "=>4244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!first) { boolean containedNewLine = spaces((spaceBeforeSeparator ? 1 : 0), false); if ((separator.equals(accept(separator))) && containedNewLine) { newline(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5125/buggy-version/java.source.base.src.org.netbeans.modules.java.source.save.Reformatter.java", "BodyUseAPI": [], "Fixed commit": "57d4fc7df27223ba8b14a3e8c3c2ca4da45a0c51", "Url": "https://api.github.com/repos/apache/incubator-netbeans", "Date": "2017-05-04T11:02:19Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numSeconds >= 0) { lobbyWaitBtnJoinGame.setVisible(true); lobbyWaitLabel.setText(\"Next game starts in: \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4532/buggy-version/src.main.java.sep2.grp2.client.views.ViewImpl.java", "BodyUseAPI": [], "Fixed commit": "d68abcc7acd4f40ff9eab4f063244c3bcbd04e7d", "Url": "https://api.github.com/repos/baeda/sep2", "Date": "2014-11-27T14:05:26Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.length()) <= maxLineLength) { newMessage.add(message); return newMessage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/662/buggy-version/src.main.java.buttondevteam.lib.DebugPotato.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "e5bb0e43dd81da11650825ed2edf5f0c1911f500", "Url": "https://api.github.com/repos/TBMCPlugins/ButtonCore", "Date": "2016-11-22T02:12:58Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((org.apache.camel.commands.AbstractContextCommand.class.isAssignableFrom(clazz)) && (null == (commandArgs[0]))) { commandArgs[0] = getFirstCamelContextName(); ops.println((\"Context name is not provided. Using the first : \" + (commandArgs[0]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3773/buggy-version/platforms.commands.commands-spring-boot.src.main.java.org.apache.camel.springboot.commands.crsh.CamelCommandsFacade.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "610107fefcef693b4bfe2b5c48ef96bd816e4b3e", "Url": "https://api.github.com/repos/sebi-hgdata/camel", "Date": "2015-11-10T02:14:05Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(new java.io.File(oldPath).exists())) || (!(new java.io.File(impPath).exists()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1088/buggy-version/app.src.main.java.database.ImportNewDb.java", "BodyUseAPI": [], "Fixed commit": "35e7dfe7a65510eece1b4724c440e5a8669f97ae", "Url": "https://api.github.com/repos/leletec/NameMemo", "Date": "2016-10-16T19:42:16Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(compound.hasKey(\"RubedoSpell\"))) { compound.setCompoundTag(\"RubedoSpell\", new net.minecraft.nbt.NBTTagCompound()); spell.setTagCompound(compound); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8257/buggy-version/src.main.java.rubedo.items.spells.SpellBase.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.setCompoundTag(java.lang.String,net.minecraft.nbt.NBTTagCompound)", "net.minecraft.item.ItemStack.setTagCompound(net.minecraft.nbt.NBTTagCompound)"], "Fixed commit": "19786de89b2711bce7c020ed47aa4998dab314a5", "Url": "https://api.github.com/repos/Katalliaan/Rubedo", "Date": "2014-03-14T17:05:49Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(compound.hasKey(\"RubedoTool\"))) { compound.setCompoundTag(\"RubedoTool\", new net.minecraft.nbt.NBTTagCompound()); tool.setTagCompound(compound); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8257/buggy-version/src.main.java.rubedo.items.tools.ToolBase.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.setCompoundTag(java.lang.String,net.minecraft.nbt.NBTTagCompound)", "net.minecraft.item.ItemStack.setTagCompound(net.minecraft.nbt.NBTTagCompound)"], "Fixed commit": "19786de89b2711bce7c020ed47aa4998dab314a5", "Url": "https://api.github.com/repos/Katalliaan/Rubedo", "Date": "2014-03-14T17:05:49Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(me.zhanghai.android.douya.BuildConfig.DEBUG)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8020/buggy-version/app.src.main.java.me.zhanghai.android.douya.item.ui.ItemActivities.java", "BodyUseAPI": [], "Fixed commit": "713c8ef9aa2b1156ad5cb5b63bac007827eeff6d", "Url": "https://api.github.com/repos/DreaminginCodeZH/Douya", "Date": "2017-07-02T12:33:55Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.proxyUrl) != null) { setProxyWithAuth(builder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4702/buggy-version/riskified-sdk.src.main.java.com.riskified.RiskifiedClient.java", "BodyUseAPI": [], "Fixed commit": "3a6715124a927e16fd2d4fe8d9795aee37e9d491", "Url": "https://api.github.com/repos/Riskified/java_sdk", "Date": "2017-03-13T10:27:56Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logicChecker.checkPassButton(cardQueue)) g.drawImage(passButton, PresidentPanel.PASSBUTTONX, PresidentPanel.PASSBUTTONY, PresidentPanel.BUTTONWIDTH, PresidentPanel.BUTTONHEIGHT, null); else g.drawImage(passButtonGrey, PresidentPanel.PASSBUTTONX, PresidentPanel.PASSBUTTONY, PresidentPanel.BUTTONWIDTH, PresidentPanel.BUTTONHEIGHT, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6061/buggy-version/PresidentPanel.java", "BodyUseAPI": [], "Fixed commit": "e0d63ddbc9e031ef9cbbbb9273489cb947ddd98b", "Url": "https://api.github.com/repos/ypatel38/President", "Date": "2017-05-27T21:04:48Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logicChecker.checkPlayButton(cardQueue)) g.drawImage(playButton, PresidentPanel.PLAYBUTTONX, PresidentPanel.PLAYBUTTONY, PresidentPanel.BUTTONWIDTH, PresidentPanel.BUTTONHEIGHT, null); else g.drawImage(playButtonGrey, PresidentPanel.PLAYBUTTONX, PresidentPanel.PLAYBUTTONY, PresidentPanel.BUTTONWIDTH, PresidentPanel.BUTTONHEIGHT, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6061/buggy-version/PresidentPanel.java", "BodyUseAPI": [], "Fixed commit": "e0d63ddbc9e031ef9cbbbb9273489cb947ddd98b", "Url": "https://api.github.com/repos/ypatel38/President", "Date": "2017-05-27T21:04:48Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.abas.erp.db.schema.custom.replacement.SparePart.createEditor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((editor != null) && (editor.active())) { editor.abort(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8239/buggy-version/src.main.java.de.abas.custom.spareParts.catalogue.creator.SparePartCreator.java", "BodyUseAPI": ["de.abas.erp.db.schema.custom.replacement.SparePartEditor.abort()"], "Fixed commit": "cf6fb5915c973c10728e64aba39dc107d20067d5", "Url": "https://api.github.com/repos/Tschasmine/sparePartCatalogueApp", "Date": "2017-03-31T01:04:08Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark.getScaleFactor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numWarehouses <= 0) { numWarehouses = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8925/buggy-version/src.com.oltpbenchmark.benchmarks.tpcc.TPCCBenchmark.java", "BodyUseAPI": [], "Fixed commit": "f663fe36d0119289b1f12a8e877c080de51db8e1", "Url": "https://api.github.com/repos/oltpbenchmark/oltpbench", "Date": "2017-04-12T01:33:26Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParticipants().size()) == 1) { return getParticipants().get(0).getUsername(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6856/buggy-version/mobile.src.main.java.sketchagram.chalmers.com.model.Conversation.java", "BodyUseAPI": [], "Fixed commit": "3761e0b7739436316e9b4bfc43be97ce685812e6", "Url": "https://api.github.com/repos/frapperino/sketchagram", "Date": "2015-05-03T12:52:50Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vg.civcraft.mc.citadel.events.ReinforcementDamageEvent.getReinforcement()", "event.getPlayer().getUniqueId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(reinforcement.getGroup().isCurrentMember(id))) combatListeners.playerDamagedReinforcement(event.getPlayer(), reinforcement.getGroup().getAllMembers());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2190/buggy-version/src.main.java.net.arcation.allegiance.listeners.CitadelListeners.java", "BodyUseAPI": ["reinforcement.getGroup().getAllMembers()", "net.arcation.allegiance.listeners.CombatListeners.playerDamagedReinforcement(event.getPlayer(),reinforcement.getGroup().getAllMembers())", "vg.civcraft.mc.citadel.reinforcement.PlayerReinforcement.getGroup()"], "Fixed commit": "5ad994985e58a921dccf11962f14cc3af8365042", "Url": "https://api.github.com/repos/MrLittleKitty/Allegiance", "Date": "2017-05-25T22:07:04Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (method == null) { throw new som.vm.MateSemanticsException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5138/buggy-version/MateExtensions.som.matenodes.MateAbstractSemanticNodes.java", "BodyUseAPI": [], "Fixed commit": "18a612a268267dca81b8669f4d6b7a59bdf9e927", "Url": "https://api.github.com/repos/charig/TruffleMATE", "Date": "2015-12-11T21:39:56Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diff != 0) return diff;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8293/buggy-version/src.main.java.mods.belgabor.extratweaker.mods.vanilla.commands.VanillaCommandBlockstats.java", "BodyUseAPI": [], "Fixed commit": "407e789ca1539cfef0b749666540e0772887b0d4", "Url": "https://api.github.com/repos/Belgabor/ExtraTweaker", "Date": "2017-03-03T04:39:10Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(event.getPlayer().hasPermission(\"prison.mine.edit\"))) { event.setCancelled(true); com.wolvencraft.prison.mines.util.Message.sendFormattedError(event.getPlayer(), com.wolvencraft.prison.mines.PrisonMine.getLanguage().ERROR_ACCESS, false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5926/buggy-version/src.com.wolvencraft.prison.mines.events.SignBreakListener.java", "BodyUseAPI": ["com.wolvencraft.prison.mines.util.Message.sendFormattedError(event.getPlayer(),com.wolvencraft.prison.mines.PrisonMine.getLanguage().ERROR_ACCESS,boolean)", "org.bukkit.event.block.BlockBreakEvent.getPlayer()", "org.bukkit.event.block.BlockBreakEvent.setCancelled(boolean)"], "Fixed commit": "89d0f8107448f0fd8375bccbd85fcf4eb24cb1a5", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2013-01-27T07:48:24Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (actualSize > size) { size = (actualSize + 9) - (actualSize % 9); if ((actualSize % 9) == 0) { size -= 9; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8716/buggy-version/src.multitallented.redcastlemedia.bukkit.herostronghold.listeners.GUIListener.java", "BodyUseAPI": [], "Fixed commit": "8c954922cf7ecd8ed33b1c15df70092cdb350112", "Url": "https://api.github.com/repos/Multitallented/HeroStronghold", "Date": "2014-08-24T19:55:14Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (modules == null) throw new java.lang.IllegalArgumentException(\"DescribedTemplate.Key: modules hash must not be null.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/192/buggy-version/platform.dtf-core.src.main.java.com.pslcl.dtf.core.generator.template.DescribedTemplate.java", "BodyUseAPI": [], "Fixed commit": "925f920d3d46355f04ad48aa7f735b48e5b9be10", "Url": "https://api.github.com/repos/PSLCL/testing-framework", "Date": "2016-02-10T02:58:30Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (template == null) throw new java.lang.IllegalArgumentException(\"DescribedTemplate.Key: template hash must not be null.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/192/buggy-version/platform.dtf-core.src.main.java.com.pslcl.dtf.core.generator.template.DescribedTemplate.java", "BodyUseAPI": [], "Fixed commit": "925f920d3d46355f04ad48aa7f735b48e5b9be10", "Url": "https://api.github.com/repos/PSLCL/testing-framework", "Date": "2016-02-10T02:58:30Z"},
{"Line": "=>674", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.atlauncher.utils.MojangAPIUtils.getCurrentUsername(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (currentUsername == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6426/buggy-version/src.main.java.com.atlauncher.data.Account.java", "BodyUseAPI": [], "Fixed commit": "2ed69c119936fed3655e6b86bfeaf250d213fa7b", "Url": "https://api.github.com/repos/dgelessus/ATLauncher", "Date": "2015-05-13T06:09:33Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Gsons.DEFAULT.fromJson(downloadable.getContents(),java.lang.reflect.Type)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (history == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6426/buggy-version/src.main.java.com.atlauncher.utils.MojangAPIUtils.java", "BodyUseAPI": [], "Fixed commit": "2ed69c119936fed3655e6b86bfeaf250d213fa7b", "Url": "https://api.github.com/repos/dgelessus/ATLauncher", "Date": "2015-05-13T06:09:33Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fieldSelectOptions.isEmpty()) { for (com.registryKit.client.crosswalkData data : cwData) { if (selectedValue.equals(data.getSourceValue())) { com.registryKit.client.fieldSelectOptions option = new com.registryKit.client.fieldSelectOptions(); option.setoptionValue(data.getTargetValue()); option.setoptionDesc(data.getTargetValue()); option.setSelected(false); fieldSelectOptions.add(option); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1939/buggy-version/webapp.src.main.java.com.rr.wabshs.ui.programProfile.programProfileController.java", "BodyUseAPI": ["java.util.List<com.registryKit.client.fieldSelectOptions>.add(com.registryKit.client.fieldSelectOptions)"], "Fixed commit": "2de7abb4637c52ea61b722fc655c922b81fc3444", "Url": "https://api.github.com/repos/bowlinktech/wabshsRR", "Date": "2016-10-31T16:40:50Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.buddycloud.mediaserver.business.model.Media.getFileExtension()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == extension) { extension = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4793/buggy-version/src.main.java.com.buddycloud.mediaserver.business.jdbc.MetaDataSource.java", "BodyUseAPI": [], "Fixed commit": "35b139eb0a4c522a5006a2029eb72615afc0ac6d", "Url": "https://api.github.com/repos/buddycloud/buddycloud-media-server", "Date": "2014-08-29T11:25:35Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.getMessage().matches(\".* class not found\")) { return new org.apache.hadoop.hive.metastore.DefaultPartitionExpressionProxy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/738/buggy-version/standalone-metastore.src.main.java.org.apache.hadoop.hive.metastore.PartFilterExprUtil.java", "BodyUseAPI": [], "Fixed commit": "73a7f58ba76c45f132f355db50df7267f6a12f6d", "Url": "https://api.github.com/repos/alanfgates/hive", "Date": "2017-09-05T21:21:26Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mainController.getRestaurant().getOrders(orderInput.getTable()).containsKey(orderInput.getDish())) { mainController.getRestaurant().setOrderAsProcessed(orderInput.getTable(), orderInput.getDish()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2642/buggy-version/src.main.java.controller.NetworkController.java", "BodyUseAPI": ["controller.IMainController.getRestaurant()", "mainController.getRestaurant().setOrderAsProcessed(orderInput.getTable(),orderInput.getDish())", "model.Order.getDish()", "model.Order.getTable()"], "Fixed commit": "2c8d994b8d2c4b12f8be940da6b2e531b57451a9", "Url": "https://api.github.com/repos/gscaparrotti/Bender", "Date": "2017-11-16T16:36:29Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((psiElement == null) || ((psiElement.getContainingFile()) == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4598/buggy-version/src.org.zkoss.zkidea.actions.GotoJavaClassHandler.java", "BodyUseAPI": [], "Fixed commit": "ad19cd626fcab9182776336d7023fc26f136d0b2", "Url": "https://api.github.com/repos/jumperchen/zkidea", "Date": "2016-03-17T07:58:33Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bucketCandidate.getState()) == (org.kaaproject.kaa.client.logging.memory.MemBucket.MemBucketState.FREE)) { org.kaaproject.kaa.client.logging.memory.MemLogStorage.LOG.trace(\"Only a bucket with state FREE found\"); bucketCandidate.setState(MemBucketState.PENDING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7149/buggy-version/client.client-multi.client-java-core.src.main.java.org.kaaproject.kaa.client.logging.memory.MemLogStorage.java", "BodyUseAPI": ["org.kaaproject.kaa.client.logging.memory.MemBucket.setState(MemBucketState.PENDING)"], "Fixed commit": "a6f00bfc76a5a75f9f20d1e0b0ced21916de7d05", "Url": "https://api.github.com/repos/kaaproject/kaa", "Date": "2015-06-24T11:53:00Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (thriftClientInfo.isStatsPublisherEnabled()) { java.util.ArrayList<org.wso2.carbon.databridge.agent.thrift.lb.DataPublisherHolder> dataPublisherHolders = new java.util.ArrayList<org.wso2.carbon.databridge.agent.thrift.lb.DataPublisherHolder>(); org.wso2.carbon.databridge.agent.thrift.lb.DataPublisherHolder aNode = new org.wso2.carbon.databridge.agent.thrift.lb.DataPublisherHolder(null, buildUrl(thriftClientInfo), thriftClientInfo.getUsername(), thriftClientInfo.getPassword()); dataPublisherHolders.add(aNode); org.wso2.carbon.databridge.agent.thrift.lb.ReceiverGroup group = new org.wso2.carbon.databridge.agent.thrift.lb.ReceiverGroup(dataPublisherHolders); receiverGroups.add(group); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6683/buggy-version/components.org.apache.stratos.common.src.main.java.org.apache.stratos.common.statistics.publisher.ThriftStatisticsPublisher.java", "BodyUseAPI": ["org.apache.stratos.common.statistics.publisher.ThriftStatisticsPublisher.buildUrl(org.apache.stratos.common.statistics.publisher.ThriftClientInfo)", "org.apache.stratos.common.statistics.publisher.ThriftClientInfo.getPassword()", "org.apache.stratos.common.statistics.publisher.ThriftClientInfo.getUsername()"], "Fixed commit": "dcec14887b933e09ddd427fbf9149c17d54f7f2b", "Url": "https://api.github.com/repos/Thanu/stratos", "Date": "2015-11-29T20:12:30Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.rawQuery(((((((((((\"SELECT \" + (ChampionsDatabaseHelper.NAME_COLUMN)) + \", \") + (ChampionsDatabaseHelper.RESULT_COLUMN)) + \", \") + (ChampionsDatabaseHelper.DATE_COLUMN)) + \" FROM \") + (com.example.flagquiz3.Quizer.TABLE_NAME)) + \" ORDER BY \") + (ChampionsDatabaseHelper.RESULT_COLUMN)) + \" DESC LIMIT 10\"),<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cursor.getCount()) < 10) { return true; }else { for (int i = 0; i < (cursor.getCount()); i++) { cursor.moveToPosition(i); resultOfCurrentPosition = cursor.getInt(cursor.getColumnIndex(ChampionsDatabaseHelper.RESULT_COLUMN)); android.util.Log.e(\"asdasd\", ((cursor.getCount()) + \"\")); if (result >= resultOfCurrentPosition) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3977/buggy-version/FlagQuiz3.src.com.example.flagquiz3.Quizer.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndex(ChampionsDatabaseHelper.RESULT_COLUMN)", "android.util.Log.e(java.lang.String,((cursor.getCount()) + \"\"))", "android.database.Cursor.getCount()", "android.database.Cursor.getInt(cursor.getColumnIndex(ChampionsDatabaseHelper.RESULT_COLUMN))", "android.database.Cursor.moveToPosition(int)", "android.database.Cursor.getCount()"], "Fixed commit": "249067abcbcb5b10665644f00bd04ba59c545742", "Url": "https://api.github.com/repos/PosashkovDima/Flag-quiz-new", "Date": "2014-05-26T15:51:46Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6355/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.parser.FieldsParser.java", "BodyUseAPI": [], "Fixed commit": "030fa5187fff9e693a0b0a244404862c13985f5d", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-12-14T06:17:53Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.log) != null) this.log.publish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5129/buggy-version/src.com.poixson.utils.xLogger.xLogPrintStream.java", "BodyUseAPI": [], "Fixed commit": "2e3bdc86eec801233507f62a0803b54653d3de8d", "Url": "https://api.github.com/repos/GrowControl/pxnCommon", "Date": "2017-05-26T14:59:31Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.log) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5129/buggy-version/src.com.poixson.utils.xLogger.xLogOutputStream.java", "BodyUseAPI": [], "Fixed commit": "2e3bdc86eec801233507f62a0803b54653d3de8d", "Url": "https://api.github.com/repos/GrowControl/pxnCommon", "Date": "2017-05-26T14:59:31Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pratilipiFilter.getListName()) != null) && ((pratilipiIdListCursorTuple.getNumberFound()) == 0)) l2Cache.put(memcacheId, pratilipiDataListCursorTuple);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5896/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java", "BodyUseAPI": [], "Fixed commit": "3d6f764a05187593629e129179aa2fb76a78e1be", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-03-23T11:50:37Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partitionedInstanceStatus) == null) { partitionedInstanceStatus = new java.util.HashMap<java.lang.Integer, com.datatorrent.demos.mobile.BatchedOperatorStats>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1066/buggy-version/demos.src.main.java.com.datatorrent.demos.mobile.ThroughputBasedPartitioner.java", "BodyUseAPI": [], "Fixed commit": "fe67bedd90564712b16a8f94028eb1fddfb3d79b", "Url": "https://api.github.com/repos/siyuanh/Malhar", "Date": "2014-07-11T23:54:22Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buffer == null) || ((buffer.position()) == 0)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/9113/buggy-version/servlet.src.main.java.io.undertow.servlet.spec.ServletOutputStreamImpl.java", "BodyUseAPI": [], "Fixed commit": "cff34ce0029d985573b52135982723467f4070c7", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2013-06-19T22:29:52Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((saveBless) != null) { newsStories.get(0).add(((((((((((((\"Off-Season Coaching Hires:>New Coaching hires at the following schools will add new look and will hopefully bring more prestige to the university: \\n\" + (saveBless.name)) + \": \") + (getRandName())) + \"\\n\") + (saveBless2.name)) + \": \") + (getRandName())) + \"\\n\") + (saveBless3.name)) + \": \") + (getRandName())) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2402/buggy-version/src.main.java.CFBsimPack.League.java", "BodyUseAPI": [], "Fixed commit": "40c8055b48b90dbb68293354083d230f9668fb02", "Url": "https://api.github.com/repos/antdroidx/CFB-Coach", "Date": "2017-10-06T01:52:07Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(iFieldName.contains(\".\"))) { removeCollectionChangeListener(iFieldName); removeCollectionTimeLine(iFieldName); _fieldValues.put(iFieldName, value); addCollectionChangeListener(iFieldName, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2068/buggy-version/core.src.main.java.com.orientechnologies.orient.core.record.impl.ODocument.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,RET)", "com.orientechnologies.orient.core.record.impl.ODocument.removeCollectionChangeListener(java.lang.String)", "com.orientechnologies.orient.core.record.impl.ODocument.removeCollectionTimeLine(java.lang.String)", "com.orientechnologies.orient.core.record.impl.ODocument.addCollectionChangeListener(java.lang.String,RET)"], "Fixed commit": "7a0b9c57abba14d7bfcf407c13e3f797f46454db", "Url": "https://api.github.com/repos/logart/orientdb", "Date": "2013-06-24T10:53:05Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tmpFile.renameTo(toFile))) { errString = \"550 Error during rename operation\\r\\n\"; break mainblock; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8855/buggy-version/Lib.src.be.ppareit.swiftp.server.CmdRNTO.java", "BodyUseAPI": [], "Fixed commit": "daa9ec5966a55fdc196cc58e5553dfbdf76cf75d", "Url": "https://api.github.com/repos/ppareit/swiftp", "Date": "2013-07-24T14:31:43Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.antimeta.bukkit.framework.command.PlayerCommand.checkPermission(org.bukkit.entity.Player,nl.antimeta.bukkit.framework.command.model.BukkitCommand)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!gotPermission) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6754/buggy-version/src.main.java.nl.antimeta.bukkit.framework.command.PlayerCommand.java", "BodyUseAPI": [], "Fixed commit": "7672b14607964fece0575a61f08548289d64a617", "Url": "https://api.github.com/repos/Anti-Meta/BukkitFramework", "Date": "2017-07-01T11:35:47Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((filteredItems.size()) > 0) && (!((filteredItems.get(0)) instanceof com.box.androidsdk.browse.adapters.ResultsHeader))) { mItems.add(0, new com.box.androidsdk.browse.adapters.ResultsHeader(mParentFolder)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8399/buggy-version/box-browse-sdk.src.main.java.com.box.androidsdk.browse.fragments.BoxSearchFragment.java", "BodyUseAPI": [], "Fixed commit": "0eea734a12c6994eb0abacce49358b827748ff05", "Url": "https://api.github.com/repos/varungu/box-android-browse-sdk", "Date": "2016-09-23T21:43:26Z"},
{"Line": "=>1137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mState) != (State.CANCELLED)) { mState = State.CANCELLED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/838/buggy-version/src.java.com.android.internal.telephony.gsm.GsmMmiCode.java", "BodyUseAPI": [], "Fixed commit": "8ef61ecb473db57aa18cd645929c4dece3ff6e91", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-opt-telephony", "Date": "2015-06-06T18:18:06Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dev.callofbeer.network.API.getEvents(params[0])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (eventBeerArrayList == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/111/buggy-version/app.src.main.java.com.dev.callofbeer.fragments.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "fec57f5d4eaf1cd8caff3a053e6a758a496ed1f5", "Url": "https://api.github.com/repos/CallOfBeer/CallOfBeerAndroid", "Date": "2015-04-01T07:29:51Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mpicbg.imglib.image.ImageFactory<T>.createImage(int[],java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((newImage.getNumDimensions()) == (this.getNumDimensions())) newImage.setCalibration(getCalibration());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1772/buggy-version/imglib1.core.src.main.java.mpicbg.imglib.image.Image.java", "BodyUseAPI": ["mpicbg.imglib.image.Image<T>.setCalibration(float[])"], "Fixed commit": "10c112151324c4d49f60f09621bb3ef316ba4c78", "Url": "https://api.github.com/repos/LeeKamentsky/imglib", "Date": "2012-04-11T20:27:31Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (node != null) { node.setStartPos(position); node.setEndPos((position + (tempExpr.length()))); }else { throw new ua.org.s4code.intellicalc.analyser.exception.ExprException(position, (position + (tempExpr.length())), \"There is some unexpected logic.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7173/buggy-version/app.src.main.java.ua.org.s4code.intellicalc.analyser.Expression.java", "BodyUseAPI": ["ua.org.s4code.intellicalc.analyser.Expression.setEndPos(int)", "ua.org.s4code.intellicalc.analyser.Expression.setStartPos(int)"], "Fixed commit": "06bd5862c771ffd51aa557feef51061c29b7998d", "Url": "https://api.github.com/repos/stalkerok1993/intellicalc", "Date": "2015-08-16T19:40:58Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (phoneNumber != null) { phoneNumber = applyCountryCode(phoneNumber); smsService.sendSMS(phoneNumber, message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2048/buggy-version/ghana-national-core.src.main.java.org.motechproject.ghana.national.repository.SMSGateway.java", "BodyUseAPI": ["org.motechproject.ghana.national.repository.SMSGateway.applyCountryCode(java.lang.String)"], "Fixed commit": "6d3b30728f95ea7fb3b3a8a97327a6a7bd0c4eea", "Url": "https://api.github.com/repos/motech/GHANA-National", "Date": "2012-08-01T16:50:09Z"},
{"Line": "=>868", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.fortuna.ical4j.model.Recur.getCalendarInstance(java.util.Date,boolean)", "net.fortuna.ical4j.model.Recur.getCalendarInstance(java.util.Date,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cal.after(freqEnd)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8845/buggy-version/src.main.java.net.fortuna.ical4j.model.Recur.java", "BodyUseAPI": [], "Fixed commit": "a2e3c4de21b2c05edf3b4c61d548ae821fc3fdd9", "Url": "https://api.github.com/repos/ical4j/ical4j", "Date": "2015-09-23T02:23:41Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pStart) == null) || ((pEnd) == null)) { return new java.util.LinkedHashMap<java.lang.String, java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/437/buggy-version/View.adfmsrc.dgpt.BPCostBean.java", "BodyUseAPI": [], "Fixed commit": "214ec7613c204fd523c52856135ffb370a202e5c", "Url": "https://api.github.com/repos/wtgdper/DMS", "Date": "2016-06-01T13:17:33Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (getReq.getKpiCode())) && ((getReq.getKpiCode().size()) > 0)) { parametersMap.put(\"kpiCode\", getReq.getKpiCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2983/buggy-version/performance.performance-assessment.src.main.java.org.egov.pa.repository.impl.KpiTargetRepositoryImpl.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,getReq.getKpiCode())", "org.egov.pa.web.contract.KPITargetGetRequest.getKpiCode()"], "Fixed commit": "490a7a236d9e2fd1911c301f390340379d7978ea", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-12-05T07:45:05Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null != (getReq.getKpiCode())) && ((getReq.getKpiCode().size()) > 0)) { sb.append(\" WHERE kpicode IN (:kpiCode) \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2983/buggy-version/performance.performance-assessment.src.main.java.org.egov.pa.repository.builder.PerformanceAssessmentQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "490a7a236d9e2fd1911c301f390340379d7978ea", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-12-05T07:45:05Z"},
{"Line": "=>1245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (printableCheckItem.getState()) g.setColor(Color.white); else g.setColor(Color.black);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1470/buggy-version/src.com.lushprojects.circuitjs1.client.CirSim.java", "BodyUseAPI": [], "Fixed commit": "3fd556d4e91ad6ff15f807dd281e001ab28fd23a", "Url": "https://api.github.com/repos/pfalstad/circuitjs1", "Date": "2016-12-08T09:04:52Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.round((source.isFireDamage() ? damage + 10.0F : damage - 2.0F))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (dmg > 0) { shield.damageItem(dmg, player); if ((shield.stackSize) <= 0) { if ((zeldaswordskills.ZSSMain.isBG2Enabled) && (mods.battlegear2.api.core.BattlegearUtils.isPlayerInBattlemode(player))) { mods.battlegear2.api.core.BattlegearUtils.setPlayerOffhandItem(player, null); }else { player.destroyCurrentEquippedItem(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8740/buggy-version/src.main.java.zeldaswordskills.item.ItemZeldaShield.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.damageItem(int,net.minecraft.entity.player.EntityPlayer)"], "Fixed commit": "77b770725d51ea4e56adc9ceac9d6b4b63789099", "Url": "https://api.github.com/repos/coolAlias/ZeldaSwordSkills", "Date": "2014-11-18T02:28:27Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((panel) != null) { panel.reset(); panel._run = false; panel = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6046/buggy-version/src.com.nomath4u.breakbrick.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f98643d765534eccef1f5e7d3672c0cf9d0e7e2f", "Url": "https://api.github.com/repos/nomath4u/nom-brickbreak", "Date": "2014-02-24T21:47:02Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dynamicheart.raven.services.serve.ServeService.getById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((serve.getType()) != (com.dynamicheart.raven.constant.Constants.SERVE_TYPE_ORDINARY)) return new org.springframework.http.ResponseEntity(null, org.springframework.http.HttpStatus.FORBIDDEN);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7363/buggy-version/src.main.java.com.dynamicheart.raven.controller.admin.serve.AdminServeController.java", "BodyUseAPI": [], "Fixed commit": "56e6386dd37d67106084d409bce588d59ffb7e40", "Url": "https://api.github.com/repos/dynamicheart/raven-web", "Date": "2017-09-10T13:01:47Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()", "java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((len1 == 0) || (len2 == 0)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3382/buggy-version/src.me.xdrop.fuzzywuzzy.algorithms.WeightedRatio.java", "BodyUseAPI": [], "Fixed commit": "b7119ecccb074ad8a7850de137b8fbac95111191", "Url": "https://api.github.com/repos/xdrop/fuzzywuzzy", "Date": "2017-03-27T09:37:17Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Settings.MAX_SPEED_FOR_MINUTES.length) > 0) { speed = com.app.Utils.Settings.MAX_SPEED_FOR_MINUTES[((Settings.MAX_SPEED_FOR_MINUTES.length) - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4222/buggy-version/src.com.app.TerrainerApp.WorkoutActivity.java", "BodyUseAPI": [], "Fixed commit": "6fd531087dc2b4519002522637ba1812f65ddb20", "Url": "https://api.github.com/repos/sherryren/TerrainerApp", "Date": "2014-12-01T06:41:00Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.storagemanager.deletionhelper.DeletionHelperSettings.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (activity == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1277/buggy-version/src.com.android.storagemanager.deletionhelper.DeletionHelperSettings.java", "BodyUseAPI": [], "Fixed commit": "4d484fe5d3d445d464bc22081994d382f0925655", "Url": "https://api.github.com/repos/ThirdProject/android_packages_apps_StorageManager", "Date": "2016-09-23T19:17:55Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (type == null) { type = configuration.getInterfaces().get(normalizedEntityName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2075/buggy-version/structr-core.src.main.java.org.structr.schema.SchemaHelper.java", "BodyUseAPI": [], "Fixed commit": "45d5149a7834914f38f93b6223e656f718bbfdac", "Url": "https://api.github.com/repos/structr/structr", "Date": "2013-12-22T16:16:44Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((thisWeeksLogs.get(be.qrsdp.utils.Util.getIndex(log.getStartTime()))) == null) { thisWeeksLogs.put(be.qrsdp.utils.Util.getIndex(log.getStartTime()), new be.qrsdp.worktimer.data.WorkDay(log.getStartTime())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8365/buggy-version/src.be.qrsdp.worktimer.data.WorkWeek.java", "BodyUseAPI": ["be.qrsdp.worktimer.data.WorkLog.getStartTime()", "java.util.Map<java.lang.Integer, be.qrsdp.worktimer.data.WorkDay>.put(be.qrsdp.utils.Util.getIndex(log.getStartTime()),be.qrsdp.worktimer.data.WorkDay)", "be.qrsdp.utils.Util.getIndex(log.getStartTime())", "be.qrsdp.worktimer.data.WorkLog.getStartTime()"], "Fixed commit": "75e295f16f16c3903bc4ade660f16ce590b0bb5c", "Url": "https://api.github.com/repos/Quinten-Ryckbosch/WorkTimer", "Date": "2014-08-10T08:40:35Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.scene.control.TextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((svn.length()) == 0) { svn = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/128/buggy-version/Presentation.src.at.oculus.teamf.presentation.view.searchPatientController.java", "BodyUseAPI": [], "Fixed commit": "8784e8bfe541812f663304f5ba94b9122d457433", "Url": "https://api.github.com/repos/OculusTeamF/Oculus", "Date": "2015-04-13T19:34:39Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.scene.control.TextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lastName.length()) == 0) { lastName = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/128/buggy-version/Presentation.src.at.oculus.teamf.presentation.view.searchPatientController.java", "BodyUseAPI": [], "Fixed commit": "8784e8bfe541812f663304f5ba94b9122d457433", "Url": "https://api.github.com/repos/OculusTeamF/Oculus", "Date": "2015-04-13T19:34:39Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.scene.control.TextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((firstName.length()) == 0) { firstName = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/128/buggy-version/Presentation.src.at.oculus.teamf.presentation.view.searchPatientController.java", "BodyUseAPI": [], "Fixed commit": "8784e8bfe541812f663304f5ba94b9122d457433", "Url": "https://api.github.com/repos/OculusTeamF/Oculus", "Date": "2015-04-13T19:34:39Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.undertow.websockets.StreamSinkFrameChannel.transferFrom0(org.xnio.channels.StreamSourceChannel,long,java.nio.ByteBuffer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result > 0) { this.written += result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1978/buggy-version/websockets.src.main.java.io.undertow.websockets.StreamSinkFrameChannel.java", "BodyUseAPI": [], "Fixed commit": "4e943f9a6943929c79e5efd7f838d561276da7db", "Url": "https://api.github.com/repos/stuartwdouglas/undertow", "Date": "2012-12-10T10:56:25Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.undertow.websockets.StreamSinkFrameChannel.write0(java.nio.ByteBuffer[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result > 0) { this.written += result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1978/buggy-version/websockets.src.main.java.io.undertow.websockets.StreamSinkFrameChannel.java", "BodyUseAPI": [], "Fixed commit": "4e943f9a6943929c79e5efd7f838d561276da7db", "Url": "https://api.github.com/repos/stuartwdouglas/undertow", "Date": "2012-12-10T10:56:25Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.undertow.websockets.StreamSinkFrameChannel.write0(java.nio.ByteBuffer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result > 0) { this.written += result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1978/buggy-version/websockets.src.main.java.io.undertow.websockets.StreamSinkFrameChannel.java", "BodyUseAPI": [], "Fixed commit": "4e943f9a6943929c79e5efd7f838d561276da7db", "Url": "https://api.github.com/repos/stuartwdouglas/undertow", "Date": "2012-12-10T10:56:25Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.undertow.websockets.StreamSinkFrameChannel.transferFrom0(java.nio.channels.FileChannel,long,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result > 0) { this.written += result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1978/buggy-version/websockets.src.main.java.io.undertow.websockets.StreamSinkFrameChannel.java", "BodyUseAPI": [], "Fixed commit": "4e943f9a6943929c79e5efd7f838d561276da7db", "Url": "https://api.github.com/repos/stuartwdouglas/undertow", "Date": "2012-12-10T10:56:25Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((((query != null) && ((query.getQuery()) != null)) && ((query.getQuery().getPages()) != null)) && ((query.getQuery().getPages().values()) != null)) { eu.europeana.corelib.web.model.wikipedia.WikipediaQuery.Query.Page page = query.getQuery().getPages().values().iterator().next(); if ((page != null) && ((page.getPageid()) != 0)) { if (((page.getLanglinks()) != null) && ((page.getLanglinks().size()) > 0)) { for (eu.europeana.corelib.web.model.wikipedia.WikipediaQuery.Query.Page.WikiLangLink langLinks : page.getLanglinks()) { languageVersions.put(langLinks.getLang(), clearRemovableParts(langLinks.getLang(), langLinks.getTranslation())); } } if (!(languageVersions.containsKey(languageCode))) { languageVersions.put(languageCode, page.getTitle()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1068/buggy-version/corelib-web.src.main.java.eu.europeana.corelib.web.service.impl.WikipediaApiServiceImpl.java", "BodyUseAPI": ["eu.europeana.corelib.web.model.wikipedia.WikipediaQuery.getQuery()", "query.getQuery().getPages().values().iterator()", "query.getQuery().getPages()", "query.getQuery().getPages().values()", "query.getQuery().getPages().values().iterator().next()"], "Fixed commit": "78f80dc55d2e1c9be2038eea413cd669b48f3049", "Url": "https://api.github.com/repos/europeana/corelib", "Date": "2014-06-11T13:19:26Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.databases.example.Checkbook.findViewById(R.id.checkbook_frag_frame)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (checkbook_frame == null) { getSupportFragmentManager().popBackStack(null, FragmentManager.POP_BACK_STACK_INCLUSIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7399/buggy-version/src.com.databases.example.Checkbook.java", "BodyUseAPI": [], "Fixed commit": "b49175c9e636ee2a1b9c5298736ac0eabb69ae2a", "Url": "https://api.github.com/repos/welshk91/FinanceApp", "Date": "2013-02-13T18:23:12Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (optionName.equals(\"CLASSPATH\")) optionName = \"CLASS_PATH\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5658/buggy-version/src.core.lombok.javac.Javac9BasedLombokOptions.java", "BodyUseAPI": [], "Fixed commit": "2d5ae0d920d1f602e15d9430f3650c946ad2cdfe", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2017-11-28T22:43:07Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((params != null) && ((params.length) == 1)) && ((params[0]) instanceof java.util.Map<?, ?>)) return com.jayway.jaxrs.hateoas.core.DefaultHateoasLink.fromLinkableInfoMap(linkableInfo, rel, ((java.util.Map<java.lang.String, java.lang.Object>) (params[0])));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6755/buggy-version/jax-rs-hateoas-core.src.main.java.com.jayway.jaxrs.hateoas.core.DefaultHateoasLink.java", "BodyUseAPI": ["com.jayway.jaxrs.hateoas.core.DefaultHateoasLink.fromLinkableInfoMap(com.jayway.jaxrs.hateoas.LinkableInfo,java.lang.String,java.lang.Object)"], "Fixed commit": "71951309570150206014396699a9b2df590d0ba1", "Url": "https://api.github.com/repos/aphethean/jax-rs-hateoas", "Date": "2012-04-29T15:14:31Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.unibremen.swp.stundenplan.command.CommandHistory.commandHistory.size()) > 0) if ((de.unibremen.swp.stundenplan.command.CommandHistory.getLast()) instanceof de.unibremen.swp.stundenplan.command.EditCommand) de.unibremen.swp.stundenplan.command.CommandHistory.lastIsEditCommand = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3286/buggy-version/stundenplan.git.src.main.java.de.unibremen.swp.stundenplan.command.CommandHistory.java", "BodyUseAPI": [], "Fixed commit": "1fa645efefcc20e839b1f023dc98af4d49ee5559", "Url": "https://api.github.com/repos/OliverBe/stundenplanswp", "Date": "2015-01-21T18:54:57Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tagCompound == null) { tagCompound = new net.minecraft.nbt.NBTTagCompound(); entityPlayer.getHeldItem().setTagCompound(tagCompound); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4389/buggy-version/src.main.java.mcjty.rftools.blocks.storage.ModularStorageItemInventory.java", "BodyUseAPI": [], "Fixed commit": "9adafedf1e7dc712e2ff5b08b51fc64925ac933c", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-05-25T06:29:46Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (((org.eclipse.emf.ecore.InternalEObject) (targetObject)).eDirectResource())) traverseObjectIfUnfiltered(visitor, targetObject);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1632/buggy-version/query.plugins.org.eclipse.viatra.query.runtime.base.src.org.eclipse.viatra.query.runtime.base.comprehension.EMFModelComprehension.java", "BodyUseAPI": [], "Fixed commit": "34f0faff062d430a0ec666fbdd325dde64634cca", "Url": "https://api.github.com/repos/viatra/org.eclipse.viatra", "Date": "2017-07-31T14:26:28Z"},
{"Line": "=>1230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.BlockingQueue<java.lang.Runnable>.offer(com.hazelcast.partition.impl.InternalPartitionServiceImpl.MigrateTask)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!offered) { logger.severe((\"Failed to offer: \" + migrateTask)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1878/buggy-version/hazelcast.src.main.java.com.hazelcast.partition.impl.InternalPartitionServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "fa809e23a989b8893090e628d6dfbe8c3bd68eee", "Url": "https://api.github.com/repos/pveentjer/hazelcast", "Date": "2014-03-20T19:12:13Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lv.isChangeable()) builder.append(\"final \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3554/buggy-version/compilers.java.src.main.java.org.thingml.compilers.java.JavaThingCepCompiler.java", "BodyUseAPI": [], "Fixed commit": "16c8a40b62399df6960bdd94b1293041ee6b5c89", "Url": "https://api.github.com/repos/TelluIoT/ThingML", "Date": "2016-04-28T11:04:49Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vektor.y) < 0) { double angel = 90 + beta; org.lwjgl.opengl.GL11.glRotated(angel, (-(vektor.z)), 0, vektor.x); }else { double angel = 90 - beta; org.lwjgl.opengl.GL11.glRotated(angel, vektor.z, 0, (-(vektor.x))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1085/buggy-version/java.com.mhfs.capacitors.render.RendererLuxRouter.java", "BodyUseAPI": ["org.lwjgl.opengl.GL11.glRotated(double,vektor.z,int,(-(vektor.x)))", "org.lwjgl.opengl.GL11.glRotated(double,(-(vektor.z)),int,vektor.x)"], "Fixed commit": "2c16b72383a296074bc6e63c840ca11bb2490a04", "Url": "https://api.github.com/repos/thilokru/Big-Capacitors-Mod", "Date": "2016-01-09T13:32:10Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((-1) == startPos) { startPos = curText.indexOf(\"https:\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/721/buggy-version/app.src.main.java.com.jack.newsobserver.parser.NewsListFromXmlParser.java", "BodyUseAPI": [], "Fixed commit": "f72deb7834713712c6463ba9fb9bcb4d2b13943b", "Url": "https://api.github.com/repos/thenuntis/NewsObserver", "Date": "2016-12-01T13:09:15Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.new_event_max_participants.getText().toString()) != null) && (!(this.new_event_max_participants.getText().toString().isEmpty()))) { maxParticipants = java.lang.Integer.parseInt(this.new_event_max_participants.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/620/buggy-version/app.src.main.java.com.ecolem.workoutside.activities.NewEventActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "this.new_event_max_participants.getText().toString()", "java.lang.Integer.parseInt(this.new_event_max_participants.getText().toString())"], "Fixed commit": "604dbf3bf0fa64d2fbadf5da8fa5d2dec3019632", "Url": "https://api.github.com/repos/jdzeta/Workoutside", "Date": "2015-11-05T16:14:44Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((structure) != null) structure.addTile(cutTile);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5626/buggy-version/src.main.java.com.creativemd.littletiles.common.tiles.combine.BasicCombiner.java", "BodyUseAPI": [], "Fixed commit": "9fec726b6a2aa0e661387154a13c01552f1572b8", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-10-27T09:01:35Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tiles) != null) { if ((structure) != null) structure.removeTile(tiles.get(index)); tiles.remove(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5626/buggy-version/src.main.java.com.creativemd.littletiles.common.tiles.combine.BasicCombiner.java", "BodyUseAPI": [], "Fixed commit": "9fec726b6a2aa0e661387154a13c01552f1572b8", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-10-27T09:01:35Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fields.length) > 3) { buf.append(\"#RP=\").append(fields[3]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1014/buggy-version/src.main.java.net.nordu.logback.FTicksAppender.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "bf324601353fb64497d62d3716defc29953a478c", "Url": "https://api.github.com/repos/leifj/ndn-shib-fticks", "Date": "2012-05-22T11:52:53Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fields.length) > 5) { buf.append(\"#AP=\").append(fields[5]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1014/buggy-version/src.main.java.net.nordu.logback.FTicksAppender.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "bf324601353fb64497d62d3716defc29953a478c", "Url": "https://api.github.com/repos/leifj/ndn-shib-fticks", "Date": "2012-05-22T11:52:53Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(prio.equals(\"All\"))) { org.rhq.core.domain.alert.AlertPriority alertPriority = org.rhq.core.domain.alert.AlertPriority.valueOf(prio.toUpperCase()); criteria.addFilterPriorities(alertPriority); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1726/buggy-version/modules.enterprise.server.jar.src.main.java.org.rhq.enterprise.server.rest.AlertHandlerBean.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "org.rhq.core.domain.alert.AlertPriority.valueOf(java.lang.String)"], "Fixed commit": "fdb022dd24ced74d9682314d32c1a63e35159dba", "Url": "https://api.github.com/repos/metlos/RHQ", "Date": "2012-06-16T07:43:18Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (resourceId != null) { criteria.addFilterResourceIds(resourceId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1726/buggy-version/modules.enterprise.server.jar.src.main.java.org.rhq.enterprise.server.rest.AlertHandlerBean.java", "BodyUseAPI": ["org.rhq.core.domain.criteria.AlertCriteria.addFilterResourceIds(java.lang.Integer)"], "Fixed commit": "fdb022dd24ced74d9682314d32c1a63e35159dba", "Url": "https://api.github.com/repos/metlos/RHQ", "Date": "2012-06-16T07:43:18Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file.exists()) && ((file.length()) > 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4685/buggy-version/imagepicker.src.main.java.com.lzy.imagepicker.ImageDataSource.java", "BodyUseAPI": [], "Fixed commit": "de64714caeaa45adc118ee7bf0d294fcc3ff1d06", "Url": "https://api.github.com/repos/Even201314/ImagePicker", "Date": "2017-07-25T09:48:54Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.invoke(java.lang.Object,java.lang.Object[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fileRecords.equalsIgnoreCase(\"\")) { newfileName = \"FILE IS NOT XML ERROR\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6267/buggy-version/src.main.java.com.ut.dph.service.CCDtoTxt.java", "BodyUseAPI": [], "Fixed commit": "4d539f6979b57bfcc6112bbe2b7a371667c438a3", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2014-09-05T18:03:02Z"},
{"Line": "=>1680", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newfilename.equals(\"ERRORERRORERROR\")) { sysError = sysError + (dropLoadTable(loadTableName)); updateBatchStatus(batchId, 39, \"endDateTime\"); insertProcessingError(5, null, batchId, null, null, null, null, false, false, \"Error at applying jar template\"); return false; }else if (newfilename.equals(\"FILE IS NOT XML ERROR\")) { sysError = sysError + (dropLoadTable(loadTableName)); updateBatchStatus(batchId, 7, \"endDateTime\"); insertProcessingError(22, null, batchId, null, null, null, null, false, false, \"XML format is invalid.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6267/buggy-version/src.main.java.com.ut.dph.service.impl.transactionInManagerImpl.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "4d539f6979b57bfcc6112bbe2b7a371667c438a3", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2014-09-05T18:03:02Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.mCellNumber) == (-1)) { return com.edulectronics.tinycircuit.Controllers.CircuitController.getInstance().newComponent; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8735/buggy-version/app.src.main.java.com.edulectronics.tinycircuit.Views.Draggables.GridCell.java", "BodyUseAPI": [], "Fixed commit": "5e5670610df93a009c3465301c966e4961657ae8", "Url": "https://api.github.com/repos/wzwietering/IntroductieProject", "Date": "2016-12-21T08:51:36Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ListIterator<actor.Actor>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ship != null) && ((u.id) == (ship.id))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2353/buggy-version/src.actor.Actor.java", "BodyUseAPI": [], "Fixed commit": "8198bae792962d11944ee2a2947f2afc6fc43a0b", "Url": "https://api.github.com/repos/ChrisLundquist/CS143-Project", "Date": "2011-04-16T04:43:26Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.inner().dnsSettings()) != null) { return this.inner().dnsSettings().reverseFqdn(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1018/buggy-version/azure-mgmt-network.src.main.java.com.microsoft.azure.management.network.implementation.PublicIpAddressImpl.java", "BodyUseAPI": [], "Fixed commit": "8ec142efb3ed2f1a55f73c210bf2bc167ae4e26e", "Url": "https://api.github.com/repos/anuchandy/azure-sdk-for-java", "Date": "2016-09-15T20:37:28Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.inner().dnsSettings()) != null) { return this.inner().dnsSettings().fqdn(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1018/buggy-version/azure-mgmt-network.src.main.java.com.microsoft.azure.management.network.implementation.PublicIpAddressImpl.java", "BodyUseAPI": [], "Fixed commit": "8ec142efb3ed2f1a55f73c210bf2bc167ae4e26e", "Url": "https://api.github.com/repos/anuchandy/azure-sdk-for-java", "Date": "2016-09-15T20:37:28Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target.equals(bakatxt.international.BakaTongue.currentLocale)) { return input; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7066/buggy-version/src.bakatxt.international.BakaTongue.java", "BodyUseAPI": [], "Fixed commit": "3e5af1eb5bc697a55fe6e6dffbe7a230bf998a57", "Url": "https://api.github.com/repos/cs2103aug2014-t09-4j/main", "Date": "2014-10-26T05:34:40Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((process) == null) { kill(); }else if (!(process.isAlive())) { synchronized(this) { if (!(forkDeathConfirmed)) { forkDeathConfirmed = true; processWatchdog.unregisterFork(this); client = null; process = null; forkCallback.onForkExit(this); this.notifyAll(); kill(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5017/buggy-version/de.gebit.integrity.runner.src.de.gebit.integrity.runner.forking.Fork.java", "BodyUseAPI": [], "Fixed commit": "de311fe6400147100ae9b7925e02892f82e6d42e", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2014-04-16T08:13:42Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((avaliacoes.size()) > 0) { Avaliacao.Avaliacao aval = avaliacoes.get(0); for (Avaliacao.Avaliacao avaliacao : avaliacoes) { if ((avaliacao.getQtAvaliacoes()) > (aval.getQtAvaliacoes())) { aval = avaliacao; } } return aval; }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3458/buggy-version/lastVersion.ClassesNegocio.src.Avaliacao.AvaliacaoBO.java", "BodyUseAPI": ["avaliacoes.get(int)"], "Fixed commit": "b3ffbcd0fe10dd331160c1248b7aca8b562dd542", "Url": "https://api.github.com/repos/jonathan0211/APPEmpreendedorismo", "Date": "2014-09-24T17:53:17Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endingText) == null) { endingText = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7875/buggy-version/OsmAnd.src.net.osmand.plus.activities.search.SearchByNameAbstractActivity.java", "BodyUseAPI": [], "Fixed commit": "4fb5b205c1fd1611f5075fdc0a4ab8316e65cc4c", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2014-04-03T23:10:05Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["identified.first().getIdentifier().commonPrefix(identified.last().getIdentifier())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (prefix instanceof aletheia.model.identifier.NodeNamespace) { if (((getPrefix()) != null) && (!(getPrefix().isPrefixOf(prefix)))) return null; return subGroupSorter(((aletheia.model.identifier.NodeNamespace) (prefix)).asIdentifier()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3763/buggy-version/Aletheia.GUI.src.aletheia.gui.contextjtree.sorter.GroupSorter.java", "BodyUseAPI": ["aletheia.model.identifier.Identifier.isPrefixOf(aletheia.model.identifier.Namespace)"], "Fixed commit": "05845758ff2cb2211ebbafec1360dd9d7edda951", "Url": "https://api.github.com/repos/quimtestar/Aletheia", "Date": "2016-04-17T22:04:18Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["aletheia.model.identifier.NodeNamespace.asIdentifier()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((getPrefix()) != null) && (!(getPrefix().isPrefixOf(iPrefix)))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3763/buggy-version/Aletheia.GUI.src.aletheia.gui.contextjtree.sorter.GroupSorter.java", "BodyUseAPI": [], "Fixed commit": "05845758ff2cb2211ebbafec1360dd9d7edda951", "Url": "https://api.github.com/repos/quimtestar/Aletheia", "Date": "2016-04-17T22:04:18Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ran)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1346/buggy-version/02NQueens.QueenBoard.java", "BodyUseAPI": [], "Fixed commit": "c8a98741e7542948d0676de3eaf6a417dd4e2cdd", "Url": "https://api.github.com/repos/JonW27/MKS22X", "Date": "2017-03-05T00:58:05Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((linklist) == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6428/buggy-version/app.src.main.java.de.appphil.webcamviewerwidget.link.LinkListAdapter.java", "BodyUseAPI": [], "Fixed commit": "ab8368c127da2b362f035034d8da0fe28b068d61", "Url": "https://api.github.com/repos/PhilippDE/WebcamViewerWidget", "Date": "2017-02-25T10:33:52Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((linklist) == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6428/buggy-version/app.src.main.java.de.appphil.webcamviewerwidget.widgets.switchwidget.SwitchWidgetLinksEditAdapter.java", "BodyUseAPI": [], "Fixed commit": "ab8368c127da2b362f035034d8da0fe28b068d61", "Url": "https://api.github.com/repos/PhilippDE/WebcamViewerWidget", "Date": "2017-02-25T10:33:52Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((linklist) == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6428/buggy-version/app.src.main.java.de.appphil.webcamviewerwidget.link.LinkListEditAdapter.java", "BodyUseAPI": [], "Fixed commit": "ab8368c127da2b362f035034d8da0fe28b068d61", "Url": "https://api.github.com/repos/PhilippDE/WebcamViewerWidget", "Date": "2017-02-25T10:33:52Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nic.getBroadcastType()) == (Networks.BroadcastDomainType.Lswitch)) { logicalSwitchUuid = nic.getBroadcastUri().getSchemeSpecificPart(); }else if ((nic.getBroadcastType()) == (Networks.BroadcastDomainType.Pvlan)) { vlanId = com.cloud.utils.net.NetUtils.getPrimaryPvlanFromUri(nic.getBroadcastUri()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4696/buggy-version/plugins.hypervisors.kvm.src.com.cloud.hypervisor.kvm.resource.OvsVifDriver.java", "BodyUseAPI": ["nic.getBroadcastUri().getSchemeSpecificPart()", "com.cloud.utils.net.NetUtils.getPrimaryPvlanFromUri(nic.getBroadcastUri())", "com.cloud.agent.api.to.NicTO.getBroadcastUri()", "com.cloud.agent.api.to.NicTO.getBroadcastUri()", "com.cloud.agent.api.to.NicTO.getBroadcastType()"], "Fixed commit": "70da1b3be3b80d1bcc1ae652d9be81d26d3ef807", "Url": "https://api.github.com/repos/apache/cloudstack", "Date": "2013-05-02T23:32:07Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (provider instanceof com.firebase.ui.auth.provider.IdpProvider) { mActivityHelper.showLoadingDialog(R.string.progress_dialog_loading); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8596/buggy-version/auth.src.main.java.com.firebase.ui.auth.ui.idp.AuthMethodPickerActivity.java", "BodyUseAPI": [], "Fixed commit": "393f900d487aafbb5eb4068982b561a2d082c052", "Url": "https://api.github.com/repos/firebase/FirebaseUI-Android", "Date": "2017-05-02T17:37:05Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFragment) instanceof de.android.fhwsapp.fragments.MainFragment) { if ((scrollView) == null) scrollView = ((android.widget.ScrollView) (findViewById(R.id.svMain))); scrollView.setSmoothScrollingEnabled(true); scrollView.smoothScrollTo(0, 0); }else { mFragment = new de.android.fhwsapp.fragments.MainFragment(); setFragment(mFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7608/buggy-version/app.src.main.java.de.android.fhwsapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "52f7740e805d8b9d5222a15edb44103089c914dd", "Url": "https://api.github.com/repos/nicotin241/FhwsApp", "Date": "2017-08-28T11:35:58Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cookies != null) { for (javax.servlet.http.Cookie cookie : cookies) { if (model.UserDAO.checkIfUserExist(cookie.getValue())) { request.getSession().setAttribute(\"login\", cookie.getValue()); response.sendRedirect(\"./list\"); return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8639/buggy-version/TODO.src.controler.LoginServlet.java", "BodyUseAPI": [], "Fixed commit": "dbd297d0a3e75a9c14974bda212ae9f376498abb", "Url": "https://api.github.com/repos/daright/TODO", "Date": "2016-05-10T21:31:31Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lol.Task.getTaskDueDate()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((dueDate.getDay()) == (toGetCurrentDate.getCurrentDay())) && ((dueDate.getMonth()) == (toGetCurrentDate.getCurrentMonth()))) && ((dueDate.getYear4Digit()) == (toGetCurrentDate.getCurrentYear()))) { headerStr = headerStr + \"Today, \"; }else if ((((dueDate.getDay()) == ((toGetCurrentDate.getCurrentDay()) + 1)) && ((dueDate.getMonth()) == (toGetCurrentDate.getCurrentMonth()))) && ((dueDate.getYear4Digit()) == (toGetCurrentDate.getCurrentYear()))) { headerStr = headerStr + \"Tomorrow, \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2602/buggy-version/LifeOnLine.src.lol.FormatToString.java", "BodyUseAPI": ["lol.Date.getYear4Digit()", "lol.Date.getCurrentDay()", "lol.Date.getDay()", "lol.Date.getCurrentMonth()", "lol.Date.getMonth()", "lol.Date.getCurrentYear()"], "Fixed commit": "89131abb98405f88cd6e82e108610678b4a1cd33", "Url": "https://api.github.com/repos/cs2103-t10-1j/main", "Date": "2014-11-02T13:49:44Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (horizontal) { return ((int) (java.lang.Math.round((-(editPane.getPositionX()))))); }else { return ((int) (java.lang.Math.round((-(editPane.getPositionY()))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6230/buggy-version/project.src.de.topobyte.livecg.geometryeditor.geometryeditor.SceneBoundedRangeModel.java", "BodyUseAPI": [], "Fixed commit": "8ab029489aaa358aadb1f2d4cf4154608add0b16", "Url": "https://api.github.com/repos/sebkur/live-cg", "Date": "2013-10-30T20:10:21Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["systemState.getLayerManager().getAgentLayer().getViewer().getName(nanoverse.runtime.control.identifiers.Coordinate)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (name == null) { return java.awt.Color.BLACK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6256/buggy-version/src.nanoverse.runtime.io.visual.color.IndexedColorModel.java", "BodyUseAPI": [], "Fixed commit": "b5a01206ad1948eef8f4d48ebad281bfbe193195", "Url": "https://api.github.com/repos/nanoverse/nanoverse", "Date": "2015-11-07T13:43:09Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMarker) == null) { currentMarker = map.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(latLng).title(\"Current Location\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3327/buggy-version/android.app.src.main.java.com.coachksrun.maps.RouteSelection.java", "BodyUseAPI": [], "Fixed commit": "51a5d7096793025ff71a14cae721444fd8de5d8b", "Url": "https://api.github.com/repos/phillipchengh/Coach_K", "Date": "2014-11-19T04:57:24Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.id.webverifylib.AccessTokenManager.getToken(me.id.webverifylib.listener.IDmeScope)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (token.isValidAccessToken()) { listener.onSuccess(token.getAccessToken()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3679/buggy-version/me.id.webverify.webverifylib.src.main.java.me.id.webverifylib.RefreshAccessTokenHandler.java", "BodyUseAPI": ["me.id.webverifylib.AuthToken.getAccessToken()", "me.id.webverifylib.listener.IDmeGetAccessTokenListener.onSuccess(token.getAccessToken())"], "Fixed commit": "e34549c225a70e83d3ec08fea233e5280466cf1d", "Url": "https://api.github.com/repos/IDme/ID.me-WebVerify-SDK-Android", "Date": "2017-06-07T21:50:33Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((curqueue.size()) > 0) { final java.util.List<org.corfudb.runtime.SMREngine.SyncObjectWrapper> newqueue = new java.util.LinkedList<org.corfudb.runtime.SMREngine.SyncObjectWrapper>(curqueue); curqueue.clear(); cf = java.util.concurrent.CompletableFuture.runAsync(() -> { playback(newqueue); }, org.corfudb.runtime.SMREngine.SMREngineThreadPool); cf.join(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1117/buggy-version/src.main.java.org.corfudb.runtime.SMREngine.java", "BodyUseAPI": ["java.util.List<org.corfudb.runtime.SMREngine.SyncObjectWrapper>.clear()"], "Fixed commit": "8f549f159ce26ab266e3619a1ec05e06b792762a", "Url": "https://api.github.com/repos/CorfuDB/CorfuDB", "Date": "2015-03-25T12:16:28Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (mappingNodeFallbackParser != null) { return mappingNodeFallbackParser.parse(node, context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7647/buggy-version/alien4cloud-core.src.main.java.alien4cloud.tosca.parser.impl.base.KeyDiscriminatorParser.java", "BodyUseAPI": ["alien4cloud.tosca.parser.INodeParser<T>.parse(org.yaml.snakeyaml.nodes.Node,alien4cloud.tosca.parser.ParsingContextExecution)"], "Fixed commit": "f49002cfc70917e1b0aa3099a6b9ef2da1c6b03e", "Url": "https://api.github.com/repos/san-tak/alien4cloud", "Date": "2015-10-29T07:39:08Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((device.getName()) != null) sqLiteStatement.bindString(8, device.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8973/buggy-version/src.com.maksl5.bl_hunt.storage.DatabaseManager.java", "BodyUseAPI": ["com.maksl5.bl_hunt.util.FoundDevice.getName()", "android.database.sqlite.SQLiteStatement.bindString(int,device.getName())"], "Fixed commit": "d304de0857604e89c630cebd93e87c378867c221", "Url": "https://api.github.com/repos/Maksl5/blue-hunter", "Date": "2015-11-07T16:29:55Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (in == null) { throw e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2147/buggy-version/library.src.main.java.uk.org.rivernile.android.fetchutils.fetchers.HttpFetcher.java", "BodyUseAPI": [], "Fixed commit": "2d1088d6abb9b394f86c8115410d88c56bba65f1", "Url": "https://api.github.com/repos/NiallScott/FetchUtils", "Date": "2015-06-24T15:28:42Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(currentUser.canCreateStatements())) { result.use(br.com.caelum.vraptor.view.HttpResult.class).sendError(401); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3248/buggy-version/src.main.java.br.com.caelum.vraptor.dash.statement.StatementController.java", "BodyUseAPI": [], "Fixed commit": "b37eedeec6e0afe99408e414b3da81fe729d961b", "Url": "https://api.github.com/repos/caelum/vraptor-dash", "Date": "2011-10-06T18:44:48Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.massivecraft.factions.cmd.CmdFactionsKick.readArg()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((mplayer.getRole()) == (com.massivecraft.factions.Rel.LEADER)) && (!(msender.isOverriding()))) { throw new com.massivecraft.massivecore.MassiveException().addMsg(\"<b>The leader cannot be kicked.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5660/buggy-version/src.com.massivecraft.factions.cmd.CmdFactionsKick.java", "BodyUseAPI": [], "Fixed commit": "e0f551286ed391ce05e8ee375b6bf61bb79580b5", "Url": "https://api.github.com/repos/MassiveCraft/Factions", "Date": "2016-02-06T09:03:46Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(world.isRemote)) { world.func_147480_a(i, j, k, true); itemstack.damageItem(1, entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3494/buggy-version/src.main.java.com.spencerio.smm.item.tools.ItemSMMDGStaff.java", "BodyUseAPI": ["net.minecraft.world.World.func_147480_a(int,int,int,boolean)"], "Fixed commit": "d0c744792ced19ec8dec1d465c6f8b3c74edaeec", "Url": "https://api.github.com/repos/Spencerio1/Spencerios-Mod-Mod", "Date": "2014-04-01T23:41:17Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (htmlText.contains(\"<li>\")) { htmlText = htmlText.replace(\"<li>\", \"&#8226\"); htmlText = htmlText.replace(\"</li>\", \"<br>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7388/buggy-version/Cliente.TallerDeProyectos2.app.src.main.java.fiuba.tallerdeproyectos2.Activities.UnitDetailsActivity.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "23f8df0d16ec0ccbfaae08352ff27f83a75c0237", "Url": "https://api.github.com/repos/matiduarte/TallerDesarrolloDeProyectos2", "Date": "2016-10-31T16:31:17Z"},
{"Line": "=>633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((searchContext.getUserId()) == 0) { searchContext.setUserId(permissionChecker.getUserId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5387/buggy-version/portal-service.src.com.liferay.portal.kernel.search.BaseIndexer.java", "BodyUseAPI": ["com.liferay.portal.kernel.search.SearchContext.setUserId(permissionChecker.getUserId())"], "Fixed commit": "49a4d743a2a1e612cbdf518d12adb63e3c849983", "Url": "https://api.github.com/repos/jgok/liferay-portal", "Date": "2016-02-05T19:03:32Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["processSMS.getMessage().toUpperCase().replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sms.contains(\"PURCHASED\")) { sms.replace(\"ACL BAL\", \"AVL BAL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7807/buggy-version/myBudget.src.main.java.com.gmail.ramawathar.priyash.businessLogic.StandardBankMessage.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "357a8738fa0744adb74abb376625fbb8ed2405a0", "Url": "https://api.github.com/repos/priyashR/LocalProjects", "Date": "2017-08-21T10:37:55Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.WorldServer.getTileEntity(com.minespaceships.mod.overhead.ChatRegisterEntity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (entity != null) { return entity.ship; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/749/buggy-version/src.main.java.com.minespaceships.mod.overhead.ChatRegisterEntity.java", "BodyUseAPI": [], "Fixed commit": "addf3b591456cd3192225e9511e428dafa483cdb", "Url": "https://api.github.com/repos/DevraRabbit/mineSpaceships", "Date": "2015-02-27T16:01:00Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.intermine.web.logic.session.SessionMethods.getResultsTable(javax.servlet.http.HttpSession,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((pr != null) && ((pr.getPathQuery()) != null)) { pq = pr.getPathQuery(); }else { pq = controller.getPathQuery(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4848/buggy-version/intermine.web.main.src.org.intermine.web.struts.PollQueryAction.java", "BodyUseAPI": ["org.intermine.web.logic.results.PagedTable.getPathQuery()"], "Fixed commit": "b62a2d2ce44e4990c0b89cd22bb36f9b46e0f590", "Url": "https://api.github.com/repos/intermine/intermine", "Date": "2013-02-20T12:12:07Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((regionServerServices) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4281/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.CompactedHFilesDischarger.java", "BodyUseAPI": [], "Fixed commit": "894ce84b8330f9e3b1ca5b04e591c7a77cd2ce13", "Url": "https://api.github.com/repos/apache/hbase", "Date": "2016-01-11T11:20:59Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (projectionList[1].equals(\"*\")) { projectionList = columns; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6471/buggy-version/src.buffermanager.BufferManager.java", "BodyUseAPI": [], "Fixed commit": "fc2d91c5d00830fbc9fd649b1cad766cb421725b", "Url": "https://api.github.com/repos/Tyms-Team/BufferManager", "Date": "2015-04-15T21:34:06Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((theQuery.indexOf(\"where\")) != (-1)) theQuery = theQuery.substring(((theQuery.indexOf(\"where\")) + 5), i); else return new java.lang.String[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6471/buggy-version/src.buffermanager.BufferManager.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "fc2d91c5d00830fbc9fd649b1cad766cb421725b", "Url": "https://api.github.com/repos/Tyms-Team/BufferManager", "Date": "2015-04-15T21:34:06Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gplx.xowa.addons.bldrs.mass_parses.parses.utls.Xowe_wiki.Ttl_parse(rdr.Read_int(\"page_namespace\"),rdr.Read_bry_by_str(\"page_title\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cache.Get_or_null(page_ttl.Full_db())) == null) { cache.Add(page_ttl.Full_db(), itm); }else { Gfo_usr_dlg_.Instance.Warn_many(\"\", \"\", \"mass_parse: ignoring duplicate page title in page cache; title=~{0} id=~{1}\", page_ttl.Full_db(), page_id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1541/buggy-version/400_xowa.src.gplx.xowa.addons.bldrs.mass_parses.parses.utls.Xomp_tmpl_cache_bldr.java", "BodyUseAPI": ["gplx.xowa.addons.bldrs.mass_parses.parses.utls.Xow_page_cache.Add(page_ttl.Full_db(),gplx.xowa.addons.bldrs.mass_parses.parses.utls.Xow_page_cache_itm)", "gplx.xowa.addons.bldrs.mass_parses.parses.utls.Xoa_ttl.Full_db()", "Gfo_usr_dlg_.Instance.Warn_many(java.lang.String,java.lang.String,java.lang.String,page_ttl.Full_db(),int)", "gplx.xowa.addons.bldrs.mass_parses.parses.utls.Xoa_ttl.Full_db()"], "Fixed commit": "8524120a14eb09f9ceec77d804b40f8938411b08", "Url": "https://api.github.com/repos/gnosygnu/xowa", "Date": "2017-03-16T17:31:59Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(detail))) { detail.replace(Constants.REPLACE_MARK, \"\\n\"); holder.detailGuide.setText(detail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3416/buggy-version/ANDROID.TravlToTibet.app.src.main.java.com.dean.travltotibet.adapter.GuideDetailAdapter.java", "BodyUseAPI": ["java.lang.String.replace(Constants.REPLACE_MARK,java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "771772bc756a0527822cce218a4b87fb850ab933", "Url": "https://api.github.com/repos/a396901990/TTT", "Date": "2015-12-18T11:48:29Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (quiz2Send == \"\") continueOn = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3590/buggy-version/app.src.main.java.com.example.luke.btquiz.CreateQuiz.java", "BodyUseAPI": [], "Fixed commit": "e21f27d8bd68519eeb99ba0a80ccc73d3fc7a276", "Url": "https://api.github.com/repos/lukelowers/BTQuiz", "Date": "2016-12-02T18:47:27Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bentech.android.appcommons.activity.AppCommonsActivity.getSupportFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fm.getBackStackEntryCount()) > 0) { fm.popBackStackImmediate(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7184/buggy-version/app.src.main.java.com.bentech.android.appcommons.activity.AppCommonsActivity.java", "BodyUseAPI": ["android.support.v4.app.FragmentManager.popBackStackImmediate()"], "Fixed commit": "b2f2136c2d9b3b779df9d824f55c85d4f4e7c795", "Url": "https://api.github.com/repos/bendaniel10/appcommons", "Date": "2016-06-28T11:03:14Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currState) == 0) { reward = -3; }else reward = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4055/buggy-version/Driver.java", "BodyUseAPI": [], "Fixed commit": "0f0a2576075847d0252a1d7130a781d6d1708033", "Url": "https://api.github.com/repos/tunguyen17/graphics", "Date": "2016-07-05T14:43:58Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((location.getParent()) != null) { final de.uniulm.omi.cloudiator.sword.api.domain.Location parent = apply(location.getParent()); if (parent.isAssignable()) { builder.parent(parent); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/9151/buggy-version/drivers.src.main.java.de.uniulm.omi.cloudiator.sword.drivers.jclouds.converters.JCloudsLocationToLocation.java", "BodyUseAPI": ["de.uniulm.omi.cloudiator.sword.drivers.jclouds.converters.JCloudsLocationToLocation.apply(location.getParent())", "de.uniulm.omi.cloudiator.sword.api.domain.Location.getParent()"], "Fixed commit": "31751f8eb61ba2ced659fb55f6d15b9864ec9f1d", "Url": "https://api.github.com/repos/cloudiator/sword", "Date": "2015-11-09T15:36:02Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connectedClients.get(client.getClientId())) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/342/buggy-version/src.ChatRoom.java", "BodyUseAPI": [], "Fixed commit": "26d23e6a4d0a09943f99fe96403c75ca8b25620b", "Url": "https://api.github.com/repos/stefano-lupo/TCP-Chat-Server", "Date": "2017-10-29T14:53:25Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["common.sunshine.utils.ResultData.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (list.isEmpty()) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/9209/buggy-version/src.main.java.selling.sunshine.service.impl.StatisticServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "3d7aca62ccf3657361f8e1bed4c8677bd37eb760", "Url": "https://api.github.com/repos/sunshinezxf/Selling", "Date": "2016-11-16T09:15:50Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.netflix.priam.utils.TokenManager.clientPartitioner(fromYaml).equals(com.netflix.priam.utils.TokenManager.clientPartitioner(fromConfig))) { return fromConfig; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/12/buggy-version/priam.src.main.java.com.netflix.priam.defaultimpl.StandardTuner.java", "BodyUseAPI": [], "Fixed commit": "71a0a50c8b690f4a255b0aa30a6628a88eba48ce", "Url": "https://api.github.com/repos/bazaarvoice/Priam", "Date": "2017-09-28T21:33:46Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(songTableModel.getSongs().isEmpty())) && ((songTableModel.getSongs().get(0)) != (es.rafaespillaque.ayd.MainFrame.BACK_SONG))) { songTableModel.addSongAsFirst(es.rafaespillaque.ayd.MainFrame.BACK_SONG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5668/buggy-version/src.main.java.es.rafaespillaque.ayd.MainFrame.java", "BodyUseAPI": ["es.rafaespillaque.ayd.SongTableModel.addSongAsFirst(es.rafaespillaque.ayd.model.Song)"], "Fixed commit": "94e004cc3ca3e556fe0f5f6d872ec33632ec1a59", "Url": "https://api.github.com/repos/Rafaesp/awesome-youtube-downloader", "Date": "2015-07-07T19:25:28Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((X.get(i, i)) != 0) { diagInvEntries.set(i, i, (1 / (X.get(i, i)))); }else { diagInvEntries.set(i, i, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1079/buggy-version/src.edu.upenn.cis.swell.MathUtils.SVDTemplates.java", "BodyUseAPI": ["cern.colt.matrix.tdouble.impl.SparseDoubleMatrix2D.set(int,int,int)", "cern.colt.matrix.tdouble.impl.SparseDoubleMatrix2D.set(int,int,(1 / (X.get(i, i))))", "cern.colt.matrix.tdouble.impl.SparseDoubleMatrix2D.get(int,int)"], "Fixed commit": "4eb5f0f46bc349a8384152b1242104d318aeab5e", "Url": "https://api.github.com/repos/paramveerdhillon/swell", "Date": "2013-09-15T14:10:32Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bd.doubleValue()) > (newAmount * 100)) { this.amountIntegerSpinner.setValue((((int) (newAmount)) + 1)); }else { this.amountIntegerSpinner.setValue(((int) (newAmount))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3876/buggy-version/src.main.java.richtercloud.reflection.form.builder.components.money.AmountMoneyComponent.java", "BodyUseAPI": [], "Fixed commit": "9fdc8ad0b55a8cf8af6c3e5a4a3a4aaac67f1995", "Url": "https://api.github.com/repos/document-scanner/reflection-form-builder", "Date": "2017-01-16T18:46:02Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 11) { mFreeObjects.push(object); }else { mFreeObjects.add(object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8662/buggy-version/android.BeyondAR_Framework.src.com.beyondar.android.util.SimpleObjectPool.java", "BodyUseAPI": [], "Fixed commit": "0d8daa6afd892c2d950af55f60d4f8ef9e073839", "Url": "https://api.github.com/repos/BeAlive75/OnePlusAR", "Date": "2013-08-26T14:42:05Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (claim != null) { for (net.kaikk.mc.gpp.Claim subclaim : claim.getChildren()) { if ((subclaim.getID()) == (results.getInt(1))) { if ((results.getBytes(3)) == null) { citizen = null; }else { citizen = city.getCitizen(net.kaikk.mc.gpp.GriefPreventionPlus.getInstance().getServer().getOfflinePlayer(net.kaikk.mc.gppcities.DataStore.toUUID(results.getBytes(3))).getUniqueId()); } city.getPlots().put(results.getInt(1), city.new net.kaikk.mc.gppcities.Plot(results.getInt(1), subclaim, citizen, results.getString(4), new java.util.Date(results.getTimestamp(5).getTime()), results.getBoolean(6))); count++; removeFlag = false; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4324/buggy-version/src.main.java.net.kaikk.mc.gppcities.DataStore.java", "BodyUseAPI": [], "Fixed commit": "0d423efb5ac2b8ca6830295485499ea019002a78", "Url": "https://api.github.com/repos/KaiKikuchi/GriefPreventionPlus-Cities", "Date": "2015-12-31T00:01:36Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xmlpull.v1.XmlPullParser.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (name.equalsIgnoreCase(com.owncloud.android.lib.resources.shares.ShareXMLParser.NODE_STORAGE)) { readNode(parser, com.owncloud.android.lib.resources.shares.ShareXMLParser.NODE_STORAGE); }else if (name.equalsIgnoreCase(com.owncloud.android.lib.resources.shares.ShareXMLParser.NODE_MAIL_SEND)) { readNode(parser, com.owncloud.android.lib.resources.shares.ShareXMLParser.NODE_MAIL_SEND); }else if (name.equalsIgnoreCase(com.owncloud.android.lib.resources.shares.ShareXMLParser.NODE_SHARE_WITH_DISPLAY_NAME)) { share.setSharedWithDisplayName(readNode(parser, com.owncloud.android.lib.resources.shares.ShareXMLParser.NODE_SHARE_WITH_DISPLAY_NAME)); }else if (name.equalsIgnoreCase(com.owncloud.android.lib.resources.shares.ShareXMLParser.NODE_URL)) { share.setShareType(ShareType.PUBLIC_LINK); java.lang.String value = readNode(parser, com.owncloud.android.lib.resources.shares.ShareXMLParser.NODE_URL); share.setShareLink(value); }else { skip(parser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5905/buggy-version/src.com.owncloud.android.lib.resources.shares.ShareXMLParser.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)", "com.owncloud.android.lib.resources.shares.ShareXMLParser.readNode(org.xmlpull.v1.XmlPullParser,java.lang.String)"], "Fixed commit": "ecc3415e3e3c13fa8f73fdd51a88c1ab7087b199", "Url": "https://api.github.com/repos/jvd001/android-library", "Date": "2015-09-14T11:21:00Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cards.get(cardTwo).isFaceDown())) cards.get(cardTwo).turnAround();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6349/buggy-version/src.CardList.java", "BodyUseAPI": ["java.util.ArrayList<Card>.get(int)", "cards.get(cardTwo).turnAround()"], "Fixed commit": "655fc0cbdbd5b7b9bc174ab8d49539ad74b7f675", "Url": "https://api.github.com/repos/arthurvanstrien/memoryGame", "Date": "2017-06-06T20:32:01Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cards.get(cardOne).isFaceDown())) cards.get(cardOne).turnAround();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6349/buggy-version/src.CardList.java", "BodyUseAPI": ["java.util.ArrayList<Card>.get(int)", "cards.get(cardOne).turnAround()"], "Fixed commit": "655fc0cbdbd5b7b9bc174ab8d49539ad74b7f675", "Url": "https://api.github.com/repos/arthurvanstrien/memoryGame", "Date": "2017-06-06T20:32:01Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rolls) != 0) { fields.add(((rolls) + \"\")); }else { fields.add(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/37/buggy-version/src.main.java.pl.khuzzuk.wfrpchar.entities.items.usable.AbstractHandWeapon.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "3fe83a54d6d4f8cd72f86d0a41a855d2e3fd8194", "Url": "https://api.github.com/repos/khuzzuk/WFRPCharSheet", "Date": "2016-09-28T15:10:45Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getServer().getPlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (player != null) { account = getAPI().getAccount(player.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/432/buggy-version/src.org.melonbrew.fe.Fe.java", "BodyUseAPI": ["org.bukkit.entity.Player.getName()", "org.melonbrew.fe.API.getAccount(player.getName())"], "Fixed commit": "d58fcd4b0799a4dc24176babac4b4f158ac5452a", "Url": "https://api.github.com/repos/niccholaspage/Fe", "Date": "2012-08-22T04:57:57Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r.getStartNode().equals(start)) { return r; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/9119/buggy-version/src.main.java.org.animotron.graph.AnimoGraph.java", "BodyUseAPI": [], "Fixed commit": "b1bd71481ad7e63233e2245431d1b5330573684f", "Url": "https://api.github.com/repos/animotron/core", "Date": "2012-06-09T19:39:16Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (r.getEndNode().equals(end)) { return r; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/9119/buggy-version/src.main.java.org.animotron.graph.AnimoGraph.java", "BodyUseAPI": [], "Fixed commit": "b1bd71481ad7e63233e2245431d1b5330573684f", "Url": "https://api.github.com/repos/animotron/core", "Date": "2012-06-09T19:39:16Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.talend.core.GlobalServiceRegister.getDefault().isServiceRegistered(org.talend.core.services.IGITProviderService.class)) { gitProviderService = ((org.talend.core.services.IGITProviderService) (org.talend.core.GlobalServiceRegister.getDefault().getService(org.talend.core.services.IGITProviderService.class))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1385/buggy-version/main.plugins.org.talend.mdm.repository.src.main.java.org.talend.mdm.repository.ui.navigator.MDMRepositoryLabelProvider.java", "BodyUseAPI": ["org.talend.core.GlobalServiceRegister.getDefault().getService(java.lang.Class)"], "Fixed commit": "e8077e807232c26ae177498ff923922dc515e118", "Url": "https://api.github.com/repos/Talend/tmdm-studio-se", "Date": "2016-07-26T09:55:10Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.talend.core.GlobalServiceRegister.getDefault().isServiceRegistered(org.talend.mdm.repository.core.service.IMDMSVNProviderService.class)) { svnProviderService = ((org.talend.mdm.repository.core.service.IMDMSVNProviderService) (org.talend.core.GlobalServiceRegister.getDefault().getService(org.talend.mdm.repository.core.service.IMDMSVNProviderService.class))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1385/buggy-version/main.plugins.org.talend.mdm.repository.src.main.java.org.talend.mdm.repository.ui.navigator.MDMRepositoryLabelProvider.java", "BodyUseAPI": ["org.talend.core.GlobalServiceRegister.getDefault().getService(java.lang.Class)"], "Fixed commit": "e8077e807232c26ae177498ff923922dc515e118", "Url": "https://api.github.com/repos/Talend/tmdm-studio-se", "Date": "2016-07-26T09:55:10Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (serviceVip == 0) serviceVip = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7833/buggy-version/CDB.Project.src.mainPrograms.WeeklyTicketsReport.java", "BodyUseAPI": [], "Fixed commit": "f8f879e26de1aaf441ba214077764fe09454fc52", "Url": "https://api.github.com/repos/MuricaReimu/TinyProjects", "Date": "2017-08-17T07:54:09Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (incidentVip == 0) incidentVip = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7833/buggy-version/CDB.Project.src.mainPrograms.WeeklyTicketsReport.java", "BodyUseAPI": [], "Fixed commit": "f8f879e26de1aaf441ba214077764fe09454fc52", "Url": "https://api.github.com/repos/MuricaReimu/TinyProjects", "Date": "2017-08-17T07:54:09Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (serviceCountVip == 0) serviceCountVip = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7833/buggy-version/CDB.Project.src.mainPrograms.WeeklyTicketsReport.java", "BodyUseAPI": [], "Fixed commit": "f8f879e26de1aaf441ba214077764fe09454fc52", "Url": "https://api.github.com/repos/MuricaReimu/TinyProjects", "Date": "2017-08-17T07:54:09Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (incidentCountVip == 0) incidentCountVip = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7833/buggy-version/CDB.Project.src.mainPrograms.WeeklyTicketsReport.java", "BodyUseAPI": [], "Fixed commit": "f8f879e26de1aaf441ba214077764fe09454fc52", "Url": "https://api.github.com/repos/MuricaReimu/TinyProjects", "Date": "2017-08-17T07:54:09Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkbox.isChecked())) { android.widget.Toast.makeText(this, R.string.nietingecheckt, Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3912/buggy-version/app.src.main.java.com.example.josien.programmeerproject2.FriendsActivity.java", "BodyUseAPI": [], "Fixed commit": "3e53e8c2763cebc77474aadbc35a9bc090567a16", "Url": "https://api.github.com/repos/josienj/programmeerproject2", "Date": "2016-06-23T17:21:38Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MAX_A) > 0) { A = randGen.nextInt(MAX_A); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7920/buggy-version/src.main.java.model.entity.kids.SinEster.java", "BodyUseAPI": [], "Fixed commit": "4be0a091883c0347f641d5f1a4f02257c89c5b9c", "Url": "https://api.github.com/repos/mightoz/Killer-kidz", "Date": "2015-05-31T07:49:32Z"},
{"Line": "=>2018", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (negative) { chLocal = charAt(((bp) + (offset++))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4639/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONLexerBase.java", "BodyUseAPI": [], "Fixed commit": "89c00339d56ba3804198c745237496acf85ba04f", "Url": "https://api.github.com/repos/VictorZeng/fastjson", "Date": "2016-04-28T04:03:38Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (duration == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4668/buggy-version/src.main.java.net.codjo.maven.mojo.util.TimeUtil.java", "BodyUseAPI": [], "Fixed commit": "b57b4cb6163f3190c302ad4cbde9faff31e02ff0", "Url": "https://api.github.com/repos/codjo-sandbox/maven-test-release-plugin", "Date": "2014-08-01T14:54:12Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (duration == null) { buffer.append(\"null\"); }else { net.codjo.maven.mojo.util.TimeUtil.LONG_PERIOD_FORMATTER.printTo(buffer, duration.toPeriod()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4668/buggy-version/src.main.java.net.codjo.maven.mojo.util.TimeUtil.java", "BodyUseAPI": ["org.joda.time.Duration.toPeriod()", "org.joda.time.format.PeriodFormatter.printTo(java.lang.StringBuffer,duration.toPeriod())"], "Fixed commit": "b57b4cb6163f3190c302ad4cbde9faff31e02ff0", "Url": "https://api.github.com/repos/codjo-sandbox/maven-test-release-plugin", "Date": "2014-08-01T14:54:12Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.usfirst.frc.team948.robot.OI.getAutoPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (position != null) { edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putString(\"Auto position\", position.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3348/buggy-version/NRGRobot2017.src.org.usfirst.frc.team948.robot.Robot.java", "BodyUseAPI": ["edu.wpi.first.wpilibj.smartdashboard.SmartDashboard.putString(java.lang.String,java.lang.String)", "org.usfirst.frc.team948.robot.Robot.AutoPosition.toString()"], "Fixed commit": "114969aeaab75f5f6a8995ab4c665172f93917e5", "Url": "https://api.github.com/repos/NRG948/NRGRobot2017", "Date": "2017-03-04T03:33:43Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((antenna.getHeading()) != null) java.lang.System.out.println((\"Added antenna heading: \" + (antenna.getHeading())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/487/buggy-version/src.main.java.dk.frv.eavdam.io.derby.DerbyDBInterface.java", "BodyUseAPI": ["dk.frv.eavdam.data.Antenna.getHeading()", "java.io.PrintStream.println((\"Added antenna heading: \" + (antenna.getHeading())))"], "Fixed commit": "067e7aadb20ac1163a46f069876f5480c02cc9a4", "Url": "https://api.github.com/repos/dma-graveyard/EAVDAM", "Date": "2011-11-21T10:09:48Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["picard.analysis.CollectWgsMetrics.InfoAndRefBases.getInfo()", "picard.analysis.CollectWgsMetrics.InfoAndRefBases.getBases()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bases[((info.getPosition()) - 1)]) == 'N') continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5427/buggy-version/src.java.picard.analysis.CollectWgsMetrics.java", "BodyUseAPI": [], "Fixed commit": "fd0619062234a316d46992859c4960886d38fb61", "Url": "https://api.github.com/repos/KolesovAlexandr/PICARD.FORGAMES", "Date": "2015-11-05T14:32:07Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (maxStreak == 0) { online.cagocapps.walkingthedog.data.Achievements.resetAchievements(7, dbWrite); }else { online.cagocapps.walkingthedog.data.Achievements.updateAchievements(7, maxStreak, dbWrite); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/682/buggy-version/app.src.main.java.online.cagocapps.walkingthedog.DogUpdateReceiver.java", "BodyUseAPI": ["online.cagocapps.walkingthedog.data.Achievements.updateAchievements(int,int,android.database.sqlite.SQLiteDatabase)"], "Fixed commit": "e5765ffb0f63fc6ad4d7754f57230b6cbe607183", "Url": "https://api.github.com/repos/calvingoc/WalkingTheDog", "Date": "2017-07-10T23:00:28Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["query.getHints().get(Hints.GEOMETRY_DISTANCE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) { result = ((java.lang.Double) (query.getHints().get(Hints.GEOMETRY_SIMPLIFICATION))); log.warning(\"Hint for geometry simplification in query, fallback to base feature\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2379/buggy-version/modules.plugin.feature-pregeneralized.src.main.java.org.geotools.data.gen.PreGeneralizedFeatureSource.java", "BodyUseAPI": [], "Fixed commit": "4a4d4e7693ca77e60ce347ab507eff11b02c48b8", "Url": "https://api.github.com/repos/xandros6/geotools", "Date": "2014-12-18T12:36:28Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errorFound) { multiPolygonPointerAnnotation.setOffset(((pInputEvent.getCanvasPosition().getX()) + 20.0), ((pInputEvent.getCanvasPosition().getY()) + 20.0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6771/buggy-version/src.main.java.de.cismet.cismap.commons.gui.piccolo.eventlistener.CreateNewGeometryListener.java", "BodyUseAPI": [], "Fixed commit": "24efef621ccc24eff58eb44a94baead68c3525f6", "Url": "https://api.github.com/repos/cismet/cismap-commons", "Date": "2017-08-15T15:57:18Z"},
{"Line": "=>700", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iType.equals(ItemType.C4GROUP.toString())) { type = ItemType.C4GROUP; id = 529; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8173/buggy-version/src.IT4.GameFileManager.java", "BodyUseAPI": [], "Fixed commit": "7a206652e2ec5942be396db49f6655ebd5e05ecf", "Url": "https://api.github.com/repos/jmiller89/IT4", "Date": "2016-06-26T22:13:34Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((variable.getStreamId()) != null) { if ((context.getReferenceIDAlias(variable.getStreamId())) != null) { variableName = (context.getReferenceIDAlias(variable.getStreamId())) + \".\"; }else { variableName = (variable.getStreamId()) + \".\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6033/buggy-version/siddhi-hive-component.org.wso2.carbon.siddhihive.core.src.main.java.org.wso2.carbon.siddhihive.core.handler.ConditionHandler.java", "BodyUseAPI": ["org.wso2.carbon.siddhihive.core.configurations.Context.getReferenceIDAlias(variable.getStreamId())", "org.wso2.siddhi.query.api.expression.Variable.getStreamId()", "org.wso2.siddhi.query.api.expression.Variable.getStreamId()", "org.wso2.siddhi.query.api.expression.Variable.getStreamId()", "org.wso2.carbon.siddhihive.core.configurations.Context.getReferenceIDAlias(variable.getStreamId())"], "Fixed commit": "4a376a8f36494d04c790bfe998ff2b012ba9ba93", "Url": "https://api.github.com/repos/tishan89/siddhi-hive", "Date": "2014-06-23T07:47:10Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInlineNode(name)) { addSpaceBeforeNext = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/394/buggy-version/extensions.indexes.lucene.src.org.exist.indexing.lucene.DefaultTextExtractor.java", "BodyUseAPI": [], "Fixed commit": "d1272c8ffd7cac43b573c477eb13aa2d2efe8b6c", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2017-06-23T15:54:33Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.broadleafcommerce.core.web.order.CartState.getCart().getTotalAfterAppliedPayments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((orderTotalAfterAppliedPayments != null) && (orderTotalAfterAppliedPayments.isZero())) { showAllPaymentMethods = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6344/buggy-version/core.broadleaf-framework-web.src.main.java.org.broadleafcommerce.core.web.processor.OnePageCheckoutProcessor.java", "BodyUseAPI": [], "Fixed commit": "cf54342e09c093d0802211328da611b39206c07a", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2014-02-06T04:53:23Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.target.info.getPhotoSticker()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (result == null) return Default;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8153/buggy-version/src.org.catchyou.api.models.ChatUser.java", "BodyUseAPI": [], "Fixed commit": "d16cd12f55463deed57165a748b97d230a1f485c", "Url": "https://api.github.com/repos/XuPeiYao/CatchYouApi", "Date": "2015-10-18T04:21:35Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8153/buggy-version/src.org.catchyou.api.models.FbUserInfo.java", "BodyUseAPI": [], "Fixed commit": "d16cd12f55463deed57165a748b97d230a1f485c", "Url": "https://api.github.com/repos/XuPeiYao/CatchYouApi", "Date": "2015-10-18T04:21:35Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ball3Prog < 0) { ball3Prog += PATH_LENGTH; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2885/buggy-version/InfinityProgressBar.src.com.birin.infinityprogressbar.InfinityProgressBar.java", "BodyUseAPI": [], "Fixed commit": "d939a15ac12c510f10ff23c5cccd0ce55daa1eaa", "Url": "https://api.github.com/repos/birajpatel/InfinityProgressBar", "Date": "2014-10-24T06:23:29Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (even < end) { wordData = ((data[even]) << 8) & 65280; sum = sum + wordData; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4518/buggy-version/opendaylight.sal.api.src.main.java.org.opendaylight.controller.sal.packet.ICMP.java", "BodyUseAPI": [], "Fixed commit": "67534d812ccdfc1d152660165e4c69e972f60671", "Url": "https://api.github.com/repos/mandeepdhami/controller", "Date": "2014-09-17T05:39:50Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (taskList.size())) wrapItUp = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7158/buggy-version/Apphangar.src.main.java.ca.mimic.apphangar.WatchfulService.java", "BodyUseAPI": [], "Fixed commit": "3d7cecf9b0f3ab00e8836dd9557bae5954b6cae3", "Url": "https://api.github.com/repos/corcoran/Hangar", "Date": "2014-07-17T05:59:58Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNotificationRunning) { android.app.NotificationManager mNotificationManager = ((android.app.NotificationManager) (getSystemService(Context.NOTIFICATION_SERVICE))); mNotificationManager.notify(1337, notification); }else { startForeground(1337, notification); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7158/buggy-version/Apphangar.src.main.java.ca.mimic.apphangar.WatchfulService.java", "BodyUseAPI": [], "Fixed commit": "3d7cecf9b0f3ab00e8836dd9557bae5954b6cae3", "Url": "https://api.github.com/repos/corcoran/Hangar", "Date": "2014-07-17T05:59:58Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (block.getMaterial(block.getDefaultState()).isToolNotRequired()) { return \"null=-1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3833/buggy-version/src.main.java.tyra314.toolprogression.harvest.BlockOverwrite.java", "BodyUseAPI": [], "Fixed commit": "d4eb6524e661fb466cbd6ec6d69f6bfb1ff1695d", "Url": "https://api.github.com/repos/tyra314/ToolProgression", "Date": "2017-05-01T01:08:14Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["state.getBlock().getHarvestLevel(net.minecraft.block.state.IBlockState)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (required_level >= 0) { event.setCanceled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3833/buggy-version/src.main.java.tyra314.toolprogression.handlers.HarvestEventHandler.java", "BodyUseAPI": [], "Fixed commit": "d4eb6524e661fb466cbd6ec6d69f6bfb1ff1695d", "Url": "https://api.github.com/repos/tyra314/ToolProgression", "Date": "2017-05-01T01:08:14Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PlayerEvent.BreakSpeed.getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(BlockOverwrite.overwrites.containsKey(state.getBlock().getRegistryName()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3833/buggy-version/src.main.java.tyra314.toolprogression.handlers.HarvestEventHandler.java", "BodyUseAPI": [], "Fixed commit": "d4eb6524e661fb466cbd6ec6d69f6bfb1ff1695d", "Url": "https://api.github.com/repos/tyra314/ToolProgression", "Date": "2017-05-01T01:08:14Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getInfoPane()) != null) { transaction.remove(getInfoPane()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/9056/buggy-version/ibikecph-lib.src.main.java.com.spoiledmilk.ibikecph.map.handlers.NavigationMapHandler.java", "BodyUseAPI": [], "Fixed commit": "570afea461292f0b367d8663a9610f5518bf1d33", "Url": "https://api.github.com/repos/ibikecph/ibikecph-android", "Date": "2015-07-16T15:24:19Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curator) == null) { initZk(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8233/buggy-version/src.main.java.org.mvnsearch.intellij.plugin.zookeeper.ZkProjectComponent.java", "BodyUseAPI": [], "Fixed commit": "2f17759d02006db04c52dc4111af02de58c36998", "Url": "https://api.github.com/repos/linux-china/zookeeper-intellij", "Date": "2014-01-15T13:52:18Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curator) != null) { zkTree.setModel(new org.mvnsearch.intellij.plugin.zookeeper.ui.ZkTreeModel(curator, org.mvnsearch.intellij.plugin.zookeeper.ZkConfigPersistence.getInstance(project).whitePaths)); zkTree.updateUI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8233/buggy-version/src.main.java.org.mvnsearch.intellij.plugin.zookeeper.ZkProjectComponent.java", "BodyUseAPI": [], "Fixed commit": "2f17759d02006db04c52dc4111af02de58c36998", "Url": "https://api.github.com/repos/linux-china/zookeeper-intellij", "Date": "2014-01-15T13:52:18Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.verapdf.pdfa.VeraPDFFoundry.newPdfParser(java.io.InputStream,org.verapdf.pdfa.flavours.PDFAFlavour)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((this.validator) == null) || ((this.validator.getProfile().getPDFAFlavour()) != (parser.getFlavour()))) { this.validator = org.verapdf.pdfa.validators.Validators.createValidator(parser.getFlavour(), false, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2817/buggy-version/core.src.main.java.org.verapdf.pdfa.validators.ReferenceBatchValidator.java", "BodyUseAPI": ["org.verapdf.pdfa.validators.Validators.createValidator(parser.getFlavour(),boolean,int)", "org.verapdf.pdfa.PDFParser.getFlavour()"], "Fixed commit": "08e3c831e81c640040a22d9beb2ecde01d2243bd", "Url": "https://api.github.com/repos/BezrukovM/veraPDF-library", "Date": "2016-09-29T08:36:37Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerMoveEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((powerup.getLocation().getBlockY()) == (player.getLocation().getBlockY())) { if ((powerup.getLocation().getBlockZ()) == (player.getLocation().getBlockZ())) { for (int i = 0; i < 9; i++) { if ((player.getInventory().getItem(i)) == null) { com.endercrest.colorcube.events.MessageManager.getInstance().sendFMessage(\"game.pickup\", player, (\"type-\" + (com.endercrest.colorcube.events.PowerupManager.getInstance().getPowerupName(powerup.getType())))); remove.add(powerup); break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3965/buggy-version/src.main.java.com.endercrest.colorcube.events.PlayerMoveListener.java", "BodyUseAPI": ["com.endercrest.colorcube.events.PowerupManager.getInstance().getPowerupName(powerup.getType())", "org.bukkit.entity.Player.getInventory()", "powerup.getLocation().getBlockZ()", "player.getLocation().getBlockZ()", "com.endercrest.colorcube.game.Powerup.getType()", "com.endercrest.colorcube.game.Powerup.getLocation()", "java.util.List<com.endercrest.colorcube.game.Powerup>.add(com.endercrest.colorcube.game.Powerup)", "player.getInventory().getItem(int)", "com.endercrest.colorcube.events.MessageManager.getInstance().sendFMessage(java.lang.String,org.bukkit.entity.Player,(\"type-\" + (com.endercrest.colorcube.events.PowerupManager.getInstance().getPowerupName(powerup.getType()))))", "org.bukkit.entity.Player.getLocation()"], "Fixed commit": "56e152764fd5dcecd9c58c652283d7880d47d01f", "Url": "https://api.github.com/repos/endercrest/ColorCube", "Date": "2015-01-09T21:06:48Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (dbgFlags != null) value = flags | (dbgFlags.value); else value = flags;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3423/buggy-version/InfoCrawlers.src.DebugUtils.java", "BodyUseAPI": [], "Fixed commit": "de2f220ab1c3698fce871d7e83f063a27813ad3f", "Url": "https://api.github.com/repos/clembanas/EventViz-15", "Date": "2015-06-06T16:05:29Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentU.getCorrectlySpelt().get(i)) != null) if (word.getSpelling().equalsIgnoreCase(currentU.getCorrectlySpelt().get(i).getSpelling())) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2367/buggy-version/GroupProject.src.BackEnd.BackEnd.java", "BodyUseAPI": ["BackEnd.User.getCorrectlySpelt()", "word.getSpelling().equalsIgnoreCase(currentU.getCorrectlySpelt().get(i).getSpelling())", "currentU.getCorrectlySpelt().get(i).getSpelling()", "currentU.getCorrectlySpelt().get(int)"], "Fixed commit": "2b93dfd0ec6baaf0017d2ead0958cc551ab90cfd", "Url": "https://api.github.com/repos/UnrealDreamer/GroupProject", "Date": "2017-03-30T13:27:45Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { android.support.v13.app.ActivityCompat.postponeEnterTransition(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6454/buggy-version/XYZReader.src.main.java.com.example.xyzreader.ui.ArticleDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "b439f0e99c5778d2b0962722d5f96884cb81163f", "Url": "https://api.github.com/repos/RichardDapice/reader-xyz", "Date": "2017-06-07T06:52:21Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((m_internalPort) != (org.voltdb.common.Constants.DEFAULT_INTERNAL_PORT)) && (((m_leader) == null) || (m_leader.trim().isEmpty()))) { m_leader = \"localhost:\" + (java.lang.Integer.toString(m_internalPort)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3569/buggy-version/src.frontend.org.voltdb.VoltDB.java", "BodyUseAPI": [], "Fixed commit": "b336c055b59220f9491f0fac86337f934ca96ac6", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2016-09-20T20:00:54Z"},
{"Line": "=>686", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((((m_startAction) == (StartAction.PROBE)) && (((m_meshBrokers) == null) || (m_meshBrokers.trim().isEmpty()))) && (((m_hostCount) == (org.voltdb.VoltDB.UNDEFINED)) || ((m_hostCount) == 1))) && ((m_internalPort) != (org.voltdb.common.Constants.DEFAULT_INTERNAL_PORT))) { m_meshBrokers = \"localhost:\" + (java.lang.Integer.toString(m_internalPort)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3569/buggy-version/src.frontend.org.voltdb.VoltDB.java", "BodyUseAPI": [], "Fixed commit": "b336c055b59220f9491f0fac86337f934ca96ac6", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2016-09-20T20:00:54Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.theglicks.bukkit.fuedalism.landManagement.SelectionManager.selections.containsKey(player.getName())) { ls = org.theglicks.bukkit.fuedalism.landManagement.SelectionManager.getSelection(player); }else { ls = new org.theglicks.bukkit.fuedalism.landManagement.LandSelection(player.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4333/buggy-version/src.org.theglicks.bukkit.fuedalism.landManagement.SelectionManager.java", "BodyUseAPI": ["org.bukkit.entity.Player.getName()", "org.theglicks.bukkit.fuedalism.landManagement.SelectionManager.getSelection(org.bukkit.entity.Player)"], "Fixed commit": "57477ba47fcb6d0289123da9475ddc5ef8c74ad3", "Url": "https://api.github.com/repos/stevenmg/Fuedalism", "Date": "2013-08-07T20:32:51Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tran == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2669/buggy-version/src.main.java.suneido.database.query.Table.java", "BodyUseAPI": [], "Fixed commit": "38c5034dc20a3d57ade8a5640ce8fed85d8e4b2a", "Url": "https://api.github.com/repos/apmckinlay/jsuneido", "Date": "2017-02-07T00:14:05Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(expression.hasNext())) { throw new java.lang.RuntimeException((\"Lack an expression after \" + nextChar)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/9022/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "383f05add937fb1cd22a1fd1bc58bd12c9ad717e", "Url": "https://api.github.com/repos/dengyuankai272/expression", "Date": "2015-10-22T10:03:48Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.mrCookieSlime.CSCoreLibPlugin.general.Reflection.ReflectionUtils.getVersion().startsWith(\"v1_11_\")) || (me.mrCookieSlime.CSCoreLibPlugin.general.Reflection.ReflectionUtils.getVersion().startsWith(\"v1_12_\"))) { for (org.bukkit.potion.PotionEffect effect : ((org.bukkit.inventory.meta.PotionMeta) (item.getItemMeta())).getCustomEffects()) { if (effect.getType().equals(PotionEffectType.SATURATION)) { p.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.SATURATION, effect.getDuration(), effect.getAmplifier())); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4248/buggy-version/src.me.mrCookieSlime.Slimefun.listeners.ItemListener.java", "BodyUseAPI": [], "Fixed commit": "35b65139ce757f0830d828c8be6bdd98c474b0d2", "Url": "https://api.github.com/repos/Deathinflames/Slimefun4", "Date": "2017-11-29T20:01:31Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.groovy.grails.web.servlet.mvc.GrailsWebRequest.getCurrentRequest()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.codehaus.groovy.grails.web.util.WebUtils.isIncludeRequest(request))) { java.lang.Object attribute = grailsWebRequest.getAttribute(GrailsApplicationAttributes.GRAILS_CONTROLLER_CLASS, WebRequest.SCOPE_REQUEST); if (attribute instanceof org.codehaus.groovy.grails.commons.GrailsControllerClass) { controllerClass = ((org.codehaus.groovy.grails.commons.GrailsControllerClass) (attribute)); java.lang.Boolean canUse = ((java.lang.Boolean) (grailsWebRequest.getAttribute(GrailsApplicationAttributes.GRAILS_CONTROLLER_CLASS_AVAILABLE, WebRequest.SCOPE_REQUEST))); if (canUse == null) { controllerClass = null; }else { grailsWebRequest.removeAttribute(GrailsApplicationAttributes.GRAILS_CONTROLLER_CLASS_AVAILABLE, WebRequest.SCOPE_REQUEST); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5975/buggy-version/grails-web.src.main.groovy.org.codehaus.groovy.grails.web.servlet.mvc.AbstractGrailsControllerHelper.java", "BodyUseAPI": [], "Fixed commit": "e1885c208a53cc264003639e2e6377532d8d228c", "Url": "https://api.github.com/repos/ganta/grails-core", "Date": "2013-07-18T10:19:46Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.nbt.NBTTagCompound.getTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tag == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/537/buggy-version/generic.ch.modjam.generic.inventory.GenericNBTInventory.java", "BodyUseAPI": [], "Fixed commit": "3f96c34f21ea1965536effe0b02c39eaafb9ba4e", "Url": "https://api.github.com/repos/ksmonkey123/ModJam", "Date": "2014-06-29T20:39:49Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mouseDragged)) { layerMouseDrag = mouseSupport.fireMapMouseDragged(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8668/buggy-version/epd-ship.src.main.java.dk.dma.epd.ship.event.NavigationMouseMode.java", "BodyUseAPI": [], "Fixed commit": "f05dd21abd7e2476aeb2b5453bb135cea9dd33b0", "Url": "https://api.github.com/repos/dma-enav/EPD", "Date": "2014-02-19T13:48:43Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sourceforge.chessshell.plugin.api.IGameSymbolGetter<?>.getAdditionalContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (net.sourceforge.chessshell.domain.Nag.isMoveAnnotationNag(nagCode)) { getPdb().pgnImportAddNagOnPreviousMoveComment(nagCode); }else { getPdb().pgnImportAddNagOnCurrentPosition(nagCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/741/buggy-version/chessshell-api.src.net.sourceforge.chessshell.internal.gameparser.AbstractPgnParser.java", "BodyUseAPI": ["net.sourceforge.chessshell.internal.gameparser.IPgnImporter.pgnImportAddNagOnPreviousMoveComment(int)", "net.sourceforge.chessshell.internal.gameparser.IPgnImporter.pgnImportAddNagOnCurrentPosition(int)"], "Fixed commit": "5485afb59a305c1b049ce1640b66ac637d5b4ff6", "Url": "https://api.github.com/repos/eborgbjerg/chessshell-api-1", "Date": "2017-08-10T15:08:00Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.abilities.Ability.getSourceObjectIfItStillExists(mage.game.Game)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (sourcePermanent != null) { mage.game.permanent.Permanent permanent = game.getPermanent(getTargetPointer().getFirst(game, source)); if (permanent != null) { return permanent.addAttachment(source.getSourceId(), game); }else { mage.players.Player player = game.getPlayer(getTargetPointer().getFirst(game, source)); if (player != null) { return player.addAttachment(source.getSourceId(), game); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6915/buggy-version/Mage.src.mage.abilities.effects.common.AttachEffect.java", "BodyUseAPI": [], "Fixed commit": "1e7f82bb3c05c0b2a889f28fccb406ea3189ff46", "Url": "https://api.github.com/repos/Simown/mage", "Date": "2015-04-25T17:13:02Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index) { throw new java.lang.IllegalArgumentException(\"EXISTS is not allowed with indexes\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3739/buggy-version/database.src.main.java.org.jumbodb.database.service.query.sql.WhereVisitor.java", "BodyUseAPI": [], "Fixed commit": "a9165e21d45dfb7b22c6953f00ecb89dd9c9616a", "Url": "https://api.github.com/repos/comsysto/jumbodb", "Date": "2014-09-25T19:18:20Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (root.isDisposed()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7262/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.define.ViewAttributeWeights.java", "BodyUseAPI": [], "Fixed commit": "c2c3738a9f485fbd71a2428b4b4fd3c0bacd8da7", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-09-01T17:42:37Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(parent.exists())) { java.lang.System.err.println(\"Can't create path.\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5620/buggy-version/Code.classes.bin.DriveManager.java", "BodyUseAPI": [], "Fixed commit": "dc44ea226cb23d65cba162f2b0cc27892385807d", "Url": "https://api.github.com/repos/jkristof94/EFS", "Date": "2014-04-21T18:38:43Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(f.exists())) { java.lang.System.err.println(\"Can't create drive file.\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5620/buggy-version/Code.classes.bin.DriveManager.java", "BodyUseAPI": [], "Fixed commit": "dc44ea226cb23d65cba162f2b0cc27892385807d", "Url": "https://api.github.com/repos/jkristof94/EFS", "Date": "2014-04-21T18:38:43Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.exists()) { com.photon.phresco.framework.api.ProjectAdministrator administrator = com.photon.phresco.framework.PhrescoFrameworkFactory.getProjectAdministrator(); administrator.updateTestConfiguration(project, envName, browser, builder.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6716/buggy-version/framework.phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.FunctionalUtil.java", "BodyUseAPI": [], "Fixed commit": "f06ce2999860af2819bded04a5e1758cb97a3731", "Url": "https://api.github.com/repos/phresco/phresco", "Date": "2012-07-20T12:09:50Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bth740.eventfly.MainActivity.isLoggedIn) { bth740.eventfly.MainActivity.loginBtn.setText(\"Logout\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1832/buggy-version/EventFly.app.src.main.java.bth740.eventfly.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9ca38bd3d008831fc9cb94343bb63b819a72b351", "Url": "https://api.github.com/repos/PolymorphicStudios/Event-Fly", "Date": "2014-12-01T06:11:46Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((databaseAdapter.getDatabaseType()) == (org.citydb.api.database.DatabaseType.POSTGIS)) interruptableCallableStatement.registerOutParameter(1, databaseAdapter.getGeometryConverter().getNullGeometryType()); else interruptableCallableStatement.registerOutParameter(1, databaseAdapter.getGeometryConverter().getNullGeometryType(), databaseAdapter.getGeometryConverter().getNullGeometryTypeName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7563/buggy-version/src.org.citydb.database.adapter.AbstractUtilAdapter.java", "BodyUseAPI": ["org.citydb.database.adapter.AbstractDatabaseAdapter.getGeometryConverter()", "databaseAdapter.getGeometryConverter().getNullGeometryType()", "org.citydb.database.adapter.AbstractDatabaseAdapter.getGeometryConverter()", "java.sql.CallableStatement.registerOutParameter(int,databaseAdapter.getGeometryConverter().getNullGeometryType(),databaseAdapter.getGeometryConverter().getNullGeometryTypeName())", "org.citydb.database.adapter.AbstractDatabaseAdapter.getGeometryConverter()", "databaseAdapter.getGeometryConverter().getNullGeometryType()", "java.sql.CallableStatement.registerOutParameter(int,databaseAdapter.getGeometryConverter().getNullGeometryType())", "databaseAdapter.getGeometryConverter().getNullGeometryTypeName()"], "Fixed commit": "30833fd0020a4ca06f729c48311118f6aff7f664", "Url": "https://api.github.com/repos/3dcitydb/importer-exporter", "Date": "2015-11-13T17:43:05Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.jetbrains.jet.lang.resolve.extension.JetParameter>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.jetbrains.jet.lang.resolve.extension.InlineAnalyzerExtension.checkInlinableParameter(parameter, jetParameter, functionDescriptor, null)) { trace.report(Errors.NOT_YET_SUPPORTED_IN_INLINE.on(jetParameter, jetParameter, functionDescriptor)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7592/buggy-version/compiler.frontend.src.org.jetbrains.jet.lang.resolve.extension.InlineAnalyzerExtension.java", "BodyUseAPI": ["org.jetbrains.jet.lang.resolve.BindingTrace.report(Errors.NOT_YET_SUPPORTED_IN_INLINE.on(jetParameter, jetParameter, functionDescriptor))", "Errors.NOT_YET_SUPPORTED_IN_INLINE.on(org.jetbrains.jet.lang.resolve.extension.JetParameter,org.jetbrains.jet.lang.resolve.extension.JetParameter,org.jetbrains.jet.lang.resolve.extension.FunctionDescriptor)"], "Fixed commit": "44aa87afe632bd46b39859023eafb437cd33be43", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2014-05-15T12:32:02Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.util.config.Configuration.getNodes((\"users.\" + (player.getName())))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((a.size()) == 0) { player.sendMessage(((org.bukkit.ChatColor.AQUA) + \" - No points have beeb created.\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1949/buggy-version/src.me.pirogoeth.Waypoint.WaypointCommandParser.java", "BodyUseAPI": [], "Fixed commit": "1e48d9810aacd60977c1df7f17609dd4a4e37351", "Url": "https://api.github.com/repos/pirogoeth/Waypoint", "Date": "2011-07-10T22:36:06Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (istream == null) throw new java.io.IOException((\"Default configuration resource is not present: \" + (org.knapsack.Config.DEFAULT_CONFIGURATION)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/9103/buggy-version/org.knapsack.Config.java", "BodyUseAPI": [], "Fixed commit": "d5fea0ff20fbbc976613a7e5ce4ee46237de3c30", "Url": "https://api.github.com/repos/kgilmer/knapsack", "Date": "2011-06-03T03:19:43Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastFreqCounterResetTime) <= 0) { lastFreqCounterResetTime = edu.wpi.first.wpilibj.Timer.getFPGATimestamp(); }else if (timeSinceLastLog >= (frequencyReportInterval.get())) { double loopsPerSecond = (loopCycleCounter) / timeSinceLastLog; loopCycleCounter = 0; lastFreqCounterResetTime = edu.wpi.first.wpilibj.Timer.getFPGATimestamp(); xbot.common.command.BaseRobot.log.info((\"Robot loops per second: \" + loopsPerSecond)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7567/buggy-version/src.xbot.common.command.BaseRobot.java", "BodyUseAPI": [], "Fixed commit": "a4649442938637a8e0fe04da7eb46083e0d85abf", "Url": "https://api.github.com/repos/Team488/SeriouslyCommonLib", "Date": "2017-04-01T14:30:31Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!fetch) && isEmbedded) && (iContext.fetchEmbeddedDocuments())) fetch = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/899/buggy-version/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java", "BodyUseAPI": [], "Fixed commit": "191a0d97897e779f458fd766df1a5c7e0b13f7db", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2013-06-28T12:19:15Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((fieldValue == null) || ((!fetch) && (fieldValue instanceof com.orientechnologies.orient.core.db.record.OIdentifiable))) || (((!(fieldValue instanceof com.orientechnologies.orient.core.db.record.OIdentifiable)) && (((!(fieldValue instanceof com.orientechnologies.orient.core.db.record.ORecordLazyMultiValue)) || (!(((com.orientechnologies.orient.core.db.record.ORecordLazyMultiValue) (fieldValue)).rawIterator().hasNext()))) || (!((((com.orientechnologies.orient.core.db.record.ORecordLazyMultiValue) (fieldValue)).rawIterator().next()) instanceof com.orientechnologies.orient.core.db.record.OIdentifiable)))) && (!((((com.orientechnologies.common.collection.OMultiValue.getFirstValue(fieldValue)) instanceof com.orientechnologies.orient.core.db.record.OIdentifiable) || ((com.orientechnologies.common.collection.OMultiValue.getFirstValue(com.orientechnologies.common.collection.OMultiValue.getFirstValue(fieldValue))) instanceof com.orientechnologies.orient.core.db.record.OIdentifiable)) || ((com.orientechnologies.common.collection.OMultiValue.getFirstValue(com.orientechnologies.common.collection.OMultiValue.getFirstValue(com.orientechnologies.common.collection.OMultiValue.getFirstValue(fieldValue)))) instanceof com.orientechnologies.orient.core.db.record.OIdentifiable))))) { iContext.onBeforeStandardField(fieldValue, fieldName, iUserObject); iListener.processStandardField(record, fieldValue, fieldName, iContext, iUserObject); iContext.onAfterStandardField(fieldValue, fieldName, iUserObject); }else { try { if (fetch) { final int nextLevel = (isEmbedded) ? iLevelFromRoot : iLevelFromRoot + 1; com.orientechnologies.orient.core.fetch.OFetchHelper.fetch(record, iUserObject, iFetchPlan, fieldValue, fieldName, iCurrentLevel, nextLevel, iFieldDepthLevel, parsedRecords, depthLevel, fieldPath, iListener, iContext); } } catch (java.lang.Exception e) { e.printStackTrace(); com.orientechnologies.common.log.OLogManager.instance().error(null, \"Fetching error on record %s\", e, record.getIdentity()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/899/buggy-version/core.src.main.java.com.orientechnologies.orient.core.fetch.OFetchHelper.java", "BodyUseAPI": ["com.orientechnologies.orient.core.fetch.OFetchContext.onAfterStandardField(java.lang.Object,java.lang.String,java.lang.Object)", "com.orientechnologies.orient.core.fetch.OFetchContext.onBeforeStandardField(java.lang.Object,java.lang.String,java.lang.Object)", "com.orientechnologies.orient.core.fetch.OFetchListener.processStandardField(com.orientechnologies.orient.core.record.ORecordSchemaAware<?>,java.lang.Object,java.lang.String,com.orientechnologies.orient.core.fetch.OFetchContext,java.lang.Object)", "com.orientechnologies.orient.core.fetch.OFetchHelper.fetch(com.orientechnologies.orient.core.record.ORecordSchemaAware<?>,java.lang.Object,java.util.Map<java.lang.String, java.lang.Integer>,java.lang.Object,java.lang.String,int,int,int,java.util.Map<com.orientechnologies.orient.core.id.ORID, java.lang.Integer>,int,java.lang.String,com.orientechnologies.orient.core.fetch.OFetchListener,com.orientechnologies.orient.core.fetch.OFetchContext)"], "Fixed commit": "191a0d97897e779f458fd766df1a5c7e0b13f7db", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2013-06-28T12:19:15Z"},
{"Line": "=>1470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (op.getRetTypes().get(0).isNativeType()) { java.lang.String arg = (op.getName()) + \"Rt\"; method.addMethodStatement((((((\" \" + (opRetType.getTypeName())) + \" \") + arg) + \" = \") + opCall)); java.lang.StringBuilder buf = new java.lang.StringBuilder(); buf.append(\"(\").append(arg).append(\" == null) ? null : new \").append(getConfig().getAreaPackage(StdStrings.MAL)).append(\"mal.\").append(getConfig().getStructureFolder()).append(\".\").append(StdStrings.UNION).append(\"(\").append(arg).append(\")\"); method.addMethodStatement(createMethodCall(((\" interaction.sendResponse(\" + (buf.toString())) + \")\"))); }else { method.addMethodStatement(createMethodCall(((\" interaction.sendResponse(\" + opCall) + \")\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2174/buggy-version/GEN_JAVA.src.main.java.esa.mo.tools.stubgen.GeneratorLangs.java", "BodyUseAPI": ["esa.mo.tools.stubgen.specification.OperationSummary.getName()"], "Fixed commit": "4eba665648fae67be50b6395c19da95fc32e1b8c", "Url": "https://api.github.com/repos/esa/CCSDS_MO_StubGenerator", "Date": "2016-09-27T09:25:26Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.time.Month.of(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((month == (java.time.Month.FEBRUARY)) && (!(java.time.Year.isLeap(yr)))) { while (day == 29) { day = 1 + (socialMedia.generators.structures.DateGenerator.rand.nextInt(month.maxLength())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7246/buggy-version/DB_Generator.src.socialMedia.generators.structures.DateGenerator.java", "BodyUseAPI": ["java.util.Random.nextInt(int)", "java.time.Month.maxLength()"], "Fixed commit": "940afb241380bbceadad9e699d8f157f0489d8e6", "Url": "https://api.github.com/repos/zaharacw/EWU_CSCD_527_Project", "Date": "2017-02-22T06:14:01Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.rnds.containsKey(new java.lang.Long(vertex.getId().get())))) { this.rnds.put(new java.lang.Long(vertex.getId().get()), new java.util.Random(vertex.getId().get())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3331/buggy-version/giraph-examples.src.main.java.org.apache.giraph.examples.jabeja.NodePartitioningComputation.java", "BodyUseAPI": ["vertex.getId().get()", "org.apache.giraph.graph.Vertex<org.apache.hadoop.io.LongWritable, org.apache.giraph.examples.jabeja.NodePartitioningVertexData, org.apache.hadoop.io.IntWritable>.getId()", "org.apache.giraph.graph.Vertex<org.apache.hadoop.io.LongWritable, org.apache.giraph.examples.jabeja.NodePartitioningVertexData, org.apache.hadoop.io.IntWritable>.getId()", "java.util.HashMap<java.lang.Long, java.util.Random>.put(java.lang.Long,java.util.Random)", "vertex.getId().get()"], "Fixed commit": "708ea1f3a31c406eb85077866f2c7374c04bd71c", "Url": "https://api.github.com/repos/pushparajxa/giraph", "Date": "2013-12-23T19:37:21Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["inventory.getItem(i).getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (curItemdata == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4478/buggy-version/Lavasurvival.src.main.java.me.eddiep.minecraft.ls.system.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "bf897c7c55447ae6a8aa2b756f0aa43f66accf94", "Url": "https://api.github.com/repos/pupnewfster/Lavasurvival", "Date": "2015-12-21T04:47:06Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"gradle\".equals(layoutName)) { layout = instantiator.newInstance(org.gradle.api.internal.artifacts.repositories.GradleRepositoryLayout.class); }else { throw new java.lang.IllegalArgumentException(\"Layout name must be one of: ivy, maven, pattern, gradle\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1901/buggy-version/subprojects.dependency-management.src.main.java.org.gradle.api.internal.artifacts.repositories.DefaultIvyArtifactRepository.java", "BodyUseAPI": [], "Fixed commit": "ae576bf4d07dc9853760738567c2b0e5696e459b", "Url": "https://api.github.com/repos/benmccann/gradle", "Date": "2014-12-11T05:33:48Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(new java.io.File(tempDir, image).exists())) { net.ftb.util.DownloadUtils.saveImage(image, tempDir, \"png\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1391/buggy-version/src.main.java.net.ftb.data.ModPack.java", "BodyUseAPI": [], "Fixed commit": "0f42aa134ef15d948a15146d359a53a9fb31ceba", "Url": "https://api.github.com/repos/jikuja/FTBLaunch", "Date": "2015-06-01T11:03:48Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(new java.io.File(tempDir, logo).exists())) { net.ftb.util.DownloadUtils.saveImage(logo, tempDir, \"png\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1391/buggy-version/src.main.java.net.ftb.data.ModPack.java", "BodyUseAPI": [], "Fixed commit": "0f42aa134ef15d948a15146d359a53a9fb31ceba", "Url": "https://api.github.com/repos/jikuja/FTBLaunch", "Date": "2015-06-01T11:03:48Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIsTouchInCircle) == true) { dispatchTriggerEvent(com.android.internal.widget.CircularSelector.OnCircularSelectorTriggerListener.LOCK_ICON_TRIGGERED); reset(); invalidate(); }else { reset(); invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5021/buggy-version/src.com.android.internal.widget.CircularSelector.java", "BodyUseAPI": [], "Fixed commit": "93f8a08e00ae1087b48f17c4b00c93e91903d90b", "Url": "https://api.github.com/repos/linuxmotion/Lockscreens", "Date": "2011-05-07T23:04:48Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.android.internal.widget.CircularSelector.DBG) log(\"touch-down outside the arc or circle\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5021/buggy-version/src.com.android.internal.widget.CircularSelector.java", "BodyUseAPI": [], "Fixed commit": "93f8a08e00ae1087b48f17c4b00c93e91903d90b", "Url": "https://api.github.com/repos/linuxmotion/Lockscreens", "Date": "2011-05-07T23:04:48Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((((il.org.spartan.spartanizer.tippers.FieldAccess) (leftAss)).getExpression()) instanceof il.org.spartan.spartanizer.tippers.ThisExpression)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2449/buggy-version/src.main.java.il.org.spartan.spartanizer.tippers.MatchCtorParamNamesToFieldsIfAssigned.java", "BodyUseAPI": [], "Fixed commit": "be01c1c6a368df35fbb20d4e40cd81968596f098", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2016-12-07T14:36:19Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(oldTagNode.hasChildNodes())) { oldTagNode.appendChild(oldDoc.createTextNode(newTag)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8849/buggy-version/src.util.FileManager.java", "BodyUseAPI": ["org.w3c.dom.Node.appendChild(org.w3c.dom.Text)"], "Fixed commit": "918b20e5e8ef0a9df48113394aa8c749808c716c", "Url": "https://api.github.com/repos/TestTeam5/SAH-ChildrenSystem", "Date": "2017-06-04T05:30:14Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ac.isSetParentSBMLObject())) sp.setParamType(ac);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/281/buggy-version/src.sbmlplugin.pane.AdvectionDialog.java", "BodyUseAPI": ["org.sbml.jsbml.ext.spatial.SpatialParameterPlugin.setParamType(org.sbml.jsbml.ext.spatial.AdvectionCoefficient)"], "Fixed commit": "19f6f3fece35797fa915da24afecededc57779b9", "Url": "https://api.github.com/repos/spatialsimulator/XitoSBML", "Date": "2016-07-05T10:15:02Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dc.isSetParentSBMLObject())) sp.setParamType(dc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/281/buggy-version/src.sbmlplugin.pane.DiffusionDialog.java", "BodyUseAPI": ["org.sbml.jsbml.ext.spatial.SpatialParameterPlugin.setParamType(org.sbml.jsbml.ext.spatial.DiffusionCoefficient)"], "Fixed commit": "19f6f3fece35797fa915da24afecededc57779b9", "Url": "https://api.github.com/repos/spatialsimulator/XitoSBML", "Date": "2016-07-05T10:15:02Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(bc.isSetParentSBMLObject())) sp.setParamType(bc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/281/buggy-version/src.sbmlplugin.pane.BoundaryConditionDialog.java", "BodyUseAPI": ["org.sbml.jsbml.ext.spatial.SpatialParameterPlugin.setParamType(org.sbml.jsbml.ext.spatial.BoundaryCondition)"], "Fixed commit": "19f6f3fece35797fa915da24afecededc57779b9", "Url": "https://api.github.com/repos/spatialsimulator/XitoSBML", "Date": "2016-07-05T10:15:02Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (longitude < 0) { longitude = longitude + ((GeometricConstants.LONGITUDE_DEGREE_RANGE) / 2); }else { longitude = longitude - ((GeometricConstants.LONGITUDE_DEGREE_RANGE) / 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2105/buggy-version/hibernate-search-engine.src.main.java.org.hibernate.search.spatial.impl.Point.java", "BodyUseAPI": [], "Fixed commit": "358a25bc05e977e57356200e682022ea1d890616", "Url": "https://api.github.com/repos/nicolashelleringer/hibernate-search", "Date": "2012-04-16T09:50:57Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.apollographql.apollo.internal.field.CacheFieldValueResolver.fieldValue(com.apollographql.apollo.cache.normalized.Record,com.apollographql.apollo.api.ResponseField)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (values == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1614/buggy-version/apollo-runtime.src.main.java.com.apollographql.apollo.internal.field.CacheFieldValueResolver.java", "BodyUseAPI": [], "Fixed commit": "5470527b6062e034469f2ad53b1b47eff6728315", "Url": "https://api.github.com/repos/sav007/apollo-android", "Date": "2017-06-29T17:04:43Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset >= (reader.length())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5411/buggy-version/src.main.java.com.netflix.nfgraph.compressed.BitSetOrdinalSet.java", "BodyUseAPI": [], "Fixed commit": "6b28d7df390b2b685e28101a8648bc35be4460dc", "Url": "https://api.github.com/repos/Netflix/netflix-graph", "Date": "2014-09-15T21:50:04Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHD) != null) mHD.resetOdometer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8348/buggy-version/src.org.harleydroid.HarleyDroid.java", "BodyUseAPI": [], "Fixed commit": "401b1bbc5198ee1dec8eee48493e654da1f3ffd2", "Url": "https://api.github.com/repos/stelian42/HarleyDroid", "Date": "2011-11-30T11:38:24Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.String.class.isAssignableFrom(prop.getType())) { json.set(name, prop.getStringValue()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2104/buggy-version/src.com.joshondesign.treegui.modes.aminolang.AminoLangJSONExport.java", "BodyUseAPI": ["com.joshondesign.treegui.modes.aminolang.JSONPrinter.set(java.lang.String,prop.getStringValue())", "com.joshondesign.treegui.modes.aminojava.Property.getStringValue()"], "Fixed commit": "b1f6cfd7949316a6632565e4036428225f83c64f", "Url": "https://api.github.com/repos/joshmarinacci/Leo2", "Date": "2013-04-05T03:17:21Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.service.UserLocalServiceUtil.fetchUserByScreenName(long,user2.getUsername())", "com.liferay.portal.service.UserLocalServiceUtil.fetchUserByScreenName(long,user1.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((instance1 == null) || (instance2 == null)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5589/buggy-version/src.main.java.it.italiangrid.portal.registration.util.GroupComparator.java", "BodyUseAPI": [], "Fixed commit": "76272b5f5cc9d84bb1d2ef0eeb183782104d9693", "Url": "https://api.github.com/repos/italiangrid/IGIPortalRegistration", "Date": "2014-03-07T13:24:50Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.service.UserLocalServiceUtil.fetchUserByScreenName(long,user1.getUsername())", "com.liferay.portal.service.UserLocalServiceUtil.fetchUserByScreenName(long,user2.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((instance1 == null) || (instance2 == null)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5589/buggy-version/src.main.java.it.italiangrid.portal.registration.util.LiferayUIDComparator.java", "BodyUseAPI": [], "Fixed commit": "76272b5f5cc9d84bb1d2ef0eeb183782104d9693", "Url": "https://api.github.com/repos/italiangrid/IGIPortalRegistration", "Date": "2014-03-07T13:24:50Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.service.UserLocalServiceUtil.fetchUserByScreenName(long,user2.getUsername())", "com.liferay.portal.service.UserLocalServiceUtil.fetchUserByScreenName(long,user1.getUsername())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((instance1 == null) || (instance2 == null)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5589/buggy-version/src.main.java.it.italiangrid.portal.registration.util.RegistrationDateComparator.java", "BodyUseAPI": [], "Fixed commit": "76272b5f5cc9d84bb1d2ef0eeb183782104d9693", "Url": "https://api.github.com/repos/italiangrid/IGIPortalRegistration", "Date": "2014-03-07T13:24:50Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newSubmissions.isEmpty()) { nomore = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7822/buggy-version/app.src.main.java.me.ccrama.redditslide.Adapters.SubredditSearchPosts.java", "BodyUseAPI": [], "Fixed commit": "dc4b8674daa988f2782d73d309c72c90ecd0489d", "Url": "https://api.github.com/repos/ccrama/Slide", "Date": "2016-08-31T19:55:35Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWeekend) this.setBackground(CalendarUtils.weekendColor); else this.setBackground(java.awt.Color.WHITE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1300/buggy-version/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.calendarview.year.DayPanel.java", "BodyUseAPI": [], "Fixed commit": "fe1df83a572b701ec4d9ad271184337d593920fc", "Url": "https://api.github.com/repos/CS3733Team1/wpi-suite", "Date": "2013-12-07T06:10:14Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(from.getClass().equals(to.getClass()))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5877/buggy-version/Core.src.com.serotonin.m2m2.util.JsonSerializableUtility.java", "BodyUseAPI": [], "Fixed commit": "153e8237bd0522439a1bc9c0645024797a61e93d", "Url": "https://api.github.com/repos/infiniteautomation/ma-core-public", "Date": "2017-05-30T20:02:36Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.emf) != null) { this.emf.close(); this.emf = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3637/buggy-version/common-utils.src.main.java.fr.mby.utils.common.jpa.AbstractOsgiJpaDao.java", "BodyUseAPI": [], "Fixed commit": "0e1c6e26f30b2da02200b4a158b0a9b6451ff04a", "Url": "https://api.github.com/repos/mxbossard/max-utils", "Date": "2013-09-13T19:12:04Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((mode.equals(Mode.INSTALLER)) || (mode.equals(Mode.CONVERT)))) { final uk.ac.ebi.interpro.scan.management.model.implementations.panther.PantherBinaryStep stepPantherRunBinary = ((uk.ac.ebi.interpro.scan.management.model.implementations.panther.PantherBinaryStep) (ctx.getBean(\"stepPantherRunBinary\"))); stepPantherRunBinary.setUserDir(parsedCommandLine.getOptionValue(I5Option.USER_DIR.getLongOpt()).trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1871/buggy-version/core.jms-implementation.src.main.java.uk.ac.ebi.interpro.scan.jms.main.Run.java", "BodyUseAPI": [], "Fixed commit": "66cb9cc1e045329e00cf74b6240cb7db22447093", "Url": "https://api.github.com/repos/ebi-pf-team/interproscan", "Date": "2015-12-08T12:15:31Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((donnu.zolotarev.SpaceShip.Units.BaseUnit.getEnemiesOnMap()) == 0) { needWait = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2861/buggy-version/src.donnu.zolotarev.SpaceShip.Waves.UnitWave.java", "BodyUseAPI": [], "Fixed commit": "89257d1deed2b483cf8c672088e65d9a5ea8afa2", "Url": "https://api.github.com/repos/MrVilkaman/SpaceshipsBattle", "Date": "2014-11-14T18:40:32Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.appspot.livelove.controller.LoginController.asString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(_continue)) { _continue = \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6884/buggy-version/src.com.appspot.livelove.controller.LoginController.java", "BodyUseAPI": [], "Fixed commit": "f2db30c97bad68d461ecb0ac1b579dee0da90781", "Url": "https://api.github.com/repos/georgenano/live-love", "Date": "2011-09-01T11:26:24Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (solidType.equals(\"treePiece\")) { java.util.List<pl.aleksander.rekawek.FSC.entity.InvoiceItem> invoice = invoiceItemRepository.findInvoiceItemTreePiece(magazine.getInvoice().getId()); for (pl.aleksander.rekawek.FSC.entity.InvoiceItem invoiceItem : invoice) { quantCm += invoiceItem.getQuantityCm3(); quantGrams += invoiceItem.getQuantityGrams(); } }else if (solidType.equals(\"plainWood\")) { java.util.List<pl.aleksander.rekawek.FSC.entity.InvoiceItem> invoice = invoiceItemRepository.findInvoiceItemPlainWood(magazine.getInvoice().getId()); for (pl.aleksander.rekawek.FSC.entity.InvoiceItem invoiceItem : invoice) { quantCm += invoiceItem.getQuantityCm3(); quantGrams += invoiceItem.getQuantityGrams(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5506/buggy-version/src.main.java.pl.aleksander.rekawek.FSC.controller.MagazineController.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "5cf92d5e2249cd06bf138e6cd5db80307c88022b", "Url": "https://api.github.com/repos/Olo8612/FSC", "Date": "2017-07-11T19:23:41Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sk89q.craftbook.mech.CommandItems.CommandItemDefinition.readDefinition(com.sk89q.util.yaml.YAMLProcessor,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (definitions.add(comdef)) com.sk89q.craftbook.bukkit.CraftBookPlugin.logger().info((\"Added CommandItem: \" + key)); else com.sk89q.craftbook.bukkit.CraftBookPlugin.logger().warning((\"Failed to add CommandItem: \" + key));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3811/buggy-version/src.main.java.com.sk89q.craftbook.mech.CommandItems.java", "BodyUseAPI": [], "Fixed commit": "cecbe309e3ae97ac444e77d501a479272bd52843", "Url": "https://api.github.com/repos/MCRUS/craftbook", "Date": "2013-06-01T08:46:09Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.bitcoin.core.Wallet.getBalance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((balance.longValue()) < (config.getMinForwardBalance())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/493/buggy-version/src.main.java.org.killbill.bitcoin.osgi.BankForwarder.java", "BodyUseAPI": [], "Fixed commit": "efec43e39e0749c88eeeefb0cf7a703e8c874212", "Url": "https://api.github.com/repos/killbill/killbill-bitcoin-plugin", "Date": "2014-01-10T01:55:40Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mygy.common.service.BussinessService.getByPhone(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bussiness == null) { return \"bussiness/login\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8367/buggy-version/mygy-api.src.main.java.com.mygy.api.action.BussinessApi.java", "BodyUseAPI": [], "Fixed commit": "0ff71836f24ad884b4237d109cb82bb4446dc8fd", "Url": "https://api.github.com/repos/micolore/1123-mygy", "Date": "2017-12-24T09:51:29Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mygy.api.util.LoginUtils.getCookieByName(Constant.USER_PHONE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.mygy.common.util.StringUtil.isBlank(phone)) { return \"bussiness/login\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8367/buggy-version/mygy-api.src.main.java.com.mygy.api.action.BussinessApi.java", "BodyUseAPI": [], "Fixed commit": "0ff71836f24ad884b4237d109cb82bb4446dc8fd", "Url": "https://api.github.com/repos/micolore/1123-mygy", "Date": "2017-12-24T09:51:29Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config.forceFromStart) startTime = config.startOffsetTime;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2494/buggy-version/src.jvm.trident.kafka.KafkaUtils.java", "BodyUseAPI": [], "Fixed commit": "aa4bd119d61e1f44cc063b995c015c0fc3f26ba8", "Url": "https://api.github.com/repos/nathanmarz/trident-kafka", "Date": "2012-08-22T08:16:02Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ccAddresses.size()) > 0) { java.lang.String[] ccEmailAddresses = new java.lang.String[ccAddresses.size()]; ccEmailAddresses = ccAddresses.toArray(ccEmailAddresses); messageDetails.setccEmailAddress(ccEmailAddresses); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8998/buggy-version/webapp.src.main.java.com.rr.generic.ui.controller.mainController.java", "BodyUseAPI": ["java.util.List<java.lang.String>.toArray(java.lang.String[])", "java.util.List<java.lang.String>.size()"], "Fixed commit": "ae0b3891057eef29815d641a5f238e4abcd5f1ea", "Url": "https://api.github.com/repos/bowlinktech/genericRR", "Date": "2016-07-06T02:41:40Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getCommand()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5643/buggy-version/ORM.org.framed.orm.ui.src.org.framed.orm.ui.editor.EditorChangeNotifier.java", "BodyUseAPI": [], "Fixed commit": "1b0c8de0f26cffcc23851d0c76fe10ba3d016885", "Url": "https://api.github.com/repos/leondart/FRaMED", "Date": "2017-10-20T08:07:23Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringArrayListExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (excluded == null) { excluded = java.util.Collections.singletonList(\"-none-\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8256/buggy-version/androidTBLoader.src.main.java.org.literacybridge.androidtbloader.community.ChooseCommunityFragment.java", "BodyUseAPI": [], "Fixed commit": "e1aacac26e81cd7369fdc732167dae501ad1a841", "Url": "https://api.github.com/repos/LiteracyBridge/acm", "Date": "2017-09-18T23:15:16Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (achievementbadgeid != null) { if (achievementbadgeid.equals(\"\")) { achievementbadgeid = null; } currentAchievement.setBadgeId(achievementbadgeid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5996/buggy-version/GamificationAchievementService.src.main.i5.las2peer.services.gamificationAchievementService.GamificationAchievementService.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "5b8757dc805805a9651f2d1c56bbbb24b6002d49", "Url": "https://api.github.com/repos/mabdh/Gamification-Framework", "Date": "2016-09-26T05:35:45Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!accessTHEq) { com.ets.gd.ToolHawk.Fragments.ToolhawkDashboardFragmentNew.fab.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6517/buggy-version/app.src.main.java.com.ets.gd.ToolHawk.Fragments.ToolhawkDashboardFragmentNew.java", "BodyUseAPI": [], "Fixed commit": "5bcb64bbadde6107cab3b089ab2b0bab645c50f2", "Url": "https://api.github.com/repos/hassan-akhtar/GD", "Date": "2017-07-11T13:16:50Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!accessFBEq) { com.ets.gd.FireBug.Fragments.FirebugDashboardFragment.fab.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6517/buggy-version/app.src.main.java.com.ets.gd.FireBug.Fragments.FirebugDashboardFragment.java", "BodyUseAPI": [], "Fixed commit": "5bcb64bbadde6107cab3b089ab2b0bab645c50f2", "Url": "https://api.github.com/repos/hassan-akhtar/GD", "Date": "2017-07-11T13:16:50Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (origin_stat != null) { for (Models.Complements.Source.OriginStatDistribution os : origin_stat) { origin_stat_value = os.getType(); if (os.getType().toLowerCase().trim().equals(Tools.Configuration.getParameter(\"origin_stat_native\"))) { origin_stat_found = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/9163/buggy-version/OccurrencesValidation.src.Controllers.Occurrences.CTempOccurrences.java", "BodyUseAPI": [], "Fixed commit": "f1defae2c75ef2a7b18a573baa1bba80cf6e507e", "Url": "https://api.github.com/repos/CIAT-DAPA/cwr_occurrencesvalidation", "Date": "2015-05-11T15:53:38Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((appsTransfered) != null) && (!(appsTransfered.isEmpty()))) { return appsTransfered.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8161/buggy-version/app.src.main.java.cm.aptoide.pt.spotandshareapp.view.SpotAndShareTransferRecordAdapter.java", "BodyUseAPI": ["java.util.List<cm.aptoide.pt.spotandshareapp.SpotAndShareTransfer>.size()"], "Fixed commit": "408ba8e018330f557922456467ca4ab35e9d878b", "Url": "https://api.github.com/repos/Aptoide/aptoide-client-v8", "Date": "2017-10-25T14:41:23Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sides.size()) != 0) { int forEach = (energyStorage.getEnergyStored()) / (sides.size()); for (net.minecraft.util.EnumFacing side : net.minecraft.util.EnumFacing.VALUES) { if (sides.contains(side)) { net.minecraft.util.math.BlockPos neighbor = pos.offset(side); net.minecraft.tileentity.TileEntity tile = worldObj.getTileEntity(neighbor); if ((tile != null) && (tile instanceof cofh.api.energy.IEnergyReceiver)) { cofh.api.energy.IEnergyReceiver receiver = ((cofh.api.energy.IEnergyReceiver) (tile)); if (((receiver.getEnergyStored(side.getOpposite())) + forEach) > (receiver.getMaxEnergyStored(side.getOpposite()))) { sides.remove(side); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2444/buggy-version/src.main.java.tbsc.techy.tile.pipe.TilePipeEnergy.java", "BodyUseAPI": ["java.util.List<net.minecraft.util.EnumFacing>.contains(net.minecraft.util.EnumFacing)", "java.util.List<net.minecraft.util.EnumFacing>.size()", "java.util.List<net.minecraft.util.EnumFacing>.remove(net.minecraft.util.EnumFacing)"], "Fixed commit": "06a7ed30b182e405be277d42c742b3fdee8b3b20", "Url": "https://api.github.com/repos/Tbsc/Techy", "Date": "2016-06-18T08:41:14Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == '\\r') { singleIns += \"\"; }else if (c == '\\n') { singleIns += \" \"; }else { singleIns += c; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5428/buggy-version/src.com.github.taffy128s.tlcdbms.Main.java", "BodyUseAPI": [], "Fixed commit": "4ba2714374c6cd0adb3a7b4aeb505989818416a0", "Url": "https://api.github.com/repos/taffy128s/TLC_DBMS", "Date": "2017-03-08T12:47:45Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTokens.size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5428/buggy-version/src.com.github.taffy128s.tlcdbms.sqlparsers.SQLParser.java", "BodyUseAPI": [], "Fixed commit": "4ba2714374c6cd0adb3a7b4aeb505989818416a0", "Url": "https://api.github.com/repos/taffy128s/TLC_DBMS", "Date": "2017-03-08T12:47:45Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchInput.length()) == 0) doc = fileArray.get(position); else doc = searchArray.get(position);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7606/buggy-version/src.com.example.lockdoc.FileListActivity.java", "BodyUseAPI": [], "Fixed commit": "c83a15425c1ab1d3fd84baa378f4473505af77d0", "Url": "https://api.github.com/repos/camtaylor/LockDoc", "Date": "2014-12-08T20:54:42Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ss.isQueen()) if ((ss.getNumperOfQueensAttacking()) > 0) list.add(ss);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6511/buggy-version/src.oving5.Board.java", "BodyUseAPI": ["java.util.ArrayList<oving5.Square>.add(oving5.Square)", "oving5.Square.getNumperOfQueensAttacking()"], "Fixed commit": "d310cb55ca5d578bbdb2caf04cbd12eac18f8d7c", "Url": "https://api.github.com/repos/kyrrelm/LogRes", "Date": "2013-11-04T14:38:33Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.getQueryParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (name == null) { name = gid; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7729/buggy-version/OsmAnd.src.net.osmand.plus.osmo.OsMoIntentHandler.java", "BodyUseAPI": [], "Fixed commit": "b24b6a6add574af5e1039a37076cb298d326eaeb", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2014-05-29T00:18:01Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.infiniteloop.mytasks.data.TaskDataBaseHelper.queryCategoryName(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (cat != null) return cat.getCategoryName(); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6424/buggy-version/app.src.main.java.com.infiniteloop.mytasks.TaskLab.java", "BodyUseAPI": ["com.infiniteloop.mytasks.data.Category.getCategoryName()"], "Fixed commit": "3acd8752a8ba814363d075cc11f524e67aba03a5", "Url": "https://api.github.com/repos/jakeibeemassa0908/MyTasks_Android", "Date": "2015-04-06T16:32:11Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.infiniteloop.mytasks.TaskLab.get(getActivity()).queryCatName(task.getCategory())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (category != null) { categoryTextView.setText(com.infiniteloop.mytasks.TaskLab.get(getActivity()).queryCatName(task.getCategory())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6424/buggy-version/app.src.main.java.com.infiniteloop.mytasks.TaskListFragment.java", "BodyUseAPI": [], "Fixed commit": "3acd8752a8ba814363d075cc11f524e67aba03a5", "Url": "https://api.github.com/repos/jakeibeemassa0908/MyTasks_Android", "Date": "2015-04-06T16:32:11Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(services.contains(serv))) { trainers = serv.getTrainers(); trainers.add(actTrainer); serv.setTrainers(trainers); services.add(serv); actTrainer.setServices(services); this.save(actTrainer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4912/buggy-version/WorkSpace.Acme-Six-Pack.src.main.java.services.TrainerService.java", "BodyUseAPI": ["domain.ServiceEntity.getTrainers()", "domain.Trainer.setServices(java.util.Collection<domain.ServiceEntity>)", "java.util.Collection<domain.ServiceEntity>.add(domain.ServiceEntity)", "domain.ServiceEntity.setTrainers(java.util.Collection<domain.Trainer>)"], "Fixed commit": "8ee56e4cd4bcfa517cbe6407682833ef0d595dcf", "Url": "https://api.github.com/repos/DPIRPSG/DP9Entrega", "Date": "2016-04-04T08:57:45Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (crd.isLocal()) java.lang.System.err.println((((\"init() from crd: [\" + (cctx.kernalContext().igniteInstanceName())) + \"] remaining: nodes \") + (remaining)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/703/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionsExchangeFuture.java", "BodyUseAPI": [], "Fixed commit": "6f21ac27cdea3e59c87a57e01cd93cfdac3e1cca", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2017-07-10T18:30:23Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPreloader.topology()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(((exchFut.forcePreload()) || (exchFut.dummyReassign())) || (exchFut.exchangeId().topologyVersion().equals(top.topologyVersion())))) { java.lang.System.err.println(\"Failure \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/703/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPreloader.java", "BodyUseAPI": [], "Fixed commit": "6f21ac27cdea3e59c87a57e01cd93cfdac3e1cca", "Url": "https://api.github.com/repos/gridgain/apache-ignite", "Date": "2017-07-10T18:30:23Z"},
{"Line": "=>973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.eclipse.core.runtime.Platform.getPreferencesService().getBoolean(IdePlugin.PLUGIN_ID, IPreferenceConstants.EDITOR_LINE_NUMBER_SET, false, null))) { prefs.putBoolean(AbstractDecoratedTextEditorPreferenceConstants.EDITOR_LINE_NUMBER_RULER, true); prefs = com.aptana.core.util.EclipseUtil.instanceScope().getNode(IdePlugin.PLUGIN_ID); prefs.putBoolean(IPreferenceConstants.EDITOR_LINE_NUMBER_SET, true); try { prefs.flush(); } catch (org.osgi.service.prefs.BackingStoreException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/9068/buggy-version/plugins.com.aptana.rcp.src.com.aptana.rcp.IDEWorkbenchAdvisor.java", "BodyUseAPI": [], "Fixed commit": "aa3df3a1789e514d022e8fa69c4beeb65c5d2f92", "Url": "https://api.github.com/repos/aptana/studio3-rcp", "Date": "2011-09-01T22:02:33Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraftforge.fml.common.FMLCommonHandler.instance().getSide()) != (net.minecraftforge.fml.relauncher.Side.SERVER)) { TickrateChanger.INSTANCE.updateClientTickrate(tickrate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4240/buggy-version/src.main.java.me.guichaguri.tickratechanger.TickrateMessageHandler.java", "BodyUseAPI": [], "Fixed commit": "a014b44d635a7246216f4479a1516897f8b871e1", "Url": "https://api.github.com/repos/Guichaguri/TickrateChanger", "Date": "2015-07-27T13:46:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files != null) { for (java.io.File file : files) { vmt.parse(file); } }else { vmt.parse(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5958/buggy-version/VMTranslator.java", "BodyUseAPI": [], "Fixed commit": "d6b8f0fec0f499a014648dbe45e9ed37c8c8c2ff", "Url": "https://api.github.com/repos/VipinindKumar/vmtranslator", "Date": "2017-08-21T11:19:04Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (outputFile.contains(\"java\")) { outputFile = outputFile.substring(((outputFile.indexOf(\"java\")) + 5)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6880/buggy-version/bb-templates.src.main.java.bb.codegen.EFileScanner.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "d870bf4dee79ece3f209b70dce1dcdf309a85297", "Url": "https://api.github.com/repos/carsongross/barbarossa-templates", "Date": "2017-07-07T17:34:34Z"},
{"Line": "=>755", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((n.getNode(0)) != null) && (n.getNode(0).hasName(\"PrimaryIdentifier\"))) variableName = n.getNode(0).getString(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2220/buggy-version/StructureParser.java", "BodyUseAPI": ["xtc.tree.GNode.getNode(int)", "n.getNode(0).getString(int)"], "Fixed commit": "da4a1836a31f31861186fcc3f398c5089de210a8", "Url": "https://api.github.com/repos/aflock/oop-project", "Date": "2011-12-17T19:57:16Z"},
{"Line": "=>757", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((n.getNode(0)) != null) && (n.getNode(0).hasName(\"SelectionExpression\"))) variableName = n.getNode(0).getString(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2220/buggy-version/StructureParser.java", "BodyUseAPI": ["xtc.tree.GNode.getNode(int)", "n.getNode(0).getString(int)"], "Fixed commit": "da4a1836a31f31861186fcc3f398c5089de210a8", "Url": "https://api.github.com/repos/aflock/oop-project", "Date": "2011-12-17T19:57:16Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Constants.ORF.equals(sentBy)) { tradeReportId = message.getField(new quickfix.field.TradeReportRefID()).getValue(); }else { tradeReportId = message.getField(new quickfix.field.TradeReportID()).getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6187/buggy-version/connector-service.src.main.java.com.sami.service.TradeMessageService.java", "BodyUseAPI": [], "Fixed commit": "f6fa575a3b66b2dac28e217dd00a384af829b0bc", "Url": "https://api.github.com/repos/lavanya-sakala/camel-test", "Date": "2016-02-11T00:05:05Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getGameObjectCollection(\"gfx\")) != null) getGameObjectCollection(\"gfx\").clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6286/buggy-version/IronTactics.src.fr.frozen.iron.common.IronWorld.java", "BodyUseAPI": [], "Fixed commit": "25ec03f38350fbfa83c5cf60384a424d35279ed8", "Url": "https://api.github.com/repos/zlandorf/Frozen-Dust", "Date": "2011-10-16T12:16:41Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getGameObjectCollection(\"corpse\")) != null) { getGameObjectCollection(\"corpse\").clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6286/buggy-version/IronTactics.src.fr.frozen.iron.common.IronWorld.java", "BodyUseAPI": [], "Fixed commit": "25ec03f38350fbfa83c5cf60384a424d35279ed8", "Url": "https://api.github.com/repos/zlandorf/Frozen-Dust", "Date": "2011-10-16T12:16:41Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Throwable.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (message == null) { message = th.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5965/buggy-version/soap.src.main.java.org.switchyard.component.soap.util.SOAPUtil.java", "BodyUseAPI": [], "Fixed commit": "2020b470c784e39b5c837776a100d15dca98a0d0", "Url": "https://api.github.com/repos/dvirgiln/fuse-bxms-integ", "Date": "2011-06-22T10:26:57Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(type.isEmpty())) { entryPoint.withValue(i, type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5206/buggy-version/teavm-maven-plugin.src.main.java.org.teavm.maven.BuildJavascriptMojo.java", "BodyUseAPI": ["org.teavm.maven.TeaVMEntryPoint.withValue(int,java.lang.String)"], "Fixed commit": "12804937175c5e9a35319a7b9542f9a641f19790", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2014-05-05T11:51:58Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Locale.getCountry()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (defaultCountry.isEmpty()) { defaultCountry = \"US\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5974/buggy-version/app.src.main.java.net.ertechnology.myspoti.HitActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "c8c91e7dcdd17350dcab3d7356bb42111757e388", "Url": "https://api.github.com/repos/tcpip4000/MySpoti", "Date": "2015-07-09T19:19:06Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (year = (mController.getMaxYear()) && (month == (mController.getMaxMonth()))) { drawingParams.put(MonthView.VIEW_PARAMS_MAX_DAY, mController.getMaxDay()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3135/buggy-version/src.com.android.datetimepicker.date.MonthAdapter.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.put(MonthView.VIEW_PARAMS_MAX_DAY,mController.getMaxDay())", "com.android.datetimepicker.date.DatePickerController.getMaxDay()"], "Fixed commit": "0d98ced36bf509cee6c1f4a2e586f49745830a15", "Url": "https://api.github.com/repos/vokalinteractive/Android-DateTimePicker", "Date": "2014-09-04T14:39:58Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(outNetBuffer.hasRemaining())) { java.lang.System.out.println((((\"SSL Error: Empty outNetBuffer \" + (buf.remaining())) + \" ? \") + (buf.hasRemaining()))); if (result != null) { javax.net.ssl.SSLEngineResult.Status status = result.getStatus(); if (status == (javax.net.ssl.SSLEngineResult.Status.BUFFER_OVERFLOW)) { java.lang.System.out.println((\"SSL Error: Overflow \" + (buf.remaining()))); }else if (status == (javax.net.ssl.SSLEngineResult.Status.BUFFER_UNDERFLOW)) { java.lang.System.out.println((\"SSL Error: Underflow \" + (buf.remaining()))); }else if (status == (javax.net.ssl.SSLEngineResult.Status.CLOSED)) { java.lang.System.out.println((\"SSL Error: Close Status = \" + (status.ordinal()))); }else { java.lang.System.out.println((\"SSL Error: Status = \" + (status.ordinal()))); } } if (!(buf.hasRemaining())) { break; } if ((sessionMetadata.outNetBuffer) == outNetBuffer) { sessionMetadata.outNetBuffer = null; } im.webuzz.piled.ByteBufferPool.putByteBufferToPool(outNetBuffer); closeChannel(key, socketChannel, true, true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1554/buggy-version/src.im.webuzz.piled.PiledSSLServer.java", "BodyUseAPI": ["im.webuzz.piled.ByteBufferPool.putByteBufferToPool(java.nio.ByteBuffer)"], "Fixed commit": "a8f2cbec3852f0b56b00d76b6c63f506374359ff", "Url": "https://api.github.com/repos/webuzz/im.webuzz.piled.ssl", "Date": "2017-11-12T15:04:13Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (obj != null) { if (objType.isAssignableFrom(java.util.List.class)) { java.util.List ourList = ((java.util.List) (obj)); myElem = biz.kulik.android.jaxb.library.composer.providers.ProviderFactory.createProvider(mProviderType, ObjectType.ARRAY); for (java.lang.Object itemObj : ourList) { ((biz.kulik.android.jaxb.library.composer.providers.abstractProvider.UMOArray) (myElem)).put(processObject(itemObj)); } }else if (objType.isArray()) { }else { myElem = biz.kulik.android.jaxb.library.composer.providers.ProviderFactory.createProvider(mProviderType, ObjectType.OBJECT); processObjectContent(obj, ((biz.kulik.android.jaxb.library.composer.providers.abstractProvider.UMOObject) (myElem))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/887/buggy-version/src.biz.kulik.android.jaxb.library.composer.ComposerImpl.java", "BodyUseAPI": ["biz.kulik.android.jaxb.library.composer.ComposerImpl.processObjectContent(java.lang.Object,biz.kulik.android.jaxb.library.composer.providers.abstractProvider.UMO)"], "Fixed commit": "b2a129c698dfd82908adb7d1f2dee97b642d7497", "Url": "https://api.github.com/repos/kulik/AndroidJAXBLib", "Date": "2013-02-25T12:48:12Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.ide.eclipse.core.internal.resources.ResourceUtils.findResource(org.sonar.ide.eclipse.core.internal.resources.SonarProject,issue.getComponentKey())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((request.getOnlyOnFiles()) == null) || (request.getOnlyOnFiles().contains(r))) { try { org.sonar.ide.eclipse.core.internal.markers.SonarMarker.create(r, issue); } catch (org.eclipse.core.runtime.CoreException e) { org.sonar.ide.eclipse.core.internal.SonarCorePlugin.getDefault().error(e.getMessage(), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1833/buggy-version/org.sonar.ide.eclipse.core.src.org.sonar.ide.eclipse.core.internal.jobs.AnalyzeProjectJob.java", "BodyUseAPI": ["org.sonar.ide.eclipse.core.internal.markers.SonarMarker.create(org.eclipse.core.resources.IResource,org.sonar.runner.api.Issue)"], "Fixed commit": "d7ad67f80b174707d76814d9913c1f0b7f3046cb", "Url": "https://api.github.com/repos/Hemantkumar-Chigadani/sonar-eclipse", "Date": "2015-08-27T15:46:45Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session._forum.logInUser(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == member) { return org.bgu.service.ServiceObjects.Result.ALREADY_LOGDIN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6886/buggy-version/Forum.src.main.java.org.bgu.domain.facades.UserFacade.java", "BodyUseAPI": [], "Fixed commit": "75ed4a2df3b6a999cbc7506219126f3aa23f17d8", "Url": "https://api.github.com/repos/sadnabgu/SEWorkshop", "Date": "2015-06-25T10:58:09Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ma.glasnost.orika.MappingContext.getMappedObject(S,ma.glasnost.orika.metadata.Type<D>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (existingResult != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7547/buggy-version/core.src.main.java.ma.glasnost.orika.impl.MapperFacadeImpl.java", "BodyUseAPI": [], "Fixed commit": "cc8a4c0c5ea9527e7537deeec283f3967ad2d5e0", "Url": "https://api.github.com/repos/elaatifi/orika", "Date": "2012-09-10T20:31:27Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((saleOrderLine.getSubscriptionList()) != null) { for (com.axelor.apps.supplychain.db.Subscription subscription : saleOrderLine.getSubscriptionList()) { subscription.setInvoiced(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7310/buggy-version/axelor-supplychain.src.main.java.com.axelor.apps.supplychain.db.repo.SaleOrderSupplychainRepository.java", "BodyUseAPI": ["com.axelor.apps.sale.db.SaleOrderLine.getSubscriptionList()"], "Fixed commit": "978c0f16c140d677420bb4f86030eee9307836a2", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2015-08-14T15:23:43Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.axelor.apps.sale.db.repo.SaleOrderManagementRepository.copy(com.axelor.apps.sale.db.SaleOrder,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((copy.getSaleOrderLineList()) != null) { for (com.axelor.apps.sale.db.SaleOrderLine saleOrderLine : copy.getSaleOrderLineList()) { if ((saleOrderLine.getSubscriptionList()) != null) { for (com.axelor.apps.supplychain.db.Subscription subscription : saleOrderLine.getSubscriptionList()) { subscription.setInvoiced(false); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7310/buggy-version/axelor-supplychain.src.main.java.com.axelor.apps.supplychain.db.repo.SaleOrderSupplychainRepository.java", "BodyUseAPI": ["com.axelor.apps.sale.db.SaleOrder.getSaleOrderLineList()"], "Fixed commit": "978c0f16c140d677420bb4f86030eee9307836a2", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2015-08-14T15:23:43Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((command) == null) { }else if (command.startsWith(\"line\")) { java.lang.String[] cmd = command.split(\" \"); int tempX1 = java.lang.Integer.parseInt(cmd[1]); int tempY1 = java.lang.Integer.parseInt(cmd[2]); int tempX2 = java.lang.Integer.parseInt(cmd[3]); int tempY2 = java.lang.Integer.parseInt(cmd[4]); int r = java.lang.Integer.parseInt(cmd[5]); int gr = java.lang.Integer.parseInt(cmd[6]); int b = java.lang.Integer.parseInt(cmd[7]); g.setColor(new java.awt.Color(r, gr, b)); g.drawLine(tempX1, tempY1, tempX2, tempY2); }else if (command.equals(\"clear\")) { g.setColor(java.awt.Color.WHITE); g.fillRect(0, 0, this.getWidth(), this.getHeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2455/buggy-version/client.src.DrawPanel.java", "BodyUseAPI": [], "Fixed commit": "3b3e38684ceab30d5002e0e0e0ea851a39aba7a6", "Url": "https://api.github.com/repos/jbukowsky97/OpenDraw", "Date": "2017-12-05T09:12:23Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["husacct.define.domain.SoftwareArchitecture.getInstance().getModuleById(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((module.getId()) > 0) { husacct.define.domain.services.DefaultRuleDomainService service = new husacct.define.domain.services.DefaultRuleDomainService(); service.removeDefaultRules(module); husacct.define.domain.module.ModuleStrategy updatedModule = husacct.define.domain.SoftwareArchitecture.getInstance().updateModuleType(module, newType); service.addDefaultRules(updatedModule); service.updateModuleRules(updatedModule); husacct.define.domain.services.stateservice.StateService.instance().addUpdateModule(module, updatedModule); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7146/buggy-version/src.husacct.define.domain.services.ModuleDomainService.java", "BodyUseAPI": ["husacct.define.domain.SoftwareArchitecture.getInstance().updateModuleType(husacct.define.domain.module.ModuleStrategy,java.lang.String)", "husacct.define.domain.services.DefaultRuleDomainService.removeDefaultRules(husacct.define.domain.module.ModuleStrategy)", "husacct.define.domain.services.stateservice.StateService.instance().addUpdateModule(husacct.define.domain.module.ModuleStrategy,husacct.define.domain.module.ModuleStrategy)"], "Fixed commit": "6d24f045a891b62441d795189c7b8ce0d13abeba", "Url": "https://api.github.com/repos/senkz/HUSACCT", "Date": "2013-06-15T19:29:58Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResponseBody()) != null) { httpRequest.setRequestMethod(org.mockserver.model.HttpWebHookRequest.POST); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6522/buggy-version/mockserver-core.src.main.java.org.mockserver.model.HttpWebHookRequest.java", "BodyUseAPI": [], "Fixed commit": "ff58bf16d719a46377c1f45bbea61fbc8a175888", "Url": "https://api.github.com/repos/vmironichev/mockserver", "Date": "2016-08-12T08:24:39Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.serp1983.nokiacomposer.lib.PCMConverter.isNumeric(str)) duration = java.lang.Integer.parseInt(str);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7553/buggy-version/app.src.main.java.com.serp1983.nokiacomposer.lib.PCMConverter.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "f0c0834ca1051420691bff83bb6cb7ca6180078c", "Url": "https://api.github.com/repos/gSerP1983/NokiaComposer", "Date": "2017-03-22T18:14:38Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (randEffect < 0) { randEffect = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1282/buggy-version/src.MutatorLocus.java", "BodyUseAPI": [], "Fixed commit": "d15c58e7bd4a4b7e2b502b2e475f9d5fbbe1000b", "Url": "https://api.github.com/repos/bzhang/mutator-model", "Date": "2013-02-08T20:39:51Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((f.getParentFile()) != null) f.getParentFile().mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3524/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.tool.ODatabaseExport.java", "BodyUseAPI": [], "Fixed commit": "974b6c683772c3708623edf3731290cf0b06635d", "Url": "https://api.github.com/repos/Blackspark/orientdb", "Date": "2014-06-05T08:40:43Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5489/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "a87a88aef36377cc8f9dcbdf4320d2b112e3a767", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:11Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { throw new org.w3c.dom.DOMException(org.w3c.dom.DOMException.INDEX_SIZE_ERR, \"offset is out of bounds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5489/buggy-version/src.org.exist.dom.memtree.AbstractCharacterData.java", "BodyUseAPI": [], "Fixed commit": "a87a88aef36377cc8f9dcbdf4320d2b112e3a767", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-02T21:14:11Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((textSelector.getMaximumRowCount()) >= (iterator.getTweetID())) { textSelector.setSelectedIndex(iterator.getTweetID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5789/buggy-version/src.main.java.ch.zhaw.parallelComputing.view.MapAttributesDialog.java", "BodyUseAPI": [], "Fixed commit": "01860b197ddb7d16e028054da2cbb7343e5e71de", "Url": "https://api.github.com/repos/mxmo0rhuhn/seminar_parallel_computing", "Date": "2014-06-02T00:13:54Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((dateSelector.getMaximumRowCount()) >= (iterator.getKeyID())) { dateSelector.setSelectedIndex(iterator.getKeyID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5789/buggy-version/src.main.java.ch.zhaw.parallelComputing.view.MapAttributesDialog.java", "BodyUseAPI": [], "Fixed commit": "01860b197ddb7d16e028054da2cbb7343e5e71de", "Url": "https://api.github.com/repos/mxmo0rhuhn/seminar_parallel_computing", "Date": "2014-06-02T00:13:54Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(_fileDataStringArr.isEmpty())) { _fileDataStringArr.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2445/buggy-version/src.urgenda.storage.Storage.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.clear()"], "Fixed commit": "0229006b22d08a3e61bddb0b5d95ea0d007a1e51", "Url": "https://api.github.com/repos/cs2103jan2016-t16-3j/main", "Date": "2016-02-25T07:52:55Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((persons.size()) < 2) { edu.hm.cs.vadere.seating.datacollection.UiHelper.showErrorToast(getActionManager().getSeatsFragment().getContext(), R.string.error_group_must_have_more); firePendingActionCanceled(); }else { setCommonGroupForSelectedPersons(); firePendingActionFinished(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/622/buggy-version/SeatingDataCollection.app.src.main.java.edu.hm.cs.vadere.seating.datacollection.actions.DefineGroupAction.java", "BodyUseAPI": [], "Fixed commit": "32c9ddefe08a3945bdff709cc798c5636f6115d2", "Url": "https://api.github.com/repos/schoettl/seating-datacollection", "Date": "2016-08-08T18:22:56Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.ros.time.NtpTimeProvider.DEBUG) { org.ros.time.NtpTimeProvider.log.error((\"Failed to read time from NTP server: \" + (host.getHostName())), e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/341/buggy-version/rosjava.src.main.java.org.ros.time.NtpTimeProvider.java", "BodyUseAPI": [], "Fixed commit": "8c895e48799509e6792f0323b473de5dcb31e155", "Url": "https://api.github.com/repos/CentralLabFacilities/rosjava_core", "Date": "2017-06-07T17:09:46Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_thread) == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8493/buggy-version/src.jp.hidetobara.kusokora.OpenCarView.java", "BodyUseAPI": [], "Fixed commit": "f5b696e01f9a29b0b4aa2d3ed9f41fc73299c523", "Url": "https://api.github.com/repos/hidetobara/kusokora", "Date": "2014-10-09T13:18:30Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_wm) != null) _wm.removeView(_view);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8493/buggy-version/src.jp.hidetobara.kusokora.LayerService.java", "BodyUseAPI": [], "Fixed commit": "f5b696e01f9a29b0b4aa2d3ed9f41fc73299c523", "Url": "https://api.github.com/repos/hidetobara/kusokora", "Date": "2014-10-09T13:18:30Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) { webView.setLayerType(WebView.LAYER_TYPE_SOFTWARE, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8427/buggy-version/app.src.main.java.fr.bigmag.WebviewActivity.java", "BodyUseAPI": [], "Fixed commit": "2783ff6fa333916c8a6a691e7afd1a910ed4cb2d", "Url": "https://api.github.com/repos/Neamar/BigMag", "Date": "2015-09-02T15:14:29Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user.getUserType().equals(\" worker\")) { _viewHistory.setVisibility(View.GONE); _trend.setVisibility(View.GONE); _security.setVisibility(View.GONE); }else if (user.getUserType().equals(\" manager\")) { _security.setVisibility(View.GONE); }else if (user.getUserType().equals(\" admin\")) { _purityLevel.setVisibility(View.GONE); _viewHistory.setVisibility(View.GONE); _trend.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/9191/buggy-version/M4.M4Module-master.app.src.main.java.com.example.olivia.myapplication.controller.MainActivity.java", "BodyUseAPI": ["com.example.olivia.myapplication.model.User.getUserType()", "user.getUserType().equals(java.lang.String)", "com.example.olivia.myapplication.model.User.getUserType()", "user.getUserType().equals(java.lang.String)"], "Fixed commit": "e3d416fb75840d024dd78a226b7cf1b37fa11fee", "Url": "https://api.github.com/repos/otoaneba/Paranoid-Androids", "Date": "2017-04-06T20:05:25Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((parsedDates.size()) > 1) && (parsedDates.get(0).toLocalDate().equals(parsedDates.get(1).toLocalDate()))) { recurDate.add(java.time.LocalDateTime.of(recurDate.get(0).toLocalDate(), parsedDates.get(1).toLocalTime())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2931/buggy-version/src.main.java.CreateTask.java", "BodyUseAPI": ["java.time.LocalDateTime.of(java.time.LocalDate,java.time.LocalTime)", "java.time.LocalDateTime.toLocalTime()", "java.util.ArrayList<java.time.LocalDateTime>.get(int)", "java.util.ArrayList<java.time.LocalDateTime>.add(java.time.LocalDateTime)"], "Fixed commit": "795cece26c7717b5c35a778ff8cb41e7a1c7302c", "Url": "https://api.github.com/repos/cs2103jan2015-w15-1j/main", "Date": "2015-04-13T00:28:07Z"},
{"Line": "=>1880", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_khClient.isUnity()) { com.emc.storageos.vnxe.requests.FeatureRequest req = new com.emc.storageos.vnxe.requests.FeatureRequest(_khClient, VNXeConstants.FASTVP_FEATURE); com.emc.storageos.vnxe.models.Feature fastVP = req.get(); if ((fastVP != null) && ((fastVP.getState()) == (FeatureStateEnum.FeatureStateEnabled.getValue()))) { result = true; }else { com.emc.storageos.vnxe.VNXeApiClient._logger.info(\"FASTVP is disabled\"); result = false; } }else { com.emc.storageos.vnxe.requests.FastVPRequest req = new com.emc.storageos.vnxe.requests.FastVPRequest(_khClient); java.util.List<com.emc.storageos.vnxe.models.FastVP> fastVP = req.get(); if ((fastVP != null) && (!(fastVP.isEmpty()))) { result = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6495/buggy-version/exportLibraries.vnxe.src.main.java.com.emc.storageos.vnxe.VNXeApiClient.java", "BodyUseAPI": [], "Fixed commit": "0d23380574066a524ed9191527dd3ff5b7142b5c", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-08-05T16:25:31Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputManager) != null) { inputManager.setCursorVisible(dragToRotate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4472/buggy-version/jme3-core.src.main.java.com.jme3.app.ChaseCameraAppState.java", "BodyUseAPI": [], "Fixed commit": "7c41355cca306abcc485090921376dd95bca3bed", "Url": "https://api.github.com/repos/MeFisto94/jmonkeyengine", "Date": "2014-12-08T23:00:08Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (downloadsDir.exists()) { java.io.File[] downloadsDirFiles = downloadsDir.listFiles(); if ((downloadsDirFiles.length) > 0) if ((clientManager.getLogins().size()) == 0) com.sipe.utils.FileUtils.delete(downloadsDir, true); else { java.util.ArrayList<java.lang.String> loggedInClients = new java.util.ArrayList<java.lang.String>(); for (com.sipe.entities.Client client : clientManager.getLogins()) loggedInClients.add(client.getCodeClient()); for (java.io.File f : downloadsDirFiles) if (!(loggedInClients.contains(f.getName().split(\"_\")[0]))) com.sipe.utils.FileUtils.delete(f, false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3968/buggy-version/src.com.sipe.listeners.LogoutListener.java", "BodyUseAPI": ["java.io.File.listFiles()", "com.sipe.utils.FileUtils.delete(java.io.File,boolean)"], "Fixed commit": "66e2b45c808c8a8861664e77ffd0bd45c54d8807", "Url": "https://api.github.com/repos/JPTron/sipe-informatique.com", "Date": "2017-01-11T15:17:30Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((returnMessage.statusCode) & (STATUS_OK)) > 0) { break; }else if (((returnMessage.statusCode) & (STATUS_FAULT_INTERNAL_ERROR)) > 0) { break; }else if (((returnMessage.statusCode) & (STATUS_EXCEPTION_SHOULD_BE_HANDLED)) > 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8359/buggy-version/Base.src.main.java.org.ntnunotif.wsnu.base.internal.SoapForwardingHub.java", "BodyUseAPI": [], "Fixed commit": "8f8e0003d23c5b27e968d0e8502d0a736bf540bf", "Url": "https://api.github.com/repos/tOgg1/WS-Nu", "Date": "2014-06-08T19:14:23Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value.getClass().isAnnotation()) { return org.fusesource.restygwt.rebind.util.AnnotationCopyUtil.getAnnotationAsString(((java.lang.annotation.Annotation) (value))); }else if (value instanceof java.lang.Boolean) { return org.fusesource.restygwt.rebind.util.AnnotationCopyUtil.readBooleanValue(((java.lang.Boolean) (value))); }else if (value instanceof java.lang.Class) { return org.fusesource.restygwt.rebind.util.AnnotationCopyUtil.readClassValue(((java.lang.Class) (value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4442/buggy-version/restygwt.src.main.java.org.fusesource.restygwt.rebind.util.AnnotationCopyUtil.java", "BodyUseAPI": [], "Fixed commit": "af408a7b2895a3a86a518e6a9947bf17b289caf6", "Url": "https://api.github.com/repos/bmustiata/resty-gwt", "Date": "2012-08-04T15:17:39Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ssoConfiguration.getSkipURIs()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6638/buggy-version/modules.webapp-security.src.main.java.org.wso2.appserver.webapp.security.agent.SSOAgentRequestResolver.java", "BodyUseAPI": [], "Fixed commit": "930009e79594102156812f27a4724013f3d61799", "Url": "https://api.github.com/repos/wso2/product-as", "Date": "2016-06-21T03:31:09Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((MainActivity.markers.get(viewHolder)) != null) { MainActivity.markers.get(viewHolder).remove(); MainActivity.markers.remove(viewHolder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4300/buggy-version/app.src.main.java.com.example.sveta.taxo.utility.SwipeHelper.java", "BodyUseAPI": ["MainActivity.markers.get(viewHolder).remove()", "MainActivity.markers.get(RecyclerView.ViewHolder)", "MainActivity.markers.remove(RecyclerView.ViewHolder)"], "Fixed commit": "749f655d63dfae4c0f697db98680cd47ad03eae9", "Url": "https://api.github.com/repos/TaxiProjectTeam/TaxiClient", "Date": "2017-03-27T14:21:36Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!result) { if ((currentclient.getDetails().get(\"namaIbu\")) != null) { if (currentclient.getDetails().get(\"namaIbu\").toLowerCase().contains(criteria.toLowerCase())) { result = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4886/buggy-version/opensrp-gizi.src.main.java.org.ei.opensrp.gizi.gizi.GiziSearchOption.java", "BodyUseAPI": [], "Fixed commit": "04494c865f82f4e436512435326557f46a639d12", "Url": "https://api.github.com/repos/sidthrive/opensrp-client", "Date": "2016-09-30T12:45:20Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((datasetValues % 20) == 0) { slider.setMaximum(((datasetValues / 20) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2318/buggy-version/src.graphs.seeDBPlot.java", "BodyUseAPI": [], "Fixed commit": "79a86167eeb73933678c84b3ecc2a4b5a3fdf4d1", "Url": "https://api.github.com/repos/rtschumacher/SeeDB", "Date": "2017-04-30T10:33:21Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((track.getUploader()) != null) track.setUploader(usersTable.get(track.getUploader().getId()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8054/buggy-version/LanPlaylistServer.src.main.java.net.kokkeli.data.db.TrackDatabase.java", "BodyUseAPI": ["net.kokkeli.data.Track.setUploader(usersTable.get(track.getUploader().getId()))", "net.kokkeli.data.db.UsersTable.get(track.getUploader().getId())", "track.getUploader().getId()", "net.kokkeli.data.Track.getUploader()"], "Fixed commit": "4123d2e774d69e62a06b32bdc07cc0af0e2146e2", "Url": "https://api.github.com/repos/Hekku2/k-lan-playlist-server", "Date": "2014-12-27T22:40:07Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (graphIsEnvelope) { envelopeResource.addProperty(WONMSG.CONTAINS_SIGNATURE_PROPERTY, sigNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2912/buggy-version/webofneeds.won-cryptography.src.main.java.won.protocol.message.processor.impl.WonMessageSignerVerifier.java", "BodyUseAPI": [], "Fixed commit": "7b027733390e63be0b44ea4f4a2451ab95f1538a", "Url": "https://api.github.com/repos/researchstudio-sat/webofneeds", "Date": "2016-08-04T07:33:48Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (speciesTree.hasDateTrait()) rnd.setInputValue(\"trait\", speciesTree.getDateTrait());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4048/buggy-version/src.starbeast2.StarBeastInitializer.java", "BodyUseAPI": ["starbeast2.SpeciesTree.getDateTrait()", "beast.evolution.tree.RandomTree.setInputValue(java.lang.String,speciesTree.getDateTrait())"], "Fixed commit": "780a6603be64479ce4a5e47a623c43b9f1e54e08", "Url": "https://api.github.com/repos/genomescale/starbeast2", "Date": "2017-05-09T12:03:01Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["beast.evolution.tree.TreeInterface.getRoot()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (speciesTreeRoot.isFake()) return java.lang.Double.NEGATIVE_INFINITY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4048/buggy-version/src.starbeast2.CoordinatedExponential.java", "BodyUseAPI": [], "Fixed commit": "780a6603be64479ce4a5e47a623c43b9f1e54e08", "Url": "https://api.github.com/repos/genomescale/starbeast2", "Date": "2017-05-09T12:03:01Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cacheChildIds.contains(pageId))) { cacheChildIds.add(pageId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/677/buggy-version/src.main.java.fi.otavanopisto.kuntaapi.server.integrations.casem.CaseMCache.java", "BodyUseAPI": ["java.util.List<fi.otavanopisto.kuntaapi.server.id.PageId>.add(fi.otavanopisto.kuntaapi.server.id.PageId)"], "Fixed commit": "a3985726cb5ec09f9226c0d6c53e82bb9bab6c36", "Url": "https://api.github.com/repos/City-of-Mikkeli/kunta-api-server", "Date": "2016-11-07T11:56:03Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.retroMachines.game.RetroLevel.buildTree(int,dummy.getnext())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (next == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/151/buggy-version/core.src.com.retroMachines.game.RetroLevel.java", "BodyUseAPI": [], "Fixed commit": "4f350bc01f174b82fd26963449414060f0a8f8a0", "Url": "https://api.github.com/repos/Die-anonymen-PSEler/game", "Date": "2015-03-02T20:41:55Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.retroMachines.game.RetroLevel.buildTree((y + (com.retroMachines.util.Constants.DEPOTLAYER_Y_DIF)),dummy.getfamily())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fam == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/151/buggy-version/core.src.com.retroMachines.game.RetroLevel.java", "BodyUseAPI": [], "Fixed commit": "4f350bc01f174b82fd26963449414060f0a8f8a0", "Url": "https://api.github.com/repos/Die-anonymen-PSEler/game", "Date": "2015-03-02T20:41:55Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t.contents) >= (nStates)) { throw new java.lang.IllegalArgumentException(\"Invalid Automaton\"); }else if (((t.contents) < 0) && ((t.contents) > (wyautl.core.Automaton.K_FREE))) { throw new java.lang.IllegalArgumentException(((\"Invalid Automaton (\" + state) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5178/buggy-version/modules.wyone.src.wyautl.core.Automaton.java", "BodyUseAPI": [], "Fixed commit": "d57305c8ac40723d72df944c0c4824ce593799df", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-11-29T02:52:54Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang.StringUtils.split(java.lang.String,java.lang.String)", "org.apache.commons.lang.StringUtils.split(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((expectedTokens.length) != (gotTokens.length)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3959/buggy-version/client.src.main.java.org.jboss.bqt.client.xml.XMLCompareResults.java", "BodyUseAPI": [], "Fixed commit": "35623dd1e296b1f2ea7155eccea539016f120625", "Url": "https://api.github.com/repos/SQLBulkQueryTool/SQLBulkQueryTool", "Date": "2013-02-04T17:04:04Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((currentSquare.getType()) == (Square.PREDEFINE_CELL))) currentSquare.setType(currentSquare.getPreviousType());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4315/buggy-version/Project.src.GameInterface.java", "BodyUseAPI": ["Square.getPreviousType()", "Square.setType(currentSquare.getPreviousType())"], "Fixed commit": "0a8345ff08459f08bd560a3aee3bd6e6649a0da3", "Url": "https://api.github.com/repos/wynestic/COMP2911-Project", "Date": "2013-05-31T05:13:27Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (in == 0) { out.writeByte(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1805/buggy-version/src.main.java.cofh.lib.network.ByteBufHelper.java", "BodyUseAPI": [], "Fixed commit": "8a639aadc69425f3557120416910fd54546e858c", "Url": "https://api.github.com/repos/CoFH/CoFHLib", "Date": "2015-07-29T22:17:07Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.compiler.java.codegen.CodegenUtil.findAttrForParam(com.redhat.ceylon.compiler.typechecker.model.Parameter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (attr != null) { com.redhat.ceylon.compiler.typechecker.model.TypedDeclaration nonWideningTypeDeclaration = gen.nonWideningTypeDecl(attr); com.redhat.ceylon.compiler.typechecker.model.ProducedType paramType = gen.nonWideningType(attr, nonWideningTypeDeclaration); type = gen.makeJavaType(nonWideningTypeDeclaration, paramType); }else { com.redhat.ceylon.compiler.typechecker.model.ProducedType paramType = decl.getType(); type = gen.makeJavaType(decl, paramType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7255/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.ClassDefinitionBuilder.java", "BodyUseAPI": ["com.redhat.ceylon.compiler.java.codegen.AbstractTransformer.nonWideningType(com.redhat.ceylon.compiler.typechecker.model.Value,com.redhat.ceylon.compiler.typechecker.model.TypedDeclaration)", "com.redhat.ceylon.compiler.java.codegen.AbstractTransformer.nonWideningTypeDecl(com.redhat.ceylon.compiler.typechecker.model.Value)"], "Fixed commit": "0be018fcc1132dd5921bbe397579fe11724eb8a2", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2012-06-13T16:32:29Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(request.getParameter(fr.paris.lutece.plugins.identitystore.web.AttributeKeyJspBean.PARAMETER_ID_ATTRIBUTEKEY))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fr.paris.lutece.plugins.identitystore.business.AttributeKeyHome.checkAttributeId(nId)) { return redirect(request, fr.paris.lutece.portal.service.message.AdminMessageService.getMessageUrl(request, fr.paris.lutece.plugins.identitystore.web.AttributeKeyJspBean.MESSAGE_CANNOT_REMOVE_REFERENCE_ATTRIBUTE_EXISTS, AdminMessage.TYPE_ERROR)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/252/buggy-version/src.java.fr.paris.lutece.plugins.identitystore.web.AttributeKeyJspBean.java", "BodyUseAPI": [], "Fixed commit": "886874443e23cc8368aa2d5ba5af4ee3199e553b", "Url": "https://api.github.com/repos/lutece-secteur-public/gru-plugin-identitystore", "Date": "2017-06-12T10:41:21Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["freeWarOnTerror.cards.Hijab.inputLoop(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (input == 1) { france.setPosture(1); }else { france.setPosture(2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8873/buggy-version/src.freeWarOnTerror.cards.Hijab.java", "BodyUseAPI": [], "Fixed commit": "19826715c764a4f7eee7e49bc815db77905dea4d", "Url": "https://api.github.com/repos/wachsmuth/freeWarOnTerror", "Date": "2014-11-02T22:36:49Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActivityCallback) != null) { mActivityCallback.updateDrawer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4723/buggy-version/app.src.main.java.de.xikolo.controller.main.ProfileFragment.java", "BodyUseAPI": [], "Fixed commit": "aaab4b5d01d54c0e36662ded55ea621ade09c755", "Url": "https://api.github.com/repos/openHPI/xikolo-android", "Date": "2016-02-09T16:34:18Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"...\".equals(token.getRepresentation())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/927/buggy-version/plugins.com.python.pydev.analysis.src.com.python.pydev.analysis.visitors.OccurrencesVisitor.java", "BodyUseAPI": [], "Fixed commit": "d78d1f6b57afdfc5d0421f562c61162821795ff5", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2011-02-17T16:26:14Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (symbol.isEmpty()) { return org.rascalmpl.interpreter.utils.Symbols.factory.constructor(RascalValueFactory.Symbol_Empty); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/241/buggy-version/src.org.rascalmpl.interpreter.utils.Symbols.java", "BodyUseAPI": [], "Fixed commit": "b0ed3c3b717057e3aa599393cd999fabae005f1e", "Url": "https://api.github.com/repos/usethesource/rascal", "Date": "2015-11-25T16:49:25Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isHyperValentMolecule(centerAtom, attachedAtoms)) { buildHyperValentMolecule(centerAtom, attachedAtoms); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/395/buggy-version/app.src.main.java.chemia.httpsgithub.comahyoung1.chemia.MoleculeBuilder.java", "BodyUseAPI": [], "Fixed commit": "29f54b4815fd02d8fbcd2c3fd2d68656369f5f2e", "Url": "https://api.github.com/repos/ahyoung1/Chemia", "Date": "2017-02-28T21:40:39Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.TfT02.Assassin.util.PlayerData.getLocation(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (previousLocation == null) { player.sendMessage(((org.bukkit.ChatColor.RED) + \"Location not found!\")); }else { player.teleport(previousLocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3463/buggy-version/src.me.TfT02.Assassin.AssassinMode.java", "BodyUseAPI": ["org.bukkit.entity.Player.teleport(org.bukkit.Location)"], "Fixed commit": "0f50d742d0767a3add16d466d6b32d90ecdb62ee", "Url": "https://api.github.com/repos/TfT-02/Assassin", "Date": "2012-12-18T23:34:29Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(concat)) concat = concat.substring(0, concat.lastIndexOf(\",\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1005/buggy-version/omni-ch.src.main.java.com.adms.web.bean.customer.enquiry.CustomerEnquiryModel.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "63bff1fa8072ace80a8a5c30c998bc88ec533a4d", "Url": "https://api.github.com/repos/AEGONTH/omni-chanel-project", "Date": "2016-02-26T06:40:37Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maximumDurability <= 0) { maximumDurability = ((short) (config.getInt(((\"Repairables.\" + key) + \".MaximumDurability\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8043/buggy-version/src.main.java.com.gmail.nossr50.config.skills.repair.RepairConfig.java", "BodyUseAPI": [], "Fixed commit": "65692f2a83aa3297862e8c2b85eadad596786d5f", "Url": "https://api.github.com/repos/t00thpick1/mcMMO", "Date": "2014-02-20T17:43:11Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (fe != null) { fe.changed = true; notifyPeersChanged(fe); fe.changed = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3711/buggy-version/src.Peer.java", "BodyUseAPI": [], "Fixed commit": "200ded1c5967d146c44eb22f6a854fcc4581981f", "Url": "https://api.github.com/repos/harrisch/454proj2", "Date": "2011-07-29T20:04:52Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((a.getVehicleNum()) != null) { button.setText((((\"Vehicle \" + (a.getVehicleNum().getString())) + \" \") + (com.remulasce.lametroapp.java_core.LaMetroUtil.timeToDisplay(((int) (a.getEstimatedArrivalSeconds())))))); }else { button.setText((\"Vehicle \" + (com.remulasce.lametroapp.java_core.LaMetroUtil.timeToDisplay(((int) (a.getEstimatedArrivalSeconds())))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1204/buggy-version/app.src.main.java.com.remulasce.lametroapp.display.AndroidMultiArrivalDisplay.java", "BodyUseAPI": ["com.remulasce.lametroapp.java_core.dynamic_data.types.Arrival.getEstimatedArrivalSeconds()", "com.remulasce.lametroapp.java_core.dynamic_data.types.Arrival.getVehicleNum()", "com.remulasce.lametroapp.java_core.LaMetroUtil.timeToDisplay(((int) (a.getEstimatedArrivalSeconds())))", "android.widget.RadioButton.setText((\"Vehicle \" + (com.remulasce.lametroapp.java_core.LaMetroUtil.timeToDisplay(((int) (a.getEstimatedArrivalSeconds()))))))", "com.remulasce.lametroapp.java_core.LaMetroUtil.timeToDisplay(((int) (a.getEstimatedArrivalSeconds())))", "android.widget.RadioButton.setText((((\"Vehicle \" + (a.getVehicleNum().getString())) + \" \") + (com.remulasce.lametroapp.java_core.LaMetroUtil.timeToDisplay(((int) (a.getEstimatedArrivalSeconds()))))))", "a.getVehicleNum().getString()", "com.remulasce.lametroapp.java_core.dynamic_data.types.Arrival.getEstimatedArrivalSeconds()"], "Fixed commit": "498ff93cf538dbd8ed64e8d75c9cfcc43ad14d5f", "Url": "https://api.github.com/repos/remulasce/metroapp", "Date": "2015-07-27T18:53:21Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 14) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8053/buggy-version/src.com.firebirdberlin.nightdream.ui.AutoAdjustTextView.java", "BodyUseAPI": [], "Fixed commit": "04fb71df01b7a2fc6056e7678bf8a8ce3f80a2dc", "Url": "https://api.github.com/repos/firebirdberlin/nightdream", "Date": "2017-03-29T09:23:43Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vcard.getPhotos().get(0).getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((data != null) && ((data.length) > 0)) { android.graphics.Bitmap thumbnail = android.graphics.BitmapFactory.decodeByteArray(data, 0, data.length); android.support.v4.graphics.drawable.RoundedBitmapDrawable drawable = com.owncloud.android.utils.BitmapUtils.bitmapToCircularBitmapDrawable(context.getResources(), thumbnail); holder.getBadge().setImageDrawable(drawable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7852/buggy-version/src.main.java.com.owncloud.android.ui.fragment.contactsbackup.ContactListFragment.java", "BodyUseAPI": ["android.graphics.BitmapFactory.decodeByteArray(byte[],int,int)"], "Fixed commit": "2e69377c52b8adad40ff3e601fbc7ba5e2b45893", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-09-20T13:25:44Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (client == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1443/buggy-version/Talantra.src.net.tal.client.RenderLoop.java", "BodyUseAPI": [], "Fixed commit": "25134177a32eb7d96a1c9750d9d25b8212de07c1", "Url": "https://api.github.com/repos/Wraithaven/Talantra", "Date": "2017-01-09T03:16:31Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (settingsDirectory.isDirectory()) { java.io.File[] settingsFiles = settingsDirectory.listFiles(); for (int i = 0; i < (settingsFiles.length); i++) { settingsFiles[i].delete(); } settingsDirectory.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3284/buggy-version/org.eclipse.m2e.e4.service.src.org.eclipse.m2e.e4.service.MavenImportServiceImpl.java", "BodyUseAPI": ["java.io.File.delete()", "java.io.File.listFiles()"], "Fixed commit": "2a1eab1a41da2bde2a597722c3549a0fee1be865", "Url": "https://api.github.com/repos/comdirect/m2e-core", "Date": "2015-10-13T08:38:16Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isUninitialized(userInput.lastIndexOf(dooyit.parser.AddParser.MARKER_START_EVENT)))) && (!(isUninitialized(userInput.lastIndexOf(dooyit.parser.AddParser.MARKER_END_EVENT))))) { try { parseEvent(); ans = true; } catch (dooyit.common.exception.IncorrectInputException e) { ans = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3564/buggy-version/src.dooyit.parser.AddParser.java", "BodyUseAPI": [], "Fixed commit": "7216cdf0f2d257f9217236aff92964fa41cb3347", "Url": "https://api.github.com/repos/cs2103jan2016-w15-4j/main", "Date": "2016-03-28T16:46:01Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isUninitialized(userInput.lastIndexOf(dooyit.parser.AddParser.MARKER_WORK)))) { try { parseWork(); ans = true; } catch (dooyit.common.exception.IncorrectInputException e) { ans = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3564/buggy-version/src.dooyit.parser.AddParser.java", "BodyUseAPI": [], "Fixed commit": "7216cdf0f2d257f9217236aff92964fa41cb3347", "Url": "https://api.github.com/repos/cs2103jan2016-w15-4j/main", "Date": "2016-03-28T16:46:01Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (elem.getElement().hasAndGroup()) { for (org.languagetool.rules.patterns.Element e : elem.getElement().getAndGroup()) { if ((e.getChunkTag()) != null) { return thisMatched & (tokens[tokenNo].getChunkTags().contains(e.getChunkTag())); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4174/buggy-version/languagetool-core.src.main.java.org.languagetool.rules.patterns.AbstractPatternRulePerformer.java", "BodyUseAPI": ["elem.getElement().getAndGroup()", "org.languagetool.rules.patterns.ElementMatcher.getElement()"], "Fixed commit": "91a66d100909f156b3b33d384a3aa563d890f182", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2013-10-05T10:38:31Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chunkTag) != null) { tokenElement.setChunkElement(chunkTag); chunkTag = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4174/buggy-version/languagetool-core.src.main.java.org.languagetool.tagging.disambiguation.rules.DisambiguationRuleLoader.java", "BodyUseAPI": [], "Fixed commit": "91a66d100909f156b3b33d384a3aa563d890f182", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2013-10-05T10:38:31Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getTradeOverlay().isModalShowing())) { resetModal(); setUpModal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7073/buggy-version/java.src.client.maritime.MaritimeTradeController.java", "BodyUseAPI": [], "Fixed commit": "1793615896f56ced5129d67c433bfbfcedd8a5a7", "Url": "https://api.github.com/repos/255/catan", "Date": "2014-10-23T05:31:11Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getContextType().getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (JavaDocContextType.ID.equals(contextId)) { if ((!(template.matches(\"\", contextId))) || ((!(lineSelectionMatcher.find())) && (!(wordSelectionMatcher.find())))) return false; }else { if ((template.matches(\"\", JavaDocContextType.ID)) || (!(lineSelectionMatcher.find()))) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3946/buggy-version/org.eclipse.jdt.ui.ui.org.eclipse.jdt.internal.ui.text.correction.QuickTemplateProcessor.java", "BodyUseAPI": ["org.eclipse.jface.text.templates.Template.matches(java.lang.String,java.lang.String)"], "Fixed commit": "9fcab2e1cab25e550ad26f0ad972752664d4a265", "Url": "https://api.github.com/repos/hwellmann/eclipse.jdt.ui", "Date": "2016-02-26T10:59:48Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.isDead()) { java.lang.System.out.println(\"Sorry, you died\"); new rps.command.ExitCommand().apply(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8552/buggy-version/rps.src.main.java.rps.command.FleeCommand.java", "BodyUseAPI": [], "Fixed commit": "5a9d4c78e160230fd2a87277a0e44f4097ac97e4", "Url": "https://api.github.com/repos/chananyu2539/rps-zork", "Date": "2017-02-03T16:01:38Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (reportDir != null) { sb.append(\", \\\"sonar.working.directory\\\" : \\\"\").append(((reportDir.getRemote()) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/367/buggy-version/src.main.java.hudson.plugins.sonar.SonarBuildWrapper.java", "BodyUseAPI": ["java.lang.StringBuilder.append(((reportDir.getRemote()) + \"\\\"\"))", "hudson.FilePath.getRemote()"], "Fixed commit": "765cbc4740ad448fb1e47ba71951566b71e87e45", "Url": "https://api.github.com/repos/brenuart/sonar-scanner-jenkins", "Date": "2017-10-19T15:14:14Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((f.r) == 0) && ((f.g) == 0)) && ((f.b) == 0)) dim.set(0, 0, false, fade); else dim.set(255, 100, false, fade);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3150/buggy-version/webdmx.src.main.java.fr.jfbeuve.webdmx.fixture.RGBDSFixture.java", "BodyUseAPI": [], "Fixed commit": "c6c786b9e06095af405cfaef4ed1024d63947b9f", "Url": "https://api.github.com/repos/jfbeuve/webdmx", "Date": "2017-06-14T14:49:08Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (selectMessage != null) { result.addProperty(SH.resultMessage, selectMessage); }else if (constraint.getShapeResource().hasProperty(SH.message)) { for (org.apache.jena.rdf.model.Statement s : constraint.getShapeResource().listProperties(SH.message).toList()) { result.addProperty(SH.resultMessage, s.getObject()); } }else { addDefaultMessages(engine, messageHolder, constraint.getComponent(), result, bindings, sol); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/325/buggy-version/src.main.java.org.topbraid.shacl.validation.sparql.AbstractSPARQLExecutor.java", "BodyUseAPI": ["org.apache.jena.rdf.model.Resource.addProperty(SH.resultMessage,org.apache.jena.rdf.model.RDFNode)"], "Fixed commit": "d4135a71563184ed0189639c6ebf0cf1235d4980", "Url": "https://api.github.com/repos/TopQuadrant/shacl", "Date": "2017-05-01T00:11:28Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dp.getOperation()) == (Packet.OP_DAT)) { if (blockNumber != (dp.getBlockNum())) { if ((dp.getBlockNum()) < blockNumber) { java.lang.System.out.println(((\"Sending ack \" + blockNumber) + \" whcih is already received\")); sendPacket(sendSocket, new mf222tp_sl222xk_assign3.AckPacket(dp.getBlockNum())); } return false; } sendPacket(sendSocket, new mf222tp_sl222xk_assign3.AckPacket(blockNumber)); }else { throw new mf222tp_sl222xk_assign3.TFTPException(4, \"Expected data packet\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1558/buggy-version/src.mf222tp_sl222xk_assign3.SessionThread.java", "BodyUseAPI": ["mf222tp_sl222xk_assign3.DataPacket.getBlockNum()", "mf222tp_sl222xk_assign3.DataPacket.getBlockNum()", "mf222tp_sl222xk_assign3.DataPacket.getBlockNum()", "mf222tp_sl222xk_assign3.SessionThread.sendPacket(java.net.DatagramSocket,mf222tp_sl222xk_assign3.AckPacket)"], "Fixed commit": "030492a1824896c4b86d1c7e8ba3250f2bf66185", "Url": "https://api.github.com/repos/Dwight-D/TFTP", "Date": "2017-03-07T12:58:42Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mod < 0) { mod += master.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2116/buggy-version/src.main.java.net.sllmdilab.t5xrefmanager.util.TimeShift.java", "BodyUseAPI": [], "Fixed commit": "b04bcdcf4e8bd05827e3150930851e303204358c", "Url": "https://api.github.com/repos/sll-mdilab/t5-pid-xref-manager", "Date": "2016-03-17T13:25:58Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (distanceFromIntervalStart < 0) { distanceFromIntervalStart += master.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2116/buggy-version/src.main.java.net.sllmdilab.t5xrefmanager.util.TimeShift.java", "BodyUseAPI": [], "Fixed commit": "b04bcdcf4e8bd05827e3150930851e303204358c", "Url": "https://api.github.com/repos/sll-mdilab/t5-pid-xref-manager", "Date": "2016-03-17T13:25:58Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nodeToIndex.get(src)) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8492/buggy-version/src.main.java.com.github.aklatt1194.SuperAwesomeOverlay.models.OverlayRoutingModel.java", "BodyUseAPI": [], "Fixed commit": "dcc3c32ddcd105a91186405db6a7627b5b446f29", "Url": "https://api.github.com/repos/aklatt1194/SuperAwesomeOverlay", "Date": "2014-12-05T01:49:22Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value > (com.bioxx.tfc.api.Food.getWeight(is))) is.stackSize = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3071/buggy-version/src.API.com.bioxx.tfc.api.Food.java", "BodyUseAPI": [], "Fixed commit": "e43635f4aa2958a775476689a33eb35f63cbfb27", "Url": "https://api.github.com/repos/Deadrik/TFCraft", "Date": "2014-10-09T17:16:38Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.bioxx.tfc.api.Food.getDecay(is)) > value) is.stackSize = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3071/buggy-version/src.API.com.bioxx.tfc.api.Food.java", "BodyUseAPI": [], "Fixed commit": "e43635f4aa2958a775476689a33eb35f63cbfb27", "Url": "https://api.github.com/repos/Deadrik/TFCraft", "Date": "2014-10-09T17:16:38Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isElementPresent(ELEMENT_INFO)) { assert getText(ELEMENT_INFO).contains(message) : \"Message is wrong\"; }else if (isElementPresent(ELEMENT_CONFIRM)) { assert getText(ELEMENT_CONFIRM).contains(message) : \"Message is wrong\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4780/buggy-version/ui-common.src.main.java.org.exoplatform.selenium.ManageAlert.java", "BodyUseAPI": ["getText(ELEMENT_INFO).contains(java.lang.String)", "org.exoplatform.selenium.ManageAlert.getText(org.openqa.selenium.By)"], "Fixed commit": "fa33ae29ee0d1e756a436f36e85f627a3e9502a7", "Url": "https://api.github.com/repos/exoplatform/ui-test", "Date": "2014-01-08T10:50:58Z"},
{"Line": "=>1020", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msg.getType()) == (org.jivesoftware.smack.packet.IQ.Type.error)) is_new = org.yaxim.androidclient.data.ChatProvider.ChatConstants.DS_FAILED;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/9146/buggy-version/src.org.yaxim.androidclient.service.SmackableImp.java", "BodyUseAPI": [], "Fixed commit": "1593c4d18dab8fbcbe9e58a4bea2eba74205fb82", "Url": "https://api.github.com/repos/pfleidi/yaxim", "Date": "2014-01-15T18:00:12Z"},
{"Line": "=>1574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof java.util.Map<?, ?>) { map.putAll(((java.util.Map<? extends java.lang.String, ? extends java.lang.Object>) (obj))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2469/buggy-version/src.org.nutz.lang.Lang.java", "BodyUseAPI": [], "Fixed commit": "e9de60c3069d347019d2008e3cc1d2c77a00c5e9", "Url": "https://api.github.com/repos/ywjno/nutz", "Date": "2013-09-03T05:09:21Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((parts.length) == 1) && (parts[0].equals(\"search\"))) { return new rosa.website.core.client.place.AdvancedSearchPlace(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6134/buggy-version/rosa-website.rosa-website-core.src.main.java.rosa.website.core.client.mvp.BaseHistoryMapper.java", "BodyUseAPI": [], "Fixed commit": "e975757224ad50ed7879d04193cc4e9ac18c5e44", "Url": "https://api.github.com/repos/jhu-digital-manuscripts/rosa2", "Date": "2015-07-13T17:00:55Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count_c == 1) { delimiters = copy_args[(i + 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6901/buggy-version/WordCounter.src.wordCounter.WC.java", "BodyUseAPI": [], "Fixed commit": "854829505f5aaeb2c3fc7e8b6f2832e97ddf457b", "Url": "https://api.github.com/repos/KevinJones/CS6300WordCounter", "Date": "2012-09-11T01:51:05Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.getText().toString().equals(\"\")) || ((input.getText()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2077/buggy-version/PocketDiary.app.src.main.java.at.sw2017.pocketdiary.Friends.java", "BodyUseAPI": [], "Fixed commit": "def8b250445e4f1572ca9a616c5d2d97ed841073", "Url": "https://api.github.com/repos/stosa16/freeteamten", "Date": "2017-06-07T20:00:20Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (username.equals(\"null\")) { io.github.jython234.nectar.server.NectarServerApplication.getEventLog().logEntry(EventLog.EntryLevel.NOTICE, ((\"Failed user registration from \" + (request.getRemoteAddr())) + \": invalid username \\\"null\\\"\")); return org.springframework.http.ResponseEntity.status(HttpStatus.BAD_REQUEST).body(\"\\\"null\\\" is an invalid username.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2119/buggy-version/src.main.java.io.github.jython234.nectar.server.controller.AuthController.java", "BodyUseAPI": [], "Fixed commit": "92b46d86d62151d4dbd964f4ad266c4a54fe21d7", "Url": "https://api.github.com/repos/jython234/nectar-server", "Date": "2017-05-02T02:17:35Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["online.mrsys.movierecommender.action.user.LoadProfileAction.getMovieBeanById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (movieBean == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3896/buggy-version/MovieRecommenderSystem.src.online.mrsys.movierecommender.action.user.LoadProfileAction.java", "BodyUseAPI": [], "Fixed commit": "a6f9177e1d99e3fde471f6f9df06881e17ee905c", "Url": "https://api.github.com/repos/CongBao/mrsys.online", "Date": "2017-05-02T19:48:11Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(loginVo.getAccount())) { result.rejectValue(\"account\", \"NotEmpty.loginVo.account\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6096/buggy-version/onepay.src.main.java.com.rainasmoon.onepay.web.LoginController.java", "BodyUseAPI": [], "Fixed commit": "918bd9242c97661168580c2dd56eb2d69b861bcb", "Url": "https://api.github.com/repos/rainasmoon/online-application", "Date": "2016-06-24T09:00:45Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(loginVo.getAccount())) { result.rejectValue(\"password\", \"NotEmpty.loginVo.password\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6096/buggy-version/onepay.src.main.java.com.rainasmoon.onepay.web.LoginController.java", "BodyUseAPI": [], "Fixed commit": "918bd9242c97661168580c2dd56eb2d69b861bcb", "Url": "https://api.github.com/repos/rainasmoon/online-application", "Date": "2016-06-24T09:00:45Z"},
{"Line": "=>1179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userDo.getUsername().length()) >= 15) { LoginLinkContainer.getElement().getStyle().setWidth(155, Unit.PX); }else if ((userDo.getUsername().length()) <= 5) { LoginLinkContainer.getElement().getStyle().setWidth(70, Unit.PX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8109/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.home.HeaderUc.java", "BodyUseAPI": ["org.ednovo.gooru.shared.model.user.UserDo.getUsername()", "userDo.getUsername().length()"], "Fixed commit": "ff7091da6e6b76e89ec0c08165f05a3038ddeb53", "Url": "https://api.github.com/repos/VinRudramurthy/Gooru-Web", "Date": "2014-05-29T10:26:54Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Collection<org.eclipse.core.runtime.IPath>.isEmpty()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (_isEmpty_1) { result.copyFrom(ErlangProjectProperties.DEFAULT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3166/buggy-version/org.erlide.model.xtend-gen.org.erlide.engine.internal.model.root.RebarConfigurationSerializer.java", "BodyUseAPI": [], "Fixed commit": "fa86b11dab9d8312c333935e935708cd0ce52aad", "Url": "https://api.github.com/repos/vladdu/erlide", "Date": "2014-06-17T11:12:38Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ex instanceof org.springframework.dao.DataIntegrityViolationException) { org.duracloud.mill.auditor.jpa.JpaAuditLogStore.log.warn(\"failed to add audit log item {}: due to data integrity violation: suspected duplicate record: -> message={}\", ex.getMessage()); }else { throw new org.duracloud.audit.AuditLogWriteFailedException(ex, item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/925/buggy-version/mill-jpa-repo.src.main.java.org.duracloud.mill.auditor.jpa.JpaAuditLogStore.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,java.lang.String)", "java.lang.Exception.getMessage()"], "Fixed commit": "431a22a5c7743c953b498bcb451a41889fe61400", "Url": "https://api.github.com/repos/duracloud/duracloud", "Date": "2014-12-09T20:04:58Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<graph_builder.ChangedItem>.next()", "java.util.ArrayList<graph_builder.ChangedItem>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item1.name) != (item2.name)) graph.incrementEdge(item1.name, item2.name, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4159/buggy-version/src.graph_builder.GraphBuilder.java", "BodyUseAPI": ["graph_builder.Graph.incrementEdge(item1.name,item2.name,int)"], "Fixed commit": "e54bb93767383a195cf622bebf502be5f31cbeea", "Url": "https://api.github.com/repos/arminbalalaie/repo-graph-miner", "Date": "2014-11-29T10:01:05Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((globalVariableService) == null) { globalVariableService = org.kuali.coeus.sys.framework.service.KcServiceLocator.getService(org.kuali.coeus.sys.framework.gv.GlobalVariableService.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/488/buggy-version/coeus-code.src.main.java.org.kuali.coeus.propdev.impl.core.ProposalDevelopmentViewHelperServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "e68fce74c4caeeab69cce4b836a2513ca3c1c09a", "Url": "https://api.github.com/repos/yyuan1/kc", "Date": "2014-07-29T19:54:48Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.ydn.wicket.wicketconsole.ScriptEngineInterlayerRendererManager.getByResultObject(resultObject.getObject())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (renderer != null) { return renderer.getOutView(id, resultObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6218/buggy-version/wicket-console.src.main.java.ru.ydn.wicket.wicketconsole.ScriptEngineInterlayerRendererManager.java", "BodyUseAPI": ["ru.ydn.wicket.wicketconsole.IScriptEngineInterlayerResultRenderer.getOutView(java.lang.String,org.apache.wicket.model.IModel<ru.ydn.wicket.wicketconsole.IScriptEngineInterlayerResult>)"], "Fixed commit": "e2ee7dd94e2e95754e5e45c31bd440124f4852e2", "Url": "https://api.github.com/repos/PhantomYdn/wicket-console", "Date": "2016-11-04T05:05:45Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.ydn.wicket.wicketconsole.ScriptEngineInterlayerRendererManager.getByResultObject(resultObject.getObject())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (renderer != null) { return renderer.getErrorView(id, resultObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6218/buggy-version/wicket-console.src.main.java.ru.ydn.wicket.wicketconsole.ScriptEngineInterlayerRendererManager.java", "BodyUseAPI": ["ru.ydn.wicket.wicketconsole.IScriptEngineInterlayerResultRenderer.getErrorView(java.lang.String,org.apache.wicket.model.IModel<ru.ydn.wicket.wicketconsole.IScriptEngineInterlayerResult>)"], "Fixed commit": "e2ee7dd94e2e95754e5e45c31bd440124f4852e2", "Url": "https://api.github.com/repos/PhantomYdn/wicket-console", "Date": "2016-11-04T05:05:45Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (renderer != null) { add(renderer.getOutView(\"out\", new org.apache.wicket.model.PropertyModel<ru.ydn.wicket.wicketconsole.IScriptEngineInterlayerResult>(obj, \"resultObject\"))); add(renderer.getErrorView(\"err\", new org.apache.wicket.model.PropertyModel<ru.ydn.wicket.wicketconsole.IScriptEngineInterlayerResult>(obj, \"resultObject\"))); }else { add(new org.apache.wicket.markup.html.basic.MultiLineLabel(\"out\", new org.apache.wicket.model.PropertyModel<java.lang.String>(obj, \"resultObject.out\")).add(HideIfObjectIsEmptyBehavior.INSTANCE)); add(new org.apache.wicket.markup.html.basic.MultiLineLabel(\"err\", new org.apache.wicket.model.PropertyModel<java.lang.String>(obj, \"resultObject.error\")).add(HideIfObjectIsEmptyBehavior.INSTANCE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6218/buggy-version/wicket-console.src.main.java.ru.ydn.wicket.wicketconsole.HistoryItemPanel.java", "BodyUseAPI": ["ru.ydn.wicket.wicketconsole.ScriptEngineInterlayerRendererManager.getErrorView(java.lang.String,org.apache.wicket.model.PropertyModel<ru.ydn.wicket.wicketconsole.IScriptEngineInterlayerResult>)", "ru.ydn.wicket.wicketconsole.ScriptEngineInterlayerRendererManager.getOutView(java.lang.String,org.apache.wicket.model.PropertyModel<ru.ydn.wicket.wicketconsole.IScriptEngineInterlayerResult>)", "ru.ydn.wicket.wicketconsole.HistoryItemPanel.add(renderer.getErrorView(\"err\", new org.apache.wicket.model.PropertyModel<ru.ydn.wicket.wicketconsole.IScriptEngineInterlayerResult>(obj, \"resultObject\")))", "ru.ydn.wicket.wicketconsole.HistoryItemPanel.add(renderer.getOutView(\"out\", new org.apache.wicket.model.PropertyModel<ru.ydn.wicket.wicketconsole.IScriptEngineInterlayerResult>(obj, \"resultObject\")))"], "Fixed commit": "e2ee7dd94e2e95754e5e45c31bd440124f4852e2", "Url": "https://api.github.com/repos/PhantomYdn/wicket-console", "Date": "2016-11-04T05:05:45Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.markupartist.android.widget.ActionBar.getActionCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (actionCount > 0) { actionBar.removeActionAt((actionCount - 1)); android.widget.Toast.makeText(this, \"Removed action.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5403/buggy-version/actionbarexample.src.com.markupartist.android.actionbar.example.HomeActivity.java", "BodyUseAPI": ["com.markupartist.android.widget.ActionBar.removeActionAt(int)"], "Fixed commit": "441cdf3e346e840eef7b7feb7db59df91adfc41b", "Url": "https://api.github.com/repos/jiahaoliuliu/android-actionbar", "Date": "2012-05-01T15:32:33Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getParent().getParent()) != null) { if ((this.getParent().getParent().getLeft()) == (this.getParent())) { return this.getParent().getParent().getRight(); }else if ((this.getParent().getParent().getRight()) == (this.getParent())) { return this.getParent().getParent().getLeft(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2674/buggy-version/RBTrees.src.system.RBTree.java", "BodyUseAPI": [], "Fixed commit": "9c792ab9e546d33448f35d82558dbe7c02f9139f", "Url": "https://api.github.com/repos/slallum/Data-Structures", "Date": "2013-04-30T11:52:02Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(double,(hostTree.isRoot(hostNode) ? java.lang.Double.POSITIVE_INFINITY : hostTree.getNodeHeight(hostTree.getParent(hostNode))))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Double.isInfinite(max)) max = hostTree.getNodeHeight(hostNode);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/700/buggy-version/src.org.ithinktree.becky.HostShiftOperator.java", "BodyUseAPI": [], "Fixed commit": "f76cd1cbd202a034ffce3589036db40b5fb5966d", "Url": "https://api.github.com/repos/phylocomputing/BECKY", "Date": "2013-10-07T04:34:34Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.juxtasoftware.dao.JuxtaAnnotationDao.findNextTokenStart(base.getId(),java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((adjPos + 1) >= (base.getText().getLength())) { c.adjustRange((adjPos - 1), adjPos); }else { int nextPos = ((int) (this.annotationDao.findNextTokenStart(base.getId(), adjPos))); if (nextPos == (-1)) { c.adjustRange(pos, adjPos); }else { c.adjustRange(adjPos, (adjPos + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6989/buggy-version/juxta-ws.src.main.java.org.juxtasoftware.resource.heatmap.HeatmapView.java", "BodyUseAPI": ["org.juxtasoftware.resource.heatmap.Change.adjustRange(int,int)", "org.juxtasoftware.resource.heatmap.Change.adjustRange(java.lang.Integer,int)", "org.juxtasoftware.model.Witness.getId()", "org.juxtasoftware.dao.JuxtaAnnotationDao.findNextTokenStart(base.getId(),int)", "org.juxtasoftware.resource.heatmap.Change.adjustRange(int,int)"], "Fixed commit": "7c15d5ae5cff906897e433071f9f27532a908e3c", "Url": "https://api.github.com/repos/performant-software/juxta-service", "Date": "2013-02-18T15:13:46Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!((name.length()) < 8)) { name = name.substring(0, 7); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5897/buggy-version/src.View.View.java", "BodyUseAPI": [], "Fixed commit": "806f730ab8bc122df7de0b149494700598f8b556", "Url": "https://api.github.com/repos/Kyanite3221/ADHOCChat", "Date": "2017-04-13T11:46:50Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCause()) != null) { throw e.getCause(); }else { throw e.getTargetException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4763/buggy-version/src.fitnesse.slim.MethodExecutor.java", "BodyUseAPI": ["java.lang.reflect.InvocationTargetException.getTargetException()", "java.lang.reflect.InvocationTargetException.getCause()"], "Fixed commit": "510b9b9c5adc14c1dcdd0865899cadfcbc8f3455", "Url": "https://api.github.com/repos/unclebob/fitnesse", "Date": "2015-04-22T09:23:09Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((settings) != null) port = settings.getPort();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7269/buggy-version/projetp1.src.com.github.projetp1.rs232.RS232.java", "BodyUseAPI": [], "Fixed commit": "edeccf2d7a212d95bad080d5bd80be17b63d2fb1", "Url": "https://api.github.com/repos/projetp1/Frontend", "Date": "2012-08-22T09:50:36Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["il.ac.huji.tipcalculator.TipCalculatorActivity.findViewById(R.id.edtBillAmount)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (edtBillAmount.getText().toString().equals(\"\")) { txtTipResult.setText(\"\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/862/buggy-version/TipCalculator.src.il.ac.huji.tipcalculator.TipCalculatorActivity.java", "BodyUseAPI": [], "Fixed commit": "6924894c002593d9d94d466622eda604413f2656", "Url": "https://api.github.com/repos/astrut12/POST_PC_REPO", "Date": "2013-03-07T14:21:56Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.ObjectInputStream.readObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((packet.getPacketType()) == 5) { HostA.sendPacket(packet, sendSocket); HostA.writer.close(); }else { HostA.sendPacket(packet, sendSocket); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1400/buggy-version/src.HostA.java", "BodyUseAPI": ["HostA.sendPacket(Packet,java.net.DatagramSocket)", "HostA.sendPacket(Packet,java.net.DatagramSocket)"], "Fixed commit": "acfee25e75a477fa561ac8a52472d11680d5d2bc", "Url": "https://api.github.com/repos/tratnayake/7005Assignment3_R2", "Date": "2014-12-02T10:28:54Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.ConfigurationSection.getConfigurationSection(player.getUniqueId().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (p == null) p = newSection.createSection(player.getUniqueId().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7206/buggy-version/src.de.rene_zeidler.dynamicresourcepacks.ResourcepackManager.java", "BodyUseAPI": [], "Fixed commit": "36de2edb876bc94707bfea334b6c3f3dfe66e100", "Url": "https://api.github.com/repos/Phoenix616/DynamicResourcepacks", "Date": "2014-09-28T20:10:50Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.ConfigurationSection.getConfigurationSection(player.getUniqueId().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (p == null) p = section.createSection(player.getUniqueId().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7206/buggy-version/src.de.rene_zeidler.dynamicresourcepacks.ResourcepackManager.java", "BodyUseAPI": [], "Fixed commit": "36de2edb876bc94707bfea334b6c3f3dfe66e100", "Url": "https://api.github.com/repos/Phoenix616/DynamicResourcepacks", "Date": "2014-09-28T20:10:50Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position == 0) { return; }else { com.coveros.coverosmobileapp.blogpost.BlogPost blogPost = blogPosts.get((position - 1)); android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.coveros.coverosmobileapp.blogpost.BlogPostReadActivity.class); intent.putExtra(\"blogId\", blogPost.getId()); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1562/buggy-version/app.src.main.java.com.coveros.coverosmobileapp.blogpost.BlogPostsListActivity.java", "BodyUseAPI": ["java.util.List<com.coveros.coverosmobileapp.blogpost.BlogPost>.get(int)"], "Fixed commit": "8b2f8508b52b6dce8316ef7bd782e3eafcb8aa9b", "Url": "https://api.github.com/repos/Coveros/coveros-mobile-app", "Date": "2017-07-24T00:45:56Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldGenerateMapping) { generateMapping(classMap, globalConfiguration, buildTimeGenerators); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6151/buggy-version/core.src.main.java.org.dozer.classmap.ClassMapBuilder.java", "BodyUseAPI": [], "Fixed commit": "24f012cf20c975afd7d25d778bd225d0967b0eef", "Url": "https://api.github.com/repos/DozerMapper/dozer", "Date": "2017-08-19T10:46:30Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) timer.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7720/buggy-version/src.no.uib.info233.v2017.rei008_jsi014.oblig4.GameMaster.java", "BodyUseAPI": [], "Fixed commit": "ca449017bd3155b9e8de1853eae23f8d0a3f8db7", "Url": "https://api.github.com/repos/eikenottt/Oblig4", "Date": "2017-05-31T18:07:52Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sepIdx > 0) sourceFile = sourceFile.substring((sepIdx + 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2876/buggy-version/plugins.debugger.src.main.java.org.robovm.debugger.jdwp.handlers.referencetype.JdwpRefTypeSourceFileHandler.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "5a00b1a7b9c6115398fd2798622b0565e985dd05", "Url": "https://api.github.com/repos/dkimitsa/robovm", "Date": "2017-10-17T19:02:27Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.sktelink.sk00700.callservices.MyCallReceiver.dataUtils.isFirstUpdate()) { com.sktelink.sk00700.callservices.MyCallReceiver.dataUtils.setFirstUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6013/buggy-version/src.com.sktelink.sk00700.callservices.MyCallReceiver.java", "BodyUseAPI": ["com.sktelink.sk00700.callservices.DataUtils.setFirstUpdate()"], "Fixed commit": "7779598c32168bc4c93fedb8954a30e39668228b", "Url": "https://api.github.com/repos/MrKenitvnn/CallServiceBroadcast", "Date": "2015-06-12T09:02:16Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (etQuantity.getText().toString().equals(\"\")) { inputQty = 0.0; }else { inputQty = java.lang.Double.parseDouble(etQuantity.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/9114/buggy-version/app.src.main.java.com.along.android.healthmanagement.fragments.AddFoodFragment.java", "BodyUseAPI": ["android.widget.EditText.getText()", "java.lang.Double.parseDouble(etQuantity.getText().toString())", "etQuantity.getText().toString()"], "Fixed commit": "7979366541ce1e958894793bab52290f5aad4fd1", "Url": "https://api.github.com/repos/cqlzx/health-management", "Date": "2017-04-14T20:04:55Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().setDisplayHomeAsUpEnabled(true); getSupportActionBar().setDisplayShowTitleEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8965/buggy-version/app.src.main.java.com.jerry.notes.Activities.EditNotes.java", "BodyUseAPI": [], "Fixed commit": "02c0f717ca4bf7a990bbfc9fca3dd50af7645748", "Url": "https://api.github.com/repos/JerryJin93/Notes", "Date": "2017-10-04T13:47:16Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((endView.getX()) > (startView.getX())) { setMeasuredDimension(((int) ((endView.getX()) + (30 * pxDensity))), ((int) (endView.getY()))); }else { setMeasuredDimension(((int) ((startView.getX()) + (30 * pxDensity))), ((int) (endView.getY()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3347/buggy-version/app.src.main.java.com.crabfibber.util.treeviewer.view.NodeLine.java", "BodyUseAPI": ["com.crabfibber.util.treeviewer.view.NodeLine.setMeasuredDimension(((int) ((endView.getX()) + (30 * pxDensity))),((int) (endView.getY())))", "android.view.View.getY()", "com.crabfibber.util.treeviewer.view.NodeLine.setMeasuredDimension(((int) ((startView.getX()) + (30 * pxDensity))),((int) (endView.getY())))", "android.view.View.getX()", "android.view.View.getX()", "android.view.View.getY()"], "Fixed commit": "33adbf972e7add5f8a01d0b800acb48fdf4a79e6", "Url": "https://api.github.com/repos/fcrab/TreeViewer", "Date": "2016-04-25T09:01:38Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((getHeaderLayoutCount()) == 1) && (data != null)) { com.chad.library.adapter.base.BaseQuickAdapter.notifyItemRangeChanged(getHeaderLayoutCount(), data.size()); }else { com.chad.library.adapter.base.BaseQuickAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8057/buggy-version/library.src.main.java.com.chad.library.adapter.base.BaseQuickAdapter.java", "BodyUseAPI": ["com.chad.library.adapter.base.BaseQuickAdapter.notifyItemRangeChanged(int,int)", "java.util.List<T>.size()"], "Fixed commit": "0f0db7a656622e96468da00c67c3c3d3f16d5429", "Url": "https://api.github.com/repos/FrankKwok/BaseRecyclerViewAdapterHelper", "Date": "2017-04-07T04:54:15Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.getMessages().contains(m))) { f.addMessage(m); this.save(f); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1143/buggy-version/WorkSpace.Acme-Barter.src.main.java.services.FolderService.java", "BodyUseAPI": ["domain.Folder.addMessage(domain.Message)", "services.FolderService.save(domain.Folder)"], "Fixed commit": "8aaffaae3e007e96b2a5752f4d752efee9288146", "Url": "https://api.github.com/repos/DPIRPSG/DP10Entrega", "Date": "2016-04-19T16:52:47Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DateField.TYPE.equalsIgnoreCase(rs.getString(\"TYPE_NAME\"))) { dataType = java.sql.Types.DATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6667/buggy-version/mydb.mydb-war.src.main.java.com.silverpeas.mydb.control.MyDBSessionController.java", "BodyUseAPI": [], "Fixed commit": "0b0228c44e8a3224ba6a4e617ba9d179e5d18a53", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Components", "Date": "2015-04-22T09:28:52Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((acceptBrands != null) && ((acceptBrands.size()) > 0)) { acceptProducts = ofy().load().type(com.mobilevanity.backend.data.Product.class).order(\"brand\").filter(\"brand in\", acceptBrands).list(); for (int i = (acceptProducts.size()) - 1; i >= 0; i--) { com.mobilevanity.backend.data.Product p = acceptProducts.get(i); if (category > 0) { if ((p.category) != category) { acceptProducts.remove(i); continue; } } if (item > 0) { if ((p.item) != item) { acceptProducts.remove(i); continue; } } } }else { acceptProducts = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3054/buggy-version/backend.src.main.java.com.mobilevanity.backend.DataManager.java", "BodyUseAPI": ["ofy().load().type(com.mobilevanity.backend.data.Product.class).order(\"brand\").filter(\"brand in\", acceptBrands).list()", "ofy().load().type(com.mobilevanity.backend.data.Product.class).order(\"brand\").filter(java.lang.String,java.util.List<com.mobilevanity.backend.data.Brand>)"], "Fixed commit": "1565decf463c546b473cdff1bb043151b4b3dc50", "Url": "https://api.github.com/repos/dongja94/MobileVanityServer", "Date": "2016-08-27T07:18:15Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((acceptProducts.size()) > 0) { acceptCosmetics = ofy().load().type(com.mobilevanity.backend.data.Cosmetic.class).order(\"product\").filter(\"product in\", acceptProducts).list(); }else { acceptCosmetics = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3054/buggy-version/backend.src.main.java.com.mobilevanity.backend.DataManager.java", "BodyUseAPI": ["ofy().load().type(com.mobilevanity.backend.data.Cosmetic.class).order(\"product\").filter(java.lang.String,java.util.List<com.mobilevanity.backend.data.Product>)", "ofy().load().type(com.mobilevanity.backend.data.Cosmetic.class).order(\"product\").filter(\"product in\", acceptProducts).list()"], "Fixed commit": "1565decf463c546b473cdff1bb043151b4b3dc50", "Url": "https://api.github.com/repos/dongja94/MobileVanityServer", "Date": "2016-08-27T07:18:15Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.googlecode.objectify.cmd.Query.list()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((products.size()) > 0) { cosmetics = ofy().load().type(com.mobilevanity.backend.data.Cosmetic.class).filter(\"product in\", products).list(); }else { cosmetics = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3054/buggy-version/backend.src.main.java.com.mobilevanity.backend.DataManager.java", "BodyUseAPI": ["ofy().load().type(com.mobilevanity.backend.data.Cosmetic.class).filter(\"product in\", products).list()", "ofy().load().type(com.mobilevanity.backend.data.Cosmetic.class).filter(java.lang.String,java.util.List<com.mobilevanity.backend.data.Product>)"], "Fixed commit": "1565decf463c546b473cdff1bb043151b4b3dc50", "Url": "https://api.github.com/repos/dongja94/MobileVanityServer", "Date": "2016-08-27T07:18:15Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) { com.util.Util.setTotalPageCount(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2437/buggy-version/src.com.pipeline.Pipeline.java", "BodyUseAPI": [], "Fixed commit": "ecd5a92b1c22d00f35b434349f5e8c8558b5fb2d", "Url": "https://api.github.com/repos/sc703bupt/MathematicaProj", "Date": "2015-04-09T08:28:22Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exCurrency) != null) newExpense.setCurrency(exCurrency);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5930/buggy-version/app.src.main.java.at.ac.univie.AddExpenseActivity.java", "BodyUseAPI": [], "Fixed commit": "12796388c5d8f7c3b91f5f8c230d771c0c41f1a5", "Url": "https://api.github.com/repos/Arch1m3des/FrogApplication", "Date": "2016-06-12T11:04:31Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (masthead.isEmpty()) { masthead = doc.select(\"div.statoDoveQuandoConsegnato ul\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/353/buggy-version/src.postetracker.PosteUI.java", "BodyUseAPI": [], "Fixed commit": "104ab7997b9b190827369fe07c01efbb011858b4", "Url": "https://api.github.com/repos/PicciMario/PosteTracker", "Date": "2014-10-16T15:58:08Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((service.getServiceType()) == (org.apache.curator.x.discovery.ServiceType.STATIC)) { services.put(service.getId(), service); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/915/buggy-version/curator-x-discovery.src.main.java.org.apache.curator.x.discovery.details.ServiceDiscoveryImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.apache.curator.x.discovery.ServiceInstance<T>>.put(service.getId(),org.apache.curator.x.discovery.ServiceInstance<T>)", "org.apache.curator.x.discovery.ServiceInstance<T>.getId()"], "Fixed commit": "07639aa66b2eefbf1523c6f14fe2065b06969e4e", "Url": "https://api.github.com/repos/newcontext/curator", "Date": "2014-03-08T11:13:44Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hbase.regionserver.compactions.DateTieredCompactionPolicy.partitionFilesToBuckets(java.lang.Iterable<org.apache.hadoop.hbase.regionserver.StoreFile>,comConf.getBaseWindowMillis(),comConf.getWindowsPerTier(),long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((buckets.size()) >= (storeConfigInfo.getBlockingFileCount())) { org.apache.hadoop.hbase.regionserver.compactions.DateTieredCompactionPolicy.LOG.warn((((((\"Number of compaction buckets:\" + (buckets.size())) + \", exceeds blocking file count setting: \") + (storeConfigInfo.getBlockingFileCount())) + \", either increase hbase.hstore.blockingStoreFiles or \") + \"reduce the number of tiered compaction windows\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6606/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.compactions.DateTieredCompactionPolicy.java", "BodyUseAPI": ["java.util.List<java.util.ArrayList<org.apache.hadoop.hbase.regionserver.StoreFile>>.size()", "org.apache.commons.logging.Log.warn((((((\"Number of compaction buckets:\" + (buckets.size())) + \", exceeds blocking file count setting: \") + (storeConfigInfo.getBlockingFileCount())) + \", either increase hbase.hstore.blockingStoreFiles or \") + \"reduce the number of tiered compaction windows\"))", "org.apache.hadoop.hbase.regionserver.compactions.DateTieredCompactionPolicy.getBlockingFileCount()"], "Fixed commit": "231a5807b4277020124ede1a9b44932e1048dfb6", "Url": "https://api.github.com/repos/apache/hbase", "Date": "2016-03-02T02:21:37Z"},
{"Line": "=>794", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((labels.get(o)) != null) { nlabels++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1903/buggy-version/src.jasm.io.ClassFileReader.java", "BodyUseAPI": [], "Fixed commit": "883c8ec6e24e04af98c762c0a5c61e45dcb35d67", "Url": "https://api.github.com/repos/DavePearce/Jasm", "Date": "2013-08-14T10:15:36Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<de.tum.in.foodforme.model.Ingredient>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ingredient.getRecipeId()) != null) { de.tum.in.foodforme.model.Recipe recipe = recipeDAO.getRecipe(ingredient.getRecipeId()); if ((!(recipes.contains(recipe))) && (recipe.getCategory().equalsIgnoreCase(course))) { recipes.add(recipe); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6010/buggy-version/src.main.java.de.tum.in.foodforme.dao.RecipeRecommendationDAO.java", "BodyUseAPI": ["de.tum.in.foodforme.model.Ingredient.getRecipeId()", "de.tum.in.foodforme.dao.RecipeDAO.getRecipe(ingredient.getRecipeId())"], "Fixed commit": "30ed0ac8e5dbabff9ae005add7683c201d494300", "Url": "https://api.github.com/repos/kashankhan/ServerFoodForMe", "Date": "2015-04-11T21:49:39Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((potentialNewRoot.getActions().size()) == (potentialNewRoot.amountOfChildren())) { potentialNewRoot.setFullyExpanded(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6332/buggy-version/src.main.java.nl.dke.boardgame.mcts.MonteCarloTree.java", "BodyUseAPI": ["nl.dke.boardgame.mcts.MonteCarloRootNode<S, A>.setFullyExpanded(boolean)"], "Fixed commit": "1d054e2e1286dc4c8517317dd7a7344e05d042d1", "Url": "https://api.github.com/repos/nikvaessen/dke-boardgame", "Date": "2017-01-23T12:53:19Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (orientation == (android.content.res.Configuration.ORIENTATION_LANDSCAPE)) { mRecyclerView.setFocusable(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4351/buggy-version/Manat.app.src.main.java.org.ogasimli.manat.fragment.MainActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "2274e38b3f7571cd780a75b080c2468b85410e62", "Url": "https://api.github.com/repos/ogasimli/Capstone-Project", "Date": "2016-05-04T20:41:46Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.bufferedImage) == null) this.bufferedImage = this.gameVar.getErrorImage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7829/buggy-version/ui.elem.Sprite.java", "BodyUseAPI": [], "Fixed commit": "37b7f0293f75a1447b8ece2c098138bf385fefde", "Url": "https://api.github.com/repos/Enthri/aprctsrpg", "Date": "2015-02-17T05:23:38Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.duracloud.common.queue.task.Task.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != value) { props.setProperty(key, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3383/buggy-version/common-queue.src.main.java.org.duracloud.common.queue.aws.SQSTaskQueue.java", "BodyUseAPI": ["java.util.Properties.setProperty(java.lang.String,java.lang.String)"], "Fixed commit": "a0f34d3e96299daab602be6e494b382891c28a87", "Url": "https://api.github.com/repos/duracloud/duracloud", "Date": "2014-03-19T20:21:50Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((urlConnection) != null) { urlConnection.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6616/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.await.HttpAwaitStrategy.java", "BodyUseAPI": [], "Fixed commit": "35946800e00f362d0012fc661fc97ecda437ff47", "Url": "https://api.github.com/repos/jelmew/arquillian-cube", "Date": "2017-04-12T15:48:55Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.self) { com.timepath.Launcher.download(new java.net.URL(p.hash), new java.io.File(((f.getPath()) + \".MD5\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5100/buggy-version/src.com.timepath.Launcher.java", "BodyUseAPI": ["com.timepath.Launcher.download(java.net.URL,java.io.File)"], "Fixed commit": "7c191c8282477db20557285a3cb8f9f6a2eae682", "Url": "https://api.github.com/repos/TimePath/launcher", "Date": "2013-09-20T23:06:04Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((evasion) + value) > 100) { evasion = 100; }else { evasion += value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2223/buggy-version/Fighter.java", "BodyUseAPI": [], "Fixed commit": "a9043de016cfa5ebb3bcaa73a62462d2b7c355f0", "Url": "https://api.github.com/repos/Nxlee/Program7", "Date": "2016-03-09T22:04:14Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((username) != null) { editor.putString(\"username\", username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2268/buggy-version/src.edu.pitt.cs.exposure.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ee80c2705f357aef479a7285261faefc074dbdc6", "Url": "https://api.github.com/repos/ylegall/Location-Tracker", "Date": "2011-05-23T16:34:48Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((password) != null) { editor.putString(\"password\", password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2268/buggy-version/src.edu.pitt.cs.exposure.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ee80c2705f357aef479a7285261faefc074dbdc6", "Url": "https://api.github.com/repos/ylegall/Location-Tracker", "Date": "2011-05-23T16:34:48Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2268/buggy-version/src.edu.pitt.cs.exposure.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ee80c2705f357aef479a7285261faefc074dbdc6", "Url": "https://api.github.com/repos/ylegall/Location-Tracker", "Date": "2011-05-23T16:34:48Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savePipeline()) { cz.cuni.xrg.intlib.frontend.auxiliaries.App.getApp().getNavigator().navigateTo(ViewNames.PipelineList.getUrl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/146/buggy-version/frontend.src.main.java.cz.cuni.xrg.intlib.frontend.gui.views.PipelineEdit.java", "BodyUseAPI": [], "Fixed commit": "4747f6eb75f5e3502c3952a1df22f7979cfaaa4c", "Url": "https://api.github.com/repos/mff-uk/intlib", "Date": "2013-07-09T11:50:03Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.motiondetection.service.dto.MonitoringConfig>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (monitoringConfig == null) { monitoringConfig = new com.motiondetection.service.dto.MonitoringConfig(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7160/buggy-version/MotionDetectionWeb.src.main.java.com.motiondetection.service.ConfigurationService.java", "BodyUseAPI": [], "Fixed commit": "64defdb8abfbb8e815c57b0dd55a7e06e832777c", "Url": "https://api.github.com/repos/SlavchoArsovski/motion-detection", "Date": "2017-03-06T21:43:15Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (started) { pl.psnc.dl.wf4ever.db.hibernate.HibernateUtil.getSessionFactory().getCurrentSession().getTransaction().commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4002/buggy-version/src.main.java.pl.psnc.dl.wf4ever.monitoring.ChecksumVerificationJob.java", "BodyUseAPI": [], "Fixed commit": "8870ffcef1a82f9bee5a8094f89f81ea3b14d282", "Url": "https://api.github.com/repos/pejot/rodl", "Date": "2013-05-02T12:16:20Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (started) { pl.psnc.dl.wf4ever.db.hibernate.HibernateUtil.getSessionFactory().getCurrentSession().getTransaction().begin(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4002/buggy-version/src.main.java.pl.psnc.dl.wf4ever.monitoring.ChecksumVerificationJob.java", "BodyUseAPI": [], "Fixed commit": "8870ffcef1a82f9bee5a8094f89f81ea3b14d282", "Url": "https://api.github.com/repos/pejot/rodl", "Date": "2013-05-02T12:16:20Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((Build.VERSION.SDK_INT) >= 26) || (((Build.VERSION.SDK_INT) == 25) && ((Build.VERSION.PREVIEW_SDK_INT) >= 1))) name = samuelpalmer.sensorautorotation.CurrentProcess.context().startForegroundService(intent); else name = samuelpalmer.sensorautorotation.CurrentProcess.context().startService(intent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1652/buggy-version/app.src.main.java.samuelpalmer.sensorautorotation.ServiceController.java", "BodyUseAPI": [], "Fixed commit": "351c25770c945eb155fbab5ef9e66d83e135b710", "Url": "https://api.github.com/repos/sampalmer/sideways-mode", "Date": "2017-05-20T10:29:56Z"},
{"Line": "=>1021", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.equals(Response.UNKNOWN)) { throw new wycs.transforms.SmtVerificationCheck.SolverFailure(\"solver returned unknown\"); }else if ((line.equals(Response.SAT)) || (line.equals(Response.UNSAT))) { if ((assertion.message) == null) { throw new wycs.transforms.SmtVerificationCheck.AssertionFailure(assertion); }else { throw new wycs.transforms.SmtVerificationCheck.AssertionFailure(assertion.message, assertion); } }else if (line.equals(Response.UNSUPPORTED)) { }else if (line.startsWith(\"(error\")) { java.lang.String error = line.substring(7, ((line.length()) - 1)); throw new wycs.transforms.SmtVerificationCheck.SolverFailure(error); }else { throw new java.lang.RuntimeException(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2182/buggy-version/modules.wycs.src.wycs.transforms.SmtVerificationCheck.java", "BodyUseAPI": ["java.lang.String.equals(Response.SAT)", "java.lang.String.equals(Response.UNSAT)", "java.lang.String.equals(Response.UNSUPPORTED)", "java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "157b5ad425f7f874581c2cb24a7317e6f330337b", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2014-07-11T22:43:36Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (handlers.containsKey(error.networkResponse.statusCode)) { handlers.get(error.networkResponse.statusCode).handleError(ctx, error); }else { new jprogger.org.weather.net.ErrorHandlerBuilder.DefaultErrorHandler().handleError(ctx, error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1523/buggy-version/app.src.main.java.jprogger.org.weather.net.ErrorHandlerBuilder.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, jprogger.org.weather.net.ErrorHandler>.get(error.networkResponse.statusCode)", "jprogger.org.weather.net.ErrorHandlerBuilder.DefaultErrorHandler.handleError(android.content.Context,com.android.volley.VolleyError)", "handlers.get(error.networkResponse.statusCode).handleError(android.content.Context,com.android.volley.VolleyError)"], "Fixed commit": "91a67f694fab1f016972e8b4a5dfb8887f05a0be", "Url": "https://api.github.com/repos/jprogger/weather", "Date": "2014-09-07T23:50:45Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fragment.isOnline()) { fragment.findLocation(); }else { android.widget.Toast.makeText(fragment.getContext(), \"NO INTERNET CONNECTION\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6017/buggy-version/app.src.main.java.com.example.owner.skymood.listeners.LocationSearchButtonListener.java", "BodyUseAPI": ["com.example.owner.skymood.fragments.CurrentWeatherFragment.getContext()", "android.widget.Toast.makeText(fragment.getContext(),java.lang.String,Toast.LENGTH_SHORT)", "com.example.owner.skymood.fragments.CurrentWeatherFragment.findLocation()", "android.widget.Toast.makeText(fragment.getContext(), \"NO INTERNET CONNECTION\", Toast.LENGTH_SHORT).show()"], "Fixed commit": "5d6548e1ab9c8c69bb66b5bc4758324a376eeb13", "Url": "https://api.github.com/repos/Thugette/SkyMood", "Date": "2016-04-07T23:15:49Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((temp) != null) && ((icon) != null)) { if (((locPref.isSetLocation()) && (city.equals(locPref.getCity()))) && (countryCode.equals(locPref.getCountryCode()))) { locPref.setPreferredLocation(city, country, countryCode, icon, temp, minTemp, maxTemp, condition, feelsLike, lastUpdate); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6017/buggy-version/app.src.main.java.com.example.owner.skymood.asyncTasks.APIDataGetterAsyncTask.java", "BodyUseAPI": [], "Fixed commit": "5d6548e1ab9c8c69bb66b5bc4758324a376eeb13", "Url": "https://api.github.com/repos/Thugette/SkyMood", "Date": "2016-04-07T23:15:49Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index != (-1)) { item = item.substring(0, (index - 1)); query = new com.parse.ParseQuery<com.parse.ParseObject>(\"WishList\").whereMatches(\"List\", item); }else { query = new com.parse.ParseQuery<com.parse.ParseObject>(\"WishList\").whereMatches(\"List\", item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2826/buggy-version/app.src.main.java.com.example.jarvus.tummybuddy.WishListActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "615e3843880d47fe5d8f4ce501fc234c72efb8ec", "Url": "https://api.github.com/repos/sgl9769/eatme", "Date": "2015-11-30T02:27:44Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index != (-1)) { item = item.substring(0, (index - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/2826/buggy-version/app.src.main.java.com.example.jarvus.tummybuddy.WishListActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "615e3843880d47fe5d8f4ce501fc234c72efb8ec", "Url": "https://api.github.com/repos/sgl9769/eatme", "Date": "2015-11-30T02:27:44Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (eventList.size())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/5214/buggy-version/app.src.main.java.com.stazo.project_18.ListAct.java", "BodyUseAPI": [], "Fixed commit": "7b1fe0fc71ff31160ab94f6c75757796fef57730", "Url": "https://api.github.com/repos/lukethomas1/stazo-project-18", "Date": "2016-07-06T07:56:36Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEnableCache())) { cfg.setTemplateUpdateDelay(0); }else { cfg.setTemplateUpdateDelay((3600 * 24)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3208/buggy-version/bundle_hettymvc.src.ddth.dasp.hetty.mvc.view.freemarker.FreeMarkerViewResolver.java", "BodyUseAPI": [], "Fixed commit": "51915608b078870066c19df5da610f36fc743dff", "Url": "https://api.github.com/repos/DDTH/DASP", "Date": "2013-02-26T06:57:51Z"},
{"Line": "=>3238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sentenceID == 163) { java.lang.System.out.println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8852/buggy-version/src.semanticMarkup.ling.learn.Learner.java", "BodyUseAPI": [], "Fixed commit": "1319c3aa028d3054074204c80f0b5ad1190e4df8", "Url": "https://api.github.com/repos/phenoscape/charaparser-unsupervised", "Date": "2013-10-19T02:55:13Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.company.mbelogorodtsev.trainingapplication.MusicManager.getInstance().inPlayingMode()) { setUpPlayButton(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7979/buggy-version/TrainingApplication.app.src.main.java.com.company.mbelogorodtsev.trainingapplication.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "3d2a3fd93b690e277e2f5fbbe055ace9dfdc913f", "Url": "https://api.github.com/repos/mawhi/AndroidFirstTask", "Date": "2015-08-28T04:22:49Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((date) == null) { java.util.Date d = new java.util.Date(cal.getDate()); java.lang.String correctDay = java.lang.String.valueOf(d.getDate()); if ((correctDay.length()) == 1) { correctDay = \"0\" + correctDay; } java.lang.String correctMonth = java.lang.String.valueOf(d.getMonth()); if ((correctMonth.length()) == 1) { correctMonth = \"0\" + correctMonth; } java.lang.String correctYear = java.lang.String.valueOf(d.getYear()).substring(1); date = (java.lang.String.valueOf((((correctDay + \"/\") + correctMonth) + \"/\"))) + correctYear; android.util.Log.d(\"TRIGGER\", date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6417/buggy-version/SEPPrototype.app.src.main.java.uts.sep.tcba.sepprototype.Controller_MakeAvailability.java", "BodyUseAPI": [], "Fixed commit": "f5ee6a377bb4dab604e7d53925bdf91ad355fec4", "Url": "https://api.github.com/repos/sc1122/SEPProject", "Date": "2017-10-08T11:46:18Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((correctMonth.length()) == 1) { correctMonth = \"0\" + correctMonth; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6417/buggy-version/SEPPrototype.app.src.main.java.uts.sep.tcba.sepprototype.Controller_MakeAvailability.java", "BodyUseAPI": [], "Fixed commit": "f5ee6a377bb4dab604e7d53925bdf91ad355fec4", "Url": "https://api.github.com/repos/sc1122/SEPProject", "Date": "2017-10-08T11:46:18Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (document.isSetModel()) { model = document.getModel(); }else { org.cy3sbml.SBMLReaderTask.logger.warn(\"No model in SBML file. Please check the model definition.\"); model = document.createModel(); model.setId(\"null_model\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1288/buggy-version/src.main.java.org.cy3sbml.SBMLReaderTask.java", "BodyUseAPI": ["org.sbml.jsbml.SBMLDocument.createModel()", "org.sbml.jsbml.SBMLDocument.getModel()"], "Fixed commit": "5b483fd2afe36e76505c62d935fe2cae605d3ba8", "Url": "https://api.github.com/repos/matthiaskoenig/cy3sbml", "Date": "2015-11-10T14:17:56Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((targetRuntimeID) == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8382/buggy-version/src.uk.ac.brighton.uni.ab607.mmorpg.client.ui.GameGUI.java", "BodyUseAPI": [], "Fixed commit": "1b74a97563b00b809b833cf58208ad8d3cbabc89", "Url": "https://api.github.com/repos/AlmasB/mmorpg", "Date": "2014-06-25T11:03:33Z"},
{"Line": "=>6514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ex instanceof org.jmlspecs.openjml.JmlTree.JmlSingleton) ex = treeutils.trueLit;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/791/buggy-version/OpenJML.src.org.jmlspecs.openjml.esc.JmlAssertionAdder.java", "BodyUseAPI": [], "Fixed commit": "05837e5ac1a7545b79b9c43dc728d9be34542f2d", "Url": "https://api.github.com/repos/OpenJML/OpenJML", "Date": "2016-07-09T15:48:15Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLogoText) != null) { me.zhang.bingo.Utility.applyCustomFont(getContext(), mLogoText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3730/buggy-version/app.src.main.java.me.zhang.bingo.ImagesFragment.java", "BodyUseAPI": [], "Fixed commit": "58efd791ab7b619b6d30604938e920d2cb34a6a0", "Url": "https://api.github.com/repos/zhangPATHngdong/bingo", "Date": "2017-05-19T07:36:54Z"},
{"Line": "=>2059", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((node.tag) == null) && ((node.type) == (Node.END_TAG))) && (element.element.equals(node.element))) && (!(lexer.configuration.dropProprietaryTags))) { node.tag = element.tag; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/459/buggy-version/src.main.java.org.w3c.tidy.ParserImpl.java", "BodyUseAPI": [], "Fixed commit": "cdd57c55b8fce4e219b496a250609b86ef9b5bb1", "Url": "https://api.github.com/repos/nanndoj/jtidy", "Date": "2015-07-08T21:48:55Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((appBarLayout) != null) { if ((recyclerView.computeVerticalScrollOffset()) == 0) { android.support.v4.view.ViewCompat.setElevation(appBarLayout, 0); }else { android.support.v4.view.ViewCompat.setElevation(appBarLayout, appBarLayout.getTargetElevation()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7787/buggy-version/app.src.main.java.com.daniel.sunshine.ForecastFragment.java", "BodyUseAPI": [], "Fixed commit": "e7a63dc69b5e9aaae5023e086cc0aa00a86afc75", "Url": "https://api.github.com/repos/danishin/weather-android", "Date": "2015-06-19T07:07:13Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (drawPolygon) { ypoints[0] = ((int) (java.lang.Math.ceil(clip.getBounds2D().getMaxY()))); }else { ypoints[0] = ypoints[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6352/buggy-version/src.main.java.com.tagtraum.perf.gcviewer.renderer.PolygonChartRenderer.java", "BodyUseAPI": [], "Fixed commit": "d1f8ef5139f0c5bcda3cfd3aef1f95d8e8b8a189", "Url": "https://api.github.com/repos/unguiculus/GCViewer", "Date": "2013-01-28T21:08:36Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(serverContext.startsWith(\"/\"))) { sb.append(\"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6473/buggy-version/java-phresco-plugin.src.main.java.com.photon.phresco.plugins.java.Start.java", "BodyUseAPI": [], "Fixed commit": "1068a66c8f4b411e45c8f6e98ec064a7b6c79333", "Url": "https://api.github.com/repos/photon-infotech/plugins", "Date": "2014-07-03T12:20:07Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (max > 1) { int second = (rand.nextInt(((max - (min)) + 1))) + (min); while (second == first) { second = (rand.nextInt(((max - (min)) + 1))) + (min); } final_items.add(items[second]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6607/buggy-version/app.src.main.java.com.breaktime.ChooseBreakActivity.java", "BodyUseAPI": ["java.util.Random.nextInt(int)", "java.util.Random.nextInt(int)"], "Fixed commit": "07fdf085dd3b42ec0a740575df3b1c80f13ab5b0", "Url": "https://api.github.com/repos/kevana/BreakTime", "Date": "2014-12-04T23:16:46Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (max > 0) { first = (rand.nextInt(((max - (min)) + 1))) + (min); final_items.add(items[first]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6607/buggy-version/app.src.main.java.com.breaktime.ChooseBreakActivity.java", "BodyUseAPI": ["java.util.Random.nextInt(int)"], "Fixed commit": "07fdf085dd3b42ec0a740575df3b1c80f13ab5b0", "Url": "https://api.github.com/repos/kevana/BreakTime", "Date": "2014-12-04T23:16:46Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["choice.getValue().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (db.equals(opendb)) { new org.basex.core.cmd.Open(db).run(gui.context); gui.notify.init(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/6423/buggy-version/src.main.java.org.basex.gui.dialog.DialogOpen.java", "BodyUseAPI": ["org.basex.core.cmd.Open.run(gui.context)"], "Fixed commit": "11500301392c7af70022f4e4f08915153cd3c96c", "Url": "https://api.github.com/repos/dimitarp/basex", "Date": "2011-06-16T11:17:16Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (debugString.equals(\"true\")) { debug = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1062/buggy-version/src.main.java.WishListServlets.Login.java", "BodyUseAPI": [], "Fixed commit": "0348db6e3310a81ce3272277ab36446f7d90ca63", "Url": "https://api.github.com/repos/bfurner27/cs313group", "Date": "2015-07-06T23:47:22Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (jsonStoreEnabledString.equals(\"true\")) { jsonStoreEnabled = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1062/buggy-version/src.main.java.WishListServlets.Login.java", "BodyUseAPI": [], "Fixed commit": "0348db6e3310a81ce3272277ab36446f7d90ca63", "Url": "https://api.github.com/repos/bfurner27/cs313group", "Date": "2015-07-06T23:47:22Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task.getPlanned()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8870/buggy-version/sdi-42.src.com.sdi.presentation.BeanTasks.java", "BodyUseAPI": [], "Fixed commit": "e3ff07a2016cef6abae1da221c2c62bc343563a2", "Url": "https://api.github.com/repos/MarcosRV87/GTD_Task_Manager", "Date": "2017-03-26T09:06:24Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (decisionLevel == (getDecisionLevel())) { throw new java.lang.RuntimeException(\"Recording MBT below TRUE where MBT has the same decision level as TRUE. Should not happen.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/7794/buggy-version/src.main.java.at.ac.tuwien.kr.alpha.solver.BasicAssignment.java", "BodyUseAPI": [], "Fixed commit": "253112deef21747f612b39d32656e2136b371fa6", "Url": "https://api.github.com/repos/alpha-asp/Alpha", "Date": "2017-01-18T11:57:04Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((clip) == null) || (!(clip.isRunning()))) { play(t.getText()); }else { clip.stop(); play(t.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3967/buggy-version/Sound.Sound.java", "BodyUseAPI": ["javax.sound.sampled.Clip.stop()"], "Fixed commit": "b763eff1d885cc540cc09d09cdac22a638dfe3c0", "Url": "https://api.github.com/repos/kkhan01/MISCELLANEOUS_Java", "Date": "2017-02-22T22:51:40Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getMaxLines()) >= (createLayout(this.getLayout(), this.getPaint(), this.getTextSize(), this.getLineSpacingMultiplier(), this.getLineSpacingExtra()).getLineCount())) { if ((expandableTextLayout.getExpandView()) != null) { expandableTextLayout.hideExpandView(); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8867/buggy-version/src.main.java.ayar.oktay.advancedtextview.AdvancedTextView.java", "BodyUseAPI": [], "Fixed commit": "0245b84d2843f82e333352f068876d13fa19db34", "Url": "https://api.github.com/repos/oktayayr/advancedtextview", "Date": "2016-06-01T17:07:15Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getChildAt(1)) == null) { addView(expandView); }else { android.widget.TextView orgExpandView = getExpandView(); orgExpandView.setText(expandView.getText()); orgExpandView.setTextSize(TypedValue.COMPLEX_UNIT_PX, expandView.getTextSize()); orgExpandView.setTextColor(expandView.getCurrentTextColor()); ayar.oktay.advancedtextview.MarginLayoutParams layoutParams = ((ayar.oktay.advancedtextview.MarginLayoutParams) (expandView.getLayoutParams())); ayar.oktay.advancedtextview.MarginLayoutParams orgLayoutParams = ((ayar.oktay.advancedtextview.MarginLayoutParams) (orgExpandView.getLayoutParams())); orgLayoutParams.leftMargin = layoutParams.leftMargin; orgLayoutParams.rightMargin = layoutParams.rightMargin; orgLayoutParams.topMargin = layoutParams.topMargin; orgLayoutParams.bottomMargin = layoutParams.bottomMargin; orgExpandView.setGravity(expandView.getGravity()); orgExpandView.setEllipsize(expandView.getEllipsize()); orgExpandView.setVisibility(ayar.oktay.advancedtextview.VISIBLE); orgExpandView.requestLayout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8867/buggy-version/src.main.java.ayar.oktay.advancedtextview.ExpandableTextLayout.java", "BodyUseAPI": [], "Fixed commit": "0245b84d2843f82e333352f068876d13fa19db34", "Url": "https://api.github.com/repos/oktayayr/advancedtextview", "Date": "2016-06-01T17:07:15Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (className == null) { throw new java.lang.IllegalArgumentException(\"Json string must contain \\\"class\\\" key.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/4046/buggy-version/src.main.java.com.kfuntak.gwt.json.serialization.client.Serializer.java", "BodyUseAPI": [], "Fixed commit": "cb46bf12e0191b2ee80f0112c2a7a8d41f606d77", "Url": "https://api.github.com/repos/ubiquitousthey/gwtprojsonserializer", "Date": "2012-05-31T20:24:05Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(itsMyAddress(decodedLine))) { if (!(isMyNeighbor(decodedLine.getIp_saida()))) { decodedLine.setMetrica(((decodedLine.getMetrica()) + 1)); } tabelaRoteamento.add(decodedLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1457/buggy-version/src.roteador.TabelaRoteamento.java", "BodyUseAPI": ["roteador.Tabela.getMetrica()", "roteador.TabelaRoteamento.isMyNeighbor(decodedLine.getIp_saida())", "java.util.ArrayList<roteador.Tabela>.add(roteador.Tabela)", "roteador.Tabela.setMetrica(((decodedLine.getMetrica()) + 1))", "roteador.Tabela.getIp_saida()"], "Fixed commit": "ec62dd9578c006dea300a662dbc957d139ed1782", "Url": "https://api.github.com/repos/saulool/T2-redes", "Date": "2017-05-20T23:53:48Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.futurepages.util.Is.empty(field))) { sb.append(field.toString()).append(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/848/buggy-version/src.org.futurepages.core.persistence.HQLProvider.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "9305db461d3be6b4887dba2d0d15ef09a8cbf791", "Url": "https://api.github.com/repos/futurepages/4", "Date": "2017-03-14T05:22:54Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.andylizi.gobang.Room.checkOpen(player2)) player2.close(net.andylizi.gobang.Room.NORMAL_CLOSE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1349/buggy-version/src.main.java.net.andylizi.gobang.Room.java", "BodyUseAPI": ["net.andylizi.gobang.User.close(javax.websocket.CloseReason)"], "Fixed commit": "9e47972ea4ad1df989161ade69e71bdff8033126", "Url": "https://api.github.com/repos/andylizi/Gobang", "Date": "2016-04-20T08:54:10Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.andylizi.gobang.Room.checkOpen(player1)) player1.close(net.andylizi.gobang.Room.NORMAL_CLOSE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/1349/buggy-version/src.main.java.net.andylizi.gobang.Room.java", "BodyUseAPI": ["net.andylizi.gobang.User.close(javax.websocket.CloseReason)"], "Fixed commit": "9e47972ea4ad1df989161ade69e71bdff8033126", "Url": "https://api.github.com/repos/andylizi/Gobang", "Date": "2016-04-20T08:54:10Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!isExtendsOnClassNameLine) && (!isImplementsOnClassNameLine)) { msg = \"\\\"extends\\\" and \\\"implements\\\" keywords\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/802/buggy-version/php-checks.src.main.java.org.sonar.php.checks.formatting.ExtendsImplementsLineCheck.java", "BodyUseAPI": [], "Fixed commit": "89d69a847e7e90066fc2329f883cff4306aed0d9", "Url": "https://api.github.com/repos/lindamartin/sonar-php", "Date": "2015-10-19T09:30:44Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(source.getAbsolutePath().substring(((source.getAbsolutePath().lastIndexOf(\".\")) + 1)).equals(\"json\"))) FileIndexList.add(new syncure.core.MetaFileObject(source.getAbsolutePath(), time));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/8838/buggy-version/src.syncure.core.MetaData.java", "BodyUseAPI": ["java.util.ArrayList<syncure.core.MetaFileObject>.add(syncure.core.MetaFileObject)", "java.io.File.getAbsolutePath()"], "Fixed commit": "64b6a40bfadc97a7b2b793c0cdc3da43ca551042", "Url": "https://api.github.com/repos/JobiProGrammer/SynCure", "Date": "2017-04-29T20:52:02Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["enterbox.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(title.equals(\"\"))) { addItem(title, 0); enterbox.setText(\"\"); android.widget.Toast.makeText(getApplicationContext(), \"Added!\", Toast.LENGTH_SHORT).show(); com.example.hellvox.kappetijnmathijspset4.MainActivity.updateData(); com.example.hellvox.kappetijnmathijspset4.MainActivity.hideSoftKeyboard(this); }else android.widget.Toast.makeText(getApplicationContext(), \"Nothing to add!\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/725/buggy-version/app.src.main.java.com.example.hellvox.kappetijnmathijspset4.MainActivity.java", "BodyUseAPI": ["com.example.hellvox.kappetijnmathijspset4.MainActivity.add.addItem(java.lang.String,int)"], "Fixed commit": "7dfcdf51ddeac49060e8d2ed3a7f8b6b67da10cc", "Url": "https://api.github.com/repos/hellvox/KappetijnMathijspset4", "Date": "2017-11-21T14:37:39Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stopwatch.isRunning()) { stopwatch.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V77/3899/buggy-version/core.src.main.java.io.grpc.internal.ResettableTimer.java", "BodyUseAPI": ["com.google.common.base.Stopwatch.stop()"], "Fixed commit": "300a1ddce6a3dd85afb91ee7c7fdf36c16e6450f", "Url": "https://api.github.com/repos/zhangkun83/grpc-java", "Date": "2016-07-01T06:20:01Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3793/buggy-version/core.src.main.java.org.apache.carbondata.core.util.DataTypeUtil.java", "BodyUseAPI": [], "Fixed commit": "aff201487f84cb3965438cf4cc5c6a3b729b785b", "Url": "https://api.github.com/repos/mohammadshahidkhan/incubator-carbondata", "Date": "2017-06-22T10:03:17Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(artifactPath.contains(\"/maven-metadata.\"))) { org.apache.maven.artifact.Artifact artifact = org.carlspring.maven.commons.util.ArtifactUtils.convertPathToArtifact(artifactPath); org.carlspring.strongbox.annotations.ArtifactResourceMapper.addResource(org.carlspring.strongbox.annotations.ArtifactResourceMapper.getArtifactResourceInstance(repository, artifact, 10000L, ArtifactExistenceState.EXISTS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5371/buggy-version/strongbox-storage.src.main.java.org.carlspring.strongbox.storage.resolvers.InMemoryLocationResolver.java", "BodyUseAPI": ["org.carlspring.maven.commons.util.ArtifactUtils.convertPathToArtifact(java.lang.String)"], "Fixed commit": "70fae1121d345d27766420a85615066543cec535", "Url": "https://api.github.com/repos/strongbox/strongbox", "Date": "2014-03-15T00:32:40Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentRoutine) != null) { this.currentRoutine.execute(map); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5228/buggy-version/src.com.gmail.jakekinsella.robot.routines.RoutineController.java", "BodyUseAPI": [], "Fixed commit": "dc70dbdec3b1dea0bc94e483b67d15e3f4ea41fc", "Url": "https://api.github.com/repos/TheLocust3/FRC-AI-Engine", "Date": "2017-04-11T13:40:42Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.firstTime) { this.robotControl.gotoLocation(100, 100, map); this.firstTime = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5228/buggy-version/src.com.gmail.jakekinsella.robot.routines.socket.PickupGearFromStationSocketRoutine.java", "BodyUseAPI": [], "Fixed commit": "dc70dbdec3b1dea0bc94e483b67d15e3f4ea41fc", "Url": "https://api.github.com/repos/TheLocust3/FRC-AI-Engine", "Date": "2017-04-11T13:40:42Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentRoute) != null) { makeUseOfLocation(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6969/buggy-version/src.com.romu.app.RomuService.java", "BodyUseAPI": [], "Fixed commit": "47c27db5f9c0d50f6437c761036ffc38a723291c", "Url": "https://api.github.com/repos/shawnLeeZX/romu", "Date": "2014-06-03T01:04:53Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (likeRequest.isLike()) currentLine.setNbLikes(((currentLine.getNbLikes()) + 1)); else currentLine.setNbLikes(((currentLine.getNbLikes()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6090/buggy-version/Project.tisseoVelibService.src.main.java.iaws.ws.AvailableBikesEndpoint.java", "BodyUseAPI": [], "Fixed commit": "61af446b830c82fa50e1db8b2ea8f3854aa3fbf0", "Url": "https://api.github.com/repos/Metabolic24/IAWS_Project", "Date": "2014-04-10T19:03:22Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) { getConfig().options().copyDefaults(true); saveConfig(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8120/buggy-version/src.main.java.com.github.ucchyocean.es.EbitiriSign.java", "BodyUseAPI": [], "Fixed commit": "be3da3662e780e655084353cc07f046c776c379b", "Url": "https://api.github.com/repos/ucchyocean/EbitiriSign", "Date": "2013-02-21T14:26:34Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.retartsoft.lemon.wordmemorizer.Fragments.FragmentCardlist.CardAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((c.getWords()) != null) { counter.setText(java.lang.Integer.toString(c.getWords().size())); }else { counter.setText(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3924/buggy-version/app.src.main.java.com.retartsoft.lemon.wordmemorizer.Fragments.FragmentCardlist.java", "BodyUseAPI": ["com.retartsoft.lemon.wordmemorizer.Card.getWords()", "android.widget.TextView.setText(java.lang.String)", "c.getWords().size()", "java.lang.Integer.toString(c.getWords().size())"], "Fixed commit": "d6bf10ab4ac3ad420823d840ffb991f41a9a25ca", "Url": "https://api.github.com/repos/Lemon113/Word-Memorizer", "Date": "2017-08-21T08:54:56Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cachedUsers) != null) cachedUsers.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7517/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.security.OSecurityShared.java", "BodyUseAPI": [], "Fixed commit": "be0e62bcdbcf91f7d23c0e309b2941516d2b1f5f", "Url": "https://api.github.com/repos/paynechu/orientdb", "Date": "2014-05-16T15:47:46Z"},
{"Line": "=>424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cachedRoles) != null) cachedRoles.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7517/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.security.OSecurityShared.java", "BodyUseAPI": [], "Fixed commit": "be0e62bcdbcf91f7d23c0e309b2941516d2b1f5f", "Url": "https://api.github.com/repos/paynechu/orientdb", "Date": "2014-05-16T15:47:46Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.isDirectory()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7506/buggy-version/mddf-tools.src.com.movielabs.mddf.tools.ValidationController.java", "BodyUseAPI": [], "Fixed commit": "63d873f5e6f1246448ed66c3fd34757160067d07", "Url": "https://api.github.com/repos/MovieLabs/mddf", "Date": "2017-10-23T19:10:35Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((world.getBlock((x + 2), y, z)) == (com.M4thG33k.m4ththings.init.ModBlocks.blockMedQTController)) || ((world.getBlock(x, y, (z + 2))) == (com.M4thG33k.m4ththings.init.ModBlocks.blockMedQTController))) || (((y + 2) < (world.getActualHeight())) && ((world.getBlock(x, (y + 2), z)) == (com.M4thG33k.m4ththings.init.ModBlocks.blockMedQTController)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8499/buggy-version/src.main.java.com.M4thG33k.m4ththings.tiles.TileMedQT.java", "BodyUseAPI": [], "Fixed commit": "ff36ef650c484301125245e779b1601c22c6ea52", "Url": "https://api.github.com/repos/M4thG33k/M4thThings", "Date": "2015-06-29T03:24:07Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((y + 8) < (world.getActualHeight())) && ((world.getBlock(x, (y + 8), z)) == (com.M4thG33k.m4ththings.init.ModBlocks.blockMedQTController))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8499/buggy-version/src.main.java.com.M4thG33k.m4ththings.tiles.TileLargeQT.java", "BodyUseAPI": [], "Fixed commit": "ff36ef650c484301125245e779b1601c22c6ea52", "Url": "https://api.github.com/repos/M4thG33k/M4thThings", "Date": "2015-06-29T03:24:07Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ibm.wala.classLoader.CallSiteReference.getDeclaredTarget()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((target.getNumberOfParameters()) == 0) { return com.ibm.wala.util.intset.IntSetUtil.make(new int[]{ 0 }); }else { return com.ibm.wala.util.intset.IntSetUtil.make(new int[]{ 0, 1 }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1646/buggy-version/com.ibm.wala.dalvik.src.com.ibm.wala.dalvik.ipa.callgraph.propagation.cfa.IntentContextSelector.java", "BodyUseAPI": [], "Fixed commit": "061e8191f8ce73ea9395f9e32933d4ba289a312e", "Url": "https://api.github.com/repos/jgf/wala-mirror", "Date": "2014-11-21T16:24:36Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (con.getConceptName().isLocalePreferred()) names.add(con.getConcept());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4400/buggy-version/omod.src.main.java.org.openmrs.module.drugorders.fragment.controller.CreateSingleDrugOrderFragmentController.java", "BodyUseAPI": ["org.openmrs.ConceptSearchResult.getConcept()", "java.util.List<org.openmrs.Concept>.add(con.getConcept())"], "Fixed commit": "d1e63e3a5584271ae178ee9952633944b05bd8e0", "Url": "https://api.github.com/repos/HariniParth/OpenMRS-DrugOrders-Pharmacy", "Date": "2017-05-27T17:14:26Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (con.getConceptName().isLocalePreferred()) names.add(con.getConcept());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4400/buggy-version/omod.src.main.java.org.openmrs.module.drugorders.fragment.controller.CreateSingleDrugOrderFragmentController.java", "BodyUseAPI": ["org.openmrs.ConceptSearchResult.getConcept()", "java.util.List<org.openmrs.Concept>.add(con.getConcept())"], "Fixed commit": "d1e63e3a5584271ae178ee9952633944b05bd8e0", "Url": "https://api.github.com/repos/HariniParth/OpenMRS-DrugOrders-Pharmacy", "Date": "2017-05-27T17:14:26Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (con.getConceptName().isLocalePreferred()) names.add(con.getConcept());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4400/buggy-version/omod.src.main.java.org.openmrs.module.drugorders.fragment.controller.AdministrationActionsFragmentController.java", "BodyUseAPI": ["org.openmrs.ConceptSearchResult.getConcept()", "java.util.List<org.openmrs.Concept>.add(con.getConcept())"], "Fixed commit": "d1e63e3a5584271ae178ee9952633944b05bd8e0", "Url": "https://api.github.com/repos/HariniParth/OpenMRS-DrugOrders-Pharmacy", "Date": "2017-05-27T17:14:26Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (con.getConceptName().isLocalePreferred()) names.add(con.getConcept());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4400/buggy-version/omod.src.main.java.org.openmrs.module.drugorders.fragment.controller.AdministrationActionsFragmentController.java", "BodyUseAPI": ["org.openmrs.ConceptSearchResult.getConcept()", "java.util.List<org.openmrs.Concept>.add(con.getConcept())"], "Fixed commit": "d1e63e3a5584271ae178ee9952633944b05bd8e0", "Url": "https://api.github.com/repos/HariniParth/OpenMRS-DrugOrders-Pharmacy", "Date": "2017-05-27T17:14:26Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.ConnectivityManager.getActiveNetworkInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (ni == null) { android.widget.Toast.makeText(this, \"No connection to internet detected\", Toast.LENGTH_SHORT).show(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/878/buggy-version/app.src.main.java.com.doctorandonuts.taskchampion.TaskListActivity.java", "BodyUseAPI": [], "Fixed commit": "f167cb613c663d8a2dac1d19b0706bb1431c6282", "Url": "https://api.github.com/repos/Doctor-Andonuts/TaskChampion", "Date": "2015-09-17T02:32:41Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (players.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1258/buggy-version/src.main.Game.java", "BodyUseAPI": [], "Fixed commit": "e065a7c61e02c7e589f34ffb162182e944d4a8b4", "Url": "https://api.github.com/repos/wildeelli/Swen222-Assignment-1", "Date": "2014-08-17T08:36:26Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (players.isEmpty()) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1258/buggy-version/src.main.Game.java", "BodyUseAPI": [], "Fixed commit": "e065a7c61e02c7e589f34ffb162182e944d4a8b4", "Url": "https://api.github.com/repos/wildeelli/Swen222-Assignment-1", "Date": "2014-08-17T08:36:26Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (players.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1258/buggy-version/src.main.Game.java", "BodyUseAPI": [], "Fixed commit": "e065a7c61e02c7e589f34ffb162182e944d4a8b4", "Url": "https://api.github.com/repos/wildeelli/Swen222-Assignment-1", "Date": "2014-08-17T08:36:26Z"},
{"Line": "=>699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (network != null) storage.connectionManager.release(network);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5646/buggy-version/client.src.main.java.com.orientechnologies.orient.client.remote.OServerAdmin.java", "BodyUseAPI": ["storage.connectionManager.release(com.orientechnologies.orient.client.binary.OChannelBinaryAsynchClient)"], "Fixed commit": "df6e56255e46bac7d43adc4b97fa59323072894e", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-06-21T10:15:46Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (target == null) { throw new org.zkoss.zk.ui.ComponentNotFoundException((\"EL evaluated to null: \" + path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3392/buggy-version/zk.src.org.zkoss.zk.ui.sys.ComponentsCtrl.java", "BodyUseAPI": [], "Fixed commit": "ce69ed2c5468386c1d776308e9ba8cbfcd82a63e", "Url": "https://api.github.com/repos/chunfuchang/zk", "Date": "2015-05-18T08:23:40Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paused) { pausedSeconds = getSecondsLeft(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4812/buggy-version/src.com.alex.alexfirstapp.logic.TimerLogic.java", "BodyUseAPI": [], "Fixed commit": "8bfdc1ac252cf9c48e3b2e7ee5054bb899446c7e", "Url": "https://api.github.com/repos/alexkrause/boxing-timer", "Date": "2014-05-07T19:57:02Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((findPreference(com.android.phone.settings.VoicemailSettingsActivity.BUTTON_VOICEMAIL_KEY)) != null) && ((mSubMenuVoicemailSettings) != null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3821/buggy-version/src.com.android.phone.settings.VoicemailSettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "5731a8bafe0c5cae6e37f517be413bab37be6f5d", "Url": "https://api.github.com/repos/BlissRoms/platform_packages_services_Telephony", "Date": "2016-07-28T00:09:43Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSubMenuVoicemailSettings) == null) { android.preference.PreferenceScreen preferenceScreen = getPreferenceScreen(); if (preferenceScreen != null) { preferenceScreen.removeAll(); } addPreferencesFromResource(R.xml.voicemail_settings); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3821/buggy-version/src.com.android.phone.settings.VoicemailSettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "5731a8bafe0c5cae6e37f517be413bab37be6f5d", "Url": "https://api.github.com/repos/BlissRoms/platform_packages_services_Telephony", "Date": "2016-07-28T00:09:43Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((preview == null) || (!(preview.isAttachedToCameraView()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6079/buggy-version/library.src.main.java.org.mariotaku.simplecamera.CameraView.java", "BodyUseAPI": [], "Fixed commit": "478eb760a4fbeba606d7c9f6d3bbf8177ed8dfb7", "Url": "https://api.github.com/repos/mariotaku/SimpleCameraLibrary", "Date": "2014-09-15T13:38:18Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (groups.remove(prevId)) { groups.add(newId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8876/buggy-version/app.src.main.java.us.paskin.mastery.Model.java", "BodyUseAPI": ["java.util.HashSet<java.lang.Long>.add(long)"], "Fixed commit": "bfbca00d7328d0e615bc907d5580ef30332e2b6f", "Url": "https://api.github.com/repos/markpaskin/mastery", "Date": "2016-08-13T01:48:24Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parents.remove(prevId)) { parents.add(newId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8876/buggy-version/app.src.main.java.us.paskin.mastery.Model.java", "BodyUseAPI": ["java.util.HashSet<java.lang.Long>.add(long)"], "Fixed commit": "bfbca00d7328d0e615bc907d5580ef30332e2b6f", "Url": "https://api.github.com/repos/markpaskin/mastery", "Date": "2016-08-13T01:48:24Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7694/buggy-version/src.server.world.entity.player.bot.Bot.java", "BodyUseAPI": [], "Fixed commit": "7246b4a565d41a7f9c8ff41c6598d6de31921432", "Url": "https://api.github.com/repos/lare96/asteria-2.0", "Date": "2014-06-22T09:02:39Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((content.length()) <= 38) { setIntroduction(content); }else setIntroduction(((content.substring(0, 38)) + \"...\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/382/buggy-version/app.src.main.java.com.java.a31.androidappproject.models.NewsDetail.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "com.java.a31.androidappproject.models.NewsDetail.setIntroduction(java.lang.String)", "com.java.a31.androidappproject.models.NewsDetail.setIntroduction(java.lang.String)"], "Fixed commit": "2ab81f8d227ceb25b78cfa1196cea539e58ffc9d", "Url": "https://api.github.com/repos/AmadeusChan/AndroidAppProject", "Date": "2017-09-10T15:11:40Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lazyStart) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1984/buggy-version/src.freenet.node.RequestStarter.java", "BodyUseAPI": [], "Fixed commit": "d5edbf7ed5734834a4568c68fa1290b173dd632b", "Url": "https://api.github.com/repos/toad/fred-staging", "Date": "2016-03-25T22:41:42Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cr.getHttpHeaders().getFirst(HttpHeaders.CONTENT_TYPE)) != null) { m = cr.getHttpHeaders().getFirst(HttpHeaders.CONTENT_TYPE).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2357/buggy-version/modules.jersey.src.main.java.org.atmosphere.jersey.util.JerseyBroadcasterUtil.java", "BodyUseAPI": ["com.sun.jersey.spi.container.ContainerResponse.getHttpHeaders()", "cr.getHttpHeaders().getFirst(HttpHeaders.CONTENT_TYPE)", "cr.getHttpHeaders().getFirst(HttpHeaders.CONTENT_TYPE).toString()"], "Fixed commit": "25f2eb02366dd8a5c9a2edbeb0fc8781a1841f58", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2012-06-26T23:03:00Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.recentlyOpened.contains(folder)) == true) { this.recentlyOpened.removeElement(folder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8946/buggy-version/src.com.pwoodward.projectsearch.frmMain.java", "BodyUseAPI": ["javax.swing.DefaultListModel.removeElement(com.pwoodward.projectsearch.frmMain.Directory)"], "Fixed commit": "c8dc3004cd09cbaeae8b1a86238e3131b2e97d0e", "Url": "https://api.github.com/repos/paulwoody/ProjectSearch", "Date": "2014-12-05T16:36:09Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((preLoadedFields) != null) && ((preLoadedFields.size()) == 1)) { if (\"@rid\".equalsIgnoreCase(preLoadedFields.iterator().next())) return iRecord.getIdentity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2658/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.filter.OSQLFilterItemField.java", "BodyUseAPI": ["java.util.Iterator<java.lang.String>.next()", "java.util.Set<java.lang.String>.iterator()", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "7d556b795954d8ca480bbba86650a8c2d7808814", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2016-05-20T11:01:51Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listFinalTouchedView) != null) { listFinalTouchedView.setBackgroundColor(getResources().getColor(R.color.white)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5822/buggy-version/app.src.main.java.com.nodegrid.android.app.activities.NavDrawerActivity.java", "BodyUseAPI": [], "Fixed commit": "b4604c84c4247eaf87fcdc8a766c6b4ede6ad4cd", "Url": "https://api.github.com/repos/NodeGrid/nodegrid-android-sdk", "Date": "2015-05-19T13:54:18Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((penalty.getAdmin()) != null) st.setLong(2, penalty.getAdmin()); else st.setNull(2, java.sql.Types.INTEGER);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7845/buggy-version/iddb-db-runtime.src.main.java.iddb.runtime.db.model.dao.impl.mysql.PenaltyDAOImpl.java", "BodyUseAPI": ["iddb.core.model.Penalty.getAdmin()", "java.sql.PreparedStatement.setLong(int,penalty.getAdmin())"], "Fixed commit": "295705bc9dfd36e2fca394c2d67f1e794989aa11", "Url": "https://api.github.com/repos/codwar/ipdburt", "Date": "2011-10-12T13:28:11Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((penalty.getReason()) != null) st.setString(4, penalty.getReason()); else st.setNull(4, java.sql.Types.VARCHAR);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7845/buggy-version/iddb-db-runtime.src.main.java.iddb.runtime.db.model.dao.impl.mysql.PenaltyDAOImpl.java", "BodyUseAPI": ["java.sql.PreparedStatement.setString(int,penalty.getReason())", "iddb.core.model.Penalty.getReason()"], "Fixed commit": "295705bc9dfd36e2fca394c2d67f1e794989aa11", "Url": "https://api.github.com/repos/codwar/ipdburt", "Date": "2011-10-12T13:28:11Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (columns.equals(\"*\")) { cols = cols2[0]; }else if (columns.contains(\",\")) { cols = cols2[1]; }else if (columns.contains(\"PRODNAME\")) { cols = cols2[2]; }else { cols = cols2[3]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6070/buggy-version/304GUI.src.GUI.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "51ef82ca0c8ebe696aabfddda4c7c4794a37d411", "Url": "https://api.github.com/repos/scottluu/CPSC304Project", "Date": "2017-03-31T08:33:18Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.dialog.isOpen())) { game.activateCamera(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1605/buggy-version/src.seventh.client.screens.InGameScreen.java", "BodyUseAPI": [], "Fixed commit": "261b8ab005970ba142c848ebc3beed5ed0b800bd", "Url": "https://api.github.com/repos/tonysparks/seventh", "Date": "2017-03-21T00:25:26Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCamera) == null) { android.widget.Toast.makeText(this, \"Camera Unavailable\", Toast.LENGTH_SHORT).show(); setResult(Activity.RESULT_CANCELED); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8587/buggy-version/app.src.main.java.com.example.jharshman.event.ScanActivity.java", "BodyUseAPI": [], "Fixed commit": "5cab1603221b97428a03565392c45f42405a623e", "Url": "https://api.github.com/repos/cscd-488/event-app", "Date": "2016-02-01T17:10:57Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scaledX - (downX)) > (com.Ben.framework.util.InputHandler.BOUND)) { return currentState.onTouch(com.Ben.framework.util.InputHandler.SWIPE_RIGHT, scaledX, scaledY); }else if ((scaledX - (downX)) < (-(com.Ben.framework.util.InputHandler.BOUND))) { return currentState.onTouch(com.Ben.framework.util.InputHandler.SWIPE_LEFT, scaledX, scaledY); }else if ((scaledY - (downY)) > (com.Ben.framework.util.InputHandler.BOUND)) { return currentState.onTouch(com.Ben.framework.util.InputHandler.SWIPE_DOWN, scaledX, scaledY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6588/buggy-version/app.src.main.java.com.Ben.framework.util.InputHandler.java", "BodyUseAPI": ["com.Ben.game.state.State.onTouch(int,int,int)", "com.Ben.game.state.State.onTouch(int,int,int)", "com.Ben.game.state.State.onTouch(int,int,int)"], "Fixed commit": "3df9842111f9f0f991b29cfa9a6386bed24419f8", "Url": "https://api.github.com/repos/brueda/Bolt-Squadron", "Date": "2015-08-21T14:02:52Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedShip) != null) { doMove(selectedShip.getTile(), pressed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6588/buggy-version/app.src.main.java.com.Ben.game.state.MovementState.java", "BodyUseAPI": [], "Fixed commit": "3df9842111f9f0f991b29cfa9a6386bed24419f8", "Url": "https://api.github.com/repos/brueda/Bolt-Squadron", "Date": "2015-08-21T14:02:52Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.plugins.coverity.analysis.CIMStream.getDefectFilters()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((defectFilter.getCutOffDate()) != null) { filter.setFirstDetectedStartDate(defectFilter.getXMLCutOffDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5485/buggy-version/src.main.java.jenkins.plugins.coverity.analysis.CoverityToolHandler.java", "BodyUseAPI": ["jenkins.plugins.coverity.analysis.MergedDefectFilterSpecDataObj.setFirstDetectedStartDate(defectFilter.getXMLCutOffDate())", "jenkins.plugins.coverity.analysis.DefectFilters.getXMLCutOffDate()"], "Fixed commit": "b45ac274e29b40bd0d89885da971fc7c7fdf59f0", "Url": "https://api.github.com/repos/jenkinsci/coverity-plugin", "Date": "2014-07-16T21:53:07Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.getObject()) == null) { net.hawkengine.ws.SessionPool.getInstance().sendToUserSessions(contract, this.loggedUser); }else { net.hawkengine.ws.SessionPool.getInstance().sendToAuthorizedSessions(contract); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2368/buggy-version/Server.src.main.java.net.hawkengine.ws.WsEndpoint.java", "BodyUseAPI": [], "Fixed commit": "74260be2367fc87d0263f4f097b316a281f04684", "Url": "https://api.github.com/repos/rndsolutions/hawkcd", "Date": "2016-08-19T06:39:57Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (depth == 0) { molecule.addEntity(relationship.getEntity1()); visited.add(relationship.getEntity1().getId()); }else { populateMolecule(relationship.getEntity1().getId(), depth, visited, molecule); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3608/buggy-version/Music-Crux-App.src.main.java.application.api.service.MoleculeService.java", "BodyUseAPI": ["application.api.service.MoleculeService.populateMolecule(relationship.getEntity1().getId(),int,java.util.HashSet<java.lang.String>,application.api.models.db.Molecule)"], "Fixed commit": "e7a2a2cfe27201d1884c7b18bb5c10f1e2075c80", "Url": "https://api.github.com/repos/WorTech/Music-Crux", "Date": "2017-11-29T19:18:02Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (depth == 0) { molecule.addEntity(relationship.getEntity2()); visited.add(relationship.getEntity2().getId()); }else { populateMolecule(relationship.getEntity2().getId(), depth, visited, molecule); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3608/buggy-version/Music-Crux-App.src.main.java.application.api.service.MoleculeService.java", "BodyUseAPI": ["application.api.service.MoleculeService.populateMolecule(relationship.getEntity2().getId(),int,java.util.HashSet<java.lang.String>,application.api.models.db.Molecule)"], "Fixed commit": "e7a2a2cfe27201d1884c7b18bb5c10f1e2075c80", "Url": "https://api.github.com/repos/WorTech/Music-Crux", "Date": "2017-11-29T19:18:02Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) < (Build.VERSION_CODES.M)) { app.media.opp.partytonight.presentation.PartyTonightApplication.buildPayPalClient(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7935/buggy-version/app.src.main.java.app.media.opp.partytonight.presentation.activities.GoerCartActivity.java", "BodyUseAPI": [], "Fixed commit": "dd62cc1715b011ccc77213aaac7fc0316c0367f0", "Url": "https://api.github.com/repos/st1ch/Party-Tonight-Android", "Date": "2017-03-27T10:43:02Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((doc.field(\"user\")) instanceof com.orientechnologies.orient.core.record.impl.ODocument) { com.orientechnologies.orient.core.type.tree.OMVRBTreeRIDSet roles = ((com.orientechnologies.orient.core.record.impl.ODocument) (doc.field(\"user\"))).field(\"roles\"); if ((roles.size()) > 1) { java.util.Iterator<com.orientechnologies.orient.core.db.record.OIdentifiable> it = roles.iterator(); while (it.hasNext()) { if (((com.orientechnologies.orient.core.record.impl.ODocument) (it.next().getRecord())).field(\"name\").toString().startsWith(FriendShipService.FRIEND_ROLE_NAME)) { it.remove(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3926/buggy-version/app.com.baasbox.controllers.User.java", "BodyUseAPI": ["((com.orientechnologies.orient.core.record.impl.ODocument) (doc.field(\"user\"))).field(java.lang.String)", "com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String)"], "Fixed commit": "29e42dad6cdc889984fdb254dc3eb3a941083917", "Url": "https://api.github.com/repos/snoodlupa/baasbox", "Date": "2014-10-15T08:10:32Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (basePath.endsWith(\"/\")) { this.basePath = basePath.substring(0, ((basePath.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8140/buggy-version/ckanalyze-client.src.main.java.eu.trentorise.opendata.ckanalyze.client.CkanalyzeClient.java", "BodyUseAPI": [], "Fixed commit": "6de419f1d945cc832a000455be6f855a9b0cbabb", "Url": "https://api.github.com/repos/opendatatrentino/CKANalyze", "Date": "2013-11-11T09:28:10Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ret == 0) { ret = (id) - (o.id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4228/buggy-version/src.edu.cwru.sepia.agent.planner.Resource.java", "BodyUseAPI": [], "Fixed commit": "b9b58aa6860eb9305101c3ba1de401b7edf65e1d", "Url": "https://api.github.com/repos/ZJaffee/HW3", "Date": "2015-04-05T22:58:29Z"},
{"Line": "=>774", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((int) ((java.lang.Math.abs(((newDE.getEndTime().getTime().getTime()) - (newDE.getStartTime().getTime().getTime())))) / (1000 * 60))) >= 30) EventListHandler.dynamicList.addEvent(newDE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3932/buggy-version/Algorithm.CalenderSort.src.EventListHandler.java", "BodyUseAPI": ["DynamicEventList.addEvent(DynamicEvent)"], "Fixed commit": "d959bb972254b3d067f28f81f7b90ff18e15ce6f", "Url": "https://api.github.com/repos/ucsdCSE110wi16/CSE110W240T9", "Date": "2016-03-07T17:07:28Z"},
{"Line": "=>752", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((int) ((java.lang.Math.abs(((newDE.getEndTime().getTime().getTime()) - (newDE.getStartTime().getTime().getTime())))) / (1000 * 60))) >= 30) EventListHandler.dynamicList.addEvent(newDE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3932/buggy-version/Algorithm.CalenderSort.src.EventListHandler.java", "BodyUseAPI": ["DynamicEventList.addEvent(DynamicEvent)"], "Fixed commit": "d959bb972254b3d067f28f81f7b90ff18e15ce6f", "Url": "https://api.github.com/repos/ucsdCSE110wi16/CSE110W240T9", "Date": "2016-03-07T17:07:28Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((int) ((java.lang.Math.abs(((newDE.getEndTime().getTime().getTime()) - (newDE.getStartTime().getTime().getTime())))) / (1000 * 60))) >= 30) EventListHandler.dynamicList.addEvent(newDE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3932/buggy-version/Algorithm.CalenderSort.src.EventListHandler.java", "BodyUseAPI": ["DynamicEventList.addEvent(DynamicEvent)"], "Fixed commit": "d959bb972254b3d067f28f81f7b90ff18e15ce6f", "Url": "https://api.github.com/repos/ucsdCSE110wi16/CSE110W240T9", "Date": "2016-03-07T17:07:28Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((temp != null) && (!(temp.isEmpty()))) { for (java.lang.String arg : temp.split(\",\")) argsBuffer.append(edu.columbia.cs.psl.phosphor.TaintUtils.processType(arg.trim())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4372/buggy-version/Phosphor.src.edu.columbia.cs.psl.phosphor.TaintUtils.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "24758c3dba8291d439fe792da608bcb97ea54f70", "Url": "https://api.github.com/repos/ManojRThakur/phosphor", "Date": "2015-02-14T03:01:06Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playlist) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8282/buggy-version/app.src.main.java.bob.sun.bender.service.PlayerService.java", "BodyUseAPI": [], "Fixed commit": "83f3e9bf98fd1f44a50edc5b52660dca8cfab724", "Url": "https://api.github.com/repos/SpongeBobSun/Prodigal", "Date": "2017-02-15T09:55:27Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mImageWidth) != 0) && ((mImageHeight) != 0)) { inputTexture.setDefaultBufferSize(mImageWidth, mImageHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7903/buggy-version/library.src.jp.co.cyberagent.android.gpuimage.GPUImageTextureRenderer.java", "BodyUseAPI": [], "Fixed commit": "df010448c29f30f943a8dbbd23b285abe2a6e74e", "Url": "https://api.github.com/repos/skonb/android-gpuimage", "Date": "2016-03-12T19:13:45Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inputTexture) != null) { inputTexture.setDefaultBufferSize(mImageWidth, mImageHeight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7903/buggy-version/library.src.jp.co.cyberagent.android.gpuimage.GPUImageTextureRenderer.java", "BodyUseAPI": [], "Fixed commit": "df010448c29f30f943a8dbbd23b285abe2a6e74e", "Url": "https://api.github.com/repos/skonb/android-gpuimage", "Date": "2016-03-12T19:13:45Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (stream != null) { stream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5730/buggy-version/src.games.strategy.util.PointFileReaderWriter.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "106275b1c1265af7fe1a441085e809a340572c81", "Url": "https://api.github.com/repos/triplea-game/triplea", "Date": "2016-09-06T05:37:16Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) return language;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8105/buggy-version/integrations.opennms-jasper-extensions.src.main.java.org.opennms.netmgt.jasper.OnmsQueryExecutorFactoryBundle.java", "BodyUseAPI": [], "Fixed commit": "1badf0f1004d6f3be9b166043632eaf67aa54177", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2013-07-17T17:27:14Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((fileName) != null) && (sofia.graphics.Image.bitmapCache.containsKey(fileName))) || (((klass) != null) && (sofia.graphics.Image.bitmapCache.containsKey(klass.getName())))) { alreadyCached = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4016/buggy-version/src.sofia.graphics.Image.java", "BodyUseAPI": [], "Fixed commit": "d22caec494965d035f8bfd96ba9d05a90b9c73e6", "Url": "https://api.github.com/repos/web-cat/sofia-graphics", "Date": "2014-04-10T02:39:38Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (player.worldObj.isRemote) com.newlinegaming.Runix.PhantomTorchRune.activeMagic.add(new com.newlinegaming.Runix.PhantomTorchRune(player, coords));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3422/buggy-version/forge.mcp.src.minecraft.com.newlinegaming.Runix.PhantomTorchRune.java", "BodyUseAPI": ["java.util.ArrayList<com.newlinegaming.Runix.PhantomTorchRune>.add(com.newlinegaming.Runix.PhantomTorchRune)"], "Fixed commit": "ba1aeeddee11fdcf15a716864c0f065a06026410", "Url": "https://api.github.com/repos/Ctri/Runix", "Date": "2013-12-26T16:48:51Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEmojiLayoutShow)) { if ((mOnSoftInputChangeListener) != null) { mOnSoftInputChangeListener.onEmojiLayoutChange(isSoftInputShow, mRawLayoutHeight, keyboardHeight); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1444/buggy-version/rsen.src.main.java.com.rsen.viewgroup.SoftInputLayout.java", "BodyUseAPI": [], "Fixed commit": "998df186beb6f8e275f9409a470a177fa7a96b6e", "Url": "https://api.github.com/repos/angcyo/RJcenter", "Date": "2016-11-21T05:16:36Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (executor.isShutdown()) { throw new java.util.concurrent.RejectedExecutionException(((\"Rejected execution of task [\" + (r.getClass())) + \"] since the executor is shutdown.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5726/buggy-version/core.src.main.java.org.jclouds.concurrent.DynamicThreadPoolExecutor.java", "BodyUseAPI": [], "Fixed commit": "e5063aea12319a795c7a2a133042e723314199c2", "Url": "https://api.github.com/repos/jclouds/jclouds", "Date": "2017-04-21T18:17:02Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (executor.isShutdown()) { throw new java.util.concurrent.RejectedExecutionException(((\"Rejected execution of task [\" + (r.getClass())) + \"] since the executor is shutdown.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5726/buggy-version/core.src.main.java.org.jclouds.concurrent.DynamicThreadPoolExecutor.java", "BodyUseAPI": [], "Fixed commit": "e5063aea12319a795c7a2a133042e723314199c2", "Url": "https://api.github.com/repos/jclouds/jclouds", "Date": "2017-04-21T18:17:02Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(savedInstanceState.getString(\"mDescription\").equals(\"\"))) { mDescription.setBackgroundResource(R.color.colorTextViewBackground); mDescription.setMovementMethod(android.text.method.ScrollingMovementMethod.getInstance()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7112/buggy-version/app.src.main.java.ch.fhnw.ip5.powerconsumptionmanager.view.PlanFragment.java", "BodyUseAPI": [], "Fixed commit": "7e5ac0df1934d3feedc4878ac28b3796d0801043", "Url": "https://api.github.com/repos/mkd99/ip6-PCM", "Date": "2016-01-15T18:39:34Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((row.length()) < (((item.getStart()) - 1) + (item.getLength()))) { v = row.substring(((item.getStart()) - 1)); }else { v = row.substring(((item.getStart()) - 1), (((item.getStart()) - 1) + (item.getLength()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1992/buggy-version/src.cspro2sql.reader.QuestionnaireReader.java", "BodyUseAPI": ["cspro2sql.bean.Item.getLength()", "java.lang.String.substring(((item.getStart()) - 1),(((item.getStart()) - 1) + (item.getLength())))", "java.lang.String.substring(((item.getStart()) - 1))", "cspro2sql.bean.Item.getStart()", "cspro2sql.bean.Item.getStart()", "cspro2sql.bean.Item.getStart()"], "Fixed commit": "6746868f709ee9dd98bdf6374c2a225325add45a", "Url": "https://api.github.com/repos/mauroIstat/CsPro2Sql", "Date": "2017-02-15T10:30:41Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 == (mRequestDelayMs)) { mPaused = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4061/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.sync.EventsThread.java", "BodyUseAPI": [], "Fixed commit": "2c35c187bf7ca55e7cc8035bc06a1f1cad19921c", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2017-06-27T17:05:08Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ContainerType.RAIL.getType()) == (containerAllocation.getType())) { model.addAttribute(\"containerAllocation\", containerAllocationFacade.computeContainerAllocation(taskId)); model.addAttribute(\"alert\", messageSource.getMessage(\"save.success\", new java.lang.String[]{ }, java.util.Locale.CHINA)); return \"allocation/rail_container\"; }else { return (\"redirect:/task/\" + taskId) + \"/allocation\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3701/buggy-version/web-console.src.main.java.liquid.controller.AllocationController.java", "BodyUseAPI": [], "Fixed commit": "20ff46388a3fcbc00aa5c15a4d8ab2881f9caa06", "Url": "https://api.github.com/repos/redbrick9/liquid", "Date": "2014-09-05T01:14:51Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((KeyCount) == 1) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/379/buggy-version/SchPwrOnOff.src.com.khadas.schpwronoff.SetAlarm.java", "BodyUseAPI": [], "Fixed commit": "65e567811c398e3fdb48cc7391cf1de910e9e4bd", "Url": "https://api.github.com/repos/khadas/android_packages_apps_Settings", "Date": "2016-10-22T10:43:23Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((KeyCount) == 1) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/379/buggy-version/SchPwrOnOff.src.com.khadas.schpwronoff.SetAlarm.java", "BodyUseAPI": [], "Fixed commit": "65e567811c398e3fdb48cc7391cf1de910e9e4bd", "Url": "https://api.github.com/repos/khadas/android_packages_apps_Settings", "Date": "2016-10-22T10:43:23Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((latestUndoAction) == null) && ((latestRedoAction) == null)) || ((redoActionMayChange) && ((latestRedoAction) != redoAction))) { latestRedoAction = undoAction; redoActionMayChange = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1568/buggy-version/chibipaint.CPControllerApplication.java", "BodyUseAPI": [], "Fixed commit": "cfc46b82da0cb8c8fcb5a82c3370e37adfd646f1", "Url": "https://api.github.com/repos/Predelnik/ChibiPaintMod", "Date": "2012-10-25T17:07:16Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((latestRedoAction) == redoAction) redoActionMayChange = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1568/buggy-version/chibipaint.CPControllerApplication.java", "BodyUseAPI": [], "Fixed commit": "cfc46b82da0cb8c8fcb5a82c3370e37adfd646f1", "Url": "https://api.github.com/repos/Predelnik/ChibiPaintMod", "Date": "2012-10-25T17:07:16Z"},
{"Line": "=>2261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.util.Map.Entry<java.lang.String, java.lang.String>>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (entry.getValue().contains(\".\")) { tablesAliasesMap.put(entry.getKey(), entry.getValue().split(\"\\\\.\")[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8594/buggy-version/meta-core.src.main.java.com.stratio.meta.core.statements.SelectStatement.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()"], "Fixed commit": "59b8c6c9e1def8b1a25a06c63f53269f4fb83b9d", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-07-15T10:42:02Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getSuperclass()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (parentClass == (javax.net.ssl.HttpsURLConnection.class)) { methodField = parentClass.getSuperclass().getDeclaredField(\"method\"); }else { methodField = parentClass.getDeclaredField(\"method\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1313/buggy-version/core-client.src.main.java.org.glassfish.jersey.client.HttpUrlConnector.java", "BodyUseAPI": ["java.lang.Class<? super ?>.getDeclaredField(java.lang.String)", "java.lang.Class<?>.getSuperclass()", "java.lang.Class<?>.getDeclaredField(java.lang.String)"], "Fixed commit": "8cf02a9e8733ad6ee42941eda85d6d13f7eca830", "Url": "https://api.github.com/repos/kingsfleet/jersey", "Date": "2013-11-19T00:06:24Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((txtSearch.getText().toString()) != null) bindData();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4982/buggy-version/src.com.ngapham.englishlearningkit.DictActivity.java", "BodyUseAPI": [], "Fixed commit": "04190cd0f5948743a9575cb21d1358908871e751", "Url": "https://api.github.com/repos/vinova-summer-school/vss2013-01_mstudy", "Date": "2013-08-26T10:10:54Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<MovieMetaData.PictureItem>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (count > 50) { totalImagesCount = 50; fractionNumber = ((double) (count)) / 50.0; }else { totalImagesCount = count; fractionNumber = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3542/buggy-version/src.com.wb.nextgenlibrary.fragment.ECTurnTableViewFragment.java", "BodyUseAPI": [], "Fixed commit": "78404ecc98dd95dcbf6129d0022dbadd572f9870", "Url": "https://api.github.com/repos/warnerbros/cpe-manifest-android-experience", "Date": "2017-05-02T00:22:23Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.dom.ITypeBinding.getJavaElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (je instanceof org.eclipse.jdt.core.IMethod) { return !(org.eclipse.jdt.core.Flags.isStatic(((org.eclipse.jdt.core.IMethod) (je)).getFlags())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5083/buggy-version/plugin.src.se.arnetheduck.j2c.transform.TransformUtil.java", "BodyUseAPI": [], "Fixed commit": "d46d7a0cc47970bd3ebe9ae96cfb3f21b4023ce9", "Url": "https://api.github.com/repos/arnetheduck/j2c", "Date": "2012-06-26T02:54:23Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sourceFile.exists())) { cz.cuni.mff.xrg.odcs.commons.app.module.DPUModuleManipulator.LOG.error((\"Unable to find dpu: \" + name)); throw new cz.cuni.mff.xrg.odcs.commons.app.module.DPUCreateException((\"Unable to find dpu: \" + name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3305/buggy-version/commons-app.src.main.java.cz.cuni.mff.xrg.odcs.commons.app.module.DPUModuleManipulator.java", "BodyUseAPI": [], "Fixed commit": "1034cb28940c57205403bececda3c09f5f744655", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2014-06-12T13:51:54Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.util.SparseArray<com.ubhave.sensormanager.tasks.Subscription>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (s == null) { android.util.Log.d(com.ubhave.sensormanager.tasks.SubscriptionList.TAG, (\"removeSubscription() invalid subscription id: \" + subscriptionId)); return null; }else { android.util.Log.d(com.ubhave.sensormanager.tasks.SubscriptionList.TAG, (((\"removeSubscription() deleting subscription created for task: \" + (s.getTask().getSensorType())) + \" listener: \") + (s.getListener()))); subscriptionMap.delete(subscriptionId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1919/buggy-version/src.com.ubhave.sensormanager.tasks.SubscriptionList.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,(((\"removeSubscription() deleting subscription created for task: \" + (s.getTask().getSensorType())) + \" listener: \") + (s.getListener())))", "com.ubhave.sensormanager.tasks.Subscription.getTask()", "s.getTask().getSensorType()", "com.ubhave.sensormanager.tasks.Subscription.getListener()"], "Fixed commit": "b956f527c95766b74cd2f039e6e91a4be4aa1f6c", "Url": "https://api.github.com/repos/nlathia/SensorManager", "Date": "2013-02-18T09:43:36Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((persistenceHandler) == null) throw new factory.PersistenceHandlerMissingException(\"No persistence handlers found.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6024/buggy-version/src.factory.PersistenceHandlerProxy.java", "BodyUseAPI": [], "Fixed commit": "0cfc75448778b26504749dde8dd113910daa6662", "Url": "https://api.github.com/repos/akula1001/factory_girl_java", "Date": "2012-03-20T15:36:05Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["factory.annotations.Annotations.persistentClass()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (persistenceHandlerClass != null) { java.lang.reflect.Constructor<factory.AbstractPersistenceHandler> persistenceHandlerConstructor = persistenceHandlerClass.getConstructor(java.lang.String.class); persistenceHandler = persistenceHandlerConstructor.newInstance(databaseName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6024/buggy-version/src.factory.Instantiator.java", "BodyUseAPI": ["java.lang.Class.getConstructor(java.lang.Class)"], "Fixed commit": "0cfc75448778b26504749dde8dd113910daa6662", "Url": "https://api.github.com/repos/akula1001/factory_girl_java", "Date": "2012-03-20T15:36:05Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.getCurrentLevel()) != (event.getSource())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7712/buggy-version/src.com.droidquest.view.api.event.PlayerEventHandler.java", "BodyUseAPI": [], "Fixed commit": "a6efe6b27ed6fcf448de937c15f459b25c4a1a44", "Url": "https://api.github.com/repos/jeffoh/DroidQuest", "Date": "2014-02-16T06:55:50Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((appTaskDetail.getTaskEndTime()) != null) task.setEndTime(appTaskDetail.getTaskEndTime().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2713/buggy-version/src.main.java.com.ai.paas.cpaas.be.am.manage.impl.DeployServiceManage.java", "BodyUseAPI": ["com.ai.paas.cpaas.be.am.manage.model.LogResp.Task.setEndTime(appTaskDetail.getTaskEndTime().toString())", "appTaskDetail.getTaskEndTime().toString()", "com.ai.paas.cpaas.be.am.dao.mapper.bo.AppTaskDetail.getTaskEndTime()"], "Fixed commit": "deb0285846a9564fcbe7c73875fc62dafb5f183e", "Url": "https://api.github.com/repos/AIPaaS/platform-application-mgmt-service", "Date": "2016-03-10T09:42:23Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((localDevice) != null) localDevice.terminate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6396/buggy-version/src.main.java.bacnet.BacnetConn.java", "BodyUseAPI": [], "Fixed commit": "8989f19d19adb31ce385f3527af2f0a4139e54a5", "Url": "https://api.github.com/repos/IOT-DSA/dslink-java-bacnet", "Date": "2015-06-29T21:17:18Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wefika.flowlayout.FlowLayout.getChildCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i == (childCount - 1)) { width = java.lang.Math.max(width, lineWidth); height += lineHeight; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3960/buggy-version/FlowLayout.src.main.java.com.wefika.flowlayout.FlowLayout.java", "BodyUseAPI": [], "Fixed commit": "e250e0daa7b78855307735f0bf32f18f6d8cfd62", "Url": "https://api.github.com/repos/blazsolar/FlowLayout", "Date": "2014-02-05T22:02:18Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(matcher.matches())) { groupBy.addItem(new com.alibaba.druid.sql.ast.expr.SQLIdentifierExpr(fieldName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4505/buggy-version/src.main.java.io.mycat.route.parser.druid.impl.DruidSelectParser.java", "BodyUseAPI": [], "Fixed commit": "af12f30ec28c847e26d20fda5fe118a7ed7c5f8e", "Url": "https://api.github.com/repos/rongbo-j/Mycat-Server", "Date": "2017-04-26T07:05:30Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toUpperCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (sensorName.contains(\" \")) { sensorName = sensorName.substring(0, sensorName.indexOf(\" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1818/buggy-version/java.src.jmri.jmris.simpleserver.SimpleSensorServer.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "eeb30dd16ca31fc89ff6ae4cf74b5217a6e93a7e", "Url": "https://api.github.com/repos/pabender/JMRI", "Date": "2016-06-08T05:10:29Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ship.isRound)) { nowX += vx * t; nowY += vy * t; }else { nowX = (ship.roundStar.getLocation().x) + ((ship.roundDistance) * (java.lang.Math.cos((((ship.roundDegree) + (java.lang.Math.PI)) + (ship.roundDtheta))))); nowY = (ship.roundStar.getLocation().y) + ((ship.roundDistance) * (java.lang.Math.sin((((ship.roundDegree) + (java.lang.Math.PI)) + (ship.roundDtheta))))); if (((nowX - (ship.roundStar.getLocation().x)) < 0) && ((nowY - (ship.roundStar.getLocation().y)) < 0)) ship.setDegreeToEast(((ship.roundDegree) + (((java.lang.Math.PI) * 3) / 2))); else ship.setDegreeToEast(((ship.roundDegree) - ((java.lang.Math.PI) / 2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5401/buggy-version/ThreebodyShip.src.cross.threebodyship.model.Game.java", "BodyUseAPI": ["java.lang.Math.cos((((ship.roundDegree) + (java.lang.Math.PI)) + (ship.roundDtheta)))", "cross.threebodyship.model.Ship.setDegreeToEast(((ship.roundDegree) + (((java.lang.Math.PI) * 3) / 2)))", "ship.roundStar.getLocation()", "ship.roundStar.getLocation()", "ship.roundStar.getLocation()", "java.lang.Math.sin((((ship.roundDegree) + (java.lang.Math.PI)) + (ship.roundDtheta)))", "ship.roundStar.getLocation()", "cross.threebodyship.model.Ship.setDegreeToEast(((ship.roundDegree) - ((java.lang.Math.PI) / 2)))"], "Fixed commit": "b35747a94c4ac9249e09f211c8d3c9850be62929", "Url": "https://api.github.com/repos/CrossNJU/ThreebodyShip", "Date": "2015-05-16T12:54:52Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (game.soundEnabled) { wind.play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5187/buggy-version/src.com.maycontainsoftware.pumpkinpatchpanic.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "7cc0834d09c059dcb8141f6e27ac4b850745d715", "Url": "https://api.github.com/repos/cfmdobbie/PumpkinPatchPanic", "Date": "2014-10-29T16:46:03Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVisibleToUser) { ((com.mindbuilders.cognitivemoodlog.CreateNewLogEntry) (getActivity())).setRightNavVisible(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5644/buggy-version/app.src.main.java.com.mindbuilders.cognitivemoodlog.ReviewNegativeThoughtFragment.java", "BodyUseAPI": [], "Fixed commit": "6a23908fa865e343046a60b0939c8d94de258f8d", "Url": "https://api.github.com/repos/petemit/CognitiveMoodLog", "Date": "2017-02-04T16:52:51Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["flamefeed.server.SQLHandler.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resultSet == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5293/buggy-version/flamefeed.PacketHandler.java", "BodyUseAPI": [], "Fixed commit": "f8a36a527bb769a8d7301bb1a6651266f3f346db", "Url": "https://api.github.com/repos/Anedaar/FlameProtect", "Date": "2014-03-22T01:37:37Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flamefeed.server.SQLHandler.con) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5293/buggy-version/flamefeed.server.SQLHandler.java", "BodyUseAPI": [], "Fixed commit": "f8a36a527bb769a8d7301bb1a6651266f3f346db", "Url": "https://api.github.com/repos/Anedaar/FlameProtect", "Date": "2014-03-22T01:37:37Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.getClickedBlock().getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sign.getLine(3).startsWith(\"\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\")) { p.sendMessage(((org.bukkit.ChatColor.translateAlternateColorCodes('&', plugin.getConfig().getString(\"LobbySecrets.Prefix\"))) + \"\ufffdcThis secret has been created with an older version of LobbySecrets. Please remove this sign and create a new one. You can use the same secret id to keep the data.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5474/buggy-version/src.com.github.nathannr.lobbysecrets.listener.SignClick.java", "BodyUseAPI": [], "Fixed commit": "b0e157a9afcf8942b85adb2eb718119c800304b2", "Url": "https://api.github.com/repos/NathanNr/LobbySecrets", "Date": "2017-05-27T16:49:05Z"},
{"Line": "=>4", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((retrieve(key)) == null) { super.add(new Node(new KeyValuePair(key, name))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5719/buggy-version/day_8.SMap.java", "BodyUseAPI": ["SinglyLinkedList.add(Node)"], "Fixed commit": "0166f0ebb4b937a9cfc2079cadd23707886e8bf7", "Url": "https://api.github.com/repos/RyanDur/Java-class", "Date": "2013-11-07T17:24:56Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["SMap.getHead()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (head != null) { kvp = ((KeyValuePair) (head.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5719/buggy-version/day_8.SMap.java", "BodyUseAPI": ["Node.getValue()"], "Fixed commit": "0166f0ebb4b937a9cfc2079cadd23707886e8bf7", "Url": "https://api.github.com/repos/RyanDur/Java-class", "Date": "2013-11-07T17:24:56Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showConfirmDialog(nz.ac.aut.pdc.ChessHits.GUI.MainFrame,((this.game.getWinner().getName()) + \"has won the game.\\n Would you like to play again?\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (option == 1) { this.frame.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2008/buggy-version/src.nz.ac.aut.pdc.ChessHits.GUI.SqurarePanel.java", "BodyUseAPI": [], "Fixed commit": "dfdab0861e5d3b58bc8e47be99aa68fbcc2a0cf4", "Url": "https://api.github.com/repos/guy101100/Chess_Hits", "Date": "2013-10-14T01:44:44Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((super.getCurrentPosition().getRow()) > 1) { temp2 = super.getBoard().getPositions()[((getCurrentPosition().getRow()) - 2)][getCurrentPosition().getColumn()]; tempSqr2 = super.getBoard().getSquare(temp2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2008/buggy-version/src.nz.ac.aut.pdc.ChessHits.model.pieces.Pawn.java", "BodyUseAPI": ["nz.ac.aut.pdc.ChessHits.model.pieces.Piece.getBoard()", "nz.ac.aut.pdc.ChessHits.model.pieces.Piece.getBoard()", "super.getBoard().getPositions()", "super.getBoard().getSquare(nz.ac.aut.pdc.ChessHits.model.Position)"], "Fixed commit": "dfdab0861e5d3b58bc8e47be99aa68fbcc2a0cf4", "Url": "https://api.github.com/repos/guy101100/Chess_Hits", "Date": "2013-10-14T01:44:44Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((super.getCurrentPosition().getRow()) < 6) { temp2 = super.getBoard().getPositions()[((getCurrentPosition().getRow()) + 2)][getCurrentPosition().getColumn()]; tempSqr2 = super.getBoard().getSquare(temp2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2008/buggy-version/src.nz.ac.aut.pdc.ChessHits.model.pieces.Pawn.java", "BodyUseAPI": ["super.getBoard().getPositions()", "nz.ac.aut.pdc.ChessHits.model.pieces.Piece.getBoard()", "super.getBoard().getSquare(nz.ac.aut.pdc.ChessHits.model.Position)", "nz.ac.aut.pdc.ChessHits.model.pieces.Piece.getBoard()"], "Fixed commit": "dfdab0861e5d3b58bc8e47be99aa68fbcc2a0cf4", "Url": "https://api.github.com/repos/guy101100/Chess_Hits", "Date": "2013-10-14T01:44:44Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((group.getRoles()) != null) && ((group.getRoles().contains(HadoopRole.HADOOP_NAMENODE_ROLE.toString())) || (group.getRoles().contains(HadoopRole.MAPR_CLDB_ROLE.toString())))) { computeOnly = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6186/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.manager.ClusterEntityManager.java", "BodyUseAPI": [], "Fixed commit": "32f01c009a6858589afd122dc33cb3229b31b000", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-08-08T06:02:45Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(json.isNull(\"display_url\"))) { this.displayURL = json.getString(\"display_url\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6879/buggy-version/twitter4j-core.src.main.java.twitter4j.internal.json.URLEntityJSONImpl.java", "BodyUseAPI": ["twitter4j.internal.org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "9bd5088ba10a3179e847895292fd3c30c9225b25", "Url": "https://api.github.com/repos/yusuke/twitter4j", "Date": "2012-11-14T13:54:37Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.replay.equals(value)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5099/buggy-version/src.main.java.mchorse.blockbuster.client.gui.elements.GuiReplay.java", "BodyUseAPI": [], "Fixed commit": "5259f73c6a59285aa635fbbee005ff779207e115", "Url": "https://api.github.com/repos/mchorse/blockbuster", "Date": "2017-02-03T09:40:26Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (posOfDot < ((id.length()) - 1)) { char chBefore = id.charAt((posOfDot - 1)); char chAfter = id.charAt((posOfDot + 1)); if ((java.lang.Character.isDigit(chBefore)) && (java.lang.Character.isDigit(chAfter))) { }else { id = ((id.substring(0, posOfDot)) + \" \") + (id.substring((posOfDot + 1), id.length())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7750/buggy-version/src.C100Tools.OdsToolList.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.charAt(int)", "java.lang.String.length()", "java.lang.String.charAt(int)"], "Fixed commit": "7f2774bce947da9cbc39037fceb93381edfa68f8", "Url": "https://api.github.com/repos/Meconer/C100Tools", "Date": "2015-12-07T08:42:27Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((it.type) == (DUR)) throw org.basex.query.expr.SIMPLDUR.thrw(ii, info(), it);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/9166/buggy-version/src.main.java.org.basex.query.expr.Calc.java", "BodyUseAPI": ["org.basex.query.expr.SIMPLDUR.thrw(org.basex.util.InputInfo,java.lang.String,org.basex.query.item.Item)"], "Fixed commit": "c9a15d53cad2901b721562b7032c6ca496453440", "Url": "https://api.github.com/repos/LeoWoerteler/basex", "Date": "2011-04-26T18:35:12Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(xc.isValid())) throw org.basex.query.item.DATEINV.thrw(ii, type, xc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/9166/buggy-version/src.main.java.org.basex.query.item.Date.java", "BodyUseAPI": ["org.basex.query.item.DATEINV.thrw(org.basex.util.InputInfo,org.basex.query.item.Date,javax.xml.datatype.XMLGregorianCalendar)"], "Fixed commit": "c9a15d53cad2901b721562b7032c6ca496453440", "Url": "https://api.github.com/repos/LeoWoerteler/basex", "Date": "2011-04-26T18:35:12Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jTFCodigo.getText().trim().isEmpty()) { java.util.UUID codigoTecnicoUUID = java.util.UUID.randomUUID(); codigoTecnico = java.lang.String.valueOf(codigoTecnicoUUID).substring(0, 7); }else { codigoTecnico = jTFCodigo.getText().trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7239/buggy-version/SistemaDeControleDeTecnicos.src.SCT.Tela.TelaGestaoTecnico.java", "BodyUseAPI": ["java.lang.String.trim()", "javax.swing.JTextField.getText()"], "Fixed commit": "83b8cc3f47bf2a4ea6354e57b586ad10fe3e2f90", "Url": "https://api.github.com/repos/rod09/SistemaDeControleDeTecnicos", "Date": "2014-10-11T23:38:15Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count) == 0) throw new java.lang.RuntimeException(RedisClient.i18nFile.getText(I18nFile.KEYNOTEXIST));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5545/buggy-version/src.main.java.com.cxy.redisclient.presentation.component.PagingListener.java", "BodyUseAPI": [], "Fixed commit": "acc5d11b062aeec0d1348700326153ceacf93f0f", "Url": "https://api.github.com/repos/caoxinyu/RedisClient", "Date": "2014-07-25T09:50:02Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modelSql) == null) { modelSql = new com.example.nofarcohenzedek.dogo.Model.Sql.ModelSql(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5628/buggy-version/app.src.main.java.com.example.nofarcohenzedek.dogo.Model.Model.java", "BodyUseAPI": [], "Fixed commit": "be28b72d4e00f7d948764eb7fae1ae854f7eb606", "Url": "https://api.github.com/repos/nofar9792/Nofar", "Date": "2016-01-15T22:03:05Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modelParse) == null) { modelParse = new com.example.nofarcohenzedek.dogo.Model.Parse.ModelParse(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5628/buggy-version/app.src.main.java.com.example.nofarcohenzedek.dogo.Model.Model.java", "BodyUseAPI": [], "Fixed commit": "be28b72d4e00f7d948764eb7fae1ae854f7eb606", "Url": "https://api.github.com/repos/nofar9792/Nofar", "Date": "2016-01-15T22:03:05Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (content.startsWith(\"-\")) { content = content.replaceFirst(\"-\", \"0-\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3008/buggy-version/kennedy-langlotz.src.com.klq.logic.expression.token.Tokenizer.java", "BodyUseAPI": [], "Fixed commit": "e2d706831c9925fbe687552444c5e8ff5963283f", "Url": "https://api.github.com/repos/software-engineering-amsterdam/many-ql", "Date": "2015-02-22T01:05:52Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["logic.Task.getDate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(todoList.containsKey(date))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6081/buggy-version/PinkPanther.src.logic.TaskHandler.java", "BodyUseAPI": [], "Fixed commit": "18975a85ed4bf68d79d96f37ccbe36dc3b97b0ad", "Url": "https://api.github.com/repos/cs2103aug2015-t10-1j/PinkPanther-To-do-List", "Date": "2015-10-10T15:36:13Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.io.File>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (f != null) { android.util.Log.d(com.gcw.sapienza.places.utils.FlagUploader.TAG, (((\"Deleted file: \" + (f.getName())) + \" ? \") + (f.delete()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4515/buggy-version/app.src.main.java.com.gcw.sapienza.places.utils.FlagUploader.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "java.io.File.getName()", "java.io.File.delete()"], "Fixed commit": "50137aa691ab9f51b405d1ea4708fcb8e8e4d56d", "Url": "https://api.github.com/repos/Natio/Places", "Date": "2015-01-15T16:20:47Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(password)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8625/buggy-version/app.src.main.java.co.umbc.cmsc.hopin.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "37f9b7aee27becf5690a11ccb91a87dc56a66039", "Url": "https://api.github.com/repos/n0nzy/HopIn", "Date": "2017-04-18T03:35:11Z"},
{"Line": "=>871", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.exoplayer2.ExoPlaybackException.getUnexpectedException()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((runtimeException.getMessage()) == null) { runtimeException.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3700/buggy-version/exoplayerhelper.src.main.java.net.alexandroid.utils.exoplayerhelper.ExoPlayerHelper.java", "BodyUseAPI": ["java.lang.RuntimeException.printStackTrace()"], "Fixed commit": "a338182a8e8af3becdeb6fe94d6dd4947ed179a6", "Url": "https://api.github.com/repos/Pulimet/ExoPlayer-Wrapper", "Date": "2017-11-05T08:17:30Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((from.getStrStatus()) != null) { to.setStrStatus(from.getStrStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8516/buggy-version/miso-dto.src.main.java.uk.ac.bbsrc.tgac.miso.dto.Dtos.java", "BodyUseAPI": ["uk.ac.bbsrc.tgac.miso.core.data.SampleAdditionalInfo.setStrStatus(from.getStrStatus())", "uk.ac.bbsrc.tgac.miso.dto.SampleAdditionalInfoDto.getStrStatus()"], "Fixed commit": "2c253838ab630c1ca2427af8086d33eec34232cd", "Url": "https://api.github.com/repos/TGAC/miso-lims", "Date": "2016-04-01T19:09:10Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((command.getCopiedMergeCount()) > 0) { this.statisticsHandler.statistics(command.getCommandType(), command.getCopiedMergeCount()); }else this.statisticsHandler.statistics(command.getCommandType());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4346/buggy-version/src.main.java.net.rubyeye.xmemcached.impl.MemcachedHandler.java", "BodyUseAPI": ["net.rubyeye.xmemcached.monitor.StatisticsHandler.statistics(command.getCommandType(),command.getCopiedMergeCount())", "net.rubyeye.xmemcached.command.Command.getCopiedMergeCount()", "net.rubyeye.xmemcached.command.Command.getCommandType()", "net.rubyeye.xmemcached.command.Command.getCommandType()", "net.rubyeye.xmemcached.monitor.StatisticsHandler.statistics(command.getCommandType())"], "Fixed commit": "5c95b6338de705b6984798146826b136b7e6d8d2", "Url": "https://api.github.com/repos/bmahe/xmemcached", "Date": "2013-01-09T13:07:52Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPlayer.getAccount().getBalance()) < 0) { nextPlayer = players[arrayIndex]; }else { nextPlayer = players[(arrayIndex + 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3319/buggy-version/src.controller.GameController.java", "BodyUseAPI": [], "Fixed commit": "9a6372108f72390503125af69a7d9abcd116c151", "Url": "https://api.github.com/repos/freyahelstrup/17_final", "Date": "2017-01-17T16:09:41Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isRendered())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2484/buggy-version/tornadofaces.src.main.java.io.tornadofaces.component.tab.Tab.java", "BodyUseAPI": [], "Fixed commit": "bea10ba8129f3efa4e80637b882f408d0827c55d", "Url": "https://api.github.com/repos/edvin/tornadofaces", "Date": "2015-04-30T10:12:35Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dreamteam.focus.server.DatabaseConnector.getProfileByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (deletedProfile != null) { if (deletedProfile.isActive()) { try { java.util.ArrayList<dreamteam.focus.ProfileInSchedule> anonymousScheduleProfiles = getProfilesInSchedule(\"AnonymousSchedule\"); for (int i = 0; i < (anonymousScheduleProfiles.size()); i++) { if (anonymousScheduleProfiles.get(i).getProfile().getName().equals(deletedProfile.getName())) { addProfileInScheduleDeleted(anonymousScheduleProfiles.get(i)); } } } catch (java.text.ParseException e) { android.util.Log.e(\"ParseException\", e.getLocalizedMessage()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4237/buggy-version/app.src.main.java.dreamteam.focus.server.DatabaseConnector.java", "BodyUseAPI": ["dreamteam.focus.Profile.isActive()", "anonymousScheduleProfiles.get(i).getProfile().getName().equals(deletedProfile.getName())", "dreamteam.focus.Profile.getName()"], "Fixed commit": "1621c28b5aa07afeb3fd70ce4bf998a1b8db5876", "Url": "https://api.github.com/repos/tsinghal/Focus", "Date": "2017-11-10T09:28:52Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.nia.ledged.core.Journal.findChild(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (parent != null) { setToFilter = parent.getChildren(); }else { setToFilter = java.util.Collections.emptySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7009/buggy-version/core.src.ru.nia.ledged.core.Journal.java", "BodyUseAPI": ["ru.nia.ledged.core.AccountTree.Account.getChildren()"], "Fixed commit": "861a6956b3fcfb4fd3bb3f5c9448c7649cd6af56", "Url": "https://api.github.com/repos/NIA/ledged", "Date": "2011-03-16T17:56:00Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.Item.getItemFromBlock(net.minecraft.block.Block)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (item.getHasSubtypes()) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4021/buggy-version/src.main.java.org.blockartistry.mod.DynSurround.compat.MCHelper.java", "BodyUseAPI": [], "Fixed commit": "dc21a07e8744ed299d7ec6f310d72f0e4f441c0b", "Url": "https://api.github.com/repos/OreCruncher/DynamicSurroundings", "Date": "2016-12-09T15:45:56Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.drawable.Drawable.getIntrinsicHeight()", "android.graphics.drawable.Drawable.getIntrinsicWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dw > ((getWidth()) - ((mHorizontalPadding) * 2))) && (dh > ((getHeight()) - ((mVerticalPadding) * 2)))) { float scaleW = (((getWidth()) * 1.0F) - ((mHorizontalPadding) * 2)) / dw; float scaleH = (((getHeight()) * 1.0F) - ((mVerticalPadding) * 2)) / dh; scale = java.lang.Math.max(scaleW, scaleH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/470/buggy-version/ClipImage.src.main.java.com.moon.sdk.clipimage.ClipZoomImageView.java", "BodyUseAPI": [], "Fixed commit": "26da373c1b990b0b23a6e2ddc2ca51c449131ec2", "Url": "https://api.github.com/repos/jxxfzgy/MoonSDK", "Date": "2014-10-16T11:39:45Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.ActionEvent.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (src.getText().equals(\"^\")) { Model.currentFunction += \" ^ \"; }else if (src.getText().equals(\"=\")) { try { Function tempf = new Function(Model.currentFunction); Model.previousFunctions.add(0, Model.currentFunction); Model.currentFunction = java.lang.Double.toString(tempf.getValue(0)); } catch (SyntaxException se) { java.lang.System.out.println(\"Syntax Error\"); Model.currentFunction = se.getText(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4628/buggy-version/Model.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "javax.swing.JButton.getText()"], "Fixed commit": "0661c76fc0ab7765581246f1591dbd90725065f8", "Url": "https://api.github.com/repos/NickPapadakis/GraphingCalculator", "Date": "2016-03-12T23:56:07Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, net.smert.lwjgl.examples.CustomClassLoader.FileEntryInJar>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fileEntryInJar == null) { net.smert.lwjgl.examples.CustomClassLoader.log.log(java.util.logging.Level.FINEST, \"CustomClassLoader did not find native library: {0}\", libraryName); libraryName = mapLibraryNameAlternate(libraryName); net.smert.lwjgl.examples.CustomClassLoader.log.log(java.util.logging.Level.FINER, \"CustomClassLoader mapped alternate library name: {0}\", libraryName); fileEntryInJar = fileEntriesInJar.get(libraryName); if (fileEntryInJar == null) { net.smert.lwjgl.examples.CustomClassLoader.log.log(java.util.logging.Level.FINEST, \"CustomClassLoader did not find native library: {0}\", libraryName); return super.findLibrary(libraryName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2560/buggy-version/src.main.java.net.smert.lwjgl.examples.CustomClassLoader.java", "BodyUseAPI": [], "Fixed commit": "9c90f92b4165fc5d09011e30901c17f4f5243207", "Url": "https://api.github.com/repos/kovertopz/LWJGL-Examples", "Date": "2014-10-28T23:44:12Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jogamp.common.nio.Buffers.newDirectFloatBuffer(container.valueMesh3d)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((buffer.capacity()) > 0) { t.update(gl, 0, buffer, container.dimension); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7006/buggy-version/src.main.java.bdv.jogl.VolumeRenderer.ShaderPrograms.ShaderSources.functions.accumulator.SharpnessVolumeAccumulator.java", "BodyUseAPI": ["bdv.jogl.VolumeRenderer.Scene.Texture.update(com.jogamp.opengl.GL4,int,java.nio.FloatBuffer,container.dimension)"], "Fixed commit": "453d132d3fb7f46e8cbd4a825557d16344e537e8", "Url": "https://api.github.com/repos/mheyde/bigdataviewer-core", "Date": "2015-10-21T07:56:16Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jogamp.common.nio.Buffers.newDirectFloatBuffer(container.valueMesh3d)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((buffer.capacity()) > 0) { t.update(gl, 0, buffer, container.dimension); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7006/buggy-version/src.main.java.bdv.jogl.VolumeRenderer.ShaderPrograms.ShaderSources.functions.accumulator.MaxCurvatureDifferenceAccumulator.java", "BodyUseAPI": ["bdv.jogl.VolumeRenderer.Scene.Texture.update(com.jogamp.opengl.GL4,int,java.nio.FloatBuffer,container.dimension)"], "Fixed commit": "453d132d3fb7f46e8cbd4a825557d16344e537e8", "Url": "https://api.github.com/repos/mheyde/bigdataviewer-core", "Date": "2015-10-21T07:56:16Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { setPreference(key, ((java.lang.String) (null))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4718/buggy-version/agile-storage.src.main.java.org.headsupdev.agile.storage.StoredUser.java", "BodyUseAPI": [], "Fixed commit": "8ff2dd9714295289abc14205a0fdf264d9bf4bc4", "Url": "https://api.github.com/repos/headsupdev/agile", "Date": "2014-12-31T15:54:30Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(grouperTeamIds.isEmpty())) { final nl.surfnet.coin.api.client.domain.Group20Entry linkedTeams = groupService.getGroups20ByIds(userId, grouperTeamIds.toArray(new java.lang.String[grouperTeamIds.size()]), 0, 0); group20Entry.getEntry().addAll(linkedTeams.getEntry()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4865/buggy-version/coin-api-war.src.main.java.nl.surfnet.coin.api.ApiController.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.toArray(java.lang.String[])", "nl.surfnet.coin.api.service.GroupService.getGroups20ByIds(java.lang.String,java.lang.String[],int,int)"], "Fixed commit": "b03e78dcbb2e1e74155b2ac4f566cb756d98b0b1", "Url": "https://api.github.com/repos/OpenConext/OpenConext-api", "Date": "2012-05-15T12:18:09Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page <= 0) return new java.util.ArrayList<com.harku.model.user.UsersModel>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7685/buggy-version/src.main.java.com.harku.service.user.UsersService.java", "BodyUseAPI": [], "Fixed commit": "7f8e4ab324e1458d0021fb7b1ff09592fdce30ff", "Url": "https://api.github.com/repos/HarkuLi/javaDbPrac", "Date": "2017-10-31T03:48:31Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shareIntent) != null) startActivity(android.content.Intent.createChooser(shareIntent, \"Share using\")); else android.util.Log.e(comp_sci_squad.com.github.url_irl.ListURLsActivity.TAG, \"Share intent was null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4294/buggy-version/app.src.main.java.comp_sci_squad.com.github.url_irl.ListURLsActivity.java", "BodyUseAPI": [], "Fixed commit": "78eebec22b261419a6a0bfe0f521f9789e5854a6", "Url": "https://api.github.com/repos/comp-sci-squad/url-irl", "Date": "2017-09-05T07:09:35Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.getBlock(x, y, z)) == (this)) { if (state && (((world.getBlockMetadata(x, y, z)) & 8) == 0)) { world.setBlockMetadataWithNotify(x, y, z, ((world.getBlockMetadata(x, y, z)) | 8), 3); world.markBlockForUpdate(x, y, z); }else if ((!state) && (((world.getBlockMetadata(x, y, z)) & 8) != 0)) { world.setBlockMetadataWithNotify(x, y, z, ((world.getBlockMetadata(x, y, z)) & 7), 3); world.markBlockForUpdate(x, y, z); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7965/buggy-version/src.main.java.zmaster587.libVulpes.block.multiblock.BlockHatch.java", "BodyUseAPI": ["net.minecraft.world.World.setBlockMetadataWithNotify(int,int,int,((world.getBlockMetadata(x, y, z)) | 8),int)", "net.minecraft.world.World.setBlockMetadataWithNotify(int,int,int,((world.getBlockMetadata(x, y, z)) & 7),int)", "net.minecraft.world.World.getBlockMetadata(int,int,int)", "net.minecraft.world.World.getBlockMetadata(int,int,int)", "net.minecraft.world.World.getBlockMetadata(int,int,int)", "net.minecraft.world.World.markBlockForUpdate(int,int,int)", "net.minecraft.world.World.markBlockForUpdate(int,int,int)", "net.minecraft.world.World.getBlockMetadata(int,int,int)"], "Fixed commit": "09bf4e4f6f82de8880b5595f740adb497afaccd4", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-02-16T19:51:07Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.fhe.mc2.sdj.database.HibernateUtil.getSessionFactory().getCurrentSession()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (session.isOpen()) { session.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1081/buggy-version/src.main.java.de.fhe.mc2.sdj.database.DB_Highscore.java", "BodyUseAPI": ["org.hibernate.Session.close()"], "Fixed commit": "ea8e0c52c9867a7c4bad773e18ba82404c2c1083", "Url": "https://api.github.com/repos/JPGsProfil/whoisitserverv2", "Date": "2016-02-13T02:46:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.createQuery(hqlUpdate).setInteger(\"matchesWon\", _highscore.getMatchesWon()).setInteger(\"matchesLost\", _highscore.getMatchesLost()).setInteger(\"id\", _highscore.getId()).executeUpdate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (updatedEntities > 0) { return javax.ws.rs.core.Response.ok().build(); }else { return javax.ws.rs.core.Response.notModified().build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1081/buggy-version/src.main.java.de.fhe.mc2.sdj.database.DB_Highscore.java", "BodyUseAPI": [], "Fixed commit": "ea8e0c52c9867a7c4bad773e18ba82404c2c1083", "Url": "https://api.github.com/repos/JPGsProfil/whoisitserverv2", "Date": "2016-02-13T02:46:07Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useAD) { altReadDepth = java.lang.Integer.parseInt(depths[(which + 1)]); }else { altReadDepth = java.lang.Integer.parseInt(depths[which]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4405/buggy-version/src.main.java.buffer.variant.IonTorrentVCFParser.java", "BodyUseAPI": [], "Fixed commit": "edf3b76d5938aef543a61814bdd5e653263a0665", "Url": "https://api.github.com/repos/ARUP-NGS/Pipeline", "Date": "2013-08-27T00:14:42Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (content != null) { jobContents.add(content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5669/buggy-version/server.src.com.wireless.print.scheme.JobContentFactory.java", "BodyUseAPI": ["java.util.List<com.wireless.print.scheme.JobContent>.add(com.wireless.print.scheme.JobContent)"], "Fixed commit": "92aa5a138278b4a66178f3bac251184b3fab8f6d", "Url": "https://api.github.com/repos/yzhang1981/wireless-order-solution", "Date": "2016-06-12T03:55:07Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mostRecentPreviousRecord.getEventType()) != null) { if (mostRecentPreviousRecord.getEventType().equals(org.openstack.atlas.usagerefactor.DELETE_LOADBALANCER)) { return processedRecords; } if ((mostRecentPreviousRecord.getEventType().equals(org.openstack.atlas.usagerefactor.SUSPEND_LOADBALANCER)) || (mostRecentPreviousRecord.getEventType().equals(org.openstack.atlas.usagerefactor.SUSPENDED_LOADBALANCER))) { newRecordForLb.setEventType(org.openstack.atlas.usagerefactor.SUSPENDED_LOADBALANCER.name()); }else { newRecordForLb.setEventType(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/334/buggy-version/jobs.src.main.java.org.openstack.atlas.usagerefactor.UsageRollupProcessorImpl.java", "BodyUseAPI": ["org.openstack.atlas.service.domain.usage.entities.LoadBalancerMergedHostUsage.getEventType()", "mostRecentPreviousRecord.getEventType().equals(org.openstack.atlas.usagerefactor.SUSPENDED_LOADBALANCER)", "mostRecentPreviousRecord.getEventType().equals(org.openstack.atlas.usagerefactor.SUSPEND_LOADBALANCER)", "org.openstack.atlas.service.domain.usage.entities.LoadBalancerMergedHostUsage.getEventType()", "org.openstack.atlas.service.domain.usage.entities.LoadBalancerMergedHostUsage.getEventType()", "mostRecentPreviousRecord.getEventType().equals(org.openstack.atlas.usagerefactor.DELETE_LOADBALANCER)"], "Fixed commit": "16614d19f2afc2c07baacb569dfce2edcd5a467d", "Url": "https://api.github.com/repos/lbrackspace/atlas-lb", "Date": "2013-05-28T16:51:07Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((objectAttributes) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7018/buggy-version/confsql.src.main.java.com.viosng.confsql.semantic.model.other.DefaultContext.java", "BodyUseAPI": [], "Fixed commit": "dd37d57968d2fd5fc80a15be7c76a5f5312fd8c3", "Url": "https://api.github.com/repos/viosng/confsql", "Date": "2015-01-07T10:54:17Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dom4j.Element.element(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (null != id) id.detach();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/530/buggy-version/src.main.java.org.buddycloud.channelserver.channel.ValidateEntry.java", "BodyUseAPI": ["org.dom4j.Element.detach()"], "Fixed commit": "b57db4e34a49ba85a2d9be88f179ec4f1eb361f8", "Url": "https://api.github.com/repos/surevine/buddycloud-server-java", "Date": "2014-01-08T15:29:31Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(my_cvrs_to_audit.isEmpty())) { initializeRLAAlgorithm(); result = my_rla_algorithm.estimatedBallotsToAudit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/662/buggy-version/server.eclipse-project.src.main.java.us.freeandfair.corla.model.CountyDashboard.java", "BodyUseAPI": [], "Fixed commit": "12b2507a78ef8514884ad3d1a744591ecb302b36", "Url": "https://api.github.com/repos/FreeAndFair/ColoradoRLA", "Date": "2017-08-15T01:20:42Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.api.measures.MetricFinder.findByKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (metric == null) { throw new java.lang.IllegalStateException((\"Unknow metric with key \" + metricKey)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2422/buggy-version/sonar-batch.src.main.java.org.sonar.batch.scan.measure.MeasureValueCoder.java", "BodyUseAPI": [], "Fixed commit": "9a177176c182387fa6b89911eb88bab567a95a11", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-07-02T07:14:04Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == null) { input = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4353/buggy-version/src.main.Main.java", "BodyUseAPI": [], "Fixed commit": "a10c2e9a0c13471515a1130298e62c64bceaa17c", "Url": "https://api.github.com/repos/neunzehnhundert97/CryptoLibraryToDebug", "Date": "2017-08-11T08:59:23Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deserializedValue) != null) { return deserializedValue; }else { if ((valueData) != null) { deserializedValue = serializationService.toObject(valueData); } return deserializedValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5512/buggy-version/hazelcast-client-new.src.main.java.com.hazelcast.client.util.ClientDelegatingFuture.java", "BodyUseAPI": [], "Fixed commit": "e318e820b3734bc93ee280e4f49c23406076e446", "Url": "https://api.github.com/repos/hazelcast/hazelcast", "Date": "2015-06-03T13:04:54Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.vrekt.arc.check.moving.Flight.checkViolation(org.bukkit.entity.Player,(((((\"Attempted to clip vertically. Block: \" + (current.getType())) + \" fromY: \") + (from.getBlockY())) + \" toY: \") + (to.getBlockY())))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (failed) { player.teleport(from, PlayerTeleportEvent.TeleportCause.PLUGIN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8925/buggy-version/src.me.vrekt.arc.check.moving.Flight.java", "BodyUseAPI": [], "Fixed commit": "7632d40e9f99be6086de1b164bb0d06fb1071e32", "Url": "https://api.github.com/repos/Vrekt/Arc-v2", "Date": "2017-12-08T05:16:34Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.intermine.model.InterMineObject.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(objectString.contains(\"primaryIdentifier\"))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/107/buggy-version/bio.webapp.src.org.intermine.bio.web.OtherMinesLinkController.java", "BodyUseAPI": [], "Fixed commit": "93a6aa3f19ebdd5b83451296292765a9c0a068ec", "Url": "https://api.github.com/repos/elsiklab/intermine", "Date": "2017-12-08T23:14:47Z"},
{"Line": "=>1328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bounds != null) && (!(bounds.isEmpty()))) { com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree.JCExpression> boundsCopy = new com.sun.tools.javac.util.ListBuffer<com.sun.tools.javac.tree.JCTree.JCExpression>(); for (com.sun.tools.javac.tree.JCTree.JCExpression expr : tp.bounds) { boundsCopy.append(lombok.javac.handlers.JavacHandlerUtil.cloneType(maker, expr, source.get(), context)); } bounds = boundsCopy.toList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1951/buggy-version/src.core.lombok.javac.handlers.JavacHandlerUtil.java", "BodyUseAPI": [], "Fixed commit": "74603cd9d355353f5373deb167988c5eaf015346", "Url": "https://api.github.com/repos/2is10/lombok", "Date": "2017-02-16T22:32:17Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mAdapter) != null) && ((mDataSetObserver) == null)) { mDataSetObserver = new android.database.DataSetObserver() { @java.lang.Override public void onChanged() { mFloatingGroupView = null; } @java.lang.Override public void onInvalidated() { mFloatingGroupView = null; } }; mAdapter.registerDataSetObserver(mDataSetObserver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2856/buggy-version/FloatingGroupExpandableListView.src.com.diegocarloslima.fgelv.lib.FloatingGroupExpandableListView.java", "BodyUseAPI": [], "Fixed commit": "8af0d8476ca66237ecfd3c81be6f2f3c44fd5aa1", "Url": "https://api.github.com/repos/imoblife/FloatingGroupExpandableListView", "Date": "2016-06-12T06:54:21Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.Document.get(Field.ROOT_ENTRY_CLASS_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNull(className)) { className = document.get(Field.ENTRY_CLASS_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/349/buggy-version/portal-impl.src.com.liferay.portal.search.SearchPermissionCheckerImpl.java", "BodyUseAPI": [], "Fixed commit": "991246984f64d160114b848cc454159c36b9159c", "Url": "https://api.github.com/repos/Preston-Crary/liferay-portal", "Date": "2015-05-22T21:08:16Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.FoodOrder.getFinalPrice()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value < 0) { value = 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8163/buggy-version/src.controller.FoodOrderController.java", "BodyUseAPI": [], "Fixed commit": "0d2589798b142155524c3d6b8bba20ef158fdd63", "Url": "https://api.github.com/repos/tweetweetarnold/eureka_webservice", "Date": "2016-03-19T15:50:04Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) i--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7774/buggy-version/app.src.main.java.us.shandian.giga.get.DownloadManager.java", "BodyUseAPI": [], "Fixed commit": "42c770a67e835f8e00463aa7516773433cc42796", "Url": "https://api.github.com/repos/PaperAirplane-Dev-Team/GigaGet", "Date": "2014-11-26T13:17:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["OperationalMode.TEST.equals(eu.peppol.util.GlobalConfiguration.getInstance().getModeOfOperation())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isTestMode) { log.warn(\"Mode of operations is TEST\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1865/buggy-version/oxalis-commons.src.main.java.eu.peppol.util.GlobalState.java", "BodyUseAPI": [], "Fixed commit": "9c8413bbdd7682c5756a1af578354ece7f132783", "Url": "https://api.github.com/repos/difi/oxalis", "Date": "2015-11-03T21:22:17Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sm instanceof jetbrains.mps.smodel.DefaultSModelDescriptor)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/254/buggy-version/workbench.mps-platform.source.jetbrains.mps.workbench.findusages.MPSModelsFastFindSupport.java", "BodyUseAPI": [], "Fixed commit": "81ac8e03d5927f5140e446260c2fc931d330591f", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2016-07-25T15:08:32Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ifps.getSwitch(org.openflow.util.HexString.toLong(mp.get(\"switch-dpid\"))).getPorts().toArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (i < ((ports.length) - 1)) sb.append(\",\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/492/buggy-version/vpm_module.src.net.floodlightcontroller.vpm.VPMTopologyGetPortResource.java", "BodyUseAPI": [], "Fixed commit": "d5b199dc962c3adb7d33be2e571d8c1f469cf1c8", "Url": "https://api.github.com/repos/pdirienzo/tesi_vpm", "Date": "2014-05-26T13:07:39Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONValue.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((json.get(com.example.giambiserver.TransactionServlet.ID_STRING)) != null) { id = ((long) (json.get(com.example.giambiserver.TransactionServlet.ID_STRING))); }else { id = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3624/buggy-version/src.com.example.giambiserver.TransactionServlet.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "a46b5dfe1dc5e3515b7fe0f9b26811ef6bfb8b80", "Url": "https://api.github.com/repos/gallonp/GiambiServer", "Date": "2014-04-02T04:24:13Z"},
{"Line": "=>1363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jasm.io.ClassFileReader.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ownerString.startsWith(\"[\")) { owner = jasm.io.ClassFileReader.parseDescriptor(ownerString); }else { owner = jasm.io.ClassFileReader.parseClassDescriptor(((\"L\" + ownerString) + \";\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4272/buggy-version/src.jasm.io.ClassFileReader.java", "BodyUseAPI": ["jasm.io.ClassFileReader.parseClassDescriptor(java.lang.String)", "jasm.io.ClassFileReader.parseDescriptor(java.lang.String)"], "Fixed commit": "7c521ab6b90974296acc576c3457eedc8ec23288", "Url": "https://api.github.com/repos/Whiley/Jasm", "Date": "2014-05-08T00:55:44Z"},
{"Line": "=>603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((ot != null) && (ut != null)) { changed |= !(isSubtype(ot, ut)); original_types[i] = join(ot, ut); }else { changed |= (ot != null) || (ut != null); original_types[i] = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4272/buggy-version/src.jasm.verifier.TypeAnalysis.java", "BodyUseAPI": ["jasm.verifier.TypeAnalysis.join(jasm.lang.JvmType,jasm.lang.JvmType)", "jasm.verifier.TypeAnalysis.isSubtype(jasm.lang.JvmType,jasm.lang.JvmType)"], "Fixed commit": "7c521ab6b90974296acc576c3457eedc8ec23288", "Url": "https://api.github.com/repos/Whiley/Jasm", "Date": "2014-05-08T00:55:44Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((number.length()) == 1) { number = \"\"; }else if ((number.length()) == 0) { if (com.gectaurus.calculatordam.MainActivity.endsWithNumber(ac)) { for (int i = (ac.length()) - 1; i >= 0; i--) { char ch = ac.charAt(i); if ((((ch >= '0') && (ch <= '9')) || (ch == '.')) || ((ch == '-') && (i == 0))) { number = ch + (number); } } } }else { number = number.substring(0, ((number.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1902/buggy-version/src.com.gectaurus.calculatordam.MainActivity.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "b786105c579e4335de3b105b8f031a30b6c68f2e", "Url": "https://api.github.com/repos/albaoe/CalculatorDAM", "Date": "2014-09-26T14:13:49Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bv != null) arr.add(com.sk89q.worldedit.bukkit.BukkitUtil.toBlock(bv));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1379/buggy-version/src.main.java.net.projectzombie.region_rotation.modules.RegionState.java", "BodyUseAPI": ["java.util.TreeSet<org.bukkit.block.Block>.add(com.sk89q.worldedit.bukkit.BukkitUtil.toBlock(bv))", "com.sk89q.worldedit.bukkit.BukkitUtil.toBlock(com.sk89q.worldedit.BlockWorldVector)"], "Fixed commit": "2fda411a76dd3351acb99b57dd49b5022034afd4", "Url": "https://api.github.com/repos/jmbannon/RegionRotation", "Date": "2016-08-18T04:53:32Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tjb.getAnalysisJobBuilder().isRootJobBuilder()) { final javax.swing.JMenuItem previewMenuItem = new javax.swing.JMenuItem(\"Preview data\", org.datacleaner.util.ImageManager.get().getImageIcon(IconUtils.ACTION_PREVIEW, IconUtils.ICON_SIZE_SMALL)); previewMenuItem.addActionListener(new org.datacleaner.actions.PreviewTransformedDataActionListener(_windowContext, tjb)); previewMenuItem.setEnabled(componentBuilder.isConfigured()); popup.add(previewMenuItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3660/buggy-version/desktop.ui.src.main.java.org.datacleaner.widgets.visualization.JobGraphMouseListener.java", "BodyUseAPI": ["javax.swing.JMenuItem.addActionListener(org.datacleaner.actions.PreviewTransformedDataActionListener)"], "Fixed commit": "b0dc79e5d6704c2fa5dc911694643a86703460e2", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2015-09-08T11:30:29Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((in) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3904/buggy-version/android.All-Star_Chat.app.src.main.java.all_star.all_star_chat.ServerHandler.java", "BodyUseAPI": [], "Fixed commit": "67782bf412a489090fea618e61ea302c7e24c099", "Url": "https://api.github.com/repos/davidboschwitz/all-star", "Date": "2015-04-21T01:19:59Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (minicraft.screen.ModeMenu.creative) { minicraft.item.Items.fillCreativeInv(game.player.inventory, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2791/buggy-version/src.minicraft.saveload.Load.java", "BodyUseAPI": [], "Fixed commit": "3269adbd94fa579de25a34b8ba2e1e1d2c480206", "Url": "https://api.github.com/repos/chrisj42/minicraft-plus-revived", "Date": "2017-07-23T06:42:19Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(minicraft.screen.ModeMenu.creative)) game.player.inventory.add(0, item);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2791/buggy-version/src.minicraft.network.MinicraftClient.java", "BodyUseAPI": [], "Fixed commit": "3269adbd94fa579de25a34b8ba2e1e1d2c480206", "Url": "https://api.github.com/repos/chrisj42/minicraft-plus-revived", "Date": "2017-07-23T06:42:19Z"},
{"Line": "=>925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (compareTo(fileData, \"TIME\")) return MfFieldTypes.TIME; else if (compareTo(fileData, \"PRICE\")) return MfFieldTypes.PRICE; else if (compareTo(fileData, \"DATE\")) return MfFieldTypes.DATE; else if (compareTo(fileData, \"BINARY\")) return MfFieldTypes.BINARY; else if (compareTo(fileData, \"NONE\")) return MfFieldTypes.NONE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/187/buggy-version/Java.Eta.Source.impl.com.thomsonreuters.upa.codec.DataDictionaryImpl.java", "BodyUseAPI": ["com.thomsonreuters.upa.codec.DataDictionaryImpl.compareTo(char[],java.lang.String)", "com.thomsonreuters.upa.codec.DataDictionaryImpl.compareTo(char[],java.lang.String)", "com.thomsonreuters.upa.codec.DataDictionaryImpl.compareTo(char[],java.lang.String)", "com.thomsonreuters.upa.codec.DataDictionaryImpl.compareTo(char[],java.lang.String)"], "Fixed commit": "41508fc5b321cbd8e8747aeec1984860d4d61e3d", "Url": "https://api.github.com/repos/thomsonreuters/Elektron-SDK", "Date": "2017-02-14T15:16:04Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((deletedText.length()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/602/buggy-version/src.gx.realtime.CollaborativeString.java", "BodyUseAPI": [], "Fixed commit": "d5e0d40bdb963f830a71305bd1110e200b973985", "Url": "https://api.github.com/repos/mkrause/gx", "Date": "2013-06-13T13:42:41Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (model != null) { sessionId = model.getDocument().getSession().getSessionId(); userId = model.getDocument().getMe().getUserId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/602/buggy-version/src.gx.realtime.CollaborativeString.java", "BodyUseAPI": [], "Fixed commit": "d5e0d40bdb963f830a71305bd1110e200b973985", "Url": "https://api.github.com/repos/mkrause/gx", "Date": "2013-06-13T13:42:41Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(e.getValueIsAdjusting())) doTableSelection();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6775/buggy-version/src.main.java.org.reactome.cytoscape.pgm.TableAndPlotActionSynchronizer.java", "BodyUseAPI": [], "Fixed commit": "13a3f1b54459a261c33aff8a3a203d45e96b9fa7", "Url": "https://api.github.com/repos/reactome-fi/CytoscapePlugIn", "Date": "2015-02-17T00:02:57Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sid == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5516/buggy-version/openmeetings-db.src.main.java.org.apache.openmeetings.db.dao.server.SessiondataDao.java", "BodyUseAPI": [], "Fixed commit": "2357db3f9df3eee1568d371895a1a5c889c06013", "Url": "https://api.github.com/repos/apache/openmeetings", "Date": "2017-10-01T09:22:36Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hash == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5516/buggy-version/openmeetings-db.src.main.java.org.apache.openmeetings.db.dao.server.SOAPLoginDao.java", "BodyUseAPI": [], "Fixed commit": "2357db3f9df3eee1568d371895a1a5c889c06013", "Url": "https://api.github.com/repos/apache/openmeetings", "Date": "2017-10-01T09:22:36Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNetworkAvailable()) { mBackgroundFetchr.execute(mBlogUrl, ((com.sapps.www.tumblrapp.FavoriteFragment.mOffset) + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/553/buggy-version/app.src.main.java.com.sapps.www.tumblrapp.FavoriteFragment.java", "BodyUseAPI": [], "Fixed commit": "6f5ee101b64bc35b315b98a2b0f82ee56fa13e82", "Url": "https://api.github.com/repos/tytra2206/TumblrApp", "Date": "2014-08-28T09:09:18Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (urlString.substring(((urlString.length()) - 3)).equals(\"gif\")) { if (k == 2) { item.setLargeUrl(urlString); }else if (k == 4) { item.setSmallUrl(urlString); } }else { if (k == 0) { item.setLargeUrl(urlString); }else if (k == 4) { item.setSmallUrl(urlString); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/553/buggy-version/app.src.main.java.com.sapps.www.tumblrapp.TumblrFetchr.java", "BodyUseAPI": ["com.sapps.www.tumblrapp.GalleryItem.setSmallUrl(java.lang.String)", "com.sapps.www.tumblrapp.GalleryItem.setSmallUrl(java.lang.String)", "com.sapps.www.tumblrapp.GalleryItem.setLargeUrl(java.lang.String)", "com.sapps.www.tumblrapp.GalleryItem.setLargeUrl(java.lang.String)"], "Fixed commit": "6f5ee101b64bc35b315b98a2b0f82ee56fa13e82", "Url": "https://api.github.com/repos/tytra2206/TumblrApp", "Date": "2014-08-28T09:09:18Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teardowall.services.WebSiteService.getDomain(java.lang.String)", "com.teardowall.services.WebSiteService.getSecondDomain(java.lang.String)", "java.util.Iterator<com.teardowall.models.Icon>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((icon.getKeyword().equals(domain)) || (icon.getKeyword().equals(secondDomain))) { return icon.getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6328/buggy-version/src.main.java.com.teardowall.services.WebSiteService.java", "BodyUseAPI": ["com.teardowall.models.Icon.getId()"], "Fixed commit": "bcc07321a72410c34ba42a7ad70eba3717014a90", "Url": "https://api.github.com/repos/liyang1069/teardowall", "Date": "2017-01-12T13:58:49Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<com.teardowall.models.Icon>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.teardowall.common.Common.stringIsEmpty(icon.getKeyword())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6328/buggy-version/src.main.java.com.teardowall.services.WebSiteService.java", "BodyUseAPI": [], "Fixed commit": "bcc07321a72410c34ba42a7ad70eba3717014a90", "Url": "https://api.github.com/repos/liyang1069/teardowall", "Date": "2017-01-12T13:58:49Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hosts == null) { mHosts = java.util.Collections.emptyList(); }else { mHosts = hosts; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3627/buggy-version/src.com.nilhcem.hostseditor.list.ListHostsAdapter.java", "BodyUseAPI": [], "Fixed commit": "921d10a3cab848c3556957eca7b0a1c6b4a4af39", "Url": "https://api.github.com/repos/Nilhcem/hosts-editor-android", "Date": "2013-12-28T08:36:31Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((x + ((hitbox.width) / 2)) / 32) > ((com.github.propra13.gruppeA3.Map.Map.ROOMWIDTH) - 1)) uebertritt = com.github.propra13.gruppeA3.Entities.Moveable.Direction.RIGHT; else if (((x - ((hitbox.width) / 2)) / 32) < 0) uebertritt = com.github.propra13.gruppeA3.Entities.Moveable.Direction.LEFT; else if (((y + ((hitbox.height) / 2)) / 32) > ((com.github.propra13.gruppeA3.Map.Map.ROOMHEIGHT) - 1)) uebertritt = com.github.propra13.gruppeA3.Entities.Moveable.Direction.DOWN; else if (((y - ((hitbox.height) / 2)) / 32) < 0) uebertritt = com.github.propra13.gruppeA3.Entities.Moveable.Direction.UP; else { actualField = getRoom().getField(getPosition()); com.github.propra13.gruppeA3.Map.Field nextField = getRoom().getField((x / 32), (y / 32)); if (((lastField) == null) || (nextField != (actualField))) { lastField = actualField; } getPosition().setPosition(x, y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8407/buggy-version/src.com.github.propra13.gruppeA3.Entities.Moveable.java", "BodyUseAPI": ["com.github.propra13.gruppeA3.Map.Position.setPosition(int,int)", "com.github.propra13.gruppeA3.Map.Room.getField(int,int)"], "Fixed commit": "6b395b2b35cb40093039c0b03799bde043d48164", "Url": "https://api.github.com/repos/propra13-orga/gruppeA3", "Date": "2013-07-10T11:58:10Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uebertritt != (com.github.propra13.gruppeA3.Entities.Moveable.Direction.NONE)) { switch (uebertritt) { case UP : getPosition().setPosition(x, ((hitbox.height) / 2)); break; case LEFT : getPosition().setPosition(((hitbox.width) / 2), y); break; case DOWN : getPosition().setPosition(x, (((com.github.propra13.gruppeA3.Map.Map.ROOMHEIGHT) * 32) - ((hitbox.height) / 2))); break; case RIGHT : getPosition().setPosition((((com.github.propra13.gruppeA3.Map.Map.ROOMWIDTH) * 32) - ((hitbox.width) / 2)), y); break; default : break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8407/buggy-version/src.com.github.propra13.gruppeA3.Entities.Moveable.java", "BodyUseAPI": [], "Fixed commit": "6b395b2b35cb40093039c0b03799bde043d48164", "Url": "https://api.github.com/repos/propra13-orga/gruppeA3", "Date": "2013-07-10T11:58:10Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentHand.getHandSize()) != 0) { xMin.clear(); for (int i = 0; i < (currentHand.getHandSize()); i++) { int j = 40; int k = 380 - ((currentHand.getHandSize()) * 20); if (raisedCards.get(i)) g.drawImage(cardImages[(3 - (currentHand.getCardFromLoc(i).getSuit()))][((currentHand.getCardFromLoc(i).getValue()) - 2)], ((i * j) + k), ((PresidentPanel.INITY) + (PresidentPanel.DELTAY)), ((PresidentPanel.WIDTH) / 2), ((PresidentPanel.HEIGHT) / 2), null); else g.drawImage(cardImages[(3 - (currentHand.getCardFromLoc(i).getSuit()))][((currentHand.getCardFromLoc(i).getValue()) - 2)], ((i * j) + k), PresidentPanel.INITY, ((PresidentPanel.WIDTH) / 2), ((PresidentPanel.HEIGHT) / 2), null); xMin.add(((i * j) + k)); } createXMax(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6354/buggy-version/PresidentPanel.java", "BodyUseAPI": ["Hand.getCardFromLoc(int)", "Hand.getCardFromLoc(int)", "currentHand.getCardFromLoc(i).getSuit()", "Hand.getHandSize()", "java.awt.Graphics.drawImage(java.awt.image.BufferedImage,int,int,int,int,<nulltype>)", "currentHand.getCardFromLoc(i).getValue()", "java.awt.Graphics.drawImage(java.awt.image.BufferedImage,int,int,int,int,<nulltype>)", "currentHand.getCardFromLoc(i).getSuit()", "Hand.getHandSize()", "currentHand.getCardFromLoc(i).getValue()", "Hand.getCardFromLoc(int)", "Hand.getCardFromLoc(int)"], "Fixed commit": "f677f952f01ccad0bf98ce3679525ee874d0b2c7", "Url": "https://api.github.com/repos/ypatel38/President", "Date": "2017-05-28T00:33:15Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fields.length) == 1) && ((fields[0]) == null)) { mQueryMap.remove(com.box.androidsdk.content.requests.BoxRequestItem.QUERY_FIELDS); return ((R) (this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8522/buggy-version/box-content-sdk.src.main.java.com.box.androidsdk.content.requests.BoxRequestItem.java", "BodyUseAPI": [], "Fixed commit": "f223d8ea5affccd514de678e642b99564ec3bf6f", "Url": "https://api.github.com/repos/box/box-android-sdk", "Date": "2016-07-30T00:32:25Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yukthi.persistence.annotations.DataTypeMapping.converterType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.yukthi.persistence.conversion.IPersistenceConverter.class.equals(converterType)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6145/buggy-version/yukthi-data.src.main.java.com.yukthi.persistence.conversion.ConversionService.java", "BodyUseAPI": [], "Fixed commit": "51c52d2e6f3ab1804d8263b7afb43f7b68beea2c", "Url": "https://api.github.com/repos/yukthitech/utils", "Date": "2015-10-24T08:24:12Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val.validateData(acc, usr, pwd, cmt, getApplicationContext())) new mobile.tema.passwordkeeper.AddItem.AsyncDB().execute();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7754/buggy-version/app.src.main.java.mobile.tema.passwordkeeper.AddItem.java", "BodyUseAPI": [], "Fixed commit": "681e8604617c9f3632b828e868e4d7459bebdc0a", "Url": "https://api.github.com/repos/matisapatta/PassKeeper", "Date": "2016-05-19T12:07:56Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentPowerCapacity) < 10) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2192/buggy-version/src.main.java.com.mjr.extraplanets.entities.vehicles.EntityPoweredVehicleBase.java", "BodyUseAPI": [], "Fixed commit": "4ed7e50a30277d232eb4a6262b0bf0a7179f8a5c", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-06-07T16:26:09Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.currentPowerCapacity) < 10) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2192/buggy-version/src.main.java.com.mjr.extraplanets.entities.vehicles.EntityPoweredVehicleBase.java", "BodyUseAPI": [], "Fixed commit": "4ed7e50a30277d232eb4a6262b0bf0a7179f8a5c", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-06-07T16:26:09Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.lang.Integer.toString(response.code()).equals(\"201\"))) { callback.onErrorPostOrder(call, new java.lang.Throwable(\"Invalid address!\")); }else { callback.onSuccessPostOrder(response.body()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1533/buggy-version/Android_Spotshop.app.src.main.java.be.fenego.android_spotshop.utilities.ShoppingBasketUtility.java", "BodyUseAPI": ["be.fenego.android_spotshop.callbacks.ShoppingBasketCallback.onSuccessPostOrder(response.body())", "retrofit2.Response<be.fenego.android_spotshop.models.shoppingBasketModels.OrderPostResponse>.body()"], "Fixed commit": "308d12b38c9aa6907820460d317ee7d439f7945e", "Url": "https://api.github.com/repos/Lanssens/it-project-android-app", "Date": "2017-02-09T07:56:59Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((palette_list.size()) > 0) { palette_list.setSelectedPosition(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3757/buggy-version/src.com.torygaurnier.openpalette.MainActivity.java", "BodyUseAPI": ["com.torygaurnier.openpalette.PaletteList.setSelectedPosition(int)"], "Fixed commit": "d0a3161c61ee86f0ebbf2f599fe22d28e553653a", "Url": "https://api.github.com/repos/tgaurnier/OpenPalette", "Date": "2014-08-16T20:54:17Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tracing.views.VariableResources.indicesText) != null) { tracing.views.VariableResources.indicesText.setText(selection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5618/buggy-version/EECE3093SS15.src.tracing.views.VariableResources.java", "BodyUseAPI": [], "Fixed commit": "20673cbedc60dcc97258ca753fd04556a71981b2", "Url": "https://api.github.com/repos/DonNguyen930/SoftwareEngineeringLab3", "Date": "2015-04-16T19:22:20Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.cisco.oss.foundation.logging.structured.AbstractFoundationLoggingMarker.LOGGER) == null) { com.cisco.oss.foundation.logging.structured.AbstractFoundationLoggingMarker.LOGGER = org.slf4j.LoggerFactory.getLogger(com.cisco.oss.foundation.logging.structured.AbstractFoundationLoggingMarker.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1405/buggy-version/logging-api.src.main.java.com.cisco.oss.foundation.logging.structured.AbstractFoundationLoggingMarker.java", "BodyUseAPI": [], "Fixed commit": "9ac6cf2d7de2bff80166c8b2481e9ef1ac00a72c", "Url": "https://api.github.com/repos/foundation-runtime/logging", "Date": "2016-02-28T12:51:37Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value != null) && (value.equals(\"None\"))) { value = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1519/buggy-version/source.org.yawlfoundation.yawl.editor.ui.properties.NetProperties.java", "BodyUseAPI": [], "Fixed commit": "4e02e61079d51e180a5da9e5b4272962ab9fcb0e", "Url": "https://api.github.com/repos/yawlfoundation/editor", "Date": "2016-09-30T15:42:17Z"},
{"Line": "=>1270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastRes == 0) && (startPos > 0)) { istream = new java.io.ByteArrayInputStream(data, startPos, ((data.length) - startPos)); }else if (lastRes > 0) { bos.reset(); bos.write('\\n'); bos.write(data); istream = new java.io.ByteArrayInputStream(bos.toByteArray()); contentLength = bos.size(); bos.close(); }else { istream = new java.io.ByteArrayInputStream(data); contentLength = data.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8987/buggy-version/src.org.monazilla.v2c.V2CHttpUtil.java", "BodyUseAPI": [], "Fixed commit": "0ee7e3d5e00deda03e6d5fc7712f8cd1b6b1714e", "Url": "https://api.github.com/repos/v2c-patch/V2C_api", "Date": "2015-03-15T09:48:41Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.indexOf(',')) > 0) { name = name.split(\",\")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2213/buggy-version/src.main.java.de.saly.elasticsearch.importer.imap.ldap.LdapLoginSource.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "8adf828c29729cbf80a7d7bac8a9b040edc47a8e", "Url": "https://api.github.com/repos/salyh/elasticsearch-imap", "Date": "2015-11-11T16:24:10Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdMobView) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8151/buggy-version/mopub-sdk.src.main.java.com.mopub.mobileads.GoogleAdMobBanner.java", "BodyUseAPI": [], "Fixed commit": "f1461d82d6a034ef97eab2b002350363f437d143", "Url": "https://api.github.com/repos/theely/mopub-android-sdk", "Date": "2013-11-13T13:13:57Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((server) != null) { server.close(); server = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7538/buggy-version/src.main.java.com.github.migi_1.context.networking.serverside.Host.java", "BodyUseAPI": [], "Fixed commit": "1ecb6fc8654d1a45a93b24ada41c528fd8ca8662", "Url": "https://api.github.com/repos/LMiljak/ContextMigi-1", "Date": "2016-04-30T11:43:15Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["useremail.getText().toString().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(email)) { android.widget.Toast.makeText(getApplicationContext(), \"Enter email address!\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/117/buggy-version/app.src.main.java.com.example.codetribe.my_kid.CreateTeacherAccount.java", "BodyUseAPI": [], "Fixed commit": "1c94c49cae063fdf4a899b5b4590edbb393d1229", "Url": "https://api.github.com/repos/MasheshaInnovatorz/My-Kid-", "Date": "2017-10-12T18:25:23Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((fileName == null) || (fileName.isEmpty())) throw new com.sun.javaws.exceptions.InvalidArgumentException(new java.lang.String[]{ \"The given filename was null or the string was empty\" });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6881/buggy-version/src.main.java.com.fiuba.tdd.logger.writers.FileAppender.java", "BodyUseAPI": [], "Fixed commit": "e7b664329712081a0e8b1d658204bbeae70e8184", "Url": "https://api.github.com/repos/alegmarra/tdd-tp1-logger", "Date": "2014-05-14T10:50:05Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((interruptPlayer) != null) interruptPlayer.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7816/buggy-version/src.SwingDemo.java", "BodyUseAPI": [], "Fixed commit": "bf922f559636814c3267f9f5ebaf60a642a07351", "Url": "https://api.github.com/repos/Republic-of-Gondor/Client", "Date": "2016-06-05T04:56:38Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((net.getDefaultNodeTable().getColumn(\"expandable\")) != null) { expandable = EvolvoApp.internal.Attr.Attr(net, node, \"expandable\").Bool(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2075/buggy-version/EvolvoApp.src.main.java.EvolvoApp.internal.CyActivator.java", "BodyUseAPI": ["EvolvoApp.internal.Attr.Attr(net, node, \"expandable\").Bool(boolean)", "EvolvoApp.internal.Attr.Attr(org.cytoscape.model.CyNetwork,org.cytoscape.model.CyNode,java.lang.String)"], "Fixed commit": "75d675d2e6a79acce2bd51c84f086ca958e126a1", "Url": "https://api.github.com/repos/samadlotia/evolvo", "Date": "2013-03-06T18:14:18Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cytoscape.view.model.CyNetworkView.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (EvolvoApp.internal.CyActivator.replaceParentNode(net)) { subnet.addNode(parentNode); for (final org.cytoscape.model.CyEdge edge : rootnet.getAdjacentEdgeIterable(parentNode, CyEdge.Type.ANY)) if ((subnet.containsNode(edge.getSource())) && (subnet.containsNode(edge.getTarget()))) subnet.addEdge(edge); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2075/buggy-version/EvolvoApp.src.main.java.EvolvoApp.internal.CyActivator.java", "BodyUseAPI": [], "Fixed commit": "75d675d2e6a79acce2bd51c84f086ca958e126a1", "Url": "https://api.github.com/repos/samadlotia/evolvo", "Date": "2013-03-06T18:14:18Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getCastTime()) > timeleft) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5440/buggy-version/src.se.wowsim.spells.Immolate.java", "BodyUseAPI": [], "Fixed commit": "d7e3dbdbf0cb6d43f6e776eb9f8c75828d179f5f", "Url": "https://api.github.com/repos/SimJarr/wowsim", "Date": "2017-01-29T00:16:34Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getCastTime()) > timeLeft) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5440/buggy-version/src.se.wowsim.spells.Spell.java", "BodyUseAPI": [], "Fixed commit": "d7e3dbdbf0cb6d43f6e776eb9f8c75828d179f5f", "Url": "https://api.github.com/repos/SimJarr/wowsim", "Date": "2017-01-29T00:16:34Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((computer) == null) java.lang.System.err.println(((\"WARNING: network interface for \" + (this)) + \"'s socket connection is null.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/918/buggy-version/src.minicraft.network.MinicraftServerThread.java", "BodyUseAPI": [], "Fixed commit": "75726653e37e81ea5d3f77ce4da7ed48a193dccf", "Url": "https://api.github.com/repos/chrisj42/minicraft-plus-revived", "Date": "2017-07-22T01:01:16Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getPlayer().getBedSpawnLocation()) != null) { e.getPlayer().setCompassTarget(e.getPlayer().getBedSpawnLocation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1796/buggy-version/src.us.aaronweiss.weisscraft.SmartCompassListener.java", "BodyUseAPI": ["e.getPlayer().getBedSpawnLocation()", "org.bukkit.event.player.PlayerJoinEvent.getPlayer()", "org.bukkit.event.player.PlayerJoinEvent.getPlayer()", "e.getPlayer().setCompassTarget(e.getPlayer().getBedSpawnLocation())"], "Fixed commit": "940b99364d7de45cc13ff7ba0057c36b6ebdad05", "Url": "https://api.github.com/repos/aaronweiss74/weisscraft", "Date": "2012-07-05T20:02:37Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.startsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (legacyApproach) { final java.util.Set<java.lang.String> noParamMethodNames = new java.util.HashSet<java.lang.String>(); for (final java.util.Iterator<java.lang.reflect.Method> it = allMethods.iterator(); it.hasNext();) { final java.lang.reflect.Method method = it.next(); final java.lang.Class<?>[] parameterTypes = method.getParameterTypes(); if ((parameterTypes == null) || ((parameterTypes.length) == 0)) { final boolean added = noParamMethodNames.add(method.getName()); if (!added) { it.remove(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/238/buggy-version/core.src.main.java.org.eobjects.analyzer.util.ReflectionUtils.java", "BodyUseAPI": [], "Fixed commit": "73ccfe36664bca617996ac0360777603ff04c274", "Url": "https://api.github.com/repos/datacleaner/AnalyzerBeans", "Date": "2014-08-19T18:14:58Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index < 0) index = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3024/buggy-version/src.main.java.core.MessagesPersistence.java", "BodyUseAPI": [], "Fixed commit": "d25cd17bd8eec0a06f04354f1bc17cec59b90925", "Url": "https://api.github.com/repos/FrutosBQ/ChatKataServer", "Date": "2013-12-13T11:05:34Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getEntity()) instanceof net.minecraft.entity.monster.EntityMob) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/674/buggy-version/src.main.java.com.minecolonies.coremod.permissions.ColonyPermissionEventHandler.java", "BodyUseAPI": [], "Fixed commit": "16a769683bbe712f03144adc2127ef80dbecff46", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2017-02-27T14:00:11Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.EdgeInfo.getHighway()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (controller.OSMRouting.hierarchyHashMap.containsKey(highway)) { hierarchy = controller.OSMRouting.hierarchyHashMap.get(highway); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7688/buggy-version/OpenStreetMap.src.controller.OSMRouting.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Fixed commit": "5efad99170328ac5ffa702cfeda7850d27a0a32c", "Url": "https://api.github.com/repos/usunyu/CleanPath", "Date": "2013-10-29T20:54:50Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((pushdownFilters != null) && (!(pushdownFilters.toMap().isEmpty()))) { if (!(mergedFilters.isEmpty())) { this.filters.put(\"$and\", pushdownFilters); }else { this.filters = pushdownFilters; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1269/buggy-version/contrib.storage-mongo.src.main.java.org.apache.drill.exec.store.mongo.MongoRecordReader.java", "BodyUseAPI": ["com.mongodb.DBObject.put(java.lang.String,com.mongodb.DBObject)"], "Fixed commit": "aba8d150b6075a1eda06fdd4621a80878cf1c422", "Url": "https://api.github.com/repos/kameshb/incubator-drill", "Date": "2014-09-12T13:30:58Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (defs.find(namespaceToUpdate).isEmpty()) { java.lang.String nsPrefixBase = com.alibaba.citrus.springext.support.SchemaUtil.getNamespacePrefix((schema == null ? null : schema.getPreferredNsPrefix()), namespaceToUpdate); java.lang.String nsPrefix = nsPrefixBase; for (int i = 1; existingPrefixes.contains(nsPrefix); i++) { nsPrefix = nsPrefixBase + i; } defs.add(new com.alibaba.ide.plugin.eclipse.springext.util.dom.DomDocumentUtil.NamespaceDefinition(namespaceToUpdate, nsPrefix, getSchemaLocations())); if (schema != null) { getSchemaLocations().put(namespaceToUpdate, (locationPrefix + (schema.getName()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6170/buggy-version/eclipse.springext-eclipse-plugin.src.main.java.com.alibaba.ide.plugin.eclipse.springext.util.dom.AddRemoveNamespaceVisitor.java", "BodyUseAPI": ["getSchemaLocations().put(java.lang.String,(locationPrefix + (schema.getName())))", "com.alibaba.citrus.springext.support.SchemaUtil.getNamespacePrefix((schema == null ? null : schema.getPreferredNsPrefix()),java.lang.String)", "com.alibaba.ide.plugin.eclipse.springext.util.dom.DomDocumentUtil.NamespaceDefinitions.add(com.alibaba.ide.plugin.eclipse.springext.util.dom.DomDocumentUtil.NamespaceDefinition)"], "Fixed commit": "2747488955462cb665f8a80623910128a01073ef", "Url": "https://api.github.com/repos/webx/citrus-tool", "Date": "2013-02-04T07:13:56Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.foudroyantfactotum.mod.fousarchive.command.CommandPianoRollID.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pt.size()) == 0) pt.add(org.apache.commons.lang3.tuple.Pair.of(com.foudroyantfactotum.mod.fousarchive.command.CommandPianoRollID.SearchMatch.Title, \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2852/buggy-version/src.main.java.com.foudroyantfactotum.mod.fousarchive.command.CommandPianoRollID.java", "BodyUseAPI": ["java.util.List<org.apache.commons.lang3.tuple.Pair<com.foudroyantfactotum.mod.fousarchive.command.CommandPianoRollID.SearchMatch, java.lang.String>>.add(org.apache.commons.lang3.tuple.Pair.of(com.foudroyantfactotum.mod.fousarchive.command.CommandPianoRollID.SearchMatch.Title, \"\"))"], "Fixed commit": "35debb9762d0e07cc75d3510127c1b848dd22c44", "Url": "https://api.github.com/repos/FoudroyantFactotum/Fous_Archive", "Date": "2016-07-21T13:50:34Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraftforge.fml.common.FMLCommonHandler.instance().getSide()) == (net.minecraftforge.fml.relauncher.Side.CLIENT)) te.rollDisplayPosition = 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2852/buggy-version/src.main.java.com.foudroyantfactotum.mod.fousarchive.blocks.Structure.PlayerPiano.BlockPlayerPiano.java", "BodyUseAPI": [], "Fixed commit": "35debb9762d0e07cc75d3510127c1b848dd22c44", "Url": "https://api.github.com/repos/FoudroyantFactotum/Fous_Archive", "Date": "2016-07-21T13:50:34Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getSource()) instanceof javax.swing.JButton) { gui.GUI.setfinalSize(((javax.swing.JButton) (e.getSource())), new java.awt.Dimension(29, 27)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3578/buggy-version/src.gui.SorterTab.java", "BodyUseAPI": ["gui.GUI.setfinalSize(java.lang.Object,java.awt.Dimension)", "java.awt.event.ActionEvent.getSource()"], "Fixed commit": "e1dc4d32833c8f4618c09d7ed4c7ad16c14e35e7", "Url": "https://api.github.com/repos/DominikRidder/ImageExtractor", "Date": "2015-10-08T06:31:54Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((listOfFiles.length) > 0) { utils.SaverLoader.loadSettings(app, (\"savedGames/\" + (listOfFiles[((listOfFiles.length) - 1)].getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6346/buggy-version/src.driver.Driver.java", "BodyUseAPI": ["utils.SaverLoader.loadSettings(org.newdawn.slick.AppGameContainer,java.lang.String)", "java.io.File.getName()"], "Fixed commit": "68cacdd4bbf1e9fef96e85c9b44c062911bc15e9", "Url": "https://api.github.com/repos/mjfalkenstein/Slick2D-Project", "Date": "2015-08-06T14:55:42Z"},
{"Line": "=>8", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i <= 0) { return java.lang.String.valueOf(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/615/buggy-version/src.main.java.features.mouse.FizzBuzz.java", "BodyUseAPI": ["java.lang.String.valueOf(int)"], "Fixed commit": "35cef88c1b272654837152226013a4368b619daf", "Url": "https://api.github.com/repos/devst/devst_awaji_mouse", "Date": "2012-03-31T06:47:40Z"},
{"Line": "=>946", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.opencsv.CSVReader.readNext()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((csvRow.length) < 4) { getUI().showNotification(\"Invalid CSV file. File should contain 4 columns: 'FieldName', 'DatabaseId', 'DatabaseType', 'UoM'\", Type.WARNING_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6543/buggy-version/src.main.java.com.bringit.experiment.ui.form.ExperimentForm.java", "BodyUseAPI": [], "Fixed commit": "a8b0a550e6d5472c285bb44710f70159f81090cd", "Url": "https://api.github.com/repos/bringitps/ExperimentDesigner", "Date": "2017-04-07T18:41:42Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (albumPath != null) { java.nio.file.Path folderJpg = albumPath.resolve(\"folder.jpg\"); java.nio.file.Files.copy(task.getLocalImagePath(), folderJpg, java.nio.file.StandardCopyOption.REPLACE_EXISTING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5915/buggy-version/dynamo-core.src.main.java.dynamo.backlog.tasks.music.SetAlbumImageExecutor.java", "BodyUseAPI": ["java.nio.file.Path.resolve(java.lang.String)"], "Fixed commit": "6d85fbc7b5d4abce9acca8af24fe4bb815ec1d78", "Url": "https://api.github.com/repos/mozvip/dynamo", "Date": "2016-07-31T18:37:33Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.spine3.server.storage.datastore.tenant.Namespace.TenantIdConverter.isCustomConvertionExpected()) { return org.spine3.server.storage.datastore.tenant.Namespace.TenantIdConverter.PREDEFINED_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3465/buggy-version/gcd.src.main.java.org.spine3.server.storage.datastore.tenant.Namespace.java", "BodyUseAPI": [], "Fixed commit": "f6df5350c5ca9177afad774fb3b6dd197e64db13", "Url": "https://api.github.com/repos/SpineEventEngine/gcloud-java", "Date": "2017-04-18T13:23:15Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7484/buggy-version/src.Player.java", "BodyUseAPI": [], "Fixed commit": "501ed1e7c676690e95c68c38e1f1428d35b2d28f", "Url": "https://api.github.com/repos/bucaar/BlackJack", "Date": "2016-12-01T19:39:49Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((!(\"\".equals(trainingDataRowAsString))) && (trainingDataRowAsString != null)) { haiku += trainingDataRowAsString; haiku += \" \"; }else if ((!(\"\".equals(haiku))) && ((\"\".equals(trainingDataRowAsString)) || (null == trainingDataRowAsString))) { java.lang.String taggedHaiku = posTagger.tag(haiku); trainingDataDatabaseAccessor.insertPattern(taggedHaiku); java.lang.System.out.println(((haiku + \" ----> \") + taggedHaiku)); haiku = \"\"; if (trainingDataRowAsString == null) { break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1128/buggy-version/src.main.java.com.haikuMasterPatternsProcessor.main.HaikuMasterPatternsProcessor.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "2507f972fb10dd7dc79d8dc34fbb74d533d4aaf4", "Url": "https://api.github.com/repos/ares2015/HaikuMasterPatternsProcessor", "Date": "2017-02-04T19:58:22Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((offset + count) > (cdata.length())) { count = (cdata.length()) - offset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8682/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": ["org.exist.util.XMLString.length()"], "Fixed commit": "b02a797f0ad3a740e13cb0686da0bd4efc34a7c5", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2017-08-07T15:20:30Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.lex.perf.impl.ChildSeriesType.getChildIndexSeries()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (childIndexSeries == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2078/buggy-version/core.src.main.java.org.lex.perf.impl.IndexFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "32c4d809cc3b41e09aad4aae5181030dde7b8051", "Url": "https://api.github.com/repos/lexas2509/perf", "Date": "2015-05-13T17:01:22Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.lex.perf.impl.IndexSeriesType.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name == null) { org.lex.perf.impl.IndexFactoryImpl.LOGGER.error(\"Bad child definition for {} category\", parent.getName()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2078/buggy-version/core.src.main.java.org.lex.perf.impl.IndexFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "32c4d809cc3b41e09aad4aae5181030dde7b8051", "Url": "https://api.github.com/repos/lexas2509/perf", "Date": "2015-05-13T17:01:22Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MusicService.CurrentSong.size()) > 0) { com.vibz.vibz.MenuActivity.musicSrv.nextSong(); com.vibz.vibz.MenuActivity.seek_bar.setMax(((int) (MusicService.CurrentSong.get(0).getDuration()))); com.vibz.vibz.MenuActivity.songAdt.notifyDataSetChanged(); addFirstSong(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8281/buggy-version/app.src.main.java.com.vibz.vibz.MenuActivity.java", "BodyUseAPI": [], "Fixed commit": "51280265e2ab5ded62b08e3f43b93c86a16b48e9", "Url": "https://api.github.com/repos/clementf/vibz", "Date": "2015-10-27T01:19:49Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.equals(\"label\")) { this.setLabel(((java.lang.String) (val))); }else if (key.equals(\"type\")) { this.setType(((java.lang.String) (val))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3597/buggy-version/src.net.qial.vj.effect.api.Description.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "f8f3dfcc820359beb0ff50cd96071ece6755c377", "Url": "https://api.github.com/repos/qial/qvisuals", "Date": "2016-09-29T19:32:25Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (key == null) { defaults.put(key, val); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3597/buggy-version/src.net.qial.vj.effect.api.Description.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)"], "Fixed commit": "f8f3dfcc820359beb0ff50cd96071ece6755c377", "Url": "https://api.github.com/repos/qial/qvisuals", "Date": "2016-09-29T19:32:25Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myCurrentLocationMarker) != null) { for (com.google.android.gms.maps.model.Marker marker : location_Markers) { if (isWithinFiveKm(marker, myCurrentLocationMarker)) { marker.setAlpha(((float) (1))); }else { marker.setAlpha(((float) (0.3))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7217/buggy-version/Echoes.app.src.main.java.com.example.cmput301f17t19.echoes.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "02902f65c38fe23e70ee8626e46759d4a2387f1c", "Url": "https://api.github.com/repos/CMPUT301F17T19/Echoes", "Date": "2017-11-24T01:53:26Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["addFriendEditText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(friendName.isEmpty())) { com.example.rrhg5930.stickerproject.asynctask.AddFriendTask addFriendTask = new com.example.rrhg5930.stickerproject.asynctask.AddFriendTask(application, sharedPreferences, application.getApplicationContext(), friendName); addFriendTask.execute(); }else { android.widget.Toast.makeText(context, \"You must enter a friend name\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/995/buggy-version/stickerProject.app.src.main.java.com.example.rrhg5930.stickerproject.fragment.FriendListFragment.java", "BodyUseAPI": [], "Fixed commit": "d0763519e0e1b82da1016a331777aca869850830", "Url": "https://api.github.com/repos/kuhnp/stickerProject", "Date": "2015-04-25T18:11:18Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.connorlinfoot.cratesplus.CratesPlus.getPlugin().getConfig().getStringList((\"Crate Items.\" + (crateType.getCode())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((items.size()) <= 9) { size = 9; }else if ((items.size()) <= 18) { size = 18; }else if ((items.size()) <= 27) { size = 27; }else if ((items.size()) <= 36) { size = 36; }else if ((items.size()) <= 45) { size = 45; }else { size = 54; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3640/buggy-version/src.com.connorlinfoot.cratesplus.Listeners.ChestOpen.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "b5663f8b4332a442157f4c2726c088af65025269", "Url": "https://api.github.com/repos/ConnorLinfoot/CratesPlus", "Date": "2015-04-07T10:03:07Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.denimgroup.threadfix.framework.impl.dotNet.ACTION_RESULT.equals(stringValue)) { currentState = com.denimgroup.threadfix.framework.impl.dotNet.DotNetControllerParser.State.ACTION_RESULT; }else if (((type == '(') || (type == ';')) || (type == '{')) { currentState = com.denimgroup.threadfix.framework.impl.dotNet.DotNetControllerParser.State.BODY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6066/buggy-version/threadfix-ham.src.main.java.com.denimgroup.threadfix.framework.impl.dotNet.DotNetControllerParser.java", "BodyUseAPI": [], "Fixed commit": "b5ed077981d181c4eb3b98e3b71bc9c6f0a774e8", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2014-06-26T18:22:21Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((classBraceLevel) == (currentCurlyBrace)) { shouldContinue = false; }else if (com.denimgroup.threadfix.framework.impl.dotNet.PUBLIC.equals(stringValue)) { currentState = com.denimgroup.threadfix.framework.impl.dotNet.DotNetControllerParser.State.PUBLIC_IN_BODY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6066/buggy-version/threadfix-ham.src.main.java.com.denimgroup.threadfix.framework.impl.dotNet.DotNetControllerParser.java", "BodyUseAPI": [], "Fixed commit": "b5ed077981d181c4eb3b98e3b71bc9c6f0a774e8", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2014-06-26T18:22:21Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/600/buggy-version/dropwizard-oauth.src.main.java.smartthings.dw.oauth.AuthResponse.java", "BodyUseAPI": [], "Fixed commit": "797029981b77c14defe94d1a121066297e7b0410", "Url": "https://api.github.com/repos/lbredeso/dropwizard-common", "Date": "2016-12-20T18:31:22Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ID < 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7831/buggy-version/src.mantle.common.MProxyCommon.java", "BodyUseAPI": [], "Fixed commit": "a6f1b671192368d7f3c8456c2b65d2ce682a33de", "Url": "https://api.github.com/repos/SlimeKnights/Mantle", "Date": "2014-04-21T23:33:01Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((MarkerMatchPage.markTreeViewer) != null) && (!(MarkerMatchPage.markTreeViewer.getTree().isDisposed()))) MarkerMatchPage.markTreeViewer.setFilters(new org.eclipse.jface.viewers.ViewerFilter[]{ new eu.modelwriter.marker.ui.internal.wizards.mappingwizard.WizardTreeViewFilter(this.isIndirect) });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2566/buggy-version/Source.eu.modelwriter.marker.ui.src.eu.modelwriter.marker.ui.internal.wizards.mappingwizard.MappingWizard.java", "BodyUseAPI": [], "Fixed commit": "6f11057ea3beb86d6ded7b09bf5d631c8725dd2d", "Url": "https://api.github.com/repos/ModelWriter/WP3", "Date": "2015-12-07T14:46:49Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cursor) != null) cursor.recycle();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6704/buggy-version/src.com.ubicomp.ketdiary.mydaybook.linechart.LineChartView.java", "BodyUseAPI": [], "Fixed commit": "adfdb4838e79b13a2826844dee01b010a4e62e26", "Url": "https://api.github.com/repos/ubicompgithub/KetDiary1", "Date": "2015-07-14T10:25:45Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((conn) == null) { openConnection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/750/buggy-version/CIMS-Web.src.main.java.ServerApp.Database.TasksDatabaseManager.java", "BodyUseAPI": [], "Fixed commit": "ecae8b247ef467ef0c415a9471f531072b3eec57", "Url": "https://api.github.com/repos/PTS4-3/CIMS", "Date": "2015-05-26T14:10:35Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((org.terasology.logic.mod.Mod) (modList.getSelection().getValue())).getModInfo().getId().equals(\"core\"))) { toggleSelectedModActivation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6636/buggy-version/src.main.java.org.terasology.rendering.gui.dialogs.UIDialogMods.java", "BodyUseAPI": [], "Fixed commit": "68430c9a2497630d957e6f595c848dd10c67a815", "Url": "https://api.github.com/repos/MovingBlocks/Terasology", "Date": "2013-06-11T21:03:33Z"},
{"Line": "=>707", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.sourcePosition) != (this.endPosition)) { this.source.formatErrorMessage(\"unconsumed\", this.sourcePosition, \"please report this file to kimio !!\"); org.peg4d.Main._Exit(1, \"Abort!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7608/buggy-version/src.org.peg4d.ParserContext.java", "BodyUseAPI": [], "Fixed commit": "c82f5b9a19fce5fc73183bd4f92bdb27784a8166", "Url": "https://api.github.com/repos/Y--Tamura/peg4d-java", "Date": "2014-07-25T11:12:07Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(itemStack.isEmpty())) { android.support.v4.app.FragmentManager f = getSupportFragmentManager(); f.popBackStack(); currentItem = itemStack.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1235/buggy-version/Quicklook.quicklooklib.src.main.java.cl.uchile.ing.adi.quicklooklib.QuicklookActivity.java", "BodyUseAPI": ["java.util.Stack<cl.uchile.ing.adi.quicklooklib.items.BaseItem>.pop()"], "Fixed commit": "dab9e3225bc7308681adb35e356e7d8ce32e01fb", "Url": "https://api.github.com/repos/Ucampus/quicklook", "Date": "2016-04-30T20:41:01Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((backConn) == null) { throw new java.io.IOException(\"get backend connection error \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3327/buggy-version/src.main.java.com.actiontech.dble.backend.mysql.nio.handler.NewConnectionRespHandler.java", "BodyUseAPI": [], "Fixed commit": "ba13e797e573c6ba172cb6676b8416c64ffc1218", "Url": "https://api.github.com/repos/actiontech/dble", "Date": "2017-10-23T08:31:39Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.compute.vm.VmAllocateHostFlow.prepareMsg(java.util.Map)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((msg.getVmInstance().getHypervisorType()) == null) && ((msg.getVmInstance().getHostUuid()) != null)) { org.zstack.header.host.HostVO vo = dbf.findByUuid(msg.getVmInstance().getHostUuid(), org.zstack.header.host.HostVO.class); msg.getVmInstance().setHypervisorType(vo.getHypervisorType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/780/buggy-version/compute.src.main.java.org.zstack.compute.vm.VmAllocateHostFlow.java", "BodyUseAPI": ["org.zstack.compute.vm.AllocateHostMsg.getVmInstance()", "msg.getVmInstance().setHypervisorType(vo.getHypervisorType())", "org.zstack.compute.vm.AllocateHostMsg.getVmInstance()", "org.zstack.core.db.DatabaseFacade.findByUuid(msg.getVmInstance().getHostUuid(),java.lang.Class)", "msg.getVmInstance().getHostUuid()"], "Fixed commit": "bdd2bc6e896d4b1ca0e4198073b584844c76a255", "Url": "https://api.github.com/repos/oncecloud/cmp-vstack1", "Date": "2016-11-23T07:50:09Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.compute.vm.VmAllocateHostFlow.prepareMsg(java.util.Map)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((msg.getVmInstance().getHypervisorType()) == null) && ((msg.getVmInstance().getClusterUuid()) != null)) { org.zstack.header.cluster.ClusterVO vo = dbf.findByUuid(msg.getVmInstance().getClusterUuid(), org.zstack.header.cluster.ClusterVO.class); msg.getVmInstance().setHypervisorType(vo.getHypervisorType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/780/buggy-version/compute.src.main.java.org.zstack.compute.vm.VmAllocateHostFlow.java", "BodyUseAPI": ["org.zstack.compute.vm.AllocateHostMsg.getVmInstance()", "org.zstack.compute.vm.AllocateHostMsg.getVmInstance()", "org.zstack.core.db.DatabaseFacade.findByUuid(msg.getVmInstance().getClusterUuid(),java.lang.Class)", "msg.getVmInstance().setHypervisorType(vo.getHypervisorType())", "msg.getVmInstance().getClusterUuid()"], "Fixed commit": "bdd2bc6e896d4b1ca0e4198073b584844c76a255", "Url": "https://api.github.com/repos/oncecloud/cmp-vstack1", "Date": "2016-11-23T07:50:09Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(userGroupGroup.isUserGroup())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2089/buggy-version/portal-impl.src.com.liferay.portlet.sites.util.SitesUtil.java", "BodyUseAPI": [], "Fixed commit": "63a0749438e233a90e6db5605b014dbd348a3687", "Url": "https://api.github.com/repos/yuhai/liferay-portal", "Date": "2011-12-13T07:42:11Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.service.permission.GroupPermissionUtil.contains(permissionChecker, userGroupGroup.getGroupId(), ActionKeys.VIEW)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2089/buggy-version/portal-impl.src.com.liferay.portlet.sites.util.SitesUtil.java", "BodyUseAPI": [], "Fixed commit": "63a0749438e233a90e6db5605b014dbd348a3687", "Url": "https://api.github.com/repos/yuhai/liferay-portal", "Date": "2011-12-13T07:42:11Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osgl.inject.BeanSpec.typeParams()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (typeParams.isEmpty()) { rawType0 = java.lang.Object.class; }else { java.lang.reflect.Type theType = typeParams.get((isMap ? 1 : 0)); rawType0 = org.osgl.inject.BeanSpec.rawTypeOf(theType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1619/buggy-version/src.main.java.org.osgl.inject.BeanSpec.java", "BodyUseAPI": ["java.util.List<java.lang.reflect.Type>.get(int)"], "Fixed commit": "8e0a0370ff111abad4a2382ed272bb1a79d381a7", "Url": "https://api.github.com/repos/osglworks/java-di", "Date": "2016-12-21T03:22:22Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["appInfo.metaData.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (authority == null) { throw new java.lang.RuntimeException((\"App must declare the file provider authority as metadata \" + \"in the manifest.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4034/buggy-version/telephony.java.android.telephony.mbms.MbmsDownloadReceiver.java", "BodyUseAPI": [], "Fixed commit": "5f123e6ad6603c83e6f32ccdcdb0576c647bc2df", "Url": "https://api.github.com/repos/aosp-mirror/platform_frameworks_base", "Date": "2017-10-11T23:04:58Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((driver) != null) properties.put(\"javax.persistence.jdbc.driver\", driver);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8194/buggy-version/i0-core.src.main.java.com.thoughtworks.i0.config.DatabaseConfiguration.java", "BodyUseAPI": [], "Fixed commit": "63cc954def308944d663fd3214440432c7610d1c", "Url": "https://api.github.com/repos/vincentx/i0", "Date": "2012-12-10T19:55:35Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((url) != null) properties.put(\"javax.persistence.jdbc.url\", url);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8194/buggy-version/i0-core.src.main.java.com.thoughtworks.i0.config.DatabaseConfiguration.java", "BodyUseAPI": [], "Fixed commit": "63cc954def308944d663fd3214440432c7610d1c", "Url": "https://api.github.com/repos/vincentx/i0", "Date": "2012-12-10T19:55:35Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.quickblox.chat.QBChatService.isInitialized())) { com.quickblox.chat.QBChatService.init(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7584/buggy-version/src.yicheng.android.app.voicetunnel.activity.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "7fe8489b7477a58125e4e842e472f5549261b6d1", "Url": "https://api.github.com/repos/lancevalour/VoiceTunnel", "Date": "2015-01-23T17:52:15Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.aedsicad.aaaweb.service.util.Address.getHerkunftAdress()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (herkunft == null) { herkunft = \"-\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/960/buggy-version/src.main.java.de.cismet.cids.custom.objectrenderer.utils.alkis.AlkisUtils.java", "BodyUseAPI": [], "Fixed commit": "4d28f94ed2d4b62c6e9a8e512d671bb6f6792362", "Url": "https://api.github.com/repos/cismet/cids-custom-wuppertal", "Date": "2014-10-06T07:20:52Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()", "java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(result.endsWith(linefeed))) return result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3688/buggy-version/app.jsondto.Util.java", "BodyUseAPI": [], "Fixed commit": "3756a53fb2f8a99abd0f4b55c8679b359b217630", "Url": "https://api.github.com/repos/jareware/JSON-DTO", "Date": "2011-08-05T07:20:54Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (assignee != null) { user = new org.sonar.core.user.DefaultUser().setLogin(assignee).setName(assignee); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8951/buggy-version/plugins.sonar-core-plugin.src.main.java.org.sonar.plugins.core.issue.IssueHandlers.java", "BodyUseAPI": ["new org.sonar.core.user.DefaultUser().setLogin(assignee).setName(java.lang.String)", "org.sonar.core.user.DefaultUser.setLogin(java.lang.String)"], "Fixed commit": "da6175dd2a55d9a95547d1579ca50f5204885673", "Url": "https://api.github.com/repos/CSchulz/sonar", "Date": "2013-08-14T09:07:33Z"},
{"Line": "=>2218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!lastBound) { blk.append(wyc.stages.Code.IfType(null, Code.THIS_SLOT, bt, exitLabel)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8964/buggy-version/src.wyc.stages.ModuleBuilder.java", "BodyUseAPI": [], "Fixed commit": "04759f0645d2b622073db021142f8c889c858286", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-11-13T07:47:08Z"},
{"Line": "=>630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!lastBound) { blk.append(wyc.stages.Code.IfType(null, Code.THIS_SLOT, wyc.stages.Type.Negation(bt), nextLabel)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8964/buggy-version/src.wyc.stages.ModuleBuilder.java", "BodyUseAPI": [], "Fixed commit": "04759f0645d2b622073db021142f8c889c858286", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-11-13T07:47:08Z"},
{"Line": "=>636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!lastBound) { blk.append(wyc.stages.Code.IfType(null, Code.THIS_SLOT, bt, exitLabel)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8964/buggy-version/src.wyc.stages.ModuleBuilder.java", "BodyUseAPI": [], "Fixed commit": "04759f0645d2b622073db021142f8c889c858286", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-11-13T07:47:08Z"},
{"Line": "=>2212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!lastBound) { blk.append(wyc.stages.Code.IfType(null, Code.THIS_SLOT, wyc.stages.Type.Negation(bt), nextLabel)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8964/buggy-version/src.wyc.stages.ModuleBuilder.java", "BodyUseAPI": [], "Fixed commit": "04759f0645d2b622073db021142f8c889c858286", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-11-13T07:47:08Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value == null) && ((this.getValue()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/266/buggy-version/kie-wb-common-forms.kie-wb-common-forms-commons.kie-wb-common-forms-common-rendering.kie-wb-common-forms-common-rendering-client.src.main.java.org.kie.workbench.common.forms.common.rendering.client.widgets.decimalBox.DecimalBox.java", "BodyUseAPI": [], "Fixed commit": "9c57b1b4d578cc5610790734bd4e4b471cd8fb3d", "Url": "https://api.github.com/repos/hasys/kie-wb-common", "Date": "2017-05-19T10:13:21Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value == null) && ((this.getValue()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/266/buggy-version/kie-wb-common-forms.kie-wb-common-forms-commons.kie-wb-common-forms-common-rendering.kie-wb-common-forms-common-rendering-client.src.main.java.org.kie.workbench.common.forms.common.rendering.client.widgets.integerBox.IntegerBox.java", "BodyUseAPI": [], "Fixed commit": "9c57b1b4d578cc5610790734bd4e4b471cd8fb3d", "Url": "https://api.github.com/repos/hasys/kie-wb-common", "Date": "2017-05-19T10:13:21Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sendEvent) { for (py4j.GatewayServerListener listener : listeners) { try { listener.serverError(e); } catch (java.lang.Exception ex) { logger.log(java.util.logging.Level.SEVERE, \"A listener crashed.\", ex); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/433/buggy-version/py4j-java.src.main.java.py4j.GatewayServer.java", "BodyUseAPI": [], "Fixed commit": "3f7866de085df60f54fc1d6d8c08273577e80955", "Url": "https://api.github.com/repos/bartdag/py4j", "Date": "2016-10-15T08:45:51Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.identity.oauth2.stub.dto.OAuth2TokenValidationResponseDTO.getAuthorizedUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (authorizedUserName.contains(\"@\")) { authorizedUserName = authorizedUserName.split(\"@\")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5567/buggy-version/airavata-api.airavata-api-server.src.main.java.org.apache.airavata.api.server.security.DefaultAiravataSecurityManager.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "67b43ced088a478f1659b5de7c95cc84eda8c514", "Url": "https://api.github.com/repos/apache/airavata", "Date": "2016-05-02T23:15:07Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mDateWidget.isCalendarShown()) || (!(mDateWidget.isDayHidden()))) { linearLayout.addView(mTimeWidget); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3502/buggy-version/collect_app.src.main.java.org.odk.collect.android.widgets.DateTimeWidget.java", "BodyUseAPI": [], "Fixed commit": "afc34e9c8dc910b94c38c19bd7694ac2634f83c7", "Url": "https://api.github.com/repos/grzesiek2010/collect", "Date": "2017-04-12T16:12:13Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (title.contains(\".\")) title = title.substring(0, ((title.length()) - 4));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4732/buggy-version/OMDBMovieInfoProvider.src.main.java.nr.localmovies.omdbmovieinfoprovider.OMDBIMovieInfoProvider.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "cecc87f7ae7022952f9fa58daa709007f32db053", "Url": "https://api.github.com/repos/rahmnathan/localmovies-server", "Date": "2017-01-10T18:32:56Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (from instanceof wyil.lang.Constant.List) { to = ((wyil.lang.Constant.List) (from)); }else { wycc.lang.SyntaxError.internalFailure(\"Not implemented!\", \"Converter.java\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1497/buggy-version/modules.wyopcl.src.wyopcl.interpreter.Converter.java", "BodyUseAPI": [], "Fixed commit": "a06c3283453d6537f8b5fb55e4d6262b860504b2", "Url": "https://api.github.com/repos/samminweng/WhileyOpenCL", "Date": "2014-06-17T14:29:06Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (rootCause != null) { org.jrebirth.core.concurrent.JRebirthThreadPoolExecutor.LOGGER.error(\"JTP returned an error with rootCause =>\", rootCause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8514/buggy-version/org.jrebirth.core.src.main.java.org.jrebirth.core.concurrent.JRebirthThreadPoolExecutor.java", "BodyUseAPI": ["org.slf4j.Logger.error(java.lang.String,java.lang.Throwable)"], "Fixed commit": "65c7943002b36b52514e916b6fedddf4470d89a5", "Url": "https://api.github.com/repos/JRebirth/JRebirth", "Date": "2013-08-26T16:43:57Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3520/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "f87b2d425d19cad13dfd116f3ae54169910915b6", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3520/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "f87b2d425d19cad13dfd116f3ae54169910915b6", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (findLast) { DTs.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/561/buggy-version/dt-impact-tracer.src.edu.washington.cs.dt.impact.Main.FigureGenerator.java", "BodyUseAPI": [], "Fixed commit": "b491589a1a4bbf01bba8768bc36e267cea94ab06", "Url": "https://api.github.com/repos/winglam/dependent-tests-impact", "Date": "2017-01-29T09:10:50Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cursor.getColumnIndex(\"title\"))", "android.database.Cursor.getString(cursor.getColumnIndex(\"DDL\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((title == null) || (DDL == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1987/buggy-version/app.src.main.java.io.github.zhaomy6.lifebattery.PlanRecorder.java", "BodyUseAPI": [], "Fixed commit": "cc941fe12312807b86d6da48555d6e00fd370e0d", "Url": "https://api.github.com/repos/alex-myzhao/LifeBattery", "Date": "2016-12-27T17:03:29Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pathId == 0) { sb.append('/'); }else { getPathNameHelper(sb, pathId, showRoots); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2148/buggy-version/BuildStore.priv.src.com.arapiki.disco.model.FileNameSpaces.java", "BodyUseAPI": ["com.arapiki.disco.model.FileNameSpaces.getPathNameHelper(java.lang.StringBuffer,int,boolean)"], "Fixed commit": "e9b40c5e314d9c9c1a5319e84a69b71eeb857104", "Url": "https://api.github.com/repos/northvankiwiguy/Disco-Build-System", "Date": "2011-02-21T22:10:49Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (projectId != null) { bugs = bugDao.getBugs(projectId); }else { bugs = bugDao.getBugs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6997/buggy-version/src.main.java.ru.hse.esadykov.controller.BugListController.java", "BodyUseAPI": ["ru.hse.esadykov.dao.BugDao.getBugs(java.lang.Integer)"], "Fixed commit": "77699b8b727121347e8c48583d70163b0a6a91c9", "Url": "https://api.github.com/repos/Xokker/bugtracking", "Date": "2014-06-14T18:50:47Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["db.getReadableDatabase().rawQuery(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (myCursor.getString(3).equals(\"\")) { excCountArray.add(0); }else { excCountArray.add(myCursor.getString(3).split(\":\", (-1)).length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/752/buggy-version/TartuTrainer.src.com.tartutrainer.fragments.AllProgramsFragment.java", "BodyUseAPI": ["android.database.Cursor.getString(int)", "myCursor.getString(3).split(java.lang.String,int)", "java.util.ArrayList<java.lang.Integer>.add(myCursor.getString(3).split(\":\", (-1)).length)"], "Fixed commit": "2756586c136d49b334bcae6b0266e7a434c5492a", "Url": "https://api.github.com/repos/alarkirikal/tartutrainer", "Date": "2013-12-04T20:13:35Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebugEnabled()) android.util.Log.d(org.altbeacon.bluetooth.BluetoothCrashResolver.TAG, \"We will let this discovery run its course.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/141/buggy-version/src.main.java.org.altbeacon.bluetooth.BluetoothCrashResolver.java", "BodyUseAPI": [], "Fixed commit": "7d051fcbd5c847faffff67bf8814188dfd9381fd", "Url": "https://api.github.com/repos/AltBeacon/android-beacon-library", "Date": "2014-07-30T03:25:43Z"},
{"Line": "=>4461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lb.isArg) lb.idx -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3274/buggy-version/src.jvm.clojure.lang.Compiler.java", "BodyUseAPI": [], "Fixed commit": "10d3932613601b99663c027451d35a05007525de", "Url": "https://api.github.com/repos/MichaelBlume/clojure", "Date": "2015-08-31T04:27:39Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["no.hiof.trace.utils.IntervalParser.parse(android.database.Cursor)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (interval.isCompleted()) intervals.add(interval);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/772/buggy-version/Trace.src.no.hiof.trace.db.DatabaseManager.java", "BodyUseAPI": ["java.util.List<no.hiof.trace.db.model.Interval>.add(no.hiof.trace.db.model.Interval)"], "Fixed commit": "25a737989c190e031eb0b6aadb4277a0f7cfe9ea", "Url": "https://api.github.com/repos/geirskoglund/trace", "Date": "2014-04-25T17:08:57Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(smacBest.equals(\"IGNORE\"))) { autoweka.ConfigurationRanker.forceFirst(choppedList, smacBest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/9209/buggy-version/src.java.autoweka.ConfigurationRanker.java", "BodyUseAPI": ["autoweka.ConfigurationRanker.forceFirst(java.util.ArrayList<autoweka.Configuration>,java.lang.String)"], "Fixed commit": "3c37332b256d9034b1fbd71833d84874a23d3dc9", "Url": "https://api.github.com/repos/otoalves/autoweka", "Date": "2016-06-15T20:37:07Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.g10.lemur.Decibel.Decibel.soundDb()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (volume < 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6906/buggy-version/app.src.main.java.com.g10.lemur.Decibel.Decibel.java", "BodyUseAPI": [], "Fixed commit": "abc56aa3c5f5ffd675a28d9d58698136bb0ec1a3", "Url": "https://api.github.com/repos/Enari/Lemur", "Date": "2016-12-19T09:28:26Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!forCountRow) && (metadata.getModifiers().isRestricting())) { templates.serializeModifiers(metadata, context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6860/buggy-version/querydsl-sql.src.main.java.com.mysema.query.sql.SQLSerializer.java", "BodyUseAPI": ["com.mysema.query.sql.SQLTemplates.serializeModifiers(com.mysema.query.QueryMetadata,com.mysema.query.sql.support.SerializationContext)"], "Fixed commit": "2a85d8eaba3d33191107c9438c270d0c8fecb163", "Url": "https://api.github.com/repos/querydsl/querydsl", "Date": "2011-09-26T06:31:25Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.l) != null) e.unlink();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/12/buggy-version/src.haven.WeakList.java", "BodyUseAPI": ["haven.WeakList.Entry.unlink()"], "Fixed commit": "ca52f66527b65b31a9dd13fbd411ce1a5929f0c6", "Url": "https://api.github.com/repos/elsid/amber", "Date": "2015-09-10T23:19:57Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.jetbrains.java.decompiler.main.DecompilerContext.getPoolInterceptor()) != null) { java.lang.String lookupName = strval; if ((lookupName.charAt(0)) == '[') { lookupName = lookupName.substring(1); } lookupName = lookupName.replace('.', '/'); java.lang.String newName = org.jetbrains.java.decompiler.main.DecompilerContext.getPoolInterceptor().getName(lookupName); if (newName != null) { strval = newName; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1274/buggy-version/src.org.jetbrains.java.decompiler.modules.decompiler.exps.ConstExprent.java", "BodyUseAPI": [], "Fixed commit": "d32e7360f90e3ed6f18c8020ae57382af9090d65", "Url": "https://api.github.com/repos/droid666/fernflower", "Date": "2016-04-22T21:54:22Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.isti.jira.Defaults.getProperties()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (properties.containsKey(key.name())) { out.printf(\"%s: %s (%s)%n\", key.name(), value, properties.getProperty(key.name())); }else { out.printf(\"%s: %s%n\", key.name(), value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4925/buggy-version/src.main.java.com.isti.jira.Defaults.java", "BodyUseAPI": ["java.io.PrintStream.printf(java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "java.io.PrintStream.printf(java.lang.String,java.lang.String,java.lang.String)", "com.isti.jira.Defaults.Key.name()", "com.isti.jira.Defaults.Key.name()", "com.isti.jira.Defaults.Key.name()", "java.util.Properties.getProperty(java.lang.String)"], "Fixed commit": "068cd65e39253f6cde09bccde6b721c83f5a69a2", "Url": "https://api.github.com/repos/andrewcooke-isti/JiraTestResultReporter", "Date": "2014-07-25T17:47:57Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (largerField.isMutable()) { largerField.setValue(maxValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7702/buggy-version/src.main.java.fi.utu.ville.standardutils.ui.MinMaxFieldValidator.java", "BodyUseAPI": [], "Fixed commit": "c0e3d06fd7d9302e75b3d68cedb8c57f5a577863", "Url": "https://api.github.com/repos/villeteam/ville-standardutils", "Date": "2015-08-21T07:10:06Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (smallerField.isMutable()) { smallerField.setValue(minValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7702/buggy-version/src.main.java.fi.utu.ville.standardutils.ui.MinMaxFieldValidator.java", "BodyUseAPI": [], "Fixed commit": "c0e3d06fd7d9302e75b3d68cedb8c57f5a577863", "Url": "https://api.github.com/repos/villeteam/ville-standardutils", "Date": "2015-08-21T07:10:06Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (smallerField.isMutable()) { smallerField.setValue(minValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7702/buggy-version/src.main.java.fi.utu.ville.standardutils.ui.MinMaxFieldValidator.java", "BodyUseAPI": [], "Fixed commit": "c0e3d06fd7d9302e75b3d68cedb8c57f5a577863", "Url": "https://api.github.com/repos/villeteam/ville-standardutils", "Date": "2015-08-21T07:10:06Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedNodeUserObject instanceof edu.wpi.cs.wpisuitetng.modules.planningpoker.model.GameRequirementModel) { selectedReqGame = ((edu.wpi.cs.wpisuitetng.modules.planningpoker.model.GameModel) (((javax.swing.tree.DefaultMutableTreeNode) (((javax.swing.tree.DefaultMutableTreeNode) (selectionPath.getLastPathComponent())).getParent())).getUserObject())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2458/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.main.GamesListPanel.java", "BodyUseAPI": [], "Fixed commit": "e2496e13e79a83ce441bd18d43a4f8ebaf9c0ab4", "Url": "https://api.github.com/repos/dbeckwith/wpi-suite", "Date": "2014-04-16T02:47:28Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bitmaps[0]) == null) { return bitmaps[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5806/buggy-version/DailyAppLib.src.com.dailystudio.app.utils.BitmapUtils.java", "BodyUseAPI": [], "Fixed commit": "0f3b0118e948e25daae28104bf713c99037a7dc8", "Url": "https://api.github.com/repos/dailystudio/dspublic", "Date": "2014-09-28T16:36:43Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tree.root) != null) { open.add(tree.root); while (!(open.isEmpty())) { org.ddogleg.nn.alg.KdTree.Node n = open.remove(((open.size()) - 1)); if ((n.left) != null) open.add(n.left); if ((n.right) != null) open.add(n.right); recycle(n); } tree.root = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1294/buggy-version/src.org.ddogleg.nn.alg.KdTreeMemory.java", "BodyUseAPI": ["java.util.List<KdTree.Node>.add(tree.root)"], "Fixed commit": "a82dd83ed33a4ed31fd5e024008a6162c6e38cf2", "Url": "https://api.github.com/repos/lessthanoptimal/ddogleg", "Date": "2014-08-27T20:24:22Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.actionSystem.AnActionEvent.getProject()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (project == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1055/buggy-version/src.main.java.com.fwdekker.randomness.InsertDataAction.java", "BodyUseAPI": [], "Fixed commit": "afa6f4f5d8eadce1fbeadee66d07aeea5244d412", "Url": "https://api.github.com/repos/FWDekker/intellij-randomness", "Date": "2017-07-16T15:38:05Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modelProps.size()) == 0) model.setType(\"object\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5592/buggy-version/modules.swagger-core.src.main.java.com.wordnik.swagger.jackson.ModelResolver.java", "BodyUseAPI": [], "Fixed commit": "461f4e6d854b3f579b245f79cc02b4786daaf9fc", "Url": "https://api.github.com/repos/swagger-api/swagger-core", "Date": "2015-03-14T02:31:57Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.table[row][column]) != (com.jypec.ebc.SignificanceTable.SignificanceValue.INSIGNIFICANT)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5490/buggy-version/src.com.jypec.ebc.SignificanceTable.java", "BodyUseAPI": [], "Fixed commit": "a54ffe5815707264a4bbef85a1573ee0406e841c", "Url": "https://api.github.com/repos/Daniel-BG/Jypec", "Date": "2017-11-06T16:37:26Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (player_)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6887/buggy-version/app.src.main.java.com.mamewo.podplayer0.PodplayerActivity.java", "BodyUseAPI": [], "Fixed commit": "539e361fcade2742217de16256e646661702b791", "Url": "https://api.github.com/repos/mamewotoko/podplayer", "Date": "2017-01-06T23:12:11Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (player_)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6887/buggy-version/app.src.main.java.com.mamewo.podplayer0.PodplayerActivity.java", "BodyUseAPI": [], "Fixed commit": "539e361fcade2742217de16256e646661702b791", "Url": "https://api.github.com/repos/mamewotoko/podplayer", "Date": "2017-01-06T23:12:11Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (player_)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6887/buggy-version/app.src.main.java.com.mamewo.podplayer0.PodplayerActivity.java", "BodyUseAPI": [], "Fixed commit": "539e361fcade2742217de16256e646661702b791", "Url": "https://api.github.com/repos/mamewotoko/podplayer", "Date": "2017-01-06T23:12:11Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (classname != null) { final java.lang.StringBuilder classNameWithLoaderBuiler = new java.lang.StringBuilder(classname); classNameWithLoaderBuiler.append(java.lang.Thread.currentThread().getContextClassLoader()); if (!(de.cismet.tools.BlacklistClassloading.blacklist.contains(classNameWithLoaderBuiler.toString()))) { try { return java.lang.Class.forName(classname); } catch (java.lang.ClassNotFoundException ex) { de.cismet.tools.BlacklistClassloading.blacklist.add(classNameWithLoaderBuiler.toString()); if (de.cismet.tools.BlacklistClassloading.log.isDebugEnabled()) { de.cismet.tools.BlacklistClassloading.log.debug(((\"Could not load class \" + classname) + \"! Added classname to blacklist\"), ex); } } }else { de.cismet.tools.BlacklistClassloading.log.debug(\"Classname to load was null!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5121/buggy-version/src.main.java.de.cismet.tools.BlacklistClassloading.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String,java.lang.ClassNotFoundException)", "java.lang.Class.forName(java.lang.String)"], "Fixed commit": "e4c73a282b184c3c8c3a8a3e810faa32b6e13442", "Url": "https://api.github.com/repos/cismet/cismet-commons", "Date": "2009-08-24T12:31:11Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getNewValue()) == null) { m_table.setValueAt(m_mField, e.getNewValue(), m_Row, m_Col); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5905/buggy-version/client.org.compiere.browsegrid.VBrowseCellEditor.java", "BodyUseAPI": ["org.compiere.browsegrid.BrowseTable.setValueAt(org.compiere.model.GridField,java.lang.Object,int,int)", "java.beans.PropertyChangeEvent.getNewValue()"], "Fixed commit": "cc7c865edae70441d146bab8eb537c2ab3a589a3", "Url": "https://api.github.com/repos/erpcya/Custom-SmartBrowse", "Date": "2015-02-16T00:07:34Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (conName.startsWith(tgtName)) { result.add(thisCon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6865/buggy-version/src.com.ibm.ets.ita.ce.store.IndexedEntityAccessor.java", "BodyUseAPI": [], "Fixed commit": "adc8b3e593731dd822ef607468d4fe62c6b4b337", "Url": "https://api.github.com/repos/ce-store/ce-store", "Date": "2016-05-16T12:06:56Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pAc.getCeConfig().isCaseSensitive()) { tgtName = pName; }else { tgtName = pName.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6865/buggy-version/src.com.ibm.ets.ita.ce.store.IndexedEntityAccessor.java", "BodyUseAPI": [], "Fixed commit": "adc8b3e593731dd822ef607468d4fe62c6b4b337", "Url": "https://api.github.com/repos/ce-store/ce-store", "Date": "2016-05-16T12:06:56Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.apache.logging.log4j.util.Strings.isBlank(repoId)) { throw new java.lang.IllegalArgumentException(\"repoId must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8573/buggy-version/src.main.java.com.seven10.update_guy.server.manifest.ManifestMgr.java", "BodyUseAPI": [], "Fixed commit": "875a086c9500612cc7149e7084b9edae2a052828", "Url": "https://api.github.com/repos/seven10builder/update-guy", "Date": "2016-07-19T21:17:07Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (View.DUMMY_DATFILE.equals(fileNameObj)) { getTab().getTextComposite().setText(\"\"); getTab().setText(filename); }else { try { java.lang.StringBuilder sb = new java.lang.StringBuilder(); org.nschmidt.ldparteditor.text.UTF8BufferedReader reader = new org.nschmidt.ldparteditor.text.UTF8BufferedReader(fileNameObj.getOldName()); java.lang.String line = reader.readLine(); if (line != null) { sb.append(line); while (true) { java.lang.String line2 = reader.readLine(); if (line2 == null) { break; } sb.append(org.nschmidt.ldparteditor.text.StringHelper.getLineDelimiter()); sb.append(line2); } } java.lang.String originalText = sb.toString(); fileNameObj.setOriginalText(originalText); fileNameObj.parseForData(true); this.datFileObj.getVertexManager().setVertexToReplace(null); this.datFileObj.getVertexManager().setModified_NoSync(); getTab().getTextComposite().setText(originalText); datFileObj.setText(getTab().getTextComposite().getText()); getTab().setText(filename); datFileObj.setLastModified(new java.io.File(datFileObj.getOldName()).lastModified()); } catch (java.io.FileNotFoundException e) { java.lang.Object[] messageArguments = new java.lang.Object[]{ fileNameObj.getOldName() }; java.text.MessageFormat formatter = new java.text.MessageFormat(\"\"); formatter.setLocale(MyLanguage.LOCALE); formatter.applyPattern(I18n.COMPOSITETAB_FileNotFound); getTab().getTextComposite().setText(formatter.format(messageArguments)); datFileObj.setText(\"\"); datFileObj.setOriginalText(\"\"); getTab().setText(getFilenameWithStar()); getTab().getTextComposite().setEditable(false); } catch (org.nschmidt.ldparteditor.text.LDParsingException e) { java.lang.Object[] messageArguments = new java.lang.Object[]{ fileNameObj.getOldName() }; java.text.MessageFormat formatter = new java.text.MessageFormat(\"\"); formatter.setLocale(MyLanguage.LOCALE); formatter.applyPattern(I18n.COMPOSITETAB_FileReadError); getTab().getTextComposite().setText(formatter.format(messageArguments)); datFileObj.setText(\"\"); datFileObj.setOriginalText(\"\"); getTab().getTextComposite().setEditable(false); org.nschmidt.ldparteditor.logger.NLogger.error(getClass(), e); } catch (java.io.UnsupportedEncodingException e) { java.lang.Object[] messageArguments = new java.lang.Object[]{ fileNameObj.getOldName() }; java.text.MessageFormat formatter = new java.text.MessageFormat(\"\"); formatter.setLocale(MyLanguage.LOCALE); formatter.applyPattern(I18n.COMPOSITETAB_FileEncodingError); getTab().getTextComposite().setText(formatter.format(messageArguments)); datFileObj.setText(\"\"); datFileObj.setOriginalText(\"\"); getTab().getTextComposite().setEditable(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6945/buggy-version/src.org.nschmidt.ldparteditor.composites.compositetab.CompositeTabState.java", "BodyUseAPI": ["org.nschmidt.ldparteditor.data.DatFile.getOldName()", "org.nschmidt.ldparteditor.data.DatFile.parseForData(boolean)", "org.nschmidt.ldparteditor.data.DatFile.getOldName()", "org.nschmidt.ldparteditor.data.DatFile.setOriginalText(java.lang.String)", "org.nschmidt.ldparteditor.data.DatFile.getOldName()", "org.nschmidt.ldparteditor.data.DatFile.getOldName()"], "Fixed commit": "b4f61ffa10ee18ba96d315d0d970ca18001a6e15", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-03-13T19:52:15Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.x42.terye.ItemManager.getFromCache(ch.x42.terye.persistence.id.ItemId)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (item != null) { return item; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1363/buggy-version/hbase-firsthops.src.main.java.ch.x42.terye.ItemManager.java", "BodyUseAPI": [], "Fixed commit": "bf92df7b3cd9c54a1c8a7582ee0897d3644585bd", "Url": "https://api.github.com/repos/bdelacretaz/terye", "Date": "2012-11-14T14:23:05Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (arguments.equals(\"\")) { throw new seedu.address.logic.parser.exceptions.ParseException(java.lang.String.format(seedu.address.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, FindSpecificCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/350/buggy-version/src.main.java.seedu.address.logic.parser.FindSpecificCommandParser.java", "BodyUseAPI": [], "Fixed commit": "90252780dff924898c0821552502f8b3fcd04416", "Url": "https://api.github.com/repos/aver0214/addressbook-level4", "Date": "2017-11-09T17:59:11Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((front) == (rear)) { front = -1; rear = -1; }else { front = ((front) + 1) % (maxSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4031/buggy-version/Queue_Stack.Queue.java", "BodyUseAPI": [], "Fixed commit": "854dab465858b77f6681c0412ca7aad971538af7", "Url": "https://api.github.com/repos/vishaljohri/AlgorithmPool", "Date": "2016-07-19T06:38:03Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(datagramChannel.isConnected())) return ((java.net.InetSocketAddress) (datagramChannel.receive(readBuffer)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2969/buggy-version/src.com.esotericsoftware.kryonet.UdpConnection.java", "BodyUseAPI": ["java.nio.channels.DatagramChannel.receive(java.nio.ByteBuffer)"], "Fixed commit": "a47601f26b95d49141db7c8b00c437286f655e66", "Url": "https://api.github.com/repos/desertkun/kryonet", "Date": "2015-10-25T15:11:07Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((event != (Controller.SendObject.EventType.Delete)) && (!isAFolder)) { this.setHash(); }else { this.hash = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7186/buggy-version/src.Controller.SendObject.java", "BodyUseAPI": [], "Fixed commit": "493e5c4b089b418b76400b06904f99f90ad1ba8d", "Url": "https://api.github.com/repos/CICS525-project/NSync-client", "Date": "2014-08-05T01:45:52Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((o1 == null) || (o2 == null)) { return o1 == o2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2846/buggy-version/src.main.java.org.organicdesign.fp.collections.ComparisonContext.java", "BodyUseAPI": [], "Fixed commit": "f33b2fe773d388da82025069a08490cf7771edd3", "Url": "https://api.github.com/repos/GlenKPeterson/Paguro", "Date": "2017-01-13T00:59:49Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((o1 == null) || (o2 == null)) { return o1 == o2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2846/buggy-version/src.main.java.org.organicdesign.fp.collections.ComparisonContext.java", "BodyUseAPI": [], "Fixed commit": "f33b2fe773d388da82025069a08490cf7771edd3", "Url": "https://api.github.com/repos/GlenKPeterson/Paguro", "Date": "2017-01-13T00:59:49Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(input_splitratio[i][j][c])) { splitKnown[i][j][c] = false; computed_splitratio[i][j][c] = 0.0; }else { splitKnown[i][j][c] = true; splitRemaining[i][c] = (splitRemaining[i][c]) - (input_splitratio[i][j][c]); computed_splitratio[i][j][c] = input_splitratio[i][j][c]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4556/buggy-version/src.main.java.edu.berkeley.path.beats.simulator.nodeBeahavior.Node_SplitRatioSolver_Balancing.java", "BodyUseAPI": [], "Fixed commit": "7d04aca664d8df99b13809460e7808247dae8122", "Url": "https://api.github.com/repos/calpath/beats", "Date": "2016-03-16T21:26:21Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(anchorPath)) { sb.append(\"<li>WEB page is having a link for hero panel image but WEM page is not having link for the same hero panel image</li>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6957/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.web.WebVariation1.java", "BodyUseAPI": [], "Fixed commit": "1611d002fe39121d32a53bf5ca13b8266a43db7e", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-01-29T08:04:04Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ele.select(\"div.c50-image\").size()) > 0) && ((ele.select(\"div.c50-image\").first().getElementsByTag(\"a\").size()) > 0)) { org.jsoup.nodes.Element anchorElement = ele.select(\"div.c50-image\").first().getElementsByTag(\"a\").first(); if (anchorElement != null) { anchorPath = anchorElement.absUrl(\"href\"); if (org.apache.commons.lang.StringUtils.isBlank(anchorPath)) { anchorPath = anchorElement.attr(\"href\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6957/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.web.WebVariation1.java", "BodyUseAPI": ["ele.select(\"div.c50-image\").first()", "ele.select(\"div.c50-image\").first().getElementsByTag(java.lang.String)", "org.jsoup.nodes.Element.select(java.lang.String)", "ele.select(\"div.c50-image\").first().getElementsByTag(\"a\").first()"], "Fixed commit": "1611d002fe39121d32a53bf5ca13b8266a43db7e", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-01-29T08:04:04Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tk.thediamondpicks.sc.Bukkit.getPluginManager().isPluginEnabled(\"PlaceholderAPI\")) format = me.clip.placeholderapi.PlaceholderAPI.setPlaceholders(m, format);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8665/buggy-version/src.main.java.tk.thediamondpicks.sc.Chat.java", "BodyUseAPI": [], "Fixed commit": "c3057d0a2bd925149910c2f94b6fba96700481e6", "Url": "https://api.github.com/repos/TheDiamondPicks/staff-chat", "Date": "2017-07-19T21:01:31Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mljr.rabbitmq.RabbitmqClient.newChannel()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (channel != null) { channel.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7185/buggy-version/data-sync.src.main.java.com.mljr.sync.service.GPSService.java", "BodyUseAPI": ["com.rabbitmq.client.Channel.close()"], "Fixed commit": "b3bea245a887ed33a6d4fe957f0e6982605f2028", "Url": "https://api.github.com/repos/ckex/spider", "Date": "2017-01-10T04:44:13Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSessionLocked())) { com.ca.mas.core.MobileSsoFactory.getInstance().logout(true); com.ca.mas.foundation.notify.Callback.onSuccess(callback, null); }else { com.ca.mas.foundation.notify.Callback.onError(callback, new com.ca.mas.core.security.SecureLockException(MASFoundationStrings.SECURE_LOCK_SESSION_CURRENTLY_LOCKED)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/811/buggy-version/MAS.src.main.java.com.ca.mas.foundation.MASUser.java", "BodyUseAPI": [], "Fixed commit": "f80267c55ce7494f9203d7298fbb96e3c99fd0b6", "Url": "https://api.github.com/repos/CAAPIM/Android-MAS-SDK", "Date": "2016-11-03T21:38:49Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (setup) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3661/buggy-version/app.src.main.java.onyeka.is.great.airhockeygustsofwar.GameView.java", "BodyUseAPI": [], "Fixed commit": "856be4215dc3fca04fc690e78efe41a06cb0d906", "Url": "https://api.github.com/repos/johink/AirHockeyGustsofWar", "Date": "2016-05-01T20:18:08Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numberOfDisks < 3) || (numberOfDisks > 25)) { javax.swing.JOptionPane.showMessageDialog(frame, \"Please input a valid integer between 3 and 25 (inclusive)\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5011/buggy-version/src.edu.ucsb.cs56.projects.games.towers_of_hanoi.utility.GUIMain.java", "BodyUseAPI": [], "Fixed commit": "4247cb7ec4b05f24fd9f3e1436cd09c5374750de", "Url": "https://api.github.com/repos/matthewcheung8/cs56-games-towers-of-hanoi", "Date": "2016-03-09T05:33:34Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.realm.Realm.allObjects(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((results.size()) > 0) { avgPerTrackDistanceTextView.setText(java.lang.String.format(\"%.1f\", ((totalDistance / 1000) / (results.size())))); }else { avgPerTrackDistanceTextView.setText(\"0.0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1492/buggy-version/ibikecph-lib.src.main.java.com.spoiledmilk.ibikecph.tracking.TrackingActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "io.realm.RealmResults<com.spoiledmilk.ibikecph.persist.Track>.size()", "java.lang.String.format(java.lang.String,((totalDistance / 1000) / (results.size())))"], "Fixed commit": "7c26b56fef8642b670c7771011a736f41c8590f0", "Url": "https://api.github.com/repos/ibikecph/ibikecph-android", "Date": "2015-03-13T13:37:15Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(c1.getTypeName().startsWith(eu.kunas.pm4j.core.PmAttrImpl.class.getCanonicalName()))) { c1 = getClass().getSuperclass().getGenericSuperclass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2601/buggy-version/src.main.java.eu.kunas.pm4j.core.PmAttrImpl.java", "BodyUseAPI": [], "Fixed commit": "230a4a19f08ae2003384df571bac4bd8e4297761", "Url": "https://api.github.com/repos/rkunas/pm4j", "Date": "2015-07-14T10:44:08Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value != null) { timeIndexStore.add(((org.gephi.graph.api.types.TimeSet) (value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3712/buggy-version/store.src.main.java.org.gephi.graph.impl.ElementImpl.java", "BodyUseAPI": [], "Fixed commit": "c6584d44babff7ab6a30eeada6ec5d4d7ff3ef88", "Url": "https://api.github.com/repos/gephi/graphstore", "Date": "2015-12-20T09:38:08Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value != null) { timeIndexStore.add(((org.gephi.graph.api.types.TimeMap) (value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3712/buggy-version/store.src.main.java.org.gephi.graph.impl.ElementImpl.java", "BodyUseAPI": [], "Fixed commit": "c6584d44babff7ab6a30eeada6ec5d4d7ff3ef88", "Url": "https://api.github.com/repos/gephi/graphstore", "Date": "2015-12-20T09:38:08Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (options.containsKey(\"stepSize\")) { org.appcelerator.titanium.util.Log.d(\"@@##\", (\"obj2 stepSize vale = \" + (options.get(\"stepSize\")))); stepSize = java.lang.Float.parseFloat(options.getString(\"stepSize\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1019/buggy-version/src.titutorial.ratingbar.ExampleProxy.java", "BodyUseAPI": ["org.appcelerator.titanium.util.Log.d(java.lang.String,(\"obj2 stepSize vale = \" + (options.get(\"stepSize\"))))", "java.lang.Float.parseFloat(options.getString(\"stepSize\"))", "org.appcelerator.kroll.KrollDict.get(java.lang.String)", "org.appcelerator.kroll.KrollDict.getString(java.lang.String)"], "Fixed commit": "64f9c1b1f9c690d875bba7e68eabcb26ea75976f", "Url": "https://api.github.com/repos/railskarthi/Ratingbar", "Date": "2013-07-29T10:41:53Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonObject.getAsJsonArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((buildArray.size()) == 0) { dateReached = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3950/buggy-version/jtravis.src.main.java.fr.inria.spirals.jtravis.helpers.BuildHelper.java", "BodyUseAPI": [], "Fixed commit": "91ce7bba6c2cb5eda5e6810b54dde10966506834", "Url": "https://api.github.com/repos/Spirals-Team/repairnator", "Date": "2017-01-04T13:58:32Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((grid[place.getY()][place.getX()]) != 'S') { grid[place.getY()][place.getX()] = 'x'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2071/buggy-version/11BFS.Maze.java", "BodyUseAPI": ["Maze.Loci.getY()", "Maze.Loci.getX()"], "Fixed commit": "ee96d1ad453f7e301550f041dca28cb2fa23d69a", "Url": "https://api.github.com/repos/Weihwu/APCS-HW-Period-6-Spring2015", "Date": "2015-04-11T03:26:41Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parser.hasNext()) extendedInfo.set(\"state\", parser.next());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5610/buggy-version/src.org.traccar.protocol.Tk103ProtocolDecoder.java", "BodyUseAPI": ["org.traccar.protocol.Parser.next()", "org.traccar.model.ExtendedInfoFormatter.set(java.lang.String,parser.next())"], "Fixed commit": "f91b247362108a913231c2cd5dfdb77bbb724b64", "Url": "https://api.github.com/repos/sparselabs/GpsDataServer", "Date": "2016-08-24T05:41:15Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.isEnum()) { actualValue = ((java.lang.Enum) (value)).name(); }else { actualValue = value.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2473/buggy-version/json.src.main.java.com.tomtom.speedtools.json.SimpleJsonSerializer.java", "BodyUseAPI": [], "Fixed commit": "1d1a56bf6e926001b4b1c76b68b668b24a1062d5", "Url": "https://api.github.com/repos/tomtom-international/speedtools", "Date": "2015-05-05T16:54:51Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5571/buggy-version/app.src.main.java.edu.kit.isco.kitalumniapp.adapter.EventAdapter.java", "BodyUseAPI": [], "Fixed commit": "2bd79027ec64040c99e7bf629ca97b5940b16998", "Url": "https://api.github.com/repos/maksim-m/KitAlumniApp-Client", "Date": "2015-03-22T19:10:36Z"},
{"Line": "=>1630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.animator.isAnimating())) { util.swing.SwingUtil.log(\"restarting animator after dialog close\"); this.animator.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7922/buggy-version/src.earthshape.EarthMapCanvas.java", "BodyUseAPI": ["com.jogamp.opengl.util.Animator.start()"], "Fixed commit": "69ffb781780d436b8a3eda48f9a1c44bc92da749", "Url": "https://api.github.com/repos/smcpeak/earthshape", "Date": "2017-03-19T14:16:33Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (goingBack) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4579/buggy-version/src.entity.projectile.boomerangProjectile.BoomerangProjectile.java", "BodyUseAPI": [], "Fixed commit": "dac8f133c082fb6144e9788c4d5c9ceb75f27de2", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-01-06T06:41:23Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.getCurrentEquippedItem()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/9102/buggy-version/src.main.java.com.forgeessentials.core.commands.selections.WandController.java", "BodyUseAPI": [], "Fixed commit": "81ddc778a1c88dee0051785b54684934f35b2282", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentialsMain", "Date": "2014-09-03T01:13:07Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((c >= 97) && (c <= 102)) { choice = c - 'a'; if (choice < (freeCharacters.size())) { this.character = freeCharacters.get(choice); freeCharacters.remove(choice); }else java.lang.System.out.println(\"Sorry, your choice is not valid. Please try again.\"); }else java.lang.System.out.println(\"Sorry, your choice is not valid. Please try again.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/267/buggy-version/src.cluedo.Player.java", "BodyUseAPI": [], "Fixed commit": "8c9b77946fafeb91a1d12410acf2ccbbb9d63038", "Url": "https://api.github.com/repos/imaginaryCorn/cludo", "Date": "2016-08-02T11:45:29Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (play.modules.morphia.MorphiaPlugin.idType_)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5837/buggy-version/src.play.modules.morphia.MorphiaPlugin.java", "BodyUseAPI": [], "Fixed commit": "495f2424cb9fef03e90fd6c536bacb25cb227d5c", "Url": "https://api.github.com/repos/dbusch/play-morphia", "Date": "2011-11-15T19:29:02Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.JsonNode.findValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (userSO != null) { tempMapCache.put(\"UserId\", userSO.asText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4333/buggy-version/src.main.java.de.passau.uni.sec.compose.pdp.servioticy.authz.AuthorizationServioticy.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.asText()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,userSO.asText())"], "Fixed commit": "6a5b5646c9d5e3bd2d6c8555f53f59ff5ddb28d4", "Url": "https://api.github.com/repos/nopbyte/servioticy-pdp", "Date": "2014-09-26T19:54:47Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.commands.operations.OperationHistoryEvent.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (status != null) { builder.appendln(\"status:\").lines(sk.stuba.fiit.perconik.debug.Debug.dumpStatus(status)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6769/buggy-version/sk.stuba.fiit.perconik.debug.src.sk.stuba.fiit.perconik.debug.Debug.java", "BodyUseAPI": ["builder.appendln(\"status:\").lines(java.lang.String)", "sk.stuba.fiit.perconik.debug.Debug.dumpStatus(org.eclipse.core.runtime.IStatus)"], "Fixed commit": "01a8c54b95ef14e631a1502740cd18c09f918679", "Url": "https://api.github.com/repos/pavolzbell/perconik", "Date": "2013-07-29T08:00:20Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.filebuffers.IFileBuffer.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (status != null) { builder.appendln(\"status:\").lines(sk.stuba.fiit.perconik.debug.Debug.dumpStatus(status)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6769/buggy-version/sk.stuba.fiit.perconik.debug.src.sk.stuba.fiit.perconik.debug.Debug.java", "BodyUseAPI": ["builder.appendln(\"status:\").lines(java.lang.String)", "sk.stuba.fiit.perconik.debug.Debug.dumpStatus(org.eclipse.core.runtime.IStatus)"], "Fixed commit": "01a8c54b95ef14e631a1502740cd18c09f918679", "Url": "https://api.github.com/repos/pavolzbell/perconik", "Date": "2013-07-29T08:00:20Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((mips.Call) (instruction)).getDest()) != (-1)) writeRtlRegister(((mips.Call) (instruction)).getDest(), MipsRegister.V0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4760/buggy-version/src.mips.MIPSGenerator.java", "BodyUseAPI": ["mips.MIPSGenerator.writeRtlRegister(((mips.Call) (instruction)).getDest(),MipsRegister.V0)", "java.lang.Object.getDest()"], "Fixed commit": "36c805d00dc1357559e0c5320ef2121f62587131", "Url": "https://api.github.com/repos/margnus1/micro-c", "Date": "2014-03-06T15:43:19Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dict.contains(item))) dict.addElement(item);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1487/buggy-version/LeapBind.src.SMA.server.MultiPlayAgent.java", "BodyUseAPI": ["javax.swing.DefaultListModel<java.lang.String>.addElement(java.lang.String)"], "Fixed commit": "b68d8320e3e9dfaeb4f326e703967577468bf418", "Url": "https://api.github.com/repos/hukewei/leapband", "Date": "2014-05-19T23:17:44Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other instanceof org.eclipse.imp.pdb.facts.INumber) { return equal(((org.eclipse.imp.pdb.facts.INumber) (other))).getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1228/buggy-version/src.org.eclipse.imp.pdb.facts.impl.fast.IntegerValue.java", "BodyUseAPI": [], "Fixed commit": "25b7e41efa7af9fc6d4999f06f5a2fdf92c38e5d", "Url": "https://api.github.com/repos/impulse-org/pdb.values", "Date": "2012-12-27T13:04:07Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (currentWorkingContract != null) { modifications.add(closeCurrentContract(accountabilityTypeEnum, currentWorkingContract, begin.minusDays(1), log, logger)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7988/buggy-version/src.main.java.pt.ist.fenix.giafsync.ImportEmployeeUnitsFromGiaf.java", "BodyUseAPI": ["java.util.List<pt.ist.fenix.giafsync.GiafSync.Modification>.add(pt.ist.fenix.giafsync.GiafSync.Modification)", "pt.ist.fenix.giafsync.ImportEmployeeUnitsFromGiaf.closeCurrentContract(net.sourceforge.fenixedu.domain.organizationalStructure.AccountabilityTypeEnum,net.sourceforge.fenixedu.domain.organizationalStructure.Contract,begin.minusDays(1),java.io.PrintWriter,org.slf4j.Logger)"], "Fixed commit": "d6d8b7fdb1bd9a27832fc79582852315a8a982ba", "Url": "https://api.github.com/repos/jcarvalho/fenix-ist", "Date": "2014-11-06T15:53:57Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.example.stream.eb.launcher.LauncherScrollDelegate.INTEGERS.isEmpty()) { com.example.stream.eb.launcher.LauncherScrollDelegate.INTEGERS.add(R.mipmap.launcher_01); com.example.stream.eb.launcher.LauncherScrollDelegate.INTEGERS.add(R.mipmap.launcher_02); com.example.stream.eb.launcher.LauncherScrollDelegate.INTEGERS.add(R.mipmap.launcher_03); com.example.stream.eb.launcher.LauncherScrollDelegate.INTEGERS.add(R.mipmap.launcher_04); com.example.stream.eb.launcher.LauncherScrollDelegate.INTEGERS.add(R.mipmap.launcher_05); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1522/buggy-version/stream-eb.src.main.java.com.example.stream.eb.launcher.LauncherScrollDelegate.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.add(R.mipmap.launcher_01)", "java.util.ArrayList<java.lang.Integer>.add(R.mipmap.launcher_02)", "java.util.ArrayList<java.lang.Integer>.add(R.mipmap.launcher_03)", "java.util.ArrayList<java.lang.Integer>.add(R.mipmap.launcher_05)", "java.util.ArrayList<java.lang.Integer>.add(R.mipmap.launcher_04)"], "Fixed commit": "85d086506836520ce449224942effe7a6aca8762", "Url": "https://api.github.com/repos/streamj/JX", "Date": "2017-08-18T18:04:00Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.networknt.status.Status.statusSerializer) != null) { return com.networknt.status.Status.statusSerializer.serializeStatus(this); }else { return (((((((\"{\\\"statusCode\\\":\" + (getStatusCode())) + \",\\\"code\\\":\\\"\") + (getCode())) + \"\\\",\\\"message\\\":\\\"\") + (getMessage())) + \"\\\",\\\"description\\\":\\\"\") + (getDescription())) + \"\\\"}\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7076/buggy-version/status.src.main.java.com.networknt.status.Status.java", "BodyUseAPI": [], "Fixed commit": "0e37f5a826853e12af7be818f7c78492bbcbfebf", "Url": "https://api.github.com/repos/networknt/light-4j", "Date": "2017-11-08T12:21:31Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (player != null) { if (isSpectating(player)) { event.setCancelled(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3149/buggy-version/src.main.java.net.dmulloy2.ultimatearena.handlers.SpectatingHandler.java", "BodyUseAPI": ["net.dmulloy2.ultimatearena.handlers.SpectatingHandler.isSpectating(org.bukkit.entity.Player)"], "Fixed commit": "31d717702430e7bad9d0122632daeda57a50fd1e", "Url": "https://api.github.com/repos/MineSworn/UltimateArena", "Date": "2014-08-11T23:08:16Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getEntity()) instanceof org.bukkit.entity.Player) { player = ((org.bukkit.entity.Player) (event.getEntity())); }else if ((event.getEntity()) instanceof org.bukkit.entity.Projectile) { org.bukkit.entity.Projectile proj = ((org.bukkit.entity.Projectile) (event.getEntity())); if ((proj.getShooter()) instanceof org.bukkit.entity.Player) player = ((org.bukkit.entity.Player) (proj.getShooter())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3149/buggy-version/src.main.java.net.dmulloy2.ultimatearena.handlers.SpectatingHandler.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDamageEvent.getEntity()", "org.bukkit.event.entity.EntityDamageEvent.getEntity()", "org.bukkit.event.entity.EntityDamageEvent.getEntity()"], "Fixed commit": "31d717702430e7bad9d0122632daeda57a50fd1e", "Url": "https://api.github.com/repos/MineSworn/UltimateArena", "Date": "2014-08-11T23:08:16Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.TypeVariable<?>.getBounds()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((bounds.length) == 1) && (boundZero instanceof java.lang.reflect.ParameterizedType)) { java.lang.reflect.Type ata = ((java.lang.reflect.ParameterizedType) (boundZero)).getActualTypeArguments()[0]; if (targetType.equals(ata)) { return org.eclipse.gemini.blueprint.blueprint.container.TypeFactory.OBJECT; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5650/buggy-version/core.src.main.java.org.eclipse.gemini.blueprint.blueprint.container.TypeFactory.java", "BodyUseAPI": [], "Fixed commit": "55b99a79e9e79d41c47954210f5b74f7a79aa14e", "Url": "https://api.github.com/repos/mattbishop/gemini.blueprint", "Date": "2012-11-21T22:49:52Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(val.equals(source.getAccessPath()))) if ((((enableStaticFields) && (newAbs.getAccessPath().isStaticFieldRef())) || (((val.getType()) instanceof soot.RefType) && ((newAbs.getAccessPath().getType()) instanceof soot.RefType))) || (triggerInaktiveTaintOrReverseFlow(val.getPlainValue(), newAbs))) computeAliasTaints(d1, ((soot.jimple.Stmt) (iStmt)), val.getPlainValue(), res, interproceduralCFG().getMethodOf(iStmt), newAbs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1949/buggy-version/src.soot.jimple.infoflow.problems.InfoflowProblem.java", "BodyUseAPI": ["soot.jimple.infoflow.data.AccessPath.getPlainValue()", "soot.jimple.infoflow.problems.InfoflowProblem.computeAliasTaints(soot.jimple.infoflow.data.Abstraction,soot.jimple.Stmt,val.getPlainValue(),java.util.Set<soot.jimple.infoflow.data.Abstraction>,interproceduralCFG().getMethodOf(iStmt),soot.jimple.infoflow.data.Abstraction)", "soot.jimple.infoflow.data.AccessPath.getPlainValue()", "soot.jimple.infoflow.data.AccessPath.getType()", "soot.jimple.infoflow.problems.InfoflowProblem.triggerInaktiveTaintOrReverseFlow(val.getPlainValue(),soot.jimple.infoflow.data.Abstraction)"], "Fixed commit": "8619dc9113ddb003a20020c85246eb2bd13e3062", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow", "Date": "2013-12-05T14:41:00Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(newSource.getAccessPath().isEmpty())) { if ((assignStmt.getRightOp()) instanceof soot.jimple.LengthExpr) { assert (newSource.getAccessPath().getType()) instanceof soot.ArrayType; targetType = soot.IntType.v(); }else if ((assignStmt.getRightOp()) instanceof soot.jimple.CastExpr) { soot.jimple.CastExpr cast = ((soot.jimple.CastExpr) (assignStmt.getRightOp())); if (((cast.getType()) instanceof soot.ArrayType) && (!(targetType instanceof soot.ArrayType))) { assert targetType instanceof soot.RefType; assert ((soot.RefType) (targetType)).getSootClass().getName().equals(\"java.lang.Object\"); targetType = cast.getType(); } } if (targetType != null) { if (leftValue instanceof soot.jimple.ArrayRef) targetType = soot.ArrayType.v(targetType, 1); else if ((assignStmt.getRightOp()) instanceof soot.jimple.ArrayRef) targetType = ((soot.ArrayType) (targetType)).getArrayElementType(); } }else assert targetType == null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1949/buggy-version/src.soot.jimple.infoflow.problems.InfoflowProblem.java", "BodyUseAPI": ["soot.jimple.infoflow.data.Abstraction.getAccessPath()", "newSource.getAccessPath().getType()"], "Fixed commit": "8619dc9113ddb003a20020c85246eb2bd13e3062", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow", "Date": "2013-12-05T14:41:00Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((assignStmt.getRightOp()) instanceof soot.jimple.LengthExpr) targetType = null; else if ((assignStmt.getRightOp()) instanceof soot.jimple.CastExpr) targetType = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1949/buggy-version/src.soot.jimple.infoflow.problems.BackwardsInfoflowProblem.java", "BodyUseAPI": ["soot.jimple.AssignStmt.getRightOp()"], "Fixed commit": "8619dc9113ddb003a20020c85246eb2bd13e3062", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow", "Date": "2013-12-05T14:41:00Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pileNames.contains(name)) { return; }else if (name.equals((\"Pile \" + (se.chalmers.touchdeck.gamecontroller.GameController.pileNo)))) { (se.chalmers.touchdeck.gamecontroller.GameController.pileNo)++; gs.setDefaultPileNo(se.chalmers.touchdeck.gamecontroller.GameController.pileNo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/118/buggy-version/src.se.chalmers.touchdeck.gamecontroller.GameController.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "09d2e48098168f38f1d3d473fc565c4de9fdad34", "Url": "https://api.github.com/repos/sebiva/TouchDeck", "Date": "2013-10-02T12:11:07Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTable.get(id)) != null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/118/buggy-version/src.se.chalmers.touchdeck.gamecontroller.GameController.java", "BodyUseAPI": [], "Fixed commit": "09d2e48098168f38f1d3d473fc565c4de9fdad34", "Url": "https://api.github.com/repos/sebiva/TouchDeck", "Date": "2013-10-02T12:11:07Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.diffplug.gradle.spotless.FormatterStep.format(java.lang.String,java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (formatted == null) { }else { unix = com.diffplug.gradle.spotless.LineEnding.toUnix(formatted); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7486/buggy-version/src.main.java.com.diffplug.gradle.spotless.Formatter.java", "BodyUseAPI": ["com.diffplug.gradle.spotless.LineEnding.toUnix(java.lang.String)"], "Fixed commit": "503a24cc300de9f0e004ff211458df9691fd8174", "Url": "https://api.github.com/repos/diffplug/spotless", "Date": "2016-10-31T23:21:09Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((param.args[0]) != null) hookUncaughtException(param.args[0].getClass());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1694/buggy-version/app.src.main.java.tk.wasdennnoch.scoop.XposedHook.java", "BodyUseAPI": ["tk.wasdennnoch.scoop.XposedHook.1.hookUncaughtException(param.args[0].getClass())", "param.args[0].getClass()"], "Fixed commit": "9c7a8c8a61d3534858f443e24debae9ca0d81bf1", "Url": "https://api.github.com/repos/wasdennnoch/Scoop", "Date": "2016-12-26T18:47:13Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.doula.controllers.ClassroomController.findAllByOrderByOrderId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lessons.isEmpty()) { model.addAttribute(\"location\", \"Classroom\"); model.addAttribute(\"message\", \"There are no lessons in the database yet...\"); return \"empty\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8914/buggy-version/src.main.java.com.doula.controllers.ClassroomController.java", "BodyUseAPI": [], "Fixed commit": "8428645f10868db06643048e7d4b90fa513f7ede", "Url": "https://api.github.com/repos/twyllie/doula", "Date": "2017-04-19T21:14:42Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.aurora.vc.VcCache.getIgnoreMissing(event.getVm().getVm())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (vm == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4119/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.service.sp.VmEventProcessor.java", "BodyUseAPI": [], "Fixed commit": "45a7087b5740f4afca89de290e861e1ff181d39d", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-11-20T02:48:55Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.aurora.vc.VcCache.getIgnoreMissing(event.getVm().getVm())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((clusterEntityMgr.getNodeByVmName(vm.getName())) != null) { com.vmware.bdd.service.sp.VmEventProcessor.logger.info((((((\"received vhm event \" + (event.getEventTypeId())) + \" for vm \") + (vm.getName())) + \": \") + (event.getMessage()))); clusterEntityMgr.refreshNodeByVmName(moId, vm.getName(), event.getMessage(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4119/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.service.sp.VmEventProcessor.java", "BodyUseAPI": ["com.vmware.bdd.manager.ClusterEntityManager.refreshNodeByVmName(java.lang.String,vm.getName(),event.getMessage(),boolean)", "com.vmware.aurora.vc.VcVirtualMachine.getName()", "org.apache.log4j.Logger.info((((((\"received vhm event \" + (event.getEventTypeId())) + \" for vm \") + (vm.getName())) + \": \") + (event.getMessage())))", "com.vmware.aurora.vc.VcVirtualMachine.getName()"], "Fixed commit": "45a7087b5740f4afca89de290e861e1ff181d39d", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-11-20T02:48:55Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t instanceof org.talend.daikon.avro.util.MappedValueMap.MappedValueEntry) return ((org.talend.daikon.avro.util.MappedValueMap<KeyT, InT, OutT>.MappedValueEntry) (t)).getWrapped(); else return new java.util.AbstractMap.SimpleEntry(t.getKey(), mOutFunction.apply(t.getValue()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1358/buggy-version/daikon.src.main.java.org.talend.daikon.avro.util.MappedValueMap.java", "BodyUseAPI": ["java.util.Map.Entry<KeyT, OutT>.getKey()", "java.util.Map.Entry<KeyT, OutT>.getValue()", "org.talend.daikon.java8.Function<OutT, InT>.apply(OutT)"], "Fixed commit": "9ed5415ebbca0461e9f2bdbc6343cedaa6007f75", "Url": "https://api.github.com/repos/sizhaoliu/daikon", "Date": "2016-04-19T13:00:01Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((findViewById(R.id.fragment_container)) != null) { if (savedInstanceState != null) { return; } edu.washington.apache78.FlashStudy.fragments.FlashCardActivityFragment first = new edu.washington.apache78.FlashStudy.fragments.FlashCardActivityFragment(); first.setArguments(getIntent().getExtras()); getFragmentManager().beginTransaction().add(R.id.fragment_container, first).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/9004/buggy-version/app.src.main.java.edu.washington.apache78.FlashStudy.activities.FlashCardActivity.java", "BodyUseAPI": [], "Fixed commit": "b14227eaa6b6f99611f18a187335dd6e967d2cb5", "Url": "https://api.github.com/repos/apache78/Flash-Study", "Date": "2015-06-09T06:29:19Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxSize == 0) { maxSize = 96; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3173/buggy-version/MPDroid.src.com.namelessdev.mpdroid.views.AlbumDataBinder.java", "BodyUseAPI": [], "Fixed commit": "6ccae5696da4a3f205d2987942fcf0f41fdeb72d", "Url": "https://api.github.com/repos/abarisain/dmix", "Date": "2013-02-19T05:06:03Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.getInventory().getName().equals(name))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6020/buggy-version/GameBladeAPI.src.main.java.org.stormdev.gbapi.gui.IconMenu.java", "BodyUseAPI": [], "Fixed commit": "13acb9312183a22ffb785e1611e73933cbca7d01", "Url": "https://api.github.com/repos/storm345dev/GameBladeAPI", "Date": "2014-12-02T18:18:54Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((files.length) == 1) && (files[0].isDirectory())) { tempExpandedZipFile = files[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8171/buggy-version/org.mule.tooling.devkit.src.org.mule.tooling.devkit.wizards.ConnectorZippedProjectImportPage.java", "BodyUseAPI": [], "Fixed commit": "3e5ea707c5b1d40fad012ee2c64457cd5788d5e6", "Url": "https://api.github.com/repos/mulesoft/mule-tooling-incubator", "Date": "2014-08-20T14:15:23Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((files.length) == 1) && (files[0].isDirectory())) { tempExpandedZipFile = files[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8171/buggy-version/org.mule.tooling.devkit.src.org.mule.tooling.devkit.wizards.ConnectorZippedProjectImportPage.java", "BodyUseAPI": [], "Fixed commit": "3e5ea707c5b1d40fad012ee2c64457cd5788d5e6", "Url": "https://api.github.com/repos/mulesoft/mule-tooling-incubator", "Date": "2014-08-20T14:15:23Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.length()) != 0) { org.eclipse.swt.dnd.Clipboard cb = new org.eclipse.swt.dnd.Clipboard(org.eclipse.swt.widgets.Display.getCurrent()); java.lang.String textData = result.toString(); org.eclipse.swt.dnd.TextTransfer transfer = org.eclipse.swt.dnd.TextTransfer.getInstance(); cb.setContents(new java.lang.Object[]{ textData }, new org.eclipse.swt.dnd.Transfer[]{ transfer }); cb.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6938/buggy-version/main.plugins.org.talend.mdm.repository.src.main.java.org.talend.mdm.repository.ui.actions.CopyUrlAction.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()"], "Fixed commit": "c69467a6575ccf699ee9356609a45d981fc98559", "Url": "https://api.github.com/repos/Talend/tmdm-studio-se", "Date": "2015-05-19T03:57:40Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["root.children.get(sequencer.hashOf(query, 0))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((node.children) == null) { return putReturnNull(node, value, query, queryOffset, queryLength); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5848/buggy-version/src.org.magnos.trie.Trie.java", "BodyUseAPI": ["org.magnos.trie.Trie<S, T>.putReturnNull(org.magnos.trie.TrieNode<S, T>,T,S,int,int)"], "Fixed commit": "ebbae0bf863f105e3b42ea690f91b2da84e79722", "Url": "https://api.github.com/repos/ClickerMonkey/TrieHard", "Date": "2013-08-26T17:51:12Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wall) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2449/buggy-version/src.evidence.gui.RenderCanvas.java", "BodyUseAPI": [], "Fixed commit": "ac8fe59b2478632ee1aaad6fbddae3c89b6eb24e", "Url": "https://api.github.com/repos/georginamurphy/Evidence", "Date": "2016-09-28T13:14:23Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.dataconservancy.dcs.access.http.dataPackager.DcsDeliverableUnit>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newSip.getDeliverableUnits().contains(du)) return newSip;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2465/buggy-version/SEAD-VA-extensions.dcs-access.sead-access-http.src.main.java.org.dataconservancy.dcs.access.http.dataPackager.ZipPackageCreator.java", "BodyUseAPI": [], "Fixed commit": "d8e87161f9b8ffb44a36c5429077dd22a63824f3", "Url": "https://api.github.com/repos/Data-to-Insight-Center/sead-virtual-archive", "Date": "2015-03-03T20:46:18Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (expertList != null) { com.tencent.qcloud.suixinbo.model.CurLiveInfo.expertList.addAll(expertList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/9116/buggy-version/suixinbo.src.main.java.com.tencent.qcloud.suixinbo.model.CurLiveInfo.java", "BodyUseAPI": ["java.util.List<com.tencent.qcloud.suixinbo.model.MemberID>.addAll(java.util.List<com.tencent.qcloud.suixinbo.model.MemberID>)"], "Fixed commit": "a5266b53d1007749a695412dc47218931b8a410c", "Url": "https://api.github.com/repos/wWX152939/hospital", "Date": "2017-04-20T13:32:04Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((saveSettings) != null) && ((lastMeasurementInformation) != null)) { try { measurement.setInitialMeasurementContextProperty(\"baseFolder\", lastMeasurementInformation.getMeasurementBaseFolder()); } catch (java.lang.Exception e) { ServerSystem.err.println(\"Could not set variable \\\"baseFolder\\\" in measurement context telling the measurement where it is saved.\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7045/buggy-version/youscope-server.src.org.youscope.server.MeasurementSaverImpl.java", "BodyUseAPI": [], "Fixed commit": "a994cdff57972a0ccae8b09cf00913a7c1a6c6f0", "Url": "https://api.github.com/repos/langmo/youscope", "Date": "2017-11-06T15:57:42Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) { req.allowScanningByMediaScanner(); req.setNotificationVisibility(Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7060/buggy-version/src.de.saschahlusiak.frupic.grid.FruPicGrid.java", "BodyUseAPI": [], "Fixed commit": "d0e6ebefab695970455744c162c64b091c71a305", "Url": "https://api.github.com/repos/shlusiak/FruPic-App", "Date": "2012-07-26T09:34:51Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) { req.allowScanningByMediaScanner(); req.setNotificationVisibility(Request.VISIBILITY_VISIBLE_NOTIFY_COMPLETED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7060/buggy-version/src.de.saschahlusiak.frupic.gallery.FruPicGallery.java", "BodyUseAPI": [], "Fixed commit": "d0e6ebefab695970455744c162c64b091c71a305", "Url": "https://api.github.com/repos/shlusiak/FruPic-App", "Date": "2012-07-26T09:34:51Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.unbiquitous.uos.core.network.model.NetworkDevice.getNetworkDeviceName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (addr.contains(\":\")) { addr = addr.split(\":\")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6625/buggy-version/src.org.unbiquitous.uos.core.adaptabitilyEngine.AdaptabilityEngine.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "5b3c6c11874dbeebed6cc988a37823ff2df7f67b", "Url": "https://api.github.com/repos/UnBiquitous/uos_core", "Date": "2014-03-22T13:56:48Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cursorPos) > (value.length())) { cursorPos = value.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4252/buggy-version/src.main.java.io.github.craftedcart.fluidui.component.TextField.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "1cb8e1fef10b7d1ba4ecd1fd88a940f36bca8836", "Url": "https://api.github.com/repos/CraftedCart/FluidUI", "Date": "2016-10-12T19:45:41Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cursorIsBeforeTrimmedText(searchText)) { java.lang.String st = this.searchText.toString().toUpperCase(); searchText = st.substring(((st.length()) - (cursorTask.getCursorIndex())), ((st.length()) - i)); i++; }else { searchText = searchText.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8347/buggy-version/src.main.java.rge.ui.component.Panel.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "03d88ab5a459f021f7c4180c8901993eb8177d7d", "Url": "https://api.github.com/repos/cristianrgreco/runescape-grand-exchange", "Date": "2016-07-29T13:44:30Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t1.getDueDate()) == null) { return (t2.getDueDate()) == null ? 0 : -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/190/buggy-version/app.src.main.java.rdoshi.codepath.todoapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a99ec4b4a610046c685f20b5c216a116488b626c", "Url": "https://api.github.com/repos/doshprompt/codepath-todoapp", "Date": "2017-02-24T20:42:16Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t2.getDueDate()) == null) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/190/buggy-version/app.src.main.java.rdoshi.codepath.todoapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a99ec4b4a610046c685f20b5c216a116488b626c", "Url": "https://api.github.com/repos/doshprompt/codepath-todoapp", "Date": "2017-02-24T20:42:16Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(command instanceof edu.isi.karma.controller.command.ResetKarmaCommand)) { edu.isi.karma.controller.history.CommandHistoryWriter chWriter = new edu.isi.karma.controller.history.CommandHistoryWriter(history, vWorkspace); try { chWriter.writeHistoryPerWorksheet(); } catch (org.json.JSONException e) { logger.error(\"Error occured while writing history!\", e); e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7749/buggy-version/src.main.java.edu.isi.karma.controller.history.CommandHistory.java", "BodyUseAPI": [], "Fixed commit": "2374072eca9896bbcbcb1e691afad943fb6ac093", "Url": "https://api.github.com/repos/InformationIntegrationGroup/Web-Karma", "Date": "2013-02-28T18:37:09Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.List<okhttp3.Cookie>>.get(url.host())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cookies == null) { cookies = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1565/buggy-version/app.src.main.java.ca.appvelopers.mcgillmobile.util.manager.McGillManager.java", "BodyUseAPI": [], "Fixed commit": "bcc256c6a2d3eaa6eae8b6e66558803f44646adc", "Url": "https://api.github.com/repos/sangmoonhwang/MyMartlet-Android", "Date": "2016-04-05T11:44:19Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((((mStartDate) != null) && ((mEndDate) != null)) && ((mNearestDay) != null)) && (mEndDate.equals(mNearestDay))) && (mEndDate.equals(calendarDay))) { }else { if (((((mStartDate) != null) && ((mEndDate) == null)) && ((mNearestDay) != null)) && (cellCalendar.equals(mNearestDay))) { mDayTextPaint.setColor(mDayTextColor); }else { drawDayBg(canvas, x, y, mBusyDayBgPaint); mDayTextPaint.setColor(mBusyDaysTextColor); } canvas.drawText(\"\u5df2\u79df\", x, getTextYCenter(mBusyDayBgPaint, (y + ((com.henry.calendarview.SimpleMonthView.DAY_SELECTED_RECT_SIZE) / 2))), mDayTextPaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2531/buggy-version/library.src.main.java.com.henry.calendarview.SimpleMonthView.java", "BodyUseAPI": ["SimpleMonthAdapter.CalendarDay.equals(SimpleMonthAdapter.CalendarDay)"], "Fixed commit": "1ad1a4374e7b5a79d20c83d136cc79b688d33f56", "Url": "https://api.github.com/repos/henry-newbie/CalendarView", "Date": "2016-07-02T09:46:12Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((((mStartDate) != null) && ((mEndDate) != null)) && ((mNearestDay) != null)) && (mEndDate.equals(mNearestDay))) && (mEndDate.equals(calendarDay))) { }else { if (((((mStartDate) != null) && ((mEndDate) == null)) && ((mNearestDay) != null)) && (cellCalendar.equals(mNearestDay))) { mDayTextPaint.setColor(mDayTextColor); }else { drawDayBg(canvas, x, y, mInValidDayBgPaint); mDayTextPaint.setColor(mInValidDaysTextColor); } canvas.drawText(\"\u7981\u7528\", x, getTextYCenter(mInValidDayBgPaint, (y + ((com.henry.calendarview.SimpleMonthView.DAY_SELECTED_RECT_SIZE) / 2))), mDayTextPaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2531/buggy-version/library.src.main.java.com.henry.calendarview.SimpleMonthView.java", "BodyUseAPI": ["SimpleMonthAdapter.CalendarDay.equals(SimpleMonthAdapter.CalendarDay)"], "Fixed commit": "1ad1a4374e7b5a79d20c83d136cc79b688d33f56", "Url": "https://api.github.com/repos/henry-newbie/CalendarView", "Date": "2016-07-02T09:46:12Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (paint.events.PaintMain.getFrameTitle().equals(\"Paint\")) { saveFileAs(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7321/buggy-version/src.paint.events.MenuClickHandler.java", "BodyUseAPI": [], "Fixed commit": "fe3f373642a0da8bd302a09abf6f4885421af6d4", "Url": "https://api.github.com/repos/micdra7/paint-app-java", "Date": "2017-12-26T18:49:03Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerController) != null) { long current = playerController.getCurrentPosition(); long total = playerController.getDuration(); if ((mediaPlayerListener) != null) { mediaPlayerListener.onPlayerProgress(current, total); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1300/buggy-version/android.src.main.java.com.yoai.reactnative.media.player.ReactMediaPlayerView.java", "BodyUseAPI": [], "Fixed commit": "172ec831bfa61a00b7e10873c8e28e326b866ae8", "Url": "https://api.github.com/repos/ldn0x7dc/react-native-media-kit", "Date": "2016-06-06T03:25:26Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((view != null) && (transName != null)) && (!(\"\".equals(transName)))) { transaction.addSharedElement(view, transName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8353/buggy-version/Presentation.src.main.java.com.freedom.lauzy.ticktockmusic.navigation.Navigator.java", "BodyUseAPI": ["android.support.v4.app.FragmentTransaction.addSharedElement(android.widget.ImageView,java.lang.String)"], "Fixed commit": "2cb3d7c49125d84f47eb561c9b0f69b6e89399f0", "Url": "https://api.github.com/repos/Lauzy/TicktockMusic", "Date": "2017-10-13T05:46:53Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((transName != null) && (!(\"\".equals(transName)))) && (view != null)) { transaction.addSharedElement(view, transName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8353/buggy-version/Presentation.src.main.java.com.freedom.lauzy.ticktockmusic.navigation.Navigator.java", "BodyUseAPI": ["android.support.v4.app.FragmentTransaction.addSharedElement(android.widget.ImageView,java.lang.String)"], "Fixed commit": "2cb3d7c49125d84f47eb561c9b0f69b6e89399f0", "Url": "https://api.github.com/repos/Lauzy/TicktockMusic", "Date": "2017-10-13T05:46:53Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.evolveum.polygon.connector.ldap.search.VlvSearchStrategy.hasSortOption())) { java.lang.String vlvSortAttributeConfig = com.evolveum.polygon.connector.ldap.search.VlvSearchStrategy.getConfiguration().getVlvSortAttribute(); java.util.List<java.lang.String> vlvSortAttributeCandidateList = com.evolveum.polygon.connector.ldap.LdapUtil.splitComma(vlvSortAttributeConfig); vlvSortAttributeName = com.evolveum.polygon.connector.ldap.search.VlvSearchStrategy.getSchemaTranslator().selectAttribute(com.evolveum.polygon.connector.ldap.search.VlvSearchStrategy.getLdapObjectClass(), vlvSortAttributeCandidateList); if (vlvSortAttributeName == null) { throw new org.identityconnectors.framework.common.exceptions.ConfigurationException(((((((\"Cannot find appropriate sort attribute for object class \" + (com.evolveum.polygon.connector.ldap.search.VlvSearchStrategy.getLdapObjectClass().getName())) + \", tried \") + vlvSortAttributeCandidateList) + \" (\") + vlvSortAttributeConfig) + \")\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6666/buggy-version/src.main.java.com.evolveum.polygon.connector.ldap.search.VlvSearchStrategy.java", "BodyUseAPI": [], "Fixed commit": "4f9a3db88a2eaa41d117c57ebe6ccb553307138e", "Url": "https://api.github.com/repos/mythoss/connector-ldap", "Date": "2016-03-16T15:21:52Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["simple.net.protocol.message.NetMessage.getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bigData.length) > 0) { out.writeBytes(bigData); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5986/buggy-version/src.main.java.simple.net.protocol.impl.bigData.BigDataProtocolFactory.java", "BodyUseAPI": ["io.netty.buffer.ByteBuf.writeBytes(byte[])"], "Fixed commit": "85a346b376d3a827e9cc8b06b332dbb65578fdb3", "Url": "https://api.github.com/repos/bgmall/simple_rpc", "Date": "2017-12-20T12:52:25Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(ancA.size(),ancB.size())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (min == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7498/buggy-version/slib-sml.src.main.java.slib.sml.sm.core.measures.graph.groupwise.dag.Sim_groupwise_DAG_NTO.java", "BodyUseAPI": [], "Fixed commit": "054ec453211080053c57488652e3fab403a6445c", "Url": "https://api.github.com/repos/sharispe/slib", "Date": "2013-02-13T17:06:28Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.konstructs.flowers.Position.withY(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((start.getY()) < (end.getY())) boxQuery(new org.konstructs.flowers.Box(start, end));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3948/buggy-version/src.main.java.org.konstructs.flowers.FlowersPlugin.java", "BodyUseAPI": ["org.konstructs.flowers.FlowersPlugin.boxQuery(org.konstructs.flowers.Box)"], "Fixed commit": "ecd289738e4b0926a7d90febfbcd020a1ee12ff7", "Url": "https://api.github.com/repos/konstructs/server-plugin-flowers", "Date": "2016-03-21T10:36:59Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rascalmpl.library.lang.java.m3.internal.SourceConverter.resolveBinding(((org.rascalmpl.library.lang.java.m3.internal.ClassInstanceCreation) (parent)).getType())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(superclass.getScheme().contains(\"+interface\"))) { insert(extendsRelations, ownValue, superclass); }else { insert(implementsRelations, ownValue, superclass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7781/buggy-version/src.org.rascalmpl.library.lang.java.m3.internal.SourceConverter.java", "BodyUseAPI": ["org.rascalmpl.library.lang.java.m3.internal.SourceConverter.insert(org.rascalmpl.library.lang.java.m3.internal.SourceConverter,org.rascalmpl.library.lang.java.m3.internal.SourceConverter,org.eclipse.imp.pdb.facts.ISourceLocation)", "org.rascalmpl.library.lang.java.m3.internal.SourceConverter.insert(org.rascalmpl.library.lang.java.m3.internal.SourceConverter,org.rascalmpl.library.lang.java.m3.internal.SourceConverter,org.eclipse.imp.pdb.facts.ISourceLocation)"], "Fixed commit": "7daaf364f92abdbee298acde62a4457f1cefcaee", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2014-08-21T13:01:59Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.mahout.math.Vector.iterateNonZero()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (yi.hasNext()) { ye = yi.next(); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/26/buggy-version/math.src.main.java.org.apache.mahout.math.VectorBinaryAssign.java", "BodyUseAPI": ["java.util.Iterator<Vector.Element>.next()"], "Fixed commit": "58594ed167aacaee290452ab19c92d4241b25e1d", "Url": "https://api.github.com/repos/dfilimon/mahout", "Date": "2013-04-29T10:19:09Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.mahout.math.Vector.iterateNonZero()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (xi.hasNext()) { xe = xi.next(); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/26/buggy-version/math.src.main.java.org.apache.mahout.math.VectorBinaryAssign.java", "BodyUseAPI": ["java.util.Iterator<Vector.Element>.next()"], "Fixed commit": "58594ed167aacaee290452ab19c92d4241b25e1d", "Url": "https://api.github.com/repos/dfilimon/mahout", "Date": "2013-04-29T10:19:09Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (endTime.isAfter(bedTime)) { endDate = endTime.atDate(java.time.LocalDate.now()); }else { endDate = java.time.LocalTime.MIDNIGHT.atDate(java.time.LocalDate.now().plus(1, java.time.temporal.ChronoUnit.DAYS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/9028/buggy-version/Babysitter.src.com.wcknapp.pillar.CalculationService.java", "BodyUseAPI": ["java.time.LocalTime.atDate(java.time.LocalDate)"], "Fixed commit": "b23f3f8d57057991025fd1760e44a24d6cede593", "Url": "https://api.github.com/repos/KrafDinner/pillar-babysitter", "Date": "2016-06-26T23:58:01Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mapStack.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4977/buggy-version/COMP2911-Project-2.src.States.Expert.java", "BodyUseAPI": [], "Fixed commit": "e115cc436245fcad97e0a2d78607bc1b9d0d5081", "Url": "https://api.github.com/repos/JackClark123/COMP2911-Project", "Date": "2017-05-19T00:12:53Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.restlet.ext.ssl.internal.SslConnection.getLogger().isLoggable(java.util.logging.Level.FINER)) { org.restlet.ext.ssl.internal.SslConnection.getLogger().log(java.util.logging.Level.FINER, (\"Handling SSL handshake: \" + hs)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7023/buggy-version/modules.org.restlet.ext.ssl.src.org.restlet.ext.ssl.internal.SslConnection.java", "BodyUseAPI": ["org.restlet.ext.ssl.internal.SslConnection.getLogger().log(java.util.logging.Level,java.lang.String)"], "Fixed commit": "b43ab8f3f0c8f25364458920ee7ef93c7d3d23f0", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-12-31T16:16:44Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.restlet.ext.ssl.internal.SslConnection.getLogger().isLoggable(java.util.logging.Level.FINER)) { org.restlet.ext.ssl.internal.SslConnection.getLogger().log(java.util.logging.Level.FINER, (\"Handling SSL result: \" + (getSslEngineStatus()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7023/buggy-version/modules.org.restlet.ext.ssl.src.org.restlet.ext.ssl.internal.SslConnection.java", "BodyUseAPI": ["org.restlet.ext.ssl.internal.SslConnection.getLogger().log(java.util.logging.Level,java.lang.String)"], "Fixed commit": "b43ab8f3f0c8f25364458920ee7ef93c7d3d23f0", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-12-31T16:16:44Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.hetty.core.ServiceHandler.isServiceExits(version.getService()))) { throw new com.hetty.object.HettyException(((\"please check your configure file,service[\" + (version.getService())) + \"] can't find.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4801/buggy-version/src.com.hetty.core.ServiceHandler.java", "BodyUseAPI": ["com.hetty.object.ServiceVersion.getService()"], "Fixed commit": "d556fda020b91e7cc74e0840b44c37fb47466956", "Url": "https://api.github.com/repos/xishuixiPATH/Hetty", "Date": "2012-10-26T07:03:16Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Runtime.exec(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((p.exitValue()) == 0) { return output.trim(); }else { return error.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/159/buggy-version/src.org.durka.hallmonitor.Functions.java", "BodyUseAPI": [], "Fixed commit": "fabf4408111ea3e9a0c335cb4e22b6befd2de90d", "Url": "https://api.github.com/repos/durka/HallMonitor", "Date": "2014-03-31T00:15:33Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.flink.streaming.api.graph.StreamGraph.getStreamNode(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((vertex.getStatePartitioner1()) != null) { config.setKeyGroupAssigner(new org.apache.flink.runtime.state.HashKeyGroupAssigner<java.lang.Object>(streamGraph.getExecutionConfig().getMaxParallelism())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2616/buggy-version/flink-streaming-java.src.main.java.org.apache.flink.streaming.api.graph.StreamingJobGraphGenerator.java", "BodyUseAPI": [], "Fixed commit": "8109e877d4621b98f893af860337adffcf7decb1", "Url": "https://api.github.com/repos/tillrohrmann/flink", "Date": "2016-05-04T08:43:12Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(meeting.getTeam().getMembers().contains(calendarModel.getUser()))) { yourStatus.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6133/buggy-version/KalenderProsjekt.src.framePackage.AppointmentOverView.java", "BodyUseAPI": [], "Fixed commit": "365b8c57c4f6c2d75f273adcecb636725c4b85fe", "Url": "https://api.github.com/repos/Daveiac/FProj_Gruppe48", "Date": "2013-03-21T05:19:55Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (y != z) update_augments_to_root(z);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/34/buggy-version/tasks.order.RedBlackTree.java", "BodyUseAPI": ["RedBlackTree.update_augments_to_root(Node)"], "Fixed commit": "2358a96b94c9f9ad39106564de0710877cfef49b", "Url": "https://api.github.com/repos/Mortal/csaudk-submitj", "Date": "2017-10-27T10:01:00Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((colorSensorThread.currentValue) > (basics.GlobalValues.ALMOST_WHITE)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4804/buggy-version/legoMS3_vs2.src.robotComponents.LineFollower.java", "BodyUseAPI": [], "Fixed commit": "58a6971eff1ff605dad5f8819ac45232b2e5505e", "Url": "https://api.github.com/repos/tungnx94/LegoMS", "Date": "2017-11-20T14:05:44Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (root != null) { findedElement = model.createElement(root, bscProperty); }else { findedElement = model.createElement(rootDataElement, bscProperty); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4234/buggy-version/org.amanzi.neo.loader.core.src.org.amanzi.neo.loader.core.newsaver.NewNetworkSaver.java", "BodyUseAPI": ["org.amanzi.neo.services.model.INetworkModel.createElement(org.amanzi.neo.services.model.IDataElement,java.util.Map<java.lang.String, java.lang.Object>)"], "Fixed commit": "af8295e4497356d359db546e94706bfe1e099448", "Url": "https://api.github.com/repos/AmanziTel/awe-core", "Date": "2011-10-17T12:14:05Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOutputStream) != null) { try { mOutputStream.close(); } catch (java.io.IOException e) { android.util.Slog.e(com.android.server.usb.UsbDebuggingManager.TAG, (\"Failed closing output stream: \" + e)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7008/buggy-version/services.java.com.android.server.usb.UsbDebuggingManager.java", "BodyUseAPI": [], "Fixed commit": "4101d492fb18b8bf69f1647e62ce597905b2ee57", "Url": "https://api.github.com/repos/VanirAOSP/frameworks_base", "Date": "2014-01-30T18:17:04Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSocket) != null) { try { mSocket.close(); } catch (java.io.IOException ex) { android.util.Slog.e(com.android.server.usb.UsbDebuggingManager.TAG, (\"Failed closing socket: \" + ex)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7008/buggy-version/services.java.com.android.server.usb.UsbDebuggingManager.java", "BodyUseAPI": [], "Fixed commit": "4101d492fb18b8bf69f1647e62ce597905b2ee57", "Url": "https://api.github.com/repos/VanirAOSP/frameworks_base", "Date": "2014-01-30T18:17:04Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 0) { return chars.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4858/buggy-version/src.main.java.com.x5.template.IfTag.java", "BodyUseAPI": [], "Fixed commit": "66736d1e686b95e6a9f4fe88c9465931470f33a1", "Url": "https://api.github.com/repos/tomj74/chunk-templates", "Date": "2016-06-12T16:23:05Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < 0) { return chars.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4858/buggy-version/src.main.java.com.x5.template.IfTag.java", "BodyUseAPI": [], "Fixed commit": "66736d1e686b95e6a9f4fe88c9465931470f33a1", "Url": "https://api.github.com/repos/tomj74/chunk-templates", "Date": "2016-06-12T16:23:05Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (oldFile != null) { oldFile.build(context); oldFile.loadContent(); if (((oldFile.getUser()) == user) || (user.canEdit(oldFile))) { dbFile.setContent(oldFile.getContent()); }else { return javax.ws.rs.core.Response.status(403).entity(new java.lang.Error(\"Forbidden.\")).type(MediaType.APPLICATION_JSON).build(); } }else { dbFile.setContent(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4923/buggy-version/src.main.java.com.naples.rest.FileService.java", "BodyUseAPI": ["com.naples.file.File.loadContent()", "com.naples.file.File.getUser()", "com.naples.file.File.setContent(oldFile.getContent())", "com.naples.user.User.canEdit(com.naples.file.File)", "com.naples.file.File.getContent()", "com.naples.file.File.build(javax.servlet.ServletContext)"], "Fixed commit": "a233c26d61b21d00da241096c55a33cfa383c8b9", "Url": "https://api.github.com/repos/pleak-tools/pleak-backend", "Date": "2016-07-26T12:28:45Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) != 0) { sb.setLength(((sb.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4427/buggy-version/Project_Chronos.src.database.Database.java", "BodyUseAPI": ["java.lang.StringBuilder.setLength(int)", "java.lang.StringBuilder.length()"], "Fixed commit": "e6f9d27be06da11064827dedb633f5ea2718b86a", "Url": "https://api.github.com/repos/matthewandrous/Chronos", "Date": "2017-11-20T05:56:33Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (baseNode == null) { throw new java.lang.IllegalArgumentException((\"node not found sysUID=\" + exportSysUID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3478/buggy-version/src.main.java.de.yaio.extension.datatransfer.common.CommonImporter.java", "BodyUseAPI": [], "Fixed commit": "60fe3f7e89e2cde22c6e891ffc96e629d72fdf6a", "Url": "https://api.github.com/repos/das-praktische-schreinerlein/your-all-in-one", "Date": "2014-10-10T10:48:18Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.isValidCnt(current)) this.addNode2(previous, current, next, p2ce, c2ne, path, isForward);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5263/buggy-version/src.agis.ps.util.PathBuilder.java", "BodyUseAPI": ["agis.ps.util.PathBuilder.addNode2(agis.ps.seqs.Contig,agis.ps.seqs.Contig,agis.ps.seqs.Contig,agis.ps.link.Edge,agis.ps.link.Edge,agis.ps.path.NodePath,boolean)"], "Fixed commit": "5a3d8036090ef7d7abab79613d024bfb19563f35", "Url": "https://api.github.com/repos/shingocat/lrscaf", "Date": "2017-01-04T12:53:11Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.favoritesFragment.isVisible()) { this.fragmentManager.popBackStack(); actionBar.setDisplayHomeAsUpEnabled(false); actionBar.setTitle(\"Aww!\"); this.onCreateOptionsMenu(menu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6424/buggy-version/Lab07.src.com.elevine.aww.AwwClientActivity.java", "BodyUseAPI": [], "Fixed commit": "75362fbd82bd192773ec4aaec7e1ff903791e900", "Url": "https://api.github.com/repos/elevine/Advanced-Android2", "Date": "2012-05-22T15:19:13Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currentToken instanceof calc.Operator)) { if (!((currentToken instanceof calc.Bracket) && (!(((calc.Bracket) (currentToken)).left)))) { flipped.add(currentToken); flipped.push(new calc.Operator(Operator.Operators.MULTIPLY)); continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/204/buggy-version/src.calc.Postfix.java", "BodyUseAPI": ["java.util.Stack<calc.Token>.add(calc.Token)"], "Fixed commit": "c33f199c106fd4b9ea13d7bc9355b04b812b6489", "Url": "https://api.github.com/repos/Nyrmburk/Calculator", "Date": "2016-08-30T16:17:19Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pstmt) != null) pstmt.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4851/buggy-version/HRHRP.src.kr.ac.kaist.hrhrp.quiz.JDBC.java", "BodyUseAPI": [], "Fixed commit": "48b7bca9e279f803bed53d3e324277195f8e9489", "Url": "https://api.github.com/repos/ghsdh3409/hrhrp-server", "Date": "2015-04-06T12:49:30Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rs) != null) rs.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4851/buggy-version/HRHRP.src.kr.ac.kaist.hrhrp.quiz.JDBC.java", "BodyUseAPI": [], "Fixed commit": "48b7bca9e279f803bed53d3e324277195f8e9489", "Url": "https://api.github.com/repos/ghsdh3409/hrhrp-server", "Date": "2015-04-06T12:49:30Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((conn) != null) conn.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4851/buggy-version/HRHRP.src.kr.ac.kaist.hrhrp.quiz.JDBC.java", "BodyUseAPI": [], "Fixed commit": "48b7bca9e279f803bed53d3e324277195f8e9489", "Url": "https://api.github.com/repos/ghsdh3409/hrhrp-server", "Date": "2015-04-06T12:49:30Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stmt) != null) stmt.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4851/buggy-version/HRHRP.src.kr.ac.kaist.hrhrp.quiz.JDBC.java", "BodyUseAPI": [], "Fixed commit": "48b7bca9e279f803bed53d3e324277195f8e9489", "Url": "https://api.github.com/repos/ghsdh3409/hrhrp-server", "Date": "2015-04-06T12:49:30Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.IType.getElementName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((simpleClassName == null) || (simpleClassName.isEmpty())) { simpleClassName = unitName.substring(0, ((unitName.length()) - 6)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/9153/buggy-version/PluginsAndFeatures.azure-toolkit-for-eclipse.com.microsoft.azuretools.hdinsight.src.com.microsoft.azuretools.hdinsight.spark.ui.SparkSubmissionExDialog.java", "BodyUseAPI": [], "Fixed commit": "ffee996e895b90c8a4344edf603b9a85393a471c", "Url": "https://api.github.com/repos/djlan/azure-tools-for-java", "Date": "2017-11-30T04:28:30Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((simpleClassName.endsWith(\"$\")) && ((simpleClassName.length()) > 1)) { simpleClassName = simpleClassName.substring(0, ((simpleClassName.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/9153/buggy-version/PluginsAndFeatures.azure-toolkit-for-eclipse.com.microsoft.azuretools.hdinsight.src.com.microsoft.azuretools.hdinsight.spark.ui.SparkSubmissionExDialog.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "ffee996e895b90c8a4344edf603b9a85393a471c", "Url": "https://api.github.com/repos/djlan/azure-tools-for-java", "Date": "2017-11-30T04:28:30Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.blueprints.impls.orient.OrientElement.getGraph()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (graph != null) return ((T) (new com.tinkerpop.blueprints.impls.orient.OrientElementIterable<com.tinkerpop.blueprints.impls.orient.OrientElement>(graph, com.orientechnologies.common.collection.OMultiValue.getMultiValueIterable(fieldValue))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5487/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientElement.java", "BodyUseAPI": [], "Fixed commit": "4acc4d2bd61cef88a2b27a181db94c5c232308ef", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2015-03-05T23:40:38Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Llamabrarian.dir) == null) com.thundercats.homeflix_base.Llamabrarian.setDirectory(java.nio.file.Paths.get(java.lang.System.getProperty(\"user.dir\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8296/buggy-version/src.com.thundercats.homeflix_base.HomeflixBase.java", "BodyUseAPI": [], "Fixed commit": "01af18b4f32d97d12bec1144e9574d2044e2bdf5", "Url": "https://api.github.com/repos/ParkerKemp/Homeflix-Base", "Date": "2014-05-07T21:24:58Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((networkInfo) != null) && (networkInfo.isConnected())) { com.example.android.booklistingapp.Data currentData = mAdapter.getItem(position); android.net.Uri dataUri = android.net.Uri.parse(currentData.getmUrl()); android.content.Intent websiteIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, dataUri); startActivity(websiteIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5210/buggy-version/app.src.main.java.com.example.android.booklistingapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ac9cb7e2f6c889bb72cfa969d9f597ad5fb48ca0", "Url": "https://api.github.com/repos/lucasrun/BookListingApp", "Date": "2017-07-07T19:30:43Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTree.getLastSelectedPathComponent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((node.getLevel()) == 2) { javax.swing.tree.DefaultMutableTreeNode parentnode = new javax.swing.tree.DefaultMutableTreeNode(); parentnode = ((javax.swing.tree.DefaultMutableTreeNode) (node.getParent())); app.joinRoom(((se.ltu.M7017E.lab2.common.Room) (parentnode.getUserObject())).getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2707/buggy-version/src.main.java.se.ltu.M7017E.lab2.client.ui.Gui.java", "BodyUseAPI": ["javax.swing.tree.DefaultMutableTreeNode.getParent()"], "Fixed commit": "8835ee59ab8352e94690afa43e9b30265fb51383", "Url": "https://api.github.com/repos/ClementNotin/audioconferencing", "Date": "2012-12-06T01:44:56Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTree.getLastSelectedPathComponent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (node == null) { displayRoomList(app.getAllRooms()); }else if ((node.getLevel()) == 0) { showMessage(\"No Room selected\"); }else if ((node.getLevel()) == 1) { app.joinRoom(((se.ltu.M7017E.lab2.common.Room) (node.getUserObject())).getId()); }else if ((node.getLevel()) == 2) { javax.swing.tree.DefaultMutableTreeNode parentnode = new javax.swing.tree.DefaultMutableTreeNode(); parentnode = ((javax.swing.tree.DefaultMutableTreeNode) (node.getParent())); app.joinRoom(((se.ltu.M7017E.lab2.common.Room) (parentnode.getUserObject())).getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2707/buggy-version/src.main.java.se.ltu.M7017E.lab2.client.ui.Gui.java", "BodyUseAPI": ["javax.swing.tree.DefaultMutableTreeNode.getParent()", "javax.swing.tree.DefaultMutableTreeNode.getLevel()", "java.lang.Object.getId()", "se.ltu.M7017E.lab2.client.App.joinRoom(((se.ltu.M7017E.lab2.common.Room) (node.getUserObject())).getId())", "javax.swing.tree.DefaultMutableTreeNode.getLevel()", "javax.swing.tree.DefaultMutableTreeNode.getUserObject()", "javax.swing.tree.DefaultMutableTreeNode.getLevel()"], "Fixed commit": "8835ee59ab8352e94690afa43e9b30265fb51383", "Url": "https://api.github.com/repos/ClementNotin/audioconferencing", "Date": "2012-12-06T01:44:56Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.rice.service.UserService.login(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (u == null) return edu.rice.bean.ResultBean.failure(\"1001\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5766/buggy-version/src.edu.rice.controller.LoginController.java", "BodyUseAPI": [], "Fixed commit": "26bae1ee9eb6e9692f80bac1fc74d2581ce7715b", "Url": "https://api.github.com/repos/lyupan/RiceApp", "Date": "2017-09-23T14:39:58Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((args.length) == 2) && ((args[0].equals(\"removeloc\")) || (args[0].equals(\"removelocation\")))) { if (com.fullwall.Citizens.CommandExecutors.BasicExecutor.hasPermission(\"citizens.wizard.removeloc\", sender)) { int type = -1; try { java.lang.Integer.parseInt(args[1]); } catch (java.lang.Exception e) { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"ID must be a number, see /wizard locations\")); } if (type != (-1)) { if (type <= (npc.getWizard().getNrOfLocations())) { this.removeLocation(player, npc, java.lang.Integer.parseInt(args[1])); }else { sender.sendMessage(((((org.bukkit.ChatColor.RED) + \"Wizard \") + (com.fullwall.Citizens.Utils.StringUtils.yellowify(npc.getStrippedName()))) + \"doesnt have that location.\")); } } }else { sender.sendMessage(MessageUtils.noPermissionsMessage); } returnval = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2868/buggy-version/src.com.fullwall.Citizens.CommandExecutors.WizardExecutor.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "com.fullwall.Citizens.CommandExecutors.WizardExecutor.removeLocation(org.bukkit.entity.Player,com.fullwall.resources.redecouverte.NPClib.HumanNPC,int)"], "Fixed commit": "7ea5c03cd9c3f7fc9f322b75d3300d8d73247ed3", "Url": "https://api.github.com/repos/fullwall/Citizens", "Date": "2011-05-07T15:42:42Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kr.ac.kaist.hrhrp.quiz.GetQuizImages.getQuizImages(int,java.lang.String,java.util.ArrayList<kr.ac.kaist.hrhrp.type.Image>,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (wrongIdx < (selectedImages.get(\"wrong\").size())) { selections[i] = selectedImages.get(\"wrong\").get((wrongIdx++)).getUrl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6015/buggy-version/HRHRP.src.kr.ac.kaist.hrhrp.quiz.QuizGen.java", "BodyUseAPI": ["selectedImages.get(\"wrong\").get(int)", "java.util.HashMap<java.lang.String, java.util.ArrayList<kr.ac.kaist.hrhrp.type.Image>>.get(java.lang.String)", "selectedImages.get(\"wrong\").get((wrongIdx++)).getUrl()"], "Fixed commit": "0fd24376197d2eedf824d252ef2984f5f7597f2d", "Url": "https://api.github.com/repos/ghsdh3409/hrhrp-server", "Date": "2015-04-08T08:37:42Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kr.ac.kaist.hrhrp.quiz.GetQuizImages.getQuizImages(int,java.lang.String,java.util.ArrayList<kr.ac.kaist.hrhrp.type.Image>,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (wrongIdx < (selectedImages.get(\"wrong\").size())) { selections[i] = selectedImages.get(\"wrong\").get((wrongIdx++)).getUrl(); answer_number = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6015/buggy-version/HRHRP.src.kr.ac.kaist.hrhrp.quiz.QuizGen.java", "BodyUseAPI": ["selectedImages.get(\"wrong\").get((wrongIdx++)).getUrl()", "selectedImages.get(\"wrong\").get(int)", "java.util.HashMap<java.lang.String, java.util.ArrayList<kr.ac.kaist.hrhrp.type.Image>>.get(java.lang.String)"], "Fixed commit": "0fd24376197d2eedf824d252ef2984f5f7597f2d", "Url": "https://api.github.com/repos/ghsdh3409/hrhrp-server", "Date": "2015-04-08T08:37:42Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kr.ac.kaist.hrhrp.quiz.GetQuizImages.getQuizImages(int,java.lang.String,java.util.ArrayList<kr.ac.kaist.hrhrp.type.Image>,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (wrongIdx < (selectedImages.get(\"wrong\").size())) { selections[i] = selectedImages.get(\"wrong\").get((wrongIdx++)).getUrl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6015/buggy-version/HRHRP.src.kr.ac.kaist.hrhrp.quiz.QuizGen.java", "BodyUseAPI": ["selectedImages.get(\"wrong\").get(int)", "selectedImages.get(\"wrong\").get((wrongIdx++)).getUrl()", "java.util.HashMap<java.lang.String, java.util.ArrayList<kr.ac.kaist.hrhrp.type.Image>>.get(java.lang.String)"], "Fixed commit": "0fd24376197d2eedf824d252ef2984f5f7597f2d", "Url": "https://api.github.com/repos/ghsdh3409/hrhrp-server", "Date": "2015-04-08T08:37:42Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((index_p != (-1)) && (index_i != (-1))) text = ((message.text) + \" https://www.pixiv.net/member_illust.php?mode=medium&illust_id=\") + (message.text.substring((index_p + 3), index_i)); else text = message.text;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4690/buggy-version/src.chatty.gui.components.textpane.ChannelTextPane.java", "BodyUseAPI": ["message.text.substring(int,int)"], "Fixed commit": "7cd3bc70533367b3679dee4c376c1eb88e988b2a", "Url": "https://api.github.com/repos/craftwar/chatty", "Date": "2017-09-23T13:44:25Z"},
{"Line": "=>3", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nums.length) == 0) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7365/buggy-version/src.FirstMissingPositive.java", "BodyUseAPI": [], "Fixed commit": "89e5ec28690607a8d97521a5af4797efa0ad5517", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-07-22T06:38:52Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isLetter(c)) { return error(); }else { unread(c); return integerLiteral(name.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4898/buggy-version/src.edu.kit.pp.minijava.Lexer.java", "BodyUseAPI": ["edu.kit.pp.minijava.Lexer.unread(int)"], "Fixed commit": "6a4684a2092ebcacb1c7670cdbc4697345658d83", "Url": "https://api.github.com/repos/helmonaut/MiniJava", "Date": "2011-04-26T15:32:06Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flowable.engine.impl.cfg.ProcessEngineConfigurationImpl.getClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (classLoader == null) { classLoader = this.getClass().getClassLoader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1742/buggy-version/modules.flowable-engine.src.main.java.org.flowable.engine.cfg.AbstractEngineConfigurator.java", "BodyUseAPI": [], "Fixed commit": "fecd0ceaf6194204d906f2a012571901cf24684e", "Url": "https://api.github.com/repos/yvoswillens/flowable-engine", "Date": "2017-08-18T11:58:32Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flowable.engine.common.AbstractEngineConfiguration.getClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (classLoader != null) { return getClassLoader().getResourceAsStream(resource); }else { return this.getClass().getClassLoader().getResourceAsStream(resource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1742/buggy-version/modules.flowable-engine-common.src.main.java.org.flowable.engine.common.AbstractEngineConfiguration.java", "BodyUseAPI": [], "Fixed commit": "fecd0ceaf6194204d906f2a012571901cf24684e", "Url": "https://api.github.com/repos/yvoswillens/flowable-engine", "Date": "2017-08-18T11:58:32Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((limitField.getText()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2920/buggy-version/ATM.src.com.nibu.atm.graphic.ExceedingCredit.java", "BodyUseAPI": [], "Fixed commit": "b7cad7aed45ae1413485dfc2392f692aadaa395e", "Url": "https://api.github.com/repos/LynxUA/ATM", "Date": "2014-11-15T14:25:33Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (arguments == null) { throw new java.lang.IllegalArgumentException(\"One argument is expected\"); }else if ((arguments.size()) != 1) { throw new java.lang.IllegalArgumentException(((\"One argument was expected, \" + (arguments.size())) + \" were supplied\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8681/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionZing.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "76f311eb557d0c22e8f9fed444c83ee25374274d", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-21T09:06:41Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((sourceElement != null) && (targetElement != null)) { org.eclipse.emf.common.util.EList<org.eclipse.emf.ecore.EReference> references = sourceElement.eClass().getEAllReferences(); for (org.eclipse.emf.ecore.EReference ref : references) { java.util.List<java.lang.String> implementedInterfaces = org.obeonetwork.dsl.smartdesigner.design.util.EMFUtil.getImplementedInterfaces(targetElement.getClass()); if (implementedInterfaces.contains(ref.getEReferenceType().getInstanceClassName())) { result.add(ref); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4883/buggy-version/plugins.org.obeonetwork.dsl.smartdesigner.design.src.org.obeonetwork.dsl.smartdesigner.design.util.EMFUtil.java", "BodyUseAPI": ["org.eclipse.emf.ecore.EObject.eClass()", "sourceElement.eClass().getEAllReferences()", "org.eclipse.emf.ecore.EObject.getClass()", "org.obeonetwork.dsl.smartdesigner.design.util.EMFUtil.getImplementedInterfaces(targetElement.getClass())"], "Fixed commit": "1bcb832b21e532c18f4a0b19ec91e3899ce7f267", "Url": "https://api.github.com/repos/ObeoNetwork/Smart-Designer", "Date": "2014-03-03T20:02:27Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graphicalElement == null) || ((graphicalElement.getSemanticElement()) == null)) { return new java.util.LinkedHashSet<org.eclipse.emf.ecore.EObject>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4883/buggy-version/plugins.org.obeonetwork.dsl.smartdesigner.design.src.org.obeonetwork.dsl.smartdesigner.design.util.BasicDiagramUtil.java", "BodyUseAPI": [], "Fixed commit": "1bcb832b21e532c18f4a0b19ec91e3899ce7f267", "Url": "https://api.github.com/repos/ObeoNetwork/Smart-Designer", "Date": "2014-03-03T20:02:27Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.soco.ebusiness.soco.App.get_loginstate()) { android.content.Intent intent = new android.content.Intent(this, com.soco.ebusiness.soco.RezeptErstellenActivity.class); startActivity(intent); }else sendToast(getString(R.string.msg_loginmissing));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1130/buggy-version/app.src.main.java.com.soco.ebusiness.soco.RezeptActivity.java", "BodyUseAPI": [], "Fixed commit": "897dcd36aa0d0e727ca2126e25798bd39161c976", "Url": "https://api.github.com/repos/vasilevrosen/SoCo", "Date": "2015-06-07T15:20:01Z"},
{"Line": "=>780", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ednovo.gooru.application.client.gin.AppClientFactory.getPlaceManager().getCurrentPlaceRequest().getNameToken()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (PlaceTokens.COLLECTION_PLAY.equalsIgnoreCase(nameToken)) { copyCollectionLblMsg.setVisible(true); copyCollectionLblMsg.setText(org.ednovo.gooru.client.mvp.gsearch.addResourcePopup.SearchAddResourceToCollectionView.i18n.GL3605()); copyCollectionLblMsg.getElement().setAttribute(\"style\", \"padding:0px; color:#ff1493;\"); }else { copyCollectionLblMsg.setVisible(true); copyCollectionLblMsg.setText(org.ednovo.gooru.client.mvp.gsearch.addResourcePopup.SearchAddResourceToCollectionView.i18n.GL3606()); copyCollectionLblMsg.getElement().setAttribute(\"style\", \"padding:0px; color:#ff1493;\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4336/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.gsearch.addResourcePopup.SearchAddResourceToCollectionView.java", "BodyUseAPI": [], "Fixed commit": "4e97719ee615a8ac954fd0fbe97ad7a795e23f35", "Url": "https://api.github.com/repos/ssushma/Gooru-Web", "Date": "2016-03-24T07:35:34Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.jsmith.java.decomp.workspace.FieldReference.getFieldType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fieldType.equals(desc)) || (fieldType.equals(signature))) { this.accept = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4134/buggy-version/src.main.java.net.jsmith.java.decomp.workspace.impl.FieldFilter.java", "BodyUseAPI": [], "Fixed commit": "2dadaf4eee643898d38c4b2994bf1c76c55af52e", "Url": "https://api.github.com/repos/smith61/java-decompiler", "Date": "2016-03-07T17:58:17Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (startDate != null) this.startDate = convertDateToString(startDate);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1264/buggy-version/core.src.main.java.org.hisp.dhis.client.sdk.core.event.EventFilters.java", "BodyUseAPI": ["org.hisp.dhis.client.sdk.core.event.EventFilters.convertDateToString(java.util.Date)"], "Fixed commit": "2ce194beef54610c68509597e8c0dd32e13dae23", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-02-09T08:39:07Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (endDate != null) this.endDate = convertDateToString(endDate);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1264/buggy-version/core.src.main.java.org.hisp.dhis.client.sdk.core.event.EventFilters.java", "BodyUseAPI": ["org.hisp.dhis.client.sdk.core.event.EventFilters.convertDateToString(java.util.Date)"], "Fixed commit": "2ce194beef54610c68509597e8c0dd32e13dae23", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-02-09T08:39:07Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Comparator<java.lang.String>.compare(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cmp == 0) return (o1.order) - (o2.order);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3875/buggy-version/src.main.java.com.github.wcvolcano.common.file.sort2.FileSort2.java", "BodyUseAPI": [], "Fixed commit": "8552519493799ccade60ded35992a4dfcad3f01a", "Url": "https://api.github.com/repos/wcvolcano/common", "Date": "2017-04-06T06:40:15Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { if (android.provider.Settings.canDrawOverlays(this)) { in.srain.cube.demos.uctoast.ListenClipboardService.start(this); }else { android.content.Intent requestIntent = new android.content.Intent(android.provider.Settings.ACTION_MANAGE_OVERLAY_PERMISSION, android.net.Uri.parse((\"package:\" + (getPackageName())))); startActivityForResult(requestIntent, in.srain.cube.demos.uctoast.MainActivity.REQUEST_CODE_OVERLAY_PERMISSION); } }else { in.srain.cube.demos.uctoast.ListenClipboardService.start(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7288/buggy-version/app.src.main.java.in.srain.cube.demos.uctoast.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "144fa58a2a7733330ada933a8315b9ab9b6364bf", "Url": "https://api.github.com/repos/shawnlinboy/android-UCToast", "Date": "2017-07-19T10:10:33Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["JavaParser.ResolvedClass.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mWrapperClasses.contains(className)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7369/buggy-version/archLintRules.src.main.java.me.ycdev.android.arch.lint.base.InheritDetectorBase.java", "BodyUseAPI": [], "Fixed commit": "410282d329a47fd068fe0838534255acf4e45d9e", "Url": "https://api.github.com/repos/yongce/AndroidArch", "Date": "2015-07-03T14:52:12Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (((com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.FieldReference) (parameter)).resolve())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6414/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.classes.MissingIssetImplementationInspector.java", "BodyUseAPI": [], "Fixed commit": "778458e71b164313bf36f6941d56b29d7bf53891", "Url": "https://api.github.com/repos/rentalhost/phpinspectionsea", "Date": "2017-04-27T17:17:35Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((order.getScheduledEventId()) != null) { approvalRequest.setScheduledEventId(order.getScheduledEventId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4704/buggy-version/vipr-portal.com.emc.sa.common.src.java.com.emc.sa.catalog.OrderManagerImpl.java", "BodyUseAPI": ["com.emc.sa.catalog.ApprovalRequest.setScheduledEventId(order.getScheduledEventId())", "com.emc.sa.catalog.Order.getScheduledEventId()"], "Fixed commit": "d2efb2236b3938000fb84fa9c0b8d611cfbf93e7", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-08-08T17:47:26Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!optimized) sb.append(split[((split.length) - 1)]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4216/buggy-version/tupleGeneration.TupleOptimizer.java", "BodyUseAPI": [], "Fixed commit": "32fbbdf6d554309540e84056ae3ee908857c2da5", "Url": "https://api.github.com/repos/ChrisKay27/Compilers2", "Date": "2016-04-01T02:42:30Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["redis.clients.jedis.Jedis.hget(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (count == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7168/buggy-version/javacs-lab12.src.com.flatironschool.javacs.JedisIndex.java", "BodyUseAPI": [], "Fixed commit": "e4cc620e925556527acf2e0f7dc3b568617f9c68", "Url": "https://api.github.com/repos/renguyen/cs-application-retrieval-lab-codeU", "Date": "2016-08-09T22:11:32Z"},
{"Line": "=>784", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.jowidgets.util.EmptyCheck.isEmpty(validator.getPropertyDependencies())) || (validator.getPropertyDependencies().contains(propertyName))) { final java.util.Collection<org.jowidgets.cap.common.api.validation.IBeanValidationResult> validationResult = validator.validateProperty(this, propertyName); if (!(org.jowidgets.util.EmptyCheck.isEmpty(validationResult))) { builder.addResult(context, validationResult); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1375/buggy-version/modules.core.org.jowidgets.cap.ui.src.main.java.org.jowidgets.cap.ui.impl.BeanProxyImpl.java", "BodyUseAPI": ["org.jowidgets.cap.ui.api.bean.IBeanPropertyValidator<BEAN_TYPE>.validateProperty(org.jowidgets.cap.ui.impl.BeanProxyImpl<BEAN_TYPE>,java.lang.String)"], "Fixed commit": "6db1d594cc11add8b0710a794237f62bf40f283c", "Url": "https://api.github.com/repos/jo-source/jo-client-platform", "Date": "2016-03-13T20:38:28Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isXsltCachingEnabled()) { allXslt = net.meisen.general.sbconfigurator.config.transformer.XsltImportResolver.ALL_XSLT; }else { allXslt = net.meisen.general.genmisc.resources.Resource.getResources(java.util.regex.Pattern.compile(\"(?i).*\\\\.xslt\"), true, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8754/buggy-version/src.net.meisen.general.sbconfigurator.config.transformer.XsltImportResolver.java", "BodyUseAPI": [], "Fixed commit": "af0ac49d7413156525db9b9c7a6c5c63beb76729", "Url": "https://api.github.com/repos/pmeisen/gen-sbconfigurator", "Date": "2014-05-20T06:45:29Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tiles[i1][i2].Name.contains(split[z])) contains++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5297/buggy-version/PudParser.src.smoke11.pudparser.SpritesheetParser.java", "BodyUseAPI": [], "Fixed commit": "fe14c2454837ac94596fcb2d57a74ad908f3f345", "Url": "https://api.github.com/repos/smoke11/pudviewer", "Date": "2013-03-14T13:53:27Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contains == 0) sprites[lastID] = smoke11.pudparser.SpritesheetParser.toCompatibleImage(spritesheets[n].getSubimage(tiles[i1][i2].OffsetX, tiles[i1][i2].OffsetY, tiles[i1][i2].SizeX, tiles[i1][i2].SizeY));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5297/buggy-version/PudParser.src.smoke11.pudparser.SpritesheetParser.java", "BodyUseAPI": [], "Fixed commit": "fe14c2454837ac94596fcb2d57a74ad908f3f345", "Url": "https://api.github.com/repos/smoke11/pudviewer", "Date": "2013-03-14T13:53:27Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (nameAnnotation != null) { serializedName = nameAnnotation.value(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6645/buggy-version/twootoot.core.src.main.java.se.amsen.par.twootoot.webcom.twitter.TwitterRequest.java", "BodyUseAPI": ["com.google.gson.annotations.SerializedName.value()"], "Fixed commit": "11068a409e7119d73c30fe347353a3da057f6f18", "Url": "https://api.github.com/repos/paramsen/twootoot", "Date": "2015-11-04T02:07:01Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<it.unibz.krdb.obda.model.Variable, it.unibz.krdb.obda.model.Term>.get(it.unibz.krdb.obda.model.Term)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (replacement != null) { if (atom != null) { atom.setTerm(i, replacement); }else { terms.set(i, replacement); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8090/buggy-version/reformulation-core.src.main.java.it.unibz.krdb.obda.owlrefplatform.core.basicoperations.Unifier.java", "BodyUseAPI": ["java.util.List<it.unibz.krdb.obda.model.Term>.set(int,it.unibz.krdb.obda.model.Term)", "it.unibz.krdb.obda.model.Function.setTerm(int,it.unibz.krdb.obda.model.Term)"], "Fixed commit": "ab12620d645ff2cd835e7c8578c08d17ee7188db", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2014-01-11T10:49:18Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((orderLine.getProduct().getProductId()) == (o.getProduct().getProductId())) { orderLines.set(orderLines.indexOf(o), orderLine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6465/buggy-version/orange-backend.src.main.java.com.netbuilder.entity_managers.arraylist.OrderLineManagerAL.java", "BodyUseAPI": ["java.util.ArrayList<com.netbuilder.entities.OrderLine>.set(orderLines.indexOf(o),com.netbuilder.entities.OrderLine)", "java.util.ArrayList<com.netbuilder.entities.OrderLine>.indexOf(com.netbuilder.entities.OrderLine)"], "Fixed commit": "8476768d66d85ae00621d927b3c17b5373d775a0", "Url": "https://api.github.com/repos/NickGBT/Orange-Gardens", "Date": "2015-08-10T10:55:47Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (orderBy.isPresent()) { orderBy = java8.util.Optional.of(orderBy.get().flipOrder()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/855/buggy-version/app.src.main.java.ru.adios.budgeter.widgets.DataTableLayout.java", "BodyUseAPI": ["orderBy.get().flipOrder()", "java8.util.Optional.of(orderBy.get().flipOrder())", "java8.util.Optional<ru.adios.budgeter.api.OrderBy>.get()"], "Fixed commit": "b62892692d39d69ecb45f1cacc51864428e523dc", "Url": "https://api.github.com/repos/adiosmsu/budgeter-app", "Date": "2015-11-13T14:13:21Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((mDisplayedValue) == null) || (mDisplayedValue.equals(Const.ZERO))) || (mDisplayedValue.equals(Const.EMPTY))) { mDisplayedValue = Const.ZERO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1674/buggy-version/app.src.main.java.kultprosvet.com.calculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a3e63cda26103419d2137ad66e929a4932e6fece", "Url": "https://api.github.com/repos/roma-sck/Calculator", "Date": "2016-07-01T23:37:36Z"},
{"Line": "=>760", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((activeConnections == null) || ((activeConnections.size()) == 0)) { }else if ((activeConnections.size()) > 0) { for (com.bigc.models.Users activeConnection : activeConnections) { sendTokens.add(activeConnection.getToken()); } com.bigc.general.classes.Utils.sendNotification(sendTokens, Constants.ACTION_NEWS_FEED, \"Newsfeed\", \"A post has been added.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4144/buggy-version/bigCConnect.src.main.java.com.bigc.activities.PostActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.bigc.models.Users>.size()"], "Fixed commit": "a6bddf9962f011a16dcd9764d6ff49d6b6c98c9c", "Url": "https://api.github.com/repos/Ekta-D/BigCConnect", "Date": "2017-08-04T05:33:29Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputImage.getColorModel()) instanceof java.awt.image.IndexColorModel) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7085/buggy-version/modules.library.render.src.main.java.org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.java", "BodyUseAPI": [], "Fixed commit": "6647fcca244e9708e72b428fd9aa60b59c7e1cb3", "Url": "https://api.github.com/repos/boundlessgeo/geotools", "Date": "2014-03-18T12:23:42Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDay()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6021/buggy-version/src.org.aiwolf.kajiClient.player.KajiWerewolf.java", "BodyUseAPI": [], "Fixed commit": "b05dae6570a291f5c44e2fbefb43b4e8859d6ef3", "Url": "https://api.github.com/repos/aiwolf/AIWolfClient", "Date": "2015-03-07T20:19:45Z"},
{"Line": "=>1397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teiid.query.optimizer.relational.rules.FrameUtil.findOriginatingNode(org.teiid.query.optimizer.relational.plantree.PlanNode,java.util.Set<org.teiid.query.sql.symbol.GroupSymbol>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((useCardinalityIfUnknown != null) || ((source.getChildCount()) == 0)) { ndv = source.getCardinality(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6528/buggy-version/engine.src.main.java.org.teiid.query.optimizer.relational.rules.NewCalculateCostUtil.java", "BodyUseAPI": ["org.teiid.query.optimizer.relational.plantree.PlanNode.getCardinality()"], "Fixed commit": "fd7d8d26bc516d35742d0f0f3ed43e878a311455", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2016-07-06T23:28:21Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (node == null) { com.inmobi.grill.driver.jdbc.ColumnarSQLRewriter.LOG.debug((\"Join AST is null \" + node)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6295/buggy-version/grill-driver-jdbc.src.main.java.com.inmobi.grill.driver.jdbc.ColumnarSQLRewriter.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug((\"Join AST is null \" + node))"], "Fixed commit": "41cc91e9badc82ab83a5434bbe388180f1579dd5", "Url": "https://api.github.com/repos/jdhok/grill", "Date": "2014-04-23T13:55:56Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.whydah.sso.user.types.UserAggregate.getRoleList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (roleList != null) { for (net.whydah.sso.user.types.UserApplicationRoleEntry role : roleList) { userService.addUserRole(applicationTokenId, userTokenId, createdUser.getUid(), role); } }else { roleList = new java.util.ArrayList<net.whydah.sso.user.types.UserApplicationRoleEntry>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7478/buggy-version/src.main.java.net.whydah.admin.useraggregate.UserAggregateResource.java", "BodyUseAPI": [], "Fixed commit": "c228fb288eddb920de6931b1d0917b08cdb078e8", "Url": "https://api.github.com/repos/Cantara/Whydah-UserAdminService", "Date": "2017-06-16T11:48:50Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (qCount == 25) { done = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1031/buggy-version/src.Proctor.java", "BodyUseAPI": [], "Fixed commit": "8a31b30953b4e4859511bcb6d49a23b2ea5f5213", "Url": "https://api.github.com/repos/NisheshChakrapani/Science-Bowl", "Date": "2017-03-05T01:16:56Z"},
{"Line": "=>1142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.aufdemrand.denizen.objects.dInventory.valueOf(java.lang.String)", "item.getItemMeta().getLore()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((lore.size()) != (item_lore.size())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3270/buggy-version/src.main.java.net.aufdemrand.denizen.objects.dInventory.java", "BodyUseAPI": [], "Fixed commit": "c4037fb5e72b5ddcffaa4b77567043c8a5e38224", "Url": "https://api.github.com/repos/mcmonkey4eva/Denizen", "Date": "2014-07-11T08:43:31Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mdata.getMinigame(minigame).getThTimer()) != null) { mdata.getMinigame(minigame).getThTimer().stopTimer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/9197/buggy-version/src.com.pauldavdesign.mineauz.minigames.Minigames.java", "BodyUseAPI": ["com.pauldavdesign.mineauz.minigames.MinigameData.getMinigame(java.lang.String)", "mdata.getMinigame(minigame).getThTimer()", "mdata.getMinigame(minigame).getThTimer().stopTimer()"], "Fixed commit": "770737cff023c0640539c49d2761dbd52937ffef", "Url": "https://api.github.com/repos/Razz0991/Minigames", "Date": "2013-08-02T13:49:21Z"},
{"Line": "=>760", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["calico.plugins.iip.components.graph.IntentionGraph.getRootsOfAllClusters()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((clusterRoots.length) < 5) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/566/buggy-version/plugins.IntentionalInterfacesPluginClient.src.calico.plugins.iip.components.graph.IntentionGraph.java", "BodyUseAPI": [], "Fixed commit": "90f1f5abe9f70809b168587ddfb13324f702f04e", "Url": "https://api.github.com/repos/nfmangano/CalicoClient", "Date": "2013-03-21T05:01:55Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (preview == false) outputFile.setLastModified(java.lang.System.currentTimeMillis());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7352/buggy-version/src.main.java.net.easymodo.asagi.Local.java", "BodyUseAPI": [], "Fixed commit": "d0649dd4bb5305cc547f132fd60fce175e7d2ee0", "Url": "https://api.github.com/repos/oohnoitz/asagi", "Date": "2012-11-11T16:31:24Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pj.getNo()) == 0) { throw new net.easymodo.asagi.exception.ContentParseException(\"Could not parse thread (thread post num missing and could not be zero)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7352/buggy-version/src.main.java.net.easymodo.asagi.YotsubaJSON.java", "BodyUseAPI": [], "Fixed commit": "d0649dd4bb5305cc547f132fd60fce175e7d2ee0", "Url": "https://api.github.com/repos/oohnoitz/asagi", "Date": "2012-11-11T16:31:24Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pj.getTime()) == 0) { throw new net.easymodo.asagi.exception.ContentParseException(\"Could not parse post (post timestamp missing and could not be zero)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7352/buggy-version/src.main.java.net.easymodo.asagi.YotsubaJSON.java", "BodyUseAPI": [], "Fixed commit": "d0649dd4bb5305cc547f132fd60fce175e7d2ee0", "Url": "https://api.github.com/repos/oohnoitz/asagi", "Date": "2012-11-11T16:31:24Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pj.getNo()) == 0) { throw new net.easymodo.asagi.exception.ContentParseException(\"Could not parse post (post num missing and could not be zero)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7352/buggy-version/src.main.java.net.easymodo.asagi.YotsubaJSON.java", "BodyUseAPI": [], "Fixed commit": "d0649dd4bb5305cc547f132fd60fce175e7d2ee0", "Url": "https://api.github.com/repos/oohnoitz/asagi", "Date": "2012-11-11T16:31:24Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((next) == null) { throw new java.util.NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/9016/buggy-version/src.main.java.org.orekit.data.ZipJarCrawler.java", "BodyUseAPI": [], "Fixed commit": "4ea16f3637b4c177bf331422bd90b20a0d00a70b", "Url": "https://api.github.com/repos/CS-SI/Orekit", "Date": "2016-06-29T19:35:51Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nbt.getTag(\"cookingItem\")) != null) this.cooking = new net.minecraft.item.ItemStack(((net.minecraft.nbt.NBTTagCompound) (nbt.getTag(\"cookingItem\"))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5872/buggy-version/src.main.java.com.theprogrammingturkey.progressiontweaks.blocks.tileentities.TileFirePit.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.getTag(java.lang.String)"], "Fixed commit": "14b1f8b177b08edfc2a8feec8306955d170cc07c", "Url": "https://api.github.com/repos/Turkey2349/Progression-Tweaks", "Date": "2017-08-18T20:42:20Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(tok.getTarget().substring(1))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tmp_var > var) { var = tmp_var; debug.println((((\"\\t\\t\\tchange Block: \" + currentBlock) + \" highest variable: \") + var)); contexts.get(currentContext).put(currentBlock, var); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/661/buggy-version/src.de.fuberlin.projectF.CodeGenerator.Lexer.java", "BodyUseAPI": [], "Fixed commit": "4430b5b2079d6eb87f2d97b2448495e3626cbf1c", "Url": "https://api.github.com/repos/SWPUebersetzerbauSS12/swp-uebersetzerbau-ss12", "Date": "2012-07-19T20:44:46Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (is64bit) { if (i == 4) high = (high * 3) / 2; else if (i == 5) high = (high * 7) / 4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3452/buggy-version/services.core.java.com.android.server.am.ProcessList.java", "BodyUseAPI": [], "Fixed commit": "5fe8197fde93f659acbbbdd5dda9c7eac69c468f", "Url": "https://api.github.com/repos/Altaf-Mahdi/android_frameworks_base", "Date": "2015-01-06T17:59:58Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getDocIDMaper().getDocID(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (docid < 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/746/buggy-version/zoie-core.src.main.java.proj.zoie.api.ZoieMultiReader.java", "BodyUseAPI": [], "Fixed commit": "0e2f5c2ba46fd1157908cd019b72b12bd328170b", "Url": "https://api.github.com/repos/javasoze/zoie", "Date": "2011-12-14T20:06:43Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["proj.zoie.api.ZoieMultiReader<R>.readerIndex(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idx < 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/746/buggy-version/zoie-core.src.main.java.proj.zoie.api.ZoieMultiReader.java", "BodyUseAPI": [], "Fixed commit": "0e2f5c2ba46fd1157908cd019b72b12bd328170b", "Url": "https://api.github.com/repos/javasoze/zoie", "Date": "2011-12-14T20:06:43Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerStats == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6444/buggy-version/app.src.main.java.com.example.rohinbhasin.nflapp.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "77606b4805a2b1e5d1e36a8bcd8c447f27c162e7", "Url": "https://api.github.com/repos/rohinb2/pick-six", "Date": "2017-12-13T21:21:30Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerStats == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6444/buggy-version/app.src.main.java.com.example.rohinbhasin.nflapp.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "77606b4805a2b1e5d1e36a8bcd8c447f27c162e7", "Url": "https://api.github.com/repos/rohinb2/pick-six", "Date": "2017-12-13T21:21:30Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rotateGroupShopService.getRotateGroupShop(rotateGroupId).size()) == 0) rotateGroupService.deleteRotateGroupByRotateGroupID(rotateGroupId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4609/buggy-version/rotate-admin-biz.src.main.java.com.dianping.rotate.admin.serviceAgent.Impl.RotateServiceAgentImpl.java", "BodyUseAPI": ["com.dianping.rotate.shop.api.RotateGroupService.deleteRotateGroupByRotateGroupID(int)"], "Fixed commit": "54460083b7876df130cdbba2a846b7992a868fde", "Url": "https://api.github.com/repos/arnoldwang/rotate-admin", "Date": "2015-03-12T10:15:00Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rotateGroupService.getRotateGroup(newRotateGroupId).getType()) != 1) rotateGroupService.updateType(newRotateGroupId, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4609/buggy-version/rotate-admin-biz.src.main.java.com.dianping.rotate.admin.serviceAgent.Impl.RotateServiceAgentImpl.java", "BodyUseAPI": ["com.dianping.rotate.shop.api.RotateGroupService.updateType(int,int)"], "Fixed commit": "54460083b7876df130cdbba2a846b7992a868fde", "Url": "https://api.github.com/repos/arnoldwang/rotate-admin", "Date": "2015-03-12T10:15:00Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (otheremls != null) { for (org.osate.xtext.aadl2.errormodel.errorModel.ErrorModelLibrary etll : otheremls) { org.eclipse.emf.ecore.EObject res = findEMLNamedTypeElement(etll, typeName, eclass); if (res != null) { return res; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3810/buggy-version/org.osate.xtext.aadl2.errormodel.src.org.osate.xtext.aadl2.errormodel.linking.EMLinkingService.java", "BodyUseAPI": [], "Fixed commit": "1beca7ebe09dc24e191a8d9cf4479ce5cc0a6408", "Url": "https://api.github.com/repos/osate/ErrorModelV2", "Date": "2013-08-12T17:02:17Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.equals(\"\")) { android.widget.Toast.makeText(context, \"Success\", Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(context, (\"Failure \" + result), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8873/buggy-version/MyApplication.app.src.main.java.cs290final.eventadvisor.backend.CreateEvents.java", "BodyUseAPI": ["android.widget.Toast.makeText(android.content.Context,java.lang.String,Toast.LENGTH_LONG)", "android.widget.Toast.makeText(context, (\"Failure \" + result), Toast.LENGTH_LONG).show()"], "Fixed commit": "37194c2f06b0e501c99634d7dc637ce8ae605952", "Url": "https://api.github.com/repos/jerryqypan/EventAdvisor", "Date": "2017-04-28T19:25:14Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.jena.graph.Node.getLiteralLanguage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(lang2.isEmpty())) { res = lang1.compareTo(lang2); if (res != 0) return res; return io.bdrc.jena.sttl.CompareLiterals.compareStrings(t1.getLiteralLexicalForm(), t2.getLiteralLexicalForm(), lang1); }else { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2755/buggy-version/src.main.java.io.bdrc.jena.sttl.CompareLiterals.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)"], "Fixed commit": "ba5083f831455836da82e5375f144b0df0c8e597", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/jena-stable-turtle", "Date": "2017-09-13T10:36:36Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["backtype.storm.spout.Scheme.deserialize(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (o == null) return null; else return java.util.Arrays.asList(o);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6749/buggy-version/src.jvm.backtype.storm.spout.SchemeAsMultiScheme.java", "BodyUseAPI": ["java.util.Arrays.asList(java.util.List<java.lang.Object>)"], "Fixed commit": "7b2139181ed1f5f3961a0ea5f45571a40aa04f60", "Url": "https://api.github.com/repos/lorcan/storm", "Date": "2013-01-10T12:18:06Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((intValue) != null) { return new java.lang.Float(intValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1883/buggy-version/src.main.java.edu.uiuc.zenvisage.data.remotedb.WrapperType.java", "BodyUseAPI": [], "Fixed commit": "6a399f0769650a3baaac73cb85b52994c54339af", "Url": "https://api.github.com/repos/zenvisage/zenvisage", "Date": "2016-09-17T14:34:27Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((floatValue) != null) { return floatValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1883/buggy-version/src.main.java.edu.uiuc.zenvisage.data.remotedb.WrapperType.java", "BodyUseAPI": [], "Fixed commit": "6a399f0769650a3baaac73cb85b52994c54339af", "Url": "https://api.github.com/repos/zenvisage/zenvisage", "Date": "2016-09-17T14:34:27Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uri.charAt(0)) != '/') { uri = '/' + uri; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2233/buggy-version/src.main.java.org.exist.xquery.xproc.xmlcalabash.ProcessFunction.java", "BodyUseAPI": [], "Fixed commit": "5af3cc9c7f612e07c93f0b20b524f2a049f3b779", "Url": "https://api.github.com/repos/eXist-db/xquery-xproc-xmlcalabash-module", "Date": "2017-03-05T17:24:55Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getTagCompound()) != null) duplicate.setTagCompound(((net.minecraft.nbt.NBTTagCompound) (item.getTagCompound().copy())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2804/buggy-version/src.main.java.com.mrnobody.morecommands.command.server.CommandDuplicate.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.setTagCompound(((net.minecraft.nbt.NBTTagCompound) (item.getTagCompound().copy())))", "net.minecraft.item.ItemStack.getTagCompound()", "item.getTagCompound().copy()"], "Fixed commit": "8ab973badd1e30d4382ea77fb66b04cc61a933d0", "Url": "https://api.github.com/repos/MrNobody98/morecommands", "Date": "2015-08-28T21:42:08Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getTagCompound()) != null) duplicate.setTagCompound(((net.minecraft.nbt.NBTTagCompound) (item.getTagCompound().copy())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2804/buggy-version/src.main.java.com.mrnobody.morecommands.command.server.CommandDuplicate.java", "BodyUseAPI": ["item.getTagCompound().copy()", "net.minecraft.item.ItemStack.setTagCompound(((net.minecraft.nbt.NBTTagCompound) (item.getTagCompound().copy())))", "net.minecraft.item.ItemStack.getTagCompound()"], "Fixed commit": "8ab973badd1e30d4382ea77fb66b04cc61a933d0", "Url": "https://api.github.com/repos/MrNobody98/morecommands", "Date": "2015-08-28T21:42:08Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getTagCompound()) != null) duplicate.setTagCompound(((net.minecraft.nbt.NBTTagCompound) (item.getTagCompound().copy())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2804/buggy-version/src.main.java.com.mrnobody.morecommands.command.server.CommandDuplicate.java", "BodyUseAPI": ["item.getTagCompound().copy()", "net.minecraft.item.ItemStack.setTagCompound(((net.minecraft.nbt.NBTTagCompound) (item.getTagCompound().copy())))", "net.minecraft.item.ItemStack.getTagCompound()"], "Fixed commit": "8ab973badd1e30d4382ea77fb66b04cc61a933d0", "Url": "https://api.github.com/repos/MrNobody98/morecommands", "Date": "2015-08-28T21:42:08Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((stringField) != null) && ((stringField.getValue().toString()) != null)) Users = stringField.getValue().toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6947/buggy-version/src.java.beans.LoginBean.java", "BodyUseAPI": ["stringField.getValue().toString()", "javax.faces.component.UIInput.getValue()"], "Fixed commit": "e9c742b1116f5a8e401cc53d997ba08e7a9d5b22", "Url": "https://api.github.com/repos/BrunoPO/Webii-Java", "Date": "2017-07-04T02:30:02Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(constantSetup.equals(\"\"))) { constantSetup += \" /\\\\ \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3463/buggy-version/src.main.java.de.b2tla.tlc.TLCOutput.java", "BodyUseAPI": [], "Fixed commit": "f8289aee93d612db28e0829b1d781df9331f7af4", "Url": "https://api.github.com/repos/hhu-stups/b2tla", "Date": "2013-10-10T14:19:51Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.fileManager.getFile(path).exists())) { this.fileManager.copy(originalPath, path); this.preferences.saveDbFile(path); com.b2msolutions.reyna.Repository.reynaSqlHelper = null; this.fileManager.deleteDatabase(originalPath); }else { this.preferences.saveDbFile(path); com.b2msolutions.reyna.Repository.reynaSqlHelper = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3011/buggy-version/app.src.main.java.com.b2msolutions.reyna.Repository.java", "BodyUseAPI": ["com.b2msolutions.reyna.Preferences.saveDbFile(java.lang.String)", "com.b2msolutions.reyna.Preferences.saveDbFile(java.lang.String)", "com.b2msolutions.reyna.services.FileManager.deleteDatabase(java.lang.String)", "com.b2msolutions.reyna.services.FileManager.copy(java.lang.String,java.lang.String)"], "Fixed commit": "c362e4d782d537c5fc3370963413d02aecfb229f", "Url": "https://api.github.com/repos/B2MSolutions/reyna", "Date": "2015-08-06T10:37:38Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (element != null) { org.checkerframework.framework.type.AnnotatedTypeMirror valueType = valueAnnotatedTypeFactory.getAnnotatedType(element); addArrayLenAnnotation(valueType, type); addStringValAnnotation(valueType, type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6243/buggy-version/checker.src.org.checkerframework.checker.minlen.MinLenAnnotatedTypeFactory.java", "BodyUseAPI": ["org.checkerframework.common.value.ValueAnnotatedTypeFactory.getAnnotatedType(javax.lang.model.element.Element)"], "Fixed commit": "dce399519ea5f02d19792be67f12639e367c8789", "Url": "https://api.github.com/repos/kelloggm/checker-framework", "Date": "2017-01-03T00:03:55Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(stopText)) counter += 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8634/buggy-version/app.src.main.java.ca.mixitmedia.ghostcatcher.app.CommunicatorFragment.java", "BodyUseAPI": [], "Fixed commit": "efe492e76767fb2fb3cdd2bef28fee7285fa9a5a", "Url": "https://api.github.com/repos/MHDante/ghostCatcherAndroid", "Date": "2014-04-17T16:39:30Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.maxSentenceLength) != 0) { props.put(\"pos.maxlen\", java.lang.String.valueOf(this.maxSentenceLength)); props.put(\"parse.maxlen\", java.lang.String.valueOf(this.maxSentenceLength)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1177/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.model.annotator.nlp.PipelineNLPStanford.java", "BodyUseAPI": [], "Fixed commit": "545516df06dead386bcc17805567f3b0252f7044", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2015-05-20T07:52:22Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((l.getHead()) != null) && ((l.getHead().getType()) != null)) { type = l.getHead().getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5139/buggy-version/src.ASTParser.java", "BodyUseAPI": ["l.getHead().getType()", "Line.getHead()"], "Fixed commit": "fa2e80887eafd5de10a72846f5643c8f2341493c", "Url": "https://api.github.com/repos/vootelerotov/AKTK", "Date": "2014-05-23T19:07:27Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((((l != null) && ((l.getHead()) != null)) && ((l.getHead().getArgs()) != null)) && ((l.getHead().getArgs().getList()) != null)) { for (ast.Arg arg : l.getHead().getArgs().getList()) { list.add(ASTParser.parseArg(arg)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5139/buggy-version/src.ASTParser.java", "BodyUseAPI": ["Line.getHead()", "l.getHead().getArgs().getList()", "l.getHead().getArgs()"], "Fixed commit": "fa2e80887eafd5de10a72846f5643c8f2341493c", "Url": "https://api.github.com/repos/vootelerotov/AKTK", "Date": "2014-05-23T19:07:27Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((a == null) || (b == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7852/buggy-version/app.src.main.java.tv.rocketbeans.android.rbtvsendeplan.Utils.java", "BodyUseAPI": [], "Fixed commit": "39515a1b24e949abaec0995a73daf1e2faa9e6e1", "Url": "https://api.github.com/repos/Any1s/RBTV-Sendeplan", "Date": "2015-02-01T10:38:19Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jbpm.shared.services.api.FileService.getPath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fileService.exists(defaultFormPath)) { template = new java.io.ByteArrayInputStream(fileService.loadFile(defaultFormPath)); }else { template = this.getClass().getResourceAsStream(\"/forms/DefaultProcess.ftl\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/596/buggy-version/jbpm-services.droolsjbpm-knowledge-services.src.main.java.org.droolsjbpm.services.impl.form.FormProviderServiceImpl.java", "BodyUseAPI": ["org.jbpm.shared.services.api.FileService.loadFile(org.kie.commons.java.nio.file.Path)"], "Fixed commit": "11551ba2f5c27df111e1bd2a8929cdd1c6dc40c8", "Url": "https://api.github.com/repos/winklerm/jbpm", "Date": "2013-04-22T12:52:02Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jbpm.shared.services.api.FileService.getPath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fileService.exists(defaultFormPath)) { template = new java.io.ByteArrayInputStream(fileService.loadFile(defaultFormPath)); }else { template = this.getClass().getResourceAsStream(\"/forms/DefaultTask.ftl\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/596/buggy-version/jbpm-services.droolsjbpm-knowledge-services.src.main.java.org.droolsjbpm.services.impl.form.FormProviderServiceImpl.java", "BodyUseAPI": ["org.jbpm.shared.services.api.FileService.loadFile(org.kie.commons.java.nio.file.Path)"], "Fixed commit": "11551ba2f5c27df111e1bd2a8929cdd1c6dc40c8", "Url": "https://api.github.com/repos/winklerm/jbpm", "Date": "2013-04-22T12:52:02Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(nodeService.hasAspect(entryRef, ContentModel.ASPECT_LOCKABLE))) { java.util.Map<org.alfresco.service.namespace.QName, java.io.Serializable> prop = new java.util.HashMap<>(); nodeService.addAspect(entryRef, ContentModel.ASPECT_LOCKABLE, prop); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8879/buggy-version/src.main.java.dk.magenta.beans.EntryBean.java", "BodyUseAPI": ["org.alfresco.service.cmr.repository.NodeService.addAspect(org.alfresco.service.cmr.repository.NodeRef,ContentModel.ASPECT_LOCKABLE,java.util.Map<org.alfresco.service.namespace.QName, java.io.Serializable>)"], "Fixed commit": "7a8d3798451b9e50f71f2aee5535a6b12dd9fbcd", "Url": "https://api.github.com/repos/magenta-aps/alfresco-rm-database-alfresco", "Date": "2017-08-08T14:31:03Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.chalmers.dat255.sleepfighter.model.Alarm.getAudioSource()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (audioSource == null) { updateAlarmTable = true; asDao.delete(audioSource); }else { se.chalmers.dat255.sleepfighter.model.audio.AudioSource old = ((se.chalmers.dat255.sleepfighter.model.audio.AudioSource) (evt.getOldValue())); audioSource.setId(old.getId()); asDao.update(audioSource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4174/buggy-version/application.src.se.chalmers.dat255.sleepfighter.persist.PersistenceManager.java", "BodyUseAPI": ["se.chalmers.dat255.sleepfighter.persist.PersistenceExceptionDao<se.chalmers.dat255.sleepfighter.model.audio.AudioSource, java.lang.Integer>.update(se.chalmers.dat255.sleepfighter.model.audio.AudioSource)", "se.chalmers.dat255.sleepfighter.model.audio.AudioSource.setId(old.getId())", "se.chalmers.dat255.sleepfighter.persist.PersistenceExceptionDao<se.chalmers.dat255.sleepfighter.model.audio.AudioSource, java.lang.Integer>.delete(se.chalmers.dat255.sleepfighter.model.audio.AudioSource)"], "Fixed commit": "cf415e3fa78e81b08c82859ca6344a6176499f1c", "Url": "https://api.github.com/repos/Hasselmannen/sleepfighter", "Date": "2013-10-02T23:13:55Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mContentView) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6261/buggy-version/onehookinclibrary.src.main.java.com.onehook.view.overlay.ActivityOverlayView.java", "BodyUseAPI": [], "Fixed commit": "f8f080632bb86e90b08f9e2db1acd280ee909bb3", "Url": "https://api.github.com/repos/oneHook/oneHookLibraryAndroid", "Date": "2017-10-10T20:45:27Z"},
{"Line": "=>1419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((xPaint) == 552) colorWordSize += 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6757/buggy-version/src.emulator.io.display.DisplayIIe.java", "BodyUseAPI": [], "Fixed commit": "6caf3066aa7fb4064f9b1dcc5dc64823c5adb994", "Url": "https://api.github.com/repos/cursorcorner/ever2e-jvm", "Date": "2015-07-03T05:04:28Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<Tree.Expression>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((e.getTerm()) instanceof com.redhat.ceylon.compiler.typechecker.tree.Tree.OperatorExpression) { change.addEdit(new org.eclipse.text.edits.InsertEdit(e.getStartIndex(), \"(\")); change.addEdit(new org.eclipse.text.edits.InsertEdit(e.getEndIndex(), \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3942/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.correct.ConvertToConcatenationProposal.java", "BodyUseAPI": ["org.eclipse.ltk.core.refactoring.TextFileChange.addEdit(org.eclipse.text.edits.InsertEdit)", "org.eclipse.ltk.core.refactoring.TextFileChange.addEdit(org.eclipse.text.edits.InsertEdit)", "Tree.Expression.getStartIndex()", "Tree.Expression.getEndIndex()"], "Fixed commit": "c122af492d4ebef5e9677e17192fb5603acddeb9", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2015-09-11T16:25:58Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldVal < newVal) { toPicker.setMinValue(((fromTime) + 1)); toPicker.setMaxValue(28); toPicker.setDisplayedValues(com.wafflestudio.snutt.SNUTTUtils.getTimeList(((fromTime) + 1), 28)); }else { toPicker.setDisplayedValues(com.wafflestudio.snutt.SNUTTUtils.getTimeList(((fromTime) + 1), 28)); toPicker.setMinValue(((fromTime) + 1)); toPicker.setMaxValue(28); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4593/buggy-version/app.src.main.java.com.wafflestudio.snutt.ui.adapter.LectureDetailAdapter.java", "BodyUseAPI": [], "Fixed commit": "d1d30809c0ec568281122c15fb460eda35801a73", "Url": "https://api.github.com/repos/wafflestudio/SNUTT-android", "Date": "2016-11-09T16:43:49Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cms.getZNodeExist(br.unb.cic.bionimbus.services.sched.SchedService.JOBS, false))) cms.createZNode(CreateMode.PERSISTENT, br.unb.cic.bionimbus.services.sched.SchedService.JOBS, policy.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/539/buggy-version/src.main.java.br.unb.cic.bionimbus.services.sched.SchedService.java", "BodyUseAPI": ["br.unb.cic.bionimbus.services.sched.SchedService.createZNode(CreateMode.PERSISTENT,java.lang.String,java.lang.String)"], "Fixed commit": "1f9ea2aec6c1db95014f39b356599356eee7a694", "Url": "https://api.github.com/repos/bionimbuz/Bionimbuz", "Date": "2015-07-27T17:54:55Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cms.getZNodeExist(cms.getPath().PENDING_SAVE.toString(), false))) cms.createZNode(CreateMode.PERSISTENT, cms.getPath().PENDING_SAVE.toString(), null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/539/buggy-version/src.main.java.br.unb.cic.bionimbus.services.storage.StorageService.java", "BodyUseAPI": ["br.unb.cic.bionimbus.services.storage.StorageService.getPath()", "cms.getPath().PENDING_SAVE.toString()", "br.unb.cic.bionimbus.services.storage.StorageService.createZNode(CreateMode.PERSISTENT,cms.getPath().PENDING_SAVE.toString(),<nulltype>)"], "Fixed commit": "1f9ea2aec6c1db95014f39b356599356eee7a694", "Url": "https://api.github.com/repos/bionimbuz/Bionimbuz", "Date": "2015-07-27T17:54:55Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cms.getZNodeExist(cms.getPath().FILES.getFullPath(config.getId(), \"\", \"\"), false))) cms.createZNode(CreateMode.PERSISTENT, cms.getPath().FILES.getFullPath(config.getId(), \"\", \"\"), \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/539/buggy-version/src.main.java.br.unb.cic.bionimbus.services.storage.StorageService.java", "BodyUseAPI": ["cms.getPath().FILES.getFullPath(config.getId(),java.lang.String,java.lang.String)", "br.unb.cic.bionimbus.services.storage.StorageService.getPath()", "br.unb.cic.bionimbus.config.BioNimbusConfig.getId()", "br.unb.cic.bionimbus.services.storage.StorageService.createZNode(CreateMode.PERSISTENT,cms.getPath().FILES.getFullPath(config.getId(), \"\", \"\"),java.lang.String)"], "Fixed commit": "1f9ea2aec6c1db95014f39b356599356eee7a694", "Url": "https://api.github.com/repos/bionimbuz/Bionimbuz", "Date": "2015-07-27T17:54:55Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCameraManager) != null) { mCameraManager.setTorchEnabled(enabled); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1921/buggy-version/qrcodereaderview.src.main.java.com.dlazaro66.qrcodereaderview.QRCodeReaderView.java", "BodyUseAPI": [], "Fixed commit": "8cb1d7863744c48db0c8cef80cf4e549b083d4c0", "Url": "https://api.github.com/repos/dlazaro66/QRCodeReaderView", "Date": "2016-08-09T15:14:38Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCameraManager) != null) { mCameraManager.setAutofocusInterval(autofocusIntervalInMs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1921/buggy-version/qrcodereaderview.src.main.java.com.dlazaro66.qrcodereaderview.QRCodeReaderView.java", "BodyUseAPI": [], "Fixed commit": "8cb1d7863744c48db0c8cef80cf4e549b083d4c0", "Url": "https://api.github.com/repos/dlazaro66/QRCodeReaderView", "Date": "2016-08-09T15:14:38Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connDef instanceof org.jboss.jca.common.api.metadata.common.v12.CommonConnDef) { setAttribute(model, org.jboss.as.connector.subsystems.resourceadapters.Constants.CONNECTABLE, ((org.jboss.jca.common.api.metadata.common.v12.CommonConnDef) (connDef)).isConnectable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2492/buggy-version/connector.src.main.java.org.jboss.as.connector.subsystems.resourceadapters.IronJacamarResourceCreator.java", "BodyUseAPI": [], "Fixed commit": "83a551a743bab6e6e0054928ccc5b881f8b0c5ee", "Url": "https://api.github.com/repos/kabir/wildfly", "Date": "2014-03-20T13:52:55Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.type) != (RenderGameOverlayEvent.ElementType.ALL)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1542/buggy-version/src.main.java.kenkron.antiqueatlasoverlay.AAORenderEventReceiver.java", "BodyUseAPI": [], "Fixed commit": "1578f79e974190dc07c53c1b2855b374d0374320", "Url": "https://api.github.com/repos/Kenkron/AntiqueAtlasOverlay", "Date": "2016-05-13T18:56:35Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((additionalInfoDto.getMotivationDto().getVideoMessage()) != null) { additionalInfoDto.getMotivationDto().getVideoMessage().setUserId(user.getId()); additionalInfoDto.getMotivationDto().getVideoMessage().setDocCategory(DocCategoryEnum.VIDEO_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/483/buggy-version/gde-webapp.src.main.java.com.nagarro.gde.controller.AdditionalInformationController.java", "BodyUseAPI": ["additionalInfoDto.getMotivationDto().getVideoMessage().setUserId(user.getId())", "additionalInfoDto.getMotivationDto().getVideoMessage()", "com.nagarro.gde.dto.additionalInformation.AdditionalInformationDto.getMotivationDto()", "additionalInfoDto.getMotivationDto().getVideoMessage()", "additionalInfoDto.getMotivationDto().getVideoMessage().setDocCategory(DocCategoryEnum.VIDEO_MESSAGE)", "com.nagarro.gde.dto.additionalInformation.AdditionalInformationDto.getMotivationDto()"], "Fixed commit": "85cb19ac20e912b65de6b8dd984433613d1b90bc", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-01-20T06:07:42Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((path.size()) <= ((p.getNewLocation()) + distanceForMove)) || (((path.size()) > ((p.getNewLocation()) + distanceForMove)) && (!(path.get(((p.getNewLocation()) + distanceForMove)).getChildrenTiles().get(((path.get(((p.getNewLocation()) + distanceForMove)).getChildrenTiles().size()) - 1)).hasPawn())))) { int points = calculatePointsOfTurn(p, distanceForMove); double valueOfTurn = points + (((aiSpeed) * (((avgDistanceOtherPlayers) + 2) / ((avgDistanceMe) + 2))) * distanceForMove); if ((valueOfTurn > (valueBestTurn)) || (bestCards.isEmpty())) { valueBestTurn = valueOfTurn; bestPawn = p; bestCards = new java.util.ArrayList<gameObjects.Card>(tempCardsPlayed); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8492/buggy-version/AtlantisGame.src.server.backend.GameAI.java", "BodyUseAPI": ["server.backend.GameAI.calculatePointsOfTurn(gameObjects.Pawn,int)"], "Fixed commit": "94693bdfe2e8df2f8b96cbd6fc4bf3421dc97457", "Url": "https://api.github.com/repos/elGreato/Atlantis", "Date": "2016-11-15T22:18:11Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cardsForNextIteration.size()) != 0) { doAMove(pawnsForNextIteration, cardsForNextIteration, tempCardsPlayed, distanceForMove, costsForMove); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8492/buggy-version/AtlantisGame.src.server.backend.GameAI.java", "BodyUseAPI": ["server.backend.GameAI.doAMove(java.util.ArrayList<gameObjects.Pawn>,java.util.ArrayList<gameObjects.Card>,java.util.ArrayList<gameObjects.Card>,int,int)"], "Fixed commit": "94693bdfe2e8df2f8b96cbd6fc4bf3421dc97457", "Url": "https://api.github.com/repos/elGreato/Atlantis", "Date": "2016-11-15T22:18:11Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((download.getResult()) != (Download.Result.SUCCESS)) { if ((download.getException()) != null) download.getException().printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2293/buggy-version/src.main.java.net.technicpack.autoupdate.Relauncher.java", "BodyUseAPI": ["net.technicpack.launchercore.mirror.download.Download.getException()", "download.getException().printStackTrace()", "net.technicpack.launchercore.mirror.download.Download.getException()"], "Fixed commit": "abca8e2bf915d79e9f1ba7142113bbc094c750ec", "Url": "https://api.github.com/repos/TechnicPack/LauncherCore", "Date": "2014-09-20T07:32:59Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((util.StringUtil.numOccurences(ss, \",\")) < (util.StringUtil.numOccurences(ss, \";\"))) sep = \";\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2015/buggy-version/src.data.FeatureService.java", "BodyUseAPI": [], "Fixed commit": "75a2f453426480fe11eb92d92037933b38ab5d35", "Url": "https://api.github.com/repos/mguetlein/CheS-Map", "Date": "2012-09-23T06:38:53Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldActivity != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2752/buggy-version/catroid.src.org.catrobat.catroid.ui.CastManager.java", "BodyUseAPI": [], "Fixed commit": "831a7e4884ba2ec9f101adcf93dd54809c9bdda8", "Url": "https://api.github.com/repos/catroid-chromecast/Catroid", "Date": "2015-07-22T07:15:28Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (phase == 1) { snapshots.add(new parser.ABParser.ABParserSnapshot((++step), stackNoAction(stack), tokensStartAt(tokens, inputTokenIndex), \"\", org.apache.commons.lang3.StringUtils.join(derivation, \" \"), false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1714/buggy-version/src.main.java.parser.ABParser.java", "BodyUseAPI": [], "Fixed commit": "b3af04d8a52208494d7d21b58c463fbf1e1b69d3", "Url": "https://api.github.com/repos/amirbawab/AB-Compiler", "Date": "2016-04-15T02:07:30Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rmiAnalyticAvailable) { analytic.processEvents(new auctionmanagement.AuctionEvent(AuctionEvent.AuctionType.AUCTION_ENDED, auc.getID())); logger.output(((((\"TimerTask:RMI\" + (\":processEvent:Invoke::\" + \"AuctionID:\")) + (auc.getID())) + \"\\n\") + \"Type:AUCTION_ENDED\"), 3); if ((bidder) != null) { analytic.processEvents(new auctionmanagement.BidEvent(bidder.getName(), auc.getID(), auc.getHighestBid(), BidEvent.BidEventType.BID_WON)); logger.output((((((((\"TimerTask:RMI\" + (\":processEvent:Invoke::\" + \"AuctionID:\")) + (auc.getID())) + \"\\nUser:\") + (auc.getHighestBidder())) + \"\\nPrice:\") + (auc.getHighestBid())) + \"\\nType:BID_WON\"), 3); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/9097/buggy-version/src.auctionmanagement.AuctionManagementSystem.java", "BodyUseAPI": [], "Fixed commit": "95b44dc3f2355fc7f6c0852669abba8d32f58a2c", "Url": "https://api.github.com/repos/delta458/DSLAB2", "Date": "2012-11-26T20:50:07Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(tb instanceof org.zkoss.zsoup.parser.XHtmlTreeBuilder)) || (!(tb.stack.isEmpty()))) { tb.reconstructFormattingElements(); tb.insert(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7733/buggy-version/src.main.java.org.zkoss.zsoup.parser.HtmlTreeBuilderState.java", "BodyUseAPI": ["org.zkoss.zsoup.parser.HtmlTreeBuilder.reconstructFormattingElements()", "org.zkoss.zsoup.parser.HtmlTreeBuilder.insert(Token.Character)"], "Fixed commit": "b4afe36c1688ae35d1c6b3ed7855f806e18c7c42", "Url": "https://api.github.com/repos/zkoss/zsoup", "Date": "2015-05-18T09:43:51Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LinearAlgebra.solveWithJacobi(Matrix,Vector,Vector,double)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((result[0]) != null) { java.lang.System.out.println((((\"x:\\n\" + (result[0])) + \"\\nIterations: \") + (result[1]))); }else { java.lang.System.out.println(((\"System did not converge after \" + (result[1])) + \" iterations.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/186/buggy-version/src.Driver.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "ab8e7ec96ccc81aec3b649f4dcd4c6fd973e5c3b", "Url": "https://api.github.com/repos/TheHappyDude/MATH2605Project", "Date": "2015-03-31T19:50:59Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((move) != null) && ((move.size()) >= 4)) { board.decreaseStatusDuration(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8157/buggy-version/src.shuffle.fwk.data.simulation.SimulationResult.java", "BodyUseAPI": [], "Fixed commit": "5754b0dc9203da738dbe9972c9b518260874fe71", "Url": "https://api.github.com/repos/Manitary/Shuffle-Move", "Date": "2016-06-20T03:04:23Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doc.select(\"#OPACLI\").text().contains(\"nicht gefunden\")) { throw new de.geeksfactory.opacclient.apis.OpacErrorException(stringProvider.getString(StringProvider.NO_RESULTS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2044/buggy-version/src.de.geeksfactory.opacclient.apis.Adis.java", "BodyUseAPI": [], "Fixed commit": "1568a61388769d37de49587aaef2e2516161e4cb", "Url": "https://api.github.com/repos/johan12345/opacclient", "Date": "2015-03-02T17:42:24Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (map.containsKey(profileCondition.getAttributeName())) { map.get(profileCondition.getAttributeName()).addAll(value); }else { map.put(profileCondition.getAttributeName(), value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1478/buggy-version/src.main.java.com.oxygenxml.profiling.ProfilingConditionsInformationsImpl.java", "BodyUseAPI": ["ro.sync.ecss.conditions.ProfileConditionInfoPO.getAttributeName()", "java.util.LinkedHashMap<java.lang.String, java.util.LinkedHashSet<java.lang.String>>.put(profileCondition.getAttributeName(),java.util.LinkedHashSet<java.lang.String>)", "java.util.LinkedHashMap<java.lang.String, java.util.LinkedHashSet<java.lang.String>>.get(profileCondition.getAttributeName())", "ro.sync.ecss.conditions.ProfileConditionInfoPO.getAttributeName()", "java.util.LinkedHashSet<java.lang.String>.addAll(java.util.LinkedHashSet<java.lang.String>)"], "Fixed commit": "fdd3b225f582a443c8290e851a79312ce55ff5d2", "Url": "https://api.github.com/repos/oxygenxml/oxygen-docbook-validate-check-completeness", "Date": "2017-09-07T09:50:58Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((session.getAdminHuntByName(mHuntName)) == null) { session.addHunt(com.example.aj.scavengersworld.Constants.ADMIN, hunt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8351/buggy-version/app.src.main.java.com.example.aj.scavengersworld.HuntCreateModify.java", "BodyUseAPI": ["com.example.aj.scavengersworld.UserSessionManager.addHunt(com.example.aj.scavengersworld.Constants.ADMIN,com.example.aj.scavengersworld.Model.Hunt)"], "Fixed commit": "696076b895b90a6ef28fcc6d512d400534ce1aa4", "Url": "https://api.github.com/repos/anirudh985/ScavengersWorld", "Date": "2016-11-10T05:27:46Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newHunt) && ((session.getAdminHuntByName(mHuntName)) == null)) { session.addHunt(com.example.aj.scavengersworld.Constants.ADMIN, hunt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8351/buggy-version/app.src.main.java.com.example.aj.scavengersworld.HuntCreateModify.java", "BodyUseAPI": ["com.example.aj.scavengersworld.UserSessionManager.addHunt(com.example.aj.scavengersworld.Constants.ADMIN,com.example.aj.scavengersworld.Model.Hunt)"], "Fixed commit": "696076b895b90a6ef28fcc6d512d400534ce1aa4", "Url": "https://api.github.com/repos/anirudh985/ScavengersWorld", "Date": "2016-11-10T05:27:46Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prefs.getBoolean(com.example.smartlist.MainLogon.AUTHORIZED, false)) { finish(); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6385/buggy-version/src.com.example.smartlist.MainLogon.java", "BodyUseAPI": [], "Fixed commit": "0b2b2a5aa195d6944c978f94c27679eda8c9acc1", "Url": "https://api.github.com/repos/listalista/SmartLister", "Date": "2013-11-26T11:52:07Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parserContext.isFlagHTMLFragmentParser()) com.html5parser.algorithms.ResetTheInsertionModeAppropriately.Run(parserContext, parserContext.getHtmlFragmentContext()); else com.html5parser.algorithms.ResetTheInsertionModeAppropriately.Run(parserContext, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4268/buggy-version/Code.src.main.java.com.html5parser.algorithms.ResetTheInsertionModeAppropriately.java", "BodyUseAPI": ["com.html5parser.algorithms.ResetTheInsertionModeAppropriately.Run(com.html5parser.classes.ParserContext,parserContext.getHtmlFragmentContext())", "com.html5parser.classes.ParserContext.getHtmlFragmentContext()", "com.html5parser.algorithms.ResetTheInsertionModeAppropriately.Run(com.html5parser.classes.ParserContext,<nulltype>)"], "Fixed commit": "cb33ecf7442715ef44efababaa2c01a5a7fa624f", "Url": "https://api.github.com/repos/HTML5MSc/HTML5Parser", "Date": "2015-06-25T14:51:08Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.lang.String>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(chars.finished(suffix.length()))) { int currentWordEnd = currentWindowEnd + (suffix.length()); if (chars.slice(currentWindowEnd, currentWordEnd).equals(suffix)) { buffer.add(new com.almondtools.rexlex.stringsearch.StringMatch(currentWindowStart, currentWordEnd, (prefix + suffix))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1859/buggy-version/src.main.java.com.almondtools.rexlex.stringsearch.SetBackwardOracleMatching.java", "BodyUseAPI": ["com.almondtools.rexlex.io.CharProvider.slice(int,int)", "java.lang.String.length()", "java.util.List<com.almondtools.rexlex.stringsearch.StringMatch>.add(com.almondtools.rexlex.stringsearch.StringMatch)", "chars.slice(currentWindowEnd, currentWordEnd).equals(java.lang.String)"], "Fixed commit": "5b2ac39cbc88a9f3211ec9800366088193bf2fb6", "Url": "https://api.github.com/repos/almondtools/rexlex", "Date": "2015-03-28T07:26:46Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.xandy.netspeed.NetService.mHasStartHandel)) { mHandler.postDelayed(mRunnable, 0); com.xandy.netspeed.NetService.mHasStartHandel = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5186/buggy-version/src.com.xandy.netspeed.NetService.java", "BodyUseAPI": [], "Fixed commit": "e00eeb4677569ba80d79a46915363b0b7fcce213", "Url": "https://api.github.com/repos/XanderWang/NetSpeed", "Date": "2015-05-05T12:21:15Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newString.length()) != 5) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/769/buggy-version/WordLadderSolver.java", "BodyUseAPI": [], "Fixed commit": "302d6ae0a048b907059cf3100a0876ff2c5019fb", "Url": "https://api.github.com/repos/cykim07nd/WordLadder", "Date": "2016-03-06T09:04:35Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((varAnnot.getVariant().getOriginal().length()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5762/buggy-version/web.src.main.java.org.nextprot.api.web.service.impl.PepXServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "75b2c3b1b0b1dee8f2bf71b2780215983ea6a248", "Url": "https://api.github.com/repos/calipho-sib/nextprot-api", "Date": "2016-05-26T15:13:11Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ElmTypes.FRESH_LINE.equals(type)) || (end == (text.length()))) { this.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2668/buggy-version/src.org.elmlang.intellijplugin.manualParsing.IndentationTokenTypeRemapper.java", "BodyUseAPI": [], "Fixed commit": "d8d3591ca7c1351afdda6a06b4d19bfc5aa78169", "Url": "https://api.github.com/repos/durkiewicz/elm-plugin", "Date": "2016-02-12T12:23:21Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.bukkit.Bukkit.getVersion().toLowerCase().contains(\"paper\")) { plugin.getLogger().info(\"Enabling PaperSpigot patch: Fixes block placement.\"); org.bukkit.Bukkit.getPluginManager().registerEvents(new us.myles.ViaVersion.protocols.protocol1_9to1_8.listeners.PaperPatch(), plugin); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/479/buggy-version/src.main.java.us.myles.ViaVersion.protocols.protocol1_9to1_8.Protocol1_9TO1_8.java", "BodyUseAPI": [], "Fixed commit": "f1b9cd2e56f9a347f3f2c4a1924c4ed8e3fd1c4d", "Url": "https://api.github.com/repos/Matsv/ViaVersion", "Date": "2016-03-26T15:28:42Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOver()) this.state = new com.googlecode.prmf.Postgame(inputThread);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/317/buggy-version/src.com.googlecode.prmf.Game.java", "BodyUseAPI": [], "Fixed commit": "bcf2f4f00c1f8300edc64ac547bf8101cde10cde", "Url": "https://api.github.com/repos/miorel/prmf", "Date": "2010-04-13T01:19:56Z"},
{"Line": "=>804", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (envsToSendTo.isEmpty()) { response.sendError(HttpServletResponse.SC_FORBIDDEN); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8808/buggy-version/src.com.dotcms.publisher.ajax.RemotePublishAjaxAction.java", "BodyUseAPI": [], "Fixed commit": "f40bf41efc46823924d4fce972cdf7f621da2027", "Url": "https://api.github.com/repos/dotCMS/dotCMS", "Date": "2013-12-16T16:32:50Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gameEngine.models.Terrain.getHeightOfTerrain(getPosition().x,getPosition().z)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((super.getPosition().y) <= terrainHeight) { this.isJumping = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3035/buggy-version/GameEngine_PC.GameEngineOpenGL3_2.src.main.java.gameEngine.models.Player.java", "BodyUseAPI": [], "Fixed commit": "ed838c31e49580ef7b8323d59cc74ef876e0cecc", "Url": "https://api.github.com/repos/FerreiraDaniel/GameEngine", "Date": "2016-11-01T10:30:57Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getDataContext().getData(DataConstants.VIRTUAL_FILE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(actionParnetDirectory.isDirectory())) { actionParnetDirectory = actionParnetDirectory.getParent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4110/buggy-version/src.pl.klamborowski.jacksongenerator.JacksonGenerator.java", "BodyUseAPI": ["com.intellij.openapi.vfs.VirtualFile.getParent()"], "Fixed commit": "749459c33df5fa7f4fbe9997d03d7a307b51bed2", "Url": "https://api.github.com/repos/klamborowski/JacksonGenerator", "Date": "2015-02-02T14:41:19Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((directory.findFile(file.getName())) != null) { replaceIfExist = com.intellij.openapi.ui.Messages.showYesNoDialog(((\"File \" + (file.getName())) + \" already exists! \\nDo you want to delete it and replace by the generated file?\"), ((\"File \" + (file.getName())) + \" already exists!\"), com.intellij.openapi.ui.Messages.getWarningIcon()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4110/buggy-version/src.pl.klamborowski.jacksongenerator.JacksonGenerator.java", "BodyUseAPI": ["pl.klamborowski.jacksongenerator.PsiFile.getName()", "com.intellij.openapi.ui.Messages.showYesNoDialog(((\"File \" + (file.getName())) + \" already exists! \\nDo you want to delete it and replace by the generated file?\"),((\"File \" + (file.getName())) + \" already exists!\"),com.intellij.openapi.ui.Messages.getWarningIcon())", "pl.klamborowski.jacksongenerator.PsiFile.getName()"], "Fixed commit": "749459c33df5fa7f4fbe9997d03d7a307b51bed2", "Url": "https://api.github.com/repos/klamborowski/JacksonGenerator", "Date": "2015-02-02T14:41:19Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subscribedToRunningStateUpdates) && (!(samuelpalmer.sensorautorotation.processes.service.ServiceRunningStateHolder.isServiceRunning()))) { subscribedToRunningStateUpdates = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8541/buggy-version/app.src.main.java.samuelpalmer.sensorautorotation.processes.service.ApplicationStatusMonitor.java", "BodyUseAPI": [], "Fixed commit": "04ad5bb0efb5d967a6a1dbed532951c7c9cd2316", "Url": "https://api.github.com/repos/sampalmer/sideways-mode", "Date": "2017-10-27T12:56:48Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.SearchContext.getStart()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (start == (com.liferay.portal.kernel.dao.orm.QueryUtil.ALL_POS)) { start = 0; }else if (start < 0) { throw new java.lang.IllegalArgumentException((\"Invalid start \" + start)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4435/buggy-version/modules.apps.portal-search-solr.portal-search-solr.src.main.java.com.liferay.portal.search.solr.internal.SolrIndexSearcher.java", "BodyUseAPI": [], "Fixed commit": "b0d057c27be5d816e7e7eb39589f51212f9f84c2", "Url": "https://api.github.com/repos/austinchiang/liferay-portal", "Date": "2017-04-26T19:07:19Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.search.SearchContext.getEnd()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (end == (com.liferay.portal.kernel.dao.orm.QueryUtil.ALL_POS)) { end = total; }else if (end < 0) { throw new java.lang.IllegalArgumentException((\"Invalid end \" + end)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4435/buggy-version/modules.apps.foundation.portal-search.portal-search-elasticsearch.src.main.java.com.liferay.portal.search.elasticsearch.internal.ElasticsearchIndexSearcher.java", "BodyUseAPI": [], "Fixed commit": "b0d057c27be5d816e7e7eb39589f51212f9f84c2", "Url": "https://api.github.com/repos/austinchiang/liferay-portal", "Date": "2017-04-26T19:07:19Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x == 2) fiftyFiftyCheckTwo = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4947/buggy-version/src.Gameplay.java", "BodyUseAPI": [], "Fixed commit": "da1bc27ea8504d58fe583dd6b434dc0988559c49", "Url": "https://api.github.com/repos/andrewtsoc/WWTBAM", "Date": "2014-05-06T03:10:36Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cgm.getSkeleton().find()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (skeleton == null) { com.jme3.animation.Bone[] bones = new com.jme3.animation.Bone[0]; skeleton = new com.jme3.animation.Skeleton(bones); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/9062/buggy-version/src.main.java.maud.model.SelectedSpatial.java", "BodyUseAPI": [], "Fixed commit": "3ab38b95ef9fdb9175ddf9a6d4cc615ee0aa89bd", "Url": "https://api.github.com/repos/stephengold/Maud", "Date": "2017-10-25T04:50:34Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (session.isClosed()) { org.eclipse.moquette.spi.impl.ProtocolProcessor.LOG.warn(\"channel was closed. client <{}>\", msg.getClientID()); session.close(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3584/buggy-version/broker.src.main.java.org.eclipse.moquette.spi.impl.ProtocolProcessor.java", "BodyUseAPI": ["org.eclipse.moquette.server.ServerChannel.close(boolean)"], "Fixed commit": "8d3f21ca51ef17dd8581b37ef56beec3f0d4c637", "Url": "https://api.github.com/repos/runafter/moquette", "Date": "2015-09-21T12:24:34Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (start != null) { startId = start.getData(java.lang.Integer.class).intValue(); }else if (next) { startId = -1; }else { startId = this.idMap.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2134/buggy-version/de.carne.filescanner.src.main.java.de.carne.filescanner.jfx.session.SearchIndex.java", "BodyUseAPI": ["de.carne.filescanner.core.FileScannerResult.getData(java.lang.Class)", "start.getData(java.lang.Integer.class).intValue()"], "Fixed commit": "272b1fbabbadc7d27f3fac1a4a6d9655da643ad3", "Url": "https://api.github.com/repos/hdecarne/filescanner", "Date": "2016-06-05T13:02:24Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.silverpeas.sharing.services.SharingServiceFactory.getSharingTicketService().getTicket(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((ticket == null) || (!(ticket.isValid()))) { throw new javax.ws.rs.WebApplicationException(Response.Status.NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5488/buggy-version/web-core.src.main.java.org.silverpeas.sharing.web.SharingResource.java", "BodyUseAPI": [], "Fixed commit": "897d9415ca26f84c4ba7b192f8eb081402dbea5f", "Url": "https://api.github.com/repos/NicolasEYSSERIC/Silverpeas-Core", "Date": "2013-11-05T16:27:09Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.ironjan.mensaupb.stw.filters.RawMenu.getCategory_en()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (de.ironjan.mensaupb.stw.filters.TextUtils.isEmpty(category_en)) { filteredMenu.setCategory_en(\"\"); }else { category_en = category_en.replaceAll(de.ironjan.mensaupb.stw.filters.AwkwardTranslationFilter.BAD_TRANSLATION, de.ironjan.mensaupb.stw.filters.AwkwardTranslationFilter.BETTER_TRANSLATION); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2987/buggy-version/app.src.main.java.de.ironjan.mensaupb.stw.filters.AwkwardTranslationFilter.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "22327df78a1cd4da3882df8117afb1937e43ed7d", "Url": "https://api.github.com/repos/ironjan/MensaUPB", "Date": "2015-02-04T21:49:23Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit2.Response<com.iron.dragon.sportstogether.data.bean.Profile>.body()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((profile != null) && ((profile.getUsername()) == null)) { android.widget.Toast.makeText(context, (username + \"\ub2d8\uc758 \ud504\ub85c\ud544\uc774 \uc11c\ubc84\uc5d0 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4\"), Toast.LENGTH_SHORT).show(); }else cb.onLoaded(profile);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3383/buggy-version/app.src.main.java.com.iron.dragon.sportstogether.http.retrofit.RetrofitHelper.java", "BodyUseAPI": ["com.iron.dragon.sportstogether.http.retrofit.RetrofitHelper.ProfileListener.onLoaded(com.iron.dragon.sportstogether.data.bean.Profile)"], "Fixed commit": "94e328203232cb2f8585ea49642131413de56d87", "Url": "https://api.github.com/repos/chulgee/SportsTogether", "Date": "2017-03-05T05:06:52Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.util.Map<java.util.UUID, uk.ac.ic.kyoto.countries.OfferMessage>>.get(simTime.intValue())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (t == null) { t = new java.util.HashMap<java.util.UUID, uk.ac.ic.kyoto.countries.OfferMessage>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4132/buggy-version/kyoto.src.main.java.uk.ac.ic.kyoto.tradehistory.OfferHistory.java", "BodyUseAPI": [], "Fixed commit": "8e21dd534231bed8e6368c8091a75062323c7262", "Url": "https://api.github.com/repos/farhanrahman/kyoto", "Date": "2012-06-24T18:20:22Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.util.Map<java.util.UUID, uk.ac.ic.kyoto.countries.OfferMessage>>.get(simTime.intValue())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (t == null) { t = new java.util.HashMap<java.util.UUID, uk.ac.ic.kyoto.countries.OfferMessage>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4132/buggy-version/kyoto.src.main.java.uk.ac.ic.kyoto.singletonfactory.TradeHistoryImplementation.java", "BodyUseAPI": [], "Fixed commit": "8e21dd534231bed8e6368c8091a75062323c7262", "Url": "https://api.github.com/repos/farhanrahman/kyoto", "Date": "2012-06-24T18:20:22Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pk.equals(\"ERROR\")) { try { throw new java.lang.Exception(\"EVERYTHING'S FUCKED\"); } catch (java.lang.Exception e) { e.printStackTrace(); } }else { url += pk + \"&v3=\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8898/buggy-version/PassTapAndroid.app.src.main.java.com.passtap.passtapandroid.Authenticate.java", "BodyUseAPI": [], "Fixed commit": "d2e2d901ec393c2c02bf1756fd5911f29a80c8f4", "Url": "https://api.github.com/repos/ColeHoff7/PassTap", "Date": "2016-10-08T18:53:31Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rev <= 1) { msg = ((int) ((hdr & 15) >> 0)); }else { msg = ((int) ((hdr & 31) >> 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2808/buggy-version/src.main.java.org.ykc.usbcx.PDParser.java", "BodyUseAPI": [], "Fixed commit": "131741f6d34a8c51e9dfd0c29b861dbbc12121e4", "Url": "https://api.github.com/repos/tejv/USBCx", "Date": "2017-08-01T23:12:53Z"},
{"Line": "=>1174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.cdt.internal.formatter.CodeFormatterVisitor.peekNextToken()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (token == (org.eclipse.cdt.internal.formatter.scanner.Token.t_using)) scribe.printNextToken(token);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5979/buggy-version/core.org.eclipse.cdt.core.src.org.eclipse.cdt.internal.formatter.CodeFormatterVisitor.java", "BodyUseAPI": ["org.eclipse.cdt.internal.formatter.Scribe.printNextToken(int)"], "Fixed commit": "79dc53a60ddce2034f461b4aa6114b3b3e7f6e17", "Url": "https://api.github.com/repos/wind-river-cdt/cdt", "Date": "2012-03-06T00:06:11Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getName()", "org.wso2.carbon.webapp.mgt.WebApplicationsHolder.getStoppedWebapps()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (stoppedWebapps.containsKey(fileName)) { undeploy(stoppedWebapps.get(fileName)); }else if (faultyWebapps.containsKey(fileName)) { undeploy(faultyWebapps.get(fileName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3670/buggy-version/components.webapp-mgt.org.wso2.carbon.webapp.mgt.src.main.java.org.wso2.carbon.webapp.mgt.TomcatGenericWebappsDeployer.java", "BodyUseAPI": ["org.wso2.carbon.webapp.mgt.TomcatGenericWebappsDeployer.undeploy(stoppedWebapps.get(fileName))", "java.util.Map<java.lang.String, org.wso2.carbon.webapp.mgt.WebApplication>.get(java.lang.String)", "java.util.Map<java.lang.String, org.wso2.carbon.webapp.mgt.WebApplication>.get(java.lang.String)", "org.wso2.carbon.webapp.mgt.TomcatGenericWebappsDeployer.undeploy(faultyWebapps.get(fileName))", "java.util.Map<java.lang.String, org.wso2.carbon.webapp.mgt.WebApplication>.containsKey(java.lang.String)"], "Fixed commit": "eb4e6e9637a87ddc238a9874fc7252021cddbbc9", "Url": "https://api.github.com/repos/manoj-kumara/carbon-deployment", "Date": "2014-05-13T16:43:24Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lastPrivacyData) == null) || ((lastPrivacyData.privacyTypes) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5622/buggy-version/datakit.src.main.java.org.md2k.datakit.privacy.PrivacyManager.java", "BodyUseAPI": [], "Fixed commit": "cbd67a776c212b23e729bdcce9984b8729bcc89b", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-DataKit", "Date": "2016-01-29T19:45:47Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.intalker.borrow.cloud.CloudUtility.isLoggedIn()) { com.intalker.borrow.cloud.CloudAPI.sychronizeOwnedBooks(this, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7285/buggy-version/src.com.intalker.borrow.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "96162832e14fb83aece0e46df12e4b063279930d", "Url": "https://api.github.com/repos/tomdong/borrow", "Date": "2013-04-04T09:36:07Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (stringLength == 5) { newFormattedDate = \"0\" + newFormattedDate; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6552/buggy-version/app.src.main.java.com.example.user.whatcolourisittoday.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7c4b4365b366a2ae95eaf3270144124cbd1d5318", "Url": "https://api.github.com/repos/moxuz/AndroidApp-ColourMeRed", "Date": "2015-01-10T04:33:31Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.tools.javac.util.Options.instance(com.sun.tools.javac.util.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rawOptions instanceof lombok.javac.LombokOptions) return ((lombok.javac.LombokOptions) (rawOptions));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4002/buggy-version/src.delombok.lombok.delombok.LombokOptionsFactory.java", "BodyUseAPI": [], "Fixed commit": "9ac86c8a234f2ecd280f27f0dbda15440b1bf155", "Url": "https://api.github.com/repos/thomasdarimont/lombok", "Date": "2013-12-04T06:14:56Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.aionemu.gameserver.configs.main.GeoDataConfig.GEO_ENABLE) { try { geometry = ((com.aionemu.gameserver.geoEngine.scene.Node) (com.aionemu.gameserver.geoEngine.GeoWorldLoader.loadMeshs(\"data/geodata/models/na_ab_lmark_col_01a.mesh\").values().toArray()[0])); geometry.setTransform(new com.aionemu.gameserver.geoEngine.math.Matrix3f(1.15F, 0, 0, 0, 1.15F, 0, 0, 0, 1.15F), new com.aionemu.gameserver.geoEngine.math.Vector3f(2140.104F, 1925.5823F, 2303.919F), 1.0F); } catch (java.io.IOException e) { e.printStackTrace(); } geometry.updateModelBound(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/8894/buggy-version/dist.game.data.scripts.system.handlers.zone.AbyssCore.java", "BodyUseAPI": [], "Fixed commit": "8c1f35c76943b64defb5c67d59c431ff0123525b", "Url": "https://api.github.com/repos/MobiusDevelopment/Mobius_AionEmu_5.1", "Date": "2017-09-04T16:55:39Z"},
{"Line": "=>1160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dateOfDeath == null) { this.dateOfDeath = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7514/buggy-version/mci-api.src.main.java.org.sharedhealth.mci.web.model.Patient.java", "BodyUseAPI": [], "Fixed commit": "4514b3273264e26a11d4cb3da8fd8ed597871f0c", "Url": "https://api.github.com/repos/SharedHealth/MCI-Service", "Date": "2015-02-19T11:39:24Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) != 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3096/buggy-version/src.ca.uqac.lif.crv.PinguSpontaneousCreation.java", "BodyUseAPI": [], "Fixed commit": "c70322cc56790deaf266d35d335a2535decaeb27", "Url": "https://api.github.com/repos/phoenixxie/crv-beepbeep", "Date": "2016-07-15T03:07:13Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count != (pinguids.size())) { java.lang.System.out.println(\"STATUS: Violated\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3096/buggy-version/src.ca.uqac.lif.crv.PinguSpontaneousCreation.java", "BodyUseAPI": [], "Fixed commit": "c70322cc56790deaf266d35d335a2535decaeb27", "Url": "https://api.github.com/repos/phoenixxie/crv-beepbeep", "Date": "2016-07-15T03:07:13Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) { throw new java.lang.Exception(\"Unable to add message without an active user in the session\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3168/buggy-version/src.main.java.com.tiy.SpringChatAppJsonController.java", "BodyUseAPI": [], "Fixed commit": "2a1da9fccf191df4f6310b12b8afa173b9014780", "Url": "https://api.github.com/repos/dgowens2/WeekendSpringAngularChatApp", "Date": "2016-09-26T19:31:49Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((typeCombo) != null) { typeCombo.setItems(comboBoxData()); unitCombo.setItems(units); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1635/buggy-version/Marketing.src.main.java.views.MarketingController.java", "BodyUseAPI": [], "Fixed commit": "c579a45bfa71f1e2351f8e2261d4bea6c6ff1e39", "Url": "https://api.github.com/repos/nottictp/Project_SA_V2", "Date": "2017-11-26T12:29:56Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controller) != null) { typeCombo.setItems(comboBoxData()); unitCombo.setItems(units); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1635/buggy-version/Marketing.src.main.java.views.MarketingController.java", "BodyUseAPI": [], "Fixed commit": "c579a45bfa71f1e2351f8e2261d4bea6c6ff1e39", "Url": "https://api.github.com/repos/nottictp/Project_SA_V2", "Date": "2017-11-26T12:29:56Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(originUserName.startsWith(\"@\"))) ownNickName = originUserName.substring(1); else ownNickName = originUserName;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1425/buggy-version/Source.src.de.fro_ozen.cl4ire.IRCInputListener.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "0bd1b064fe183907345012bf383108e0451ef418", "Url": "https://api.github.com/repos/froozen/Claire", "Date": "2013-11-21T13:42:32Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pRGBPoint.red) == (pRGBPoint.green)) && ((pRGBPoint.red) == (pRGBPoint.blue))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/4572/buggy-version/src.org.jwildfire.create.tina.render.GammaCorrectionFilter.java", "BodyUseAPI": [], "Fixed commit": "949e182a32992a72405dd4bad8400f7b669817ed", "Url": "https://api.github.com/repos/GreggHelt2/JWildfire", "Date": "2016-07-12T02:53:27Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mShotMode.matches(SettingDefine.SHOT_MODE_SELF_SHOT)) { android.hardware.Camera.Parameters parameters = mCamera.getParameters(); parameters.setRotation(270); mCamera.setParameters(parameters); }else { android.hardware.Camera.Parameters parameters = mCamera.getParameters(); parameters.setRotation(90); mCamera.setParameters(parameters); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1288/buggy-version/AssitantCam.DMCCam.src.com.dmc.camera.assist.Preview.java", "BodyUseAPI": [], "Fixed commit": "c4d40c3a8e727ba3400e777156c88232bd0db956", "Url": "https://api.github.com/repos/npinal/Household_001", "Date": "2013-08-10T08:59:10Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((spinner.getSelectedItem()) != null) { java.lang.String temp = spinner.getSelectedItem().toString(); java.lang.String[] parts = temp.split(\" \"); this.ccode = parts[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6345/buggy-version/StuderaEffektivt.app.src.main.java.se.chalmers.datx02_15_36.studeraeffektivt.fragment.TimerFrag.java", "BodyUseAPI": ["spinner.getSelectedItem().toString()", "android.widget.Spinner.getSelectedItem()"], "Fixed commit": "c3841c367cfad4f44a02c2fdd1150f9fb96d4a96", "Url": "https://api.github.com/repos/Soya93/DATX02_15_36", "Date": "2015-05-05T11:26:29Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["robowiki.runner.RoboRunner.getScoreSummary(java.util.Properties,group.referenceBots,robowiki.runner.RobotScore.ScoringStyle)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((summary.scoredBotLists) > 0) { sumGroups += groupScore; scoredGroups++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2878/buggy-version/src.robowiki.runner.RoboRunner.java", "BodyUseAPI": [], "Fixed commit": "1136dd2022e76ab44aee4f18d063e26beb5c0941", "Url": "https://api.github.com/repos/Voidious/RoboRunner", "Date": "2012-07-29T14:57:21Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getCurrentViewer()) != null) && ((getCurrentViewer().getControl()) instanceof org.eclipse.draw2d.FigureCanvas)) { org.eclipse.draw2d.geometry.Rectangle ca = ((org.eclipse.draw2d.FigureCanvas) (getCurrentViewer().getControl())).getViewport().getClientArea(); x_offset = ca.x; y_offset = ca.y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6073/buggy-version/com.archimatetool.editor.src.com.archimatetool.editor.diagram.policies.snaptogrid.ExtendedConnectionBendpointTracker.java", "BodyUseAPI": [], "Fixed commit": "3fbe5efefdcb21e3a67052baa7c0e7be331a6375", "Url": "https://api.github.com/repos/jbsarrodie/archi", "Date": "2014-09-21T18:02:43Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPromo) { com.thoughtworks.lhli.lovelive_rock.adapter.MediumCardListAdapter.setTextView(viewHolder.mediumCardSkillDetail, cardModelList.get(position).getSkillDetails()); }else { com.thoughtworks.lhli.lovelive_rock.adapter.MediumCardListAdapter.setTextView(viewHolder.mediumCardSkillDetail, cardModelList.get(position).getJapaneseSkillDetails()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7782/buggy-version/app.src.main.java.com.thoughtworks.lhli.lovelive_rock.adapter.MediumCardListAdapter.java", "BodyUseAPI": [], "Fixed commit": "f04cea6a1e575d96c856fa1e9fe6ee909614fbc0", "Url": "https://api.github.com/repos/Kevin170113664/lovelive_rock", "Date": "2015-12-04T14:17:38Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { file.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7794/buggy-version/V0.0.src.ido.main.Parser.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "50c72a2643383401ef770cfaab9b0e11b1e3c5e5", "Url": "https://api.github.com/repos/cs2103Taug2014-t09-2j/main", "Date": "2014-11-03T06:25:52Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (javassist.Modifier.isAbstract(targetClass.getModifiers())) { throw new org.msgpack.template.builder.TemplateBuildException((\"Cannot build template for abstract class: \" + (targetClass.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/7561/buggy-version/src.main.java.org.msgpack.template.builder.AbstractTemplateBuilder.java", "BodyUseAPI": ["java.lang.Class<?>.getName()"], "Fixed commit": "f15805d0f8f285a9d52d671e41d813400afc7335", "Url": "https://api.github.com/repos/muga/msgpack-java", "Date": "2012-06-05T19:18:08Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xx < 0) xPix--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6271/buggy-version/src.info.learning.thatNotchEngineL21.gui.Bitmap3D.java", "BodyUseAPI": [], "Fixed commit": "ed56bc3965ac3e41c7b48cc928fb256668debf45", "Url": "https://api.github.com/repos/abhagat/that-notch-engine-L21", "Date": "2014-04-22T02:39:55Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (yy < 0) yPix--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6271/buggy-version/src.info.learning.thatNotchEngineL21.gui.Bitmap3D.java", "BodyUseAPI": [], "Fixed commit": "ed56bc3965ac3e41c7b48cc928fb256668debf45", "Url": "https://api.github.com/repos/abhagat/that-notch-engine-L21", "Date": "2014-04-22T02:39:55Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((config.defaultRoles) != null) { for (java.lang.String name : config.defaultRoles) { org.cubeengine.module.roles.service.subject.RoleSubject role = service.getGroupSubjects().get(name); list.add(role); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/984/buggy-version/roles.src.main.java.org.cubeengine.module.roles.service.data.DefaultSubjectData.java", "BodyUseAPI": [], "Fixed commit": "d15fbd2738b3617dc221866c81d4a38915ded67d", "Url": "https://api.github.com/repos/CubeEngine/modules-main", "Date": "2016-09-11T11:20:30Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.team08storyapp.Story>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (total > 0) { story.setOfflineStoryId(((java.lang.Math.max((total - 1), offlineStories.get((total - 1)).getOfflineStoryId())) + 1)); }else { story.setOfflineStoryId(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6317/buggy-version/Team08StoryApp.src.com.team08storyapp.FileHelper.java", "BodyUseAPI": ["java.util.ArrayList<com.team08storyapp.Story>.get(int)", "com.team08storyapp.Story.setOfflineStoryId(((java.lang.Math.max((total - 1), offlineStories.get((total - 1)).getOfflineStoryId())) + 1))", "java.lang.Math.max(int,offlineStories.get((total - 1)).getOfflineStoryId())", "offlineStories.get((total - 1)).getOfflineStoryId()"], "Fixed commit": "115b6fc408994a7ab8f95dfe04b040361693c6f9", "Url": "https://api.github.com/repos/CMPUT301F13T08/CMPUT301F13T08", "Date": "2013-11-20T19:31:14Z"},
{"Line": "=>4", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((argv.length) > 0) { unZip.unZip(argv[0], \".tmp\"); }else { unZip.unZip(\"ressources.zip\", \".tmp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/2820/buggy-version/src.Replayr.java", "BodyUseAPI": ["Unzip.unZip(java.lang.String,java.lang.String)"], "Fixed commit": "217007bb8ab589271429c8267ef6f8089bcae2c0", "Url": "https://api.github.com/repos/kimlavoie/replayr", "Date": "2013-06-25T19:05:59Z"},
{"Line": "=>785", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.julielab.jcore.reader.muc7.MUC7Reader.corefHashMap.get(corefID).getRefID()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (de.julielab.jcore.reader.muc7.MUC7Reader.corefHashMap.containsKey(refID)) { de.julielab.jcore.types.muc7.Coref refCoref = getCorefFromCAS(de.julielab.jcore.reader.muc7.MUC7Reader.corefHashMap.get(refID).getBegin(), de.julielab.jcore.reader.muc7.MUC7Reader.corefHashMap.get(refID).getEnd()); c.setRef(refCoref); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/6647/buggy-version/jcore-muc7-reader.src.main.java.de.julielab.jcore.reader.muc7.MUC7Reader.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, de.julielab.jcore.reader.muc7.MUC7Coreference>.get(int)", "java.util.HashMap<java.lang.Integer, de.julielab.jcore.reader.muc7.MUC7Coreference>.get(int)", "de.julielab.jcore.reader.muc7.MUC7Reader.getCorefFromCAS(de.julielab.jcore.reader.muc7.MUC7Reader.corefHashMap.get(refID).getBegin(),de.julielab.jcore.reader.muc7.MUC7Reader.corefHashMap.get(refID).getEnd())", "de.julielab.jcore.reader.muc7.MUC7Reader.corefHashMap.get(refID).getBegin()", "de.julielab.jcore.reader.muc7.MUC7Reader.corefHashMap.get(refID).getEnd()"], "Fixed commit": "cf9ac97e3712bd8328d2401823c507a311faffde", "Url": "https://api.github.com/repos/JULIELab/jcore-base", "Date": "2016-06-07T15:37:54Z"},
{"Line": "=>613", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameServer) != null) { gameServer.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/1461/buggy-version/core.src.main.java.net.javaci.mobile.bomberman.core.view.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "c9133961e79d39dcc736885b8a6035119045d101", "Url": "https://api.github.com/repos/firstthumb/Bomberman", "Date": "2014-01-24T00:32:57Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shipType == (domain.BomberShip.class)) { this.gold -= util.Constants.BOMBER_SHIP_COST; }else if (shipType == (domain.DestroyerShip.class)) { this.gold -= util.Constants.DESTROYER_SHIP_COST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/3287/buggy-version/src.main.java.domain.Planet.java", "BodyUseAPI": [], "Fixed commit": "d4132819cfa7c79884013f8761e862de05613ccc", "Url": "https://api.github.com/repos/OneHP/WorldsEnd", "Date": "2012-04-22T12:50:45Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (includePlateInfo) { hashReactionPlates(sess); hashSourcePlates(sess); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V78/5497/buggy-version/src.hci.gnomex.controller.GetRequestList.java", "BodyUseAPI": [], "Fixed commit": "30f26bff4d17c27290a0ef20e7167e2077b8646c", "Url": "https://api.github.com/repos/hci-gnomex/gnomex", "Date": "2016-01-06T18:25:39Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((totalDeathsPerSession) == 0) return \"Perfect KDA\"; else return (calculateKDA()) + \" KDA\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7640/buggy-version/app.src.main.java.com.lit.wa.yuen.looklol.model.AggregatedStatsDto.java", "BodyUseAPI": [], "Fixed commit": "7134c5edb3f425456cedf81a812af842103da940", "Url": "https://api.github.com/repos/litwa-yuen/LookLOL", "Date": "2017-02-27T02:48:36Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.todoroo.andlib.utility.Preferences.getBoolean(R.string.p_showed_tap_task_help, false))) { showTaskEditHelpPopover(); }else if ((com.todoroo.andlib.utility.Preferences.isSet(getString(R.string.p_showed_lists_help))) && (!(com.todoroo.andlib.utility.Preferences.getBoolean(R.string.p_showed_lists_help, false)))) { com.todoroo.astrid.welcome.HelpInfoPopover.showPopover(this, findViewById(R.id.back), R.string.help_popover_lists, null); com.todoroo.andlib.utility.Preferences.setBoolean(R.string.p_showed_lists_help, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7559/buggy-version/astrid.src.com.todoroo.astrid.activity.TaskListActivity.java", "BodyUseAPI": [], "Fixed commit": "316d99830613bc4db69c0a4dcb92dc4074f82012", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2011-12-22T19:31:42Z"},
{"Line": "=>1120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isVisible)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3384/buggy-version/src.org.gk.render.HyperEdge.java", "BodyUseAPI": [], "Fixed commit": "1045175972a3295c47d7b35029b96f2438af1ec4", "Url": "https://api.github.com/repos/reactome/CuratorTool", "Date": "2017-05-10T04:05:58Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (limitFrames) try { java.lang.Thread.sleep(millis, nanos); } catch (java.lang.InterruptedException e) { java.lang.System.out.println(\"Update Thread interruped\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6090/buggy-version/src.com.fwumdegames.api.framework.FGame.java", "BodyUseAPI": [], "Fixed commit": "d17493a9a46d8cc39aa61112c7f3a426086462e1", "Url": "https://api.github.com/repos/fwumdegames/FwumDeAPI", "Date": "2014-10-25T20:56:57Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.me.candle.eve.pricing.Pricing.getNextUpdateTime(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nextUpdateTemp >= 0) && (nextUpdateTemp > (nextUpdate))) { nextUpdate = nextUpdateTemp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6993/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.online.PriceDataGetter.java", "BodyUseAPI": [], "Fixed commit": "642e6de671a951d01fa4c7e331d620ef77c75aa4", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2016-08-15T19:26:30Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.faces.component.behavior.ClientBehaviorContext.getComponent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (comp instanceof javax.faces.component.ActionSource2) { script = script.replaceAll(\"this\", ((\"dojo.byId(\\\"\" + (comp.getClientId())) + \"\\\")\")); }else { java.lang.String jsfNode = ((org.dojoserverfaces.widget.DojoWidget) (comp)).getJsfNode(); if ((jsfNode != null) && ((jsfNode.length()) > 0)) { script = script.replaceAll(\"this\", (\"this.\" + jsfNode)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1009/buggy-version/dojoserverfaces-core.src.main.java.org.dojoserverfaces.widget.property.EventHandlerProperty.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,((\"dojo.byId(\\\"\" + (comp.getClientId())) + \"\\\")\"))", "javax.faces.component.UIComponent.getClientId()"], "Fixed commit": "eb4e469b612255f23225751c89e2fa7304121714", "Url": "https://api.github.com/repos/meghakuchhal/DojoServerFaces", "Date": "2011-05-09T07:42:43Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.faces.context.FacesContext.getPartialViewContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pvContext.isPartialRequest()) && (pvContext.isAjaxRequest())) { java.lang.String sourceId = requestParams.get(\"javax.faces.source\"); if (!(component.getClientId(context).equals(sourceId))) return; component.queueEvent(new javax.faces.event.ActionEvent(component)); }else if (requestParams.containsKey(component.getClientId(context))) { component.queueEvent(new javax.faces.event.ActionEvent(component)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1009/buggy-version/dojoserverfaces-core.src.main.java.org.dojoserverfaces.widget.ActionPostBackHandler.java", "BodyUseAPI": [], "Fixed commit": "eb4e469b612255f23225751c89e2fa7304121714", "Url": "https://api.github.com/repos/meghakuchhal/DojoServerFaces", "Date": "2011-05-09T07:42:43Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.uminho.haslab.echo.plugin.EchoPlugin.getInstance().getRunner()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (runner == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8313/buggy-version/plugins.pt.uminho.haslab.echo.plugin.src.pt.uminho.haslab.echo.plugin.views.GraphView.java", "BodyUseAPI": [], "Fixed commit": "ddc75f5ad21d901b5e420acf0e967bb78023b542", "Url": "https://api.github.com/repos/haslab/echo", "Date": "2013-11-07T16:07:09Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(DIR.exists())) && (!(DIR.mkdirs()))) { log.info(\"Failed creating directory's!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3092/buggy-version/src.at.pcgamingfreaks.Language.java", "BodyUseAPI": [], "Fixed commit": "5727db9b740f2a80de7e10e8c0ad4c9f7a693831", "Url": "https://api.github.com/repos/GeorgH93/Bukkit_Bungee_PluginLib", "Date": "2015-11-03T17:35:01Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchInfo) == null) { searchInfo = new com.example.mahdinikdan.ponisha.Advertisement.SearchInfo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3226/buggy-version/app.src.main.java.com.example.mahdinikdan.ponisha.Advertisement.AdvertisementFragment.java", "BodyUseAPI": [], "Fixed commit": "bcfe510403f54e35f25ecf802fb57544123fccd5", "Url": "https://api.github.com/repos/MNikdan/rafsanjan", "Date": "2017-12-24T22:54:21Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.luethi.skylinestracker.HandlerThread.getLooper()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (looper != null) { looper.quit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1027/buggy-version/src.ch.luethi.skylinestracker.PositionService.java", "BodyUseAPI": ["ch.luethi.skylinestracker.Looper.quit()"], "Fixed commit": "c776ea1283a8480dbb0b65bc22782dfb96f74dd5", "Url": "https://api.github.com/repos/ubx/SkyLinesTracker", "Date": "2014-04-28T08:04:09Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dp.blackhole.protocol.control.AssignConsumerPB.AssignConsumer.PartitionOffset.getCommittedOffset()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (committedOffset == (com.dp.blackhole.storage.MessageAndOffset.UNINITIALIZED_OFFSET)) { LOG.info((\"committed offset UNINITIALIZED, replace with end offset \" + endOffset)); committedOffset = endOffset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4104/buggy-version/blackhole-consumer.src.main.java.com.dp.blackhole.consumer.ConsumerConnector.java", "BodyUseAPI": [], "Fixed commit": "54551a90cd4b0d993cc68aae4749011b43b27bf4", "Url": "https://api.github.com/repos/dianping/blackhole", "Date": "2015-04-24T09:59:13Z"},
{"Line": "=>821", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.ihmc.robotics.geometry.ConvexPolygon2dCalculator.getLineOfSightVertexIndicesCopy(observerFramePoint.getPoint(),us.ihmc.robotics.geometry.ConvexPolygon2d)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (lineOfSightIndeces == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/614/buggy-version/IHMCRoboticsToolkit.src.us.ihmc.robotics.geometry.FrameConvexPolygon2d.java", "BodyUseAPI": [], "Fixed commit": "f6f4bda8e7d7d39021dd5e73a16ce62d364b59e9", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2016-09-14T18:11:16Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (r.getYPv().isExistInEDL()) { org.csstudio.opibuilder.converter.model.EdmString y0pv = r.getYPv().getEdmAttributesMap().get('0'); new org.csstudio.opibuilder.converter.writer.OpiString(widgetContext, \"pv_name\", convertPVName(y0pv.get())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7496/buggy-version/applications.opibuilder.opibuilder-plugins.org.csstudio.opibuilder.converter.src.main.org.csstudio.opibuilder.converter.writer.Opi_xyGraphClass.java", "BodyUseAPI": [], "Fixed commit": "c3c78bd55a3dd29d9fd8983032a7197015fe1338", "Url": "https://api.github.com/repos/dls-controls/cs-studio", "Date": "2016-04-25T16:19:26Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showConfirmDialog(<nulltype>,java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (option == (javax.swing.JOptionPane.YES_OPTION)) { mainFrame.dispose(); edu.ucsb.cs56.projects.games.poker.PokerSinglePlayer singlePlayerReplay = new edu.ucsb.cs56.projects.games.poker.PokerSinglePlayer(); singlePlayerReplay.go(); }else if (option == (javax.swing.JOptionPane.NO_OPTION)) { if ((opponent.getChips()) < 5) { gameOver(\"GAME OVER! The opponent has run out of chips!\"); }else if ((player.getChips()) < 5) { gameOver(\"GAME OVER! You have run out of chips!\"); } }else { java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2038/buggy-version/src.edu.ucsb.cs56.projects.games.poker.PokerSinglePlayer.java", "BodyUseAPI": [], "Fixed commit": "994556ab446fae3286442eb0918683a2bf037901", "Url": "https://api.github.com/repos/dvanmali/cs56-games-poker", "Date": "2016-07-27T03:28:28Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(modifiedMaxHealthPlayers.containsKey(player.getDisplayName()))) { modifiedMaxHealthPlayers.put(player.getDisplayName(), player.getMaxHealth()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3148/buggy-version/src.main.java.flora.core.logic.ArmorEffectsManager.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.getMaxHealth()", "net.minecraft.entity.player.EntityPlayer.getDisplayName()", "java.util.HashMap<java.lang.String, java.lang.Float>.put(player.getDisplayName(),player.getMaxHealth())"], "Fixed commit": "96a1245ec5e1444b467809080e370b7e8a734924", "Url": "https://api.github.com/repos/pixlepix/FLORA", "Date": "2014-05-18T18:33:06Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (modifiedMaxHealthPlayers.containsKey(player.getDisplayName())) { player.getEntityAttribute(SharedMonsterAttributes.maxHealth).setBaseValue(modifiedMaxHealthPlayers.get(player.getDisplayName())); modifiedMaxHealthPlayers.remove(player.getDisplayName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3148/buggy-version/src.main.java.flora.core.logic.ArmorEffectsManager.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.getDisplayName()", "player.getEntityAttribute(SharedMonsterAttributes.maxHealth).setBaseValue(java.lang.Float)", "java.util.HashMap<java.lang.String, java.lang.Float>.remove(player.getDisplayName())", "net.minecraft.entity.player.EntityPlayer.getDisplayName()", "java.util.HashMap<java.lang.String, java.lang.Float>.get(player.getDisplayName())", "net.minecraft.entity.player.EntityPlayer.getEntityAttribute(SharedMonsterAttributes.maxHealth)"], "Fixed commit": "96a1245ec5e1444b467809080e370b7e8a734924", "Url": "https://api.github.com/repos/pixlepix/FLORA", "Date": "2014-05-18T18:33:06Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size > 6) { n_of_wifi = new java.lang.Integer(ar[5]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2725/buggy-version/src.WiFi_data.WiFi_Scan.java", "BodyUseAPI": [], "Fixed commit": "113bb206d6d0d391bc7955c93b582e500b044417", "Url": "https://api.github.com/repos/benmoshe/OOP_Exe", "Date": "2017-12-07T18:13:52Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONArray.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(track.get(\"duration\").equals(\"\"))) tempTrack.setDuration(java.lang.Integer.parseInt(track.get(\"duration\").toString()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4722/buggy-version/src.main.java.lastFMAlbum.LastFMAlbumApi.java", "BodyUseAPI": ["lastFMAlbum.Track.setDuration(int)", "java.lang.Integer.parseInt(track.get(\"duration\").toString())", "track.get(\"duration\").toString()", "org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "a3fb36bc94dd044c436bb602fafe91b474e2b438", "Url": "https://api.github.com/repos/Metalcon/reconciling", "Date": "2014-04-15T15:55:08Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (typeTest instanceof org.json.simple.JSONArray) { org.json.simple.JSONArray responseAlbumTracksTrack = ((org.json.simple.JSONArray) (responseAlbumTracks.get(\"track\"))); for (int i = 0; i < (responseAlbumTracksTrack.size()); i++) { lastFMAlbum.Track tempTrack = new lastFMAlbum.Track(); org.json.simple.JSONObject track = ((org.json.simple.JSONObject) (responseAlbumTracksTrack.get(i))); tempTrack.setName(track.get(\"name\").toString()); tempTrack.setMbid(track.get(\"mbid\").toString()); org.json.simple.JSONObject trackAttr = ((org.json.simple.JSONObject) (track.get(\"@attr\"))); tempTrack.setRank(java.lang.Integer.parseInt(trackAttr.get(\"rank\").toString())); if (!(track.get(\"duration\").equals(\"\"))) tempTrack.setDuration(java.lang.Integer.parseInt(track.get(\"duration\").toString())); tempTrackList.add(tempTrack); } returnAlbum.setTracks(tempTrackList); return returnAlbum; }else { org.json.simple.JSONObject track = ((org.json.simple.JSONObject) (responseAlbumTracks.get(\"track\"))); lastFMAlbum.Track tempTrack = new lastFMAlbum.Track(); tempTrack.setName(track.get(\"name\").toString()); tempTrack.setMbid(track.get(\"mbid\").toString()); org.json.simple.JSONObject trackAttr = ((org.json.simple.JSONObject) (track.get(\"@attr\"))); tempTrack.setRank(java.lang.Integer.parseInt(trackAttr.get(\"rank\").toString())); if (!(track.get(\"duration\").equals(\"\"))) tempTrack.setDuration(java.lang.Integer.parseInt(track.get(\"duration\").toString())); tempTrackList.add(tempTrack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4722/buggy-version/src.main.java.lastFMAlbum.LastFMAlbumApi.java", "BodyUseAPI": [], "Fixed commit": "a3fb36bc94dd044c436bb602fafe91b474e2b438", "Url": "https://api.github.com/repos/Metalcon/reconciling", "Date": "2014-04-15T15:55:08Z"},
{"Line": "=>939", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reuseCacheHandleCheck(hasNewTypeDefinitions)) { if (cachedHandle.tryAddReference()) { setPreparedStatementHandle(cachedHandle.getHandle()); cachedPreparedStatementHandle = cachedHandle; return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2287/buggy-version/src.main.java.com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.java", "BodyUseAPI": [], "Fixed commit": "97db47725e3047cb32cee52f753acc452ec02056", "Url": "https://api.github.com/repos/Microsoft/mssql-jdbc", "Date": "2017-07-17T23:39:51Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userID == (user.getUserID())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5310/buggy-version/app.src.main.java.com.nexb.shopr4.FireBaseController.java", "BodyUseAPI": [], "Fixed commit": "74333256d5b4b12c6270a2167547b0b298b2c5a7", "Url": "https://api.github.com/repos/cbudtz/Shopr4c", "Date": "2015-12-06T23:31:51Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((umcg.genetica.io.Gpio.getParentDir(expressionFile)) == null) { outdir = \"\"; }else { outdir = (umcg.genetica.io.Gpio.getParentDir(expressionFile)) + (umcg.genetica.io.Gpio.getFileSeparator()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2658/buggy-version/eqtl-mapping-pipeline.src.main.java.eqtlmappingpipeline.normalization.Normalizer.java", "BodyUseAPI": ["umcg.genetica.io.Gpio.getParentDir(java.lang.String)"], "Fixed commit": "de9752308b940ca99a3afa66f0ee22cf2833aad4", "Url": "https://api.github.com/repos/harmjanwestra/systemsgenetics", "Date": "2013-09-17T14:44:41Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.eweblib.util.EweblibUtil.isEmpty(com.eweblib.util.EWeblibThreadLocal.getCurrentUserId())) { throw new com.eweblib.exception.ResponseException(\"\u8bf7\u5148\u767b\u5f55\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5696/buggy-version/src.main.java.com.wx.school.service.impl.SchoolServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "f3dba1e481015a0df5fc17b846078a652ad8f8bc", "Url": "https://api.github.com/repos/antme/school", "Date": "2017-05-22T08:32:09Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dockerHostsTableSelection.host) != null) { model.setSubscription(dockerManager.getSubscriptionsMap().get(dockerHostsTableSelection.host.sid)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5769/buggy-version/PluginsAndFeatures.azure-toolkit-for-intellij.src.com.microsoft.intellij.docker.wizards.publish.forms.AzureSelectDockerHostStep.java", "BodyUseAPI": ["dockerManager.getSubscriptionsMap().get(dockerHostsTableSelection.host.sid)", "com.microsoft.intellij.docker.wizards.publish.AzureSelectDockerWizardModel.setSubscription(dockerManager.getSubscriptionsMap().get(dockerHostsTableSelection.host.sid))"], "Fixed commit": "97708489875673bcfc8ffcd777ee37e7e0b5fe98", "Url": "https://api.github.com/repos/adashen/azure-tools-for-java", "Date": "2017-05-18T10:41:50Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dockerHostsTableSelection.host) != null) { model.setSubscription(dockerManager.getSubscriptionsMap().get(dockerHostsTableSelection.host.sid)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5769/buggy-version/PluginsAndFeatures.azure-toolkit-for-intellij.src.com.microsoft.intellij.docker.wizards.publish.forms.AzureSelectDockerHostStep.java", "BodyUseAPI": ["com.microsoft.intellij.docker.wizards.publish.AzureSelectDockerWizardModel.setSubscription(dockerManager.getSubscriptionsMap().get(dockerHostsTableSelection.host.sid))", "dockerManager.getSubscriptionsMap().get(dockerHostsTableSelection.host.sid)"], "Fixed commit": "97708489875673bcfc8ffcd777ee37e7e0b5fe98", "Url": "https://api.github.com/repos/adashen/azure-tools-for-java", "Date": "2017-05-18T10:41:50Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.has(\"source\")) && (item.getString(\"source\").endsWith(\".id\"))) { item.put(\"value\", generateRandomUUIDString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5675/buggy-version/opensrp-app.src.main.java.org.ei.opensrp.util.FormUtils.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "6d43a9d17f688d304ba4578ba3d03dc139964649", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client", "Date": "2015-11-30T12:18:19Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (frag == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/9136/buggy-version/de.tub.tfs.muvitor.src.de.tub.tfs.muvitor.ui.utils.LoadDelegate.java", "BodyUseAPI": [], "Fixed commit": "17fa1f8544777ca453e90a6d48f7e02e66e9acd3", "Url": "https://api.github.com/repos/de-tu-berlin-tfs/Henshin-Editor", "Date": "2013-04-25T09:30:21Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dropDownListResult[i]) != 0) itemJs.put(listName[i], dropDownListResult[i]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7895/buggy-version/Demo.src.com.baidu.push.example.CheckItem.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,int)"], "Fixed commit": "112f1f78a5c33596be9c9df6189522644cc05dd0", "Url": "https://api.github.com/repos/whichmen/CarChecker", "Date": "2014-11-11T16:26:04Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(editContent.trim().equals(\"\"))) itemJs.put(\"edit\", editContent);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7895/buggy-version/Demo.src.com.baidu.push.example.CheckItem.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "112f1f78a5c33596be9c9df6189522644cc05dd0", "Url": "https://api.github.com/repos/whichmen/CarChecker", "Date": "2014-11-11T16:26:04Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((repairResult) != 0) itemJs.put(\"repairMode\", repairResult);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7895/buggy-version/Demo.src.com.baidu.push.example.CheckItem.java", "BodyUseAPI": [], "Fixed commit": "112f1f78a5c33596be9c9df6189522644cc05dd0", "Url": "https://api.github.com/repos/whichmen/CarChecker", "Date": "2014-11-11T16:26:04Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id < 0) { throw new java.lang.IllegalArgumentException(\"Invalid id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1785/buggy-version/com.alex.PersonManager.java", "BodyUseAPI": [], "Fixed commit": "a14ab4f99b7452ea54f9340cf121cf051ee52b7e", "Url": "https://api.github.com/repos/aananighian/CodacyTest", "Date": "2016-06-11T00:26:51Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(event.isCancelled())) { player.getInventory().addItem(currentItem); inventory.remove(currentItem); }else { event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3512/buggy-version/src.logan.pickpocket.events.InventoryClick.java", "BodyUseAPI": ["org.bukkit.event.inventory.InventoryClickEvent.setCancelled(boolean)"], "Fixed commit": "a2e858be71d40b10b3513f5e5d1ce567c2ea64ab", "Url": "https://api.github.com/repos/TTGTRE/Pickpocket", "Date": "2015-12-29T06:25:26Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nunnerycode.bukkit.mythicdrops.utils.ChatColorUtil.getChatColor(c.getString(\"identifierColor\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (identificationColor == null) { debug(java.util.logging.Level.INFO, ((c.getString(\"identifierColor\")) + \" is not a valid color\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7141/buggy-version/src.main.java.net.nunnerycode.bukkit.mythicdrops.MythicDropsPlugin.java", "BodyUseAPI": [], "Fixed commit": "e70ed64bd5375aca1c647711c808b33c2ca0a17e", "Url": "https://api.github.com/repos/Nunnery/MythicDrops", "Date": "2014-05-05T17:55:28Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nunnerycode.bukkit.mythicdrops.utils.ChatColorUtil.getChatColor(cs.getString(\"identifierColor\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (identificationColor == null) { debug(java.util.logging.Level.INFO, ((cs.getString(\"identifierColor\")) + \" is not a valid color\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7141/buggy-version/src.main.java.net.nunnerycode.bukkit.mythicdrops.MythicDropsPlugin.java", "BodyUseAPI": [], "Fixed commit": "e70ed64bd5375aca1c647711c808b33c2ca0a17e", "Url": "https://api.github.com/repos/Nunnery/MythicDrops", "Date": "2014-05-05T17:55:28Z"},
{"Line": "=>581", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nunnerycode.bukkit.mythicdrops.utils.ChatColorUtil.getChatColor(cs.getString(\"displayColor\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (displayColor == null) { debug(java.util.logging.Level.INFO, ((cs.getString(\"displayColor\")) + \" is not a valid color\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7141/buggy-version/src.main.java.net.nunnerycode.bukkit.mythicdrops.MythicDropsPlugin.java", "BodyUseAPI": [], "Fixed commit": "e70ed64bd5375aca1c647711c808b33c2ca0a17e", "Url": "https://api.github.com/repos/Nunnery/MythicDrops", "Date": "2014-05-05T17:55:28Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (disabled) { logger.info(\"Not syncing, is disabled\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7438/buggy-version/src.main.java.no.dusken.momus.smmdb.Syncer.java", "BodyUseAPI": [], "Fixed commit": "6adf29718e05a972793614813b75af866ca7158a", "Url": "https://api.github.com/repos/Studentmediene/Momus", "Date": "2014-08-22T14:43:39Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useTimed()) { return new org.smartfrog.services.anubis.partition.protocols.heartbeat.timed.TimedProtocolFactory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1605/buggy-version/src.main.java.org.smartfrog.services.anubis.BasicConfiguration.java", "BodyUseAPI": [], "Fixed commit": "08935aa691275d273b8c6e4c71af80ad7b30e3f6", "Url": "https://api.github.com/repos/ChiralBehaviors/Jackal", "Date": "2010-12-30T02:05:47Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tasks.containsKey(name)) throw new edu.ksu.cis.projects.mdcf.aadltranslator.exception.DuplicateElementException(\"Tasks cannot have the same name\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5994/buggy-version/edu.ksu.cis.projects.mdcf.aadl-translator.src.edu.ksu.cis.projects.mdcf.aadltranslator.model.ProcessModel.java", "BodyUseAPI": [], "Fixed commit": "790971eee38508dd2b820b3d158c2bf3899e1700", "Url": "https://api.github.com/repos/santoslab/aadl-translator", "Date": "2014-01-11T18:38:33Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ports.containsKey(pm.getName())) throw new edu.ksu.cis.projects.mdcf.aadltranslator.exception.DuplicateElementException(\"Ports cannot share names\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5994/buggy-version/edu.ksu.cis.projects.mdcf.aadl-translator.src.edu.ksu.cis.projects.mdcf.aadltranslator.model.ProcessModel.java", "BodyUseAPI": [], "Fixed commit": "790971eee38508dd2b820b3d158c2bf3899e1700", "Url": "https://api.github.com/repos/santoslab/aadl-translator", "Date": "2014-01-11T18:38:33Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (devices.containsKey(deviceName)) throw new edu.ksu.cis.projects.mdcf.aadltranslator.exception.DuplicateElementException((deviceName + \" already exists\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5994/buggy-version/edu.ksu.cis.projects.mdcf.aadl-translator.src.edu.ksu.cis.projects.mdcf.aadltranslator.model.SystemModel.java", "BodyUseAPI": [], "Fixed commit": "790971eee38508dd2b820b3d158c2bf3899e1700", "Url": "https://api.github.com/repos/santoslab/aadl-translator", "Date": "2014-01-11T18:38:33Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logicComponents.containsKey(instanceName)) throw new edu.ksu.cis.projects.mdcf.aadltranslator.exception.DuplicateElementException((instanceName + \" already exists\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5994/buggy-version/edu.ksu.cis.projects.mdcf.aadl-translator.src.edu.ksu.cis.projects.mdcf.aadltranslator.model.SystemModel.java", "BodyUseAPI": [], "Fixed commit": "790971eee38508dd2b820b3d158c2bf3899e1700", "Url": "https://api.github.com/repos/santoslab/aadl-translator", "Date": "2014-01-11T18:38:33Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((diff.addedModifiers()) & (org.objectweb.asm.Opcodes.ACC_INTERFACE)) > 0) || (((diff.removedModifiers()) & (org.objectweb.asm.Opcodes.ACC_INTERFACE)) > 0)) { affectedUsages.add(it.createUsage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6562/buggy-version/src.org.jetbrains.ether.dependencyView.Mappings.java", "BodyUseAPI": [], "Fixed commit": "314982e7976b8f7e063b540e60db969e83c891ba", "Url": "https://api.github.com/repos/JetBrains/JPS", "Date": "2011-09-22T00:15:41Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (variable) { stmts = stmts.prepend(owner.make().If(generateLateInitializedPred(EQ), init, null)); }else { stmts = stmts.prepend(init); stmts = stmts.prepend(owner.make().If(generateLateInitializedPred(NE), owner.make().Throw(owner.makeNewClass(owner.make().Type(owner.syms().ceylonInitializationExceptionType), com.sun.tools.javac.util.List.<com.sun.tools.javac.tree.JCTree.JCExpression>of(owner.makeCeylonString(\"Re-initialization of 'late' attribute\")))), null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4439/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.AttributeDefinitionBuilder.java", "BodyUseAPI": [], "Fixed commit": "f39ad9e49e23e8404fd6b7147696cdd4163216e0", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2013-02-25T07:52:00Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.tlsys.twt.Script.isUndefined(org.tlsys.twt.Script.code(o, \"[\", TObject.CLASS_RECORD, \"]\")))) return o;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2829/buggy-version/libs.rt.src.main.java.org.tlsys.twt.rt.java.lang.TThrowable.java", "BodyUseAPI": [], "Fixed commit": "1bec8759864a5e081b8e667a31fa2720ce9f7283", "Url": "https://api.github.com/repos/TradeLine/TWT", "Date": "2016-04-27T13:42:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (api != null) manager = api.getSBManager();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5913/buggy-version/src.main.com.extrahardmode.module.MessagingModule.java", "BodyUseAPI": [], "Fixed commit": "dc4f277712df1e4198f93a3d363cb334a6fd6c70", "Url": "https://api.github.com/repos/Di3mex/ExtraHardMode", "Date": "2013-07-31T01:19:52Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request.getSoFar()) == 0) { onFail(DownloadError.ERROR_IO_ERROR, \"Download completed, but nothing was read\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1219/buggy-version/core.src.main.java.de.danoeh.antennapod.core.service.download.HttpDownloader.java", "BodyUseAPI": [], "Fixed commit": "6a83057e28a1efc060016ef146b2b74b8c14fca2", "Url": "https://api.github.com/repos/andrey-krutov/AntennaPod", "Date": "2015-06-03T09:36:25Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (lineOptions != null) { mMap.addPolyline(lineOptions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/354/buggy-version/app.src.main.java.controller.activity.MapActivity.java", "BodyUseAPI": ["com.google.android.gms.maps.GoogleMap.addPolyline(com.google.android.gms.maps.model.PolylineOptions)"], "Fixed commit": "061263a6f4a597041af321c4a408b99a931fd26d", "Url": "https://api.github.com/repos/TinhHuynh/Nekofee", "Date": "2017-07-23T01:37:19Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tokenForUser == null) { throw new com.constellio.model.services.users.UserServicesRuntimeException.UserServicesRuntimeException_NoSuchUser(asUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8263/buggy-version/app.src.com.constellio.app.servlet.ConstellioGenerateTokenWebServlet.java", "BodyUseAPI": [], "Fixed commit": "b17e7683892af413c15363ea794cec38fc2db0ae", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2016-06-02T02:30:46Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.lushprojects.circuitjs1.client.Graphics.distanceSq(x, y, x2, y2)) >= minSize) { if ((com.lushprojects.circuitjs1.client.Graphics.distanceSq(x, y, xtest, ytest)) <= deltaSq) lastHandleGrabbed = 0; else if ((com.lushprojects.circuitjs1.client.Graphics.distanceSq(x2, y2, xtest, ytest)) <= deltaSq) lastHandleGrabbed = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5633/buggy-version/src.com.lushprojects.circuitjs1.client.CircuitElm.java", "BodyUseAPI": ["com.lushprojects.circuitjs1.client.Graphics.distanceSq(int,int,int,int)", "com.lushprojects.circuitjs1.client.Graphics.distanceSq(int,int,int,int)"], "Fixed commit": "66feea5e192b9cb07bbcaa6ced4b35460012d7fc", "Url": "https://api.github.com/repos/sharpie7/circuitjs1", "Date": "2016-10-31T08:39:20Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((current.getItemCount()) > 0) current.deincrementItemCount();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7790/buggy-version/MultiSets.src.BstMultiset.java", "BodyUseAPI": ["nodes.TreeNode<T>.deincrementItemCount()"], "Fixed commit": "15055edda4d4b4d9dbf07557f6341989a6549649", "Url": "https://api.github.com/repos/rmit-s3542838-michael-billinghurst/MultiSets", "Date": "2016-04-12T11:58:15Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (spatialPrefixTreeStr == null) { throw new java.lang.IllegalArgumentException(((((\"Property [\" + (org.apache.blur.analysis.type.spatial.BaseSpatialFieldTypeDefinition.SPATIAL_PREFIX_TREE)) + \"] is missing from type def for field [\") + field) + \"]\")); }else if (spatialPrefixTreeStr.equals(org.apache.blur.analysis.type.spatial.BaseSpatialFieldTypeDefinition.GEOHASH_PREFIX_TREE)) { int maxLevels = getMaxLevels(properties); return new org.apache.lucene.spatial.prefix.tree.GeohashPrefixTree(_ctx, maxLevels); }else if (spatialPrefixTreeStr.equals(org.apache.blur.analysis.type.spatial.BaseSpatialFieldTypeDefinition.QUAD_PREFIX_TREE)) { int maxLevels = getMaxLevels(properties); return new org.apache.lucene.spatial.prefix.tree.QuadPrefixTree(_ctx, maxLevels); }else { throw new java.lang.RuntimeException(((\"Unknown spatialPrefixTreeStr [\" + spatialPrefixTreeStr) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4986/buggy-version/blur-query.src.main.java.org.apache.blur.analysis.type.spatial.BaseSpatialFieldTypeDefinition.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "1c7aba2619270aa64747f2dae6fc7756e51d382a", "Url": "https://api.github.com/repos/apache/incubator-blur", "Date": "2015-06-24T11:44:21Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((processedReviews) != null) { unprocessedReviews.removeAll(processedReviews); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6036/buggy-version/src.main.java.org.jenkinsci.plugins.jenkinsreviewbot.ReviewboardPollingBuilder.java", "BodyUseAPI": [], "Fixed commit": "39a31aaeed7a1e74a752c307794914815e241a02", "Url": "https://api.github.com/repos/vmware/jenkins-reviewbot", "Date": "2014-09-27T19:20:59Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSection) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4178/buggy-version/src.fr.icodem.asciidoc.parser.peg.example.asciidoc.listener.BlockListenerDelegate.java", "BodyUseAPI": [], "Fixed commit": "db42111b3917ca3dd1e67816c87d4d201568ce7b", "Url": "https://api.github.com/repos/ohanny/asciidoc-parser-prototype", "Date": "2016-12-30T20:58:34Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fluids.FluidRegistry.getFluid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (rocketFuel != null) { pneumaticCraft.api.PneumaticRegistry.getInstance().registerFuel(rocketFuel, (160 * 7000)); }else { pneumaticCraft.lib.Log.warning(\"Couldn't find a fluid with name 'rocket_fuel' even though EnderIO is in the instance. It hasn't been registered as fuel!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1668/buggy-version/src.pneumaticCraft.common.thirdparty.enderio.EnderIO.java", "BodyUseAPI": ["pneumaticCraft.api.PneumaticRegistry.getInstance().registerFuel(net.minecraftforge.fluids.Fluid,int)"], "Fixed commit": "c8c6f4eb700d229426d57b1873625a3f11a1e150", "Url": "https://api.github.com/repos/AnodeCathode/PneumaticCraft", "Date": "2015-12-06T19:22:26Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fluids.FluidRegistry.getFluid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (hootch != null) { pneumaticCraft.api.PneumaticRegistry.getInstance().registerFuel(hootch, (60 * 6000)); }else { pneumaticCraft.lib.Log.warning(\"Couldn't find a fluid with name 'hootch' even though EnderIO is in the instance. It hasn't been registered as fuel!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1668/buggy-version/src.pneumaticCraft.common.thirdparty.enderio.EnderIO.java", "BodyUseAPI": ["pneumaticCraft.api.PneumaticRegistry.getInstance().registerFuel(net.minecraftforge.fluids.Fluid,int)"], "Fixed commit": "c8c6f4eb700d229426d57b1873625a3f11a1e150", "Url": "https://api.github.com/repos/AnodeCathode/PneumaticCraft", "Date": "2015-12-06T19:22:26Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fluids.FluidRegistry.getFluid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (fireWater != null) { pneumaticCraft.api.PneumaticRegistry.getInstance().registerFuel(fireWater, (80 * 15000)); }else { pneumaticCraft.lib.Log.warning(\"Couldn't find a fluid with name 'fire_water' even though EnderIO is in the instance. It hasn't been registered as fuel!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1668/buggy-version/src.pneumaticCraft.common.thirdparty.enderio.EnderIO.java", "BodyUseAPI": ["pneumaticCraft.api.PneumaticRegistry.getInstance().registerFuel(net.minecraftforge.fluids.Fluid,int)"], "Fixed commit": "c8c6f4eb700d229426d57b1873625a3f11a1e150", "Url": "https://api.github.com/repos/AnodeCathode/PneumaticCraft", "Date": "2015-12-06T19:22:26Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pref.contains((\"settings_gestures_\" + \"D_L_U\")))) android.preference.PreferenceManager.setDefaultValues(this, R.xml.gestures, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1534/buggy-version/src.tw.kenshinn.keyboardTerm.TerminalActivity.java", "BodyUseAPI": [], "Fixed commit": "43ec710b9a40a563e5fb19d62659bdf7b960145b", "Url": "https://api.github.com/repos/kenshinn/KeyboardTerm", "Date": "2011-03-04T14:50:09Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["itemName.getText().toString().isEmpty()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((chitemName || (itemBarcode.getText().toString().isEmpty())) || (itemPrice.getText().toString().isEmpty())) { android.widget.Toast.makeText(this, \"It's still have some blank\", Toast.LENGTH_SHORT).show(); }else { boolean success = productCatalogController.add(itemName.getText().toString(), itemBarcode.getText().toString(), java.lang.Double.parseDouble(itemPrice.getText().toString())); if (success) { android.widget.Toast.makeText(this, (\"Successfully Add : \" + (itemName.getText().toString())), Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(this, \"Failed to insert data\", Toast.LENGTH_SHORT).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/114/buggy-version/src.com.refresh.pos.AddActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "itemPrice.getText().toString()", "android.widget.EditText.getText()", "com.refresh.pos.ProductCatalogController.add(itemName.getText().toString(),itemBarcode.getText().toString(),double)", "itemBarcode.getText().toString()", "java.lang.Double.parseDouble(itemPrice.getText().toString())"], "Fixed commit": "2495bcce851a5b1b48c52dae745a7b0af896a876", "Url": "https://api.github.com/repos/mapfap/pos", "Date": "2013-10-06T11:24:29Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((AsianFlash.theTest) != null) { asianFlash.InternalFlashCard tCard = tempCardList; while (tCard != null) { tCard.setInTest(true); tCard = tCard.getNextCard(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/981/buggy-version/src.asianFlash.InternalFlashCard.java", "BodyUseAPI": [], "Fixed commit": "9e0523815d1218d115ef66acbfb21f3090168ca1", "Url": "https://api.github.com/repos/reesede/AsianFlashCard", "Date": "2015-12-06T15:43:05Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.textNodes()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((nodes == null) || (nodes.isEmpty())) { val = sel.text(); }else { val = nodes.get(0).getWholeText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6227/buggy-version/Source.src.uk.co.fostorial.sotm.structure.DeckDocument.java", "BodyUseAPI": ["java.util.List<org.jsoup.nodes.TextNode>.get(int)", "nodes.get(0).getWholeText()"], "Fixed commit": "aed728faeac5f6e3606e1a18b79be1d500f21b63", "Url": "https://api.github.com/repos/darthdie/Forge-of-the-Multiverse", "Date": "2014-05-19T04:15:58Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.btmura.android.reddit.widget.ThingAdapter.getCursor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((c.getInt(com.btmura.android.reddit.widget.ThingAdapter.INDEX_KIND)) == (com.btmura.android.reddit.database.Things.KIND_MORE)) { return c.getString(com.btmura.android.reddit.widget.ThingAdapter.INDEX_THING_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6386/buggy-version/src.com.btmura.android.reddit.widget.ThingAdapter.java", "BodyUseAPI": ["android.database.Cursor.getString(int)"], "Fixed commit": "f1a2aa99427b935f50652a3199f04f7a2dd69798", "Url": "https://api.github.com/repos/btmura/rbb", "Date": "2012-08-20T01:37:26Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buildData.getDocBookVersion()) == (org.jboss.pressgang.ccms.utils.structures.DocBookVersion.DOCBOOK_50)) { topicXMLErrorTemplate = org.jboss.pressgang.ccms.utils.common.DocBookUtilities.addDocBook50Namespace(topicXMLErrorTemplate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/405/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.builder.utils.DocBookBuildUtilities.java", "BodyUseAPI": [], "Fixed commit": "c845ef0ab0976ad12aadec4a8e784b8af9d2d31d", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSBuilder", "Date": "2014-02-12T22:56:34Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currList) == null) { android.widget.Toast.makeText(this, \"Must add a list before adding an Item\", Toast.LENGTH_LONG).show(); }else { database.Item newItem = new database.Item(); showEditDailog(newItem, ItemDialogFragment.MODE.ADD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3514/buggy-version/app.src.main.java.com.example.narayan.simpletodo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "864f0952ab2421672e9452d4cc0c59aa545cc478", "Url": "https://api.github.com/repos/narayanSjat/CodepathPreWork", "Date": "2017-08-26T20:37:02Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((window.getGamePanel().getGame().getNextShape()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2750/buggy-version/src.graphics.GameInformationPanel.java", "BodyUseAPI": [], "Fixed commit": "ff2af5f6f0e33e9cf97f5a304fb2a5898a1cd4b8", "Url": "https://api.github.com/repos/flakibr/Tetris", "Date": "2016-12-01T16:19:30Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.lang.Integer.toString(response.code()).equals(\"201\"))) { callback.onErrorPostOrder(call, new java.lang.Throwable(\"Invalid address!\")); }else { callback.onSuccessPostOrder(response.body()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7775/buggy-version/Android_Spotshop.app.src.main.java.be.fenego.android_spotshop.utilities.ShoppingBasketUtility.java", "BodyUseAPI": ["be.fenego.android_spotshop.callbacks.ShoppingBasketCallback.onSuccessPostOrder(response.body())", "retrofit2.Response<be.fenego.android_spotshop.models.shoppingBasketModels.OrderPostResponse>.body()"], "Fixed commit": "606b8b2e822763e6e3dfad533a441ad9ee1ab3a3", "Url": "https://api.github.com/repos/Lanssens/it-project-android-app", "Date": "2017-02-07T11:43:25Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(conds.equals(\"\"))) { qry.append(\" WHERE \"); qry.append(conds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1158/buggy-version/src.model.CustomerModel.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "96304de1e88f062fb3a4ad5308f8fbeb3519ad90", "Url": "https://api.github.com/repos/r0e/VideoGameDatabase", "Date": "2016-04-02T00:31:15Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cols.equals(\"\")) { qry.append(\"*\"); }else { qry.append(cols); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1158/buggy-version/src.model.CustomerModel.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "96304de1e88f062fb3a4ad5308f8fbeb3519ad90", "Url": "https://api.github.com/repos/r0e/VideoGameDatabase", "Date": "2016-04-02T00:31:15Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.lang.Double.isFinite(requestsPerTrafficLevel))) requestsPerTrafficLevel = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5287/buggy-version/src.main.java.omnet.Omnet.java", "BodyUseAPI": [], "Fixed commit": "66a2ba1d6cc0b1a15166455e32787d1f5a072d11", "Url": "https://api.github.com/repos/ZackC/AdaptiveSystemsGeneticProgrammingPlanner", "Date": "2016-10-10T18:41:46Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values.relevantIndividuals.isEmpty()) == false) { org.apache.commons.lang3.tuple.Pair<owltools.gaf.lego.json.JsonOwlIndividual[], owltools.gaf.lego.json.JsonOwlFact[]> pair = renderer.renderIndividuals(values.relevantIndividuals); response.data.individuals = pair.getLeft(); response.data.facts = pair.getRight(); if (owltools.gaf.lego.server.handler.JsonOrJsonpBatchHandler.ADD_INFERENCES) { response.data.individualsInferred = renderer.renderInferences(values.relevantIndividuals, reasoner); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4023/buggy-version/MolecularModelServer.src.main.java.owltools.gaf.lego.server.handler.JsonOrJsonpBatchHandler.java", "BodyUseAPI": ["owltools.gaf.lego.json.MolecularModelJsonRenderer.renderInferences(values.relevantIndividuals,org.semanticweb.owlapi.reasoner.OWLReasoner)", "owltools.gaf.lego.json.MolecularModelJsonRenderer.renderIndividuals(values.relevantIndividuals)"], "Fixed commit": "27909e302ecfcd58c540874998ad6f86fa7c88d4", "Url": "https://api.github.com/repos/owlcollab/owltools", "Date": "2015-04-25T00:26:44Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key.equals(org.broad.igv.sam.AlignmentPacker.NULL_GROUP_VALUE)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2428/buggy-version/src.org.broad.igv.sam.AlignmentPacker.java", "BodyUseAPI": [], "Fixed commit": "3631df87574d5059ebf76f9b8a618aca69c49df7", "Url": "https://api.github.com/repos/broadinstitute/IGV", "Date": "2014-10-16T19:37:15Z"},
{"Line": "=>586", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fullName) != null) { testObject.put(\"author\", fullName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/684/buggy-version/app.src.main.java.com.example.mapdemo.MapDemoActivity.java", "BodyUseAPI": [], "Fixed commit": "eb3d43ba62b4555a4b487c6934523b3c927af618", "Url": "https://api.github.com/repos/tajj/Contribute", "Date": "2017-08-04T19:36:02Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap.newKeySet()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(filterFields.isEmpty())) { java.lang.System.out.println((\"Full set of filter fields: \" + filterFields)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3305/buggy-version/src.main.java.com.github.ansell.shp.SHPDump.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "ffcce7bc3ad74e5cde0a82018a4260cda5e57631", "Url": "https://api.github.com/repos/ansell/shp-debug", "Date": "2016-04-19T02:58:55Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(me.tekkitcommando.jc2.view.TestHeadless.isReallyHeadless())) { me.tekkitcommando.jc2.view.ConsoleViewer consoleWindow = new me.tekkitcommando.jc2.view.ConsoleViewer(); consoleWindow.setVisible(true); windowList.add(consoleWindow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3872/buggy-version/src.main.java.me.tekkitcommando.jc2.JC2.java", "BodyUseAPI": [], "Fixed commit": "ef9b1ccf26bfc48d0ef315347a8ec98077aec6fa", "Url": "https://api.github.com/repos/ThisIzEthan/JC2-App", "Date": "2016-01-08T01:44:28Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((boxarr[i][(j - 1)]) != (org.scilab.forge.jlatexmath.MatrixAtom.nullBox)) boxarr[i][(j - 1)].type = TeXConstants.TYPE_INTERTEXT;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4653/buggy-version/src.org.scilab.forge.jlatexmath.MatrixAtom.java", "BodyUseAPI": [], "Fixed commit": "271489baed5183664003989ae8e36895463e2a2c", "Url": "https://api.github.com/repos/CBN-Polska/jlatexmath", "Date": "2017-05-14T08:37:58Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (curr == (tail)) { return new Window(prev, curr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1420/buggy-version/mt.src.collections.LockFreeSet.java", "BodyUseAPI": [], "Fixed commit": "018b68b25643b7c49329b46f05337e0343ce9c2d", "Url": "https://api.github.com/repos/viktorkuznietsov1986/concurrency", "Date": "2017-05-24T22:54:17Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wormhole_xtreme.config.ConfigManager.getIconomyWormholeOwnerPercent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((owner_percent != 0.0) && ((st.Owner) != null)) { if (((st.Owner) != null) && (iConomy.getBank().hasAccount(st.Owner))) { com.nijiko.coelho.iConomy.system.Account own_acc = iConomy.getBank().getAccount(st.Owner); own_acc.add((cost * owner_percent)); own_acc.save(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4296/buggy-version/src.main.java.com.wormhole_xtreme.WormholeXTremePlayerListener.java", "BodyUseAPI": ["com.nijiko.coelho.iConomy.system.Account.add(double)", "iConomy.getBank().hasAccount(st.Owner)", "iConomy.getBank().getAccount(st.Owner)"], "Fixed commit": "3123ebe9fda100e61bbea38f9d339c1769f64534", "Url": "https://api.github.com/repos/lologarithm/Wormhole-X-Treme", "Date": "2011-03-04T23:58:41Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["l.getWorld().getBlockAt(l.getBlockX(),l.getBlockY(),l.getBlockZ())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((st = com.wormhole_xtreme.model.StargateManager.getGateFromBlock(ch)) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4296/buggy-version/src.main.java.com.wormhole_xtreme.WormholeXTremePlayerListener.java", "BodyUseAPI": [], "Fixed commit": "3123ebe9fda100e61bbea38f9d339c1769f64534", "Url": "https://api.github.com/repos/lologarithm/Wormhole-X-Treme", "Date": "2011-03-04T23:58:41Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dataSnapshot.exists())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6138/buggy-version/app.src.main.java.com.example.dingu.axicut.Admin.AdminAdapter.java", "BodyUseAPI": [], "Fixed commit": "4f4a240323384c9d0b191ab266046dc6903e9ee7", "Url": "https://api.github.com/repos/dingusagar/axicut", "Date": "2017-08-05T07:08:26Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.mms_projects.utils.OSValidator.isUnix()) { net.mms_projects.copy_it.app.CopyItDesktop.dbusConnection.disconnect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7010/buggy-version/desktop.src.net.mms_projects.copy_it.app.CopyItDesktop.java", "BodyUseAPI": [], "Fixed commit": "6b03c811ed156b64c445714148ae45a02a73ec27", "Url": "https://api.github.com/repos/MMS-Projects/copyit-app", "Date": "2013-07-14T18:21:28Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commonIndex < (common.length)) { common[commonIndex] = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1964/buggy-version/simmetrics-core.src.main.java.org.simmetrics.metrics.Jaro.java", "BodyUseAPI": [], "Fixed commit": "18d7371a50738f9bfcffbb438392dd505bd75767", "Url": "https://api.github.com/repos/Simmetrics/simmetrics", "Date": "2015-07-23T18:23:45Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.votingsystem.web.currency.util.PrincipalVS) (req.getUserPrincipal())).getUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cmsMessage.getUser().getNif().equals(user.getNif()))) throw new org.votingsystem.throwable.ExceptionVS(\"signer NIF doesn't match session NIF\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6623/buggy-version/CurrencyServer.src.main.java.org.votingsystem.web.currency.jaxrs.DeviceResource.java", "BodyUseAPI": [], "Fixed commit": "6e341b551be12590a927deae9c9806ecf1d97966", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2016-04-13T21:17:57Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg instanceof org.zstack.compute.vm.APIGetInterdependentL3NetworksImagesMsg) { validate(((org.zstack.compute.vm.APIGetInterdependentL3NetworksImagesMsg) (msg))); }else if (msg instanceof org.zstack.compute.vm.APIUpdateVmInstanceMsg) { validate(((org.zstack.compute.vm.APIUpdateVmInstanceMsg) (msg))); }else if (msg instanceof org.zstack.compute.vm.APISetVmConsolePasswordMsg) { validate(((org.zstack.compute.vm.APISetVmConsolePasswordMsg) (msg))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7439/buggy-version/compute.src.main.java.org.zstack.compute.vm.VmInstanceApiInterceptor.java", "BodyUseAPI": [], "Fixed commit": "2fc80a8125da0b86b9344d52a616f92a69b40555", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-03-13T06:33:38Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sessionChecker) != null) { sessionChecker.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1818/buggy-version/src.org.jpos.ee.pm.core.PresentationManager.java", "BodyUseAPI": [], "Fixed commit": "69620e0f92ae8baafb4af5f93d08cbf1a033d612", "Url": "https://api.github.com/repos/jpaoletti/jpospm_core", "Date": "2011-06-29T12:49:22Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCancel) != null) { mCancel.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5909/buggy-version/camera-view.src.main.java.com.xlythe.fragment.camera.CameraFragment.java", "BodyUseAPI": [], "Fixed commit": "b611591103c231177f0b215be194964367c2635e", "Url": "https://api.github.com/repos/Xlythe/CameraView", "Date": "2017-03-27T15:27:04Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (view == (mCancel)) { mCamera.rejectPicture(); }else { mCamera.confirmPicture(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5909/buggy-version/camera-view.src.main.java.com.xlythe.fragment.camera.CameraFragment.java", "BodyUseAPI": [], "Fixed commit": "b611591103c231177f0b215be194964367c2635e", "Url": "https://api.github.com/repos/Xlythe/CameraView", "Date": "2017-03-27T15:27:04Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (messageEditText.getText().toString().equals(\"\")) { android.widget.Toast.makeText(getApplicationContext(), \"Enter some Text\", Toast.LENGTH_SHORT).show(); }else { new async_tasks.ChatAsyncTask(in.aptamitra.activities.ChatActivity.activity).execute(messageEditText.getText().toString()); messageEditText.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8618/buggy-version/app.src.main.java.in.aptamitra.activities.ChatActivity.java", "BodyUseAPI": ["messageEditText.getText().toString()", "async_tasks.ChatAsyncTask.execute(messageEditText.getText().toString())", "android.widget.EditText.getText()", "android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "c2f08e3c2a923035e6001cc2b27391c069ca1d18", "Url": "https://api.github.com/repos/abhishekramkrishna002/aptamitraUser", "Date": "2015-08-03T07:18:10Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.invoke(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (collection != null) { collection.addAll(((java.util.Collection) (value))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6788/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.FieldDeserializer.java", "BodyUseAPI": ["java.util.Collection.addAll(java.lang.Object)"], "Fixed commit": "3fd8019f7c5e2657baa4e4f245f5c521d88e91c7", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2013-05-15T10:12:31Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (packetFromStr != null) el_packet.setPacketFrom(tigase.xmpp.JID.jidInstanceNS(packetFromStr));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7418/buggy-version/src.main.java.tigase.cluster.strategy.cmd.PacketForwardCmd.java", "BodyUseAPI": ["tigase.server.Packet.setPacketFrom(tigase.xmpp.JID.jidInstanceNS(packetFromStr))", "tigase.xmpp.JID.jidInstanceNS(java.lang.String)"], "Fixed commit": "c92c4b6d74612de4ff3a408d565606b0bcbd4c36", "Url": "https://api.github.com/repos/kontalk/tigase-server", "Date": "2016-02-16T19:21:49Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(session.isUserId(packet.getStanzaTo().getBareJID()))) result.getElement().addAttribute(tigase.xmpp.impl.FROM_CONN_ID, connectionId.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7418/buggy-version/src.main.java.tigase.xmpp.impl.MessageAmp.java", "BodyUseAPI": [], "Fixed commit": "c92c4b6d74612de4ff3a408d565606b0bcbd4c36", "Url": "https://api.github.com/repos/kontalk/tigase-server", "Date": "2016-02-16T19:21:49Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((conn != null) || ((packet.getPacketFrom()) != null)) { data = new java.util.LinkedHashMap<java.lang.String, java.lang.String>(); if (conn != null) data.put(tigase.cluster.strategy.SESSION_FOUND_KEY, sm.getComponentId().toString()); if ((packet.getPacketFrom()) != null) data.put(PacketForwardCmd.PACKET_FROM_KEY, packet.getPacketFrom().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7418/buggy-version/src.main.java.tigase.cluster.strategy.DefaultClusteringStrategyAbstract.java", "BodyUseAPI": ["packet.getPacketFrom().toString()", "tigase.server.Packet.getPacketFrom()", "java.util.Map<java.lang.String, java.lang.String>.put(PacketForwardCmd.PACKET_FROM_KEY,packet.getPacketFrom().toString())", "tigase.server.Packet.getPacketFrom()"], "Fixed commit": "c92c4b6d74612de4ff3a408d565606b0bcbd4c36", "Url": "https://api.github.com/repos/kontalk/tigase-server", "Date": "2016-02-16T19:21:49Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nju.blockbuster.service.impl.ShowRepository.findShowBySid(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (email.equals(show.getEmail())) { return util.ResultMessage.SUCCESS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7155/buggy-version/blockbuster.src.main.java.nju.blockbuster.service.impl.ShowServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "06e0caf270031814c95a4e927197c609b5f4970e", "Url": "https://api.github.com/repos/Gyue15/blockbuster_back_end", "Date": "2017-12-10T14:25:11Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (watch == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3370/buggy-version/src.com.myinno.Listener.java", "BodyUseAPI": [], "Fixed commit": "3fbe77c522bca4716808d51bd20b319dda6597c9", "Url": "https://api.github.com/repos/AlNedorezov/InnomapsServer", "Date": "2016-04-06T21:54:41Z"},
{"Line": "=>836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iterationId != null) { elementDTO.getTabPanel().setElementValidity(elementDTO, event.isValueOn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/68/buggy-version/src.main.java.org.sigmah.client.ui.presenter.project.dashboard.PhasesPresenter.java", "BodyUseAPI": [], "Fixed commit": "bb98648b861bd9d8ae5864452bf9e3235f79041a", "Url": "https://api.github.com/repos/osarrat/sigmah", "Date": "2016-11-10T14:35:00Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((string.length()) == 4) { timeFormat = new java.text.SimpleDateFormat(\"HHmm\"); timeFormat.setLenient(false); }else if ((string.length()) == 3) { timeFormat = new java.text.SimpleDateFormat(\"Hmm\"); timeFormat.setLenient(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1206/buggy-version/Task.Validator.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "dd2227b9d5ccf52a033f0072d861cbf10f5de97b", "Url": "https://api.github.com/repos/cs2103aug2015-t14-2j/main", "Date": "2015-10-24T12:54:20Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.ItemStack.getTagCompound()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (stackTag == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/705/buggy-version/VanillaMagic.src.main.java.seia.vanillamagic.quest.QuestCaptureEntity.java", "BodyUseAPI": [], "Fixed commit": "c7919761dc35b994a46765ef286b7c799f10c8f5", "Url": "https://api.github.com/repos/Sejoslaw/VanillaMagic", "Date": "2016-08-31T09:25:15Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["interf.getMoleculeIds().getFirst().charAt(int)", "interf.getMoleculeIds().getSecond().charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (chain1 == chain2) { chain2 = eppic.PymolRunner.getNextLetter(chain1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/598/buggy-version/eppic-cli.src.main.java.eppic.PymolRunner.java", "BodyUseAPI": ["eppic.PymolRunner.getNextLetter(char)"], "Fixed commit": "a85060a3da8347c632218c0fb30bb0fcb82bc5c5", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2015-05-17T08:04:21Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showPopupOnError) { org.freeplane.core.ui.components.UITools.errorMessage(org.freeplane.core.util.TextUtils.getText(\"filters_not_loaded\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2052/buggy-version/freeplane.src.org.freeplane.features.filter.FilterController.java", "BodyUseAPI": [], "Fixed commit": "41e8a731398e02efa7a95b6d87115e73c257a004", "Url": "https://api.github.com/repos/freeplane/freeplane", "Date": "2013-12-28T19:12:10Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (updateTask != null) { updateTask.addError(net.nikr.eve.jeveasset.i18n.DialoguesUpdate.get().citadel(), ex.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1097/buggy-version/src.main.java.net.nikr.eve.jeveasset.io.online.CitadelGetter.java", "BodyUseAPI": ["net.nikr.eve.jeveasset.gui.dialogs.update.UpdateTask.addError(net.nikr.eve.jeveasset.i18n.DialoguesUpdate.get().citadel(),java.lang.String)"], "Fixed commit": "02c1576ee384dc87fb70fc9b884fda8648685c2e", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2016-09-30T11:43:49Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hook.getPlayer().hasPermission(\"rulesmenu.accepted\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2751/buggy-version/src.com.therazzerapp.rulesmenu.listener.ShowMenu.java", "BodyUseAPI": [], "Fixed commit": "2711579c5a255497038f7fb73122c192263b8c3c", "Url": "https://api.github.com/repos/TheRaZZeRApp/RulesMenu", "Date": "2015-04-21T16:21:15Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jetty.io.AbstractEndPoint.getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (connection == null) return \"null\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5477/buggy-version/jetty-io.src.main.java.org.eclipse.jetty.io.AbstractEndPoint.java", "BodyUseAPI": [], "Fixed commit": "a5861954b0533232a8b36840d0098304f5b334ed", "Url": "https://api.github.com/repos/eclipse/jetty.project", "Date": "2016-12-01T17:19:05Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (javax.swing.SwingUtilities.isLeftMouseButton(e)) if (isDraggable()) enableDrag(e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4506/buggy-version/src.org.magic.game.gui.components.DisplayableCard.java", "BodyUseAPI": ["org.magic.game.gui.components.DisplayableCard.2.enableDrag(java.awt.event.MouseEvent)"], "Fixed commit": "db977f1f067a08813983da753c08a013a1cb82b0", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-06-10T20:05:25Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ednovo.gooru.application.server.service.ResourceServiceImpl.getCollectionFromEmbed(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (collectionDo != null) { htmlOutput.append(\" <!DOCTYPE html>\").append(\"<html><head>\").append(\"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=UTF-8\\\" />\").append(((\"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"\" + cssEndPoint) + \"/css/embed.css\\\">\")).append(\"</head>\").append(((((((((\"<body><div class=\\\"embed-container\\\"><div class=\\\"collection-image\\\"><a href=\\\"\" + homeEndPoint) + \"/#collection-play&id=\") + (collectionDo.getGooruOid())) + \"\\\"target=\\\"_blank\\\" class=\\\"collectionImage\\\"><image onerror=\\\"this.src=\\'\") + homeEndPoint) + \"/images/collection-default-image.png\\'\\\" src=\") + ((collectionDo.getThumbnails()) != null ? collectionDo.getThumbnails().getUrl() : \"\")) + \" width=\\\"310px\\\" height=\\\"208px\\\"><div class=\\\"button\\\">Study</div></a></div>\")).append(\"<div class=\\\"metadata\\\">\").append(((((((\"<h1 class=\\\"title\\\"><a href=\\\"\" + homeEndPoint) + \"/#collection-play&id=\") + (collectionDo.getGooruOid())) + \"\\\"target=\\\"_blank\\\">\") + (collectionDo.getTitle())) + \"</a></h1>\")).append(((\"<div class=\\\"description\\\"><span class=\\\"label\\\">Description: </span>\" + ((collectionDo.getGoals()) != null ? collectionDo.getGoals() : \"\")) + \"</div>\")).append(((\"<div class=\\\"resources\\\">\" + collectionItems) + \"</div></div></div></div> </body></html>\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4515/buggy-version/src.main.java.org.ednovo.gooru.application.server.service.EmbedController.java", "BodyUseAPI": ["htmlOutput.append(\" <!DOCTYPE html>\").append(\"<html><head>\").append(\"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=UTF-8\\\" />\").append(((\"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"\" + cssEndPoint) + \"/css/embed.css\\\">\")).append(\"</head>\").append(((((((((\"<body><div class=\\\"embed-container\\\"><div class=\\\"collection-image\\\"><a href=\\\"\" + homeEndPoint) + \"/#collection-play&id=\") + (collectionDo.getGooruOid())) + \"\\\"target=\\\"_blank\\\" class=\\\"collectionImage\\\"><image onerror=\\\"this.src=\\'\") + homeEndPoint) + \"/images/collection-default-image.png\\'\\\" src=\") + ((collectionDo.getThumbnails()) != null ? collectionDo.getThumbnails().getUrl() : \"\")) + \" width=\\\"310px\\\" height=\\\"208px\\\"><div class=\\\"button\\\">Study</div></a></div>\")).append(\"<div class=\\\"metadata\\\">\").append(((((((\"<h1 class=\\\"title\\\"><a href=\\\"\" + homeEndPoint) + \"/#collection-play&id=\") + (collectionDo.getGooruOid())) + \"\\\"target=\\\"_blank\\\">\") + (collectionDo.getTitle())) + \"</a></h1>\")).append(((\"<div class=\\\"description\\\"><span class=\\\"label\\\">Description: </span>\" + ((collectionDo.getGoals()) != null ? collectionDo.getGoals() : \"\")) + \"</div>\"))", "java.lang.StringBuffer.append(((((((((\"<body><div class=\\\"embed-container\\\"><div class=\\\"collection-image\\\"><a href=\\\"\" + homeEndPoint) + \"/#collection-play&id=\") + (collectionDo.getGooruOid())) + \"\\\"target=\\\"_blank\\\" class=\\\"collectionImage\\\"><image onerror=\\\"this.src=\\'\") + homeEndPoint) + \"/images/collection-default-image.png\\'\\\" src=\") + ((collectionDo.getThumbnails()) != null ? collectionDo.getThumbnails().getUrl() : \"\")) + \" width=\\\"310px\\\" height=\\\"208px\\\"><div class=\\\"button\\\">Study</div></a></div>\"))", "htmlOutput.append(\" <!DOCTYPE html>\").append(\"<html><head>\").append(\"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=UTF-8\\\" />\").append(((\"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"\" + cssEndPoint) + \"/css/embed.css\\\">\")).append(\"</head>\").append(((((((((\"<body><div class=\\\"embed-container\\\"><div class=\\\"collection-image\\\"><a href=\\\"\" + homeEndPoint) + \"/#collection-play&id=\") + (collectionDo.getGooruOid())) + \"\\\"target=\\\"_blank\\\" class=\\\"collectionImage\\\"><image onerror=\\\"this.src=\\'\") + homeEndPoint) + \"/images/collection-default-image.png\\'\\\" src=\") + ((collectionDo.getThumbnails()) != null ? collectionDo.getThumbnails().getUrl() : \"\")) + \" width=\\\"310px\\\" height=\\\"208px\\\"><div class=\\\"button\\\">Study</div></a></div>\")).append(\"<div class=\\\"metadata\\\">\").append(((((((\"<h1 class=\\\"title\\\"><a href=\\\"\" + homeEndPoint) + \"/#collection-play&id=\") + (collectionDo.getGooruOid())) + \"\\\"target=\\\"_blank\\\">\") + (collectionDo.getTitle())) + \"</a></h1>\"))", "org.ednovo.gooru.application.shared.model.content.CollectionDo.getGoals()", "org.ednovo.gooru.application.shared.model.content.CollectionDo.getThumbnails()", "java.lang.StringBuffer.append(java.lang.String)", "org.ednovo.gooru.application.shared.model.content.CollectionDo.getThumbnails()", "org.ednovo.gooru.application.shared.model.content.CollectionDo.getTitle()", "htmlOutput.append(\" <!DOCTYPE html>\").append(\"<html><head>\").append(\"<meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=UTF-8\\\" />\").append(((\"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"\" + cssEndPoint) + \"/css/embed.css\\\">\")).append(\"</head>\").append(((((((((\"<body><div class=\\\"embed-container\\\"><div class=\\\"collection-image\\\"><a href=\\\"\" + homeEndPoint) + \"/#collection-play&id=\") + (collectionDo.getGooruOid())) + \"\\\"target=\\\"_blank\\\" class=\\\"collectionImage\\\"><image onerror=\\\"this.src=\\'\") + homeEndPoint) + \"/images/collection-default-image.png\\'\\\" src=\") + ((collectionDo.getThumbnails()) != null ? collectionDo.getThumbnails().getUrl() : \"\")) + \" width=\\\"310px\\\" height=\\\"208px\\\"><div class=\\\"button\\\">Study</div></a></div>\")).append(\"<div class=\\\"metadata\\\">\").append(((((((\"<h1 class=\\\"title\\\"><a href=\\\"\" + homeEndPoint) + \"/#collection-play&id=\") + (collectionDo.getGooruOid())) + \"\\\"target=\\\"_blank\\\">\") + (collectionDo.getTitle())) + \"</a></h1>\")).append(((\"<div class=\\\"description\\\"><span class=\\\"label\\\">Description: </span>\" + ((collectionDo.getGoals()) != null ? collectionDo.getGoals() : \"\")) + \"</div>\")).append(java.lang.String)", "org.ednovo.gooru.application.shared.model.content.CollectionDo.getGooruOid()", "org.ednovo.gooru.application.shared.model.content.CollectionDo.getGooruOid()", "collectionDo.getThumbnails().getUrl()", "org.ednovo.gooru.application.shared.model.content.CollectionDo.getGoals()"], "Fixed commit": "a8dc168153a90a67b6b7276b363097fb78974c80", "Url": "https://api.github.com/repos/suryanarayanakb/Gooru-Web", "Date": "2015-07-12T15:09:13Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pingis.entities.TaskInstance.getTestTaskinstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (testTaskInstance == null) { testTaskInstance = taskInstanceService.getCorrespondingTestTaskInstance(taskInstance); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5344/buggy-version/src.main.java.pingis.services.EditorService.java", "BodyUseAPI": [], "Fixed commit": "34b86b215cb20a7222d836ed25e9a4c224d6256d", "Url": "https://api.github.com/repos/impliedfeline/tdd-pingpong", "Date": "2017-08-12T21:23:17Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getArguments().getString(getString(R.string.pref_header_key))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (getString(R.string.pref_distance_header).equals(key)) { addPreferencesFromResource(R.xml.preferences_distance); mSettingsActivity.configurePreferencesDistance(this); }else if (getString(R.string.pref_help_header).equals(key)) { addPreferencesFromResource(R.xml.preferences_help); mSettingsActivity.configurePreferencesHelp(this); }else if (getString(R.string.pref_about_header).equals(key)) { addPreferencesFromResource(R.xml.preferences_about); mSettingsActivity.configurePreferencesAbout(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4/buggy-version/SmartReceiptsLibrary.src.main.java.co.smartreceipts.android.fragments.preferences.PreferenceHeaderFragment.java", "BodyUseAPI": ["getString(R.string.pref_about_header).equals(java.lang.String)", "getString(R.string.pref_help_header).equals(java.lang.String)"], "Fixed commit": "50e6b116475d8a73521a080bee9f520438b7ff18", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2015-01-08T00:42:33Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (startTime != null) { pausedPostion = startTime.longValue(); }else { pausedPostion = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/891/buggy-version/DanmakuFlameMaster.src.main.java.master.flame.danmaku.ui.widget.DanmakuSurfaceView.java", "BodyUseAPI": ["java.lang.Long.longValue()"], "Fixed commit": "ab72a830c8a59c777a1fa893c9c8b763b5eafefd", "Url": "https://api.github.com/repos/ctiao/DanmakuFlameMaster", "Date": "2014-01-10T04:08:54Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.sp.dao.StudentDAO.isEmailPresent(userEmail)) { java.lang.System.out.println(\"user already present\"); request.setAttribute(com.sp.controller.MESSAGE, \"User already exists\"); javax.servlet.RequestDispatcher dispatcher = request.getRequestDispatcher(\"register.jsp\"); dispatcher.forward(request, response); }else { java.lang.System.out.println(\"creating new user\"); java.lang.String password = request.getParameter(\"confirmPassword\"); com.sp.dao.StudentDAO.addStudent(userEmail, password); response.sendRedirect(\"login.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/44/buggy-version/src.com.sp.controller.RegisterController.java", "BodyUseAPI": ["com.sp.dao.StudentDAO.addStudent(java.lang.String,java.lang.String)"], "Fixed commit": "8b0a858a0b70c059299e4428252b82c1339f9bcd", "Url": "https://api.github.com/repos/iamprem/studentportal", "Date": "2015-08-02T21:26:39Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.resources.FileReader.loadFileIntoString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((json == null) || ((json.trim().length()) < 1)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7515/buggy-version/FirstExample.src.com.resources.ReadJSONfromFile.java", "BodyUseAPI": [], "Fixed commit": "9e9672c599307b17668bd2bd81e8dc10e9c195a8", "Url": "https://api.github.com/repos/shrexman/JSONWebService", "Date": "2016-08-18T21:42:47Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLoadGroupOwnerCount) > 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2299/buggy-version/source.src.com.v2tech.view.JNIService.java", "BodyUseAPI": [], "Fixed commit": "1ef7b907da0b2648f0e0fabf1cea02549a54b73d", "Url": "https://api.github.com/repos/jiangzhen1984/V2TechConferenceClient", "Date": "2014-01-23T08:23:56Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.v2tech.view.JNIService.JNICallbackHandler.getMeta(msg.what)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((d != null) && ((d.caller) != null)) && ((d.caller.what) == (com.v2tech.view.JNIService.JNI_LOAD_GROUP_OWNER_INFO))) { arg1 = d.caller.arg1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2299/buggy-version/source.src.com.v2tech.view.JNIService.java", "BodyUseAPI": [], "Fixed commit": "1ef7b907da0b2648f0e0fabf1cea02549a54b73d", "Url": "https://api.github.com/repos/jiangzhen1984/V2TechConferenceClient", "Date": "2014-01-23T08:23:56Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((instrument == null) && (fragmentString.startsWith(\"ship\"))) { instrument = new messaging.Kmart(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3735/buggy-version/src.messaging.SongFragment.java", "BodyUseAPI": [], "Fixed commit": "a36ba58a43f18bad74a1c097612087e8a00b6ca1", "Url": "https://api.github.com/repos/banderson623/Tooter", "Date": "2013-05-03T16:01:11Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.getPlayer().hasMetadata(\"isInDungeon\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6540/buggy-version/src.com.midgardjourney.warper.WarperPlugin.java", "BodyUseAPI": [], "Fixed commit": "4daded4f31a1b8caf0d1ae06a320912612570c3c", "Url": "https://api.github.com/repos/N30Pr1nc3/warper", "Date": "2015-06-19T11:52:09Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(e.getEntity().hasMetadata(\"isInDungeon\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6540/buggy-version/src.com.midgardjourney.warper.WarperPlugin.java", "BodyUseAPI": [], "Fixed commit": "4daded4f31a1b8caf0d1ae06a320912612570c3c", "Url": "https://api.github.com/repos/N30Pr1nc3/warper", "Date": "2015-06-19T11:52:09Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pos == 0) { spDate.setSelection(groupPosition); groupPosition = 0; }else { spDate.setSelection(pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5835/buggy-version/app.src.main.java.com.jacksonvillecomedy.broskj.jaxcomedy.Reserve.java", "BodyUseAPI": ["android.widget.Spinner.setSelection(int)"], "Fixed commit": "50f451c1d8d229ad44269438f17502c34e092bde", "Url": "https://api.github.com/repos/broskj/JaxComedy", "Date": "2015-02-16T16:26:47Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tweetList) == null) tweetList = new java.util.ArrayList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1249/buggy-version/app.src.main.java.com.andreapivetta.blu.activities.TimeLineActivity.java", "BodyUseAPI": [], "Fixed commit": "41fe94f88c85e2ef22a1e8ebf5ec6b5de8d2a763", "Url": "https://api.github.com/repos/ziggy42/Blum-legacy-", "Date": "2015-02-13T01:39:16Z"},
{"Line": "=>662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ref.offset) < (ref.bytes.length)) { final long address = org.exist.util.ByteConversion.byteToLong(ref.bytes, ref.offset); storedNode.setInternalAddress(address); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6883/buggy-version/extensions.indexes.range.src.org.exist.indexing.range.RangeIndexWorker.java", "BodyUseAPI": ["org.exist.util.ByteConversion.byteToLong(ref.bytes,ref.offset)"], "Fixed commit": "9fbe82bc7b87394cc25e5901e1881480c8b3a5e2", "Url": "https://api.github.com/repos/shabanovd/exist", "Date": "2014-07-07T10:31:32Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (message == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7685/buggy-version/src.main.java.io.github.alshain01.flags.DataStoreMySQL.java", "BodyUseAPI": [], "Fixed commit": "f30664a90d6c009cb774c6aee4d8b9f2904d74d4", "Url": "https://api.github.com/repos/Alshain01/Flags", "Date": "2014-03-23T22:56:36Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tags.size()) == 2) { containsConstant = subPathOfLength2ContainsConstant(tags); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7960/buggy-version/src.main.java.com.trainingdataprocessor.factories.SubPathDataListFactoryImpl.java", "BodyUseAPI": ["com.trainingdataprocessor.factories.SubPathDataListFactoryImpl.subPathOfLength2ContainsConstant(java.util.List<java.lang.String>)"], "Fixed commit": "6351e9df47c2e89d991b3a428a30e0d53a5ae12e", "Url": "https://api.github.com/repos/ares2015/AresPosTaggerModelDataProcessor", "Date": "2017-01-07T09:44:20Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(key.isValid())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7541/buggy-version/core.src.main.java.com.xqbase.net.Connector.java", "BodyUseAPI": [], "Fixed commit": "bef7c8baffb0b5fcd2c1c68c9119edc0f824e03b", "Url": "https://api.github.com/repos/xqbase/net", "Date": "2014-11-27T09:28:06Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((net.aufdemrand.denizen.utilities.depends.Depends.citizens) != null) && (net.citizensnpcs.api.CitizensAPI.getNPCRegistry().isNPC(((org.bukkit.entity.Player) (holder))))) { idType = \"npc\"; idHolder = dNPC.fromEntity(((org.bukkit.entity.Player) (holder))).identify(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/9233/buggy-version/src.main.java.net.aufdemrand.denizen.objects.dInventory.java", "BodyUseAPI": ["net.aufdemrand.denizen.objects.dInventory.fromEntity(net.aufdemrand.denizen.objects.InventoryHolder)", "dNPC.fromEntity(((org.bukkit.entity.Player) (holder))).identify()"], "Fixed commit": "59c419a4bf9b9b4d4f37e9c4b9d3c09c5d4f8a8c", "Url": "https://api.github.com/repos/mcmonkey4eva/Denizen", "Date": "2016-03-29T21:34:54Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((args.length) < 1) || ((args.length) > 2)) { java.lang.System.err.println(\"usage: Ping host [count]\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2571/buggy-version/src.example.Ping.java", "BodyUseAPI": [], "Fixed commit": "39e73bf7880b16cd727d8308c852890544c74da4", "Url": "https://api.github.com/repos/felipehertzer/rocksaw-ping-example-x64", "Date": "2017-12-22T16:19:03Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resource) == null) pickUp();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3889/buggy-version/src.fr.polytech.robots.Robot.java", "BodyUseAPI": [], "Fixed commit": "8f3f8770a547c65b1d4931188ea5237799d34fe2", "Url": "https://api.github.com/repos/GaetanRoger/robots", "Date": "2017-10-08T16:43:39Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resource) != null) putDown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3889/buggy-version/src.fr.polytech.robots.Robot.java", "BodyUseAPI": [], "Fixed commit": "8f3f8770a547c65b1d4931188ea5237799d34fe2", "Url": "https://api.github.com/repos/GaetanRoger/robots", "Date": "2017-10-08T16:43:39Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(usbLinkAndroid.isUsbConnected())) { throw new java.lang.IllegalArgumentException(\"Scanning is only supported with Crazyradio.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3157/buggy-version/src.se.bitcraze.crazyfliecontrol.prefs.PreferencesActivity.java", "BodyUseAPI": [], "Fixed commit": "1daf32d93d8fae9bb40c3958a7407e5ec4b460c1", "Url": "https://api.github.com/repos/bitcraze/crazyflie-android-client", "Date": "2015-12-25T18:34:58Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mConnection) == null) { return 0.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3157/buggy-version/src.se.bitcraze.crazyfliecontrol2.UsbLinkAndroid.java", "BodyUseAPI": [], "Fixed commit": "1daf32d93d8fae9bb40c3958a7407e5ec4b460c1", "Url": "https://api.github.com/repos/bitcraze/crazyflie-android-client", "Date": "2015-12-25T18:34:58Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.NavigableMap<java.lang.String, java.lang.Integer>.ceilingEntry(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (nextKey != null) { java.lang.String group = nextKey.getKey(); if (group.startsWith(grp)) { group = group.substring(grp.length(), group.length()); return java.util.Arrays.asList(group); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1602/buggy-version/src.main.java.org.stt.text.SplitItemGrouper.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Integer>.getKey()"], "Fixed commit": "e309e14e0152feae03f12b57fc49a6575c26489c", "Url": "https://api.github.com/repos/Blizzard26/StandaloneClient", "Date": "2016-11-08T21:33:21Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.plugin.PluginPackageImpl.getRepository()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (remotePluginPackageRepository != null) { java.util.Properties settings = remotePluginPackageRepository.getSettings(); java.lang.String useDownloadURL = settings.getProperty(RemotePluginPackageRepository.SETTING_USE_DOWNLOAD_URL); if (!(com.liferay.portal.kernel.util.GetterUtil.getBoolean(useDownloadURL, true))) { return getArtifactURL(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5366/buggy-version/portal-impl.src.com.liferay.portal.plugin.PluginPackageImpl.java", "BodyUseAPI": ["com.liferay.portal.kernel.plugin.RemotePluginPackageRepository.getSettings()"], "Fixed commit": "7e67f4f4c1612f71e44622ed8a4b205c5575711b", "Url": "https://api.github.com/repos/tinatian/liferay-portal", "Date": "2016-08-24T16:53:23Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((proxy.getClazz()) == null) || ((proxy.getValue()) == null)) { proxy = defaultProxyChameleon; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4702/buggy-version/src.main.java.com.jjm.chameleon.proxy.ChameleonVendorAdapterStrategy.java", "BodyUseAPI": [], "Fixed commit": "49eddaa956d3cd5e6d068d150c21692270fe233d", "Url": "https://api.github.com/repos/JJaraM/chameleon", "Date": "2016-04-06T15:15:40Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getContentType()) == null) { return false; }else { return org.rapidcontext.core.web.Mime.isMatch(request.getContentType(), mimes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2766/buggy-version/src.java.org.rapidcontext.core.web.Mime.java", "BodyUseAPI": ["org.rapidcontext.core.web.Request.getContentType()", "org.rapidcontext.core.web.Mime.isMatch(request.getContentType(),java.lang.String[])"], "Fixed commit": "84f587705d86147e202923eb83688a071d1c6c4e", "Url": "https://api.github.com/repos/cederberg/rapidcontext", "Date": "2016-12-31T07:10:22Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (linksTableViewer.getTable().isDisposed()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4353/buggy-version/yamcs-studio-tycho.org.yamcs.studio.ui.monitoring.src.main.java.org.yamcs.studio.ui.links.LinkTableModel.java", "BodyUseAPI": [], "Fixed commit": "56627203849be8de451ac823f1ea1d79c59dcf5b", "Url": "https://api.github.com/repos/yamcs/yamcs-studio", "Date": "2015-12-05T08:59:38Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.red5.server.net.rtmp.codec.RTMPMinaProtocolDecoder.log.isTraceEnabled()) { org.red5.server.net.rtmp.codec.RTMPMinaProtocolDecoder.log.trace(\"Buffer after: {}\", org.apache.commons.codec.binary.Hex.encodeHexString(org.bouncycastle.util.Arrays.copyOfRange(buf.array(), buf.position(), buf.limit()))); org.red5.server.net.rtmp.codec.RTMPMinaProtocolDecoder.log.trace(\"Buffers info after: buf.position {}, buf.limit {}, buf.remaining {}\", new java.lang.Object[]{ buf.position(), buf.limit(), buf.remaining() }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3413/buggy-version/src.main.java.org.red5.server.net.rtmp.codec.RTMPMinaProtocolDecoder.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String,org.apache.commons.codec.binary.Hex.encodeHexString(org.bouncycastle.util.Arrays.copyOfRange(buf.array(), buf.position(), buf.limit())))", "org.slf4j.Logger.trace(java.lang.String,java.lang.Object[])"], "Fixed commit": "ecb297268bf302ccccf14f0887017fc1c2301c10", "Url": "https://api.github.com/repos/solomax/red5-server-common", "Date": "2016-02-27T08:48:50Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.red5.server.net.rtmp.codec.RTMPMinaProtocolDecoder.log.isTraceEnabled()) { org.red5.server.net.rtmp.codec.RTMPMinaProtocolDecoder.log.trace(\"Buffer before: {}\", org.apache.commons.codec.binary.Hex.encodeHexString(org.bouncycastle.util.Arrays.copyOfRange(buf.array(), buf.position(), buf.limit()))); org.red5.server.net.rtmp.codec.RTMPMinaProtocolDecoder.log.trace(\"Buffers info before: buf.position {}, buf.limit {}, buf.remaining {}\", new java.lang.Object[]{ buf.position(), buf.limit(), buf.remaining() }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3413/buggy-version/src.main.java.org.red5.server.net.rtmp.codec.RTMPMinaProtocolDecoder.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String,org.apache.commons.codec.binary.Hex.encodeHexString(org.bouncycastle.util.Arrays.copyOfRange(buf.array(), buf.position(), buf.limit())))", "org.slf4j.Logger.trace(java.lang.String,java.lang.Object[])"], "Fixed commit": "ecb297268bf302ccccf14f0887017fc1c2301c10", "Url": "https://api.github.com/repos/solomax/red5-server-common", "Date": "2016-02-27T08:48:50Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (period.getPeriodType().isWeek()) { periodLabel.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))); if ((period.getBeginDate().getMonth()) != (period.getEndDate().getMonth())) { displayWeek = true; if ((period.getBeginDate().getYear()) != (period.getEndDate().getYear())) { periodLabel.append(\" \").append(period.getBeginDate().getYear()); } periodLabel.append(\" / \").append(bundle.getString((\"GML.mois\" + (period.getEndDate().getMonth())))); } periodLabel.append(\" \").append(period.getEndDate().getYear()); if (displayWeek) { periodLabel.append(\" - \").append(bundle.getString(\"GML.week\")).append(' ').append(period.getBeginDate().getWeekOfYear()); } }else if (period.getPeriodType().isMonth()) { periodLabel.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))).append(\" \").append(period.getBeginDate().getYear()); }else if (period.getPeriodType().isYear()) { periodLabel.append(period.getBeginDate().getYear()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5015/buggy-version/web-core.src.main.java.org.silverpeas.calendar.CalendarViewContext.java", "BodyUseAPI": ["java.lang.StringBuilder.append(period.getBeginDate().getYear())", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "java.lang.StringBuilder.append(period.getBeginDate().getYear())", "period.getBeginDate().getYear()", "java.lang.StringBuilder.append(period.getEndDate().getYear())", "period.getBeginDate().getMonth()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "period.getEndDate().getMonth()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "org.silverpeas.calendar.CalendarPeriod.getEndDate()", "period.getBeginDate().getYear()", "periodLabel.append(\" - \").append(bundle.getString(\"GML.week\")).append(' ').append(period.getBeginDate().getWeekOfYear())", "java.lang.StringBuilder.append(bundle.getString((\"GML.mois\" + (period.getEndDate().getMonth()))))", "periodLabel.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))).append(\" \").append(period.getBeginDate().getYear())", "java.lang.StringBuilder.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth()))))", "period.getBeginDate().getYear()", "period.getPeriodType().isYear()", "period.getEndDate().getMonth()", "com.stratelia.webactiv.util.ResourceLocator.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))", "java.lang.StringBuilder.append(bundle.getString((\"GML.mois\" + (period.getBeginDate().getMonth()))))", "org.silverpeas.calendar.CalendarPeriod.getPeriodType()", "java.lang.StringBuilder.append(java.lang.String)", "com.stratelia.webactiv.util.ResourceLocator.getString((\"GML.mois\" + (period.getBeginDate().getMonth())))", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "period.getEndDate().getYear()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "period.getBeginDate().getMonth()", "org.silverpeas.calendar.CalendarPeriod.getBeginDate()", "org.silverpeas.calendar.CalendarPeriod.getPeriodType()", "period.getPeriodType().isMonth()", "period.getBeginDate().getWeekOfYear()", "org.silverpeas.calendar.CalendarPeriod.getEndDate()", "org.silverpeas.calendar.CalendarPeriod.getEndDate()", "period.getEndDate().getYear()", "com.stratelia.webactiv.util.ResourceLocator.getString((\"GML.mois\" + (period.getEndDate().getMonth())))", "org.silverpeas.calendar.CalendarPeriod.getEndDate()", "period.getBeginDate().getMonth()", "period.getBeginDate().getYear()"], "Fixed commit": "1b5b81dc502b2dc6032340e44777f29f60ae921d", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Core", "Date": "2016-01-29T11:14:35Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fName.endsWith(\".md\")) { if (fName.startsWith(\"api\")) { try { this.description = com.mulesoft.portal.apis.utils.Utils.getContents(f); } catch (java.lang.IllegalStateException e) { java.lang.System.err.println((\"Unable to read portal description \" + (f.getAbsolutePath()))); this.description = \"\"; } }else if (fName.startsWith(\"notebook\")) { try { this.notebooksDescription = com.mulesoft.portal.apis.utils.Utils.getContents(f); } catch (java.lang.IllegalStateException e) { java.lang.System.err.println((\"Unable to read notebooks description \" + (f.getAbsolutePath()))); this.notebooksDescription = \"\"; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8052/buggy-version/com.mulesoft.portal.sync.buildSrc.src.main.java.com.mulesoft.portal.apis.hlm.APIVersion.java", "BodyUseAPI": [], "Fixed commit": "50fd273d1e7e6bda2ca85fa5198e758e5cb58c5a", "Url": "https://api.github.com/repos/raml-apis/synchronization", "Date": "2015-03-09T19:29:30Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((eggs.size()) == 0) && ((chickens.size()) == 0)) { farmListView.setAdapter(null); }else { android.widget.SimpleAdapter simpleAdapter = new android.widget.SimpleAdapter(this, listItems, R.layout.farm_list_item, new java.lang.String[]{ \"name\", \"detail\", \"status\" }, new int[]{ R.id.farm_chicken_name, R.id.farm_chicken_tips, R.id.farm_chicken_status }); farmListView.setAdapter(simpleAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3253/buggy-version/app.src.main.java.com.example.rain.chickenfarmtycoon.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "76ed722feb5b8169870f7f5e3e9ce4eeb8af9dd9", "Url": "https://api.github.com/repos/rainf0rest/ChickenFarmTycoon", "Date": "2016-11-01T15:38:27Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((chickens.size()) != 0) { showChickenDia(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3253/buggy-version/app.src.main.java.com.example.rain.chickenfarmtycoon.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "76ed722feb5b8169870f7f5e3e9ce4eeb8af9dd9", "Url": "https://api.github.com/repos/rainf0rest/ChickenFarmTycoon", "Date": "2016-11-01T15:38:27Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selStart <= selEnd) { currentSelection = getText().toString().substring(selStart, selEnd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/492/buggy-version/app.src.main.java.org.connectbot.TerminalView.java", "BodyUseAPI": ["getText().toString().substring(int,int)"], "Fixed commit": "33ddaa70eda3b8042230c94d378c1eff477f76ea", "Url": "https://api.github.com/repos/rhansby/connectbot", "Date": "2015-10-05T19:10:02Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((redirectHandler) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5540/buggy-version/ProtocolLib.src.main.java.com.comphenix.protocol.ProtocolLibrary.java", "BodyUseAPI": [], "Fixed commit": "dc186df695f36d0b8290a0a68855c1e51d6c3eda", "Url": "https://api.github.com/repos/aadnk/ProtocolLib", "Date": "2012-11-20T05:48:05Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((redirectHandler) != null) { logger.removeHandler(redirectHandler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5540/buggy-version/ProtocolLib.src.main.java.com.comphenix.protocol.ProtocolLibrary.java", "BodyUseAPI": [], "Fixed commit": "dc186df695f36d0b8290a0a68855c1e51d6c3eda", "Url": "https://api.github.com/repos/aadnk/ProtocolLib", "Date": "2012-11-20T05:48:05Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.api.context.Context.getService(org.openmrs.module.updatecss.api.UpdateCSSService.class).getData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (currCSS == null) return new org.openmrs.module.updatecss.UpdateCSS(); else return currCSS;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1692/buggy-version/updatecss.omod.src.main.java.org.openmrs.module.updatecss.web.controller.UpdateCSSManageController.java", "BodyUseAPI": [], "Fixed commit": "3d41365704c9b7a87c8af1d4d0a9f0158fcd7912", "Url": "https://api.github.com/repos/ykolesn/openmrs-module-m601", "Date": "2013-04-23T00:35:17Z"},
{"Line": "=>1035", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/9124/buggy-version/tools.plugins.com.liferay.ide.project.ui.src.com.liferay.ide.project.ui.upgrade.animated.CustomJspPage.java", "BodyUseAPI": [], "Fixed commit": "3a5e5f4158812c424aeaff9bb118395e910bffac", "Url": "https://api.github.com/repos/AndyWu2015/liferay-ide", "Date": "2016-09-08T02:32:27Z"},
{"Line": "=>961", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["project.getFolder((\"docroot/\" + customJspPath)).getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (location == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/9124/buggy-version/tools.plugins.com.liferay.ide.project.ui.src.com.liferay.ide.project.ui.upgrade.animated.CustomJspPage.java", "BodyUseAPI": [], "Fixed commit": "3a5e5f4158812c424aeaff9bb118395e910bffac", "Url": "https://api.github.com/repos/AndyWu2015/liferay-ide", "Date": "2016-09-08T02:32:27Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<org.opendaylight.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.inet.types.rev100924.Ipv4Address, org.opendaylight.ovsdb.openstack.netvirt.providers.openflow13.services.arp.ArpResolverMetadata>.get(org.opendaylight.yang.gen.v1.urn.ietf.params.xml.ns.yang.ietf.inet.types.rev100924.Ipv4Address)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (gatewayArpMetadata == null) { org.opendaylight.ovsdb.openstack.netvirt.providers.openflow13.services.arp.GatewayMacResolverService.LOG.warn(\"No metadata found for gatewayIp: {}\", gatewayIp); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/364/buggy-version/openstack.net-virt-providers.src.main.java.org.opendaylight.ovsdb.openstack.netvirt.providers.openflow13.services.arp.GatewayMacResolverService.java", "BodyUseAPI": [], "Fixed commit": "15c11f46f6b46fb6e73ebb9efcfcedddc1775780", "Url": "https://api.github.com/repos/opendaylight/ovsdb", "Date": "2015-12-09T21:15:00Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSongIndex) == from) { currentSongIndex = to; }else if ((currentSongIndex) == to) { if (from < to) { (currentSongIndex)--; }else if (from > to) { (currentSongIndex)++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6834/buggy-version/src.com.stanford.tutti.Jam.java", "BodyUseAPI": [], "Fixed commit": "2e0a766a72326ebd6b2c2a7485ad6d1219ad45da", "Url": "https://api.github.com/repos/JayThomason/Tutti", "Date": "2014-05-12T09:47:30Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((codeStringMessage) == null) || ((currentUserID_Clone) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4990/buggy-version/MakeYourTeam.app.src.main.java.com.smile.makeyourteam.Models.MessageViewHolder.java", "BodyUseAPI": [], "Fixed commit": "69fbd96109ce11a250fb6c0d0a448aec385e69bd", "Url": "https://api.github.com/repos/xquangdang/MakeYourTeam", "Date": "2017-01-09T16:01:22Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.googlemediaframeworkdemo.demo.MainActivity.getActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (actionBar != null) { actionBar.hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1016/buggy-version/demo.src.main.java.com.google.googlemediaframeworkdemo.demo.MainActivity.java", "BodyUseAPI": ["android.app.ActionBar.hide()"], "Fixed commit": "326f887019c2b68c02a3dac20ea75ec9ecb6a281", "Url": "https://api.github.com/repos/tensafefrogs/google-media-framework-android", "Date": "2014-11-10T22:50:29Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIdByName(workbook.getSheet(\"Extras\"), paymentType).toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (paymentTypeId.equals(\"0\")) paymentTypeId = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/540/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.infrastructure.dataimport.domain.handler.loan.LoanDataImportHandler.java", "BodyUseAPI": [], "Fixed commit": "f37c253a442d276246184626caacf1c3ceb3ba00", "Url": "https://api.github.com/repos/diunuge/mifosx", "Date": "2014-08-01T16:25:17Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIdByName(workbook.getSheet(\"Extras\"), repaymentType).toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (repaymentTypeId.equals(\"0\")) repaymentTypeId = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/540/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.infrastructure.dataimport.domain.handler.loan.LoanDataImportHandler.java", "BodyUseAPI": [], "Fixed commit": "f37c253a442d276246184626caacf1c3ceb3ba00", "Url": "https://api.github.com/repos/diunuge/mifosx", "Date": "2014-08-01T16:25:17Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIdByName(workbook.getSheet(\"Extras\"), repaymentType).toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (repaymentTypeId.equals(\"0\")) repaymentTypeId = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/540/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.infrastructure.dataimport.domain.handler.loan.LoanRepaymentDataImportHandler.java", "BodyUseAPI": [], "Fixed commit": "f37c253a442d276246184626caacf1c3ceb3ba00", "Url": "https://api.github.com/repos/diunuge/mifosx", "Date": "2014-08-01T16:25:17Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(container.getGitUrl())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(m.find())) { throw new javax.ws.rs.WebApplicationException(org.apache.http.HttpStatus.SC_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6585/buggy-version/dockstore-webservice.src.main.java.io.dockstore.webservice.resources.DockerRepoResource.java", "BodyUseAPI": [], "Fixed commit": "2700e31cb41a248b6a2b3ef142369155fb66db5b", "Url": "https://api.github.com/repos/ga4gh/dockstore", "Date": "2015-10-28T19:32:51Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(container.getGitUrl())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(m.find())) { throw new javax.ws.rs.WebApplicationException(org.apache.http.HttpStatus.SC_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6585/buggy-version/dockstore-webservice.src.main.java.io.dockstore.webservice.resources.DockerRepoResource.java", "BodyUseAPI": [], "Fixed commit": "2700e31cb41a248b6a2b3ef142369155fb66db5b", "Url": "https://api.github.com/repos/ga4gh/dockstore", "Date": "2015-10-28T19:32:51Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.bukkit.Bukkit.getServer().getPlayer(playerName)) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3696/buggy-version/SaneEconomyCore.src.main.java.org.appledash.saneeconomy.vault.EconomySaneEconomy.java", "BodyUseAPI": [], "Fixed commit": "948e617d4e7222a1792a3d9475d2f9bf1a2888ba", "Url": "https://api.github.com/repos/AppleDash/SaneEconomy", "Date": "2016-07-18T02:53:46Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((width) % 2) == 0) || (((height) % 2) == 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/9033/buggy-version/MapGenerator.src.main.java.net.jmecn.map.creator.DungeonHauberk.java", "BodyUseAPI": [], "Fixed commit": "d5c620ac3b36e3831b95c8cc616ff74f274550c9", "Url": "https://api.github.com/repos/jmecn/MapGenerator", "Date": "2016-12-22T12:48:52Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.FilterInputStream.read(byte[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bytesRead <= 0) return bytesRead;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/882/buggy-version/code.java.src.ext.java.io.ProgressInputStream.java", "BodyUseAPI": [], "Fixed commit": "d3168bd502954ba93aa5d590f686759d96d05924", "Url": "https://api.github.com/repos/java-extensions/ext", "Date": "2014-07-01T07:02:46Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tmpTime != 0) { this.startTime.add(new java.util.Date(tmpTime)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2087/buggy-version/app.src.main.java.com.example.BehaveMonitor.Session.java", "BodyUseAPI": [], "Fixed commit": "d1e4dd75cc84009b58b38ab7cdb081b3edfdb38d", "Url": "https://api.github.com/repos/bjdx/BehaveMonitor", "Date": "2015-03-15T19:28:30Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.me.mygdxgame.Algorithm.update()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!bool) algo.solve();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5659/buggy-version/aMaze.src.com.me.mygdxgame.MyGdxGame.java", "BodyUseAPI": [], "Fixed commit": "81d55223df563d249dcefb5a2f8464746cc4632d", "Url": "https://api.github.com/repos/Lichard/aMaze", "Date": "2013-04-28T22:35:14Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextInt()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((num % 2) == 0) { for (int i = 1; i < num; i++) java.lang.System.out.print(\"*\"); java.lang.System.out.println(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7678/buggy-version/week-02.day-02.HelloWorld.src.DrawDiamond.java", "BodyUseAPI": [], "Fixed commit": "1933bf10cac885b58f1a0c224009532e198abd7d", "Url": "https://api.github.com/repos/green-fox-academy/Garlyle", "Date": "2017-03-22T07:03:59Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mainapp.support_v11) { menu_about.setShowAsAction(((android.view.MenuItem.SHOW_AS_ACTION_IF_ROOM) | (android.view.MenuItem.SHOW_AS_ACTION_WITH_TEXT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8190/buggy-version/src.au.com.infiniterecursion.vidiom.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "812e99654fc10cb8d047b4bf58433dc7bf37911e", "Url": "https://api.github.com/repos/andynicholson/Vidiom", "Date": "2012-07-31T10:52:44Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mainapp.support_v11) { menu_library.setShowAsAction(((android.view.MenuItem.SHOW_AS_ACTION_ALWAYS) | (android.view.MenuItem.SHOW_AS_ACTION_WITH_TEXT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8190/buggy-version/src.au.com.infiniterecursion.vidiom.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "812e99654fc10cb8d047b4bf58433dc7bf37911e", "Url": "https://api.github.com/repos/andynicholson/Vidiom", "Date": "2012-07-31T10:52:44Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mainapp.support_v11) { menu_stop.setShowAsAction(((android.view.MenuItem.SHOW_AS_ACTION_ALWAYS) | (android.view.MenuItem.SHOW_AS_ACTION_WITH_TEXT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8190/buggy-version/src.au.com.infiniterecursion.vidiom.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "812e99654fc10cb8d047b4bf58433dc7bf37911e", "Url": "https://api.github.com/repos/andynicholson/Vidiom", "Date": "2012-07-31T10:52:44Z"},
{"Line": "=>525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mainapp.support_v11) { menu_start.setShowAsAction(((android.view.MenuItem.SHOW_AS_ACTION_ALWAYS) | (android.view.MenuItem.SHOW_AS_ACTION_WITH_TEXT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8190/buggy-version/src.au.com.infiniterecursion.vidiom.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "812e99654fc10cb8d047b4bf58433dc7bf37911e", "Url": "https://api.github.com/repos/andynicholson/Vidiom", "Date": "2012-07-31T10:52:44Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mainapp.support_v11) { menu_prefs.setShowAsAction(((android.view.MenuItem.SHOW_AS_ACTION_IF_ROOM) | (android.view.MenuItem.SHOW_AS_ACTION_WITH_TEXT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8190/buggy-version/src.au.com.infiniterecursion.vidiom.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "812e99654fc10cb8d047b4bf58433dc7bf37911e", "Url": "https://api.github.com/repos/andynicholson/Vidiom", "Date": "2012-07-31T10:52:44Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d == d_old) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5748/buggy-version/Classification.src.FeatureSets.FeatureSetAllCombinations.java", "BodyUseAPI": [], "Fixed commit": "5a0f0eddc78c4c39e7e88fcc2ce962f249f4177d", "Url": "https://api.github.com/repos/catchsudheera/sanwada", "Date": "2014-11-11T10:19:24Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getApplicationComponent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (component == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7908/buggy-version/app.src.main.java.com.google.android.stardroid.search.SearchTermsProvider.java", "BodyUseAPI": [], "Fixed commit": "44da1ad8c6d63ae44d59e87fae920e73092427e3", "Url": "https://api.github.com/repos/tricao/stardroid", "Date": "2016-04-19T03:52:39Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) { calendar.add(java.util.Calendar.DAY_OF_YEAR, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4738/buggy-version/app.src.main.java.com.android.sunshine.app.weather.WeatherRepository.java", "BodyUseAPI": [], "Fixed commit": "4db467ce7c60c83533ea6662b164f129a76f6dbd", "Url": "https://api.github.com/repos/DavidRG13/Sunshine", "Date": "2015-07-07T20:55:08Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(entity.exists())) || (!(entity.isActive()))) { return set; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1129/buggy-version/src.main.java.org.terasology.economy.handler.MultiInvStorageHandler.java", "BodyUseAPI": [], "Fixed commit": "e3a94881a0cee89c726c4ea5b8004ee2e772ee77", "Url": "https://api.github.com/repos/Terasology/Economy", "Date": "2016-08-21T22:31:50Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.attr(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(src))) post.Html = post.Html.replace(src, (\"http://src.sencha.io/303/303/\" + src));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6565/buggy-version/LepraDroid.src.com.home.lepradroid.tasks.GetPostsTask.java", "BodyUseAPI": ["post.Html.replace(java.lang.String,java.lang.String)"], "Fixed commit": "6d2136a935b12e4f3ef53c424cc82b383dd1c95c", "Url": "https://api.github.com/repos/Yarikx/LepraDroid", "Date": "2012-03-17T19:33:01Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.dot.its.jpo.ode.wrapper.AbstractSubPubTransformer<K, V1, V2>.transform(V1)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null != toBePublished) { producer.send(outputTopic, record.key(), toBePublished); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6145/buggy-version/jpo-ode-core.src.main.java.us.dot.its.jpo.ode.wrapper.AbstractSubPubTransformer.java", "BodyUseAPI": ["us.dot.its.jpo.ode.wrapper.MessageProducer<K, V2>.send(java.lang.String,record.key(),V2)"], "Fixed commit": "65f2f8f6c6ca87154a7d9833237f8a85391a58f6", "Url": "https://api.github.com/repos/usdot-jpo-ode/jpo-ode", "Date": "2017-07-18T14:03:40Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (c != '\\n') { fastx_mutate_tools.FastxMutateTools.out_fastx.write(fastx_mutate_tools.FastxMutateTools.mutate(c, chr, pos)); pos++; }else { fastx_mutate_tools.FastxMutateTools.out_fastx.write('\\n'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5200/buggy-version/src.fastx_mutate_tools.FastxMutateTools.java", "BodyUseAPI": ["java.io.BufferedWriter.write(char)", "fastx_mutate_tools.FastxMutateTools.mutate(char,java.lang.String,long)"], "Fixed commit": "e95a1d612f893ede568e6a430ff9038121faded4", "Url": "https://api.github.com/repos/nicolaprezza/fastx-mutate-tools", "Date": "2015-02-17T18:39:54Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((grid.getGameObject(ninjas.get(i).getX(), ninjas.get(i).getY())) == null)) { grid.move(ninjas.get(i).getX(), ninjas.get(i).getY(), diceX, diceY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4092/buggy-version/SpyGame.src.edu.cpp.cs.cs141.final_proj.GameEngine.java", "BodyUseAPI": ["java.util.ArrayList<edu.cpp.cs.cs141.final_proj.Ninja>.get(int)", "edu.cpp.cs.cs141.final_proj.Grid.move(ninjas.get(i).getX(),ninjas.get(i).getY(),int,int)", "ninjas.get(i).getX()", "ninjas.get(i).getY()", "java.util.ArrayList<edu.cpp.cs.cs141.final_proj.Ninja>.get(int)"], "Fixed commit": "f37f8bdd9db45cc2e36953e797c7b4c2fb7b86d0", "Url": "https://api.github.com/repos/Jester565/SpyNinjaGame", "Date": "2016-11-22T23:50:23Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"null\".equals(value)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/628/buggy-version/src.main.java.de.cimt.talendcomp.json.streaming.JsonStreamParser.java", "BodyUseAPI": [], "Fixed commit": "b8ad0952f4c0eb5c110f7c5b05d26cdeae65cfee", "Url": "https://api.github.com/repos/jlolling/talendcomp_tJSONDoc", "Date": "2016-09-13T15:43:53Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (goalReached) localQuickeningFactor = us.rescyou.crumble.Game.QUICKENING_FACTOR;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7866/buggy-version/src.us.rescyou.crumble.state.RunningState.java", "BodyUseAPI": [], "Fixed commit": "aed04720425b9661a5c86062e3316157bb0d746a", "Url": "https://api.github.com/repos/jasonLJ/Crumble", "Date": "2014-12-29T07:58:43Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((name == null) || (\"\".equals(name))) || (\"null\".equals(name))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2271/buggy-version/src.com.htb.cnk.MenuActivity.java", "BodyUseAPI": [], "Fixed commit": "f55c4011a4721ba0d8623d4280a7a048fe817120", "Url": "https://api.github.com/repos/JoshTsang/cnk-orderPad", "Date": "2012-08-16T06:54:49Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((post.title) == null) { title = \"[null]\"; }else { title = org.apache.commons.lang3.StringEscapeUtils.unescapeHtml4(post.title.replace('\\n', ' ')).trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1952/buggy-version/src.main.java.org.quantumbadger.redreader.reddit.prepared.RedditPreparedPost.java", "BodyUseAPI": [], "Fixed commit": "ebe4faa89d8fc9c2005d8be101c08462b2ceec55", "Url": "https://api.github.com/repos/QuantumBadger/RedReader", "Date": "2013-04-06T14:10:59Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (UpdateSnapshot == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/9066/buggy-version/Launcher.src.main.java.core.launcher.pebble.StartupSettings.java", "BodyUseAPI": [], "Fixed commit": "2ead5fbfc13ec4b3d4a0eb63c72a5828c0a1bfc3", "Url": "https://api.github.com/repos/DustOfPebble/PebbleServices", "Date": "2017-05-20T18:23:41Z"},
{"Line": "=>799", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isTopicAdmin(nd.getNodePK().getId())) { return getKmeliaBm().updateTopic(nd, alertType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4976/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.control.KmeliaSessionController.java", "BodyUseAPI": ["com.stratelia.webactiv.kmelia.control.ejb.KmeliaBm.updateTopic(com.stratelia.webactiv.util.node.model.NodeDetail,java.lang.String)"], "Fixed commit": "21c0af573910de914ec6d324266172ee1bdb7bf7", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Components", "Date": "2015-07-20T13:14:07Z"},
{"Line": "=>1517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.silverpeas.servlet.HttpRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (kmelia.isTopicAdmin(nodeId)) { kmelia.updateTopicRole(role, nodeId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4976/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": ["com.stratelia.webactiv.kmelia.control.KmeliaSessionController.updateTopicRole(java.lang.String,java.lang.String)"], "Fixed commit": "21c0af573910de914ec6d324266172ee1bdb7bf7", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Components", "Date": "2015-07-20T13:14:07Z"},
{"Line": "=>1475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(kmelia.isTopicAdmin(id))) { return \"/admin/jsp/accessForbidden.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4976/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": [], "Fixed commit": "21c0af573910de914ec6d324266172ee1bdb7bf7", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Components", "Date": "2015-07-20T13:14:07Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.igeek.service.impl.QualityCollectionMapper.getQualityCollection(java.lang.String,java.lang.Integer,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (java.util.Objects.isNull(qualityCollection)) { productCollectVo.setCount(0); }else { productCollectVo.setCount(qualityCollection.getCount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7109/buggy-version/src.main.java.org.igeek.service.impl.IQualityCollectServiceImpl.java", "BodyUseAPI": ["org.igeek.service.impl.QualityCollection.getCount()", "org.igeek.service.impl.ProductCollectVo.setCount(qualityCollection.getCount())"], "Fixed commit": "97fbbdfcbfd0c95f76c6776a1834f6427bbbedc3", "Url": "https://api.github.com/repos/gygesM/yellowChicken", "Date": "2017-07-09T09:19:35Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (showActivity) { m_command = 1000; }else { m_command = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/813/buggy-version/cat-core.src.main.java.com.dianping.cat.config.app.QueryEntity.java", "BodyUseAPI": [], "Fixed commit": "b50cf065e3a529656ee17f96d2c87814db94d22b", "Url": "https://api.github.com/repos/leonindy/cat", "Date": "2014-11-03T09:09:52Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((info.values[3]) == 0) && ((info.values[5]) != 0)) { info.values[3] = 256; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/712/buggy-version/app.src.main.java.org.helllabs.android.xmp.player.PlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "df29d32c15f26bf342259e9f90c15859dafe516f", "Url": "https://api.github.com/repos/JakeCracknell/xmp-android-fork", "Date": "2016-01-26T21:12:47Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNotConnected()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1410/buggy-version/src.main.java.chat.ChatWSImpl.java", "BodyUseAPI": [], "Fixed commit": "911965cb78c17fa8e1bdda7c6cf6506ffd41b9aa", "Url": "https://api.github.com/repos/Vanik888/javaServerForTests", "Date": "2014-04-05T23:06:07Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentOffset) > 0) { (currentOffset)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5388/buggy-version/bigdime-data-handlers.src.main.java.io.bigdime.handler.kafka.KafkaReaderHandler.java", "BodyUseAPI": [], "Fixed commit": "e71eea3bfcbb13425288a202ec1b1189d88baa1d", "Url": "https://api.github.com/repos/sandeepreddymurthy1/bigdime-1", "Date": "2016-04-25T06:12:12Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parentParts.length) >= (oidParts.length)) { return false; }else { for (int i = 0; i < (parentParts.length); i++) { if (!(parentParts[i].equals(oidParts[i]))) { return false; } } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8365/buggy-version/src.java.com.puppetlabs.ssl_utils.ExtensionsUtils.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "dcbaf8f9560eab4de4587dfdf3b376fc7ccf914d", "Url": "https://api.github.com/repos/dankreek/jvm-ssl-utils", "Date": "2015-01-27T00:26:48Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (register.hasSale()) { showPopup(v); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8918/buggy-version/src.com.refresh.pos.ui.sale.SaleFragment.java", "BodyUseAPI": [], "Fixed commit": "b80d019575ff95a83946f65f4e24cbf0c46eb596", "Url": "https://api.github.com/repos/mapfap/pos", "Date": "2013-12-10T18:11:28Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (strtext.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8918/buggy-version/src.com.refresh.pos.ui.sale.PaymentFragmentDialog.java", "BodyUseAPI": [], "Fixed commit": "b80d019575ff95a83946f65f4e24cbf0c46eb596", "Url": "https://api.github.com/repos/mapfap/pos", "Date": "2013-12-10T18:11:28Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (searchingAddress) { cancelSearch = true; getMapActivity().getMyApplication().runInUIThread(new java.lang.Runnable() { @java.lang.Override public void run() { acquireStreetName(); } }, 50); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/344/buggy-version/OsmAnd.src.net.osmand.plus.mapcontextmenu.MenuTitleController.java", "BodyUseAPI": [], "Fixed commit": "45b7f61fe8fd434e4d4b7bde5be706c5cd26499a", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2015-12-27T07:51:20Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.servoy.j2db.server.ngclient.NGClientWindow.getForm(form.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((formUI.getParentContainer()) == null) { java.lang.String currentWindowName = com.servoy.j2db.server.ngclient.NGClientWindow.getCurrentWindow().getName(); if (currentWindowName == null) { currentWindowName = websocketSession.getClient().getRuntimeWindowManager().getMainApplicationWindow().getName(); } formUI.setParentWindowName(currentWindowName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3665/buggy-version/servoy_ngclient.src.com.servoy.j2db.server.ngclient.NGClientWindow.java", "BodyUseAPI": ["com.servoy.j2db.server.ngclient.IWebFormUI.setParentWindowName(java.lang.String)"], "Fixed commit": "eae59e6c9be0c55e653c65d8020815aa408fac2d", "Url": "https://api.github.com/repos/Servoy/servoy-client", "Date": "2015-10-02T13:36:42Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canvas == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2555/buggy-version/src.com.fama.doom.MainGamePanel.java", "BodyUseAPI": [], "Fixed commit": "61177dd77f3cca7d64f05d63542da61a1f3e850b", "Url": "https://api.github.com/repos/mariob93/Doom", "Date": "2014-02-27T23:18:51Z"},
{"Line": "=>2817", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jbundle.thin.base.db.FieldList.getTask()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (task == null) { if ((this.getTable()) != null) if ((this.getTable().getDatabase()) != null) if ((this.getTable().getDatabase().getDatabaseOwner()) != null) if ((((org.jbundle.base.util.Environment) (this.getTable().getDatabase().getDatabaseOwner().getEnvironment())).getDefaultApplication()) != null) task = ((org.jbundle.base.util.BaseApplication) (((org.jbundle.base.util.Environment) (this.getTable().getDatabase().getDatabaseOwner().getEnvironment())).getDefaultApplication())).getMainTask(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1537/buggy-version/base.base.src.main.java.org.jbundle.base.db.Record.java", "BodyUseAPI": [], "Fixed commit": "b4e27ad741f4df6c2d27c99577e65ab66726f861", "Url": "https://api.github.com/repos/jbundle/jbundle", "Date": "2013-01-04T21:11:53Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((omnikryptec.main.OmniKryptecEngine.instance().getState()) != ((OmniKryptecEngine.State.Running) || (OmniKryptecEngine.State.Starting))) { omnikryptec.logger.Logger.log(\"Engine is not running\", LogLevel.WARNING); }else { omnikryptec.main.OmniKryptecEngine.instance().requestClose(); omnikryptec.logger.Logger.log(\"Engine was successfully exited\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2716/buggy-version/src.omnikryptec.logger.Commands.java", "BodyUseAPI": [], "Fixed commit": "41c6623be193b09c8217df3da0294aa9f4f70234", "Url": "https://api.github.com/repos/OmniKryptec/OmniKryptec-Engine", "Date": "2017-05-22T19:21:42Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.salesforce.androidsdk.smartstore.app.UpgradeManagerWithSmartStore.getInstalledSmartStoreVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(installedVersion)) { installedVersion = getInstalledSmartStoreVersion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2313/buggy-version/hybrid.SmartStore.src.com.salesforce.androidsdk.smartstore.app.UpgradeManagerWithSmartStore.java", "BodyUseAPI": [], "Fixed commit": "cd19ec572d2742fbcc46b41f050a413912ced632", "Url": "https://api.github.com/repos/bhariharan/SalesforceMobileSDK-Android", "Date": "2014-03-20T23:57:33Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.salesforce.androidsdk.app.UpgradeManager.getInstalledAccMgrVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(installedVersion)) { installedVersion = getInstalledAccMgrVersion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2313/buggy-version/native.SalesforceSDK.src.com.salesforce.androidsdk.app.UpgradeManager.java", "BodyUseAPI": [], "Fixed commit": "cd19ec572d2742fbcc46b41f050a413912ced632", "Url": "https://api.github.com/repos/bhariharan/SalesforceMobileSDK-Android", "Date": "2014-03-20T23:57:33Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getType()) == (UserDefinedTask.Type.GENERAL)) { values.put(Events.EVENT_COLOR, ru.spbau.mit.atum.EventsWorker.PURPLE); }else if ((task.getType()) == (UserDefinedTask.Type.FIXED)) { values.put(Events.EVENT_COLOR, ru.spbau.mit.atum.EventsWorker.BLUE); }else { values.put(Events.EVENT_COLOR, ru.spbau.mit.atum.EventsWorker.RED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6307/buggy-version/app.src.main.java.ru.spbau.mit.atum.EventsWorker.java", "BodyUseAPI": ["ru.spbau.mit.atum.UserDefinedTask.getType()"], "Fixed commit": "b6f0e4b4fd4d9ee2cc3a15e3a8d77510e0145cb3", "Url": "https://api.github.com/repos/Ivan-Veselov/atum", "Date": "2016-12-21T17:54:52Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getPlace()) != null) { values.put(Events.EVENT_LOCATION, task.getPlace().getAddress().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6307/buggy-version/app.src.main.java.ru.spbau.mit.atum.EventsWorker.java", "BodyUseAPI": ["task.getPlace().getAddress()", "task.getPlace().getAddress().toString()", "android.content.ContentValues.put(Events.EVENT_LOCATION,task.getPlace().getAddress().toString())", "ru.spbau.mit.atum.UserDefinedTask.getPlace()"], "Fixed commit": "b6f0e4b4fd4d9ee2cc3a15e3a8d77510e0145cb3", "Url": "https://api.github.com/repos/Ivan-Veselov/atum", "Date": "2016-12-21T17:54:52Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (age < 18) { java.lang.System.out.println(\"A person under the age of 18 years shall not participate in the game. \\n Exiting the game.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6409/buggy-version/Main.java", "BodyUseAPI": [], "Fixed commit": "9ae5059d0ee837282c6c5628f22bcca10d0de74b", "Url": "https://api.github.com/repos/rponna/CrownAndAnchorGame", "Date": "2017-10-13T00:27:08Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultClusterId) == (-1)) defaultClusterId = iId;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5096/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OClassImpl.java", "BodyUseAPI": [], "Fixed commit": "2c244a43ef224c0912480869ec7a7b1eab5c71e0", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-11-09T15:23:05Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultClusterId) == iId) defaultClusterId = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5096/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OClassImpl.java", "BodyUseAPI": [], "Fixed commit": "2c244a43ef224c0912480869ec7a7b1eab5c71e0", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-11-09T15:23:05Z"},
{"Line": "=>930", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((isJavaStyle()) && (i > 1)) && (headerStack.get(i).equals(ASResource.AS_THROWS))) && (headerStack.get((i - 1)).equals(ASResource.AS_STATIC))) { tabCount--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5536/buggy-version/src.main.java.com.github.abrarsyed.jastyle.ASBeautifier.java", "BodyUseAPI": [], "Fixed commit": "6620d87b57384800bdb129fdbf44fc02eb730524", "Url": "https://api.github.com/repos/AbrarSyed/jastyle", "Date": "2013-10-02T06:56:21Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["chessgame.ChessBoard.getKing(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (king != null) { java.awt.Point p = king.getPoint(); for (java.awt.Point move : playerMoves((1 - player))) { if (move.equals(p)) { return true; } } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5383/buggy-version/Chessgame.src.chessgame.GameManager.java", "BodyUseAPI": ["chessgame.Square.getPoint()"], "Fixed commit": "e605c3b31757a439056e53ba858fd30f3aeb3fa5", "Url": "https://api.github.com/repos/jompero/utu_chess", "Date": "2017-03-09T13:29:57Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(processFolder(folderPath, filePattern))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4645/buggy-version/src.org.giswater.task.ParentSchemaTask.java", "BodyUseAPI": [], "Fixed commit": "79248d45c27b877f95a3d076103d38d94ea29af7", "Url": "https://api.github.com/repos/Giswater/giswater", "Date": "2017-06-02T11:19:51Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.etiennelawlor.issues.fragments.IssuesFragment.NextFetchDownloadTask.parseJson(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (issues != null) { if ((issues.size()) > 0) issuesAdapter.addAll(issues); if ((issues.size()) >= (com.etiennelawlor.issues.fragments.IssuesFragment.PAGE_SIZE)) { issuesAdapter.addFooter(); }else { isLastPage = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8487/buggy-version/app.src.main.java.com.etiennelawlor.issues.fragments.IssuesFragment.java", "BodyUseAPI": ["java.util.List<com.etiennelawlor.issues.models.Issue>.size()", "java.util.List<com.etiennelawlor.issues.models.Issue>.size()", "com.etiennelawlor.issues.adapters.IssuesAdapter.addAll(java.util.List<com.etiennelawlor.issues.models.Issue>)"], "Fixed commit": "96ecfbdd49ddddc79863d29506f361759a0e7540", "Url": "https://api.github.com/repos/lawloretienne/GithubIssues", "Date": "2016-12-05T16:54:09Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.etiennelawlor.issues.fragments.IssuesFragment.FirstFetchDownloadTask.parseJson(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (issues != null) { if ((issues.size()) > 0) issuesAdapter.addAll(issues); if ((issues.size()) >= (com.etiennelawlor.issues.fragments.IssuesFragment.PAGE_SIZE)) { issuesAdapter.addFooter(); }else { isLastPage = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8487/buggy-version/app.src.main.java.com.etiennelawlor.issues.fragments.IssuesFragment.java", "BodyUseAPI": ["java.util.List<com.etiennelawlor.issues.models.Issue>.size()", "java.util.List<com.etiennelawlor.issues.models.Issue>.size()", "com.etiennelawlor.issues.adapters.IssuesAdapter.addAll(java.util.List<com.etiennelawlor.issues.models.Issue>)"], "Fixed commit": "96ecfbdd49ddddc79863d29506f361759a0e7540", "Url": "https://api.github.com/repos/lawloretienne/GithubIssues", "Date": "2016-12-05T16:54:09Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time <= 0) throw new java.lang.IllegalArgumentException(\"The time provided is negative.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1190/buggy-version/app.src.main.java.org.jorge.lbudget.utils.LBudgetTimeUtils.java", "BodyUseAPI": [], "Fixed commit": "53bef66eb138b4012770ef2a876280a3dc9e13ba", "Url": "https://api.github.com/repos/Stoyicker/LBudget", "Date": "2014-09-03T13:53:57Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inputHeight > 10) || (inputWidth > 10)) { javax.swing.JOptionPane.showMessageDialog(null, \"The Grid size is too big , maximum 10 x 10 \"); }else { removeTiles(); setupWorld(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/390/buggy-version/animalSimulation.src.animalsimulation.mainFrame.java", "BodyUseAPI": [], "Fixed commit": "c8f8a5daa6e0560e60138f3f90177117ea8bc5b9", "Url": "https://api.github.com/repos/HiradEmami/AnimalMAS", "Date": "2017-09-12T15:36:27Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mBook.getCurrentPage()) != 0) { avgPages = (mBook.getCurrentPage()) / diffDayInt; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3587/buggy-version/app.src.main.java.epicodus.booktracker.ui.BookDetailFragment.java", "BodyUseAPI": ["epicodus.booktracker.model.Book.getCurrentPage()"], "Fixed commit": "d6840936b26b60edf66e408775fe0e8c93c4bb41", "Url": "https://api.github.com/repos/kderrick/android_bookTracker", "Date": "2016-05-19T16:03:30Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gameSolution.isFinished())) { throw new java.lang.IllegalStateException(\"Changing of finished game is not enabled\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2929/buggy-version/src.main.java.org.gatein.portal.examples.games.sudoku.service.GameSolutionRestFacade.java", "BodyUseAPI": [], "Fixed commit": "2dcbe1ec5eb5e1eb9ece58f794dba792c7369713", "Url": "https://api.github.com/repos/dzolo/sudoku_portlet", "Date": "2012-04-01T21:15:12Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParent()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5286/buggy-version/src.demo.Enemy.java", "BodyUseAPI": [], "Fixed commit": "030750243fca27e43d833a673a3de6b982132017", "Url": "https://api.github.com/repos/matanui159/Steelplate-Engine", "Date": "2015-11-15T08:20:47Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParent()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5286/buggy-version/src.demo.PowerUp.java", "BodyUseAPI": [], "Fixed commit": "030750243fca27e43d833a673a3de6b982132017", "Url": "https://api.github.com/repos/matanui159/Steelplate-Engine", "Date": "2015-11-15T08:20:47Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((req.getParameter(\"ajax\")) != null) { java.lang.String json = new com.google.gson.Gson().toJson(user); resp.setContentType(\"application/json\"); resp.setCharacterEncoding(\"UTF-8\"); resp.getWriter().print(json); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1604/buggy-version/src.main.java.controller.UsersControl.java", "BodyUseAPI": [], "Fixed commit": "4933c95669c70bec2bff856218413502a3127870", "Url": "https://api.github.com/repos/ShiroNatsu22/ProjectLudum", "Date": "2017-09-14T00:49:02Z"},
{"Line": "=>1282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lines.size()) > 1) { final java.util.regex.Pattern WHITESPACE = java.util.regex.Pattern.compile(\"\\\\s+\"); final int maxDetectionLines = java.lang.Math.min(10, lines.size()); java.lang.String folderPrefix = \"\"; for (int i = 0; i < maxDetectionLines; i++) { java.lang.String tLine = WHITESPACE.matcher(lines.get(i)).replaceAll(\" \").trim(); if (tLine.startsWith(\"0 !LDRAW_ORG\")) { java.lang.String typeSuffix = \"\"; java.lang.String path = newFile.getParent(); if ((path.endsWith(((java.io.File.separator) + \"S\"))) || (path.endsWith(((java.io.File.separator) + \"s\")))) { typeSuffix = \"Unofficial_Subpart\"; folderPrefix = \"S\\\\\"; }else if ((path.endsWith(((((java.io.File.separator) + \"P\") + (java.io.File.separator)) + \"48\"))) || (path.endsWith(((((java.io.File.separator) + \"p\") + (java.io.File.separator)) + \"48\")))) { typeSuffix = \"Unofficial_48_Primitive\"; folderPrefix = \"P\\\\\"; }else if ((path.endsWith(((((java.io.File.separator) + \"P\") + (java.io.File.separator)) + \"8\"))) || (path.endsWith(((((java.io.File.separator) + \"p\") + (java.io.File.separator)) + \"8\")))) { typeSuffix = \"Unofficial_8_Primitive\"; folderPrefix = \"P\\\\\"; }else if ((path.endsWith(((java.io.File.separator) + \"P\"))) || (path.endsWith(((java.io.File.separator) + \"p\")))) { typeSuffix = \"Unofficial_Primitive\"; folderPrefix = \"P\\\\\"; } if (!(\"\".equals(typeSuffix))) { lines.set(i, (\"0 !LDRAW_ORG \" + typeSuffix)); } break; } } for (int i = 0; i < maxDetectionLines; i++) { java.lang.String tLine = WHITESPACE.matcher(lines.get(i)).replaceAll(\" \").trim(); if (tLine.startsWith(\"0 Name:\")) { lines.set(i, ((\"0 Name: \" + folderPrefix) + (newFile.getName()))); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5480/buggy-version/src.org.nschmidt.ldparteditor.data.DatFile.java", "BodyUseAPI": ["java.util.regex.Matcher.replaceAll(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.set(int,java.lang.String)", "java.lang.String.trim()", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.regex.Pattern.matcher(java.lang.String)", "java.util.ArrayList<java.lang.String>.set(int,java.lang.String)", "java.util.regex.Pattern.matcher(java.lang.String)", "java.lang.String.trim()", "java.lang.Math.min(int,int)", "java.util.regex.Matcher.replaceAll(java.lang.String)"], "Fixed commit": "b9613c487dcd5f60d0dc598c4966e58adf7ff3b8", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-03-13T12:24:05Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dianping.cat.consumer.productline.ProductLineConfigManager.queryProductLine(report.getProduct())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((productline != null) && (productline.getMetricDashboard())) { boolean result = m_configManager.insertIfNotExist(domain, com.dianping.cat.consumer.metric.MetricAnalyzer.METRIC, metricName, config); if (!result) { m_logger.error(java.lang.String.format(\"error when insert metric config info, domain %s, metricName %s\", domain, metricName)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2353/buggy-version/cat-consumer.src.main.java.com.dianping.cat.consumer.metric.MetricAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "b6a22fd98a728cacad51b66c58be163be682345a", "Url": "https://api.github.com/repos/leusonmario/cat", "Date": "2014-12-29T13:29:20Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selectedKey.equals(\"end\")) s = init.endServ; else s = init.serviceMap.get(selectedKey);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5582/buggy-version/src.wsc.WSCMutationPipeline.java", "BodyUseAPI": ["init.serviceMap.get(java.lang.String)"], "Fixed commit": "fa0f4ea6b2f2d1991942b5bb391a30be5a806a1c", "Url": "https://api.github.com/repos/silvalex/MultiObjectiveEncapsulatedFragmentedTree", "Date": "2017-03-16T08:43:15Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasFocus) { imm.showSoftInput(newTask, InputMethodManager.SHOW_IMPLICIT); getActivity().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE); }else { imm.showSoftInput(newTask, InputMethodManager.HIDE_IMPLICIT_ONLY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7727/buggy-version/src.de.azapps.mirakel.main_activity.TasksFragment.java", "BodyUseAPI": [], "Fixed commit": "9a4a6c960fb57f661ba44b1091a15e28d4ed95bc", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-10-26T16:56:16Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getActivity().getSystemService(Context.INPUT_METHOD_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(imm.isAcceptingText())) { de.azapps.mirakel.helper.Log.w(de.azapps.mirakel.main_activity.TasksFragment.TAG, \"Software Keyboard was not shown\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7727/buggy-version/src.de.azapps.mirakel.main_activity.TasksFragment.java", "BodyUseAPI": [], "Fixed commit": "9a4a6c960fb57f661ba44b1091a15e28d4ed95bc", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-10-26T16:56:16Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(udiThread.getParentProcess().isWaitingForStart())) { this.pc = java.lang.Long.toHexString(udiThread.getPC()); }else { this.pc = java.lang.Long.toHexString(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6977/buggy-version/server.src.main.java.net.udidb.server.api.models.ThreadModel.java", "BodyUseAPI": [], "Fixed commit": "564f37f0b0f87e200ae10aae7b05a181cf5f2afb", "Url": "https://api.github.com/repos/mcnulty/udidb", "Date": "2015-12-21T03:24:17Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.talend.core.GlobalServiceRegister.getDefault().isServiceRegistered(org.talend.core.services.IGITProviderService.class)) { gitProviderService = ((org.talend.core.services.IGITProviderService) (org.talend.core.GlobalServiceRegister.getDefault().getService(org.talend.core.services.IGITProviderService.class))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7653/buggy-version/main.plugins.org.talend.mdm.repository.src.main.java.org.talend.mdm.repository.ui.navigator.MDMRepositoryLabelProvider.java", "BodyUseAPI": ["org.talend.core.GlobalServiceRegister.getDefault().getService(java.lang.Class)"], "Fixed commit": "811f61347aed017ff35573ac7d86dfd2b92d4761", "Url": "https://api.github.com/repos/Talend/tmdm-studio-se", "Date": "2016-07-26T09:55:10Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.talend.core.GlobalServiceRegister.getDefault().isServiceRegistered(org.talend.mdm.repository.core.service.IMDMSVNProviderService.class)) { svnProviderService = ((org.talend.mdm.repository.core.service.IMDMSVNProviderService) (org.talend.core.GlobalServiceRegister.getDefault().getService(org.talend.mdm.repository.core.service.IMDMSVNProviderService.class))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7653/buggy-version/main.plugins.org.talend.mdm.repository.src.main.java.org.talend.mdm.repository.ui.navigator.MDMRepositoryLabelProvider.java", "BodyUseAPI": ["org.talend.core.GlobalServiceRegister.getDefault().getService(java.lang.Class)"], "Fixed commit": "811f61347aed017ff35573ac7d86dfd2b92d4761", "Url": "https://api.github.com/repos/Talend/tmdm-studio-se", "Date": "2016-07-26T09:55:10Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.navalkishoreb.domain.usecase.UseCase<edu.navalkishoreb.domain.model.Puzzle>.execute()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (response.isSuccessful()) { for (edu.navalkishoreb.domain.model.Image image : response.getData().getImageGrid()) { com.squareup.picasso.Picasso.with(getContext()).load(image.getUrl()).priority(Picasso.Priority.HIGH).fetch(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5308/buggy-version/presentation.src.main.java.edu.navalkishoreb.picscramble.play.FetchImages.java", "BodyUseAPI": ["edu.navalkishoreb.domain.model.Response<edu.navalkishoreb.domain.model.Puzzle>.getData()", "response.getData().getImageGrid()"], "Fixed commit": "8ab3f7ff941fef02bb5fb2157a3925e90ece6099", "Url": "https://api.github.com/repos/navalkishoreb/PicScrabble", "Date": "2016-08-15T06:20:26Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud2bubble.ptsense.activity.Sensing.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (i != null) { int tabSelector = i.getIntExtra(\"tab\", 0); actionBar.setSelectedNavigationItem(tabSelector); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7764/buggy-version/PTSense.src.com.cloud2bubble.ptsense.activity.Sensing.java", "BodyUseAPI": ["android.content.Intent.getIntExtra(java.lang.String,int)"], "Fixed commit": "e157703862cebf2e681d5b07ffa6adf360ec415d", "Url": "https://api.github.com/repos/joaovieira/PTSense", "Date": "2012-05-24T14:06:09Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mService) != null) { unbindService(mServiceConn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8874/buggy-version/app.src.main.java.com.etiennelawlor.quickreturn.activities.QuickReturnBaseActivity.java", "BodyUseAPI": [], "Fixed commit": "7e287d4e2bf532afc049c9035420c2dc5ee31498", "Url": "https://api.github.com/repos/lawloretienne/QuickReturn", "Date": "2014-07-01T08:46:44Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMysql) mysqlStorage.removePortaledPlayer(player.getUniqueId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3763/buggy-version/src.com.untamedears.PrisonPearl.managers.PrisonPortaledPlayerManager.java", "BodyUseAPI": [], "Fixed commit": "7b03ea0c42153a7e9f00ec76436df0933f6befd0", "Url": "https://api.github.com/repos/BlackXnt/PrisonPearl", "Date": "2015-05-10T00:52:49Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMysql) mysqlStorage.removePortaledPlayer(uuid);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3763/buggy-version/src.com.untamedears.PrisonPearl.managers.PrisonPortaledPlayerManager.java", "BodyUseAPI": [], "Fixed commit": "7b03ea0c42153a7e9f00ec76436df0933f6befd0", "Url": "https://api.github.com/repos/BlackXnt/PrisonPearl", "Date": "2015-05-10T00:52:49Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMysql) mysqlStorage.removePortaledPlayer(player.getUniqueId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3763/buggy-version/src.com.untamedears.PrisonPearl.managers.PrisonPortaledPlayerManager.java", "BodyUseAPI": [], "Fixed commit": "7b03ea0c42153a7e9f00ec76436df0933f6befd0", "Url": "https://api.github.com/repos/BlackXnt/PrisonPearl", "Date": "2015-05-10T00:52:49Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((localeProvider) != null) locales = localeProvider.getAvailableLocales();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6293/buggy-version/src.org.ironrhino.common.action.LocaleAction.java", "BodyUseAPI": [], "Fixed commit": "fb44eeb9abc28d1f52e71e8d5cbfa77eef62f790", "Url": "https://api.github.com/repos/ironrhino/ironrhino", "Date": "2016-11-14T05:22:01Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.github.dfa.diaspora_android.BuildConfig.IS_TEST_BUILD) { navheaderImage.setImageResource(R.drawable.ic_launcher_test); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8422/buggy-version/app.src.main.java.com.github.dfa.diaspora_android.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1824cb58d24f5a25e588a2ea1a40493f688fb628", "Url": "https://api.github.com/repos/gsantner/dandelion", "Date": "2017-03-19T19:24:24Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.amlcurran.showcaseview.targets.ViewTarget.getView()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (view == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3603/buggy-version/src.com.github.amlcurran.showcaseview.targets.ViewTarget.java", "BodyUseAPI": [], "Fixed commit": "21e06d355c5a0cc56f40630504105773a90197cf", "Url": "https://api.github.com/repos/Limbika/ShowcaseView", "Date": "2014-11-04T10:02:20Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRootView) == null) { mRootView = ((android.view.ViewGroup) (inflater.inflate(R.layout.homescreen_fragment, container, false))); android.widget.Button button = ((android.widget.Button) (mRootView.findViewById(R.id.justhadonebutton))); button.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { mModel.add(new java.util.Date()); android.util.Log.e(MainActivity.USER_INTERACTION_TAG, \"added cigarette via HomeScreen\"); } }); button = ((android.widget.Button) (mRootView.findViewById(R.id.forget_lastone))); button.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { if ((mModel.size()) > 0) mModel.remove(mModel.getLast()); android.util.Log.e(MainActivity.USER_INTERACTION_TAG, \"removed cigarette via HomeScreen\"); } }); }else { android.view.ViewGroup parent = ((android.view.ViewGroup) (mRootView.getParent())); parent.removeView(mRootView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8786/buggy-version/app.src.main.java.de.unifreiburg.es.iLitIt.HomescreenFragment.java", "BodyUseAPI": [], "Fixed commit": "d7369e27401660b2f816213b4bb23dddb7272bf7", "Url": "https://api.github.com/repos/pscholl/iLitIt_Android", "Date": "2014-11-20T12:04:42Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mModel.size()) == 1) return 1.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8786/buggy-version/app.src.main.java.de.unifreiburg.es.iLitIt.StatsHelper.java", "BodyUseAPI": [], "Fixed commit": "d7369e27401660b2f816213b4bb23dddb7272bf7", "Url": "https://api.github.com/repos/pscholl/iLitIt_Android", "Date": "2014-11-20T12:04:42Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasFocus) { imageView.bringToFront(); imageView.setOffset((-(imageView.getHeight()))); imageView.setImmediatePin(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4835/buggy-version/app.src.main.java.io.plaidapp.ui.DribbbleShot.java", "BodyUseAPI": [], "Fixed commit": "8d2b52b83a78d874fecb7a73b41501b5408914f6", "Url": "https://api.github.com/repos/JediBurrell/plaid", "Date": "2016-11-17T03:42:49Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (v.equals(RewardType.Command)) next = main.java.me.ultimate.LiteQuests.Language.UNVALID_TYPE; else if (v.equals(RewardType.Item)) next = main.java.me.ultimate.LiteQuests.Language.PUT_ITEM_IN_HAND; else if (v.equals(RewardType.Teleport)) next = main.java.me.ultimate.LiteQuests.Language.LOCATION_SETUP; else next = \"ERROR!\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8340/buggy-version/src.main.java.me.ultimate.LiteQuests.Utils.QuestCreator.java", "BodyUseAPI": ["main.java.me.ultimate.LiteQuests.QuestManager.Reward.RewardType.equals(RewardType.Item)", "main.java.me.ultimate.LiteQuests.QuestManager.Reward.RewardType.equals(RewardType.Teleport)"], "Fixed commit": "deb8cf1c7b4c67f0d306a649c5b2893e94418bc5", "Url": "https://api.github.com/repos/Ultimate-N00b/LiteQuests", "Date": "2013-06-27T21:13:18Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.ut.softlab.rate.Utility.getRateData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((todayRate.get((\"USD/\" + (rate.getCurrency().getCode())))) != null) { rate.setValue(todayRate.get((\"USD/\" + (rate.getCurrency().getCode())))); rateDao.update(rate); }else { try { java.io.File supplement = new java.io.File(\"src/rate_null_rate.properties\"); java.io.FileWriter fileWriter = new java.io.FileWriter(supplement, true); java.io.BufferedWriter writer = new java.io.BufferedWriter(fileWriter); writer.write((((rate.getCurrency().getCode()) + \" null\") + \"\\n\")); writer.flush(); writer.close(); } catch (java.lang.Exception ex) { java.lang.System.out.println(ex.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/653/buggy-version/src.edu.ut.softlab.rate.component.UpdateData.java", "BodyUseAPI": ["java.io.BufferedWriter.write((((rate.getCurrency().getCode()) + \" null\") + \"\\n\"))", "java.util.Map<java.lang.String, java.lang.Double>.get((\"USD/\" + (rate.getCurrency().getCode())))", "edu.ut.softlab.rate.component.Rate.getCurrency()", "rate.getCurrency().getCode()", "edu.ut.softlab.rate.component.Rate.getCurrency()", "edu.ut.softlab.rate.component.Rate.setValue(java.lang.Double)", "rate.getCurrency().getCode()", "edu.ut.softlab.rate.dao.IRateDao.update(edu.ut.softlab.rate.component.Rate)"], "Fixed commit": "c92f8074df3135ba8d588f1d6c8ee7349fdf51a0", "Url": "https://api.github.com/repos/MuShare/Rate", "Date": "2016-10-27T07:57:35Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(lost)) if (((((position.x) > (bounds.x)) || ((position.x) < 0)) || ((position.y) > (bounds.y))) || ((position.y) < 0)) { lost = true; MartianRobots.lostRobots.add(position.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3248/buggy-version/MartianRobots.MartianRobots.java", "BodyUseAPI": [], "Fixed commit": "eb400288181a18c893c9fe42136ffd1ea4b6125a", "Url": "https://api.github.com/repos/Rod-O/fun", "Date": "2016-02-12T15:12:37Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((WG) == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1810/buggy-version/src.au.com.addstar.naturalhorses.NaturalHorses.java", "BodyUseAPI": [], "Fixed commit": "11a2ff7ed4fa8cbbbc0ee981139c4d3a4c10b0af", "Url": "https://api.github.com/repos/addstar/NaturalHorses", "Date": "2013-07-05T10:51:24Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Thread.interrupted()) { lineScanner.close(); this.closeAllOutputs(); throw new java.lang.InterruptedException(\"Thread has been interrupted.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8815/buggy-version/src.main.java.modules.matrix.MatrixEliminateOppositionalValuesModule.java", "BodyUseAPI": [], "Fixed commit": "9cf79fc8a72670a5a600018cd538784e08f5b153", "Url": "https://api.github.com/repos/spinfo/stringsnstructures", "Date": "2016-05-31T08:52:18Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["math.Vector3.magnitude()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mag == 0) return this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/433/buggy-version/src.math.Vector3.java", "BodyUseAPI": [], "Fixed commit": "c02c392ca0d621d40ce0d9414fe2c353a1290fa2", "Url": "https://api.github.com/repos/CalVR/ParallelRaytracing", "Date": "2014-10-19T19:33:45Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((answer.trim()) == null) { answer = \"could not be added\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2916/buggy-version/src.LoadBalancer.java", "BodyUseAPI": [], "Fixed commit": "48b896ea960d91272b971b39fe2b5509836c7873", "Url": "https://api.github.com/repos/cska63/TeamDataBase", "Date": "2012-11-03T15:28:58Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subject.getAvarageGrade()) != 0) { allGrades = allGrades + (subject.getAvarageGrade()); numberOfGrades++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/326/buggy-version/src.ch.grademasters.model.Semester.java", "BodyUseAPI": ["ch.grademasters.model.Subject.getAvarageGrade()"], "Fixed commit": "5c6ec196b3bcddc61bd421331fcf6034a92809e4", "Url": "https://api.github.com/repos/MastersProjects/Grademasters2.0", "Date": "2016-04-18T20:11:09Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Class<?>, java.util.Map<java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.annotation.Annotation>>.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((m.get(cls).get(anCls)) == null) { m.get(cls).put(anCls, new java.lang.annotation.Annotation() { @java.lang.Override public java.lang.Class<? extends java.lang.annotation.Annotation> annotationType() { return null; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/9218/buggy-version/src.de.caluga.morphium.AnnotationAndReflectionHelper.java", "BodyUseAPI": ["java.util.Map<java.lang.Class<?>, java.util.Map<java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.annotation.Annotation>>.get(java.lang.Class<?>)", "java.util.Map<java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.annotation.Annotation>.put(java.lang.Class<? extends T>,java.lang.annotation.Annotation)"], "Fixed commit": "af5ffb205e14b0fd951ad9e65d9c156b83efa83c", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2015-05-19T18:59:09Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sql.ActionPlanSQL.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((userSQL.getUser(rs.getInt(\"careProviderId\"))) != null) { careProvider = userSQL.getUser(rs.getInt(\"careProviderId\")).toCareProvider(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6684/buggy-version/CWSproject.src.com.sql.ActionPlanSQL.java", "BodyUseAPI": ["com.sql.UserSQL.getUser(int)", "userSQL.getUser(rs.getInt(\"careProviderId\")).toCareProvider()", "java.sql.ResultSet.getInt(java.lang.String)"], "Fixed commit": "e4399392e21d2ab40e39b745c345178c37ac42c9", "Url": "https://api.github.com/repos/JM1582/CWSproject", "Date": "2016-12-15T04:27:45Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((key.length()) == 8) { java.lang.String year = key.substring(0, 4); java.lang.String month = key.substring(4, 6); java.lang.String day = key.substring(6); ret.set(java.lang.Integer.parseInt(year), ((java.lang.Integer.parseInt(month)) - 1), java.lang.Integer.parseInt(day), 12, 0); }else if ((key.length()) == 6) { java.lang.String year = key.substring(0, 2); int yr = java.lang.Integer.parseInt(year); if (yr < 69) yr += 2000; else yr += 1900; java.lang.String month = key.substring(2, 4); java.lang.String day = key.substring(4); ret.set(yr, ((java.lang.Integer.parseInt(month)) - 1), java.lang.Integer.parseInt(day), 12, 0); }else if ((key.length()) > 8) { ret.setTimeInMillis(java.lang.Long.MAX_VALUE); }else { ret.setTimeInMillis(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3769/buggy-version/app.src.main.java.com.munger.budgettrack.model.Transaction.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int)", "java.lang.String.substring(int)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "dcc4c1bf22737da3542de217c681d95c294e8741", "Url": "https://api.github.com/repos/fPonias/BudgetTrack", "Date": "2016-02-03T16:39:24Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((par.length) != 0) { v.sendMessage(TextColors.RED, \"This brush does not accept additional parameters.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/64/buggy-version/src.main.java.com.thevoxelbox.voxelsniper.brush.Brush.java", "BodyUseAPI": [], "Fixed commit": "1c36c65978a511aeadaefee3e6478bdbf0b15790", "Url": "https://api.github.com/repos/TVPT/VoxelSniper", "Date": "2017-06-16T08:35:44Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (groupBy == null) { groupBy = new com.alibaba.druid.sql.ast.statement.SQLSelectGroupByClause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8654/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.mysql.parser.MySqlSelectParser.java", "BodyUseAPI": [], "Fixed commit": "d57060d7823721780e79e9c1c046a5cd8c7e5f8c", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2013-07-30T08:41:08Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((type == (ComponentType.CONSTRAINT)) || (type == (ComponentType.CONCEPT))) this.severity = \"major\"; else this.severity = \"info\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/9126/buggy-version/foobar.src.main.java.jrmds.model.Rule.java", "BodyUseAPI": [], "Fixed commit": "b6e5a6f417d580b3381e90e7e90805434d1f5d52", "Url": "https://api.github.com/repos/swt14w01/JRMDS", "Date": "2015-01-19T11:19:10Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pieceType != (hanto.common.HantoPieceType.BUTTERFLY)) && ((turn) >= 6)) { if (((currentPlayer) == (hanto.common.HantoPlayerColor.BLUE)) && ((super.blueButterfly) == null)) { throw new hanto.common.HantoException(\"Player must place a butterfly by the fourth turn\"); }else if (((currentPlayer) == (hanto.common.HantoPlayerColor.RED)) && ((super.redButterfly) == null)) { throw new hanto.common.HantoException(\"Need to play a butterfly\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8707/buggy-version/Hanto2014-kwmee.src.hanto.studentkwmee.epsilon.EpsilonHantoGame.java", "BodyUseAPI": [], "Fixed commit": "adedc129d4fbecfaee0a6f700a9063dff769d2b2", "Url": "https://api.github.com/repos/kevinmee/OOAD", "Date": "2014-10-15T20:05:12Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(context.getString(R.string.key_panorama_file),<nulltype>)", "context.getString(R.string.sample_panorama_identifier).equals(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((createCachedImages && (!useSample)) && (!(new java.io.File(panoramaPath).exists()))) { mPanoramaLoaded = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1845/buggy-version/src.ac.robinson.mediatablet.view.HomesteadSurfaceView.java", "BodyUseAPI": [], "Fixed commit": "494a3579a5372dc4129cf4c6ca09d25666ff46ea", "Url": "https://api.github.com/repos/communitymedia/mediatablet", "Date": "2013-05-17T14:05:35Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (archivesDir.exists()) { java.io.File[] oldRepostoryBaseDirs = archivesDir.listFiles(); java.io.File oldRepostoryBaseDir = null; for (int i = 0; i < (oldRepostoryBaseDirs.length); i++) { oldRepostoryBaseDir = oldRepostoryBaseDirs[i]; if (oldRepostoryBaseDir.isDirectory()) { ts.eclipse.ide.core.TypeScriptCorePlugin.getTypeScriptRepositoryManager().createRepository(oldRepostoryBaseDir); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3502/buggy-version/eclipse.ts.eclipse.ide.core.src.ts.eclipse.ide.internal.core.preferences.TypeScriptCorePreferenceInitializer.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "30ebf85309e397863c08cb6d413db3c2e689bdd9", "Url": "https://api.github.com/repos/angelozerr/typescript.java", "Date": "2016-09-22T22:33:57Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4661/buggy-version/src.main.java.alpaca.mock.MockVisitor.java", "BodyUseAPI": [], "Fixed commit": "5f9f4dc462866b5af37ec7927566422ca5a6dc80", "Url": "https://api.github.com/repos/alpacaworks/alpacamock", "Date": "2015-09-08T13:34:43Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["AlpacaMockParser.EndpointMethodContext.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"*\".equals(method)) { method = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4661/buggy-version/src.main.java.alpaca.mock.MockVisitor.java", "BodyUseAPI": [], "Fixed commit": "5f9f4dc462866b5af37ec7927566422ca5a6dc80", "Url": "https://api.github.com/repos/alpacaworks/alpacamock", "Date": "2015-09-08T13:34:43Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (contentObj == null) { contentObj = \"\"; }else if (!(contentObj instanceof java.lang.String)) { throw new java.lang.RuntimeException((\"Unexpected type in content: \" + (contentObj.getClass()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4661/buggy-version/src.main.java.alpaca.mock.ServiceServer.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "5f9f4dc462866b5af37ec7927566422ca5a6dc80", "Url": "https://api.github.com/repos/alpacaworks/alpacamock", "Date": "2015-09-08T13:34:43Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reply) != null) { reply.read(this, is); org.jboss.netty.handler.codec.redis.Reply ret = reply; reply = null; return ret; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7223/buggy-version/src.main.java.org.jboss.netty.handler.codec.redis.RedisDecoder.java", "BodyUseAPI": [], "Fixed commit": "f7a1ec61f2741cc7b89c848e0737be23dfae1f70", "Url": "https://api.github.com/repos/netty/netty", "Date": "2012-03-11T06:12:17Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == (-1)) { byte star = is.readByte(); if (star == (org.jboss.netty.handler.codec.redis.MultiBulkReply.MARKER)) { size = 0; }else { throw new java.lang.AssertionError((\"Unexpected character in stream: \" + star)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7223/buggy-version/src.main.java.org.jboss.netty.handler.codec.redis.MultiBulkReply.java", "BodyUseAPI": [], "Fixed commit": "f7a1ec61f2741cc7b89c848e0737be23dfae1f70", "Url": "https://api.github.com/repos/netty/netty", "Date": "2012-03-11T06:12:17Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.numEvComs) == 1) containerPanel.add(new javax.swing.JLabel(\"1 more...\"), \"grow, south, gap left 5\"); else containerPanel.add(new javax.swing.JLabel((((this.numEvComs) - (this.numDisplayableEvComs)) + \" more...\")), \"grow, south, gap left 5\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5072/buggy-version/Calendar.src.edu.wpi.cs.wpisuitetng.modules.calendar.view.calendarview.month.DayPanel.java", "BodyUseAPI": ["javax.swing.JPanel.add(javax.swing.JLabel,java.lang.String)"], "Fixed commit": "aed50ab6dc780ed720c7092166a5c5f27bbe2d39", "Url": "https://api.github.com/repos/CS3733Team1/wpi-suite", "Date": "2013-12-13T07:12:57Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Exp.isEmpty()) { java.lang.System.out.print(\"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8514/buggy-version/src.action.Expression.java", "BodyUseAPI": [], "Fixed commit": "ea26333297e35f06b66d1e9f10bbef6191237c2b", "Url": "https://api.github.com/repos/lostork/Lab1", "Date": "2016-11-06T03:18:47Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clickedPos != (-1)) { actionBar.startAnimation(fadeOutAnim); fab.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2481/buggy-version/app.src.main.java.me.slackti.notesmatter.adapter.TodoAdapter.java", "BodyUseAPI": [], "Fixed commit": "cdfd31d0dace9253b500142759b863229c0f77be", "Url": "https://api.github.com/repos/JackyMai/notes-matter", "Date": "2017-02-15T02:12:48Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slug == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1541/buggy-version/app.src.main.java.com.door43.translationstudio.core.Migration.java", "BodyUseAPI": [], "Fixed commit": "883a63989265e85008d80c9f1f1fe3d158a2ecb7", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2017-02-28T17:56:21Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (streamBatch.circularBuffer.isFull()) { for (long i = 0; i < ((numberOfBatches1) - (streamBatch.minibatchCounter)); i++) { if (!(streamBatch.circularBuffer.isEmpty())) { streamBatch.circularBuffer.remove(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5111/buggy-version/flink-addons.flink-streaming.flink-streaming-core.src.main.java.org.apache.flink.streaming.api.invokable.operator.co.CoBatchReduceInvokable.java", "BodyUseAPI": ["org.apache.flink.streaming.state.NullableCircularBuffer.isEmpty()", "org.apache.flink.streaming.state.NullableCircularBuffer.remove()"], "Fixed commit": "539dcf9ea43f13b92c9ef7c774e9bad427854178", "Url": "https://api.github.com/repos/mbalassi/incubator-flink", "Date": "2014-10-03T12:09:34Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["int[].clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((stockData.getPrice(stockName, historyDate)) == (-1)) { days = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1163/buggy-version/src.Trader.java", "BodyUseAPI": [], "Fixed commit": "3f902c166e4ea9c366f837e9e13a1cc7225910b0", "Url": "https://api.github.com/repos/tdquang/Genetic-Programming-Stock-Trading", "Date": "2016-03-05T22:41:15Z"},
{"Line": "=>729", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (crafter instanceof net.minecraft.entity.player.EntityPlayer) { try { p455w0rd.wct.sync.network.NetworkHandler.instance().sendTo(new p455w0rd.wct.sync.packets.PacketValueConfig(set.name(), sideLocal.name()), ((net.minecraft.entity.player.EntityPlayerMP) (crafter))); } catch (final java.io.IOException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8327/buggy-version/src.main.java.p455w0rd.wct.container.ContainerWCT.java", "BodyUseAPI": [], "Fixed commit": "55b435c9d364b87406ce06952b3f7fb10bef5f3c", "Url": "https://api.github.com/repos/p455w0rd/WirelessCraftingTerminal", "Date": "2017-02-22T00:51:02Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.sakaiproject.portal.render.portlet.services.SakaiOptionalPortletContainerServices.M_log.isDebugEnabled()) { org.sakaiproject.portal.render.portlet.services.SakaiOptionalPortletContainerServices.M_log.debug((\"Property name = \" + propertyName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3885/buggy-version/portal.portal-render-impl.impl.src.java.org.sakaiproject.portal.render.portlet.services.SakaiOptionalPortletContainerServices.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "7878141b924f93f76a24358a579b5b4196203ee3", "Url": "https://api.github.com/repos/dianehadley27/sakai", "Date": "2016-02-19T23:18:31Z"},
{"Line": "=>687", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cursorEndPosition >= 1) { if ((operatorsWithComma.contains(((equationStr.charAt((cursorEndPosition - 1))) + \"\"))) && (character.equals(\",\"))) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5240/buggy-version/app.src.main.java.com.example.titan.dyscalculator.MainActivity.java", "BodyUseAPI": ["java.util.HashSet<java.lang.String>.contains(java.lang.String)", "java.lang.String.charAt(int)"], "Fixed commit": "e9fb12e1bac899bd5b2bc1ee5748188507cba4a5", "Url": "https://api.github.com/repos/JeremyVDV/Dyscalculator", "Date": "2016-06-02T11:35:40Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.enhype.extract.FeatureSiteTuple.getSiteId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(siteSentNumMap.containsKey(siteId))) { com.enhype.extract.FeatureWordExtractor.logger.info(((\"Site: \" + siteId) + \" can not be found \")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3901/buggy-version/filter.src.main.java.com.enhype.extract.FeatureWordExtractor.java", "BodyUseAPI": ["org.apache.log4j.Logger.info(java.lang.String)"], "Fixed commit": "81829ea36336503ac638f5d35225907a9124abd1", "Url": "https://api.github.com/repos/angelacoconuts/imm-foundation", "Date": "2014-04-16T00:00:55Z"},
{"Line": "=>983", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((microbat.model.variable.FieldVar) (var)).isStatic()) { varID = var.getName(); }else { varID = microbat.model.variable.Variable.concanateFieldVarID(java.lang.String.valueOf(objRef.uniqueID()), var.getSimpleName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6855/buggy-version/microbat.src.main.microbat.codeanalysis.runtime.ProgramExecutor.java", "BodyUseAPI": [], "Fixed commit": "266282860718b7da3cb41f3e52524b7d045702c2", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2016-08-17T09:15:46Z"},
{"Line": "=>958", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(textRepresentation.isEmpty())) textRepresentation = \"MAX \" + textRepresentation;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4726/buggy-version/src.main.java.org.mm.renderer.text.TextRenderer.java", "BodyUseAPI": [], "Fixed commit": "66ec1012118596558b4d238ba6969e45827d9f49", "Url": "https://api.github.com/repos/protegeproject/mapping-master", "Date": "2015-07-26T05:03:25Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((max == 0) || (age > max)) { return 1.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/571/buggy-version/taskwarrior-androidapp.src.org.svij.taskwarriorapp.data.Task.java", "BodyUseAPI": [], "Fixed commit": "047b0e9d27eafd6220215d67ef2ba3a504c25c12", "Url": "https://api.github.com/repos/D-E-N/taskwarrior-androidapp", "Date": "2013-04-01T19:14:03Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(availableServers.isEmpty())) { java.util.Random random = new java.util.Random(); org.kwstudios.play.kwbungeelobby.database.MinecraftServerModel randomKey = availableServers.get(random.nextInt(availableServers.size())); org.kwstudios.play.kwbungeelobby.database.MySQLServerHandler.reserveServer(randomKey.getName()); return randomKey; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2230/buggy-version/src.main.java.org.kwstudios.play.kwbungeelobby.database.MySQLServerHandler.java", "BodyUseAPI": ["java.util.List<org.kwstudios.play.kwbungeelobby.database.MinecraftServerModel>.get(int)", "java.util.List<org.kwstudios.play.kwbungeelobby.database.MinecraftServerModel>.size()", "java.util.Random.nextInt(availableServers.size())"], "Fixed commit": "4c56a94aec04d46a5404869c79a0f96e265d9fef", "Url": "https://api.github.com/repos/KWStudios/KWBungeeLobby", "Date": "2016-01-19T18:56:25Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((useBatchUpdates) && (size > 100)) { stop = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6887/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.mysql.MySQL.java", "BodyUseAPI": [], "Fixed commit": "fdeb5e657895ff3ac8ed99ef7459750eb29772da", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-09-17T22:52:41Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.getElementById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (element == null) { return res; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5905/buggy-version/src.main.java.com.spider.proxypool.spider.XiciDailiSpider.java", "BodyUseAPI": [], "Fixed commit": "f0c26160bad6e923f14e9c335d2da51e92f23354", "Url": "https://api.github.com/repos/13Blog/proxy-pool", "Date": "2017-10-12T10:25:47Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((tables == null) || (tables.isEmpty())) { return res; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5905/buggy-version/src.main.java.com.spider.proxypool.spider.XiciDailiSpider.java", "BodyUseAPI": [], "Fixed commit": "f0c26160bad6e923f14e9c335d2da51e92f23354", "Url": "https://api.github.com/repos/13Blog/proxy-pool", "Date": "2017-10-12T10:25:47Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((invoiceTable) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7067/buggy-version/src.main.java.org.iabako.client.ui.form.business.sale.SaleInvoiceForm.java", "BodyUseAPI": [], "Fixed commit": "3afdfc2cd1f016863ed4daf0c657ac4e1dda3800", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2017-10-15T08:10:49Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cbeaton.SinglyLinkedList<T>.toArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((a[i]) != null) { equal = equal && (a[i].equals(b[i])); }else { if ((b[i]) != null) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/500/buggy-version/src.main.java.cbeaton.SinglyLinkedList.java", "BodyUseAPI": ["java.lang.Object.equals(java.lang.Object)"], "Fixed commit": "744fb4783579ebba4467392648da3755239e8b38", "Url": "https://api.github.com/repos/cbeaton/my-java", "Date": "2017-01-07T08:17:19Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasNext())) { throw new java.util.NoSuchElementException(\"No more elements\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2285/buggy-version/xpath-to-xml-xom.src.main.java.com.github.simy4.xpath.xom.navigator.node.XomElement.java", "BodyUseAPI": [], "Fixed commit": "e09e97c4e5b14b80c2c469c64ee3044a92a629dc", "Url": "https://api.github.com/repos/SimY4/xpath-to-xml", "Date": "2017-08-29T06:40:35Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasNext())) { throw new java.util.NoSuchElementException(\"No more elements\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2285/buggy-version/xpath-to-xml-xom.src.main.java.com.github.simy4.xpath.xom.navigator.node.XomElement.java", "BodyUseAPI": [], "Fixed commit": "e09e97c4e5b14b80c2c469c64ee3044a92a629dc", "Url": "https://api.github.com/repos/SimY4/xpath-to-xml", "Date": "2017-08-29T06:40:35Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5023/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.parser.FieldsParser.java", "BodyUseAPI": [], "Fixed commit": "a567619cbf5637da26d7e5e699811e3b69f42b4d", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-12-14T06:17:53Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sourceFieldValue.getValue()) instanceof org.hibernate.collection.internal.PersistentBag) { type = nl.dries.wicket.hibernate.dozer.helper.HibernateCollectionType.BAG; }else if ((sourceFieldValue.getValue()) instanceof org.hibernate.collection.internal.PersistentList) { type = nl.dries.wicket.hibernate.dozer.helper.HibernateCollectionType.LIST; }else { type = nl.dries.wicket.hibernate.dozer.helper.HibernateCollectionType.MAP; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8573/buggy-version/src.main.java.nl.dries.wicket.hibernate.dozer.helper.HibernateCollectionType.java", "BodyUseAPI": ["org.hibernate.collection.spi.PersistentCollection.getValue()"], "Fixed commit": "c6c2a167bb432654f1886ac36dc65ef857f15083", "Url": "https://api.github.com/repos/verhage/dozer-model", "Date": "2012-08-28T09:57:28Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(path)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/50/buggy-version/okgo.src.main.java.com.lzy.okgo.utils.IOUtils.java", "BodyUseAPI": [], "Fixed commit": "dd3fb4cd49b4912a7c57d0c933900ef7b1582a7f", "Url": "https://api.github.com/repos/jeasonlzy/okhttp-OkGo", "Date": "2017-06-12T12:14:05Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (('A' <= c) && (c <= 'Z')) sb.setCharAt(i, ((char) ((c - 'A') + '\uff21'))); else if (('a' <= c) && (c <= 'z')) sb.setCharAt(i, ((char) ((c - 'a') + '\uff41')));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1160/buggy-version/src.org.Gyutan.Gyutan.java", "BodyUseAPI": ["java.lang.StringBuilder.setCharAt(int,int)", "java.lang.StringBuilder.setCharAt(int,int)"], "Fixed commit": "9a133456960d35d161492127ca222552d1081cfe", "Url": "https://api.github.com/repos/icn-lab/Gyutan", "Date": "2016-06-24T03:43:45Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((states.State.currentState) instanceof states.MenuState) && (state instanceof states.GameState)) { states.State.currentState.closeState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/9119/buggy-version/src.states.State.java", "BodyUseAPI": [], "Fixed commit": "891263684bca7630924afc2f3dded9caabf8eafd", "Url": "https://api.github.com/repos/JohnMichaelWalker/TestGame", "Date": "2017-12-06T22:48:09Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.player.EntityPlayer.getHeldItem(net.minecraft.util.EnumHand)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((heldItem.getCount()) == 0) { heldItem = net.minecraft.item.ItemStack.EMPTY; playerIn.setHeldItem(hand, heldItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3964/buggy-version/src.main.java.com.miningmark48.pearcelmod.block.BlockPearcelPressurePlate.java", "BodyUseAPI": [], "Fixed commit": "187da4151564b66d921e9b68a5894eb1ab68d0ae", "Url": "https://api.github.com/repos/MiningMark48/Pearcel-Mod", "Date": "2017-09-12T18:49:12Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((identity) == null) { identity = java.lang.String.format(\"%s.%s\", this.getDatabase().toUpperCase(), this.getName()).toUpperCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8250/buggy-version/metadata.src.main.java.org.apache.kylin.metadata.model.TableDesc.java", "BodyUseAPI": [], "Fixed commit": "e0733c96db5ed908ecb2fead8067beb42d0fd445", "Url": "https://api.github.com/repos/janzhongi/Kylin", "Date": "2015-06-24T13:20:25Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ctxNodes.isEmpty())) { final java.util.Collection<? extends de.cismet.cids.utils.interfaces.CidsBeanAction> extensionsForNodes = de.cismet.ext.CExtManager.getInstance().getExtensions(de.cismet.cids.utils.interfaces.CidsBeanAction.class, new de.cismet.ext.CExtContext(de.cismet.ext.CExtContext.CTX_REFERENCE, ctxNodes)); additionalActions.addAll(extensionsForNodes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5434/buggy-version/src.main.java.Sirius.navigator.ui.MutablePopupMenu.java", "BodyUseAPI": ["de.cismet.ext.CExtManager.getInstance().getExtensions(java.lang.Class,de.cismet.ext.CExtContext)"], "Fixed commit": "9c73a32c19d819681abc0a4a2d9c537248078f2a", "Url": "https://api.github.com/repos/cismet/cids-navigator", "Date": "2015-04-29T12:17:33Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ctxMetaObjects.isEmpty())) { final java.util.Collection<? extends de.cismet.cids.utils.interfaces.CidsBeanAction> extensions = de.cismet.ext.CExtManager.getInstance().getExtensions(de.cismet.cids.utils.interfaces.CidsBeanAction.class, new de.cismet.ext.CExtContext(de.cismet.ext.CExtContext.CTX_REFERENCE, ctxMetaObjects)); additionalActions.addAll(extensions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5434/buggy-version/src.main.java.Sirius.navigator.ui.MutablePopupMenu.java", "BodyUseAPI": ["de.cismet.ext.CExtManager.getInstance().getExtensions(java.lang.Class,de.cismet.ext.CExtContext)"], "Fixed commit": "9c73a32c19d819681abc0a4a2d9c537248078f2a", "Url": "https://api.github.com/repos/cismet/cids-navigator", "Date": "2015-04-29T12:17:33Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.getName().endsWith(\".jar\")) { aQute.bnd.osgi.Jar jar = new aQute.bnd.osgi.Jar(node.get(\"artifactId\").asText(), file); list.add(jar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7920/buggy-version/wisdom-maven-plugin.src.main.java.org.wisdom.maven.utils.BundlePackager.java", "BodyUseAPI": [], "Fixed commit": "0b447908388a14589b93d4827687dd1d6e28961b", "Url": "https://api.github.com/repos/wisdom-framework/wisdom", "Date": "2014-03-21T11:04:12Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.ser.BeanPropertyWriter.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (writerType.getRawClass().isAssignableFrom(valueClass)) { valueType = typeFactory.constructSpecializedType(writerType, valueClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7525/buggy-version/src.main.java.org.mongojack.internal.util.SerializationUtils.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.type.TypeFactory.constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class<?>)"], "Fixed commit": "7bf2896c025177e36f5c125839a7c9590d025b64", "Url": "https://api.github.com/repos/t-hall/mongojack", "Date": "2017-07-14T17:19:18Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.closed) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1324/buggy-version/Protocol.java", "BodyUseAPI": [], "Fixed commit": "3524662a19964b7e33920cb8dba1e287aefc78a5", "Url": "https://api.github.com/repos/juliasets/Hist-Eq", "Date": "2014-02-26T01:34:09Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.actionCategory.getAttribute().contains(action))) { com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.actionCategory.getAttribute().add(action); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/47/buggy-version/src.main.java.com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.java", "BodyUseAPI": ["com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.actionCategory.getAttribute().add(com.thalesgroup.authzforce.sdk.core.schema.Action)", "oasis.names.tc.xacml._3_0.core.schema.wd_17.AttributesType.getAttribute()"], "Fixed commit": "9c1b32f7b6b124f329ba60d738bf944a198922b5", "Url": "https://api.github.com/repos/authzforce/java-xacml-sdk", "Date": "2013-07-05T09:18:18Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.environmentCategory.getAttribute().contains(environment))) { com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.environmentCategory.getAttribute().add(environment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/47/buggy-version/src.main.java.com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.java", "BodyUseAPI": ["com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.environmentCategory.getAttribute().add(com.thalesgroup.authzforce.sdk.core.schema.Environment)", "oasis.names.tc.xacml._3_0.core.schema.wd_17.AttributesType.getAttribute()"], "Fixed commit": "9c1b32f7b6b124f329ba60d738bf944a198922b5", "Url": "https://api.github.com/repos/authzforce/java-xacml-sdk", "Date": "2013-07-05T09:18:18Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.subjectCategory.getAttribute().contains(subject))) { com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.subjectCategory.getAttribute().add(subject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/47/buggy-version/src.main.java.com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.java", "BodyUseAPI": ["oasis.names.tc.xacml._3_0.core.schema.wd_17.AttributesType.getAttribute()", "com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.subjectCategory.getAttribute().add(com.thalesgroup.authzforce.sdk.core.schema.Subject)"], "Fixed commit": "9c1b32f7b6b124f329ba60d738bf944a198922b5", "Url": "https://api.github.com/repos/authzforce/java-xacml-sdk", "Date": "2013-07-05T09:18:18Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.resourcesCategory.getAttribute().contains(resource))) { com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.resourcesCategory.getAttribute().add(resource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/47/buggy-version/src.main.java.com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.java", "BodyUseAPI": ["com.thalesgroup.authzforce.sdk.xacml.utils.XacmlSdkImpl.resourcesCategory.getAttribute().add(com.thalesgroup.authzforce.sdk.core.schema.Resource)", "oasis.names.tc.xacml._3_0.core.schema.wd_17.AttributesType.getAttribute()"], "Fixed commit": "9c1b32f7b6b124f329ba60d738bf944a198922b5", "Url": "https://api.github.com/repos/authzforce/java-xacml-sdk", "Date": "2013-07-05T09:18:18Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((formBuilderService) == null) { org.springframework.context.ApplicationContext context = org.springframework.web.context.support.WebApplicationContextUtils.getWebApplicationContext(request.getSession().getServletContext()); formBuilderService = ((gov.nih.nci.ncicb.cadsr.formbuilder.ejb.service.FormBuilderService) (context.getBean(\"formBuilderService\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3095/buggy-version/software.formbuilder.src.java.gov.nih.nci.ncicb.cadsr.formbuilder.struts.actions.FormDownloadAction.java", "BodyUseAPI": [], "Fixed commit": "9c810d2b5f20298ce21c501ddafec63275bb22ea", "Url": "https://api.github.com/repos/CBIIT/cadsr-formbuilder", "Date": "2016-05-12T15:27:47Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_tick) != null) { return m_tick.update(price); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3364/buggy-version/src.bthdg.calc.OHLCCalculator.java", "BodyUseAPI": [], "Fixed commit": "10f75ef29f046ea0d8604ca5b91d5d685f86c7f3", "Url": "https://api.github.com/repos/hedgebk/biTest2", "Date": "2015-09-29T21:52:13Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(list.isEmpty())) { list.set(((list.size()) - 1), price); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3364/buggy-version/src.bthdg.calc.BarCalculator.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.Double>.set(int,double)", "java.util.LinkedList<java.lang.Double>.size()"], "Fixed commit": "10f75ef29f046ea0d8604ca5b91d5d685f86c7f3", "Url": "https://api.github.com/repos/hedgebk/biTest2", "Date": "2015-09-29T21:52:13Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isClass) railo.runtime.orm.hibernate.HBMCreator.addDiscriminator(engine, cfc, doc, clazz, pc, meta);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2066/buggy-version/railo-java.railo-core.src.railo.runtime.orm.hibernate.HBMCreator.java", "BodyUseAPI": [], "Fixed commit": "c6da42e0ceb5c559928f50e1044611232c3f516c", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-02-28T15:19:04Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.widget.Spinner) (findViewById(R.id.cloud_providers_spinner))).getSelectedItemPosition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cloudSettingsWrappers.get(position).getType()) == (CloudSettingsWrapper.CSType.BLUEMIX_DEMO)) { bundle.putString(CloudSettingsActivity.KEY_ORGATNISATION_ID, \"quickstart\"); bundle.putString(CloudSettingsActivity.KEY_ORGATNISATION_ID, \"myBluemix\"); }else { bundle.putString(CloudSettingsActivity.KEY_ORGATNISATION_ID, cloudSettingsWrappers.get(position).getOrganizationID()); bundle.putString(CloudSettingsActivity.KEY_APPLICATION_ID, cloudSettingsWrappers.get(position).getApplicationID()); bundle.putString(CloudSettingsActivity.KEY_AUTH_TOKEN, cloudSettingsWrappers.get(position).getAuthToken()); bundle.putString(CloudSettingsActivity.KEY_AUTH_KEY, cloudSettingsWrappers.get(position).getAuthKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1173/buggy-version/app.src.main.java.sed.inf.u_szeged.hu.androidiotsimulator.activity.CloudActivity.java", "BodyUseAPI": ["android.os.Bundle.putString(CloudSettingsActivity.KEY_AUTH_TOKEN,cloudSettingsWrappers.get(position).getAuthToken())", "android.os.Bundle.putString(CloudSettingsActivity.KEY_ORGATNISATION_ID,cloudSettingsWrappers.get(position).getOrganizationID())", "java.util.ArrayList<sed.inf.u_szeged.hu.androidiotsimulator.model.cloudsettings.CloudSettingsWrapper>.get(int)", "cloudSettingsWrappers.get(position).getAuthKey()", "cloudSettingsWrappers.get(position).getOrganizationID()", "java.util.ArrayList<sed.inf.u_szeged.hu.androidiotsimulator.model.cloudsettings.CloudSettingsWrapper>.get(int)", "cloudSettingsWrappers.get(position).getApplicationID()", "cloudSettingsWrappers.get(position).getAuthToken()", "java.util.ArrayList<sed.inf.u_szeged.hu.androidiotsimulator.model.cloudsettings.CloudSettingsWrapper>.get(int)", "android.os.Bundle.putString(CloudSettingsActivity.KEY_APPLICATION_ID,cloudSettingsWrappers.get(position).getApplicationID())", "android.os.Bundle.putString(CloudSettingsActivity.KEY_AUTH_KEY,cloudSettingsWrappers.get(position).getAuthKey())", "java.util.ArrayList<sed.inf.u_szeged.hu.androidiotsimulator.model.cloudsettings.CloudSettingsWrapper>.get(int)"], "Fixed commit": "6f2cbfa5a3fecfced0d095a6af666943c26984c6", "Url": "https://api.github.com/repos/sed-szeged/MobIoTSim", "Date": "2016-10-21T06:36:40Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valid) { for (int i = 0; i < (operands.length); i++) { if ((operands[i]) != null) { valid &= com.alibaba.citrus.service.form.impl.validation.CompareOperator.values()[i].accept(numberValue.compareTo(operands[i])); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1994/buggy-version/service.form.src.main.java.com.alibaba.citrus.service.form.impl.validation.NumberValidator.java", "BodyUseAPI": [], "Fixed commit": "c86a330931cba55733f70082b8e6532c15b747ef", "Url": "https://api.github.com/repos/wenshao/citrus", "Date": "2012-05-31T01:11:46Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.gameBoard.distanceFrom(CellItem.ITEM_TRE, this.gamePlayer.getX(), this.gamePlayer.getY())) == 0) { java.lang.System.out.println(((\"Game Over! You found the treasure after \" + (this.currentStep)) + \" steps!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7372/buggy-version/src.barrenmoore.Client.java", "BodyUseAPI": [], "Fixed commit": "decacb20066482b1bfb2920b04106c03cf9bfb2f", "Url": "https://api.github.com/repos/XenoWarrior/QA-Barren-Moore", "Date": "2017-07-28T15:24:16Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (barrenmoore.DataStorage.debugEnabled()) { for (barrenmoore.BoardCell c : theXValues.values()) { java.lang.System.out.println((((((c.getX()) + \" \") + (c.getY())) + \" \") + (c.getItem()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7372/buggy-version/src.barrenmoore.GameBoard.java", "BodyUseAPI": [], "Fixed commit": "decacb20066482b1bfb2920b04106c03cf9bfb2f", "Url": "https://api.github.com/repos/XenoWarrior/QA-Barren-Moore", "Date": "2017-07-28T15:24:16Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(de.symeda.sormas.app.rest.RetroProvider.isConnected())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/964/buggy-version/sormas-app.app.src.main.java.de.symeda.sormas.app.rest.SynchronizeDataAsync.java", "BodyUseAPI": [], "Fixed commit": "6a55c6f9e1bc09640b6ff9dbe543a07c6151fff5", "Url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project", "Date": "2017-07-31T05:54:57Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mScroller.isFinished())) { mScroller.forceFinished(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2478/buggy-version/library.src.main.java.me.ghui.library.PickerView.java", "BodyUseAPI": ["android.widget.OverScroller.forceFinished(boolean)"], "Fixed commit": "7c704cf8a7eac4f6874c3c1337ba3f0d91e18eca", "Url": "https://api.github.com/repos/lantouzi/PickerView-Android", "Date": "2015-12-02T04:25:15Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((numUpgraded > 0) && (!alreadyUpgraded)) { io.druid.indexing.overlord.MetadataTaskStorage.log.info(\"Upgraded [%s] locks on interval [%s] for task:[%s] to non-preemptive lock\", numUpgraded, taskLockToUpgrade.getInterval(), taskid); }else if ((numUpgraded > 0) && alreadyUpgraded) { io.druid.indexing.overlord.MetadataTaskStorage.log.info(\"Upgraded [%s] locks on interval [%s] for task:[%s] to non-preemptive lock\", numUpgraded, taskLockToUpgrade.getInterval(), taskid); }else if ((numUpgraded == 0) && alreadyUpgraded) { io.druid.indexing.overlord.MetadataTaskStorage.log.info(\"Lock on interval [%s] for task:[%s] already upgraded to non-preemptive lock\", taskLockToUpgrade.getInterval(), taskid); }else if ((numUpgraded == 0) && (!alreadyUpgraded)) { io.druid.indexing.overlord.MetadataTaskStorage.log.error(\"No lock found on interval [%s] and version [%s] for task: [%s] to be upgraded to non-preemptive lock ! This is bad !\", taskLockToUpgrade.getInterval(), taskLockToUpgrade.getVersion(), taskid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5098/buggy-version/indexing-service.src.main.java.io.druid.indexing.overlord.MetadataTaskStorage.java", "BodyUseAPI": ["com.metamx.emitter.EmittingLogger.info(java.lang.String,int,taskLockToUpgrade.getInterval(),java.lang.String)", "com.metamx.emitter.EmittingLogger.info(java.lang.String,int,taskLockToUpgrade.getInterval(),java.lang.String)"], "Fixed commit": "0ef5a591e9972aa4b018b322d5d0173659b3d66a", "Url": "https://api.github.com/repos/pjain1/druid", "Date": "2015-09-10T18:59:47Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.Long, io.druid.indexing.common.TaskLock>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (taskLock.equals(taskLockToUpgrade)) { alreadyUpgraded = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5098/buggy-version/indexing-service.src.main.java.io.druid.indexing.overlord.MetadataTaskStorage.java", "BodyUseAPI": [], "Fixed commit": "0ef5a591e9972aa4b018b322d5d0173659b3d66a", "Url": "https://api.github.com/repos/pjain1/druid", "Date": "2015-09-10T18:59:47Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t.applyUserSelectedConstraint(c)) { java.lang.System.out.println(\"Yes!\"); xml.readFile(t.getEdges()); }else java.lang.System.out.println(\"No!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4497/buggy-version/TerrainIntelligentAllocation.java", "BodyUseAPI": ["Terrain.getEdges()", "XML.readFile(t.getEdges())"], "Fixed commit": "2eac6a5b05fa6599e82a3c5bfebbd9ce6c330f99", "Url": "https://api.github.com/repos/ruivalentemaia/TerrainIntelligentAllocation", "Date": "2013-03-26T18:56:06Z"},
{"Line": "=>1578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextLine[i]) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/267/buggy-version/WeaveServices.src.weave.servlets.AdminService.java", "BodyUseAPI": [], "Fixed commit": "3bc81df92ff1f08054916b003cf01a8d3e2f64b9", "Url": "https://api.github.com/repos/CRIData/Weave", "Date": "2012-04-12T23:58:48Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.netflix.config.ConfigurationManager.instance) == null) { com.netflix.config.ConfigurationManager.instance = com.netflix.config.ConfigurationManager.getConfigInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2440/buggy-version/archaius-core.src.main.java.com.netflix.config.ConfigurationManager.java", "BodyUseAPI": [], "Fixed commit": "1e7a413444315c5d377694e32369172ace5ae0f2", "Url": "https://api.github.com/repos/Netflix/archaius", "Date": "2013-06-14T17:21:39Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.netflix.config.ConfigurationManager.instance) == null) { com.netflix.config.ConfigurationManager.instance = com.netflix.config.ConfigurationManager.getConfigInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2440/buggy-version/archaius-core.src.main.java.com.netflix.config.ConfigurationManager.java", "BodyUseAPI": [], "Fixed commit": "1e7a413444315c5d377694e32369172ace5ae0f2", "Url": "https://api.github.com/repos/Netflix/archaius", "Date": "2013-06-14T17:21:39Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cursor.moveToFirst()) { placeAdapter.swapCursor(cursor); placeAdapter.notifyDataSetChanged(); switchNotification.setEnabled(true); }else { switchNotification.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7673/buggy-version/src.com.backflip270bb.android.tobuylist4ics.ItemDetailFragment.java", "BodyUseAPI": ["com.backflip270bb.android.tobuylist4ics.PlaceSpinnerCursorAdapter.swapCursor(android.database.Cursor)"], "Fixed commit": "69cfbc533cdee2fb2cfb6a2d6fa0e3aeca8856b6", "Url": "https://api.github.com/repos/u-one/ToBuyList", "Date": "2014-08-15T11:28:34Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cursor.moveToFirst()) { id = cursor.getLong(cursor.getColumnIndexOrThrow(ItemProviderContract.Item.ROW_ID)); java.lang.String name = cursor.getString(cursor.getColumnIndexOrThrow(ItemProviderContract.Item.NAME_COLUMN)); java.lang.String memo = cursor.getString(cursor.getColumnIndexOrThrow(ItemProviderContract.Item.MEMO_COLUMN)); time = cursor.getLong(cursor.getColumnIndexOrThrow(ItemProviderContract.Item.DATE_COLUMN)); placeId = cursor.getLong(cursor.getColumnIndexOrThrow(ItemProviderContract.Item.PLACEID_COLUMN)); java.lang.Integer position = placeAdapter.getPositionFromId(placeId); boolean notify = ((cursor.getInt(cursor.getColumnIndexOrThrow(ItemProviderContract.Item.SHOULDNOTIFY_COLUMN))) == 0) ? false : true; if (notify && (position != null)) { switchNotification.setChecked(true); placeSpinner.setVisibility(View.VISIBLE); placeSpinner.setSelection(position); }else { switchNotification.setChecked(false); placeSpinner.setVisibility(View.GONE); } android.widget.EditText editTextName = ((android.widget.EditText) (getView().findViewById(R.id.editTextName))); editTextName.setText(name); if (memo != null) { android.widget.EditText editTextMemo = ((android.widget.EditText) (getView().findViewById(R.id.editTextMemo))); editTextMemo.getEditableText().append(memo); } setCurrentTime(time); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7673/buggy-version/src.com.backflip270bb.android.tobuylist4ics.ItemDetailFragment.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndexOrThrow(ItemProviderContract.Item.ROW_ID)", "android.database.Cursor.getString(cursor.getColumnIndexOrThrow(ItemProviderContract.Item.NAME_COLUMN))", "android.database.Cursor.getColumnIndexOrThrow(ItemProviderContract.Item.MEMO_COLUMN)", "android.database.Cursor.getColumnIndexOrThrow(ItemProviderContract.Item.PLACEID_COLUMN)", "android.database.Cursor.getString(cursor.getColumnIndexOrThrow(ItemProviderContract.Item.MEMO_COLUMN))", "android.database.Cursor.getInt(cursor.getColumnIndexOrThrow(ItemProviderContract.Item.SHOULDNOTIFY_COLUMN))", "android.database.Cursor.getColumnIndexOrThrow(ItemProviderContract.Item.DATE_COLUMN)", "android.database.Cursor.getLong(cursor.getColumnIndexOrThrow(ItemProviderContract.Item.DATE_COLUMN))", "android.database.Cursor.getLong(cursor.getColumnIndexOrThrow(ItemProviderContract.Item.PLACEID_COLUMN))", "android.database.Cursor.getColumnIndexOrThrow(ItemProviderContract.Item.SHOULDNOTIFY_COLUMN)", "android.database.Cursor.getLong(cursor.getColumnIndexOrThrow(ItemProviderContract.Item.ROW_ID))", "android.database.Cursor.getColumnIndexOrThrow(ItemProviderContract.Item.NAME_COLUMN)"], "Fixed commit": "69cfbc533cdee2fb2cfb6a2d6fa0e3aeca8856b6", "Url": "https://api.github.com/repos/u-one/ToBuyList", "Date": "2014-08-15T11:28:34Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gui_main.GUI.getUserString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((username.length()) < 1) { java.lang.System.out.println((username + \" is too short!\")); gui.getUserButtonPressed(((((\"Spiller \" + playerCount) + \": Brugernavnet \") + username) + \" er for kort! - Tryk p\u00e5 ok for at forts\u00e6tte\"), \"Ok\"); }else { java.lang.System.out.println((username + \"is available\")); tempUserlist.add(username); userList.add(new domain.classes.Player(username)); validUser = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7575/buggy-version/Kode.src.gui.controllers.UIController.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.util.ArrayList<domain.classes.Player>.add(domain.classes.Player)", "java.io.PrintStream.println(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "gui_main.GUI.getUserButtonPressed(java.lang.String,java.lang.String)"], "Fixed commit": "1d7036ddc78391cafe55899cc1b137c958ccfcda", "Url": "https://api.github.com/repos/FredMar/CDIO-3", "Date": "2017-11-30T23:03:49Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.lang.reflect.Modifier.isAbstract(c.getModifiers()))) { o2 = c.newInstance(); fixOptionals(o2, m, null); fields[i].setAccessible(true); fields[i].set(o, o2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2063/buggy-version/ModelCC.src.org.modelcc.language.factory.CompositeSymbolBuilder.java", "BodyUseAPI": ["java.lang.Class.newInstance()"], "Fixed commit": "6e2144a26f98db2496e03f8b127f07f92e7d2297", "Url": "https://api.github.com/repos/lquesada/ModelCC", "Date": "2013-08-27T22:53:07Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(paymentMapRow.get(\"type\").equals(\"Cheque\"))) paymentMapRow.put(\"isPass\", \"true\"); else paymentMapRow.put(\"isPass\", java.lang.String.valueOf(isPassCheckBox.isChecked()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5975/buggy-version/app.src.main.java.mjkarbasian.moshtarimadar.Sales.DetailSaleInsert.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "4a58af65e1f89c31712dee05c3135bece9a48a4f", "Url": "https://api.github.com/repos/Kaseb/Kaseb", "Date": "2016-12-30T10:44:14Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((conversants.length()) == 0) { counter = com.ryan.fbma.AnalyzeThreadActivity.MAX; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/9212/buggy-version/src.com.ryan.fbma.AnalyzeThreadActivity.java", "BodyUseAPI": [], "Fixed commit": "db0228330f2683fa8bc45186ffe4cde4e7719097", "Url": "https://api.github.com/repos/dsouzarc/fbma", "Date": "2014-08-20T15:59:35Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isSameMonthAsToday && (todayDayOfMonth == day)) { drawCircle(canvas, xPosition, yPosition, currentDayBackgroundColor); }else if (((currentCalender.get(java.util.Calendar.DAY_OF_MONTH)) == day) && isSameMonthAsCurrentCalendar) { drawCircle(canvas, xPosition, yPosition, currentSelectedDayBackgroundColor); }else if ((day == 1) && (!isSameMonthAsCurrentCalendar)) { drawCircle(canvas, xPosition, yPosition, currentSelectedDayBackgroundColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6302/buggy-version/library.src.main.java.com.github.sundeepk.compactcalendarview.CompactCalendarController.java", "BodyUseAPI": [], "Fixed commit": "5b738ddecd9959eb6b20dcd90c9763edc51a3496", "Url": "https://api.github.com/repos/SundeepK/CompactCalendarView", "Date": "2015-12-02T14:21:04Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vmware.bdd.manager.ClusterEntityManager.findByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cluster == null) { throw com.vmware.bdd.exception.BddException.NOT_FOUND(\"Cluster\", clusterName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1234/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.manager.ClusterEntityManager.java", "BodyUseAPI": [], "Fixed commit": "57b2b663c5ca2887542dee54631d3c3dc9810302", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-08-20T10:37:25Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((query.operator) == (edu.uci.ics.textdb.dataflow.regexmatch.GramBooleanQuery.QueryOp.ANY)) || ((query.operator) == (edu.uci.ics.textdb.dataflow.regexmatch.GramBooleanQuery.QueryOp.NONE))) { s += query.operator.toString(); s += \"\\n\"; return s; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8668/buggy-version/textdb.textdb-dataflow.src.main.java.edu.uci.ics.textdb.dataflow.regexmatch.GramBooleanQuery.java", "BodyUseAPI": ["edu.uci.ics.textdb.dataflow.regexmatch.GramBooleanQuery.QueryOp.toString()"], "Fixed commit": "2eced766d3d5dc663a08e4cc2afee2877ee0e5bb", "Url": "https://api.github.com/repos/Texera/texera", "Date": "2016-07-05T18:22:41Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iValue == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8225/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.filter.OSQLFilterCondition.java", "BodyUseAPI": [], "Fixed commit": "b57027ba5c824c2f0b80856a7383053dda450e49", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2015-07-20T13:17:09Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["es.caib.gusite.front.service.NoticiasDataService.loadNoticia(java.lang.String,lang.getLang(),view.getMicrosite().getId().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((es.caib.gusite.micromodel.TraduccionNoticia) (noticia.getTraduccion(lang.getLang()))).getDocu()) == null) { es.caib.gusite.front.noticia.NoticiasController.log.error(\"No existe un documento asociado\"); return this.getForwardError(view, ErrorMicrosite.ERROR_AMBIT_PAGINA); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2377/buggy-version/moduls.front.src.es.caib.gusite.front.noticia.NoticiasController.java", "BodyUseAPI": [], "Fixed commit": "359f30eda578406f0e5e4ec532329aad83963f85", "Url": "https://api.github.com/repos/GovernIB/gusite", "Date": "2016-07-29T12:00:46Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (map.getParams().isTwoDistinctExpressionSets()) genesetsOfInterest = map.getDataset(EnrichmentMap.DATASET1).getGenesetsOfInterest().getGenesets(); else genesetsOfInterest = map.getAllGenesetsOfInterest();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8462/buggy-version/EnrichmentMapPlugin.src.main.java.org.baderlab.csplugins.enrichmentmap.task.ComputeSimilarityTask.java", "BodyUseAPI": ["org.baderlab.csplugins.enrichmentmap.model.EnrichmentMap.getDataset(EnrichmentMap.DATASET1)", "map.getDataset(EnrichmentMap.DATASET1).getGenesetsOfInterest().getGenesets()", "map.getDataset(EnrichmentMap.DATASET1).getGenesetsOfInterest()", "org.baderlab.csplugins.enrichmentmap.model.EnrichmentMap.getAllGenesetsOfInterest()"], "Fixed commit": "2f9d4a9c80c0fbce7b99b1dc1a5f969b35d72624", "Url": "https://api.github.com/repos/BaderLab/EnrichmentMapApp", "Date": "2014-01-16T20:37:48Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wrappedResponseStream) != null) { responseSize = wrappedResponseStream.size(); }else { responseSize = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4108/buggy-version/core.src.main.java.io.confluent.rest.metrics.MetricsResourceMethodApplicationListener.java", "BodyUseAPI": [], "Fixed commit": "ba7237b7afe21218382ff16d09e5e8f3cf0b037e", "Url": "https://api.github.com/repos/confluentinc/rest-utils", "Date": "2017-10-13T20:25:41Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection) != null) { try { logger.debug(\"Returning connection to pool {}\", config.getPool()); connection.close(); connection = null; } catch (final java.sql.SQLException e) { logger.warn(\"Will ignore exception thrown during connection closing\", e); } }else { logger.debug(\"Not connected so nothing to do in force disconnect\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2534/buggy-version/metrics-sampler-extension-jdbc.src.main.java.org.metricssampler.extensions.jdbc.JdbcMetricsReader.java", "BodyUseAPI": [], "Fixed commit": "b202cfc825af1eb80f06ed84c3b13976093d0672", "Url": "https://api.github.com/repos/dimovelev/metrics-sampler", "Date": "2014-01-29T16:21:32Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (moveDownOnClose) { this.animate().y(((menuAnchor) == (com.michaldrabik.tapbarmenulib.TapBarMenu.MENU_ANCHOR_BOTTOM) ? (parentView.getBottom()) - (height) : 0)).setDuration(animationDuration).setInterpolator(com.michaldrabik.tapbarmenulib.TapBarMenu.DECELERATE_INTERPOLATOR).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2665/buggy-version/library.src.main.java.com.michaldrabik.tapbarmenulib.TapBarMenu.java", "BodyUseAPI": [], "Fixed commit": "0ab2ceb96aaaf49223b3ca44be54bc459883ccc4", "Url": "https://api.github.com/repos/rosenpin/TapBarMenu", "Date": "2017-08-03T18:08:26Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (new edu.princeton.cs.algs4.DirectedCycle(digraph).hasCycle()) throw new java.lang.IllegalArgumentException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1949/buggy-version/Assignment6.src.WordNet.java", "BodyUseAPI": [], "Fixed commit": "3c7aca5453c7c8a69fbe29c0234401714db9261e", "Url": "https://api.github.com/repos/michaellohsy/Coursera-Algorithm", "Date": "2015-11-26T05:24:09Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cmdname.equals(\"cd\")) { cd(((args.length) > 0 ? args[0] : rootPath)); }else { java.lang.Class<? extends com.janosgyerik.telnetserver.commands.Command> klass = com.janosgyerik.telnetserver.shell.SimpleShell.commands.get(cmdname); if (klass == null) { writeOut(java.lang.String.format(\"%s: %s: command not found\\n\", com.janosgyerik.telnetserver.shell.SimpleShell.class.getSimpleName(), cmdname)); }else { com.janosgyerik.telnetserver.commands.Command command = createCommand(klass); for (java.lang.String line : command.execute(args)) { writeLineOut(line); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2638/buggy-version/projects.telnetserver.src.main.java.com.janosgyerik.telnetserver.shell.SimpleShell.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Class<? extends com.janosgyerik.telnetserver.commands.Command>>.get(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.String)", "com.janosgyerik.telnetserver.shell.SimpleShell.writeOut(java.lang.String)"], "Fixed commit": "d35fd0f953f52d5d9600ddd94c6cf78b4579df9d", "Url": "https://api.github.com/repos/janosgyerik/java-examples", "Date": "2014-08-29T20:41:12Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.neo4j.impl.store.prototype.neole.PropertyCursor.shortStringEncoding(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((encoding == (ShortStringEncoding.ENCODING_UTF8)) || (encoding == (ShortStringEncoding.ENCODING_LATIN1))) { return org.neo4j.impl.store.prototype.neole.ShortStringEncoding.numberOfBlocksUsedUTF8OrLatin1(stringLength); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3205/buggy-version/enterprise.runtime.neole.src.main.java.org.neo4j.impl.store.prototype.neole.PropertyCursor.java", "BodyUseAPI": [], "Fixed commit": "a019ae3ebd1fc30f059a30562ee6b4d46673fcbb", "Url": "https://api.github.com/repos/klaren/neo4j", "Date": "2017-06-21T12:40:04Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((block) == (java.lang.Integer.MIN_VALUE)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3205/buggy-version/enterprise.runtime.neole.src.main.java.org.neo4j.impl.store.prototype.neole.PropertyCursor.java", "BodyUseAPI": [], "Fixed commit": "a019ae3ebd1fc30f059a30562ee6b4d46673fcbb", "Url": "https://api.github.com/repos/klaren/neo4j", "Date": "2017-06-21T12:40:04Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (action.equals(cn.zmdx.kaka.locker.service.PandoraService.ALARM_ALERT_ACTION)) { cn.zmdx.kaka.locker.LockScreenManager.getInstance().unLock(); }else { cn.zmdx.kaka.locker.LockScreenManager.getInstance().lock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4013/buggy-version/HDLocker.src.cn.zmdx.kaka.locker.service.PandoraService.java", "BodyUseAPI": [], "Fixed commit": "1a8efb11406bda5edd983a5e0b6698a119b81e81", "Url": "https://api.github.com/repos/Mrzy/kaka", "Date": "2014-09-24T13:22:10Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((MonitorActivity.wall) != null) && ((MonitorActivity.wall.data) != null)) { com.sopinet.trazeo.app.helpers.CommentAdapter adapter = new com.sopinet.trazeo.app.helpers.CommentAdapter(root.getContext(), R.layout.comment_item, MonitorActivity.wall.data); listComments = ((android.widget.ListView) (root.findViewById(R.id.listComments))); listComments.setAdapter(adapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2498/buggy-version/app.src.main.java.com.sopinet.trazeo.app.MonitorWallFragment.java", "BodyUseAPI": [], "Fixed commit": "87bcde2ce4181e5c1d9e0afd313da5cd97537b81", "Url": "https://api.github.com/repos/sopinet/trazeo-android-app", "Date": "2014-05-22T22:16:26Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(firstLoad)) { if (((com.sopinet.trazeo.app.MonitorActivity.wall) != null) && ((com.sopinet.trazeo.app.MonitorActivity.wall.data) != null)) { if ((com.sopinet.trazeo.app.MonitorActivity.wall.data.size()) > (commentCount)) createNotification(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2498/buggy-version/app.src.main.java.com.sopinet.trazeo.app.MonitorActivity.java", "BodyUseAPI": [], "Fixed commit": "87bcde2ce4181e5c1d9e0afd313da5cd97537b81", "Url": "https://api.github.com/repos/sopinet/trazeo-android-app", "Date": "2014-05-22T22:16:26Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(params.containsKey(\"_refs_key\"))) { restrictions.add(builder.equal(root.get(\"is_discard\"), 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1929/buggy-version/src.main.java.org.jax.mgi.mgd.api.dao.ReferenceDAO.java", "BodyUseAPI": [], "Fixed commit": "d0aea1fc80e65a7ac1819205afad5ac596e242a8", "Url": "https://api.github.com/repos/mgijax/mgd_java_api", "Date": "2017-08-10T14:58:25Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ElasticSearchController.GetUserFollowingListTask.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (userFollowingList != null) { userFollowingList.getFollowings().add(new com.example.cmput301f17t19.echoes.Models.Following(loginUserProfile.getUserName())); com.example.cmput301f17t19.echoes.Controllers.ElasticSearchController.UpdateUserFollowingListTask updateUserFollowingListTask = new com.example.cmput301f17t19.echoes.Controllers.ElasticSearchController.UpdateUserFollowingListTask(); updateUserFollowingListTask.execute(userFollowingList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4206/buggy-version/Echoes.app.src.main.java.com.example.cmput301f17t19.echoes.Controllers.FollowingSharingController.java", "BodyUseAPI": ["ElasticSearchController.UpdateUserFollowingListTask.execute(com.example.cmput301f17t19.echoes.Models.UserFollowingList)", "userFollowingList.getFollowings().add(com.example.cmput301f17t19.echoes.Models.Following)", "com.example.cmput301f17t19.echoes.Models.UserFollowingList.getFollowings()"], "Fixed commit": "b77fdfdbc3480a1c3f50f3a816da72299ad2b985", "Url": "https://api.github.com/repos/CMPUT301F17T19/Echoes", "Date": "2017-12-04T22:34:18Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActivity) != null) { return new com.github.kayvannj.permission_utils.PermissionUtil.PermissionRequestObject(mActivity, permissionNames); }else { return new com.github.kayvannj.permission_utils.PermissionUtil.PermissionRequestObject(mFragment, permissionNames); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7411/buggy-version/PermissionUtils.src.main.java.com.github.kayvannj.permission_utils.PermissionUtil.java", "BodyUseAPI": [], "Fixed commit": "143ec9a8877b378e483b81b24afbd1c50304de1c", "Url": "https://api.github.com/repos/kayvannj/PermissionUtil", "Date": "2017-02-10T00:26:38Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((unique.toString().contains(\"http://www.w3.org/2000/01/rdf-schema#Literal\")) || (unique.toString().contains(\"rdfs:Literal\"))) { uniqueValue = \"http://www.w3.org/2000/01/rdf-schema#Literal\"; }else if ((unique.toString().contains(\"http://www.w3.org/2001/XMLSchema#dateTime\")) || (unique.toString().contains(\"xsd:dateTime\"))) { uniqueValue = \"http://www.w3.org/2001/XMLSchema#dateTime\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/431/buggy-version/src.main.java.eu.delving.x3ml.engine.EntityResolver.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.lang.StringBuilder.toString()", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "a0edb54c0b5fe3a09e888e3d38a9e842043b1c2e", "Url": "https://api.github.com/repos/isl/x3ml", "Date": "2016-01-21T15:33:35Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (line == null) { this.columnNames.clear(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5558/buggy-version/src.main.java.org.encog.util.csv.ReadCSV.java", "BodyUseAPI": [], "Fixed commit": "e69820988d1182673dc6864a5749c1735ca0d17b", "Url": "https://api.github.com/repos/encog/encog-java-core", "Date": "2011-08-07T11:35:27Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currFileNum) != 0) docList.clear();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1442/buggy-version/src.IO.ReadFile.java", "BodyUseAPI": [], "Fixed commit": "5ac30b84418f8e90825d1c4141b36fc6079b4b72", "Url": "https://api.github.com/repos/DL1992/Thomas", "Date": "2017-11-29T21:21:25Z"},
{"Line": "=>674", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (coyote.commons.StringUtil.isNotBlank(txnContext.getErrorMessage())) { b.append(txnContext.getErrorMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3774/buggy-version/CoyoteDX.src.main.java.coyote.dx.AbstractTransformEngine.java", "BodyUseAPI": ["java.lang.StringBuilder.append(txnContext.getErrorMessage())", "coyote.dx.context.TransactionContext.getErrorMessage()"], "Fixed commit": "0d8d731581fcb6a2c9989a98e8160c7e4a8b6210", "Url": "https://api.github.com/repos/sdcote/coyote", "Date": "2017-12-23T20:01:54Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) != null) { android.widget.Toast.makeText(this, (\"code : \" + code), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6174/buggy-version/src.com.worthed.ExplicitApiActivity.java", "BodyUseAPI": [], "Fixed commit": "05a603115dcb2a7875d36c6cf6a32052a08950ae", "Url": "https://api.github.com/repos/jingle1267/InstagramOAuthDemo", "Date": "2014-07-11T10:11:32Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.worthed.TokenUtils.getError(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(error))) { if ((this) != null) { android.widget.Toast.makeText(this, (\"error : \" + error), Toast.LENGTH_SHORT).show(); } android.util.Log.e(TAG, (\"error : \" + error)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6174/buggy-version/src.com.worthed.ExplicitApiActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(com.worthed.ExplicitApiActivity,java.lang.String,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(this, (\"error : \" + error), Toast.LENGTH_SHORT).show()", "android.util.Log.e(java.lang.String,java.lang.String)"], "Fixed commit": "05a603115dcb2a7875d36c6cf6a32052a08950ae", "Url": "https://api.github.com/repos/jingle1267/InstagramOAuthDemo", "Date": "2014-07-11T10:11:32Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tokens.length) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2031/buggy-version/src.main.java.io.github.cornellautonomousbiketeam.CsvParser.java", "BodyUseAPI": [], "Fixed commit": "5217d2367f20a2d3bf311abe503edbea4129ab8b", "Url": "https://api.github.com/repos/CornellAutonomousBikeTeam/Playback", "Date": "2017-07-19T21:11:50Z"},
{"Line": "=>1549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ItemDomainEntity.getItemElementDisplayList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((itemElementsDisplayList.size()) > 0) { for (gov.anl.aps.cdb.portal.model.db.entities.ItemElement ittrItemElement : itemElementsDisplayList) { if (ittrItemElement.getName().equalsIgnoreCase(test)) { elementNumber++; unique = false; break; }else { unique = true; } } }else { unique = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3852/buggy-version/src.java.CdbWebPortal.src.java.gov.anl.aps.cdb.portal.controllers.ItemController.java", "BodyUseAPI": [], "Fixed commit": "cff157ac1602addeac1829508bdc1c19e2ea7523", "Url": "https://api.github.com/repos/iTerminate/Component.DB", "Date": "2017-04-07T13:12:39Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (elementId != null) { org.reactome.web.diagram.util.svg.thumbnail.OMElement newHovered = svg.getElementById(elementId); if ((newHovered != null) && (newHovered != (selected))) { newHovered.setAttribute(SVGConstants.SVG_FILTER_ATTRIBUTE, org.vectomatic.dom.svg.utils.DOMHelper.toUrl(org.reactome.web.diagram.util.svg.thumbnail.HOVERING_OVERLAY_FILTER)); hovered = newHovered; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3470/buggy-version/src.main.java.org.reactome.web.diagram.util.svg.thumbnail.SVGThumbnail.java", "BodyUseAPI": ["org.reactome.web.diagram.util.svg.thumbnail.SVGThumbnail.getElementById(java.lang.String)"], "Fixed commit": "f1a4e3e16982eda1b0304d55db19b7bbcbff9cdb", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2017-01-11T16:26:18Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mp.isLooping())) { mState = com.dd.crop.TextureVideoView.State.END; com.dd.crop.TextureVideoView.log(\"Video has ended.\"); if ((mListener) != null) { mListener.onVideoEnd(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1703/buggy-version/library.src.com.dd.crop.TextureVideoView.java", "BodyUseAPI": [], "Fixed commit": "b9b4f9aabbb77a3671d3d641f0afcb8d04cad9cb", "Url": "https://api.github.com/repos/amankr/video-crop", "Date": "2015-08-18T11:18:04Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i.isCertain()) return i;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3138/buggy-version/src.main.java.il.org.spartan.refactoring.engine.type.java", "BodyUseAPI": [], "Fixed commit": "a87ef18d2fd0dfeb4f4a225780eb7d016135ee63", "Url": "https://api.github.com/repos/SpartanRefactoring/Main", "Date": "2016-09-07T13:36:16Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentDataType) >= (dataTypeAdapter2.getCount())) { mCurrentDataType = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8297/buggy-version/app.src.main.java.com.vgomc.mchelper.widget.VariableEditView.java", "BodyUseAPI": [], "Fixed commit": "8ef6dd562f9179c94ff34dc888053ec440725fc2", "Url": "https://api.github.com/repos/captainbupt/MCHelper", "Date": "2017-01-19T09:20:58Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((splitString.length) > 0) { return splitString[0]; }else { return title; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4511/buggy-version/src.org.openhab.habdroid.model.OpenHABWidgetDataSource.java", "BodyUseAPI": [], "Fixed commit": "99814bb4285096f798589899878c84e1b2b97ff4", "Url": "https://api.github.com/repos/digitaldan/openhab.android", "Date": "2014-06-04T17:28:13Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(currScene.isSelected())) { currScene.select(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/374/buggy-version/editor.core.src.main.java.es.eucm.ead.editor.view.widgets.mockup.Scenes.java", "BodyUseAPI": ["es.eucm.ead.editor.view.widgets.mockup.buttons.SceneButton.select()"], "Fixed commit": "748301ff9bed1d498e536e536f4dd77e834b4c6a", "Url": "https://api.github.com/repos/anserran/ead", "Date": "2014-06-04T15:46:21Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vanillaEncoder) == null) throw new java.lang.IllegalArgumentException((\"Unable to find vanilla encoder in \" + (originalChannel.pipeline())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5643/buggy-version/ProtocolLib.src.main.java.com.comphenix.protocol.injector.netty.ChannelInjector.java", "BodyUseAPI": [], "Fixed commit": "1aaf272878c9aadd5c6868fb44ce7d0ccbba014f", "Url": "https://api.github.com/repos/aadnk/ProtocolLib", "Date": "2013-12-08T18:50:59Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (e != null) { bugsnagClient.notify(bugsnagClient.buildReport(e).setSeverity(Severity.WARNING)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4396/buggy-version/sponge.src.main.java.net.buycraft.plugin.sponge.logging.LoggerUtils.java", "BodyUseAPI": ["com.bugsnag.Bugsnag.buildReport(java.lang.Throwable)", "com.bugsnag.Bugsnag.notify(bugsnagClient.buildReport(e).setSeverity(Severity.WARNING))", "bugsnagClient.buildReport(e).setSeverity(Severity.WARNING)"], "Fixed commit": "8918ffe8581a03b1844a24d93c029c4da379df18", "Url": "https://api.github.com/repos/BuycraftPlugin/BuycraftX", "Date": "2016-11-06T05:25:25Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (e != null) { bugsnagClient.notify(bugsnagClient.buildReport(e).setSeverity(Severity.ERROR)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4396/buggy-version/sponge.src.main.java.net.buycraft.plugin.sponge.logging.LoggerUtils.java", "BodyUseAPI": ["com.bugsnag.Bugsnag.notify(bugsnagClient.buildReport(e).setSeverity(Severity.ERROR))", "com.bugsnag.Bugsnag.buildReport(java.lang.Throwable)", "bugsnagClient.buildReport(e).setSeverity(Severity.ERROR)"], "Fixed commit": "8918ffe8581a03b1844a24d93c029c4da379df18", "Url": "https://api.github.com/repos/BuycraftPlugin/BuycraftX", "Date": "2016-11-06T05:25:25Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getQueryString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((queryString == null) || (queryString.isEmpty())) response.setHeader(\"Location\", (((request.isSecure() ? \"https://\" : \"http://\") + (website.getMobileHostName())) + requestUri)); else response.setHeader(\"Location\", (((((request.isSecure() ? \"https://\" : \"http://\") + (website.getMobileHostName())) + requestUri) + \"?\") + (request.getQueryString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4234/buggy-version/src.main.java.com.pratilipi.filter.UxModeFilter.java", "BodyUseAPI": [], "Fixed commit": "d1b6bee42de2017c7c2e83ef361df86d78449d00", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-01-28T11:48:43Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (err == null) { if ((handler.providedProcedures) != null) { proc = handler.providedProcedures.get(unreg.registrationId); } if (proc == null) { err = ApplicationError.NO_SUCH_REGISTRATION; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8008/buggy-version/src.main.java.ws.wamp.jawampa.WampRouter.java", "BodyUseAPI": [], "Fixed commit": "a5eeac0d2410cd35548fc661712b0e20c853c1d4", "Url": "https://api.github.com/repos/Matthias247/jawampa", "Date": "2014-11-18T09:36:31Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handler.pendingInvocations) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8008/buggy-version/src.main.java.ws.wamp.jawampa.WampRouter.java", "BodyUseAPI": [], "Fixed commit": "a5eeac0d2410cd35548fc661712b0e20c853c1d4", "Url": "https://api.github.com/repos/Matthias247/jawampa", "Date": "2014-11-18T09:36:31Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handler.pendingInvocations) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8008/buggy-version/src.main.java.ws.wamp.jawampa.WampRouter.java", "BodyUseAPI": [], "Fixed commit": "a5eeac0d2410cd35548fc661712b0e20c853c1d4", "Url": "https://api.github.com/repos/Matthias247/jawampa", "Date": "2014-11-18T09:36:31Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((adapter.scanresultArray) != null) { refreshArray(list); adapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4991/buggy-version/wififixer.src.org.wahtod.wififixer.ui.ScanFragment.java", "BodyUseAPI": ["org.wahtod.wififixer.ui.ScanFragment.ScanListAdapter.notifyDataSetChanged()"], "Fixed commit": "c15c6845dec5ebcfffee4836ae9ef8e4d280c1db", "Url": "https://api.github.com/repos/Zanshinmu/Wifi-Fixer", "Date": "2012-04-06T19:44:57Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (de_txt.contains(\"@\")) { de_txt = de_txt.substring(0, de_txt.indexOf(\"@\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8966/buggy-version/CRTBTunnelMonitor.src.ICT.utils.RSACoder.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "d7d23a03b8d218fa0969f03805724bae7b893dd0", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-07-08T10:33:47Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mLength > ((handler.getServletMappings().length) - 1)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8614/buggy-version/src.main.java.de.thingweb.directory.http.HTTPServer.java", "BodyUseAPI": [], "Fixed commit": "eb6e55f92a225f09850740c5d873e8e68a9f1411", "Url": "https://api.github.com/repos/onovo1/thingweb-directory", "Date": "2017-11-21T09:00:53Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((crlValidity.getIssuerToken()) != null) { this.issuerToken = crlValidity.getIssuerToken(); this.issuerX500Principal = crlValidity.getIssuerToken().getSubjectX500Principal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5898/buggy-version/dss-spi.src.main.java.eu.europa.esig.dss.x509.crl.CRLToken.java", "BodyUseAPI": ["eu.europa.esig.dss.x509.crl.CRLValidity.getIssuerToken()", "crlValidity.getIssuerToken().getSubjectX500Principal()", "eu.europa.esig.dss.x509.crl.CRLValidity.getIssuerToken()"], "Fixed commit": "19ff4b67783bab9ce1245bc9c991ea94c2cfe625", "Url": "https://api.github.com/repos/open-eid/sd-dss", "Date": "2017-03-17T10:11:25Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.ibuildthecloud.gdapi.request.parser.DefaultApiRequestParser.parseMultipart(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (multiPart == null) { multiPart = com.google.common.collect.Maps.newHashMap(); java.util.Map<java.lang.String, java.lang.String[]> map = request.getParameterMap(); for (java.lang.String key : map.keySet()) { multiPart.put(key, map.get(key)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1023/buggy-version/code.framework.java-server.src.main.java.io.github.ibuildthecloud.gdapi.request.parser.DefaultApiRequestParser.java", "BodyUseAPI": [], "Fixed commit": "e2740c3349f2dfab3a2c1631f1552dab2a350306", "Url": "https://api.github.com/repos/kingsmiler/cattle", "Date": "2016-02-14T07:42:41Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ast.getFirstChild().getType()) == (com.puppycrawl.tools.checkstyle.api.TokenTypes.RESOURCE_SPECIFICATION)) { lcurly = ast.getFirstChild().getNextSibling(); }else { lcurly = ast.getFirstChild(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6510/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()", "ast.getFirstChild().getNextSibling()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()"], "Fixed commit": "1bbc7d7bd9da5adba2e3edaf9c3219602a3e1ad5", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2017-01-30T20:29:10Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (nextToken == null) { shouldCheckLastRcurly = true; nextToken = com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck.getNextToken(ast); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6510/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck.java", "BodyUseAPI": [], "Fixed commit": "1bbc7d7bd9da5adba2e3edaf9c3219602a3e1ad5", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2017-01-30T20:29:10Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str == null) || ((str.length()) < 2)) return str;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5263/buggy-version/src.org.fastj.fit.tool.StringUtil.java", "BodyUseAPI": [], "Fixed commit": "bcc3ddcc6517acffd291aecd06d2cf610430b740", "Url": "https://api.github.com/repos/fastj/fit", "Date": "2016-01-06T05:26:00Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((pratilipi.getAuthor()) != null) this.author = new com.pratilipi.api.impl.pratilipi.shared.GetPratilipiListResponse.Author(pratilipi.getAuthor());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5414/buggy-version/src.main.java.com.pratilipi.api.impl.pratilipi.shared.GetPratilipiListResponse.java", "BodyUseAPI": [], "Fixed commit": "b65282bcebdd853f553380472fd05e8dea7c487e", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-01-18T09:02:43Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cakephp.netbeans.module.CakePhpModule.getCakePhpDirectory(org.netbeans.modules.php.api.phpmodule.PhpModule)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (root == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/108/buggy-version/src.org.cakephp.netbeans.util.CakeVersion.java", "BodyUseAPI": [], "Fixed commit": "a00019ff27bb135443634acb5ea77d6476a0c1ed", "Url": "https://api.github.com/repos/junichi11/cakephp-netbeans", "Date": "2013-02-22T02:18:58Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos == 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6785/buggy-version/src.ch.blinkenlights.android.vanilla.MusicAlphabetIndexer.java", "BodyUseAPI": [], "Fixed commit": "5b2774be44f4a6243b2d5ac6739086f89b658a1d", "Url": "https://api.github.com/repos/NextLight/vanilla", "Date": "2014-08-11T07:53:51Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idx != (-1)) { suffix = trgBandName.substring(trgBandName.indexOf(\"_\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6613/buggy-version/s1tbx-op-sar-processing.src.main.java.org.esa.nest.gpf.geometric.TerrainFlatteningOp.java", "BodyUseAPI": [], "Fixed commit": "8515642beff976a7d9652bbbec08a56512263056", "Url": "https://api.github.com/repos/senbox-org/s1tbx", "Date": "2014-10-30T19:31:29Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closed) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8645/buggy-version/connectors-fsuipc.src.main.java.de.newsarea.homecockpit.connector.fsuipc.FSUIPCHttpConnector.java", "BodyUseAPI": [], "Fixed commit": "64322b62444e2052dccb1cc2aaedd69fd2325a9b", "Url": "https://api.github.com/repos/RBernhardt/homecockpit-connectors", "Date": "2014-04-21T20:14:49Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (otherCollectable == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3767/buggy-version/src.saga-desktop.src.net.wombatrpgs.saga.rpg.items.Collectable.java", "BodyUseAPI": [], "Fixed commit": "e587d2c425fa13c09c62e0c514a7a4566172b2ec", "Url": "https://api.github.com/repos/psywombats/mgne", "Date": "2015-06-07T21:27:43Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.storages().containsKey(\"lda\")) { try { this.storages().get(\"lda\").deleteCandidate(label, itemID); } catch (java.lang.NullPointerException e) { if (org.plista.kornakapi.web.servlets.DeleteCandidateServlet.log.isInfoEnabled()) { org.plista.kornakapi.web.servlets.DeleteCandidateServlet.log.info(\"No LDARecommender configured\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5392/buggy-version/src.main.java.org.plista.kornakapi.web.servlets.DeleteCandidateServlet.java", "BodyUseAPI": [], "Fixed commit": "4e139f27765370da57353fdca61c049949167701", "Url": "https://api.github.com/repos/KukumavMozolo/kornakapi", "Date": "2015-01-30T11:09:54Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(l.getItemAtPosition(pos).toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ma.group(1).equals(\"2130837634\")) in.putExtra(\"SEXE\", \"H\"); else in.putExtra(\"SEXE\", \"F\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8771/buggy-version/app.src.main.java.com.example.mely.seemy_v11.Messages.java", "BodyUseAPI": [], "Fixed commit": "15a95e1b846565a991947281821dac605ccd7f04", "Url": "https://api.github.com/repos/Mel1ssa/Seemy", "Date": "2017-05-30T01:09:35Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position < 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6089/buggy-version/src.main.java.cofh.lib.gui.element.ElementListBox.java", "BodyUseAPI": [], "Fixed commit": "673b42ec326b0768710160ee7c2cbb9578dddeb7", "Url": "https://api.github.com/repos/CoFH/CoFHLib", "Date": "2015-07-29T23:05:54Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.channel.embedded.EmbeddedChannel.readOutbound()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(buf.isReadable())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1672/buggy-version/codec-http.src.main.java.io.netty.handler.codec.http.HttpContentEncoder.java", "BodyUseAPI": [], "Fixed commit": "986b2a3621294517d66624f34d0451522b51ed8b", "Url": "https://api.github.com/repos/netty/netty", "Date": "2013-07-10T15:42:34Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bladerunnerjs.model.BundlableNode.assetLocation(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bundlableNodeResources != null) { for (org.bladerunnerjs.model.ThemesAssetLocation theme : ((org.bladerunnerjs.model.AbstractResourcesAssetLocation) (bundlableNodeResources)).themes()) { bundlableNodeThemes.add(theme.getThemeName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5333/buggy-version/brjs-core.src.main.java.org.bladerunnerjs.plugin.plugins.brjsconformant.BRJSConformantAssetLocationPlugin.java", "BodyUseAPI": [], "Fixed commit": "7fda5001815f87e809cd787d60484f23b40a7c2d", "Url": "https://api.github.com/repos/BladeRunnerJS/brjs", "Date": "2014-05-19T15:35:02Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.floschlo.smokingspots.SpotLoader.loadAllSpots(android.app.Activity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((spots.size()) > count) { for (int i = (spots.size()) - 1; i >= ((spots.size()) - count); i--) { cards.add(spots.get(i).getCard(act)); } }else if ((spots.size()) <= count) { for (int i = (spots.size()) - 1; i >= 0; i--) { cards.add(spots.get(i).getCard(act)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2997/buggy-version/src.de.floschlo.smokingspots.SpotManager.java", "BodyUseAPI": ["java.util.ArrayList<de.floschlo.smokingspots.Spot>.size()", "java.util.ArrayList<it.gmariotti.cardslib.library.internal.Card>.add(spots.get(i).getCard(act))", "java.util.ArrayList<it.gmariotti.cardslib.library.internal.Card>.add(spots.get(i).getCard(act))", "java.util.ArrayList<de.floschlo.smokingspots.Spot>.size()", "spots.get(i).getCard(android.app.Activity)", "spots.get(i).getCard(android.app.Activity)", "java.util.ArrayList<de.floschlo.smokingspots.Spot>.size()", "java.util.ArrayList<de.floschlo.smokingspots.Spot>.size()", "java.util.ArrayList<de.floschlo.smokingspots.Spot>.get(int)", "java.util.ArrayList<de.floschlo.smokingspots.Spot>.get(int)"], "Fixed commit": "bbcc9795e41a30712b92a3f53b7a5155bcac8cbb", "Url": "https://api.github.com/repos/FloEarlyGrave/SmokingSpots", "Date": "2014-08-06T11:42:25Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ncbiMatcher.matches()) { if ((ncbiNewMatcher.group(2)) == null) { return ncbiNewMatcher.group(1); }else { return (ncbiNewMatcher.group(1)) + (ncbiNewMatcher.group(2)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3251/buggy-version/bio.sources.fasta.main.src.org.intermine.bio.dataconversion.NCBIFastaLoaderTask.java", "BodyUseAPI": [], "Fixed commit": "17ca30503a48c243c8122439edb6ccd57dc53752", "Url": "https://api.github.com/repos/mlyne/intermine", "Date": "2014-09-25T08:58:17Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mSearching) { discoveryProvider.restart(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2222/buggy-version/src.com.connectsdk.discovery.DiscoveryManager.java", "BodyUseAPI": [], "Fixed commit": "a1052da9d8bbf81fad30cc6c1005751ced348b50", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android-Core", "Date": "2015-02-15T14:24:31Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedEntity) != null) { return selectedEntity.getLocation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8681/buggy-version/src.model.player.Player.java", "BodyUseAPI": [], "Fixed commit": "2054b5dc1ca30cdf74edaf8ff9242669ddaca501", "Url": "https://api.github.com/repos/DownWithOOP/Iteration1", "Date": "2017-02-06T13:39:14Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedEntity) != null) { selectedEntity.resume(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8681/buggy-version/src.model.player.Player.java", "BodyUseAPI": [], "Fixed commit": "2054b5dc1ca30cdf74edaf8ff9242669ddaca501", "Url": "https://api.github.com/repos/DownWithOOP/Iteration1", "Date": "2017-02-06T13:39:14Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((player.getSelectedRallyPoint()) != null) && ((player.getSelectedEntity()) != null)) { player.setSelectedAction(player.getSelectedEntity().cycleThroughActions(actionModifier)); }else { if ((player.getSelectedRallyPoint()) != null) { player.setSelectedAction(player.getSelectedRallyPoint().cycleThroughActions(actionModifier)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8681/buggy-version/src.model.actions.playerActions.CycleCommandAction.java", "BodyUseAPI": ["model.actions.playerActions.CycleCommandAction.getSelectedEntity()", "model.actions.playerActions.CycleCommandAction.setSelectedAction(player.getSelectedRallyPoint().cycleThroughActions(actionModifier))", "model.actions.playerActions.CycleCommandAction.getSelectedRallyPoint()", "model.actions.playerActions.CycleCommandAction.getSelectedRallyPoint()", "player.getSelectedRallyPoint().cycleThroughActions(model.actions.playerActions.CycleCommandAction)", "model.actions.playerActions.CycleCommandAction.setSelectedAction(player.getSelectedEntity().cycleThroughActions(actionModifier))", "player.getSelectedEntity().cycleThroughActions(model.actions.playerActions.CycleCommandAction)"], "Fixed commit": "2054b5dc1ca30cdf74edaf8ff9242669ddaca501", "Url": "https://api.github.com/repos/DownWithOOP/Iteration1", "Date": "2017-02-06T13:39:14Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((article.getTables()[s].cells) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8123/buggy-version/src.tablInEx.TablInExMain.java", "BodyUseAPI": [], "Fixed commit": "b80dd4fda787a06ec02d335d6c6809d04d0b18a5", "Url": "https://api.github.com/repos/nikolamilosevic86/TableDisentangler", "Date": "2015-06-01T15:53:16Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.endsWith(\"/\")) { return path.substring(0, path.lastIndexOf('/')); }else { return path.substring(0, ((path.lastIndexOf('/')) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1350/buggy-version/src.main.java.com.bolyartech.forge.server.route.RouteRegisterImpl.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(char)", "java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "3034de2843d567b552d6f4fefd89f888d13d550b", "Url": "https://api.github.com/repos/ogrebgr/forge-server", "Date": "2017-10-29T13:25:45Z"},
{"Line": "=>2207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getDialect().analyzeExpression(org.drools.compiler.rule.builder.PackageBuildContext,org.drools.compiler.lang.descr.AbstractClassTypeDeclarationDescr,java.lang.String,org.drools.compiler.compiler.BoundIdentifiers)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (results != null) { org.drools.core.spi.InternalReadAccessor reader = pkg.getClassFieldAccessorStore().getMVELReader(org.drools.core.util.ClassUtils.getPackage(type.getTypeClass()), type.getTypeClass().getName(), duration, type.isTypesafe(), results.getReturnType()); org.drools.core.rule.MVELDialectRuntimeData data = ((org.drools.core.rule.MVELDialectRuntimeData) (pkg.getDialectRuntimeRegistry().getDialectData(\"mvel\"))); data.addCompileable(((org.drools.core.base.mvel.MVELCompileable) (reader))); ((org.drools.core.base.mvel.MVELCompileable) (reader)).compile(data); type.setDurationExtractor(reader); }else { this.results.add(new org.drools.compiler.compiler.TypeDeclarationError(typeDescr, ((((\"Error processing @duration for TypeDeclaration '\" + (type.getTypeName())) + \"': cannot access the field '\") + duration) + \"'\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5140/buggy-version/drools-compiler.src.main.java.org.drools.compiler.compiler.PackageBuilder.java", "BodyUseAPI": ["pkg.getClassFieldAccessorStore().getMVELReader(org.drools.core.util.ClassUtils.getPackage(type.getTypeClass()),type.getTypeClass().getName(),java.lang.String,type.isTypesafe(),results.getReturnType())", "org.drools.compiler.rule.builder.dialect.mvel.MVELAnalysisResult.getReturnType()"], "Fixed commit": "f846a36910860e93c9e52a9b09e800765b3f7d42", "Url": "https://api.github.com/repos/etirelli/drools", "Date": "2013-04-03T12:07:11Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((listForSearch.size()) > 0) { final java.util.List<com.awesomeapp.yartists.model.Artist> filteredArtistList = filter(listForSearch, newText); adapter.animateTo(filteredArtistList); recyclerArtists.scrollToPosition(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2294/buggy-version/app.src.main.java.com.awesomeapp.yartists.activities.MainActivity.java", "BodyUseAPI": ["com.awesomeapp.yartists.activities.MainActivity.3.filter(java.util.List<com.awesomeapp.yartists.model.Artist>,java.lang.String)"], "Fixed commit": "4bc621ebe2a049636f672073598cd48918cd63e2", "Url": "https://api.github.com/repos/vladguriev/YArtists", "Date": "2016-04-24T22:58:27Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { savedEnableRepost = savedInstanceState.getBoolean(\"repost\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7987/buggy-version/src.org.qii.weiciyuan.ui.send.WriteReplyToCommentActivity.java", "BodyUseAPI": ["android.os.Bundle.getBoolean(java.lang.String)"], "Fixed commit": "02bc60ca28116b080e8d42f1f1a912569bd20b13", "Url": "https://api.github.com/repos/Jewelzqiu/weiciyuan", "Date": "2012-12-30T08:59:39Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isPassingOnQueue)) { isPassingOnQueue = true; invokeQueueActions(calledInOnMeasure, queueActions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3018/buggy-version/cardsLayout.src.main.java.ua.jenshensoft.cardslayout.views.updater.ViewUpdater.java", "BodyUseAPI": [], "Fixed commit": "c11126fcf8e498414268a47ce0c45f471a7d468f", "Url": "https://api.github.com/repos/JenshenSoft/CardsLayoutSample", "Date": "2017-06-28T13:51:24Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(observers.contains(observer))) { observers.add(observer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4967/buggy-version/ProjectAdlez.core.src.com.mygdx.game.model.characters.Character.java", "BodyUseAPI": ["java.util.List<com.mygdx.game.model.core.WorldObjectObserver>.add(com.mygdx.game.model.core.WorldObjectObserver)"], "Fixed commit": "b732e4df2ca325b6acc6434fe46d3bd86dc19119", "Url": "https://api.github.com/repos/pontusthome/Adlez", "Date": "2016-05-26T07:19:46Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(listeners.contains(listener))) { listeners.add(listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4967/buggy-version/ProjectAdlez.core.src.com.mygdx.game.model.characters.FriendlyNPC.java", "BodyUseAPI": ["java.util.List<com.mygdx.game.model.characters.ShopOpenListener>.add(com.mygdx.game.model.characters.ShopOpenListener)"], "Fixed commit": "b732e4df2ca325b6acc6434fe46d3bd86dc19119", "Url": "https://api.github.com/repos/pontusthome/Adlez", "Date": "2016-05-26T07:19:46Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(listeners.contains(listener))) { listeners.add(listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4967/buggy-version/ProjectAdlez.core.src.com.mygdx.game.model.obstacles.AreaConnection.java", "BodyUseAPI": ["java.util.List<com.mygdx.game.model.core.GateOpenListener>.add(com.mygdx.game.model.core.GateOpenListener)"], "Fixed commit": "b732e4df2ca325b6acc6434fe46d3bd86dc19119", "Url": "https://api.github.com/repos/pontusthome/Adlez", "Date": "2016-05-26T07:19:46Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bluepowermod.api.BPApi.getInstance().getPneumaticTube(message.getTileEntity(player.worldObj))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (!((logic == null) || ((message.stack) == null))) { logic.onClientTubeRedirectPacket(message.stack); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6414/buggy-version/src.main.java.com.bluepowermod.network.messages.MessageRedirectTubeStack.java", "BodyUseAPI": ["com.bluepowermod.part.tube.TubeLogic.onClientTubeRedirectPacket(com.bluepowermod.part.tube.TubeStack)"], "Fixed commit": "518a84a9af403214accbc49ef469def515ff7f2d", "Url": "https://api.github.com/repos/Qmunity/BluePower", "Date": "2014-11-09T14:20:31Z"},
{"Line": "=>1373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.pushedUserFromHttpSession) { try { getBroker().popSubject(); } finally { this.pushedUserFromHttpSession = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2168/buggy-version/src.org.exist.xquery.XQueryContext.java", "BodyUseAPI": [], "Fixed commit": "9354e535a4f72f032985bbc3813d921c877c6afd", "Url": "https://api.github.com/repos/wolfgangmm/exist", "Date": "2015-11-07T21:27:08Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fontSize) < 16) { return ((int) (39 * (metrics.density))); }else { return (minRowHeight) + ((int) (10 * (metrics.density))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2824/buggy-version/astrid.src.com.todoroo.astrid.adapter.TaskAdapter.java", "BodyUseAPI": [], "Fixed commit": "b022f0fb38b8b95ae7bcc7fdb3a2355790dd23db", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2012-12-07T20:16:40Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.ItemStack.getItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tool == (joshie.harvest.tools.HFTools.WATERING_CAN)) return tier;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3021/buggy-version/src.main.java.joshie.harvest.quests.trade.QuestUpgrade.java", "BodyUseAPI": [], "Fixed commit": "f9e750abac3852e2c7611c4a8006b94ca98ed7ed", "Url": "https://api.github.com/repos/PenguinSquad/Harvest-Festival", "Date": "2016-09-14T01:52:07Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player >= (players.size())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2697/buggy-version/core.src.com.mygdx.game.gameEngine.managers.HitManager.java", "BodyUseAPI": [], "Fixed commit": "b1b142f6b07239c4bd32f7029179f088ed747e43", "Url": "https://api.github.com/repos/soflarb/Unexpected-Magic", "Date": "2017-05-25T16:06:39Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player >= (players.size())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2697/buggy-version/core.src.com.mygdx.game.gameEngine.managers.HitManager.java", "BodyUseAPI": [], "Fixed commit": "b1b142f6b07239c4bd32f7029179f088ed747e43", "Url": "https://api.github.com/repos/soflarb/Unexpected-Magic", "Date": "2017-05-25T16:06:39Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m.size()) != (size())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5789/buggy-version/upa-impl.src.main.java.net.vpc.upa.impl.AbstractDocument.java", "BodyUseAPI": [], "Fixed commit": "4509be98f39e9099ecbe4026f6806c7dabd6eea2", "Url": "https://api.github.com/repos/thevpc/upa", "Date": "2017-08-18T20:26:39Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == (this)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5789/buggy-version/upa-impl.src.main.java.net.vpc.upa.impl.AbstractDocument.java", "BodyUseAPI": [], "Fixed commit": "4509be98f39e9099ecbe4026f6806c7dabd6eea2", "Url": "https://api.github.com/repos/thevpc/upa", "Date": "2017-08-18T20:26:39Z"},
{"Line": "=>757", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.cubrid.common.core.util.CompatibleUtil.isCommentSupports(databaseInfo)) { attr.setDescription(rs.getString(\"comment\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8022/buggy-version/com.cubrid.cubridmanager.core.src.com.cubrid.cubridmanager.core.cubrid.table.task.GetSchemaTask.java", "BodyUseAPI": [], "Fixed commit": "08d8e8f50ff4f7681e944425f9a42cfd4345318e", "Url": "https://api.github.com/repos/hun-a/cubrid-manager", "Date": "2017-05-17T05:59:17Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.cubrid.common.core.schemacomment.SchemaCommentHandler.isInstalledMetaTable(databaseInfo, connection)) { schemaInfo.setDescription(rs.getString(\"comment\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8022/buggy-version/com.cubrid.cubridmanager.core.src.com.cubrid.cubridmanager.core.cubrid.table.task.GetSchemaTask.java", "BodyUseAPI": [], "Fixed commit": "08d8e8f50ff4f7681e944425f9a42cfd4345318e", "Url": "https://api.github.com/repos/hun-a/cubrid-manager", "Date": "2017-05-17T05:59:17Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5094/buggy-version/src.com.pratilipi.data.access.DataAccessorWithMemcache.java", "BodyUseAPI": [], "Fixed commit": "6fdde8833827ea691dc50b7411a27c9e69af889c", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-01-13T08:53:15Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.world) != null) { return super.getTileEntity(this.world); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5433/buggy-version/src.main.java.universalelectricity.api.vector.VectorWorld.java", "BodyUseAPI": [], "Fixed commit": "c556101615856454f25954361c7d53e90a46d8f1", "Url": "https://api.github.com/repos/Universal-Electricity/Universal-Electricity", "Date": "2014-05-13T17:12:54Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((VWOSnapshot.child(\"Name\").getValue()) != null) VWOArrayList.add(VWOSnapshot.child(\"Name\").getValue().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/485/buggy-version/WeVo.app.src.main.java.com.example.deversity.wevo.ui.listTab.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(VWOSnapshot.child(\"Name\").getValue().toString())", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "VWOSnapshot.child(\"Name\").getValue()", "VWOSnapshot.child(\"Name\").getValue().toString()"], "Fixed commit": "b7dc491a139074ab469629c5860d1c583212a7da", "Url": "https://api.github.com/repos/KamikidFu/NTU-CZ2006-Diversity", "Date": "2017-11-11T06:32:39Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (indexVal < 0) { throw org.ballerinalang.util.exceptions.BLangExceptionHelper.getRuntimeException(RuntimeErrors.ARRAY_INDEX_OUT_OF_RANGE, index, size); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5830/buggy-version/modules.ballerina-core.src.main.java.org.ballerinalang.model.values.BArray.java", "BodyUseAPI": [], "Fixed commit": "e5496cf0e798679372927f5c9d149028cbe914b2", "Url": "https://api.github.com/repos/djkevincr/ballerina", "Date": "2017-04-06T15:07:25Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id < 0) id += 256;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6730/buggy-version/src.minicraft.level.tile.Tiles.java", "BodyUseAPI": [], "Fixed commit": "4d9e8473c3bc64da531411edb16d93bfc68124e7", "Url": "https://api.github.com/repos/chrisj42/minicraft-plus-revived", "Date": "2017-07-27T21:46:28Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minicraft.Game.levels[currentLevel]) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6730/buggy-version/src.minicraft.Game.java", "BodyUseAPI": [], "Fixed commit": "4d9e8473c3bc64da531411edb16d93bfc68124e7", "Url": "https://api.github.com/repos/chrisj42/minicraft-plus-revived", "Date": "2017-07-27T21:46:28Z"},
{"Line": "=>606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minicraft.Game.isValidClient()) && (input.getKey(\"alt-t\").clicked)) { minicraft.Game.client.requestTile(player.getLevel(), ((player.x) >> 4), ((player.y) >> 4)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6730/buggy-version/src.minicraft.Game.java", "BodyUseAPI": [], "Fixed commit": "4d9e8473c3bc64da531411edb16d93bfc68124e7", "Url": "https://api.github.com/repos/chrisj42/minicraft-plus-revived", "Date": "2017-07-27T21:46:28Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getFragmentManager().beginTransaction().add(R.id.list_frag, new com.example.android.stockshawk.ui.SymbolFragment()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2764/buggy-version/app.src.main.java.com.example.android.stockshawk.ui.MasterDetail.java", "BodyUseAPI": [], "Fixed commit": "dd9c0bb56677b5db28761ba0b24bed5d3f417887", "Url": "https://api.github.com/repos/karl-denby/UdacityStocksHawk", "Date": "2017-05-21T18:27:25Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type != (e.type)) && ((e.type) == (com.irccloud.android.CollapsedEventsList.TYPE_NICKCHANGE))) { e.type = type; e.from_mode = from_mode; e.hostmask = hostmask; e.nick = nick; e.msg = msg; }else if (type == (com.irccloud.android.CollapsedEventsList.TYPE_MODE)) { e.from_mode = target_mode; }else if ((e.type) == type) { }else if (type == (com.irccloud.android.CollapsedEventsList.TYPE_JOIN)) { e.type = com.irccloud.android.CollapsedEventsList.TYPE_POPOUT; e.from_mode = from_mode; }else if ((e.type) == (com.irccloud.android.CollapsedEventsList.TYPE_POPOUT)) { e.type = type; }else { e.type = com.irccloud.android.CollapsedEventsList.TYPE_POPIN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/123/buggy-version/src.com.irccloud.android.CollapsedEventsList.java", "BodyUseAPI": [], "Fixed commit": "afcfc52eecda4e730261b2b14a3783d50d583a14", "Url": "https://api.github.com/repos/irccloud/android", "Date": "2013-11-26T16:34:48Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getReminder()) != null) || ((t.getReminder()) != null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5164/buggy-version/src.de.azapps.mirakel.model.task.Task.java", "BodyUseAPI": [], "Fixed commit": "6e1dc33c50886cb54a8db6a77f9fe56d7aef9339", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-10-01T15:43:26Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getCurrentShowFragment().getListView().getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (view == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/97/buggy-version/src.org.qii.weiciyuan.support.lib.RefreshTimeWorker.java", "BodyUseAPI": [], "Fixed commit": "e6481e6eb7ae342b91e4af160dbb0182eef164f3", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-10-01T05:32:37Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tree == null) { return tree; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8804/buggy-version/src.Blockchain.AvlTree.java", "BodyUseAPI": [], "Fixed commit": "ea15947364ae6a2c5c82d911e541eaabd43c350e", "Url": "https://api.github.com/repos/sebasfavaron/Blockchain", "Date": "2017-10-12T01:16:24Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.parse.ParseUser.getList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (savedTags != null) { for (java.lang.String temp : savedTags) { mUserTagsNames.add(temp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1643/buggy-version/app.src.main.java.com.example.davidzhu.beacon.Search.java", "BodyUseAPI": [], "Fixed commit": "abbc4494bc4deca10e9ce7eb3b62a45a5b11671a", "Url": "https://api.github.com/repos/dyzhu12/Beacon", "Date": "2016-05-18T09:53:57Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dk.kaspergsm.stormdeploy.userprovided.Configuration.getRawConfigValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (version.equals(\"3.4.8\")) { return \"https://s3-eu-west-1.amazonaws.com/zk-releases/zookeeper-3.4.8.tar.gz\"; }else { dk.kaspergsm.stormdeploy.userprovided.Configuration.log.info(\"Zookeeper version not currently supported!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8359/buggy-version/src.dk.kaspergsm.stormdeploy.userprovided.Configuration.java", "BodyUseAPI": [], "Fixed commit": "b325be432302ed4c0d8a2997a8bcde5d63f9da14", "Url": "https://api.github.com/repos/KasperMadsen/storm-deploy-alternative", "Date": "2016-08-09T15:01:34Z"},
{"Line": "=>727", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((operands.size()) == 0) operands.add(nodes.elementAt(1).accept(this, argu));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1368/buggy-version/src.java.sizzle.compiler.CodeGeneratingVisitor.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(nodes.elementAt(1).accept(this, argu))"], "Fixed commit": "771ba19f190dcd5539c3fd75345b2d4ad0cc356a", "Url": "https://api.github.com/repos/psybers/Sizzle", "Date": "2012-07-20T21:50:11Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_activity.getWindow().getCurrentFocus()) != null) _activity.getWindow().getCurrentFocus().clearFocus();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8564/buggy-version/Chem_Calc.src.com.example.chem_calc.BackListView.java", "BodyUseAPI": ["_activity.getWindow().getCurrentFocus()", "_activity.getWindow().getCurrentFocus().clearFocus()", "android.app.Activity.getWindow()"], "Fixed commit": "ea45fcce1eac5196636b5011c81cc12d0727f63a", "Url": "https://api.github.com/repos/pollend/chemistry-calculator", "Date": "2014-04-25T23:15:23Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getJdbcTemplate().query(java.lang.String,org.springframework.jdbc.core.BeanPropertyRowMapper<com.group10.dbmodels.OTP>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((matches.get(0).getIssueTime()) == null) return retVal;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2843/buggy-version/BankingApp.src.main.java.com.group10.dao.otp.OneTimePasswordDao.java", "BodyUseAPI": [], "Fixed commit": "afd929c7243237a9f91a105479b45cf647d18129", "Url": "https://api.github.com/repos/elanmarkov/CSE545Group10F17", "Date": "2017-10-28T22:25:58Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null == args) { t.__setRenderArg(0, null); }else if (1 == (args.length)) { java.lang.Object o0 = args[0]; if (o0 instanceof java.util.Map) { t.__setRenderArgs(((java.util.Map<java.lang.String, java.lang.Object>) (args[0]))); }else if (o0 instanceof com.greenlaw110.rythm.utils.JSONWrapper) { t.__setRenderArg(((com.greenlaw110.rythm.utils.JSONWrapper) (o0))); }else { t.__setRenderArgs(args); } }else { t.__setRenderArgs(args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8892/buggy-version/src.main.java.com.greenlaw110.rythm.RythmEngine.java", "BodyUseAPI": ["com.greenlaw110.rythm.ITemplate.__setRenderArgs(java.lang.Object[])", "com.greenlaw110.rythm.ITemplate.__setRenderArgs(java.lang.Object)", "com.greenlaw110.rythm.ITemplate.__setRenderArgs(java.lang.Object[])"], "Fixed commit": "1a769566215b75ef8cf2f011c642ecb78c766d62", "Url": "https://api.github.com/repos/greenlaw110/Rythm", "Date": "2013-03-16T12:24:52Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (indexOfColon == (-1)) { de.hanbei.httpserver.request.RequestParser.LOGGER.info(\"No header field {}\", line); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4279/buggy-version/src.main.java.de.hanbei.httpserver.request.RequestParser.java", "BodyUseAPI": [], "Fixed commit": "3ca444d1cae311adc97cfbc9932facfb3f2c02aa", "Url": "https://api.github.com/repos/hanbei/mock-httpserver", "Date": "2011-05-29T20:09:11Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fieldValue.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4279/buggy-version/src.main.java.de.hanbei.httpserver.request.RequestParser.java", "BodyUseAPI": [], "Fixed commit": "3ca444d1cae311adc97cfbc9932facfb3f2c02aa", "Url": "https://api.github.com/repos/hanbei/mock-httpserver", "Date": "2011-05-29T20:09:11Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkLocationPermission(getContext())) { android.widget.Toast.makeText(getActivity(), \"Erreur, donn\u00e9es de localisation introuvables, veuillez activer votre GPS s'ils vous plait\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8800/buggy-version/app.src.main.java.lahzouz.com.campusalert.view.ui.AlertNewFragment.java", "BodyUseAPI": [], "Fixed commit": "3579d65ee50e06890c1498b5e3822333427bb181", "Url": "https://api.github.com/repos/Sparow199/CampusAlerte", "Date": "2017-12-08T19:08:13Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkLocationPermission(getContext())) { android.widget.Toast.makeText(getActivity(), \"Veuillez activer votre GPS s'ils vous plait\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8800/buggy-version/app.src.main.java.lahzouz.com.campusalert.view.ui.AlertNewFragment.java", "BodyUseAPI": [], "Fixed commit": "3579d65ee50e06890c1498b5e3822333427bb181", "Url": "https://api.github.com/repos/Sparow199/CampusAlerte", "Date": "2017-12-08T19:08:13Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.math.stat.StatUtils.variance(double[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (vg == 0) { gear.util.Logger.printUserLog(\"Vg=0, heritability is scale to zero.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3452/buggy-version/GEAR.src.gear.subcommands.simuqtreal.SimulationQTRealCommandImpl.java", "BodyUseAPI": [], "Fixed commit": "b445efcf5ea92aaf55c31baf236cebe42f1d8f5f", "Url": "https://api.github.com/repos/gc5k/GEAR", "Date": "2016-08-30T04:45:06Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((!(isTaskRoot())) && (getIntent().hasCategory(Intent.CATEGORY_LAUNCHER))) && ((getIntent().getAction()) != null)) && (getIntent().getAction().equals(Intent.ACTION_MAIN))) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/746/buggy-version/app.src.main.java.com.randomappsinc.foodbutton.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "961b9471a83614fa7726d7afac713f5052204590", "Url": "https://api.github.com/repos/Gear61/Food-Button", "Date": "2016-05-19T05:42:39Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.x42.terye.persistence.hbase.HBasePersistenceManager.getRow(org.apache.hadoop.hbase.client.HTable,id.toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4444/buggy-version/hbase-firsthops.src.main.java.ch.x42.terye.persistence.hbase.HBasePersistenceManager.java", "BodyUseAPI": [], "Fixed commit": "01edddb6dce7b11aba57c76a7c83055bac5abf04", "Url": "https://api.github.com/repos/bdelacretaz/terye", "Date": "2012-11-08T14:04:35Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.eobjects.analyzer.job.runner.RowProcessingConsumer>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (consumer.isConcurrent()) { consumer.consume(_row, 1, _outcomes, this); }else { synchronized(consumer) { consumer.consume(_row, 1, _outcomes, this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7255/buggy-version/core.src.main.java.org.eobjects.analyzer.job.runner.ConsumeRowHandlerDelegate.java", "BodyUseAPI": ["org.eobjects.analyzer.job.runner.RowProcessingConsumer.consume(org.eobjects.analyzer.data.InputRow,int,org.eobjects.analyzer.job.runner.OutcomeSink,org.eobjects.analyzer.job.runner.ConsumeRowHandlerDelegate)", "org.eobjects.analyzer.job.runner.RowProcessingConsumer.consume(org.eobjects.analyzer.data.InputRow,int,org.eobjects.analyzer.job.runner.OutcomeSink,org.eobjects.analyzer.job.runner.ConsumeRowHandlerDelegate)"], "Fixed commit": "5f61c2334c3eeb15b71b5af0a2e9049b2d18270a", "Url": "https://api.github.com/repos/anderssewerinhi/AnalyzerBeans", "Date": "2014-03-21T20:48:18Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.xmlrpc(\"login\").param(username.getBytes()).param(password.getBytes()).call()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (loginMap != null) { loginResult = de.enlightened.peris.api.ApiResult.builder().success(loginMap.getBool(\"result\")).message(loginMap.getByteStringOrDefault(\"result_text\", \"wrong username or password\")).build(); if (loginResult.isSuccess()) { this.identity = de.enlightened.peris.site.Identity.builder().id(loginMap.getString(\"user_id\")).avatarUrl(loginMap.getString(\"icon_url\")).postCount(loginMap.getIntOrDefault(\"post_count\", 0)).profileAccess(loginMap.getBoolOrDefault(\"can_profile\")).build(); } }else { loginResult = de.enlightened.peris.api.ApiResult.builder().success(false).message(\"unknown error\").build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1938/buggy-version/app.src.main.java.de.enlightened.peris.api.Tapatalk.java", "BodyUseAPI": ["de.enlightened.peris.support.RPCMap.getByteStringOrDefault(java.lang.String,java.lang.String)", "de.enlightened.peris.api.ApiResult.builder().success(loginMap.getBool(\"result\")).message(loginMap.getByteStringOrDefault(\"result_text\", \"wrong username or password\"))", "de.enlightened.peris.site.Identity.builder().id(loginMap.getString(\"user_id\")).avatarUrl(loginMap.getString(\"icon_url\")).postCount(loginMap.getIntOrDefault(\"post_count\", 0)).profileAccess(loginMap.getBoolOrDefault(\"can_profile\")).build()", "de.enlightened.peris.site.Identity.builder().id(loginMap.getString(\"user_id\"))", "de.enlightened.peris.site.Identity.builder().id(loginMap.getString(\"user_id\")).avatarUrl(loginMap.getString(\"icon_url\")).postCount(loginMap.getIntOrDefault(\"post_count\", 0)).profileAccess(loginMap.getBoolOrDefault(\"can_profile\"))", "de.enlightened.peris.support.RPCMap.getBoolOrDefault(java.lang.String)", "de.enlightened.peris.support.RPCMap.getBool(java.lang.String)", "de.enlightened.peris.site.Identity.builder().id(loginMap.getString(\"user_id\")).avatarUrl(loginMap.getString(\"icon_url\"))", "de.enlightened.peris.support.RPCMap.getIntOrDefault(java.lang.String,int)", "de.enlightened.peris.support.RPCMap.getString(java.lang.String)", "de.enlightened.peris.api.ApiResult.builder().success(loginMap.getBool(\"result\")).message(loginMap.getByteStringOrDefault(\"result_text\", \"wrong username or password\")).build()", "de.enlightened.peris.site.Identity.builder().id(loginMap.getString(\"user_id\")).avatarUrl(loginMap.getString(\"icon_url\")).postCount(loginMap.getIntOrDefault(\"post_count\", 0))", "de.enlightened.peris.support.RPCMap.getString(java.lang.String)", "de.enlightened.peris.api.ApiResult.builder().success(loginMap.getBool(\"result\"))"], "Fixed commit": "bce680bc71095fdf9b8d22e8bbfdd1ff12d8d730", "Url": "https://api.github.com/repos/McNetic/peris", "Date": "2017-03-02T23:50:11Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPrevEvent) != null) { mPrevEvent.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1286/buggy-version/library.src.main.java.com.almeros.android.multitouch.MoveGestureDetector.java", "BodyUseAPI": [], "Fixed commit": "96e5f87633bb8edf0275674349c13d68b146d917", "Url": "https://api.github.com/repos/skonb/android-gesture-detectors", "Date": "2016-06-22T09:02:42Z"},
{"Line": "=>1913", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSdx) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3139/buggy-version/plugins.network-elements.netscaler.src.com.cloud.network.resource.NetscalerResource.java", "BodyUseAPI": [], "Fixed commit": "877c2d2f6dbc94aa3e093da101f48751e5668f26", "Url": "https://api.github.com/repos/SungardAS-CloudDevelopers/cloudstack", "Date": "2014-07-23T17:29:05Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameWorld.getMovables().size) > 0) { com.tgco.animalBook.handlers.SoundHandler.playButtonClick(); com.tgco.animalBook.handlers.SoundHandler.pauseBackgroundMusic(); isMain = false; gameInstance.setScreen(new com.tgco.animalBook.screens.UpgradesScreen(gameInstance, this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5921/buggy-version/core.src.com.tgco.animalBook.screens.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "34e170665e9613a2f156363ac141579c0f15cbb6", "Url": "https://api.github.com/repos/tgco/animalBook", "Date": "2014-06-10T06:12:22Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((usernameTokens.size()) > 1) throw new org.simpleframework.xml.core.PersistenceException(\"There shall be only one UsernameToken element for PullRequestFlow\", null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6054/buggy-version/modules.holodeckb2b-core.src.main.java.org.holodeckb2b.pmode.impl.PullSecurityConfiguration.java", "BodyUseAPI": [], "Fixed commit": "81cedaa72bd11ee6d22a4924393137ebce650b2a", "Url": "https://api.github.com/repos/holodeck-b2b/Holodeck-B2B", "Date": "2015-08-02T13:34:28Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((twinBoard.board[i]) == 0) || ((i % (N)) == 0)) || ((i % (N)) == ((N) - 1))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2815/buggy-version/8puzzle.src.Board.java", "BodyUseAPI": [], "Fixed commit": "ea8f35c2c1446dd43e38bf29c1d426197d3b082d", "Url": "https://api.github.com/repos/sanchezjjose/coursera-algorithms-I", "Date": "2015-03-25T04:10:40Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.info.isDurable()) && (this.getOpenwireDestination().isTopic())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/395/buggy-version/artemis-protocols.artemis-openwire-protocol.src.main.java.org.apache.activemq.artemis.core.protocol.openwire.amq.AMQConsumer.java", "BodyUseAPI": [], "Fixed commit": "48126257b319b48a5ca1e65d0f492a8ea5f18670", "Url": "https://api.github.com/repos/clebertsuconic/activemq-artemis", "Date": "2016-12-05T14:06:25Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selected.size()) > 0) { updateRotPoint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6947/buggy-version/3DLevelEditor.src.plugins.W3DController.java", "BodyUseAPI": [], "Fixed commit": "53c0376e777aee1d095c50b89a2b27f5c5213fde", "Url": "https://api.github.com/repos/Ergo21/3DLevelEditor", "Date": "2015-01-21T09:19:09Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selected.size()) > 0) { updateRotPoint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6947/buggy-version/3DLevelEditor.src.plugins.W3DController.java", "BodyUseAPI": [], "Fixed commit": "53c0376e777aee1d095c50b89a2b27f5c5213fde", "Url": "https://api.github.com/repos/Ergo21/3DLevelEditor", "Date": "2015-01-21T09:19:09Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selected.size()) > 0) { updateRotPoint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6947/buggy-version/3DLevelEditor.src.plugins.W3DController.java", "BodyUseAPI": [], "Fixed commit": "53c0376e777aee1d095c50b89a2b27f5c5213fde", "Url": "https://api.github.com/repos/Ergo21/3DLevelEditor", "Date": "2015-01-21T09:19:09Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selected.size()) > 0) { updateRotPoint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6947/buggy-version/3DLevelEditor.src.plugins.W3DController.java", "BodyUseAPI": [], "Fixed commit": "53c0376e777aee1d095c50b89a2b27f5c5213fde", "Url": "https://api.github.com/repos/Ergo21/3DLevelEditor", "Date": "2015-01-21T09:19:09Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((optionValues.size()) == 1) && (((optionValues.get(0).textureOption) == (com.jme3.material.plugins.J3MLoader.TextureOption.Flip)) || ((optionValues.get(0).textureOption) == (com.jme3.material.plugins.J3MLoader.TextureOption.Repeat)))) { return true; }else if ((((optionValues.size()) == 2) && ((optionValues.get(0).textureOption) == (com.jme3.material.plugins.J3MLoader.TextureOption.Flip))) && ((optionValues.get(1).textureOption) == (com.jme3.material.plugins.J3MLoader.TextureOption.Repeat))) { return true; }else if ((((optionValues.size()) == 2) && ((optionValues.get(0).textureOption) == (com.jme3.material.plugins.J3MLoader.TextureOption.Repeat))) && ((optionValues.get(1).textureOption) == (com.jme3.material.plugins.J3MLoader.TextureOption.Flip))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8912/buggy-version/jme3-core.src.plugins.java.com.jme3.material.plugins.J3MLoader.java", "BodyUseAPI": ["java.util.List<com.jme3.material.plugins.J3MLoader.TextureOptionValue>.get(int)", "java.util.List<com.jme3.material.plugins.J3MLoader.TextureOptionValue>.size()", "java.util.List<com.jme3.material.plugins.J3MLoader.TextureOptionValue>.get(int)", "java.util.List<com.jme3.material.plugins.J3MLoader.TextureOptionValue>.get(int)", "java.util.List<com.jme3.material.plugins.J3MLoader.TextureOptionValue>.size()", "java.util.List<com.jme3.material.plugins.J3MLoader.TextureOptionValue>.get(int)"], "Fixed commit": "9f9cb824cd5d8b77e614b7dad3913bcb3cd534d3", "Url": "https://api.github.com/repos/phr00t/jmonkeyengine", "Date": "2016-03-07T16:38:43Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getName().getParts().size()) == 1) { io.crate.analyze.Symbol symbol = context.symbolFromAlias(node.getSuffix().getSuffix()); if (symbol != null) { return symbol; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3011/buggy-version/sql.src.main.java.io.crate.analyze.SelectStatementAnalyzer.java", "BodyUseAPI": ["io.crate.analyze.SelectAnalysis.symbolFromAlias(node.getSuffix().getSuffix())", "node.getSuffix().getSuffix()", "io.crate.analyze.QualifiedNameReference.getSuffix()"], "Fixed commit": "6c1e0ef118f9668fd1882797ffefd4f6f0935842", "Url": "https://api.github.com/repos/crate/crate", "Date": "2014-03-26T13:40:29Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selection.isEmpty()) { dragType = uniol.aptgui.editor.features.SelectionTool.DragType.NODE; draggedElement = elem; }else if (selection.contains(elem)) { dragType = uniol.aptgui.editor.features.SelectionTool.DragType.SELECTION; }else { dragType = uniol.aptgui.editor.features.SelectionTool.DragType.NONE; draggedElement = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3586/buggy-version/src.main.java.uniol.aptgui.editor.features.SelectionTool.java", "BodyUseAPI": ["java.util.Set<uniol.aptgui.editor.document.graphical.nodes.GraphicalNode>.contains(uniol.aptgui.editor.document.graphical.GraphicalElement)"], "Fixed commit": "2ac26dae99d2a73029f0ba7b47bf6134afecb431", "Url": "https://api.github.com/repos/jprellberg/apt-gui", "Date": "2016-04-27T13:34:21Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (nextMessage != null) { try { protocols.process(nextMessage, Protocol.Stance.SENDING); } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3260/buggy-version/src.pseudoTorrent.networking.PieceProtocol.java", "BodyUseAPI": ["networking.ProtocolPackage.process(pseudoTorrent.networking.Message,Protocol.Stance.SENDING)"], "Fixed commit": "44fc47ff23ff89235d1ad2d732150ba5631dfc77", "Url": "https://api.github.com/repos/cavasquez/PseudoTorrent", "Date": "2014-03-21T23:34:57Z"},
{"Line": "=>573", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (style == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1814/buggy-version/src.at.pcgamingfreaks.Message.MessageComponent.java", "BodyUseAPI": [], "Fixed commit": "b67cbabfe3461691f4ad2407c997f2817298be25", "Url": "https://api.github.com/repos/GeorgH93/Bukkit_Bungee_PluginLib", "Date": "2016-09-11T01:32:42Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (extra == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1814/buggy-version/src.at.pcgamingfreaks.Message.MessageComponent.java", "BodyUseAPI": [], "Fixed commit": "b67cbabfe3461691f4ad2407c997f2817298be25", "Url": "https://api.github.com/repos/GeorgH93/Bukkit_Bungee_PluginLib", "Date": "2016-09-11T01:32:42Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((normalFallUVal) > (riseKeyVal)) { riseKeyVal = normalFallUVal; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4270/buggy-version/src.Trader.Livermore.java", "BodyUseAPI": [], "Fixed commit": "a54bf8c8a50e1c5ef1261b7ee45463476d9bf74c", "Url": "https://api.github.com/repos/avlavl/TradingSystem", "Date": "2016-08-24T14:31:26Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((normalRiseDVal) < (fallKeyVal)) || ((fallKeyVal) == 0)) { fallKeyVal = normalRiseDVal; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4270/buggy-version/src.Trader.Livermore.java", "BodyUseAPI": [], "Fixed commit": "a54bf8c8a50e1c5ef1261b7ee45463476d9bf74c", "Url": "https://api.github.com/repos/avlavl/TradingSystem", "Date": "2016-08-24T14:31:26Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.bgroup.topline.model.Driver.getDriverFio()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (driver.equals(\"\u0427\u0443\u0436\u043e\u0439\")) driver = \"_______________\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5617/buggy-version/src.main.java.io.bgroup.topline.model.Bid.java", "BodyUseAPI": [], "Fixed commit": "af22ec6ebb4fc9969cd31307b2511edcf47ef4c6", "Url": "https://api.github.com/repos/vsb2007/web.azs-topline.ru", "Date": "2017-03-24T09:05:09Z"},
{"Line": "=>804", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (trailerIdObject != null) bid.setTrailer(trailerMvc.getTrailer(((java.lang.Integer) (row.get(\"bid_trailer_id\"))))); else { bid.setTrailer(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5617/buggy-version/src.main.java.io.bgroup.topline.model.Bid.java", "BodyUseAPI": [], "Fixed commit": "af22ec6ebb4fc9969cd31307b2511edcf47ef4c6", "Url": "https://api.github.com/repos/vsb2007/web.azs-topline.ru", "Date": "2017-03-24T09:05:09Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.bgroup.topline.model.Car.getCar_name()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (car.equals(\"\u0421\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0439 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442 280\")) { car = \"______________\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5617/buggy-version/src.main.java.io.bgroup.topline.model.Bid.java", "BodyUseAPI": [], "Fixed commit": "af22ec6ebb4fc9969cd31307b2511edcf47ef4c6", "Url": "https://api.github.com/repos/vsb2007/web.azs-topline.ru", "Date": "2017-03-24T09:05:09Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((pathFields == null) || (pathFields.isAll())) this.pathFields = null; else if (pathFields.isDefined()) this.pathFields = pathFields; else throw new java.lang.IllegalArgumentException((\"pathFields must be defined or the ALL substitution, got: \" + (pathFields.printVerbose())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7943/buggy-version/src.hadoop.cascading.tap.hadoop.TemplateTap.java", "BodyUseAPI": [], "Fixed commit": "95e7ee84b18241889d6c5ff79a2da793e5a95785", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2011-11-09T18:06:28Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.siyeh.ig.controlflow.PointlessBooleanExpressionInspection.removeRedundantNots(com.siyeh.ig.controlflow.PsiPrefixExpression)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (e == null) { return com.siyeh.InspectionGadgetsBundle.message(\"boolean.expression.can.be.simplified.problem.descriptor\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7346/buggy-version/plugins.InspectionGadgets.src.com.siyeh.ig.controlflow.PointlessBooleanExpressionInspection.java", "BodyUseAPI": [], "Fixed commit": "a76d5e2a9b75c7427570bd5a4eb2f6f01bc90d56", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2012-07-09T11:11:24Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scope) != (other.scope)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8496/buggy-version/aircnc.src.main.java.utils.info.promotion.PromotionInfoTemplate.java", "BodyUseAPI": [], "Fixed commit": "929604c36209febc6083cb5d87e6061071e239b6", "Url": "https://api.github.com/repos/ArabicStar/AirCnC", "Date": "2016-12-22T11:05:18Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8850/buggy-version/src.com.thezujev.hello.third.Digits.java", "BodyUseAPI": [], "Fixed commit": "2f97040d06ebd0980a550ee046525094564bab6d", "Url": "https://api.github.com/repos/AntZoo/com.thezujev.hello", "Date": "2016-05-28T21:37:32Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == 0) { return 0; }else { return input * (factorialRecursion((--input))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8850/buggy-version/src.com.thezujev.hello.third.Digits.java", "BodyUseAPI": [], "Fixed commit": "2f97040d06ebd0980a550ee046525094564bab6d", "Url": "https://api.github.com/repos/AntZoo/com.thezujev.hello", "Date": "2016-05-28T21:37:32Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input == 0) { return 0; }else { return input + (digitsSumRecursion((--input))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8850/buggy-version/src.com.thezujev.hello.third.Digits.java", "BodyUseAPI": [], "Fixed commit": "2f97040d06ebd0980a550ee046525094564bab6d", "Url": "https://api.github.com/repos/AntZoo/com.thezujev.hello", "Date": "2016-05-28T21:37:32Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.redPandaLib.core.Test.peerList) != null) { java.util.ArrayList<org.redPandaLib.core.Peer> clonedPeerList = ((java.util.ArrayList<org.redPandaLib.core.Peer>) (Test.peerList.clone())); for (org.redPandaLib.core.Peer peer : clonedPeerList) { peer.disconnect(\"reducing traffic...\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4347/buggy-version/src.org.redPanda.ConnectivityChanged.java", "BodyUseAPI": [], "Fixed commit": "22ce8e2899d4ddaf4dd24c5542b32282aaff6ac7", "Url": "https://api.github.com/repos/redPanda-project/android", "Date": "2015-07-14T20:48:51Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((key) != (CODED)) { typing = (typing) + (key); }else if ((key) == 65535) { if ((keyCode) == 67) { if ((typing.length()) > 0) { typing = typing.substring(0, ((typing.length()) - 1)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7311/buggy-version/eclipse.AndroidTiles.src.com.example.androidtiles.AndroidTiles.java", "BodyUseAPI": [], "Fixed commit": "1f8b231254a5e75afb6d3d5ab771f86e9e0f6966", "Url": "https://api.github.com/repos/hex705/tiles", "Date": "2013-09-09T18:33:02Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(infoFile.exists())) { setParamaterAvailable(false); return SUCCESS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/1542/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.actions.applications.DynamicParameterAction.java", "BodyUseAPI": [], "Fixed commit": "189766ab181cd1e6eb11bd11fea0a38717be4145", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2012-11-29T12:10:22Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(sku.equals(skuToReplace))) { skusToReplace.add(skuToReplace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5989/buggy-version/src.android.InAppBillingV6.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "507965c9aafb8de689e27753fbae79649ce14b63", "Url": "https://api.github.com/repos/Busivid/cordova-plugin-inapppurchase", "Date": "2017-08-21T02:39:15Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((progressBar.getValue()) == 1.0) && ((progressBar.getUI()) != null)) { progressBar.getUI().setPollInterval((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6324/buggy-version/frontend.src.main.java.cz.cuni.mff.xrg.odcs.frontend.gui.components.UploadInfoWindow.java", "BodyUseAPI": ["progressBar.getUI().setPollInterval(int)", "com.vaadin.ui.ProgressBar.getUI()"], "Fixed commit": "d2acdaa050c44513a720918867f61b12db8f65dc", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2014-07-14T07:58:50Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((players) != null) { int size = players.size(); for (int i = 0; i < size; i++) { disconnectPlayer(players.get(i)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/5990/buggy-version/AndroidMain.AndroidMainApp.src.net.thiagoalz.hermeto.control.XMPPGameplayControl.java", "BodyUseAPI": [], "Fixed commit": "193031bdaa6abbfe879fa79bb70118f47cb5bcfb", "Url": "https://api.github.com/repos/thiagoalz/Hermeto", "Date": "2011-09-07T01:45:51Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (className.startsWith(\";\")) className = className.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2469/buggy-version/src.soot.jimple.infoflow.android.resources.LayoutFileParser.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "739f80f889511c8af037fa57010c04eb26150000", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow-android", "Date": "2014-01-21T14:57:19Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (object == null) { throw new java.lang.IllegalArgumentException(\"the Object passed in is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4832/buggy-version/src.main.java.org.apache.commons.lang3.builder.ReflectionToStringBuilder.java", "BodyUseAPI": [], "Fixed commit": "9adc129d0070e9705329b5227f1346aba97e09ef", "Url": "https://api.github.com/repos/jacktan1991/commons-lang", "Date": "2015-05-05T08:23:24Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (object == null) { throw new java.lang.IllegalArgumentException(\"the Object passed in is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4832/buggy-version/src.main.java.org.apache.commons.lang3.builder.ReflectionToStringBuilder.java", "BodyUseAPI": [], "Fixed commit": "9adc129d0070e9705329b5227f1346aba97e09ef", "Url": "https://api.github.com/repos/jacktan1991/commons-lang", "Date": "2015-05-05T08:23:24Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (object == null) { throw new java.lang.IllegalArgumentException(\"the Object passed in is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4832/buggy-version/src.main.java.org.apache.commons.lang3.builder.ReflectionToStringBuilder.java", "BodyUseAPI": [], "Fixed commit": "9adc129d0070e9705329b5227f1346aba97e09ef", "Url": "https://api.github.com/repos/jacktan1991/commons-lang", "Date": "2015-05-05T08:23:24Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.probenparameter) != null) && (!(this.probenparameter.isEmpty()))) { java.util.Collections.sort(this.probenparameter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6987/buggy-version/src.main.java.de.cismet.cids.custom.udm2020di.types.wa.Messstelle.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<de.cismet.cids.custom.udm2020di.types.boris.Probenparameter>)"], "Fixed commit": "624d3d6c9e07496b81110d61d85a673f68b0b7a0", "Url": "https://api.github.com/repos/cismet/cids-custom-udm2020-di-server", "Date": "2015-12-03T19:28:30Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getRequest().getLocale().getLanguage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(net.canadensys.dataportal.occurrence.config.OccurrencePortalConfig.isSupportedLanguage(reqLanguage))) { reqLanguage = java.util.Locale.ENGLISH.getLanguage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/4183/buggy-version/src.main.java.net.canadensys.dataportal.occurrence.config.RewriteConfigurationProvider.java", "BodyUseAPI": [], "Fixed commit": "469799418b4240137bfdeff3af915a2223bd4273", "Url": "https://api.github.com/repos/Canadensys/canadensys-explorer", "Date": "2014-03-27T17:16:55Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size > (5 * 1024)) java.lang.Thread.sleep(10);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/8458/buggy-version/src.jator.Buffer.java", "BodyUseAPI": [], "Fixed commit": "26091e1aeb930a4312421a85564a37a5ec5919d4", "Url": "https://api.github.com/repos/bigzz/Jator", "Date": "2016-05-06T14:59:17Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<game.entities.Entity>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((handler.getMouseManager().isSaveLocation()) && (e.isSelected())) && ((handler.getWorld().getSolidMap()[((int) (((handler.getMouseManager().getDestinationY()) + (handler.getYOffset())) / (game.tiles.Tile.tile_dimension)))][((int) (((handler.getMouseManager().getDestinationX()) + ((int) (handler.getXOffset()))) / (game.tiles.Tile.tile_dimension)))]) == 0)) { e.setDestinationX(((handler.getMouseManager().getDestinationX()) + ((int) (handler.getXOffset())))); e.setDestinationY(((handler.getMouseManager().getDestinationY()) + ((int) (handler.getYOffset())))); placementEntities.add(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/216/buggy-version/src.game.entities.EntityManager.java", "BodyUseAPI": ["game.Handler.getMouseManager()", "game.Handler.getYOffset()", "game.entities.Entity.setDestinationY(((handler.getMouseManager().getDestinationY()) + ((int) (handler.getYOffset()))))", "game.Handler.getXOffset()", "handler.getMouseManager().getDestinationY()", "game.entities.Entity.setDestinationX(((handler.getMouseManager().getDestinationX()) + ((int) (handler.getXOffset()))))", "handler.getMouseManager().getDestinationX()", "java.util.List<game.entities.Entity>.add(game.entities.Entity)", "game.Handler.getMouseManager()"], "Fixed commit": "5d0839c82c8f14195168ab81e3179ffade044185", "Url": "https://api.github.com/repos/LavigneT/RTS-Project", "Date": "2017-11-21T17:24:41Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((props.get(key)) != null) indexedKeys.put(key, props.get(key));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/7733/buggy-version/src.main.java.org.neo4j.dataimport.CsvImporter.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "b4ae095084576d56e37dde3867113818b5229f53", "Url": "https://api.github.com/repos/sroycode/neo4j-import", "Date": "2012-09-04T11:16:18Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (snake.engine.creators.WorldSettings.hasVirtualScreen()) { rayHandler.useCustomViewport(((int) ((snake.engine.creators.WorldSettings.getVScreenX_Porc()) * (Gdx.graphics.getWidth()))), ((int) ((snake.engine.creators.WorldSettings.getVScreenY_Porc()) * (Gdx.graphics.getHeight()))), ((int) ((snake.engine.creators.WorldSettings.getVScreenWidth_Porc()) * (Gdx.graphics.getWidth()))), ((int) ((snake.engine.creators.WorldSettings.getVScreenHeight_Porc()) * (Gdx.graphics.getHeight())))); }else { rayHandler.useCustomViewport(0, 0, Gdx.graphics.getWidth(), Gdx.graphics.getHeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6368/buggy-version/game.src.snake.visuals.CameraMan.java", "BodyUseAPI": [], "Fixed commit": "83fd0459a3e63f92d9dda4fbbe4966ba0f3f6841", "Url": "https://api.github.com/repos/MrStrings/SnakeInTheDark", "Date": "2015-06-13T14:30:32Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count <= 0) { buttonTweet.setEnabled(false); }else { buttonTweet.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/186/buggy-version/app.src.main.java.com.brandon.yamba.StatusActivity.java", "BodyUseAPI": [], "Fixed commit": "f8f9e0080eef8fa5611f15217ce52b9f38d71051", "Url": "https://api.github.com/repos/greenskye/Yamba", "Date": "2016-04-26T20:07:47Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((preparedStatement) == null) { preparedStatement = connection.prepareStatement(com.mika.assesment.service.ReportService.REPORT_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/2627/buggy-version/src.main.java.com.mika.assesment.service.ReportService.java", "BodyUseAPI": [], "Fixed commit": "81e1fee48f8f3bc17848decc9b63ae2ebffefedc", "Url": "https://api.github.com/repos/gushinetsmv/Planner", "Date": "2014-11-12T18:18:19Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (snapshot.getKey().contentEquals(\"answers\")) { if (snapshot.getValue().toString().contains(MainActivity.deviceId)) { alreadyAnswered = true; android.widget.Toast toast = android.widget.Toast.makeText(a.getApplicationContext(), \"You have already answered on this question!\", Toast.LENGTH_LONG); toast.show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3528/buggy-version/app.src.main.java.com.example.instantify.instantify.QuestionFragment.java", "BodyUseAPI": ["snapshot.getValue().toString().contains(MainActivity.deviceId)", "snapshot.getValue().toString()", "com.firebase.client.DataSnapshot.getValue()"], "Fixed commit": "4ca814171f27d58ea1df01bd038eefd29f48effb", "Url": "https://api.github.com/repos/Notika/Instantify", "Date": "2015-10-27T21:20:01Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.transformations) == null) { this.transformations = new gtna.transformation.Transformation[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3332/buggy-version/src.gtna.networks.Network.java", "BodyUseAPI": [], "Fixed commit": "fd332d4abcd0075005c712ab25e379228ad8a8f8", "Url": "https://api.github.com/repos/stef-roos/GTNA", "Date": "2012-03-15T09:19:38Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Document.getElementsByTagName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (0 == (childNodes.getLength())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3619/buggy-version/src.main.java.com.wso2.build.utils.Utility.java", "BodyUseAPI": [], "Fixed commit": "682d758105f3c9a9c1056e3ec66cd7fa276c2e35", "Url": "https://api.github.com/repos/uvindra/rule-extend-maven-plugin", "Date": "2014-02-27T08:22:31Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Document.getElementsByTagName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (0 == (parentNodes.getLength())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/3619/buggy-version/src.main.java.com.wso2.build.utils.Utility.java", "BodyUseAPI": [], "Fixed commit": "682d758105f3c9a9c1056e3ec66cd7fa276c2e35", "Url": "https://api.github.com/repos/uvindra/rule-extend-maven-plugin", "Date": "2014-02-27T08:22:31Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(revenue))) { revenueValue = java.lang.Integer.parseInt(revenue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V79/6729/buggy-version/src.com.university.banking.client.proxy.UserDAOProxy.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "dc2ff52c622db9af9a69b1527369d98261c80360", "Url": "https://api.github.com/repos/vmatviichuk/universityProject", "Date": "2014-08-18T13:28:42Z"}]}
