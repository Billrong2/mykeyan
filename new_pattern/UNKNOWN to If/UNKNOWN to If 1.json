{"UNKNOWN to If":[{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(filter.matches(org.adblockplus.sbrowser.contentblocker.engine.Subscriptions.UNSUPPORTED_FILTERS_REGEX))) { w.write(filter); w.write('\\n'); }else { android.util.Log.d(org.adblockplus.sbrowser.contentblocker.engine.Subscriptions.TAG, (\"Ignoring unsupported filter: \" + filter)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/286/buggy-version/src.org.adblockplus.sbrowser.contentblocker.engine.Subscriptions.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "java.io.BufferedWriter.write(java.lang.String)"], "Fixed commit": "ce0e9ba79b1341872f42ee3abc440f938fc751c0", "Url": "https://api.github.com/repos/adblockplus/adblockplussbrowser", "Date": "2017-03-09T21:28:04Z"},
{"Line": "=>664", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (skyRenderer == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/499/buggy-version/src.main.java.stellarium.world.provider.StellarWorldProvider.java", "BodyUseAPI": [], "Fixed commit": "3015a404a413fa1472a6a870671ebb39b911b44a", "Url": "https://api.github.com/repos/Abastro/StellarSky", "Date": "2017-03-08T11:07:19Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (skyRenderer == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/499/buggy-version/src.main.java.stellarium.world.provider.StellarWorldProviderEnd.java", "BodyUseAPI": [], "Fixed commit": "3015a404a413fa1472a6a870671ebb39b911b44a", "Url": "https://api.github.com/repos/Abastro/StellarSky", "Date": "2017-03-08T11:07:19Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cache) != null) { builder = builder.addText(\"Max Size\", android.text.format.Formatter.formatFileSize(activity, cache.maxSize())).addText(\"Write Errors\", getWriteErrorCount()).addText(\"Request Count\", cache.requestCount()).addText(\"Network Count\", cache.networkCount()).addText(\"Hit Count\", cache.hitCount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8995/buggy-version/lib.src.main.java.io.palaima.debugdrawer.modules.OkHttp3Module.java", "BodyUseAPI": [], "Fixed commit": "4ee6db88d449722fba4a88fb2d8fbbe361999759", "Url": "https://api.github.com/repos/tianzhijiePATHn/DebugDrawer", "Date": "2017-05-15T09:48:15Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scope == (Broadcaster.SCOPE.REQUEST)) { try { b = org.atmosphere.cpr.BroadcasterFactory.getDefault().get(org.atmosphere.cpr.DefaultBroadcaster.class, ((org.atmosphere.cpr.DefaultBroadcaster.class.getSimpleName()) + (java.util.UUID.randomUUID()))); } catch (java.lang.Throwable t) { throw new java.lang.RuntimeException(t); } b.setScope(scope); r.setBroadcaster(b); req.setAttribute(AtmosphereResourceImpl.SKIP_BROADCASTER_CREATION, java.lang.Boolean.TRUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1020/buggy-version/modules.cpr.src.main.java.org.atmosphere.cpr.Meteor.java", "BodyUseAPI": ["org.atmosphere.cpr.Broadcaster.setScope(Broadcaster.SCOPE)"], "Fixed commit": "ea0d0a36599d5f1f3cead5c31456c3dc22a8c1fb", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2011-11-10T21:03:35Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((req.getAttribute(org.atmosphere.cpr.AtmosphereResourceImpl.SKIP_BROADCASTER_CREATION)) != null) { skipCreation = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1020/buggy-version/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereResourceImpl.java", "BodyUseAPI": [], "Fixed commit": "ea0d0a36599d5f1f3cead5c31456c3dc22a8c1fb", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2011-11-10T21:03:35Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchServiceResponse == null) || ((searchServiceResponse.getNumFound()) == null)) { return searchServiceResponse; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/839/buggy-version/src.main.java.com.micro.services.search.bl.processor.PaginationDelegate.java", "BodyUseAPI": [], "Fixed commit": "af29b25ba7adff778ebb584f7c696c4a7e978dd4", "Url": "https://api.github.com/repos/sekhrivijay/search-service", "Date": "2017-11-04T22:29:30Z"},
{"Line": "=>579", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.Boolean>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (canClose != null) { canCloseBrowser = canClose; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5747/buggy-version/src.android.InAppBrowser.java", "BodyUseAPI": [], "Fixed commit": "a8c3fd700c7c2b18090630dd0da01b3ecca77603", "Url": "https://api.github.com/repos/sjyMystery/cordova-plugin-inappbrowser", "Date": "2017-11-29T14:18:44Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.rahatarmanahmed.cpv.CircularProgressView.getVisibility()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (visibility != currentVisibility) { if (visibility == (android.view.View.VISIBLE)) { resetAnimation(); }else if ((visibility == (android.view.View.GONE)) || (visibility == (android.view.View.INVISIBLE))) { stopAnimation(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2695/buggy-version/circularprogressview.src.main.java.com.github.rahatarmanahmed.cpv.CircularProgressView.java", "BodyUseAPI": [], "Fixed commit": "c2385213fc9a6600f7b7895629b21054b48670a2", "Url": "https://api.github.com/repos/rahatarmanahmed/CircularProgressView", "Date": "2016-03-17T11:35:47Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((find) != true) { find = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6605/buggy-version/src.main.java.MatrixSearch.java", "BodyUseAPI": [], "Fixed commit": "c3d5035090f08ad97a6d8c5a269e90fb75298a2c", "Url": "https://api.github.com/repos/bighead360/finalexam", "Date": "2016-06-16T16:04:37Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataset.canGenerateModi()) { dataset.generateModi(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5781/buggy-version/src.main.java.edu.unc.ceccr.chembench.taskObjects.CreateDatasetTask.java", "BodyUseAPI": ["edu.unc.ceccr.chembench.persistence.Dataset.generateModi()"], "Fixed commit": "0af0ae6e7e8db6c9b6b173a99e8e90e3831804cb", "Url": "https://api.github.com/repos/ceccr/chembench", "Date": "2014-11-19T22:12:01Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (user != null) { unmarshalledUserFixer(user); try { dao.delete(user); } catch (java.lang.RuntimeException e) { java.lang.Long id = user.getId(); if (id == null) { throw e; } com.easoncxz.yntdl.domain.User u = dao.getUserById(id); if (u != null) { throw e; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5927/buggy-version/src.main.java.com.easoncxz.yntdl.service.ServiceImpl.java", "BodyUseAPI": ["com.easoncxz.yntdl.persistence.Dao.delete(com.easoncxz.yntdl.domain.User)", "com.easoncxz.yntdl.service.ServiceImpl.unmarshalledUserFixer(com.easoncxz.yntdl.domain.User)", "com.easoncxz.yntdl.domain.User.getId()"], "Fixed commit": "b24130bcc5981088a1ecc9c40ea62e973e8a3f7e", "Url": "https://api.github.com/repos/easoncxz/yntdl", "Date": "2014-09-14T01:45:42Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getServletRequest().getParameterValues(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((resourceIds == null) && ((request.getSession().getAttribute(\"chartForm_resourceIds\")) != null)) { resourceIds = ((java.lang.String[]) (request.getSession().getAttribute(\"chartForm_resourceIds\"))); request.getSession().removeAttribute(\"chartForm_resourceIds\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7319/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.resource.common.monitor.visibility.ViewChartFormPrepareActionNG.java", "BodyUseAPI": ["request.getSession().getAttribute(java.lang.String)", "org.hyperic.hq.ui.action.resource.common.monitor.visibility.ViewChartFormPrepareActionNG.getSession()", "request.getSession().removeAttribute(java.lang.String)", "org.hyperic.hq.ui.action.resource.common.monitor.visibility.ViewChartFormPrepareActionNG.getSession()"], "Fixed commit": "aae899e25a470362210effc3384b0f12c72d7ec3", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-10-27T17:20:09Z"},
{"Line": "=>965", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.Item.getItemFromBlock(net.minecraft.block.Block)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (item != null) { int m = 0; if (item.getHasSubtypes()) { m = meta; } drops = java.util.Collections.singletonList(new net.minecraft.item.ItemStack(item, 1, m)); }else { drops = java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4615/buggy-version/src.main.java.mcjty.rftools.blocks.spaceprojector.BuilderTileEntity.java", "BodyUseAPI": ["java.util.Collections.singletonList(net.minecraft.item.ItemStack)", "net.minecraft.item.Item.getHasSubtypes()"], "Fixed commit": "39dde88e684bb63be191ebfbd83a8f45b6f0d2bb", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2016-01-29T05:13:36Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(name.startsWith(\"_\"))) { connectString = (host + \"_\") + name; }else { connectString = host + name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5985/buggy-version/mms-ent.repo-amp.src.main.java.gov.nasa.jpl.view_repo.db.PostgresPool.java", "BodyUseAPI": [], "Fixed commit": "a45eb07c23bfdf9cbd7cc28c8f8b491f67aab7bf", "Url": "https://api.github.com/repos/Open-MBEE/mms", "Date": "2017-07-17T22:05:42Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fantasystocks.adapter.PortfolioAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (portfolio.getSymbols().isEmpty()) { tvPortfolioChange.setText(com.fantasystocks.RestApplication.getFormatter().formatPercent(0)); tvPortfolioChange.setTextColor(com.fantasystocks.RestApplication.getFormatter().getColorResource(0)); }else { com.android.volley.Request<org.json.JSONObject> request = populateWithQuote(portfolio, tvPortfolioChange); convertView.setTag(request.getTag()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5187/buggy-version/src.com.fantasystocks.adapter.PortfolioAdapter.java", "BodyUseAPI": ["com.fantasystocks.adapter.PortfolioAdapter.populateWithQuote(com.fantasystocks.model.Portfolio,android.widget.TextView)"], "Fixed commit": "76d02f1c29f7dec3d206df359833112d423a057b", "Url": "https://api.github.com/repos/jarwel/FantasyStocks", "Date": "2014-07-10T22:03:34Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((engine.getHandshakeStatus()) == (javax.net.ssl.SSLEngineResult.HandshakeStatus.NOT_HANDSHAKING)) { drainOutboundSource.merge(1); super.drainInbound(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5644/buggy-version/hawtdispatch-transport.src.main.java.org.fusesource.hawtdispatch.transport.SslTransport.java", "BodyUseAPI": [], "Fixed commit": "5f1f3770f3d25672dc793c9daa587be461dc7365", "Url": "https://api.github.com/repos/fusesource/hawtdispatch", "Date": "2013-05-17T21:58:13Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.getConfig().getConfigurationSection(\"users\").contains(player.getName())) { for (java.lang.String group : this.getConfig().getStringList((\"users/\" + (player.getName())))) { this.assignGroupPermissions(player, group); } }else { this.assignGroupPermissions(player, \"default\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8839/buggy-version/src.com.gildorymrp.permissions.GildorymPermissions.java", "BodyUseAPI": ["this.getConfig().getStringList((\"users/\" + (player.getName())))", "org.bukkit.entity.Player.getName()", "com.gildorymrp.permissions.GildorymPermissions.assignGroupPermissions(org.bukkit.entity.Player,java.lang.String)", "com.gildorymrp.permissions.GildorymPermissions.assignGroupPermissions(org.bukkit.entity.Player,java.lang.String)"], "Fixed commit": "c9001ecd66ce26d173e563cb3c8f9df13c1bd8be", "Url": "https://api.github.com/repos/Gildorym/GildorymPermissions", "Date": "2013-05-05T06:46:32Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((my_cvrs_to_audit) == null) || ((my_cvr_under_audit) == null)) || ((my_cvrs_to_audit.size()) <= (my_cvr_under_audit))) { return null; }else { return my_cvrs_to_audit.get(my_cvr_under_audit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7298/buggy-version/server.eclipse-project.src.main.java.us.freeandfair.corla.model.CountyDashboard.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.get(java.lang.Integer)"], "Fixed commit": "b248cada59c0c7320029cdf71a777ec0ab11688d", "Url": "https://api.github.com/repos/FreeAndFair/ColoradoRLA", "Date": "2017-08-19T01:05:21Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((methodStatistics.getValue().size()) > 0) { java.util.Collection<com.playtech.wallet.statistics.MethodExecutionInterceptionResult> c = getAllElementsFromPersistableSharedQueue(methodStatistics.getValue()); java.lang.String methodName = methodStatistics.getKey(); com.playtech.wallet.service.statistics.TimingAndParametersStatisticsPersister.logger.debug(\"Persisting statistical data for {} with count: {}\", methodName, c.size()); com.playtech.wallet.domain.TimedMethodStatistics timedMethodStatistics = calculateStatistics(c); repository.save(timedMethodStatistics); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6871/buggy-version/src.main.java.com.playtech.wallet.service.statistics.TimingAndParametersStatisticsPersister.java", "BodyUseAPI": ["com.playtech.wallet.service.statistics.TimingAndParametersStatisticsPersister.getAllElementsFromPersistableSharedQueue(methodStatistics.getValue())", "java.util.Map.Entry<java.lang.String, java.util.Queue<com.playtech.wallet.statistics.MethodExecutionInterceptionResult>>.getKey()", "java.util.Map.Entry<java.lang.String, java.util.Queue<com.playtech.wallet.statistics.MethodExecutionInterceptionResult>>.getValue()"], "Fixed commit": "2afc84e5bcfa61abcad466801f437ff72e5fa4a7", "Url": "https://api.github.com/repos/svenzik/wallet", "Date": "2014-02-09T21:52:55Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isOutFileOption()) && (isOutputStdout())) { optionsBuilder.toFile(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3947/buggy-version/src.main.java.org.asciidoctor.cli.AsciidoctorCliOptions.java", "BodyUseAPI": [], "Fixed commit": "302d0f2e461b640719e15ad7ffdc453e8f19da3d", "Url": "https://api.github.com/repos/asciidoctor/asciidoctorj", "Date": "2014-03-16T13:17:23Z"},
{"Line": "=>1447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((p.getPDELineStartOffset()) == (-1)) || ((p.getPDELineStopOffset()) == (-1))) { editor.toFront(); editor.getSketch().setCurrentCode(p.getTabIndex()); }else { astGenerator.highlightPDECode(p.getTabIndex(), p.getLineNumber(), p.getPDELineStartOffset(), (((p.getPDELineStopOffset()) - (p.getPDELineStartOffset())) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6956/buggy-version/pdex.src.processing.mode.experimental.ErrorCheckerService.java", "BodyUseAPI": ["processing.mode.experimental.Problem.getPDELineStartOffset()", "processing.mode.experimental.ASTGenerator.highlightPDECode(p.getTabIndex(),p.getLineNumber(),p.getPDELineStartOffset(),(((p.getPDELineStopOffset()) - (p.getPDELineStartOffset())) + 1))", "processing.mode.experimental.Problem.getTabIndex()", "processing.mode.experimental.Problem.getTabIndex()", "processing.mode.experimental.Problem.getLineNumber()", "processing.mode.experimental.Problem.getPDELineStopOffset()", "editor.getSketch().setCurrentCode(p.getTabIndex())", "processing.mode.experimental.Problem.getPDELineStartOffset()"], "Fixed commit": "9fe927cc436c3f75acbebb11e50960d6f93c91fd", "Url": "https://api.github.com/repos/aengelke/processing", "Date": "2014-07-30T17:45:22Z"},
{"Line": "=>1464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((p.getLineNumber()) < (processing.app.Base.countLines(editor.textArea().getDocument().getText(0, editor.textArea().getDocument().getLength())))) && ((p.getLineNumber()) >= 0)) { editor.getTextArea().scrollTo(p.getLineNumber(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6956/buggy-version/pdex.src.processing.mode.experimental.ErrorCheckerService.java", "BodyUseAPI": ["editor.getTextArea().scrollTo(p.getLineNumber(),int)", "processing.mode.experimental.Problem.getLineNumber()", "processing.mode.experimental.DebugEditor.getTextArea()"], "Fixed commit": "9fe927cc436c3f75acbebb11e50960d6f93c91fd", "Url": "https://api.github.com/repos/aengelke/processing", "Date": "2014-07-30T17:45:22Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["oven.getCrawler().parse(java.lang.String,java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (document == null) { resp.sendError(HttpServletResponse.SC_NOT_FOUND, (\"Page does not exist: \" + sourceUri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2052/buggy-version/src.main.java.org.jbake.launcher.WikiServlet.java", "BodyUseAPI": [], "Fixed commit": "90e63328a3cccb456f7b04330a1b71f0e2e962d8", "Url": "https://api.github.com/repos/haumacher/jbake", "Date": "2015-07-19T18:40:26Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((balance) < 0.0F) { setState(State.OVERDRAWN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8330/buggy-version/src.banking.primitive.core.Savings.java", "BodyUseAPI": [], "Fixed commit": "c67acfd5771a87e77b5ed22f041d549f9c626f02", "Url": "https://api.github.com/repos/aawest1/cst316labcr", "Date": "2015-02-25T22:06:39Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mediaPlayer.isPlaying())) { musicPlaying = !(musicPlaying); play.setImageResource(R.drawable.media_pause_button); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1732/buggy-version/app.src.main.java.com.deadbeef.soundfreq.fragments.MediaPlayerFragment.java", "BodyUseAPI": [], "Fixed commit": "315156819fc8772c282a73d6fda2f34185660bf6", "Url": "https://api.github.com/repos/kylepotts/soundfreak", "Date": "2015-07-26T11:51:54Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDigit(i)) == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7855/buggy-version/src.Combination.java", "BodyUseAPI": [], "Fixed commit": "11559ba5b114fc0c54ea5682e5de9960ce1e41b8", "Url": "https://api.github.com/repos/maomihz/NumSolver", "Date": "2014-12-26T01:55:53Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message) player.sendMessage(((((org.bukkit.ChatColor.GREEN) + \"You have been given the kit \") + (org.bukkit.ChatColor.BLUE)) + name));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2212/buggy-version/src.net.izenith.Main.IPlayer.java", "BodyUseAPI": [], "Fixed commit": "b30fa87f062db807b5fe17205aa3ef6d1c87fe62", "Url": "https://api.github.com/repos/iZenith/IZenith-Main", "Date": "2015-08-31T05:29:30Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(java.lang.String,java.lang.String[],<nulltype>,<nulltype>,<nulltype>,<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cursor.getString(0)) != null) { if ((cursor.getString(0).compareTo(\"yes\")) == 0) { prevDate = cursor.getInt(2); prevDateMonth = cursor.getInt(3); if ((java.lang.Math.abs((currDate - prevDate))) <= 1) dosesInaRow++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8844/buggy-version/malaria-app-android.src.main.java.com.peacecorps.malaria.db.DatabaseSQLiteHelper.java", "BodyUseAPI": ["android.database.Cursor.getInt(int)", "cursor.getString(0).compareTo(java.lang.String)", "android.database.Cursor.getInt(int)", "android.database.Cursor.getString(int)"], "Fixed commit": "6b894304412b2983866b55129f2ceb28b0abe982", "Url": "https://api.github.com/repos/top-gun007/malaria-app-android", "Date": "2017-01-08T13:29:36Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (user == null) { if (exceptionOnMissingUser) throw new java.lang.IllegalArgumentException(net.dv8tion.jda.core.entities.EntityBuilder.MISSING_USER); else user = ((net.dv8tion.jda.core.entities.UserImpl) (createFakeUser(author, false))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3008/buggy-version/src.main.java.net.dv8tion.jda.core.entities.EntityBuilder.java", "BodyUseAPI": [], "Fixed commit": "d6fe588f3c61138a996ed148f3f7ce7a4ce7c150", "Url": "https://api.github.com/repos/MinnDevelopment/JDA", "Date": "2016-10-26T06:48:12Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filteredAllMusic) != null) filteredAllMusic.remove(selected);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5520/buggy-version/TheGreanGangRadio.src.app.managedBean.UserController.java", "BodyUseAPI": [], "Fixed commit": "2732beb6005495ef7043a804541b71f1a091e54b", "Url": "https://api.github.com/repos/lordgift/TheGreanGangRadio", "Date": "2013-08-12T12:28:39Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((filteredAllMusic) != null) filteredAllMusic.remove(selected);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5520/buggy-version/TheGreanGangRadio.src.app.managedBean.DjController.java", "BodyUseAPI": [], "Fixed commit": "2732beb6005495ef7043a804541b71f1a091e54b", "Url": "https://api.github.com/repos/lordgift/TheGreanGangRadio", "Date": "2013-08-12T12:28:39Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (baseElement instanceof org.activiti.bpmn.model.FlowElement) { org.activiti.editor.language.json.converter.BpmnJsonConverterUtil.convertListenersToJson(((org.activiti.bpmn.model.FlowElement) (baseElement)).getExecutionListeners(), true, propertiesNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2203/buggy-version/modules.flowable-json-converter.src.main.java.org.activiti.editor.language.json.converter.BaseBpmnJsonConverter.java", "BodyUseAPI": [], "Fixed commit": "4a203ae6d217b780b9eba581d78b724db947646f", "Url": "https://api.github.com/repos/flowable/flowable-engine", "Date": "2016-11-23T22:04:49Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userRepository.checkMail(email)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4481/buggy-version/sitim3-up.eventstsx.src.main.java.com.controllers.UserController.java", "BodyUseAPI": [], "Fixed commit": "791e73326e5d295d15adceb87aa67229e230aa0e", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2016_TIM3", "Date": "2017-06-09T15:14:25Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNetworkClient) != null) { mNetworkClient.removeConnectionListener(gameSession.getNetworkListener()); mNetworkClient.removeReceiveListener(gameSession.getNetworkListener().asGameStateReceiver()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3863/buggy-version/src.hu.bme.mit.asteroid.GameManager.java", "BodyUseAPI": [], "Fixed commit": "83ae5179ec78ea918bce1de54e83479dede8e4e4", "Url": "https://api.github.com/repos/mukris/asteroid", "Date": "2014-04-19T17:27:46Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNetworkServer) != null) { mNetworkServer.removeConnectionListener(gameSession.getNetworkListener()); mNetworkServer.removeReceiveListener(gameSession.getNetworkListener().asControlEventReceiver()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3863/buggy-version/src.hu.bme.mit.asteroid.GameManager.java", "BodyUseAPI": [], "Fixed commit": "83ae5179ec78ea918bce1de54e83479dede8e4e4", "Url": "https://api.github.com/repos/mukris/asteroid", "Date": "2014-04-19T17:27:46Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (par1 < 1.0F) { instance.lightValue = coloredlightscore.src.api.CLApi.makeRGBLightValue(par1, par1, par1); }else { instance.lightValue = ((int) (15.0F * par1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5299/buggy-version/src.main.java.coloredlightscore.src.helper.CLBlockHelper.java", "BodyUseAPI": ["coloredlightscore.src.api.CLApi.makeRGBLightValue(float,float,float)"], "Fixed commit": "240c257c8d47e6dcc0fe6a9c915911c60b7a41ee", "Url": "https://api.github.com/repos/CptSpaceToaster/CptsModdingLight", "Date": "2015-02-17T03:30:37Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (par1 < 0.0F) { par1 = 0.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5299/buggy-version/src.main.java.coloredlightscore.src.helper.CLBlockHelper.java", "BodyUseAPI": [], "Fixed commit": "240c257c8d47e6dcc0fe6a9c915911c60b7a41ee", "Url": "https://api.github.com/repos/CptSpaceToaster/CptsModdingLight", "Date": "2015-02-17T03:30:37Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((SMS_Service_State) && (!(settings.getBoolean(\"start_on_boot_preference\", false)))) { startService(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4262/buggy-version/TextSecretary.src.edu.gonzaga.textsecretary.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "dcabf8dc3f30b4d508576bf61e60a83b09c5fa8e", "Url": "https://api.github.com/repos/tjdfalcon/text_secretary", "Date": "2014-04-25T02:51:34Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.glucosio.android.db.DatabaseHandler.getUser(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(\"percentage\".equals(user.getPreferred_unit_a1c()))) { org.glucosio.android.tools.GlucosioConverter converter = new org.glucosio.android.tools.GlucosioConverter(); finalA1c = converter.a1cIfccToNgsp(a1c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3152/buggy-version/app.src.main.java.org.glucosio.android.presenter.A1CCalculatorPresenter.java", "BodyUseAPI": [], "Fixed commit": "590d429fcbbb58663817e39df899cf66dbf33f96", "Url": "https://api.github.com/repos/Glucosio/glucosio-android", "Date": "2016-10-14T09:18:37Z"},
{"Line": "=>857", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Menue.serverThread) != null) { Menue.serverThread.out.println(\"abfrage_neustart\"); }else if ((Menue.clientThread) != null) { Menue.clientThread.out.println(\"abfrage_neustart\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/135/buggy-version/src.Menue.java", "BodyUseAPI": [], "Fixed commit": "2f469126cda8d84ee3fe54513368df703e974a6a", "Url": "https://api.github.com/repos/propra12-orga/gruppe23", "Date": "2012-06-26T10:56:09Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (in_string.equals(\"abfrage_neustarten\")) { Menue.abfrage_neustarten(); }else if (in_string.equals(\"neustart\")) { antwort = \"leer\"; Menue.createAndShowGui(\"Das Spiel wird in \", \" neugestartet...\", 5, 300, 100, 0); Menue.spiel_neustarten(); }else if (in_string.equals(\"level\")) { level = java.lang.Integer.parseInt(in.readLine()); antwort = \"leer\"; MapLoader.set_level(level); Menue.spiel_neustarten(); }else { java.lang.System.out.println((\"x = \" + (in_string))); java.lang.System.out.println(); x = java.lang.Integer.parseInt(in_string); java.lang.System.out.println((\"x-Bewegung von Spieler 2: \" + (x))); java.lang.System.out.println(); in_string = in.readLine(); java.lang.System.out.println((\"y = \" + (in_string))); java.lang.System.out.println(); y = java.lang.Integer.parseInt(in_string); java.lang.System.out.println((\"y-Bewegung von Spieler 2: \" + (y))); java.lang.System.out.println(); Menue.spieler2_aktionen(x, y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/135/buggy-version/src.Server.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "2f469126cda8d84ee3fe54513368df703e974a6a", "Url": "https://api.github.com/repos/propra12-orga/gruppe23", "Date": "2012-06-26T10:56:09Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hashTable) != null) { probeIndex = hashTable.containsKey(recordsProcessed, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1386/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.physical.impl.join.HashJoinProbeTemplate.java", "BodyUseAPI": [], "Fixed commit": "283ec718d604c6a0670176dcb1d091f002c75ef4", "Url": "https://api.github.com/repos/sudheeshkatkam/incubator-drill", "Date": "2014-05-23T18:13:39Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getStatus()) > 0) response.setStatus(this.getStatus());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7840/buggy-version/src.main.java.com.googlecode.webutilities.common.WebUtilitiesResponseWrapper.java", "BodyUseAPI": [], "Fixed commit": "6c0f59d580620feb97e3af6c718706f44d9cf34f", "Url": "https://api.github.com/repos/rpatil26/webutilities", "Date": "2012-04-04T07:42:57Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eyeseetea.malariacare.database.utils.Session.getSurveyByModule(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (survey.hasMainScore()) { float average = survey.getMainScore(); org.eyeseetea.malariacare.views.CustomTextView item = ((org.eyeseetea.malariacare.views.CustomTextView) (llLayout.findViewById(R.id.feedback_total_score))); item.setText(java.lang.String.format(\"%.1f%%\", average)); int colorId = org.eyeseetea.malariacare.layout.utils.LayoutUtils.trafficColor(average); item.setTextColor(getResources().getColor(colorId)); }else { org.eyeseetea.malariacare.views.CustomTextView item = ((org.eyeseetea.malariacare.views.CustomTextView) (llLayout.findViewById(R.id.feedback_total_score))); item.setText(java.lang.String.format(\"NaN\")); float average = 0; int colorId = org.eyeseetea.malariacare.layout.utils.LayoutUtils.trafficColor(average); item.setTextColor(getResources().getColor(colorId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1943/buggy-version/app.src.main.java.org.eyeseetea.malariacare.fragments.FeedbackFragment.java", "BodyUseAPI": ["org.eyeseetea.malariacare.database.model.Survey.getMainScore()"], "Fixed commit": "9bdfb785e4737e1ba186204c29636b3ff109416c", "Url": "https://api.github.com/repos/EyeSeeTea/malariapp", "Date": "2016-06-03T19:12:10Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (libFile.getName().endsWith(\".jar\")) { urls[(i++)] = libFile.getAbsoluteFile().toURI().toURL(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4137/buggy-version/easysoa-registry.easysoa-registry-frascati.src.main.java.org.easysoa.registry.frascati.FraSCAtiAppComponent.java", "BodyUseAPI": ["java.io.File.toURI()", "java.net.URI.toURL()", "java.io.File.getAbsoluteFile()"], "Fixed commit": "1ed79b2fe786f3f1d0d210e601b13824b23d7787", "Url": "https://api.github.com/repos/easysoa/EasySOA", "Date": "2012-06-05T08:45:09Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(product.getCp())", "java.lang.Integer.parseInt(product.getSp())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cp > sp) { int loss = cp - sp; value = (((cp + \" - \") + sp) + \" = \") + loss; label = R.string.sp_cp_loss; }else { if (sp > cp) { int profit = sp - cp; value = (((cp + \" - \") + sp) + \" = \") + profit; label = R.string.sp_cp_profit; }else { value = (((cp + \" - \") + sp) + \" = \") + 0; label = R.string.sp_cp_breakeven; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8425/buggy-version/app.src.main.java.com.hackerkernel.storemanager.SellActivity.java", "BodyUseAPI": [], "Fixed commit": "2c5a194668350768528501b6864ba8d0f158c5db", "Url": "https://api.github.com/repos/husainsaify/StoreManger", "Date": "2015-12-22T19:03:24Z"},
{"Line": "=>1177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((argList.size()) == (e.getValue())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5395/buggy-version/src.dfh.cli.Cli.java", "BodyUseAPI": [], "Fixed commit": "513bcf404865d79758da35282657713cdf72954d", "Url": "https://api.github.com/repos/dfhoughton/CLI", "Date": "2012-09-04T20:57:38Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEmpty(grid, headTarget))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3472/buggy-version/Snake.java", "BodyUseAPI": [], "Fixed commit": "efe9c7a7d024d5995f96847d99e84ab5fc15d01f", "Url": "https://api.github.com/repos/DJMcoder/snake", "Date": "2016-05-13T01:22:04Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Model.Entity.Entity.getNextTileColumn(Model.Map,Model.Entity.Orientation)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (tmp != null) { int nextZ = (tmp.getTopPosition()) - 1; int difference = nextZ - (location.getZ()); if (difference <= 1) { if (navigation.move(getNextTile(map, orientation), this)) { updateLocation(map, orientation, difference); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6509/buggy-version/src.Model.Entity.Entity.java", "BodyUseAPI": ["Model.Entity.TileColumn.getTopPosition()"], "Fixed commit": "e23cf15a6256e7990f000141a2fedeeab9383c4a", "Url": "https://api.github.com/repos/sOOPerBrofessors/Iteration3", "Date": "2016-04-10T02:38:49Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inline.equals(\"DW\")) { data.Simulator.setWeightDisplay(\"\"); data.Simulator.printmenu(); outstream.writeBytes((\"DW A\" + \"\\r\\n\")); }else if (inline.startsWith(\"D\")) { if (inline.equals(\"D\")) { data.Simulator.setWeightDisplay(\"\"); data.Simulator.printmenu(); outstream.writeBytes((\"D A\" + \"\\r\\n\")); }else { if ((inline.length()) <= 9) { if (((inline.charAt(2)) == '\\\"') && ((inline.charAt(((inline.length()) - 1))) == '\\\"')) { data.Simulator.setWeightDisplay(inline.substring(3, ((inline.length()) - 1)).trim()); data.Simulator.printmenu(); outstream.writeBytes((\"D A\" + \"\\r\\n\")); }else { outstream.writeBytes((\"S\" + \"\\r\\n\")); } }else { outstream.writeBytes((\"S\" + \"\\r\\n\")); } } }else if (inline.equals(\"T\")) { data.Simulator.setTara(data.Simulator.getBrutto()); if ((java.lang.String.valueOf(data.Simulator.getTara()).length()) <= 7) { outstream.writeBytes((((\"T S \" + (data.Simulator.getTara())) + \"kg\") + \"\\r\\n\")); }else { outstream.writeBytes((\"S\" + \"\\r\\n\")); } data.Simulator.printmenu(); }else if (inline.equals(\"S\")) { data.Simulator.printmenu(); outstream.writeBytes((((\"S S \" + ((data.Simulator.getBrutto()) - (data.Simulator.getTara()))) + \" kg\") + \"\\r\\n\")); }else if (inline.equals(\"B\")) { java.lang.String temp = inline.substring(2, inline.length()).trim(); if ((temp.length()) <= 7) { data.Simulator.setBrutto(java.lang.Double.parseDouble(temp)); data.Simulator.printmenu(); outstream.writeBytes((\"DB\" + \"\\r\\n\")); } }else if (inline.equals(\"Q\")) { java.lang.System.out.println(\"\"); java.lang.System.out.println(\"Program stoppet Q modtaget paa com port\"); java.lang.System.in.close(); java.lang.System.out.close(); instream.close(); outstream.close(); data.SimInput.stopGracefully(); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6353/buggy-version/src.data.ClientInput.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.trim()", "java.lang.String.substring(int,int)", "java.lang.String.charAt(int)", "data.Simulator.setWeightDisplay(java.lang.String)", "java.lang.String.length()", "java.lang.String.equals(java.lang.String)", "java.lang.String.length()", "java.lang.String.trim()", "java.lang.String.length()", "java.lang.String.equals(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.length()", "java.lang.String.charAt(int)", "java.lang.String.substring(int,int)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "b73c44cafe29c0cf6017a1d3911f70481dfd3c9d", "Url": "https://api.github.com/repos/ProjectGroup-CDIO/18_CDIO2", "Date": "2015-03-25T10:46:36Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (bitmap != null) { if ((nigelhenshaw.com.cameraintenttutorial.CamaraIntentActivity.getBitmapFromMemoryCache(key)) == null) { nigelhenshaw.com.cameraintenttutorial.CamaraIntentActivity.mMemoryCache.put(key, bitmap); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3889/buggy-version/app.src.main.java.nigelhenshaw.com.cameraintenttutorial.CamaraIntentActivity.java", "BodyUseAPI": ["android.util.LruCache<java.lang.String, android.graphics.Bitmap>.put(java.lang.String,android.graphics.Bitmap)"], "Fixed commit": "7269b80a5f20502bc2a724be8efa1da8acee41ac", "Url": "https://api.github.com/repos/mabeto5p/cameraAPI", "Date": "2017-02-24T14:50:49Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rect.contains(((eu.trentorise.smartcampus.jp.custom.CustomGridView.getLeft()) + ((int) (x))), ((eu.trentorise.smartcampus.jp.custom.CustomGridView.getTop()) + ((int) (y))))) { int i = ((int) (x / (getColWidth()))); int j = ((int) (y / (getRowHeight()))); handleClick(data.get(((j * (getNumCols())) + i))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7801/buggy-version/src.eu.trentorise.smartcampus.jp.custom.CustomGridView.java", "BodyUseAPI": [], "Fixed commit": "983b4caab2bfcebfe54f9699fa9ed5949a187ed7", "Url": "https://api.github.com/repos/smartcampuslab/android.journeyplanner.lib", "Date": "2013-09-26T11:05:22Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { selectItem(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7125/buggy-version/Chapter_9.BitsandPizzas.app.src.main.java.com.hfad.bitsandpizzas.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f9861f55651e262dd40a48beebc2fcb01b8c5396", "Url": "https://api.github.com/repos/iluxonchik/head-first-android-development-book", "Date": "2015-07-20T23:11:17Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, zone.cogni.assignment.dto.Message>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tempMessage.isActive()) { tempMessage.setActive(false); return tempMessage; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1602/buggy-version/src.main.java.zone.cogni.assignment.dao.MessageDAO.java", "BodyUseAPI": ["zone.cogni.assignment.dto.Message.setActive(boolean)"], "Fixed commit": "c52db19f8504448db5593b6a2e8353bc2df64ef0", "Url": "https://api.github.com/repos/jainvs11/Cognizone-Assignment-", "Date": "2016-07-25T19:37:23Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(user.getFullName())) { com.quickblox.q_municate_core.utils.helpers.CoreSharedHelper.getInstance().saveUsersImportInitialized(false); getTDUserWithFullName(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6903/buggy-version/Q-municate_app.src.main.java.com.quickblox.q_municate.ui.activities.authorization.BaseAuthActivity.java", "BodyUseAPI": ["com.quickblox.q_municate.ui.activities.authorization.BaseAuthActivity.TwitterDigitsAuthCallback.2.getTDUserWithFullName(com.quickblox.users.model.QBUser)"], "Fixed commit": "e460eebe40996764feef465efae43766e2c94fda", "Url": "https://api.github.com/repos/QuickBlox/q-municate-android", "Date": "2017-02-06T10:47:18Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.quickblox.q_municate_core.utils.Utils.customDataToObject(user.getCustomData())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(userCustomData.getAvatarUrl())) { com.quickblox.q_municate_core.utils.helpers.CoreSharedHelper.getInstance().saveUsersImportInitialized(false); getFBUserWithAvatar(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6903/buggy-version/Q-municate_app.src.main.java.com.quickblox.q_municate.ui.activities.authorization.BaseAuthActivity.java", "BodyUseAPI": [], "Fixed commit": "e460eebe40996764feef465efae43766e2c94fda", "Url": "https://api.github.com/repos/QuickBlox/q-municate-android", "Date": "2017-02-06T10:47:18Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.sporkpgm.team.spawns.kits.SporkKitBuilder.parseEnchantments(org.dom4j.Element,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (enchantments != null) stack.addUnsafeEnchantments(enchantments);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6277/buggy-version/src.main.java.io.sporkpgm.team.spawns.kits.SporkKitBuilder.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.addUnsafeEnchantments(java.util.Map<org.bukkit.enchantments.Enchantment, java.lang.Integer>)"], "Fixed commit": "be067c99b24e774c6c05b2be1d324dd98d3e06fc", "Url": "https://api.github.com/repos/TheMolkaPL/SporkPGM", "Date": "2014-04-17T12:21:40Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((googleMap) != null) { com.google.android.gms.maps.CameraUpdate center = com.google.android.gms.maps.CameraUpdateFactory.newLatLng(new com.google.android.gms.maps.model.LatLng(location.getLatitude(), location.getLongitude())); com.google.android.gms.maps.CameraUpdate zoom = com.google.android.gms.maps.CameraUpdateFactory.zoomTo(java.lang.Integer.parseInt(getResources().getString(R.config.cameraInitialZoom))); googleMap.moveCamera(center); googleMap.animateCamera(zoom); locationManager.removeUpdates(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8239/buggy-version/geo-catch-mobile.src.main.java.com.jrew.geocatch.mobile.fragment.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "0077c71300fcc2dc13c8b2feb4cc037951e503de", "Url": "https://api.github.com/repos/vadzim-kazak/geo-catch", "Date": "2014-02-17T20:35:26Z"},
{"Line": "=>719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getInputs().size()) == 0) { rewriteGeneric(p); }else { throw org.apache.calcite.util.Util.newInternal((((\"no '\" + visitMethodName) + \"' method found for class \") + (p.getClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1244/buggy-version/core.src.main.java.org.apache.calcite.sql2rel.RelStructuredTypeFlattener.java", "BodyUseAPI": ["org.apache.calcite.sql2rel.RelStructuredTypeFlattener.RewriteRelVisitor.rewriteGeneric(org.apache.calcite.rel.RelNode)", "org.apache.calcite.util.Util.newInternal((((\"no '\" + visitMethodName) + \"' method found for class \") + (p.getClass().getName())))", "p.getClass().getName()", "org.apache.calcite.rel.RelNode.getClass()"], "Fixed commit": "3b9119467256e58b05ff24369473bce32b46de50", "Url": "https://api.github.com/repos/julienledem/calcite", "Date": "2015-11-04T23:32:48Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fixationTimeStrategy) || (isNoStrategySelected())) { timeout = ((timeoutMinutes) * 60L) * 1000L; }else if (likelyStuckStrategy) { timeout = getLikelyStuckTime(); }else { timeout = ((timeoutMinutes) * 60L) * 1000L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3062/buggy-version/src.main.java.hudson.plugins.build_timeout.BuildTimeoutWrapper.java", "BodyUseAPI": [], "Fixed commit": "b3b0c4ce84b102455f4b82f0e5417172cf37eeeb", "Url": "https://api.github.com/repos/ndeloof/build-timeout-plugin", "Date": "2011-11-05T16:46:08Z"},
{"Line": "=>696", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.ignore())) ad.put(f.name(), f.get(o));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3570/buggy-version/stork.ad.Ad.java", "BodyUseAPI": ["stork.ad.AdMember.get(java.lang.Object)", "stork.ad.Ad.put(f.name(),f.get(o))", "stork.ad.AdMember.name()"], "Fixed commit": "9f6be31147a5ee3bd0d6f6c6195bdd355f01b077", "Url": "https://api.github.com/repos/didclab/stork", "Date": "2014-05-14T17:54:56Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(line.startsWith(\"results[\"))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5491/buggy-version/src.edu.ucla.cs.mine.TraditionalPredicateMiner.java", "BodyUseAPI": [], "Fixed commit": "4297b608edd2f3fea8c7974ea97f37dbe5ad64dc", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-16T20:26:13Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEditingTask)) { fileManager.createBackup(todo, todoBackup); simplyamazing.storage.Storage.logger.log(java.util.logging.Level.INFO, simplyamazing.storage.Storage.MESSAGE_LOG_TASK_DATA_BACKUP_FILE_UPDATED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5362/buggy-version/src.simplyamazing.storage.Storage.java", "BodyUseAPI": [], "Fixed commit": "ccce3eacfcab8ba9f374142c237d05e93899d9fc", "Url": "https://api.github.com/repos/CS2103jan2016-w13-3j/main", "Date": "2016-03-21T21:09:33Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMovie) != null) { android.database.Cursor cursor = getContext().getContentResolver().query(MovieContract.TrailersEntry.CONTENT_URI, com.example.bridge.firstmovieapp.fragments.DetailFragment.TRAILER_LIST_COLUMNS, ((MovieContract.TrailersEntry.COLUMN_MOVIE_ID) + \"=? \"), new java.lang.String[]{ mMovie.id }, null); mTrailerRecyclerAdapter.setMovieCursor(cursor); if ((mTrailerRecyclerAdapter.getItemCount()) != 0) { this.trailerLabel.setText(R.string.trailer_label); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7501/buggy-version/app.src.main.java.com.example.bridge.firstmovieapp.fragments.DetailFragment.java", "BodyUseAPI": [], "Fixed commit": "86934c1826814fd9de2f9aff26036f2b981926cc", "Url": "https://api.github.com/repos/hppyft/FirstMovieApp", "Date": "2016-11-24T19:23:28Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMovie) != null) { android.database.Cursor cursor = getContext().getContentResolver().query(MovieContract.ReviewsEntry.CONTENT_URI, com.example.bridge.firstmovieapp.fragments.DetailFragment.REVIEW_LIST_COLUMNS, ((MovieContract.ReviewsEntry.COLUMN_MOVIE_ID) + \"=? \"), new java.lang.String[]{ mMovie.id }, null); mReviewRecyclerAdapter.setMovieCursor(cursor); if ((mReviewRecyclerAdapter.getItemCount()) != 0) { this.reviewLabel.setText(R.string.detail_review_label); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7501/buggy-version/app.src.main.java.com.example.bridge.firstmovieapp.fragments.DetailFragment.java", "BodyUseAPI": [], "Fixed commit": "86934c1826814fd9de2f9aff26036f2b981926cc", "Url": "https://api.github.com/repos/hppyft/FirstMovieApp", "Date": "2016-11-24T19:23:28Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.length()) < 5) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/492/buggy-version/src.Parse.java", "BodyUseAPI": [], "Fixed commit": "5ae05fb6feef3f2864ec7a62a3f3b65c80142d2b", "Url": "https://api.github.com/repos/getsadzeg/gegram-class", "Date": "2015-12-22T12:56:03Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (target instanceof org.w3c.dom.Node) { org.jbpm.workflow.instance.node.WorkItemNodeInstance._assignmentsLogger.debug(org.jbpm.workflow.instance.node.WorkItemNodeInstance.serializeXML(((org.w3c.dom.Node) (target)))); }else { org.jbpm.workflow.instance.node.WorkItemNodeInstance._assignmentsLogger.debug(java.lang.String.valueOf(target)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4077/buggy-version/jbpm-flow.src.main.java.org.jbpm.workflow.instance.node.WorkItemNodeInstance.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.Object)", "org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "ca7c85f8837319106e82958cfab7fec7c63de280", "Url": "https://api.github.com/repos/ServiceMax-Engineering/jbpm", "Date": "2011-03-04T01:52:15Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (source instanceof org.w3c.dom.Node) { org.jbpm.workflow.instance.node.WorkItemNodeInstance._assignmentsLogger.debug(org.jbpm.workflow.instance.node.WorkItemNodeInstance.serializeXML(((org.w3c.dom.Node) (source)))); }else { org.jbpm.workflow.instance.node.WorkItemNodeInstance._assignmentsLogger.debug(java.lang.String.valueOf(source)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4077/buggy-version/jbpm-flow.src.main.java.org.jbpm.workflow.instance.node.WorkItemNodeInstance.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)", "java.lang.String.valueOf(java.lang.Object)"], "Fixed commit": "ca7c85f8837319106e82958cfab7fec7c63de280", "Url": "https://api.github.com/repos/ServiceMax-Engineering/jbpm", "Date": "2011-03-04T01:52:15Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(out.exists())) { try { out.createNewFile(); mCacheMgr.writeImgToFile(in, out); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4946/buggy-version/app.src.main.java.com.github.xzwj87.mineflea.market.data.cache.FileCacheImpl.java", "BodyUseAPI": ["java.io.File.createNewFile()", "com.github.xzwj87.mineflea.market.data.cache.CacheManager.writeImgToFile(java.io.File,java.io.File)"], "Fixed commit": "39da35212639c4e08794d492973b24882fdc32e4", "Url": "https://api.github.com/repos/xzwj87/MineFlea", "Date": "2016-12-12T14:21:12Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.orientechnologies.orient.server.distributed.task.OAbstractRecordReplicatedTask>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (task instanceof com.orientechnologies.orient.server.distributed.task.OCreateRecordTask) { final com.orientechnologies.orient.server.distributed.task.OCreateRecordTask t = ((com.orientechnologies.orient.server.distributed.task.OCreateRecordTask) (task)); results.set(i, new com.orientechnologies.orient.core.db.record.OPlaceholder(task.getRid(), task.getVersion())); }else if (task instanceof com.orientechnologies.orient.server.distributed.task.OUpdateRecordTask) { final com.orientechnologies.orient.server.distributed.task.OUpdateRecordTask t = ((com.orientechnologies.orient.server.distributed.task.OUpdateRecordTask) (task)); results.set(i, task.getVersion()); }else if (task instanceof com.orientechnologies.orient.server.distributed.task.ODeleteRecordTask) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5887/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.task.OTxTask.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.set(int,com.orientechnologies.orient.core.db.record.OPlaceholder)", "com.orientechnologies.orient.server.distributed.task.OAbstractRecordReplicatedTask.getRid()", "com.orientechnologies.orient.server.distributed.task.OAbstractRecordReplicatedTask.getVersion()", "java.util.List<java.lang.Object>.set(int,task.getVersion())", "com.orientechnologies.orient.server.distributed.task.OAbstractRecordReplicatedTask.getVersion()"], "Fixed commit": "4d51cd87d87d9ebb2d80906e9a5da039ad9786d6", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-04-04T17:27:29Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (data == null) { throw new java.lang.IllegalArgumentException((\"Not a family: \" + (familyDocument.getDocumentReference()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3409/buggy-version/components.family-studies.api.src.main.java.org.phenotips.studies.family.internal.PhenotipsFamily.java", "BodyUseAPI": [], "Fixed commit": "0e60c3eee13e428c3d7ae2e0abc6316dbd34a7bf", "Url": "https://api.github.com/repos/phenotips/phenotips", "Date": "2017-09-18T22:47:31Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.akrog.tolomet.data.DbTolomet.findStations(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (list.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3696/buggy-version/Project.tolometGui.src.main.java.com.akrog.tolomet.data.DbTolomet.java", "BodyUseAPI": [], "Fixed commit": "49527c38f38800f5351b3c39010c43c4e4dbbfbc", "Url": "https://api.github.com/repos/akrogp/tolomet", "Date": "2017-02-21T18:25:03Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attributes) != null) { for (java.util.Iterator it = attributes.iterator(); it.hasNext();) { org.jdom.Attribute a = ((org.jdom.Attribute) (it.next())); if (prefix.equals(a.getNamespacePrefix())) { return a.getNamespace(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8955/buggy-version/core.src.java.org.jdom.Element.java", "BodyUseAPI": [], "Fixed commit": "daeaaf5d2d60ec5099a8bd92e8d5201cdf542f43", "Url": "https://api.github.com/repos/hunterhacker/jdom", "Date": "2011-09-21T03:50:15Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.equalsIgnoreCase(\"\")) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8164/buggy-version/app.src.main.java.net.stepbystep.calculator.Operations.java", "BodyUseAPI": [], "Fixed commit": "7526a06e5c804352d35e5d7a57c36550fab2dc7c", "Url": "https://api.github.com/repos/Mohammed-Alaa/Simple-Calculator-master", "Date": "2016-12-18T21:16:45Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((operation.length) >= 2) { this.operator = operator; result = equalClicked(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8164/buggy-version/app.src.main.java.net.stepbystep.calculator.Operations.java", "BodyUseAPI": [], "Fixed commit": "7526a06e5c804352d35e5d7a57c36550fab2dc7c", "Url": "https://api.github.com/repos/Mohammed-Alaa/Simple-Calculator-master", "Date": "2016-12-18T21:16:45Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getRoleId()) == 2000) { user.setUserType(\"A\"); }else if ((user.getRoleId()) == 1000) { user.setUserType(\"C\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7908/buggy-version/MortgageOriginationRestService.src.main.java.com.jpmorgan.awm.pb.mortgageorigination.dao.impl.UserDAOImpl.java", "BodyUseAPI": ["com.myorg.losmodel.model.User.setUserType(java.lang.String)", "com.myorg.losmodel.model.User.setUserType(java.lang.String)", "com.myorg.losmodel.model.User.getRoleId()"], "Fixed commit": "b23d1d53dc3cde23750281ffa969726fcead1a64", "Url": "https://api.github.com/repos/los2016org/LoanOriginationSystem", "Date": "2016-04-29T00:14:22Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (player != p) { Dev.BarnyardMC.util.ParticleMath.PushBack(p, player, 5); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2803/buggy-version/TrigWars.src.Dev.BarnyardMC.core.TrigWars.java", "BodyUseAPI": ["Dev.BarnyardMC.util.ParticleMath.PushBack(org.bukkit.entity.Player,org.bukkit.entity.Player,int)"], "Fixed commit": "7133e7842db7df09a0414666c43166a01165af8b", "Url": "https://api.github.com/repos/MisterJW123/TheBarnyardMC", "Date": "2017-08-13T04:35:42Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opendatakit.database.data.Row.getCellIndexByKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cell == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3614/buggy-version/androidlibrary_lib.src.main.java.org.opendatakit.database.data.Row.java", "BodyUseAPI": [], "Fixed commit": "254137ff4302aac29a6a8804ffab37fa9e10d143", "Url": "https://api.github.com/repos/opendatakit/androidlibrary", "Date": "2017-05-23T22:40:14Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.hops.security.UsersGroups.cached) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2776/buggy-version/hadoop-common-project.hadoop-common.src.main.java.io.hops.security.UsersGroups.java", "BodyUseAPI": [], "Fixed commit": "0ebc162bfa1c08ceb45841bda5f154469c1be1e3", "Url": "https://api.github.com/repos/maismail/hops", "Date": "2015-10-05T07:49:25Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (spawnChance < 500) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8298/buggy-version/src.main.java.edu.calpoly.odyssey.map.MapGenerator.java", "BodyUseAPI": [], "Fixed commit": "2340c617072e3fc26b0e3a9c5d8b6a7ffdf0f586", "Url": "https://api.github.com/repos/cpe305Spring17/spring2017-project-collindutter", "Date": "2017-05-31T19:28:41Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mConversationView) != null) { removeView(mConversationView); mConversationView = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4844/buggy-version/android.libraries.TweetLanesCore.src.com.tweetlanes.android.core.view.TweetFeedItemView.java", "BodyUseAPI": [], "Fixed commit": "a1f865189d9d435b7577826c7726629a14cc827e", "Url": "https://api.github.com/repos/R4md4c/TweetLanes", "Date": "2013-12-04T09:51:07Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((refTrackResourceEditRate != null) && (trackResourceEditRate != null)) && (!(trackResourceEditRate.equals(refTrackResourceEditRate)))) { imfErrorLogger.addError(IMFErrorLogger.IMFErrors.ErrorCodes.IMF_CPL_ERROR, IMFErrorLogger.IMFErrors.ErrorLevels.FATAL, java.lang.String.format(\"VirtualTrack with ID %s has resources with inconsistent editRates (First TrackResource EditRate %s), %s\", trackID.toString(), trackResourceEditRate.toString(), refTrackResourceEditRate)); result = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/699/buggy-version/src.main.java.com.netflix.imflibrary.st2067_2.CompositionModels.IMFCoreConstraintsChecker_st2067_2_2013.java", "BodyUseAPI": ["com.netflix.imflibrary.IMFErrorLogger.addError(IMFErrorLogger.IMFErrors.ErrorCodes.IMF_CPL_ERROR,IMFErrorLogger.IMFErrors.ErrorLevels.FATAL,java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String,trackResourceEditRate.toString(),Composition.EditRate)", "Composition.EditRate.toString()"], "Fixed commit": "f42e2a2af85415dd8006ebb77bf27514dcd5c08a", "Url": "https://api.github.com/repos/Netflix/photon", "Date": "2016-06-09T00:54:15Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (nodeMap != null) this.nodeMap.putAll(nodeMap);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2142/buggy-version/ontology-model.src.main.java.au.csiro.ontology.Ontology.java", "BodyUseAPI": [], "Fixed commit": "c328f601eba333188d830586936ad03a42bd783f", "Url": "https://api.github.com/repos/aehrc/ontology-core", "Date": "2013-01-25T03:41:54Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["engine.save.levelData.ObjectEntityData.loadSave(engine.save.SaveComponent,level.maps.Level)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (loadedObjectEntity != null) level.entityManager.addObjectEntity(loadedObjectEntity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7999/buggy-version/src.engine.save.LevelData.java", "BodyUseAPI": ["level.entityManager.addObjectEntity(entity.objectEntity.ObjectEntity)"], "Fixed commit": "fc4cb8daf17fe17ea0e18cb107e4bc7038b1d58e", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-05-01T13:22:46Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.Criteria.uniqueResult()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2349/buggy-version/modules.persistence.src.main.java.org.shaolin.bmdp.persistence.BEEntityDaoObject.java", "BodyUseAPI": [], "Fixed commit": "eae84b073b80a95c67bedb37a80a4bcd5d114fab", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2015-12-28T02:34:22Z"},
{"Line": "=>1414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Wand.manaMode.useXPBar()) { expProgress = activeWand.getStoredXpProgress(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5884/buggy-version/src.main.java.com.elmakers.mine.bukkit.magic.Mage.java", "BodyUseAPI": [], "Fixed commit": "315346edd526aff73c9f7cb10a5789dbef0e8d0e", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2015-10-09T16:44:14Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getBooleanExtra(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isFromNotify) { setisLeave(contentID, \"1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3633/buggy-version/app.src.main.java.com.yscn.knucommunity.Activity.ShareTaxiDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "27f1883e8902dcef7b596f7710669d3b09ea98a0", "Url": "https://api.github.com/repos/GwonHyeok/KangNamUnivCommunity", "Date": "2015-02-01T08:16:02Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.remove) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6382/buggy-version/src.game.lib.Enemies.java", "BodyUseAPI": [], "Fixed commit": "614569cf821125c6157e716bfa276e347461e742", "Url": "https://api.github.com/repos/modanhan/lwjgl3test", "Date": "2015-12-19T00:56:27Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tenant == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2961/buggy-version/oscm-portal.javasrc.org.oscm.ui.filter.AuthenticationSettings.java", "BodyUseAPI": [], "Fixed commit": "19e0cd200a083f43e3fd5eccc9e34a2c9ddf9a9f", "Url": "https://api.github.com/repos/servicecatalog/development", "Date": "2017-02-15T10:34:13Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hippo.unifile.UniFile.fromUri(android.content.Context,android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == file) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3382/buggy-version/app.src.main.java.com.hippo.ehviewer.widget.ImageSearchLayout.java", "BodyUseAPI": [], "Fixed commit": "c285562971944093319a04a09ee2381db5036832", "Url": "https://api.github.com/repos/seven332/EhViewer", "Date": "2016-03-31T12:42:55Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (mp != null) { mp.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2732/buggy-version/app.src.main.java.classact.com.xprize.activity.drill.sound.SoundDrillOneActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.release()"], "Fixed commit": "221d1eec5359f236db3b0111637144d2758f5a86", "Url": "https://api.github.com/repos/classact/XPrize", "Date": "2017-02-05T16:53:39Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ColorEt.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((((color.compareTo(\"red\")) == 0) || ((color.compareTo(\"blue\")) == 0)) || ((color.compareTo(\"green\")) == 0)) || ((color.compareTo(\"white\")) == 0)) || ((color.compareTo(\"black\")) == 0)) { com.nsl.lostandfound.BackgroundWorkerFinder backgroundWorkerFinder = new com.nsl.lostandfound.BackgroundWorkerFinder(this); backgroundWorkerFinder.execute(type, name, description, color, length, width, location, email, com.nsl.lostandfound.FReport.uploadImage); }else { android.widget.Toast.makeText(this, \"Enter color from the given list\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6217/buggy-version/app.src.main.java.com.nsl.lostandfound.FReport.java", "BodyUseAPI": ["com.nsl.lostandfound.BackgroundWorkerFinder.execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "8604f91bcb0979b8b74ba75163b166c0552af9c5", "Url": "https://api.github.com/repos/lakshitgarg/lostandfound", "Date": "2017-03-23T15:02:50Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ColorEt.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((((color.compareTo(\"red\")) == 0) || ((color.compareTo(\"blue\")) == 0)) || ((color.compareTo(\"green\")) == 0)) || ((color.compareTo(\"white\")) == 0)) || ((color.compareTo(\"black\")) == 0)) { com.nsl.lostandfound.BackgroundWorker backgroundWorker = new com.nsl.lostandfound.BackgroundWorker(this); backgroundWorker.execute(type, name, description, color, length, width, location, email, com.nsl.lostandfound.Report.uploadImage); }else { android.widget.Toast.makeText(this, \"Enter color from the given list\", Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6217/buggy-version/app.src.main.java.com.nsl.lostandfound.Report.java", "BodyUseAPI": ["com.nsl.lostandfound.BackgroundWorker.execute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "8604f91bcb0979b8b74ba75163b166c0552af9c5", "Url": "https://api.github.com/repos/lakshitgarg/lostandfound", "Date": "2017-03-23T15:02:50Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "com.epam.freelancer.web.controller.UserEntity.getEmail()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((changeEmail != null) && (!(\"\".equals(changeEmail)))) && (!(changeEmail.equals(from)))) { from = changeEmail; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2839/buggy-version/web.src.main.java.com.epam.freelancer.web.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "37479dc010a2e638f860dd2acd857ec8d0c5fb51", "Url": "https://api.github.com/repos/BohdanTfx/freelancer", "Date": "2016-02-01T08:39:35Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(line.equals(\"NO\"))) updateAvailable(line);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3827/buggy-version/src.com.dvd.updatechecker.InfoActivity.java", "BodyUseAPI": ["com.dvd.updatechecker.InfoActivity.updateAvailable(java.lang.String)"], "Fixed commit": "4a740e560d834d9418d6ffcf02011f292fe04783", "Url": "https://api.github.com/repos/DVDAndroid/UpdateChecker", "Date": "2014-09-06T13:09:23Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hp.hpl.jena.query.QuerySolution.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (coauthor != null) { com.hp.hpl.jena.rdf.model.Literal weight = querySolution.getLiteral(\"weight\"); coauthorMap.put(coauthor, java.lang.Integer.valueOf(weight.getLexicalForm())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7495/buggy-version/src.main.java.it.istc.cnr.stlab.clodg.quality.AnalyseNames.java", "BodyUseAPI": ["java.util.Map<com.hp.hpl.jena.rdf.model.Resource, java.lang.Integer>.put(com.hp.hpl.jena.rdf.model.Resource,java.lang.Integer)"], "Fixed commit": "f4b6dcfda4080e730a74123da56589982e8dd7fa", "Url": "https://api.github.com/repos/AnLiGentile/cLODg", "Date": "2015-11-17T18:13:00Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((keywords.length) > 0) { return currentState.updateMatchedLabels(repoLabels, keywords[((keywords.length) - 1)]); }else { return currentState.updateMatchedLabels(repoLabels, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/9134/buggy-version/src.main.java.ui.components.pickers.LabelPickerUILogic.java", "BodyUseAPI": ["ui.components.pickers.LabelPickerState.updateMatchedLabels(java.util.Set<java.lang.String>,java.lang.String)"], "Fixed commit": "4f5aceffa6178327e3bcc80ed169b778f4699917", "Url": "https://api.github.com/repos/nus-fboa2016-ht/HubTurbo", "Date": "2016-01-31T07:02:22Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.value.equalsIgnoreCase(\"true\")) { return 0; }else if (this.value.equalsIgnoreCase(\"false\")) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2522/buggy-version/src.main.java.org.encog.ml.bayesian.parse.ParsedEvent.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "c84aff1024069eab57e653340a584a5f991bbd3d", "Url": "https://api.github.com/repos/encog/encog-java-core", "Date": "2011-12-07T23:32:32Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activity.projectUser) != null) { if (((activity.projectUser.user) != null) && ((activity.projectUser.user.user) != null)) com.paulvarry.intra42.tab.project.ProjectActivity.openIt(getContext(), item, activity.projectUser.user.user.id); else com.paulvarry.intra42.tab.project.ProjectActivity.openIt(getContext(), item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1266/buggy-version/app.src.main.java.com.paulvarry.intra42.tab.project.ProjectSubFragment.java", "BodyUseAPI": ["com.paulvarry.intra42.tab.project.ProjectActivity.openIt(getContext(),com.paulvarry.intra42.api.ProjectsLTE,activity.projectUser.user.user.id)"], "Fixed commit": "53084a0e76ceb1f696042ba51d0a2b4e403ff3ed", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2017-01-02T22:13:54Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (user != null) com.paulvarry.intra42.tab.user.UserActivity.openIt(context, user.login, activity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1266/buggy-version/app.src.main.java.com.paulvarry.intra42.tab.user.UserActivity.java", "BodyUseAPI": ["com.paulvarry.intra42.tab.user.UserActivity.openIt(android.content.Context,user.login,android.app.Activity)"], "Fixed commit": "53084a0e76ceb1f696042ba51d0a2b4e403ff3ed", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2017-01-02T22:13:54Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (user != null) com.paulvarry.intra42.tab.user.UserActivity.openIt(context, user.login, app);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1266/buggy-version/app.src.main.java.com.paulvarry.intra42.tab.user.UserActivity.java", "BodyUseAPI": ["com.paulvarry.intra42.tab.user.UserActivity.openIt(android.content.Context,user.login,com.paulvarry.intra42.AppClass)"], "Fixed commit": "53084a0e76ceb1f696042ba51d0a2b4e403ff3ed", "Url": "https://api.github.com/repos/pvarry/intra42", "Date": "2017-01-02T22:13:54Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (format.equals(\"antlr\")) { java.io.File f = new java.io.File(msg.fileName); if (f.exists()) { displayFileName = f.getName(); } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5536/buggy-version/tool.src.org.antlr.v4.tool.ErrorManager.java", "BodyUseAPI": [], "Fixed commit": "e7e6d3dbe02a775970efc1a2b0a2d3790ced0493", "Url": "https://api.github.com/repos/ewanmellor/antlr4", "Date": "2017-10-31T22:19:29Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLoginFormPath()) == null) { super.challenge(response, stale); }else { org.restlet.data.Reference ref = response.getRequest().getResourceRef(); java.lang.String redirectQueryName = getRedirectQueryName(); java.lang.String redirectQueryValue = ref.getQueryAsForm().getFirstValue(redirectQueryName, \"\"); if (\"\".equals(redirectQueryValue)) { redirectQueryValue = new org.restlet.data.Reference(getLoginFormPath()).addQueryParameter(redirectQueryName, ref.toString()).toString(); } response.redirectSeeOther(redirectQueryValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/181/buggy-version/modules.org.restlet.ext.crypto.src.org.restlet.ext.crypto.CookieAuthenticator.java", "BodyUseAPI": [], "Fixed commit": "af2bcaeafda4cc2f2985d1bfdeabc2a204871b28", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-12-21T17:12:53Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((minute.length()) == 1) { minute = \"0\" + minute; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4906/buggy-version/src.GUI.java", "BodyUseAPI": [], "Fixed commit": "3d331bb97909b14cfef33c704622119dc9b359d1", "Url": "https://api.github.com/repos/DMaiorino/TimeZoneConverter", "Date": "2013-10-21T15:05:14Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jctools.queues.MpscArrayQueue<E>.fill(org.jctools.queues.MessagePassingQueue.Supplier<E>,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (filled == 0) { return ((int) (result)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7429/buggy-version/jctools-core.src.main.java.org.jctools.queues.MpscArrayQueue.java", "BodyUseAPI": [], "Fixed commit": "a55b32e932fef02a07fd9aaef7f853348982b1d5", "Url": "https://api.github.com/repos/JCTools/JCTools", "Date": "2015-08-27T21:04:15Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((additionalPods.length) > 0) { com.kryptnostic.rhizome.core.Cutting.RHIZOME_APPLICATION_SERVER.intercrop(additionalPods); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7513/buggy-version/src.main.java.com.kryptnostic.rhizome.core.Cutting.java", "BodyUseAPI": ["com.kryptnostic.rhizome.core.RhizomeApplicationServer.intercrop(java.lang.Class<?>[])"], "Fixed commit": "1fc5f81647d3cda5ac8ce40ae95979163416b47c", "Url": "https://api.github.com/repos/geekbeast/rhizome", "Date": "2017-03-09T01:51:21Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wso2.iot.agent.utils.Preference.hasPreferenceKey(context, Constants.PreferenceFlag.LAST_SERVER_CALL)) { lastSyncMillis = org.wso2.iot.agent.utils.Preference.getLong(context, Constants.PreferenceFlag.LAST_SERVER_CALL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6644/buggy-version/client.client.src.main.java.org.wso2.iot.agent.activities.AlreadyRegisteredActivity.java", "BodyUseAPI": ["org.wso2.iot.agent.utils.Preference.getLong(android.content.Context,Constants.PreferenceFlag.LAST_SERVER_CALL)"], "Fixed commit": "2b2da4977c16b0d8146d862a73725de54de1be9b", "Url": "https://api.github.com/repos/warunalakshitha/cdmf-agent-android", "Date": "2017-09-10T17:16:17Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((indicatorManager) != null) { indicatorContainer.addView(indicatorManager.init(android.view.LayoutInflater.from(this), indicatorContainer, slides.size())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4533/buggy-version/library.src.main.java.com.rubengees.introduction.IntroductionActivity.java", "BodyUseAPI": [], "Fixed commit": "02ad25536d251ded87b992866549aa86a2acafcc", "Url": "https://api.github.com/repos/rubengees/introduction", "Date": "2016-09-20T23:27:59Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonObject.getJSONObject(\"entities\").has(\"media\")) { org.json.JSONArray media = jsonObject.getJSONObject(\"entities\").getJSONArray(\"media\"); if (((media.length()) > 0) && (media.getJSONObject(0).getString(\"type\").equals(\"photo\"))) { tweet.imageUrl = media.getJSONObject(0).getString(\"media_url\"); } }else { tweet.imageUrl = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6833/buggy-version/app.src.main.java.com.codepath.apps.restclienttemplate.models.Tweet.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)", "jsonObject.getJSONObject(\"entities\").getJSONArray(java.lang.String)"], "Fixed commit": "2edeb41e1d5df0978cc193449f008fb4c4fe765f", "Url": "https://api.github.com/repos/tessav/TwitterClient", "Date": "2017-09-30T07:22:29Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jago.sassymaven.compiler.util.SassFileSystemUtils.findFileByExtension(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(files[i].getName().startsWith(\"_\"))) { compileSingleFile(files[i], destinationDirectory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/9135/buggy-version/src.main.java.org.jago.sassymaven.compiler.SassCompiler.java", "BodyUseAPI": ["org.jago.sassymaven.compiler.SassCompiler.compileSingleFile(java.io.File,java.lang.String)"], "Fixed commit": "d0355db191d46debabdf38130861ed7c5fa45084", "Url": "https://api.github.com/repos/sunshineKE/sassy-maven", "Date": "2017-09-18T18:51:24Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((entity.Gameboard.getField(f)) instanceof fields.Street) || ((entity.Gameboard.getField(f)) instanceof fields.Shipping)) || ((entity.Gameboard.getField(f)) instanceof fields.Brewery)) { if ((((fields.Ownable) (entity.Gameboard.getField(f))).getOwner()) == player) { ((fields.Ownable) (entity.Gameboard.getField(f))).setOwner(null); desktop_resources.GUI.removeOwner(f); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/161/buggy-version/src.entity.Rules.java", "BodyUseAPI": ["((fields.Ownable) (entity.Gameboard.getField(f))).getOwner()", "((fields.Ownable) (entity.Gameboard.getField(f))).setOwner(<nulltype>)", "entity.Gameboard.getField(int)", "entity.Gameboard.getField(int)", "desktop_resources.GUI.removeOwner(int)"], "Fixed commit": "02b3669c544324dbf258c47e75b39564040b7d85", "Url": "https://api.github.com/repos/RasmusGregersen/Matador", "Date": "2016-05-11T13:20:28Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.silentchaos512.gems.util.ToolHelper.getOriginalOwner(net.minecraft.item.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (owner.equals(\"Creative\")) owner = (net.minecraft.util.text.TextFormatting.LIGHT_PURPLE) + owner;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/605/buggy-version/common.net.silentchaos512.gems.item.ToolRenderHelper.java", "BodyUseAPI": [], "Fixed commit": "c0e7a34450d1b592f22075d6ad5496e2a8e35eca", "Url": "https://api.github.com/repos/SilentChaos512/SilentGems", "Date": "2016-06-21T20:21:48Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.onpositive.semantic.wordnet.composite.CompositeWordnet.getConceptInfo(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((conceptInfo.original) instanceof com.onpositive.semantic.words2.AbstractRelationTarget) { return ((second) != null) && (second.hasValue(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6267/buggy-version/com.onpositive.wordnet.src.com.onpositive.semantic.wordnet.composite.CompositeLayer.java", "BodyUseAPI": [], "Fixed commit": "97e71a77f3171f1f8c8a3d4d80361829678583e1", "Url": "https://api.github.com/repos/OnPositive/wordnet", "Date": "2015-03-05T13:57:31Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.onpositive.semantic.wordnet.composite.CompositeWordnet.getConceptInfo(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (conceptInfo == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6267/buggy-version/com.onpositive.wordnet.src.com.onpositive.semantic.wordnet.composite.CompositeLayer.java", "BodyUseAPI": [], "Fixed commit": "97e71a77f3171f1f8c8a3d4d80361829678583e1", "Url": "https://api.github.com/repos/OnPositive/wordnet", "Date": "2015-03-05T13:57:31Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (boardSize < 4) throw new java.lang.UnsupportedOperationException(\"No of N should be more than 3 to solve the problem\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6933/buggy-version/src.n.queens.NQueen.java", "BodyUseAPI": [], "Fixed commit": "d0d7bc7265a364bc8ceee6110cfd801a174b42bd", "Url": "https://api.github.com/repos/rumal/N-Queens-with-Simulated-Annealing", "Date": "2012-04-02T09:57:30Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wetk.entity.Student.getAbsences()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (absences == null) return list;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7583/buggy-version/WeTK-ejb.src.java.org.wetk.business.AbsenceModel.java", "BodyUseAPI": [], "Fixed commit": "458c9b960ceff5f43eb8586a1ca0483d0fc1af84", "Url": "https://api.github.com/repos/redhead/WeTK", "Date": "2012-06-08T15:27:30Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.nanodegree.myapps.popularmovies.Utilities.checkInternetAccess(this)) loadMovies(); else android.widget.Toast.makeText(this, \"No Internet Connection Available to load more movies\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2080/buggy-version/app.src.main.java.com.nanodegree.myapps.popularmovies.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "bd2af74e5fb8a3a403e5a35d0c86f1588ef35d34", "Url": "https://api.github.com/repos/deeps09/PopularMovies", "Date": "2016-09-28T00:34:19Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((emergencylanding.k.library.main.KMain.getDisplayThread()) == null) { throw new java.lang.NullPointerException(\"Display Thread not init yet!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8985/buggy-version/src.emergencylanding.k.library.lwjgl.tex.ELTexture.java", "BodyUseAPI": [], "Fixed commit": "6881cb2de975848e4256098c1e380f15b7858b48", "Url": "https://api.github.com/repos/TechShroom/EmergencyLanding", "Date": "2014-02-19T04:10:10Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (GraphColoringPhase.Options.LIROptGraphColoringPhase.getValue()) { appendPhase(new org.graalvm.compiler.lir.alloc.graphcoloring.GraphColoringPhase()); }else if (org.graalvm.compiler.core.common.GraalOptions.TraceRA.getValue()) { appendPhase(new org.graalvm.compiler.lir.alloc.trace.TraceBuilderPhase()); appendPhase(new org.graalvm.compiler.lir.ssi.SSIConstructionPhase()); appendPhase(new org.graalvm.compiler.lir.alloc.trace.TraceRegisterAllocationPhase()); }else { appendPhase(new org.graalvm.compiler.lir.alloc.lsra.LinearScanPhase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5308/buggy-version/graal.org.graalvm.compiler.lir.src.org.graalvm.compiler.lir.phases.AllocationStage.java", "BodyUseAPI": [], "Fixed commit": "ee5324e3a83651698dc36a7b30608e99033899c2", "Url": "https://api.github.com/repos/fschroeckeneder/graal-core", "Date": "2017-01-30T18:10:10Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.epoxide.colorfulmobs.handler.ConfigurationHandler.limitMobs) && (!(ConfigurationHandler.validMobs.contains(net.minecraft.entity.EntityList.getEntityString(living))))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4786/buggy-version/src.main.java.net.epoxide.colorfulmobs.common.ColorProperties.java", "BodyUseAPI": [], "Fixed commit": "b2fe83807a39668a7e8d47747d8cb8782e98df43", "Url": "https://api.github.com/repos/Darkhax-Minecraft/Colorful-Mobs", "Date": "2015-03-13T22:59:17Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.esupportail.restaurant.services.auth.Authenticator.getUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (user.isAdmin()) java.lang.System.out.println(\"isAdmin\"); else java.lang.System.out.println(\"isNotAdmin\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1317/buggy-version/restaurantportlet-web-springmvc-portlet.src.main.java.org.esupportail.restaurant.web.springmvc.WebController.java", "BodyUseAPI": [], "Fixed commit": "845d3a960246e9062ac2ebc87855c219e7e3097f", "Url": "https://api.github.com/repos/matguerin/RestaurantPortlet", "Date": "2013-11-04T15:07:59Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n == 0) { return l1 < l2 ? -1 : l1 > l2 ? 1 : 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5336/buggy-version/spf4j-core.src.main.java.org.spf4j.base.Comparables.java", "BodyUseAPI": [], "Fixed commit": "89fc6e37270b2ebf4c90a2b11d17cf70c4d14a82", "Url": "https://api.github.com/repos/zolyfarkas/spf4j", "Date": "2017-09-22T17:27:04Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.squareup.leakcanary.LeakCanary.isInAnalyzerProcess(this)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/154/buggy-version/app.src.main.java.com.ikholopov.yamblz.weather.weathermobilization.WeatherApplication.java", "BodyUseAPI": [], "Fixed commit": "38568f22d6bcb48def041af16f2d64720f2f8f3d", "Url": "https://api.github.com/repos/IKholopov/WeatherMobilization", "Date": "2017-07-20T21:10:00Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index.getName().contains(\"$\")) sb.append(org.nutz.dao.TableName.render(new org.nutz.lang.segment.CharSegment(index.getName()))); else sb.append(index.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4606/buggy-version/src.org.nutz.dao.impl.jdbc.AbstractJdbcExpert.java", "BodyUseAPI": ["java.lang.StringBuilder.append(org.nutz.dao.TableName.render(new org.nutz.lang.segment.CharSegment(index.getName())))", "org.nutz.dao.entity.EntityIndex.getName()", "java.lang.StringBuilder.append(index.getName())", "org.nutz.dao.TableName.render(org.nutz.lang.segment.CharSegment)", "org.nutz.dao.entity.EntityIndex.getName()"], "Fixed commit": "4bea45b500a571fceb58f64139b302c024ca077b", "Url": "https://api.github.com/repos/hzl7652/nutz", "Date": "2013-08-05T13:19:56Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((a.operand) != (Code.NULL_REG)) { writeBase(wide, a.operand, output); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1235/buggy-version/src.wyil.io.WyilFileWriter.java", "BodyUseAPI": ["wyil.io.WyilFileWriter.writeBase(boolean,a.operand,wyjvm.io.BinaryOutputStream)"], "Fixed commit": "3bd3498eacdc410b9aeea6fade6f5f57563fd922", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-07-25T02:06:04Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((a.operand) != (Code.NULL_REG)) { writeRest(wide, typeCache.get(a.type), output); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1235/buggy-version/src.wyil.io.WyilFileWriter.java", "BodyUseAPI": ["wyil.io.WyilFileWriter.writeRest(boolean,typeCache.get(a.type),wyjvm.io.BinaryOutputStream)", "java.util.HashMap<wyil.io.Type, java.lang.Integer>.get(a.type)"], "Fixed commit": "3bd3498eacdc410b9aeea6fade6f5f57563fd922", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-07-25T02:06:04Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.org.linux.site.Template.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (userDao.removePhoto(user, currentUser)) { logger.info((((\"Clearing \" + (user.getNick())) + \" userpic by \") + (currentUser.getNick()))); }else { logger.debug((((\"SKIP Clearing \" + (user.getNick())) + \" userpic by \") + (currentUser.getNick()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8340/buggy-version/src.main.java.ru.org.linux.user.UserModificationController.java", "BodyUseAPI": ["ru.org.linux.user.UserModificationController.info((((\"Clearing \" + (user.getNick())) + \" userpic by \") + (currentUser.getNick())))", "ru.org.linux.user.User.getNick()", "ru.org.linux.user.User.getNick()", "ru.org.linux.user.User.getNick()", "ru.org.linux.user.User.getNick()", "ru.org.linux.user.UserModificationController.debug((((\"SKIP Clearing \" + (user.getNick())) + \" userpic by \") + (currentUser.getNick())))"], "Fixed commit": "aebc89954365310d5fee599522b0b1eed2517245", "Url": "https://api.github.com/repos/maxcom/lorsource", "Date": "2012-04-17T12:19:40Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.InvocationTargetException.getTargetException()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (t instanceof javax.jdo.JDOException) { caughtException = ((javax.jdo.JDOException) (e.getTargetException())); reloadConfOnJdoException = true; org.apache.hadoop.hive.metastore.RetryingRawStore.LOG.error((\"rawstore jdoexception:\" + (caughtException.toString()))); }else { throw e.getCause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8152/buggy-version/metastore.src.java.org.apache.hadoop.hive.metastore.RetryingRawStore.java", "BodyUseAPI": [], "Fixed commit": "e72b467138f08244bf1f13951a1697dc1f96e678", "Url": "https://api.github.com/repos/dianping/hive", "Date": "2013-06-24T05:47:50Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasNext())) { throw new java.lang.AssertionError(\"Check hasNext() before calling next()!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8194/buggy-version/SMTInterpol.src.de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.DawgIterator.java", "BodyUseAPI": [], "Fixed commit": "731126ce6b51c3c974659a5fc57a1168792b83ab", "Url": "https://api.github.com/repos/ultimate-pa/smtinterpol", "Date": "2017-03-22T12:59:51Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.tlc4b.tlc.TLCOutputInfo.getBName(modelValue.toString())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bName == null) { bName = modelValue.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2723/buggy-version/src.main.java.de.tlc4b.tlc.TracePrinter.java", "BodyUseAPI": [], "Fixed commit": "78ab86c8c2ae1b9c175c8f20dfc1789a639d239c", "Url": "https://api.github.com/repos/hhu-stups/tlc4b", "Date": "2014-05-27T18:27:50Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (bestMove != null) bestMove.clicked(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2348/buggy-version/src.Games.Controllers.AI.OthelloAI.java", "BodyUseAPI": ["Games.Models.Boards.Othello.OthelloItem.clicked(boolean)"], "Fixed commit": "550442b0eb55f8323add276d1716da03917f2274", "Url": "https://api.github.com/repos/TeamReviser/ReviserAI", "Date": "2017-04-18T08:10:01Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((plugin.config.getBoolean(\"Permissions.SendMessageOnGroupChange\")) == true) { org.bukkit.entity.Player[] players = plugin.getServer().getOnlinePlayers(); for (org.bukkit.entity.Player p : players) { if (p.hasPermission(\"GuestUnlock.moderator\")) { p.sendMessage(((((((((org.bukkit.ChatColor.AQUA) + \"[GuestUnlock] \") + (org.bukkit.ChatColor.BOLD)) + \"The player: \") + (org.bukkit.ChatColor.YELLOW)) + (p.getName())) + (org.bukkit.ChatColor.BOLD)) + \" was moved to the build-group.\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/498/buggy-version/GuestUnlock.src.se.myller.GuestUnlock.Permission.PermPermissionsEx.java", "BodyUseAPI": ["se.myller.GuestUnlock.Main.getServer()", "plugin.getServer().getOnlinePlayers()"], "Fixed commit": "9f161c60cb49c8df86f8379270c64f4c61d00a29", "Url": "https://api.github.com/repos/Mylleranton/GuestUnlock", "Date": "2012-05-12T16:15:15Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((plugin.config.getBoolean(\"Permissions.SendMessageOnGroupChange\")) == true) { org.bukkit.entity.Player[] players = plugin.getServer().getOnlinePlayers(); for (org.bukkit.entity.Player player : players) { if (player.hasPermission(\"GuestUnlock.moderator\")) { player.sendMessage(((((((((org.bukkit.ChatColor.AQUA) + \"[GuestUnlock] \") + (org.bukkit.ChatColor.BOLD)) + \"The player: \") + (org.bukkit.ChatColor.YELLOW)) + (player.getName())) + (org.bukkit.ChatColor.BOLD)) + \" was moved to the build-group.\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/498/buggy-version/GuestUnlock.src.se.myller.GuestUnlock.Permission.PermGroupManager.java", "BodyUseAPI": ["se.myller.GuestUnlock.Main.getServer()", "plugin.getServer().getOnlinePlayers()"], "Fixed commit": "9f161c60cb49c8df86f8379270c64f4c61d00a29", "Url": "https://api.github.com/repos/Mylleranton/GuestUnlock", "Date": "2012-05-12T16:15:15Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.isEmpty()) { line = reader.readLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1699/buggy-version/src.de.mpa.fastadigest.PeptideDigester.java", "BodyUseAPI": [], "Fixed commit": "26d74b135b680a711418c44ed6861443b650fb64", "Url": "https://api.github.com/repos/compomics/meta-proteome-analyzer", "Date": "2015-10-22T15:24:02Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.estimote.sdk.Beacon>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((beacon.getMinor()) == 1731) beaconGanador = \"remolachaNotebookEscritorio\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/266/buggy-version/app.src.main.java.com.example.seba.funcionsuavizadora.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d0c0a648298820d891335afd17d4a3abab4e84dc", "Url": "https://api.github.com/repos/sevax88/funcionSuavizadora", "Date": "2016-09-21T14:08:51Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((communicatorInterfaceMap) != null) { communicatorInterfaceMap.onGpsResponse(GpsResponseTypes.GPS_LOCATION_CHANGED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7228/buggy-version/app.src.main.java.com.autoskola.instruktori.gps.GpsTask.java", "BodyUseAPI": [], "Fixed commit": "d51608598f267d9c363c4dab3ae1c85bd118c3cc", "Url": "https://api.github.com/repos/harisbaljic/autoskola", "Date": "2015-02-02T19:41:47Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (PMNumber.equals(\"ND\")) { PMNumber = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/270/buggy-version/app.src.main.java.com.james.cpc.MiddleActivity.java", "BodyUseAPI": [], "Fixed commit": "e5f7ed806563f75a0fceae79ec5efb6dd367eb27", "Url": "https://api.github.com/repos/empirejames/CPC", "Date": "2017-11-22T06:52:31Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (PMNumber.equals(\"ND\")) { PMNumber = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/270/buggy-version/app.src.main.java.com.james.cpc.LastActivity.java", "BodyUseAPI": [], "Fixed commit": "e5f7ed806563f75a0fceae79ec5efb6dd367eb27", "Url": "https://api.github.com/repos/empirejames/CPC", "Date": "2017-11-22T06:52:31Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (PMNumber.equals(\"ND\")) { PMNumber = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/270/buggy-version/app.src.main.java.com.james.cpc.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "e5f7ed806563f75a0fceae79ec5efb6dd367eb27", "Url": "https://api.github.com/repos/empirejames/CPC", "Date": "2017-11-22T06:52:31Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (width > (original.getWidth())) { return original; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5772/buggy-version/NotificationPeekPort.src.main.java.com.reindeercrafts.notificationpeek.settings.appearance.WallpaperFactory.java", "BodyUseAPI": [], "Fixed commit": "3d5baa0c0b90272f0facf6d021a5f10e3e9aa36d", "Url": "https://api.github.com/repos/Klozz/NotificationPeekPort", "Date": "2014-06-07T11:32:35Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((database.SubjectDatabaseController.getAllClasses().size()) < 1) btnStored.setDisable(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8694/buggy-version/src.controllers.ManageSubjectsController.java", "BodyUseAPI": [], "Fixed commit": "a5eced0217fe9fce0817926411766745de2e4fc3", "Url": "https://api.github.com/repos/Rudycc/OrganizatePAE", "Date": "2017-11-14T21:41:16Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((database.SubjectDatabaseController.getAllClasses().size()) < 1) btnStored.setDisable(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8694/buggy-version/src.controllers.ManageSubjectsController.java", "BodyUseAPI": [], "Fixed commit": "a5eced0217fe9fce0817926411766745de2e4fc3", "Url": "https://api.github.com/repos/Rudycc/OrganizatePAE", "Date": "2017-11-14T21:41:16Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mConfiguration.getExitAnimation()) != (com.stephentuso.welcome.util.WelcomeScreenConfiguration.NO_ANIMATION_SET)) overridePendingTransition(R.anim.none, mConfiguration.getExitAnimation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/284/buggy-version/library.src.main.java.com.stephentuso.welcome.ui.WelcomeActivity.java", "BodyUseAPI": ["com.stephentuso.welcome.util.WelcomeScreenConfiguration.getExitAnimation()", "com.stephentuso.welcome.ui.WelcomeActivity.overridePendingTransition(R.anim.none,mConfiguration.getExitAnimation())"], "Fixed commit": "c40a449f9a5d9e40966963cce4a264a0ecb04347", "Url": "https://api.github.com/repos/stephentuso/welcome-android", "Date": "2015-12-05T04:50:38Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.arcao.geocaching4locus.fragment.GCNumberInputDialogFragment.getDialog()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (alertDialog == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4121/buggy-version/src.com.arcao.geocaching4locus.fragment.GCNumberInputDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "f1cce5c9a0add10da87c9ba9f979ba5bbd123fec", "Url": "https://api.github.com/repos/arcao/Geocaching4Locus", "Date": "2013-01-19T10:37:19Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transactions) != null) { if ((this.index) < (this.transactions.size())) { return this.transactions.get(index); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5134/buggy-version/src.main.java.mt.edu.um.b_d_app.CompositeIterator.java", "BodyUseAPI": [], "Fixed commit": "f75ef5a0f29ef2eecff04156198d21866122eb1e", "Url": "https://api.github.com/repos/dan2995/BDApp", "Date": "2015-05-14T14:11:46Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.knuth.biketrack.TourActivity.isTrackingServiceRunning(this)) { live_view.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4489/buggy-version/src.org.knuth.biketrack.TourActivity.java", "BodyUseAPI": [], "Fixed commit": "da3f840b7dc2f48091a31e3070823a1a984f3eda", "Url": "https://api.github.com/repos/LukasKnuth/bike-track", "Date": "2013-03-29T14:46:17Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<RecyclerView.Adapter, android.util.SparseArray<java.lang.Integer>>.get(RecyclerView.Adapter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (viewTypesMap == null) { viewTypesMap = new android.util.SparseArray(); adapterViewTypeMap.put(adapter, viewTypesMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5035/buggy-version/recyclerviewmergeadapter.src.main.java.me.mvdw.recyclerviewmergeadapter.adapter.RecyclerViewMergeAdapter.java", "BodyUseAPI": [], "Fixed commit": "865747dd4895a3617998b3c807e5133081f58d77", "Url": "https://api.github.com/repos/ronaldw/recycler-view-merge-adapter", "Date": "2016-03-25T03:15:00Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clipboard) != null) { renderableObject.RenderableObject o = clipboard.makeCopy(); o.setLocation(((frame.MainFrame) (frame)).getClickLocation()); ((frame.MainFrame) (frame)).getWorld().add(o); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6946/buggy-version/src.frameListener.MainFrameListener.java", "BodyUseAPI": [], "Fixed commit": "db46f569a2dcbf6f23997f7f78badb26b35e1c9e", "Url": "https://api.github.com/repos/amadeobellotti/MobileSmartBoard", "Date": "2013-04-08T00:08:58Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/86/buggy-version/PhisingEducation.src.de.tudarmstadt.informatik.secuso.phishedu.backend.SaveGame.java", "BodyUseAPI": [], "Fixed commit": "e795e0bb5ae4f56560ed18020717a14e8f37017d", "Url": "https://api.github.com/repos/nophish/nophish", "Date": "2014-08-26T14:19:37Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((slotId >= 37) && (slotId < 67)) && ((tile.getField(8)) == 0)) { if (((gunn.modcurrency.mod.tiles.TileVendor) (tile)).isGhostSlot(((slotId - (PLAYER_TOTAL_COUNT)) - 1))) { (this.tile.getCapability(CapabilityItemHandler.ITEM_HANDLER_CAPABILITY, null).getStackInSlot((slotId - (PLAYER_TOTAL_COUNT))).stackSize)--; ((gunn.modcurrency.mod.tiles.TileVendor) (tile)).setGhostSlot(((slotId - (PLAYER_TOTAL_COUNT)) - 1), false); } return super.slotClick(slotId, dragType, clickTypeIn, player); }else { return super.slotClick(slotId, dragType, clickTypeIn, player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6595/buggy-version/src.main.java.gunn.modcurrency.mod.containers.ContainerBuySell.java", "BodyUseAPI": ["this.tile.getCapability(CapabilityItemHandler.ITEM_HANDLER_CAPABILITY, null).getStackInSlot(int)", "net.minecraft.inventory.Container.slotClick(int,int,net.minecraft.inventory.ClickType,net.minecraft.entity.player.EntityPlayer)", "gunn.modcurrency.api.TileBuy.isGhostSlot(int)", "net.minecraft.inventory.Container.slotClick(int,int,net.minecraft.inventory.ClickType,net.minecraft.entity.player.EntityPlayer)", "gunn.modcurrency.api.TileBuy.setGhostSlot(int,boolean)"], "Fixed commit": "db0d410b2bd7d5ff52978e6fb3293e6eec9c0e30", "Url": "https://api.github.com/repos/BeardlessBrady/Currency-Mod", "Date": "2017-04-01T23:34:05Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOpen()) { return new com.impetus.kundera.persistence.EntityManagerImpl(this, transactionType, javax.persistence.PersistenceContextType.EXTENDED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/702/buggy-version/kundera-core.src.main.java.com.impetus.kundera.persistence.EntityManagerFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "3238f55236ab48ed12545f560cbf2a4bb985d889", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2012-08-22T13:28:42Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOpen()) { return new com.impetus.kundera.persistence.EntityManagerImpl(this, map, transactionType, javax.persistence.PersistenceContextType.EXTENDED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/702/buggy-version/kundera-core.src.main.java.com.impetus.kundera.persistence.EntityManagerFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "3238f55236ab48ed12545f560cbf2a4bb985d889", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2012-08-22T13:28:42Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(se.kth.karamel.backend.converter.UserClusterDataExtractor.clusterLinks(cluster, runtime).isEmpty())) { java.lang.String[] clusterLinks = se.kth.karamel.backend.converter.UserClusterDataExtractor.clusterLinks(cluster, runtime).split(\"\\n\"); for (int j = 0; j < (clusterLinks.length); j++) { ports.add(clusterLinks[j].split(\"//\")[1].split(\"/\")[0].split(\":\")[1]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1408/buggy-version/karamel-core.src.main.java.se.kth.karamel.backend.container.ContainerClusterManager.java", "BodyUseAPI": ["se.kth.karamel.backend.converter.UserClusterDataExtractor.clusterLinks(cluster, runtime).split(java.lang.String)", "se.kth.karamel.backend.converter.UserClusterDataExtractor.clusterLinks(se.kth.karamel.common.clusterdef.json.JsonCluster,se.kth.karamel.backend.running.model.ClusterRuntime)"], "Fixed commit": "34e832048086c076d3d0d6a8571fa8fd60b23919", "Url": "https://api.github.com/repos/karamelchef/karamel", "Date": "2016-06-22T16:16:44Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (displayName != null) updateOperation.set(\"display_name\", displayName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6198/buggy-version/UtilsModule.src.main.java.org.dao.UserDAO.java", "BodyUseAPI": ["org.mongodb.morphia.query.UpdateOperations<org.entity.User>.set(java.lang.String,java.lang.String)"], "Fixed commit": "0cea005e282f73312d02923009750e7ce6ba4957", "Url": "https://api.github.com/repos/duyetpt/dailycook_restructe", "Date": "2015-11-19T08:33:06Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (avatarUrl != null) updateOperation.set(\"avatar_url\", avatarUrl);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6198/buggy-version/UtilsModule.src.main.java.org.dao.UserDAO.java", "BodyUseAPI": ["org.mongodb.morphia.query.UpdateOperations<org.entity.User>.set(java.lang.String,java.lang.String)"], "Fixed commit": "0cea005e282f73312d02923009750e7ce6ba4957", "Url": "https://api.github.com/repos/duyetpt/dailycook_restructe", "Date": "2015-11-19T08:33:06Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (dob != null) updateOperation.set(\"dob\", dob);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6198/buggy-version/UtilsModule.src.main.java.org.dao.UserDAO.java", "BodyUseAPI": ["org.mongodb.morphia.query.UpdateOperations<org.entity.User>.set(java.lang.String,java.lang.String)"], "Fixed commit": "0cea005e282f73312d02923009750e7ce6ba4957", "Url": "https://api.github.com/repos/duyetpt/dailycook_restructe", "Date": "2015-11-19T08:33:06Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (message instanceof org.red5.server.stream.message.RTMPMessage) { org.red5.server.stream.message.RTMPMessage rtmpMessage = ((org.red5.server.stream.message.RTMPMessage) (message)); org.red5.server.net.rtmp.event.IRTMPEvent body = rtmpMessage.getBody(); int time = body.getTimestamp(); pcon.pushMessage(this, message); body.setTimestamp(time); }else { pcon.pushMessage(this, message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7067/buggy-version/src.main.java.org.red5.server.messaging.InMemoryPushPushPipe.java", "BodyUseAPI": ["org.red5.server.messaging.IPushableConsumer.pushMessage(org.red5.server.messaging.InMemoryPushPushPipe,org.red5.server.messaging.IMessage)", "org.red5.server.messaging.IPushableConsumer.pushMessage(org.red5.server.messaging.InMemoryPushPushPipe,org.red5.server.messaging.IMessage)"], "Fixed commit": "148c90186bf555cca79c02b756f26ead85d46712", "Url": "https://api.github.com/repos/solomax/red5-server-common", "Date": "2015-02-27T14:59:28Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minutesDay) > 60) { hoursDay += (minutesDay) / 60; minutesDay = (minutesDay) % 60; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2285/buggy-version/TimeManagement.src.com.example.timemanagement.ListActivity.java", "BodyUseAPI": [], "Fixed commit": "ddab8dd2c7866840db6882956b89035e7e374045", "Url": "https://api.github.com/repos/TobyPalmer/Agilen", "Date": "2014-04-29T09:16:51Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (translation <= 4) translation = 4;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1248/buggy-version/library.src.main.java.com.kot32.library.iosmeaasgelist.iOSMessageList.java", "BodyUseAPI": [], "Fixed commit": "f87d5846c7b2ed3b3be4e619a203875fbaae3fb1", "Url": "https://api.github.com/repos/kot32go/iOSMessageList", "Date": "2015-10-25T10:22:49Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6865/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "e303265be6afc6465ab6b1fc9a152cf70f5a1aea", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-21T19:37:44Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bits == 64) { this.opWidth = 64; }else { this.opWidth = 32; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2179/buggy-version/src.com.zms.zpc.execute.ModRMSIB.java", "BodyUseAPI": [], "Fixed commit": "fd6545a373eed8d50b8222dc1a2485f558b327b9", "Url": "https://api.github.com/repos/zms351/ZPC", "Date": "2017-07-27T16:51:13Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(utils.Auth.acl(Auth.ACL_TYPE.VOTE_RESULT))) { return play.mvc.Results.forbidden(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2747/buggy-version/app.controllers.VotingResultController.java", "BodyUseAPI": [], "Fixed commit": "8c89c0b66d4917c4a5f9ffa67c92d52aa2f931af", "Url": "https://api.github.com/repos/SSD2015/TeamGG", "Date": "2015-03-06T03:33:57Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fis != null) { try { fis.close(); } catch (java.io.IOException ex) { throw new java.lang.Error(ex.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8878/buggy-version/apk.src.com.realworldsystems.elf.Reader.java", "BodyUseAPI": ["java.io.FileInputStream.close()"], "Fixed commit": "53eceee4da2d0e1ec5140218695046338bf0bc3f", "Url": "https://api.github.com/repos/RealworldSystems/qgis-android", "Date": "2012-07-04T09:52:27Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fis != null) { try { fis.close(); } catch (java.io.IOException ex) { throw new java.lang.Error(ex.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8878/buggy-version/apk.src.com.realworldsystems.elf.Reader.java", "BodyUseAPI": ["java.io.FileInputStream.close()"], "Fixed commit": "53eceee4da2d0e1ec5140218695046338bf0bc3f", "Url": "https://api.github.com/repos/RealworldSystems/qgis-android", "Date": "2012-07-04T09:52:27Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newickFile.getValue()) != null) { node = new nl.tudelft.dnainator.parser.TreeParser(getNewickFile()).parse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1671/buggy-version/dnainator-javafx.src.main.java.nl.tudelft.dnainator.javafx.services.GraphLoadService.java", "BodyUseAPI": [], "Fixed commit": "eb68334015178bdbf1bd23613d5472f661ce6f2a", "Url": "https://api.github.com/repos/gfokkema/dnainator", "Date": "2015-06-16T19:17:27Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recordsByExtensionForVersion) == null) { java.util.Map<java.lang.String, java.lang.Integer> m = com.google.common.collect.Maps.newHashMap(); setRecordsByExtensionForVersion(m); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1456/buggy-version/src.main.java.org.gbif.ipt.action.portal.ResourceAction.java", "BodyUseAPI": [], "Fixed commit": "3874f0af835d51f12d997f739951c1983df0358b", "Url": "https://api.github.com/repos/gbif/ipt", "Date": "2016-11-02T12:33:18Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sitent.util.FeaturesUtil.getFeatureValue(java.lang.String,sitent.types.Segment)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (instId == null) { java.lang.String instanceId = ((dm.getDocumentId()) + \"_\") + (segment.getSegid()); sitent.util.FeaturesUtil.addFeature(\"instanceid\", instanceId, jCas, segment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6149/buggy-version/de.uni-saarland.coli.sitent.src.main.java.sitent.classifiers.SitEntFeaturesAnnotator.java", "BodyUseAPI": [], "Fixed commit": "c533ff071b248c882d377b1648d03f9b468c7d0e", "Url": "https://api.github.com/repos/annefried/sitent", "Date": "2017-03-08T15:42:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((player) instanceof net.minecraft.client.entity.EntityClientPlayerMP)) { FusionWarfare.network.sendTo(new calemi.fusionwarfare.packet.ClientPacketHandler((\"sync%\" + (fusion.energy))), ((net.minecraft.entity.player.EntityPlayerMP) (player))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/350/buggy-version/src.main.java.calemi.fusionwarfare.inventory.ContainerBase.java", "BodyUseAPI": [], "Fixed commit": "32bd167857300d2eca38d1c6eef93b0470999170", "Url": "https://api.github.com/repos/TeamMonumental/FusionWarfare", "Date": "2015-07-16T19:41:11Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((line.indexOf(\"K->K\")) != (-1)) { if (com.tagtraum.perf.gcviewer.imp.DataReaderJRockit1_5_0.LOG.isLoggable(java.util.logging.Level.FINE)) com.tagtraum.perf.gcviewer.imp.DataReaderJRockit1_5_0.LOG.fine(line.substring(startTimeIndex)); continue; }else if ((line.indexOf(\"->\")) == (-1)) { if (com.tagtraum.perf.gcviewer.imp.DataReaderJRockit1_5_0.LOG.isLoggable(java.util.logging.Level.FINE)) com.tagtraum.perf.gcviewer.imp.DataReaderJRockit1_5_0.LOG.fine(line.substring(startTimeIndex)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/793/buggy-version/src.main.java.com.tagtraum.perf.gcviewer.imp.DataReaderJRockit1_5_0.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.util.logging.Logger.fine(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)", "java.util.logging.Logger.fine(java.lang.String)"], "Fixed commit": "8180895dd7770fc58cb00342ade112d320a53547", "Url": "https://api.github.com/repos/rupeshr/GCViewer", "Date": "2013-02-27T05:13:52Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (i == clusteredByIdx) { clusteredBySymbol = ic; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1474/buggy-version/sql.src.main.java.io.crate.planner.projection.SourceIndexWriterProjection.java", "BodyUseAPI": [], "Fixed commit": "a2f8760d370572554ff299f93f5fa862a29865f1", "Url": "https://api.github.com/repos/crate/crate", "Date": "2015-02-19T19:44:57Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.structr.core.entity.LinkedTreeNode<R, S, T>.treeGetChildRelationships()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rels.isEmpty()) { treeAppendChild(newChild); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8675/buggy-version/structr-core.src.main.java.org.structr.core.entity.LinkedTreeNode.java", "BodyUseAPI": [], "Fixed commit": "1e540fe7ac8fca4c1767b85ed2921084ebf0790d", "Url": "https://api.github.com/repos/structr/structr", "Date": "2014-04-01T11:57:49Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.structr.core.entity.LinkedTreeNode<R, S, T>.treeGetChildRelationships()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rels.isEmpty()) { treeAppendChild(newChild); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8675/buggy-version/structr-core.src.main.java.org.structr.core.entity.LinkedTreeNode.java", "BodyUseAPI": [], "Fixed commit": "1e540fe7ac8fca4c1767b85ed2921084ebf0790d", "Url": "https://api.github.com/repos/structr/structr", "Date": "2014-04-01T11:57:49Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(dataSnapshot.hasChildren())) && ((dataSnapshot.getValue()) != null)) { java.lang.String type = dataSnapshot.getValue().getClass().getName(); switch (type) { case \"java.lang.Boolean\" : data.putBoolean(\"value\", ((java.lang.Boolean) (dataSnapshot.getValue()))); break; case \"java.lang.Long\" : data.putInt(\"value\", ((java.lang.Integer) (((java.lang.Long) (dataSnapshot.getValue())).intValue()))); break; case \"java.lang.Double\" : data.putDouble(\"value\", ((java.lang.Double) (dataSnapshot.getValue()))); break; case \"java.lang.String\" : data.putString(\"value\", ((java.lang.String) (dataSnapshot.getValue()))); break; default : data.putString(\"value\", null); } }else { com.facebook.react.bridge.WritableMap valueMap = io.fullstack.firestack.FirestackUtils.castSnapshotValue(dataSnapshot); data.putMap(\"value\", valueMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/959/buggy-version/android.src.main.java.io.fullstack.firestack.FirestackUtils.java", "BodyUseAPI": ["((java.lang.Long) (dataSnapshot.getValue())).intValue()", "com.google.firebase.database.DataSnapshot.getValue()", "com.google.firebase.database.DataSnapshot.getValue()", "io.fullstack.firestack.FirestackUtils.castSnapshotValue(com.google.firebase.database.DataSnapshot)", "com.facebook.react.bridge.WritableMap.putInt(java.lang.String,int)", "com.google.firebase.database.DataSnapshot.getValue()", "com.google.firebase.database.DataSnapshot.getValue()", "dataSnapshot.getValue().getClass()", "com.facebook.react.bridge.WritableMap.putBoolean(java.lang.String,((java.lang.Boolean) (dataSnapshot.getValue())))", "com.facebook.react.bridge.WritableMap.putDouble(java.lang.String,((java.lang.Double) (dataSnapshot.getValue())))", "com.google.firebase.database.DataSnapshot.getValue()", "com.facebook.react.bridge.WritableMap.putString(java.lang.String,((java.lang.String) (dataSnapshot.getValue())))", "dataSnapshot.getValue().getClass().getName()"], "Fixed commit": "5bed61f630c5eb7f1734f9639e4d3ccefaf94792", "Url": "https://api.github.com/repos/devshackio/react-native-firestack", "Date": "2016-09-13T11:40:06Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (start > 0) { java.lang.String f = s.substring(((start + (\"SemanticProvider(\".length())) + 1), (end - 1)); java.lang.System.out.println((\"Load provider: \" + f)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2243/buggy-version/editor.editor.java.org.sugarj.editor.SugarJDescriptor.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "99d63c29df7a0bed5ba2b49dedbffce28da1aaf1", "Url": "https://api.github.com/repos/florenzen/sugarj", "Date": "2013-03-15T17:15:30Z"},
{"Line": "=>1763", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.codename1.tools.translator.bytecodes.Instruction>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ldTarget instanceof com.codename1.tools.translator.bytecodes.CustomInvoke) { }else { switch (ldTarget.getOpcode()) { case org.objectweb.asm.Opcodes.ALOAD : { com.codename1.tools.translator.bytecodes.VarOp v = ((com.codename1.tools.translator.bytecodes.VarOp) (ldTarget)); newInvoke.setTargetObjectLiteral(((\"locals[\" + (v.getIndex())) + \"].data.o\")); instructions.remove(((iter - numArgs) - 1)); newIter--; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1809/buggy-version/vm.ByteCodeTranslator.src.com.codename1.tools.translator.BytecodeMethod.java", "BodyUseAPI": ["com.codename1.tools.translator.bytecodes.Instruction.getOpcode()"], "Fixed commit": "df14c4a5b76cacff57543b991ceb5468746c0814", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-02-05T22:51:54Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commentFragment) != null) commentFragment.clearActionMode();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5154/buggy-version/src.org.qii.weiciyuan.ui.browser.BrowserWeiboMsgActivity.java", "BodyUseAPI": [], "Fixed commit": "986e7a962d9abd86b39138c096a305fa092e4204", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-11T03:11:54Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((repostFragment) != null) repostFragment.clearActionMode();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5154/buggy-version/src.org.qii.weiciyuan.ui.browser.BrowserWeiboMsgActivity.java", "BodyUseAPI": [], "Fixed commit": "986e7a962d9abd86b39138c096a305fa092e4204", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-11T03:11:54Z"},
{"Line": "=>1012", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((profile.getObjectType()) == null) { return isComponentAvailable(userId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6321/buggy-version/war-core.src.main.java.com.stratelia.silverpeas.versioningPeas.control.VersioningSessionController.java", "BodyUseAPI": [], "Fixed commit": "ec71cdc604060c31eb823ae8ae0f85b99bb4e601", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2011-12-08T09:31:35Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.equals(\"\")) { java.lang.System.out.println(\"\"); java.lang.System.out.println(\"Stuck? Try typing \\\"help\\\"\"); java.lang.System.out.println(\"\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7890/buggy-version/src.codeu.chat.client.commandline.Chat.java", "BodyUseAPI": [], "Fixed commit": "327b93b9f5e4e340d7c7346f88092e1b310923d8", "Url": "https://api.github.com/repos/Pandarati/CodeU-Summer-2017", "Date": "2017-06-26T21:01:02Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (true == (tempSize.contains(\",\"))) { tempSize = tempSize.replace(\",\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2373/buggy-version/vipr-portal.portal.app.controllers.resources.FileSystems.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "3f82cce57dbde5dc03af256190e19115216ab0d3", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-03-01T11:25:55Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((barHeight <= (minH)) && (!(barHeight < 0))) { barHeight = ((int) (minH)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8665/buggy-version/app.src.main.java.com.example.typhus148.shade_graph.BarChart.java", "BodyUseAPI": [], "Fixed commit": "4c3ebb38d2188f47ca9b7e0e7c4c96644c0412d1", "Url": "https://api.github.com/repos/Typhus148/Shade-graph", "Date": "2017-04-03T22:19:54Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (entity != null) { entity.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1589/buggy-version/sureworkflow.src.main.java.com.sureclinical.suredms.service.impl.WorkflowServiceImpl.java", "BodyUseAPI": ["com.sureclinical.suredms.model.BaseEntity.toString()"], "Fixed commit": "8e56548998ce353887dbaf3e8ddf00e1c20b6134", "Url": "https://api.github.com/repos/alex-chabatar/suredms", "Date": "2014-07-22T16:56:50Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(validation.hasErrors())) { startDate = controllers.Calendars.helperCreateDate(startDate, startTime, \"HH:mm\"); endDate = controllers.Calendars.helperCreateDate(endDate, endTime, \"HH:mm\"); validation.future(endDate, startDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/777/buggy-version/calendar.app.controllers.Calendars.java", "BodyUseAPI": ["controllers.Calendars.future(java.util.Date,java.util.Date)"], "Fixed commit": "02a12377ef94930d260eb8cdb7497f3bb723d642", "Url": "https://api.github.com/repos/ese-unibe-ch/ese2011-team3", "Date": "2011-11-01T22:44:31Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (plugins != null) for (java.io.File plugin : plugins) { final java.lang.String pluginName = updatePlugin(plugin); if (pluginName != null) currentDynamicPlugins.remove(pluginName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5402/buggy-version/server.src.main.java.com.orientechnologies.orient.server.plugin.OServerPluginManager.java", "BodyUseAPI": [], "Fixed commit": "4c1e1c3790d7242ee0c4d552ee1fc141adc8a364", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-10-05T22:01:34Z"},
{"Line": "=>889", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (extra.equals(\"UPDATE_MESSAGE_CONTROL_ID\")) { quickTransforms += (\"MSH-10=\" + actualTestCase) + \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1550/buggy-version/src.main.java.org.immregistries.smm.transform.Transformer.java", "BodyUseAPI": [], "Fixed commit": "defb48039901288c03bbd395e2e34b57d6dd8f5e", "Url": "https://api.github.com/repos/immregistries/smm-tester", "Date": "2017-01-31T19:09:19Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.net.UnknownHostException) { this.status = R.string.error_connectivity_problem; }else { this.status = R.string.error_rendering; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/969/buggy-version/map.src.it.geosolutions.android.map.wms.renderer.WMSUntiledRenderer.java", "BodyUseAPI": [], "Fixed commit": "b4a2cd3d379988bf7220066d4fcfe846d3bb2680", "Url": "https://api.github.com/repos/geosolutions-it/MapStoreMobile", "Date": "2014-02-27T10:59:55Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((zkSplit.length) > 1) { zkPathSuffix = ((zkSplit[1]) + \"/\") + zkPathSuffix; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2066/buggy-version/pinot-broker.src.main.java.com.linkedin.pinot.broker.broker.helix.HelixBrokerStarter.java", "BodyUseAPI": [], "Fixed commit": "3ed8c94f6d9291bafafccae347d20ee97d8d099a", "Url": "https://api.github.com/repos/linkedin/pinot", "Date": "2016-10-27T21:55:09Z"},
{"Line": "=>970", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((expression.eContainer()) != null) && ((expression.eContainer()) instanceof com.ge.research.sadl.sADL.UnaryExpression)) && (((com.ge.research.sadl.sADL.UnaryExpression) (expression.eContainer())).getOp().equals(\"-\"))) { value = value.negate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2558/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": [], "Fixed commit": "746177b02d11a0cecfa7837c7133e212a1835233", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2017-09-01T18:46:42Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line.charAt(0)) == 61) node.htype = 1; else node.htype = 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/9056/buggy-version/src.main.md.PlainVisitor.java", "BodyUseAPI": [], "Fixed commit": "409ecc621be99e0e498e1b3b9cfe6b4ad40a244d", "Url": "https://api.github.com/repos/SeoJiHyeong/Term-Project", "Date": "2016-12-07T19:27:30Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.component.netty.handlers.ClientChannelHandler.getExchange(org.jboss.netty.channel.ChannelHandlerContext)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (exchange == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/784/buggy-version/components.camel-netty.src.main.java.org.apache.camel.component.netty.handlers.ClientChannelHandler.java", "BodyUseAPI": [], "Fixed commit": "858453c3578eb470a0513d35007d038239ff2d9e", "Url": "https://api.github.com/repos/gzurowski/camel", "Date": "2014-01-17T02:57:43Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.druid.sql.ast.SQLExpr.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (pName.startsWith(\"@\")) { procedure.getParamterMap().put(pName, parameter); }else { procedure.getParamterMap().put(java.lang.String.valueOf((i1 + 1)), parameter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/166/buggy-version/src.main.java.io.mycat.route.handler.HintSQLHandler.java", "BodyUseAPI": ["procedure.getParamterMap().put(java.lang.String,io.mycat.route.handler.ProcedureParameter)"], "Fixed commit": "bb939d27328f76490bfa95edb68091471e708aee", "Url": "https://api.github.com/repos/HashZhang/Mycat-Server", "Date": "2016-04-01T12:23:35Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (hasARecipe) { this.panel.setToolTipText(sb.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2244/buggy-version/src.com.supermarketSimulator.GUI.ItemDisplay.java", "BodyUseAPI": [], "Fixed commit": "0de3e914814305ddce24e9ffee454e29d41cbb8b", "Url": "https://api.github.com/repos/Deliquescence/SupermarketSimulator", "Date": "2017-04-24T22:50:31Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((currentScreen) instanceof com.micdoodle8.ld30.GuiGame)) { this.paused = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/267/buggy-version/src.com.micdoodle8.ld30.Game.java", "BodyUseAPI": [], "Fixed commit": "3c3e2e6a23eeac86123304ea285c8c3176267793", "Url": "https://api.github.com/repos/micdoodle8/LD30", "Date": "2014-08-26T03:41:28Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (location == null) { location = mLocationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6920/buggy-version/app.src.main.java.edu.washington.beerswains.beerwench.BeerMapActivity.java", "BodyUseAPI": [], "Fixed commit": "27bf69d0af88c9c0764916039c10969647a23ca1", "Url": "https://api.github.com/repos/Jordan-Numbers/beerwench", "Date": "2015-06-09T23:39:50Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Constants.CONFIG.size()) > 0) { com.alibaba.fastjson.JSONArray jsonArray = com.puyiPATHowo.quickrun.constants.Constants.CONFIG; for (int i = 0; i < (jsonArray.size()); i++) { jsonArray.getJSONObject(i).put(\"index\", i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1928/buggy-version/src.main.java.com.puyiPATHowo.quickrun.entity.Config.java", "BodyUseAPI": [], "Fixed commit": "7904894ec0a3bd82d40babb73bdd29362c4a04a7", "Url": "https://api.github.com/repos/ysdxz207/quickrun", "Date": "2017-10-19T09:16:44Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getResources().getStringArray(texts).length) < 1) throw new java.lang.IllegalArgumentException(\"There must be at least one text\"); else { this.texts = getResources().getStringArray(texts); stopAnimation(); position = 0; startAnimation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/9122/buggy-version/fadingtextview.src.main.java.com.tomer.fadingtextview.FadingTextView.java", "BodyUseAPI": ["getResources().getStringArray(int)"], "Fixed commit": "01f4c4421b7532f33f489b7907857ab606aea990", "Url": "https://api.github.com/repos/rosenpin/FadingTextView", "Date": "2017-01-20T10:48:11Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (messages.containsKey(org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType.WARNING)) { com.beust.jcommander.JCommander.getConsole().println(\"Warnings:\"); for (final java.lang.String message : messages.get(org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType.WARNING)) { com.beust.jcommander.JCommander.getConsole().println((\"\\t\" + message)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2669/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.java", "BodyUseAPI": ["java.util.Map<org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType, java.util.List<java.lang.String>>.get(org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType)"], "Fixed commit": "c99de51661f94b40cccac9449c93f2a82bb3c83f", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSCSPClient", "Date": "2014-01-13T06:44:35Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (messages.containsKey(org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType.ERROR)) { com.beust.jcommander.JCommander.getConsole().println(\"Errors:\"); for (final java.lang.String message : messages.get(org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType.ERROR)) { com.beust.jcommander.JCommander.getConsole().println((\"\\t\" + message)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2669/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.java", "BodyUseAPI": ["java.util.Map<org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType, java.util.List<java.lang.String>>.get(org.jboss.pressgang.ccms.contentspec.client.commands.PushTranslationCommand.MessageType)"], "Fixed commit": "c99de51661f94b40cccac9449c93f2a82bb3c83f", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSCSPClient", "Date": "2014-01-13T06:44:35Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBoxRotation) > 180) mBoxRotation = (-180) + ((mBoxRotation) - 180);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6769/buggy-version/Paintroid.src.org.catrobat.paintroid.tools.implementation.BaseToolWithRectangleShape.java", "BodyUseAPI": [], "Fixed commit": "8c223a7c365011fa2c606109bc6f471d56a3123c", "Url": "https://api.github.com/repos/Catrobat/Paintroid", "Date": "2014-08-05T10:06:32Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context) { eclipselogger.views.LoggingView.logger.debug(\"Resetting task context ...\"); eclipselogger.events.EclipseActionMonitor.resetTaskContext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6915/buggy-version/src.eclipselogger.views.LoggingView.java", "BodyUseAPI": [], "Fixed commit": "051ff0bf0f99fb4da90bee675ad11218e0859cf8", "Url": "https://api.github.com/repos/TheoNaX/EclipseLogger", "Date": "2014-04-23T06:54:08Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (instanceProfileUsed) { creds = new com.amazonaws.auth.InstanceProfileCredentialsProvider(); }else if (org.apache.commons.lang.StringUtils.isNotBlank(server)) { org.apache.maven.settings.Server s = settings.getServer(server); if (((s == null) || (org.apache.commons.lang.StringUtils.isBlank(s.getUsername()))) || (org.apache.commons.lang.StringUtils.isBlank(s.getPassword()))) { throw new org.apache.maven.plugin.MojoFailureException(((\"Server \" + (server)) + \" is not defined in settings.xml with proper username and password\")); } creds = new com.amazonaws.internal.StaticCredentialsProvider(new com.amazonaws.auth.BasicAWSCredentials(s.getUsername(), s.getPassword())); }else { throw new org.apache.maven.plugin.MojoFailureException(\"Must specify awsAccessKeyId+awsSecretKey, server or instanceProfileUsed to provide AWS credentials\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7817/buggy-version/s3upload.src.main.java.org.cyclopsgroup.cym2.s3upload.UploadMojo.java", "BodyUseAPI": [], "Fixed commit": "b916d789dc636597df2d7ed9b3ed0967bfb8e1eb", "Url": "https://api.github.com/repos/jiaqi/cym2", "Date": "2014-04-27T15:06:23Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Semant.Semant.transExp(e.thenclause)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((thenclause.ty.actual()) instanceof Semant.Types.VOID)) env.errorMsg(e.pos, \"Body of then not unit! (transExp IfExp)\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8659/buggy-version/chap3.Semant.Semant.java", "BodyUseAPI": [], "Fixed commit": "5c28ac7a0780e2520a88707073fd9a26a2aee1ba", "Url": "https://api.github.com/repos/procedure2012/CompilerOfTiger", "Date": "2016-12-05T23:54:57Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Semant.Semant.transExp(e.body)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((ty.ty.actual()) instanceof Semant.Types.VOID)) env.errorMsg(e.pos, \"Body of While not unit! (transExp WhileExp)\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8659/buggy-version/chap3.Semant.Semant.java", "BodyUseAPI": [], "Fixed commit": "5c28ac7a0780e2520a88707073fd9a26a2aee1ba", "Url": "https://api.github.com/repos/procedure2012/CompilerOfTiger", "Date": "2016-12-05T23:54:57Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMainFragment) != null) { mFragmentManager.beginTransaction().remove(mMainFragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7156/buggy-version/app.src.main.java.ch.ralena.glossikaschedule.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "59fe9ea293cf76473a0b7b2a500946f31a8bda7a", "Url": "https://api.github.com/repos/chickendude/GlossikaSchedule", "Date": "2017-01-03T16:25:30Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wix.pagedcontacts.contacts.ContactsProvider.getContactsToFetch(com.wix.pagedcontacts.contacts.query.QueryParams)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (contactsToFetch.isEmpty()) { return com.facebook.react.bridge.Arguments.createArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/234/buggy-version/android.src.main.java.com.wix.pagedcontacts.contacts.ContactsProvider.java", "BodyUseAPI": [], "Fixed commit": "27a627295c99e8c12075c1668fff6f65cd403006", "Url": "https://api.github.com/repos/wix/react-native-paged-contacts", "Date": "2017-01-30T06:54:19Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((axis) == (Constants.CHILD_AXIS)) || ((axis) == (Constants.ATTRIBUTE_AXIS))) { result = result.toNodeSet().selectParentChild(contextSequence.toNodeSet(), NodeSet.DESCENDANT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1973/buggy-version/extensions.indexes.range.src.org.exist.xquery.modules.range.OptimizeFieldPragma.java", "BodyUseAPI": [], "Fixed commit": "604798f0ec97de90b85afe21b658ffdc3ccd718b", "Url": "https://api.github.com/repos/zwobit/exist", "Date": "2014-04-25T09:58:07Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<com.englishmaster.tweeter.infrastructure.ui.mvvm.PropertyChangedHandler>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (handlers == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/9103/buggy-version/EnglishMaster.src.com.englishmaster.tweeter.infrastructure.ui.mvvm.facade.BaseViewModel.java", "BodyUseAPI": [], "Fixed commit": "78ec30ed71da78ddb61e577fa7d3cbbde2948323", "Url": "https://api.github.com/repos/lxis/EnglishMaster", "Date": "2014-07-22T12:46:59Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.block.branchQ.equals(this))) { this.block.branchQ = this; switch (this.block.branchParadigm) { case NONE : this.block.branchParadigm = Block.BranchParadigm.ONE; break; case ONE : this.block.branchParadigm = Block.BranchParadigm.ALL; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/735/buggy-version/src.main.java.edu.umass.cs.surveyman.survey.Question.java", "BodyUseAPI": [], "Fixed commit": "520d7641bcfebaaceb172c2fcb5f8d60519b90bf", "Url": "https://api.github.com/repos/SurveyMan/SurveyMan", "Date": "2015-04-03T00:15:43Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (points.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4478/buggy-version/detection-base.src.main.java.cz.cuni.mff.peckam.ais.detection.FloatFeatureDetector.java", "BodyUseAPI": [], "Fixed commit": "a77f14b0a3f4151126a94860f9fc624fd1e840a7", "Url": "https://api.github.com/repos/peci1/MARSIS-Feature-Detector", "Date": "2013-04-09T19:10:48Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentStudyLoader) != null) currentStudyLoader.save(currentStudy);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1923/buggy-version/src.medicalimaging.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "b755c9573a065424b512bab27922f83368d5047d", "Url": "https://api.github.com/repos/cra5370/swen262-project", "Date": "2014-03-07T17:48:41Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(event.getEntityLiving().isGlowing())) event.getEntityLiving().setGlowing(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/720/buggy-version/src.main.java.the_fireplace.hvii.ForgeEvents.java", "BodyUseAPI": ["event.getEntityLiving().setGlowing(boolean)", "LivingEvent.LivingUpdateEvent.getEntityLiving()"], "Fixed commit": "eedb39a5fd45acdd30a8a9df03de813f76a21d5c", "Url": "https://api.github.com/repos/The-Fireplace-Minecraft-Mods/HVII", "Date": "2017-02-18T19:11:46Z"},
{"Line": "=>705", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.invoke(<nulltype>,com.adonai.wallet.DatabaseDAO,selections.getString(0))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (newEntity != null) result.add(newEntity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4907/buggy-version/wallet.src.main.java.com.adonai.wallet.DatabaseDAO.java", "BodyUseAPI": ["java.util.List<T>.add(T)"], "Fixed commit": "c2f79c6ef071556da3b74e363ab90785cef9d49a", "Url": "https://api.github.com/repos/Adonai/WalletMaster", "Date": "2014-06-06T14:50:02Z"},
{"Line": "=>733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.invoke(<nulltype>,com.adonai.wallet.DatabaseDAO,selections.getString(0))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (newEntity != null) result.add(newEntity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4907/buggy-version/wallet.src.main.java.com.adonai.wallet.DatabaseDAO.java", "BodyUseAPI": ["java.util.List<T>.add(T)"], "Fixed commit": "c2f79c6ef071556da3b74e363ab90785cef9d49a", "Url": "https://api.github.com/repos/Adonai/WalletMaster", "Date": "2014-06-06T14:50:02Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["composition.getCharacters().get(com.airbnb.lottie.FontCharacter.hashFor(c, documentData.fontFamily))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (character == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3022/buggy-version/lottie.src.main.java.com.airbnb.lottie.TextLayer.java", "BodyUseAPI": [], "Fixed commit": "8bbb062f433f260fc5e41c3851b43e1a8feab7dd", "Url": "https://api.github.com/repos/imliujun/lottie-android", "Date": "2017-06-20T20:40:06Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((layerType == (com.airbnb.lottie.Layer.LayerType.Text)) && ((composition.getCharacters().size()) == 0)) { composition.addWarning(\"To use text, you must export text as glyphs in Bodymovin.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3022/buggy-version/lottie.src.main.java.com.airbnb.lottie.Layer.java", "BodyUseAPI": [], "Fixed commit": "8bbb062f433f260fc5e41c3851b43e1a8feab7dd", "Url": "https://api.github.com/repos/imliujun/lottie-android", "Date": "2017-06-20T20:40:06Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AppSettings.DEBUG) { alarmCal.setTimeInMillis(java.lang.System.currentTimeMillis()); alarmCal.add(java.util.Calendar.SECOND, 10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6720/buggy-version/src.com.alimuzaffar.sunalarm.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "4c0769953eb746535e5fd8732f98a817db29f796", "Url": "https://api.github.com/repos/atgheb/sun-status-app", "Date": "2012-08-07T19:45:15Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"}\".equals(token)) { type = Type.LIST; put(parent, type); return --state; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6211/buggy-version/src.com.stellaris.ScriptFile.java", "BodyUseAPI": [], "Fixed commit": "0da02040fe641d4bce5bfaff45da0520dfac07a9", "Url": "https://api.github.com/repos/WayOfModding/StellarisIDE", "Date": "2016-06-17T08:04:28Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ret.contains(i))) { ret.add(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3329/buggy-version/src.de.uniulm.bagception.bagceptionmastercontrolserver.logic.ItemIndexSystem.java", "BodyUseAPI": ["java.util.ArrayList<de.uniulm.bagception.bundlemessageprotocol.entities.Item>.add(de.uniulm.bagception.bundlemessageprotocol.entities.Item)"], "Fixed commit": "1aee5a60cfaa27a8c3f442ccac5623b44facb3c5", "Url": "https://api.github.com/repos/Bagception/BagceptionMasterControlService", "Date": "2014-02-18T16:09:39Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jpos.get(\"longitude\")) != null) { longitude = jpos.get(\"longitude\").decimalValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1916/buggy-version/jpo-ode-plugins.src.main.java.us.dot.its.jpo.ode.plugin.j2735.builders.Position3DBuilder.java", "BodyUseAPI": ["jpos.get(\"longitude\").decimalValue()", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)"], "Fixed commit": "cb7a6352e3268aa7ea3cfff90a07c1531ddf94b7", "Url": "https://api.github.com/repos/usdot-jpo-ode/jpo-ode", "Date": "2017-11-17T14:42:55Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jpos.get(\"latitude\")) != null) { latitude = jpos.get(\"latitude\").decimalValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1916/buggy-version/jpo-ode-plugins.src.main.java.us.dot.its.jpo.ode.plugin.j2735.builders.Position3DBuilder.java", "BodyUseAPI": ["jpos.get(\"latitude\").decimalValue()", "com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)"], "Fixed commit": "cb7a6352e3268aa7ea3cfff90a07c1531ddf94b7", "Url": "https://api.github.com/repos/usdot-jpo-ode/jpo-ode", "Date": "2017-11-17T14:42:55Z"},
{"Line": "=>421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.util.DeserializeBeanInfo.getCreatorConstructor()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (creatorConstructor != null) { int constructorTypeStack = 2; for (java.lang.Class<?> type : creatorConstructor.getParameterTypes()) { if ((type == (long.class)) || (type == (double.class))) { constructorTypeStack += 2; }else { constructorTypeStack++; } } if (maxStack < constructorTypeStack) { maxStack = constructorTypeStack; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2135/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.ASMDeserializerFactory.java", "BodyUseAPI": ["java.lang.reflect.Constructor<?>.getParameterTypes()"], "Fixed commit": "77a6605830bb593ea3b1ceeeeb0c31315551521a", "Url": "https://api.github.com/repos/AlibabaTech/fastjson", "Date": "2011-12-16T14:10:12Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((helpMessageDelay) > 0) { (helpMessageDelay)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/214/buggy-version/battlecode-scaffold-master.src.team316.Archon.java", "BodyUseAPI": [], "Fixed commit": "2be819c8d4f5667e986a42bc8e368199b477b7a8", "Url": "https://api.github.com/repos/Ali-Amir/battlecode2016", "Date": "2016-01-17T12:38:05Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (props.containsKey(ProtocolProviderFactory.DOMAIN)) { fromAddr = (fromAddr.contains(props.get(ProtocolProviderFactory.DOMAIN))) ? fromAddr.replace(props.get(ProtocolProviderFactory.DOMAIN), \"\") : fromAddr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2435/buggy-version/src.net.java.sip.communicator.impl.protocol.sip.ConfigHeaders.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(ProtocolProviderFactory.DOMAIN)", "java.util.Map<java.lang.String, java.lang.String>.get(ProtocolProviderFactory.DOMAIN)", "java.lang.String.contains(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "fecf341c44095dd7b014e3feea76ab40aa8275be", "Url": "https://api.github.com/repos/bhatvv/jitsi", "Date": "2015-08-13T11:17:53Z"},
{"Line": "=>877", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((grades.getModel().getValueAt(i, j)) != null) bw.write(((grades.getModel().getValueAt(i, j)) + \" \")); else bw.write(\"0 \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5589/buggy-version/Layout.java", "BodyUseAPI": ["java.io.BufferedWriter.write(java.lang.String)", "javax.swing.table.TableModel.getValueAt(int,int)", "javax.swing.JTable.getModel()"], "Fixed commit": "78dc59749e876bb02cdabc4f570ddc02d88b77f0", "Url": "https://api.github.com/repos/fsinoradzki/SoftwareEngineering1", "Date": "2016-11-13T20:28:18Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (transaction.isActive()) beanManager.fireEvent(new br.com.caelum.vraptor.jpa.event.BeforeCommit());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6611/buggy-version/src.main.java.br.com.caelum.vraptor.jpa.JPATransactionInterceptor.java", "BodyUseAPI": [], "Fixed commit": "f23dd652052708d6e062a717006854d5004abf05", "Url": "https://api.github.com/repos/caelum/vraptor-jpa", "Date": "2015-02-24T12:38:51Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getQueryParamsFirst(link).get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (base64.contains(\"-\")) base64 = base64.substring(0, ((base64.indexOf(\"-\")) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5503/buggy-version/src.de.geeksfactory.opacclient.apis.WinBiap.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "ff424a28d0acc38f04248b5b7fffb4f4254b6577", "Url": "https://api.github.com/repos/raphaelm/opacclient", "Date": "2014-08-12T07:13:43Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rackDto.getId()) == null) { throw new com.abiquo.api.exceptions.BadRequestException(com.abiquo.api.exceptions.APIError.REQUIRED_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/57/buggy-version/api.src.main.java.com.abiquo.api.resources.RackResource.java", "BodyUseAPI": [], "Fixed commit": "deae50b12a3a6a628824b8778bae9523f54cc141", "Url": "https://api.github.com/repos/abiquo/abiquo", "Date": "2012-04-10T09:14:07Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (details.getJobTitle().equalsIgnoreCase(\"Loader\")) { return new UI.Controller.LoaderController(new UI.Controller.LoaderView(details.getUserName()), new UI.Controller.LoaderModel(details.getId(), details.getUserName(), details.getJobTitle(), details.getEmail())); }else if (details.getJobTitle().equalsIgnoreCase(\"Stocker\")) { return new UI.Controller.StockerController(new UI.Controller.StockerView(details.getUserName()), new UI.Controller.StockerModel(details.getId(), details.getUserName(), details.getJobTitle(), details.getEmail())); }else if (details.getJobTitle().equalsIgnoreCase(\"Manager\")) { return new UI.Controller.ManagerController(new UI.Controller.ManagerView(details.getUserName()), new UI.Controller.ManagerModel(details.getId(), details.getUserName(), details.getJobTitle(), details.getEmail())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1300/buggy-version/src.main.java.UI.Controller.EmployeeControllerFactory.java", "BodyUseAPI": ["BLL.Authentication.UserDetails.getId()", "BLL.Authentication.UserDetails.getId()", "BLL.Authentication.UserDetails.getUserName()", "BLL.Authentication.UserDetails.getEmail()", "BLL.Authentication.UserDetails.getUserName()", "BLL.Authentication.UserDetails.getJobTitle()", "BLL.Authentication.UserDetails.getUserName()", "BLL.Authentication.UserDetails.getUserName()", "BLL.Authentication.UserDetails.getJobTitle()", "BLL.Authentication.UserDetails.getUserName()", "BLL.Authentication.UserDetails.getJobTitle()", "BLL.Authentication.UserDetails.getEmail()", "BLL.Authentication.UserDetails.getJobTitle()", "BLL.Authentication.UserDetails.getJobTitle()", "details.getJobTitle().equalsIgnoreCase(java.lang.String)", "details.getJobTitle().equalsIgnoreCase(java.lang.String)", "BLL.Authentication.UserDetails.getEmail()", "BLL.Authentication.UserDetails.getId()", "BLL.Authentication.UserDetails.getUserName()"], "Fixed commit": "ed66b3d96345bd7845fc33c6da97d33fe6ac5f0c", "Url": "https://api.github.com/repos/Yamsie/Warehouse", "Date": "2017-04-18T21:56:27Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((price * q) > (com.marketstock.sebiapplication.BuySell.settings.getFloat(\"wallet\", 0))) { android.util.Log.d(\"amout\", \"out of value\"); android.widget.Toast.makeText(com.marketstock.sebiapplication.BuySell.cont, \"You do not have enough money\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/800/buggy-version/sebiapplication.src.com.marketstock.sebiapplication.BuySell.java", "BodyUseAPI": [], "Fixed commit": "0b53de4a39d043a2897c0f4df8af7101056ffe77", "Url": "https://api.github.com/repos/AnujKosambi/marketstock", "Date": "2014-06-11T12:13:18Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cinemadating.repositories.invitations.NewMessageCounterRepository.findSumNewMessagesForUser(cinemadating.model.Person)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (newMessages == null) newMessages = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6862/buggy-version/src.main.java.cinemadating.services.InvitationService.java", "BodyUseAPI": [], "Fixed commit": "f8a44d91440c987cf4445eb8f736fff74208b5a4", "Url": "https://api.github.com/repos/malabyan/cd-github", "Date": "2017-09-27T13:24:05Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((student.position) == null) { student.position = position; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4251/buggy-version/src.de.selfmade4u.klassenmixer.gui.GraphicalStudent.java", "BodyUseAPI": [], "Fixed commit": "75327a12965bdf108f900e41c408e9997f501af8", "Url": "https://api.github.com/repos/mohe2015/Klassenmixer", "Date": "2017-06-12T18:38:06Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (streamResults.isDescending()) { java.util.Collections.reverse(keys); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6262/buggy-version/src.main.java.com.flightstats.hub.dao.file.SingleContentService.java", "BodyUseAPI": [], "Fixed commit": "31ddafb9d177948042c184c9a819d2cc39a68dab", "Url": "https://api.github.com/repos/flightstats/hub", "Date": "2017-12-07T07:55:41Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((page.getChildren()) != null) && (!(page.getChildren().isEmpty()))) { page.getChildren().get(0).setPadding(0, line.getPaddingTop(), 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1703/buggy-version/library.src.main.java.com.hyena.coretext.layout.CYHorizontalLayout.java", "BodyUseAPI": ["page.getChildren().get(0).setPadding(int,line.getPaddingTop(),int,int)", "com.hyena.coretext.blocks.CYPageBlock.getChildren()", "page.getChildren().get(int)"], "Fixed commit": "f232d37fee1e405201f07854812cb71df3827ba6", "Url": "https://api.github.com/repos/yangzc/AndroidCoreText", "Date": "2017-08-04T09:36:30Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.freeplane.features.mode.Controller.getCurrentController().getMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((map.getURL()) == null) org.freeplane.core.ui.components.UITools.errorMessage(org.freeplane.core.util.TextUtils.getText(\"map_not_saved\")); else org.freeplane.core.ui.components.UITools.errorMessage(org.freeplane.core.util.TextUtils.format(\"link_not_found\", java.lang.String.valueOf(uri)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6618/buggy-version/freeplane.src.org.freeplane.features.url.UrlManager.java", "BodyUseAPI": [], "Fixed commit": "4aee587d4829e8e381823d648530606f1dd76d9e", "Url": "https://api.github.com/repos/freeplane/freeplane", "Date": "2013-06-22T08:21:25Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg == null) { throw new grisu.gricli.GricliSetValueException(getName(), \"null\", \"dir cannot be unset\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4566/buggy-version/src.main.java.grisu.gricli.environment.DirVar.java", "BodyUseAPI": [], "Fixed commit": "52c55e188d0c591970634b47217e60844289f1af", "Url": "https://api.github.com/repos/sina-masoud-ansari/gricli", "Date": "2011-08-30T01:09:03Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jobname == null) { throw new grisu.gricli.GricliSetValueException(getName(), jobname, \"jobname cannot be unset\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4566/buggy-version/src.main.java.grisu.gricli.environment.GricliEnvironment.java", "BodyUseAPI": [], "Fixed commit": "52c55e188d0c591970634b47217e60844289f1af", "Url": "https://api.github.com/repos/sina-masoud-ansari/gricli", "Date": "2011-08-30T01:09:03Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg == null) { throw new grisu.gricli.GricliSetValueException(getName(), \"null\", \"cannot be unset\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4566/buggy-version/src.main.java.grisu.gricli.environment.WalltimeVar.java", "BodyUseAPI": [], "Fixed commit": "52c55e188d0c591970634b47217e60844289f1af", "Url": "https://api.github.com/repos/sina-masoud-ansari/gricli", "Date": "2011-08-30T01:09:03Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (positionManager.getPosition(id))) throw new me.piccioni.jobstrackerspring.controller.HttpNotFoundException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/756/buggy-version/src.main.java.me.piccioni.jobstrackerspring.controller.PositionController.java", "BodyUseAPI": [], "Fixed commit": "34542fe4a1826e3e592e101a93cde1999e91ec5a", "Url": "https://api.github.com/repos/witty-pigeon/jobstracker-spring", "Date": "2016-02-19T20:30:46Z"},
{"Line": "=>1038", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((extension instanceof org.osate.aadl2.FeatureGroupType) && ((((org.osate.aadl2.FeatureGroupType) (extension)).getInverse()) != null)) { extension = ((org.osate.aadl2.FeatureGroupType) (origin)).getInverse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6533/buggy-version/org.osate.aadl2.modelsupport.src.org.osate.aadl2.modelsupport.util.AadlUtil.java", "BodyUseAPI": [], "Fixed commit": "5ceb4f5ef511877cb115cf62b941d9f1289c020e", "Url": "https://api.github.com/repos/Etienne13/osate2-core", "Date": "2014-01-24T02:42:05Z"},
{"Line": "=>1033", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((origin instanceof org.osate.aadl2.FeatureGroupType) && ((((org.osate.aadl2.FeatureGroupType) (origin)).getInverse()) != null)) { origin = ((org.osate.aadl2.FeatureGroupType) (origin)).getInverse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6533/buggy-version/org.osate.aadl2.modelsupport.src.org.osate.aadl2.modelsupport.util.AadlUtil.java", "BodyUseAPI": ["org.osate.aadl2.Classifier.getInverse()"], "Fixed commit": "5ceb4f5ef511877cb115cf62b941d9f1289c020e", "Url": "https://api.github.com/repos/Etienne13/osate2-core", "Date": "2014-01-24T02:42:05Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataLocation) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4810/buggy-version/src.main.java.com.alanmrace.jimzmlparser.mzml.BinaryDataArray.java", "BodyUseAPI": [], "Fixed commit": "5c85169ad9e64c29a12eaff20efd876400ac34ef", "Url": "https://api.github.com/repos/AlanRace/jimzMLParser", "Date": "2017-04-10T16:17:51Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (beaconManager.isBackgroundModeUninitialized()) { beaconManager.setBackgroundMode(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7522/buggy-version/src.main.java.org.altbeacon.beacon.startup.RegionBootstrap.java", "BodyUseAPI": ["org.altbeacon.beacon.BeaconManager.setBackgroundMode(boolean)"], "Fixed commit": "69540cdd402775d06417bef808940fc85bb86eb7", "Url": "https://api.github.com/repos/davidgyoung/android-beacon-library", "Date": "2014-09-11T21:31:55Z"},
{"Line": "=>1380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ihtsdo.otf.mapping.jpa.MapEntryJpa.getMapRecord()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mapRecord.getMapProjectId()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1792/buggy-version/rest.src.main.java.org.ihtsdo.otf.mapping.rest.MappingServiceRest.java", "BodyUseAPI": [], "Fixed commit": "95e9b9e75719aa415f4dc6f305bb3c262ef739ff", "Url": "https://api.github.com/repos/WestCoastInformatics/OTF-Mapping-Service", "Date": "2014-06-24T01:35:01Z"},
{"Line": "=>784", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(table.isTournamentSubTable())) { user.removeTable(entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5649/buggy-version/Mage.Server.src.main.java.mage.server.TableController.java", "BodyUseAPI": [], "Fixed commit": "148994c9e591dec543855b7279b93299f0279a0b", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2015-01-07T22:43:58Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(table.isTournamentSubTable())) { user.addTable(player.getId(), table); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5649/buggy-version/Mage.Server.src.main.java.mage.server.TableController.java", "BodyUseAPI": ["mage.server.User.addTable(player.getId(),mage.game.Table)"], "Fixed commit": "148994c9e591dec543855b7279b93299f0279a0b", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2015-01-07T22:43:58Z"},
{"Line": "=>932", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(table.isTournamentSubTable())) { for (java.util.Map.Entry<java.util.UUID, java.util.UUID> entry : userPlayerMap.entrySet()) { mage.server.User user = mage.server.UserManager.getInstance().getUser(entry.getKey()); if (user != null) { user.removeTable(entry.getValue()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5649/buggy-version/Mage.Server.src.main.java.mage.server.TableController.java", "BodyUseAPI": [], "Fixed commit": "148994c9e591dec543855b7279b93299f0279a0b", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2015-01-07T22:43:58Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(table.isTournamentSubTable())) { user.removeTable(playerId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5649/buggy-version/Mage.Server.src.main.java.mage.server.TableController.java", "BodyUseAPI": [], "Fixed commit": "148994c9e591dec543855b7279b93299f0279a0b", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2015-01-07T22:43:58Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((className) == null) { className = at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.utils.Configuration.getEnforcementPlugin(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3399/buggy-version/rSYBL-control-service-pom.rSYBL-cloud-interaction-unit.src.main.java.at.ac.tuwien.dsg.rSybl.cloudInteractionUnit.api.EnforcementAPI.java", "BodyUseAPI": [], "Fixed commit": "02f5315e25b38aced2ba0fb03e10a35a52f2b605", "Url": "https://api.github.com/repos/tuwiendsg/rSYBL", "Date": "2014-10-20T07:15:20Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((percentageText.getText().toString().trim().length()) == 0) { totalTextView.setText(\"Please enter a percentage\"); }else if ((numberText.getText().toString().trim().length()) == 0) { totalTextView.setText(\"Please enter a number\"); }else { float percentage = java.lang.Float.parseFloat(percentageText.getText().toString()); float number = java.lang.Float.parseFloat(numberText.getText().toString()); float decimal = percentage / 100; float total = decimal * number; totalTextView.setText(((java.lang.Float.toString(total)) + \" % \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3803/buggy-version/app.src.main.java.me.akhilarimbra.mathsucks.MainActivity.java", "BodyUseAPI": ["java.lang.Float.parseFloat(percentageText.getText().toString())", "android.widget.EditText.getText()", "percentageText.getText().toString()"], "Fixed commit": "4bab9bb2b5f348e4d40290b440406f094e95d291", "Url": "https://api.github.com/repos/akhilarimbra/mathsucks-android", "Date": "2016-10-09T05:50:22Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((expression.compareTo(\"\")) != 0) { com.util.Util.write(expressionFileWriter, (((fileFullName + \":\") + expression) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1585/buggy-version/src.com.rawdataprocess.FileParser.java", "BodyUseAPI": ["com.util.Util.write(java.io.FileWriter,java.lang.String)"], "Fixed commit": "671e3d900696f028f0b2248b51e6447170f44d98", "Url": "https://api.github.com/repos/sc703bupt/MathematicaProj", "Date": "2015-04-09T13:21:59Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mValues.get(position).imagePath.equals(\"\")) { android.graphics.drawable.BitmapDrawable tutorImageBitmapDrawable = ((android.graphics.drawable.BitmapDrawable) (context.getResources().getDrawable(R.drawable.ic_person))); holder.imgTutor.setImageBitmap(tutorImageBitmapDrawable.getBitmap()); }else { android.graphics.drawable.Drawable tutorImageDrawable = android.graphics.drawable.Drawable.createFromPath(mValues.get(position).imagePath); android.graphics.drawable.BitmapDrawable tutorImageBitmapDrawable = ((android.graphics.drawable.BitmapDrawable) (tutorImageDrawable)); holder.imgTutor.setImageBitmap(tutorImageBitmapDrawable.getBitmap()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4161/buggy-version/BarApp.app.src.main.java.dk.rus_1_katrinebjerg.barapp.Adapters.TutorListRecycleViewAdapter.java", "BodyUseAPI": ["io.realm.RealmResults<dk.rus_1_katrinebjerg.barapp.Model.Tutor>.get(int)", "android.graphics.drawable.Drawable.createFromPath(mValues.get(position).imagePath)"], "Fixed commit": "edc0bc077475ab4664cc64c435be8a8b4011b01b", "Url": "https://api.github.com/repos/Ranthony67/Rus1BarApp", "Date": "2017-07-26T14:37:11Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entityManager.createQuery(\"SELECT p FROM Position p WHERE p.device = :device AND p.speed > 0 ORDER BY time DESC\", org.traccar.web.server.model.Position.class).setParameter(\"device\", device).setMaxResults(1).getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (position.isEmpty()) { position = entityManager.createQuery(\"SELECT p FROM Position p WHERE p.device = :device ORDER BY time ASC\", org.traccar.web.server.model.Position.class).setParameter(\"device\", device).setMaxResults(1).getResultList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1159/buggy-version/src.main.java.org.traccar.web.server.model.DataServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b4eaf206079d69d0d7a8b5c7e1a528126ae8030f", "Url": "https://api.github.com/repos/jon-stumpf/traccar-web", "Date": "2014-11-09T19:36:53Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (options.has(\"link-workflow-run-to-parents\")) { java.util.List opts = options.valuesOf(\"link-workflow-run-to-parents\"); for (java.lang.Object opt : opts) { java.lang.String[] tokens = ((java.lang.String) (opt)).split(\",\"); for (java.lang.String t : tokens) { parentsLinkedToWR.add(t); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4808/buggy-version/seqware-pipeline.src.main.java.net.sourceforge.seqware.pipeline.plugins.WorkflowLauncherV2.java", "BodyUseAPI": ["net.sourceforge.seqware.pipeline.plugins.WorkflowLauncherV2.valuesOf(java.lang.String)"], "Fixed commit": "3e68fea0716cb14645f9709c0080036f26ff705e", "Url": "https://api.github.com/repos/SeqWare/seqware", "Date": "2012-10-24T17:39:55Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lang.isEmpty()) { language = io.github.mdsimmo.bomberman.messaging.Language.getLanguage(\"english\"); io.github.mdsimmo.bomberman.messaging.Language.langs.put(lang, language); return language; }else if (lang.equalsIgnoreCase(\"english\")) { language = new io.github.mdsimmo.bomberman.messaging.Language.EnglishLanguage(); io.github.mdsimmo.bomberman.messaging.Language.langs.put(\"english\", language); return language; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/106/buggy-version/src.main.java.io.github.mdsimmo.bomberman.messaging.Language.java", "BodyUseAPI": ["java.util.Map<java.lang.String, io.github.mdsimmo.bomberman.messaging.Language>.put(java.lang.String,io.github.mdsimmo.bomberman.messaging.Language)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "ea048da1e2ac5f59e0b95ffed6679bf4c38ea7f8", "Url": "https://api.github.com/repos/mdsimmo/Bomberman", "Date": "2015-08-06T00:56:17Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array.length) == 0) { return \"[]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8966/buggy-version/04Sorts.Sorts.java", "BodyUseAPI": [], "Fixed commit": "2e1f0a5a13c94bef0c20c6c7362c69cbbd90192f", "Url": "https://api.github.com/repos/EdMaxPrime/MKS21X", "Date": "2016-12-23T01:50:18Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i != 0) { android.content.Intent nextFolder = new android.content.Intent(this, com.klinker.android.slackoff.ui.MainActivity.class); nextFolder.putExtra(\"parent_file\", folders.get((i - 1)).getPath()); startActivity(nextFolder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4575/buggy-version/src.com.klinker.android.slackoff.ui.MainActivity.java", "BodyUseAPI": ["android.content.Intent.putExtra(java.lang.String,folders.get((i - 1)).getPath())", "folders.get((i - 1)).getPath()", "java.util.ArrayList<com.klinker.android.slackoff.data.NoteFile>.get(int)"], "Fixed commit": "5cfc916521e45a8b9d670a83dcaf3495008afbcb", "Url": "https://api.github.com/repos/klinker41/slackoff", "Date": "2013-12-02T01:15:07Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTimedOut()) { org.team3128.common.util.Log.recoverable(\"CmdMoveDistance\", \"Autonomous Move Overtime\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4374/buggy-version/src.org.team3128.common.drive.SRXTankDrive.java", "BodyUseAPI": [], "Fixed commit": "20f4982d1487a4e5e8f56a0f65dbb4ef4c08daf7", "Url": "https://api.github.com/repos/Team3128/3128-robot-common", "Date": "2017-03-07T01:33:03Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uriencoded == null) return result;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6351/buggy-version/crosswalk-gmf.src.crosswalk.impl.OriginalNameRecordMatcherImpl.java", "BodyUseAPI": [], "Fixed commit": "25b8178526726817e10e3270b5f85f677ebf04ee", "Url": "https://api.github.com/repos/UNC-Libraries/Curators-Workbench", "Date": "2013-03-07T17:08:58Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scriptTask.getScript()) == null) { bpmnParse.getBpmnModel().addProblem(\"No script provided for scriptTask. \", scriptTask); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/515/buggy-version/modules.activiti-engine.src.main.java.org.activiti.engine.impl.bpmn.parser.handler.ScriptTaskParseHandler.java", "BodyUseAPI": ["bpmnParse.getBpmnModel().addProblem(java.lang.String,org.activiti.bpmn.model.ScriptTask)"], "Fixed commit": "73deb77183b92929be29d11f696af246800af9a4", "Url": "https://api.github.com/repos/mikedias/Activiti", "Date": "2013-03-26T16:12:14Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pModel.getScene().getObjectFromPoint(v.getX(),v.getY())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (object != null) { pModel.setSelectedObject(object); }else if ((!(pModel.getPhysicsState().isRunning())) && ((pModel.getProperty(\"ObjectMode\")) != null)) { switch (pModel.getProperty(\"ObjectMode\")) { case \"circle\" : de.engineapp.visual.Circle circle = new de.engineapp.visual.Circle(pModel, pModel.toTransformedVector(e.getPoint()), 8); circle.mass = 10; pModel.addObject(circle); pModel.fireRepaintEvents(); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1751/buggy-version/PhysicsApplication.src.de.engineapp.controls.Canvas.java", "BodyUseAPI": ["de.engineapp.controls.PresentationModel.setSelectedObject(de.engineapp.controls.ObjectProperties)"], "Fixed commit": "e0a8b931d8a262bb3a404912f7322a8373cb8b05", "Url": "https://api.github.com/repos/FrecherxDachs/PhysicsEngine", "Date": "2012-11-07T13:04:21Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getComponent().equals(ground)) { circle.setPressed(false); square.setPressed(false); pModel.setProperty(\"ObjectMode\", \"ground\"); if (ground.isPressed()) { pModel.setProperty(\"ObjectMode\", \"ground\"); }else { pModel.setProperty(\"ObjectMode\", null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1751/buggy-version/PhysicsApplication.src.de.engineapp.controls.ObjectToolBar.java", "BodyUseAPI": ["de.engineapp.controls.DragButton.isPressed()"], "Fixed commit": "e0a8b931d8a262bb3a404912f7322a8373cb8b05", "Url": "https://api.github.com/repos/FrecherxDachs/PhysicsEngine", "Date": "2012-11-07T13:04:21Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (square.isPressed()) { pModel.setProperty(\"ObjectMode\", \"aquare\"); }else { pModel.setProperty(\"ObjectMode\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1751/buggy-version/PhysicsApplication.src.de.engineapp.controls.ObjectToolBar.java", "BodyUseAPI": [], "Fixed commit": "e0a8b931d8a262bb3a404912f7322a8373cb8b05", "Url": "https://api.github.com/repos/FrecherxDachs/PhysicsEngine", "Date": "2012-11-07T13:04:21Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (circle.isPressed()) { pModel.setProperty(\"ObjectMode\", \"circle\"); }else { pModel.setProperty(\"ObjectMode\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1751/buggy-version/PhysicsApplication.src.de.engineapp.controls.ObjectToolBar.java", "BodyUseAPI": [], "Fixed commit": "e0a8b931d8a262bb3a404912f7322a8373cb8b05", "Url": "https://api.github.com/repos/FrecherxDachs/PhysicsEngine", "Date": "2012-11-07T13:04:21Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (eventNum < 1) { com.cloudcraftgaming.discal.utils.Message.sendMessage(\"Valid numbers are only `1-15`\", event, client); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6877/buggy-version/src.main.java.com.cloudcraftgaming.discal.module.command.EventListCommand.java", "BodyUseAPI": [], "Fixed commit": "8daae123656ce9da566d9595da51779df81d7736", "Url": "https://api.github.com/repos/NovaFox161/DisCal-Discord-Bot", "Date": "2017-04-11T21:26:01Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (a > b) { int temp = a; a = b; b = temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5868/buggy-version/src.ds.android.tasknet.application.SampleApplicationLocal.java", "BodyUseAPI": [], "Fixed commit": "e85b13e829d2f31e562606bd5c4886a38884f811", "Url": "https://api.github.com/repos/dvavili/TaskNet", "Date": "2011-04-28T08:31:11Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isRegion()) { subRegionNames.add(this.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8230/buggy-version/ultradns-rest.src.main.java.denominator.ultradns.model.Region.java", "BodyUseAPI": [], "Fixed commit": "50bd29595f02fc3470eb56b15fcdbb7bc8f54408", "Url": "https://api.github.com/repos/ultradns/denominator", "Date": "2017-03-17T12:16:36Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isRegion()) { subRegionNames.add(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8230/buggy-version/ultradns-rest.src.main.java.denominator.ultradns.model.Region.java", "BodyUseAPI": [], "Fixed commit": "50bd29595f02fc3470eb56b15fcdbb7bc8f54408", "Url": "https://api.github.com/repos/ultradns/denominator", "Date": "2017-03-17T12:16:36Z"},
{"Line": "=>1265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maxx == 180) || (minx == (-180))) coordSpanIDL = true; else if ((maxx - minx) >= 180) { coordSpanIDL = true; coordsLeft = maxx; coordsRight = maxNegX; }else { coordsLeft = minx; coordsRight = maxx; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/597/buggy-version/core.JavaRendererServer.src.main.java.RenderMultipoints.clsRenderer.java", "BodyUseAPI": [], "Fixed commit": "0919a3cbc389186a184fc5744fb500cd509310f8", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2017-02-08T16:18:29Z"},
{"Line": "=>1293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((((tl.x) == 180) || ((tl.x) == (-180))) || ((br.x) == 180)) || ((br.x) == (-180))) boxSpanIDL = true; else if ((java.lang.Math.abs(((br.x) - (tl.x)))) > 180) boxSpanIDL = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/597/buggy-version/core.JavaRendererServer.src.main.java.RenderMultipoints.clsRenderer.java", "BodyUseAPI": ["java.lang.Math.abs(((br.x) - (tl.x)))"], "Fixed commit": "0919a3cbc389186a184fc5744fb500cd509310f8", "Url": "https://api.github.com/repos/missioncommand/mil-sym-java", "Date": "2017-02-08T16:18:29Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((helmet == null) || ((helmet.itemID) != (ChaosCrystalMain.itemCrystalGlasses.itemID))) { par3List.add(\"You see a lot of written text\"); par3List.add(\"on this stone tablet but you\"); par3List.add(\"can't decipher it. Maybe some\"); par3List.add(\"crystal glasses might help?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8613/buggy-version/common.founderio.chaoscrystal.items.ItemManual.java", "BodyUseAPI": [], "Fixed commit": "90445808c0a0ac4e819bae088fb5bec0584f99f1", "Url": "https://api.github.com/repos/founderio/chaoscrystal", "Date": "2013-12-30T17:47:34Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (input != null) input.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7400/buggy-version/src.main.java.net.landarzar.telegrambot.Application.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "a700147b6af00e06da020aabcba50ee030a3d7d7", "Url": "https://api.github.com/repos/Landarzar/LandarzarBot", "Date": "2016-10-02T16:30:22Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (idAttribute != null) { srcLabel = (elementName + \"@\") + idAttribute; targetLabel = elementName; }else { targetLabel = targetEl.getParentElement().getName(); srcLabel = (targetLabel + \"/\") + elementName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2672/buggy-version/mddf-lib.src.com.movielabs.mddflib.util.CMValidator.java", "BodyUseAPI": [], "Fixed commit": "55eb3951e9fcecd87b3338935522e567fc26694f", "Url": "https://api.github.com/repos/MovieLabs/mddf", "Date": "2017-08-10T20:07:45Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gregtech.api.util.GT_Utility.isStackInvalid(aStack)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/880/buggy-version/src.main.java.gregtech.common.tileentities.generators.GT_MetaTileEntity_DieselGenerator.java", "BodyUseAPI": [], "Fixed commit": "c410fce3de477c8fcdfa29aae37eba89d4f5928c", "Url": "https://api.github.com/repos/GTNewHorizons/GT5-Unofficial", "Date": "2016-11-02T22:38:49Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smona.app.preinstallclient.data.IDataSource.getMdatas()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (mDatas != null) { com.smona.app.preinstallclient.ProcessModel.requestIcons(mApp, mIconCache, mDatas); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5210/buggy-version/code.src.com.smona.app.preinstallclient.ProcessModel.java", "BodyUseAPI": ["com.smona.app.preinstallclient.ProcessModel.requestIcons(com.smona.app.preinstallclient.ClientApplication,com.smona.app.preinstallclient.control.IconCache,java.util.List<com.smona.app.preinstallclient.data.ItemInfo>)"], "Fixed commit": "51780393c6f24fb64ca1f0ce29d6b4ea2c0c8105", "Url": "https://api.github.com/repos/preinstall/PreinstallClient", "Date": "2015-07-12T09:33:29Z"},
{"Line": "=>775", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataLogsHelper.getDataSetOnFlutter()) == dataSet) { if (!(globalHandler.dataLoggingHandler.isLogging())) { org.cmucreatelab.flutter_android.ui.dialogs.SaveToKindleDialog dialog = org.cmucreatelab.flutter_android.ui.dialogs.SaveToKindleDialog.newInstance(instance, globalHandler.dataLoggingHandler.getDataName(), globalHandler.sessionHandler.getSession().getFlutter().getName()); dialog.show(getSupportFragmentManager(), \"tag\"); }else { loadDataSet(dataLogsHelper.getDataSetOnFlutter()); } }else { loadDataSet(dataSet); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6089/buggy-version/app.src.main.java.org.cmucreatelab.flutter_android.activities.DataLogsActivity.java", "BodyUseAPI": ["org.cmucreatelab.flutter_android.activities.DataLogsActivity.loadDataSet(dataLogsHelper.getDataSetOnFlutter())", "org.cmucreatelab.flutter_android.activities.DataLogsActivity.loadDataSet(org.cmucreatelab.flutter_android.classes.datalogging.DataSet)", "org.cmucreatelab.flutter_android.helpers.datalogging.DataLogsHelper.getDataSetOnFlutter()"], "Fixed commit": "5150109d7dc38b8225f3716a95c901b30e380529", "Url": "https://api.github.com/repos/CMU-CREATE-Lab/flutter-app-android", "Date": "2017-03-20T16:43:36Z"},
{"Line": "=>1011", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((missionState.getCurrentMissionState()) == (com.dji.sdk.sample.common.entity.MissionStateEnum.SELECT_AREA)) { if (reason == (GoogleMap.OnCameraMoveStartedListener.REASON_GESTURE)) { if (polySurveyAreaPicked) { draggingpoly = true; com.google.android.gms.maps.model.LatLng LatLngOfCenterScreen = mMap.getCameraPosition().target; drawAreaSelector(false, LatLngOfCenterScreen); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4517/buggy-version/app.src.main.java.com.dji.sdk.sample.common.presenter.src.MapPresenter.java", "BodyUseAPI": [], "Fixed commit": "ca5b0e950d9b2c3d5ea05dee16bc7883add0cb93", "Url": "https://api.github.com/repos/Blargedy/HydraFusionToolsLite", "Date": "2017-03-26T23:57:10Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.marked) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3187/buggy-version/src.com.andbroby.operators.AlternativeNode.java", "BodyUseAPI": [], "Fixed commit": "3a48d9176c7d808d02421cf330226f06162c078d", "Url": "https://api.github.com/repos/andbroby/Regex-tree", "Date": "2015-03-01T18:28:18Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8783/buggy-version/app.src.main.java.com.example.karthikkribakaran.mypantry.MyGroceries.java", "BodyUseAPI": [], "Fixed commit": "b7161f55ad8a9ed1e3e4aaf45c65deb632d5def6", "Url": "https://api.github.com/repos/kkribakaran/MyPantry", "Date": "2017-12-20T07:08:29Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (response.message().contains(\"OK\")) { uploadFileStatusVer2 = com.futsal.manager.DefineManager.VIDEO_UPLOADED_SUCCESSFULLY; return; }else { uploadFileStatusVer2 = com.futsal.manager.DefineManager.VIDEO_UPLOADED_FAILURE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3791/buggy-version/app.src.main.java.com.futsal.manager.NetworkModule.CommunicationWithServer.java", "BodyUseAPI": [], "Fixed commit": "4ae3d17200449a4281aad9720c9e93fe5348c697", "Url": "https://api.github.com/repos/Futsal-Manager/android-client", "Date": "2017-06-11T17:00:19Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.taobao.metamorphosis.server.assembly.MetaMorphosisBroker.getMetaConfig()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((metaConfig == null) || ((metaConfig.getSlaveConfig()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3755/buggy-version/metamorphosis-server-wrapper.src.main.java.com.taobao.metamorphosis.metaslave.SubscribeHandler.java", "BodyUseAPI": [], "Fixed commit": "b3756293567f7ebaabddc675767fd0357cfb7e7a", "Url": "https://api.github.com/repos/pooooch/Metamorphosis", "Date": "2012-05-30T11:41:14Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isJournaling()) { java.lang.System.err.println((\"Saving progress to journal file \" + (journalName))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1154/buggy-version/src.main.java.com.rodhilton.metaheuristics.simulator.Simulator.java", "BodyUseAPI": [], "Fixed commit": "d500c5b50e0f4aa49ccf33379d1faedcd0920fc1", "Url": "https://api.github.com/repos/rodhilton/metaheuristics-engine", "Date": "2014-11-19T17:49:48Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.photon.phresco.framework.param.impl.CollectionUtils.isEmpty(possibleValues.getValue())) { isTarget = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5482/buggy-version/phresco-framework-impl.src.main.java.com.photon.phresco.framework.param.impl.IosTargetParameterImpl.java", "BodyUseAPI": [], "Fixed commit": "ef412bf7f7700cf05a05e87f006d12c7849397d4", "Url": "https://api.github.com/repos/phresco/framework", "Date": "2013-01-08T13:52:18Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IFolder.getFolder(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (featureFolder.isAccessible()) { addArbitraryFiles(featureFolder, feature); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/619/buggy-version/plugins.de.ovgu.featureide.core.featurehouse.src.de.ovgu.featureide.featurehouse.model.FeatureHouseModelBuilder.java", "BodyUseAPI": ["de.ovgu.featureide.featurehouse.model.FeatureHouseModelBuilder.addArbitraryFiles(org.eclipse.core.resources.IFolder,java.lang.String)"], "Fixed commit": "51be446881969f7ba0b6c94ef3edc10d19a6e7ee", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2015-03-06T20:04:46Z"},
{"Line": "=>698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) { setLayerType(View.LAYER_TYPE_SOFTWARE, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1298/buggy-version/simpledialogfragment.src.main.java.eltos.simpledialogfragment.color.ColorWheelView.java", "BodyUseAPI": [], "Fixed commit": "8aa569585d82d38890827ba001a7614a9ba4f6ac", "Url": "https://api.github.com/repos/mtotschnig/SimpleDialogFragments", "Date": "2017-05-27T23:31:37Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((score) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1774/buggy-version/src.normalizer.Normalizer.java", "BodyUseAPI": [], "Fixed commit": "68589c795ac90a41eaa43ab8c2e16249ea762c06", "Url": "https://api.github.com/repos/KondorPhase/KondorFusion", "Date": "2017-12-17T15:37:29Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.getPlayer().getServer().equals(event.getKickedFrom()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2997/buggy-version/src.main.java.com.imaginarycode.minecraft.hubmagic.ReconnectListener.java", "BodyUseAPI": [], "Fixed commit": "9abd733882b69782901a07ed206680b0442e83f1", "Url": "https://api.github.com/repos/theminecoder/HubMagic", "Date": "2015-12-21T00:37:01Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((roomID > 0) && ((checkIn != null) || (checkOut != null))) { return \"Cannot update check-in and check-out dates for a single room only\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8429/buggy-version/src.Classes.impl.IBookingManagementImplImpl.java", "BodyUseAPI": [], "Fixed commit": "0e7b2a60a0fdece462c267af73d64f567f3c5f4b", "Url": "https://api.github.com/repos/markusberget/tda593-hotel", "Date": "2015-01-05T16:01:59Z"},
{"Line": "=>1438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((relList.contains(example)) == false) relList.add(example);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8424/buggy-version/contentSim.src.Data.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "de8a442f400f6032ec2e9dac948beeec6ede7247", "Url": "https://api.github.com/repos/rhosseini/contentSim", "Date": "2014-10-03T19:00:50Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user_data.exists()) user_data.delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7740/buggy-version/src.me.SteveJones.Objects.User.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "6dd1660a91c30e97ac4e2ccffdf62c6abfe53fc5", "Url": "https://api.github.com/repos/ScreenDE/THF", "Date": "2013-11-03T17:54:42Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((triplestoreVariable) != 0) { return getTriplestoreVariableForEventNr(triplestoreVariable); }else { throw new java.lang.RuntimeException(\"Value of triplestoreVariable is 0. Please call getNextTriplestoreVariable() first.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/671/buggy-version/play-platformservices-querydispatcher.src.main.java.eu.play_project.play_platformservices_querydispatcher.bdpl.visitor.realtime.UniqueNameManager.java", "BodyUseAPI": [], "Fixed commit": "37ef909c8ecc420ad45a9e18af12d84c3774eacf", "Url": "https://api.github.com/repos/play-project/play-dcep", "Date": "2013-10-31T14:32:52Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWaitForMoveToEdge && ((mAnimationHandler.getState()) != (jp.co.recruit_lifestyle.android.floatingview.FloatingView.STATE_FINISHING))) { moveToEdge(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/376/buggy-version/library.src.main.java.jp.co.recruit_lifestyle.android.floatingview.FloatingView.java", "BodyUseAPI": [], "Fixed commit": "805a16262ee405dc112ee8e21fce17d44251f32e", "Url": "https://api.github.com/repos/recruit-lifestyle/FloatingView", "Date": "2017-07-19T04:19:54Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numMoved == (removedIndices.size())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8788/buggy-version/app.src.main.java.com.thevarunshah.classes.Backend.java", "BodyUseAPI": [], "Fixed commit": "ded032df58526d5556a006685c2e74ce0ddd00c3", "Url": "https://api.github.com/repos/thevarunshah/SimpleBucketList-material", "Date": "2016-05-28T07:08:33Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getValues()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4165/buggy-version/src.org.dyndns.fzoli.rccar.bridge.Config.java", "BodyUseAPI": [], "Fixed commit": "816ede60a6ce5566520ad646924c3cb0068d8aea", "Url": "https://api.github.com/repos/fzoli/RemoteControlCar", "Date": "2012-09-29T23:24:59Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.servinglynk.hmis.warehouse.dao.InventoryDaoImpl.findByCriteria(org.hibernate.criterion.DetachedCriteria,java.lang.Integer,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inventories.size()) > 0) return inventories; else return new java.util.ArrayList<com.servinglynk.hmis.warehouse.model.v2015.Inventory>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4345/buggy-version/hmis-model-v2015.src.main.java.com.servinglynk.hmis.warehouse.dao.InventoryDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "dedc9e57c0d29518d315e99c7a8743e9fe744098", "Url": "https://api.github.com/repos/servinglynk/hslynk-open-source", "Date": "2016-04-27T11:53:39Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((driverPort.getPortNetworkId()) == null) { if (storagePort == null) { _log.error(\"No portNetworkId for new discovered port {}, skip discovery of this port.\", portNativeGuid); }else { _log.error(\"No portNetworkId for previously discovered port {}, skip discovery of this port.\", portNativeGuid); } continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1264/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.plugins.ExternalDeviceCommunicationInterface.java", "BodyUseAPI": [], "Fixed commit": "5868f2cb833d86e326b7d2dbe25886427e535427", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-07-27T19:29:18Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (identifierPrefix == null) identifierPrefix = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3749/buggy-version/bahmnicore-api.src.main.java.org.bahmni.module.bahmnicore.contract.patient.PatientSearchParameters.java", "BodyUseAPI": [], "Fixed commit": "805d21e479690e9a49c480b99a59f8d3349c280e", "Url": "https://api.github.com/repos/Bahmni/bahmni-core", "Date": "2016-01-06T10:16:41Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((catalystActivity.getPhysicalEntity()) != null) { pes.add(catalystActivity.getPhysicalEntity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/9017/buggy-version/Core.src.main.java.org.reactome.server.analysis.tools.components.filter.ReactionLikeEventBuilder.java", "BodyUseAPI": ["org.reactome.core.model.CatalystActivity.getPhysicalEntity()", "java.util.Set<org.reactome.core.model.PhysicalEntity>.add(catalystActivity.getPhysicalEntity())"], "Fixed commit": "be2a0c41305f9fa8713acee611fcf9db06c1ca8f", "Url": "https://api.github.com/repos/reactome/AnalysisTools", "Date": "2014-12-02T15:53:02Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pgrid.entity.routingtable.RoutingTable.getLevelArray(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((level.length) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7369/buggy-version/src.pgrid.service.repair.internal.RepairDelegate.java", "BodyUseAPI": [], "Fixed commit": "24abb8606fa0e173e1d4669ec3d12b7251b56c89", "Url": "https://api.github.com/repos/Archimidis/pgrid", "Date": "2012-10-12T07:14:14Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.silverpeas.util.StringUtil.isDefined(messageId)) { if (\"SERVER\".equals(messageType)) { com.stratelia.silverpeas.notificationserver.channel.popup.com.stratelia.silverpeas.notificationserver.channel.server.SilverMessageFactory.del(messageId); }else if (\"POPUP\".equals(messageType)) { com.stratelia.silverpeas.notificationserver.channel.popup.SilverMessageFactory.del(messageId); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3775/buggy-version/war-core.src.main.java.com.stratelia.silverpeas.clipboardPeas.control.ClipboardSessionController.java", "BodyUseAPI": ["com.stratelia.silverpeas.notificationserver.channel.popup.com.stratelia.silverpeas.notificationserver.channel.server.SilverMessageFactory.del(java.lang.String)", "com.stratelia.silverpeas.notificationserver.channel.popup.SilverMessageFactory.del(java.lang.String)"], "Fixed commit": "e0100d790976722aaba233b1f3fbe102e277c99e", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2016-06-29T20:03:07Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (orderCode.equals(\"\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4477/buggy-version/app.src.main.java.com.lifeisle.jekton.receiver.LogisticsUpdateReceiver.java", "BodyUseAPI": [], "Fixed commit": "3fa2810d582b257a11ac9a8cfc195e8f2ea86f20", "Url": "https://api.github.com/repos/bobo199301/ElsiefilDA", "Date": "2015-08-16T05:45:04Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((raf) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4967/buggy-version/src.com.backyardbrains.audio.PlaybackThread.java", "BodyUseAPI": [], "Fixed commit": "9594e796669347df9b851e9c3bf9ebb152411f9d", "Url": "https://api.github.com/repos/BackyardBrains/Spike-Recorder-Android", "Date": "2017-09-19T17:11:32Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getProperty(\"marathon.project.dir\")) != null) { java_tool_options.append(((\"-Dmarathon.project.dir=\\\"\" + (java.lang.System.getProperty(\"marathon.project.dir\"))) + \"\\\" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8703/buggy-version/marathon-java.marathon-java-driver.src.main.java.net.sourceforge.marathon.javadriver.JavaProfile.java", "BodyUseAPI": [], "Fixed commit": "d7d9fe09fb0e863c85e2d8cf408e1ec8ec5848b3", "Url": "https://api.github.com/repos/jalian-systems/marathonv5", "Date": "2017-06-14T09:38:26Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (grammar.getRules().isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/291/buggy-version/src.main.java.com.romanov_v.parser.EarleyParser.java", "BodyUseAPI": [], "Fixed commit": "6471b39e6aa3bb410e707c0b06bfdde47605536a", "Url": "https://api.github.com/repos/vladislavoff1/Parser", "Date": "2016-03-14T12:26:05Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.StringUtils.splitPreserveAllTokens(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(i[9])) { initOddsItem.setReturn_rate(i[9]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5594/buggy-version/src.main.java.com.viki.bets.win007.Win007MultiInitOddsCrawler.java", "BodyUseAPI": ["com.viki.bets.win007.pojo.InitOddsItem.setReturn_rate(java.lang.String)"], "Fixed commit": "5b1fa781c984a9c5373026f00a0826feba4d3d9a", "Url": "https://api.github.com/repos/RunnerViki/win_bet", "Date": "2016-12-22T03:14:09Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.desiredAlphaReducts[i][j]) != null) { reductsList.add(this.desiredAlphaReducts[i][j]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2073/buggy-version/KDD.src.kdd.data.DiscernableData.java", "BodyUseAPI": ["java.util.List<java.util.List<java.lang.String>>.add(java.util.List<java.lang.String>)"], "Fixed commit": "d1a87e201b233d5e65c2e12e3f147b7d43812550", "Url": "https://api.github.com/repos/yongkangliu/Projects-for-Knowledge-Discovery-In-Databases-Class", "Date": "2012-11-23T16:26:47Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (url == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6429/buggy-version/WordCounter.src.wordCounter.WC.java", "BodyUseAPI": [], "Fixed commit": "d3a5d5adf82035a16548a05a395885720166bf34", "Url": "https://api.github.com/repos/KevinJones/CS6300WordCounter", "Date": "2012-09-11T01:24:44Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allin) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/126/buggy-version/com.narrowtux.DropChest.EntityWatcher.java", "BodyUseAPI": [], "Fixed commit": "83f102a7c9bff51a493982b7e6c2c87c0d33ef29", "Url": "https://api.github.com/repos/narrowtux/DropChest", "Date": "2011-02-15T12:57:59Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.lucene.document.InetAddressPoint.encode(java.net.InetAddress)", "org.apache.lucene.document.InetAddressPoint.encode(java.net.InetAddress)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.apache.lucene.util.StringHelper.compare(org.apache.lucene.document.InetAddressRange.BYTES, minEncoded, 0, maxEncoded, 0)) > 0) { throw new java.lang.IllegalArgumentException(\"min value cannot be greater than max value for InetAddressRange field\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4123/buggy-version/lucene.misc.src.java.org.apache.lucene.document.InetAddressRange.java", "BodyUseAPI": [], "Fixed commit": "6eb00543bc969d375b43ed20bedcbdb60bc8f22a", "Url": "https://api.github.com/repos/apache/lucene-solr", "Date": "2017-04-05T16:10:15Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == (mDrawerListView.getSelectedItemPosition())) v.setBackgroundColor(getResources().getColor(R.color.auburn));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8979/buggy-version/Breadit.reddit.src.main.java.me.williamhester.reddit.NavigationDrawerFragment.java", "BodyUseAPI": [], "Fixed commit": "f014e31aef38e57e07aa01dc8fd0c7c009f859b8", "Url": "https://api.github.com/repos/WilliamHester/breadit", "Date": "2014-04-20T02:45:10Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSubreddit) != null) mSubredditList.remove(mSubreddit.getDisplayName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8979/buggy-version/Breadit.reddit.src.main.java.me.williamhester.reddit.NavigationDrawerFragment.java", "BodyUseAPI": [], "Fixed commit": "f014e31aef38e57e07aa01dc8fd0c7c009f859b8", "Url": "https://api.github.com/repos/WilliamHester/breadit", "Date": "2014-04-20T02:45:10Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result) { mCheckbox.setChecked(mSubreddit.userIsSubscriber()); mCheckbox.setEnabled(true); }else { mCheckbox.setChecked(false); mCheckbox.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8979/buggy-version/Breadit.reddit.src.main.java.me.williamhester.reddit.NavigationDrawerFragment.java", "BodyUseAPI": [], "Fixed commit": "f014e31aef38e57e07aa01dc8fd0c7c009f859b8", "Url": "https://api.github.com/repos/WilliamHester/breadit", "Date": "2014-04-20T02:45:10Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((processTimeTHC) == 0) { if ((burnTime) <= 1) { burnTime = net.minecraft.tileentity.TileEntityFurnace.getItemBurnTime(inventory.getStackInSlot(1)); maxBurnTime = burnTime; inventory.extractItem(1, 1, false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7657/buggy-version/main.java.com.deerangle.block.entity.TileEntityDistiller.java", "BodyUseAPI": [], "Fixed commit": "dff54c972501e9192f6625cc117e6b391e4d70e1", "Url": "https://api.github.com/repos/deerangle2/SchokoMod", "Date": "2017-12-27T15:09:34Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count < 0) { throw new java.lang.StringIndexOutOfBoundsException(count); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1480/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONReaderScanner.java", "BodyUseAPI": [], "Fixed commit": "4283568990497a1743a58a482da18ef23c27bc7a", "Url": "https://api.github.com/repos/VictorZeng/fastjson", "Date": "2016-04-29T03:06:06Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.isEmpty()) { type = boatToEdit.getBoatType().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6594/buggy-version/code.src.main.java.controller.UserInteractionController.java", "BodyUseAPI": [], "Fixed commit": "e99c93bdb96eec76eaf554a91b603f8b0665de46", "Url": "https://api.github.com/repos/1DV607/workshop-2", "Date": "2017-11-12T10:06:47Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size.isEmpty()) { size = java.lang.Integer.toString(boatToEdit.getSize()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6594/buggy-version/code.src.main.java.controller.UserInteractionController.java", "BodyUseAPI": [], "Fixed commit": "e99c93bdb96eec76eaf554a91b603f8b0665de46", "Url": "https://api.github.com/repos/1DV607/workshop-2", "Date": "2017-11-12T10:06:47Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((boardingSeconds.isPresent()) && ((boardingSeconds.get()) > 0)) { builder.append(java.lang.String.format(\"boarding: %s, departure: %s, \", at.ac.ait.ariadne.routeformat.SprouteUtils.getShortStringTime(departureTime), at.ac.ait.ariadne.routeformat.SprouteUtils.getShortStringTime(departureTime.plus(boardingSeconds.get(), java.time.temporal.ChronoUnit.SECONDS)))); }else { builder.append(java.lang.String.format(\"departure: %s, \", at.ac.ait.ariadne.routeformat.SprouteUtils.getShortStringTime(departureTime))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2099/buggy-version/src.main.java.at.ac.ait.ariadne.routeformat.RouteSegment.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.format(java.lang.String,at.ac.ait.ariadne.routeformat.SprouteUtils.getShortStringTime(departureTime),at.ac.ait.ariadne.routeformat.SprouteUtils.getShortStringTime(departureTime.plus(boardingSeconds.get(), java.time.temporal.ChronoUnit.SECONDS)))", "at.ac.ait.ariadne.routeformat.SprouteUtils.getShortStringTime(java.time.ZonedDateTime)", "java.util.Optional<java.lang.Integer>.get()", "java.time.ZonedDateTime.plus(java.lang.Integer,java.time.temporal.ChronoUnit)"], "Fixed commit": "8576dd1efdce141b02799796b6d32e771d6036a2", "Url": "https://api.github.com/repos/dts-ait/ariadne-json-route-format", "Date": "2016-04-12T10:52:52Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((alightingSeconds.isPresent()) && ((alightingSeconds.get()) > 0)) { builder.append(java.lang.String.format(\"alighting: %s, arrival: %s\", at.ac.ait.ariadne.routeformat.SprouteUtils.getShortStringTime(arrivalTime.minus(alightingSeconds.get(), java.time.temporal.ChronoUnit.SECONDS)), at.ac.ait.ariadne.routeformat.SprouteUtils.getShortStringTime(arrivalTime))); }else { builder.append(java.lang.String.format(\"arrival: %s\", at.ac.ait.ariadne.routeformat.SprouteUtils.getShortStringTime(arrivalTime))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2099/buggy-version/src.main.java.at.ac.ait.ariadne.routeformat.RouteSegment.java", "BodyUseAPI": ["java.util.Optional<java.lang.Integer>.get()", "java.time.ZonedDateTime.minus(java.lang.Integer,java.time.temporal.ChronoUnit)", "java.lang.String.format(java.lang.String,at.ac.ait.ariadne.routeformat.SprouteUtils.getShortStringTime(arrivalTime.minus(alightingSeconds.get(), java.time.temporal.ChronoUnit.SECONDS)),at.ac.ait.ariadne.routeformat.SprouteUtils.getShortStringTime(arrivalTime))", "at.ac.ait.ariadne.routeformat.SprouteUtils.getShortStringTime(java.time.ZonedDateTime)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "8576dd1efdce141b02799796b6d32e771d6036a2", "Url": "https://api.github.com/repos/dts-ait/ariadne-json-route-format", "Date": "2016-04-12T10:52:52Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((net.dean.jraw.models.Submission) (submission)).getTitle()) != null) submissions.add(((net.dean.jraw.models.Submission) (submission)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5239/buggy-version/app.src.main.java.io.github.jotran.reader.model.JrawReaderHelper.java", "BodyUseAPI": ["java.util.List<net.dean.jraw.models.Submission>.add(java.lang.Object)"], "Fixed commit": "4fdf8dc0d3a24fc843b2d3d3a4249a587bcc8e26", "Url": "https://api.github.com/repos/JotraN/Reader", "Date": "2016-09-28T06:33:55Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDone) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2112/buggy-version/rxjava-core.src.main.java.rx.subjects.ReplaySubject.java", "BodyUseAPI": [], "Fixed commit": "fcb76576f9d2ca4207f595b3cae187ebeace714f", "Url": "https://api.github.com/repos/Netflix/RxJava", "Date": "2013-12-11T01:50:21Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stateQueue.isFull()) { emitted += 1; stateQueue.pop(); return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/9176/buggy-version/src.main.java.com.fulmicoton.collodion.processors.tokenpattern.TokenPatternFilter.java", "BodyUseAPI": ["com.fulmicoton.collodion.common.StateQueue.pop()"], "Fixed commit": "28fae59e8a2639da4ca6162ff26f2dbba7e4c9b3", "Url": "https://api.github.com/repos/fulmicoton/collodion", "Date": "2016-04-08T07:11:53Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (candidate.equals(to)) { return new com.xd.tactics.actors.move.Route(route); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/9099/buggy-version/xd-core.src.main.java.com.xd.tactics.actors.move.ExtendedRouter.java", "BodyUseAPI": [], "Fixed commit": "b1a7e9adb55e7b182fc91c706df7e70d59b8617f", "Url": "https://api.github.com/repos/etelstan/xd", "Date": "2017-09-21T12:37:26Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5418/buggy-version/dataautoaccess.src.main.java.com.thirtydegreesray.dataautoaccess.DataAutoAccess.java", "BodyUseAPI": [], "Fixed commit": "78008ff2ba657fb870f4ffa3da7244c36fffebf1", "Url": "https://api.github.com/repos/ThirtyDegreesRay/DataAutoAccess", "Date": "2016-09-08T10:02:20Z"},
{"Line": "=>472", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["brooklyn.util.flags.TypeCoercions.tryCoerce(java.lang.Object,com.google.common.reflect.TypeToken<brooklyn.location.PortRange>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (maybePortRange.isPresentAndNonNull()) { brooklyn.location.PortRange p = maybePortRange.get(); if ((p != null) && (!(p.isEmpty()))) ports.add(p.iterator().next()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/279/buggy-version/software.base.src.main.java.brooklyn.entity.basic.SoftwareProcessImpl.java", "BodyUseAPI": ["brooklyn.util.guava.Maybe<brooklyn.location.PortRange>.get()"], "Fixed commit": "7678188c0e5bb4efcffe902233d0873648d4ff3d", "Url": "https://api.github.com/repos/nakomis/incubator-brooklyn", "Date": "2015-06-25T14:14:30Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["brooklyn.util.flags.TypeCoercions.tryCoerce(java.lang.Object,com.google.common.reflect.TypeToken<brooklyn.location.PortRange>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (maybePortRange.isPresentAndNonNull()) { brooklyn.location.PortRange p = maybePortRange.get(); if ((p != null) && (!(p.isEmpty()))) ports.add(p.iterator().next()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/279/buggy-version/software.base.src.main.java.brooklyn.entity.basic.SameServerDriverLifecycleEffectorTasks.java", "BodyUseAPI": ["brooklyn.util.guava.Maybe<brooklyn.location.PortRange>.get()"], "Fixed commit": "7678188c0e5bb4efcffe902233d0873648d4ff3d", "Url": "https://api.github.com/repos/nakomis/incubator-brooklyn", "Date": "2015-06-25T14:14:30Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj.centerY()) < (objLast.centerY())) { newY = (wall.bottom) + r; if ((java.lang.Math.abs((newY - y))) > 20) { newY = (wall.top) - r; } }else { newY = (wall.top) - r; if ((java.lang.Math.abs((newY - y))) > 20) { newY = (wall.bottom) + r; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4845/buggy-version/src.com.example.android.accelerometerplay.Maze.java", "BodyUseAPI": [], "Fixed commit": "224e31b957db1e0f5ce6c14ccb63e1aea04dc96d", "Url": "https://api.github.com/repos/jmkongs/marblegame", "Date": "2013-12-16T21:55:53Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isArmorSlots) button.setHelpMode(((com.phylogeny.extrabitmanipulation.client.gui.armor.GuiInventoryArmorSlots) (gui)).isInHelpMode());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6381/buggy-version/src.main.java.com.phylogeny.extrabitmanipulation.armor.capability.ChiseledArmorSlotsEventHandler.java", "BodyUseAPI": [], "Fixed commit": "ae36b197910cf834674b66e032f6c1bc4bcf8677", "Url": "https://api.github.com/repos/Phylogeny/ExtraBitManipulation", "Date": "2017-08-29T13:38:33Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.delegate) instanceof org.springframework.cloud.sleuth.instrument.rxjava.SleuthRxJavaSchedulersHook) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3177/buggy-version/spring-cloud-sleuth-core.src.main.java.org.springframework.cloud.sleuth.instrument.rxjava.SleuthRxJavaSchedulersHook.java", "BodyUseAPI": [], "Fixed commit": "2a16122aa79c42d6ecf5269cdbf4323c4d9a069c", "Url": "https://api.github.com/repos/shivangshah/spring-cloud-sleuth", "Date": "2016-04-01T14:56:18Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action instanceof org.springframework.cloud.sleuth.instrument.rxjava.SleuthRxJavaSchedulersHook.WrappedAction0) { return action; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3177/buggy-version/spring-cloud-sleuth-core.src.main.java.org.springframework.cloud.sleuth.instrument.rxjava.SleuthRxJavaSchedulersHook.java", "BodyUseAPI": [], "Fixed commit": "2a16122aa79c42d6ecf5269cdbf4323c4d9a069c", "Url": "https://api.github.com/repos/shivangshah/spring-cloud-sleuth", "Date": "2016-04-01T14:56:18Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wrappedAction instanceof org.springframework.cloud.sleuth.instrument.rxjava.SleuthRxJavaSchedulersHook.WrappedAction0) { return action; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3177/buggy-version/spring-cloud-sleuth-core.src.main.java.org.springframework.cloud.sleuth.instrument.rxjava.SleuthRxJavaSchedulersHook.java", "BodyUseAPI": [], "Fixed commit": "2a16122aa79c42d6ecf5269cdbf4323c4d9a069c", "Url": "https://api.github.com/repos/shivangshah/spring-cloud-sleuth", "Date": "2016-04-01T14:56:18Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (weightList.isEmpty()) { return weightList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3835/buggy-version/src.main.java.com.diettracker.webapp.service.impl.WeightServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "367ae329df98f9247b6586083ef2faf709fcb1f2", "Url": "https://api.github.com/repos/ogzhndgn/DietTracker", "Date": "2016-09-18T12:31:43Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (scheduleItemJsonObject.has(\"authors\")) { event_authors = scheduleItemJsonObject.getJSONArray(\"authors\").toString().replace(\"\\\"\", \"\").replace(\"[\", \"\").replace(\"]\", \"\"); android.util.Log.i(LOG_TAG, (\"Basic Event - Authors: \" + event_authors)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3069/buggy-version/Conference.src.com.g_node.gca.schedule.ScheduleJSONParse.java", "BodyUseAPI": ["scheduleItemJsonObject.getJSONArray(\"authors\").toString()", "scheduleItemJsonObject.getJSONArray(\"authors\").toString().replace(java.lang.String,java.lang.String)", "org.json.JSONObject.getJSONArray(java.lang.String)", "scheduleItemJsonObject.getJSONArray(\"authors\").toString().replace(\"\\\"\", \"\").replace(\"[\", \"\").replace(java.lang.String,java.lang.String)", "scheduleItemJsonObject.getJSONArray(\"authors\").toString().replace(\"\\\"\", \"\").replace(java.lang.String,java.lang.String)"], "Fixed commit": "0e371f2921394601588413516b2f9c4d179ed1af", "Url": "https://api.github.com/repos/G-Node/GCA-Android", "Date": "2016-08-02T13:02:13Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<net.atomarea.flowx.entities.Message>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (net.atomarea.flowx.ui.FxUiHelper.isMessageReceived(tMessage)) tRow = getLayoutInflater().inflate(R.layout.fx_msg_recv_image, mLayout, false); else tRow = getLayoutInflater().inflate(R.layout.fx_msg_sent_image, mLayout, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8941/buggy-version/src.main.java.net.atomarea.flowx.ui.FxUi.java", "BodyUseAPI": [], "Fixed commit": "f45cad6f24fdd0cdec6d7b2ed6297232ca688bf2", "Url": "https://api.github.com/repos/atomarea/FlowX", "Date": "2016-05-24T08:42:59Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<net.atomarea.flowx.entities.Message>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (net.atomarea.flowx.ui.FxUiHelper.isMessageReceived(tMessage)) tRow = getLayoutInflater().inflate(R.layout.fx_msg_recv_image, mLayout, false); else tRow = getLayoutInflater().inflate(R.layout.fx_msg_sent_image, mLayout, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8941/buggy-version/src.main.java.net.atomarea.flowx.ui.FxUi.java", "BodyUseAPI": [], "Fixed commit": "f45cad6f24fdd0cdec6d7b2ed6297232ca688bf2", "Url": "https://api.github.com/repos/atomarea/FlowX", "Date": "2016-05-24T08:42:59Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m.getType()) == (net.atomarea.flowx.entities.Message.TYPE_STATUS)) return false; else if ((m.getStatus()) <= (net.atomarea.flowx.entities.Message.STATUS_RECEIVED)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8941/buggy-version/src.main.java.net.atomarea.flowx.ui.FxUiHelper.java", "BodyUseAPI": ["net.atomarea.flowx.entities.Message.getStatus()"], "Fixed commit": "f45cad6f24fdd0cdec6d7b2ed6297232ca688bf2", "Url": "https://api.github.com/repos/atomarea/FlowX", "Date": "2016-05-24T08:42:59Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lastDot == (-1)) lastDot = moduleName.lastIndexOf(\".\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5691/buggy-version/compiler-java.src.com.redhat.ceylon.compiler.java.tools.MavenPomUtil.java", "BodyUseAPI": [], "Fixed commit": "75fb20975fd24c0b398e01b4fc070bdeb9af77f8", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2017-01-05T16:38:46Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter >= 4) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5142/buggy-version/src.com.company.Main.java", "BodyUseAPI": [], "Fixed commit": "aa88abe92c9fe316a85f970456d254343c2aa6e9", "Url": "https://api.github.com/repos/AlesiaKolbik/sameSignsToString", "Date": "2017-11-13T07:28:55Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (listOBuckets != null) { indexMechanism.recover(listOBuckets); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1328/buggy-version/src.indexmechanism.Logger.java", "BodyUseAPI": [], "Fixed commit": "e932613f4e429f20971ec4544778871a55f2e41f", "Url": "https://api.github.com/repos/nwlongnecker/CS542Project2", "Date": "2015-03-01T21:03:17Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.endsWith(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (doubleQuote) { doubleQuoted = null; }else { singleQuoted = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6341/buggy-version/src.main.java.io.novaordis.clad.option.OptionParser.java", "BodyUseAPI": [], "Fixed commit": "f649d9fd09efe453746ac1113d548b16cba35696", "Url": "https://api.github.com/repos/NovaOrdis/clad", "Date": "2016-01-30T07:19:30Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.isDirectory()) { file.mkdirs(); }else { file.createNewFile(); initLines(); initExceptionHistory(); initRepresenting(file); initInputStream(); initBuffer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8054/buggy-version/UtilsPlus.src.com.utilsplus.io.file.PFile.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.createNewFile()", "com.utilsplus.io.file.PFile.initRepresenting(java.io.File)"], "Fixed commit": "b18169a81f9718dc7820d21ffc21ebc111c6f89e", "Url": "https://api.github.com/repos/Thyaris/UtilsPlus", "Date": "2015-11-05T14:33:34Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.exists()) { log.info(com.amazonaws.services.glacier.TreeHashGenerator.calculateTreeHash(file)); }else { log.error(java.lang.String.format(\"File '%s' not found\", file.getAbsolutePath())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7338/buggy-version/src.main.java.de.kopis.glacier.commands.TreeHashArchiveCommand.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "java.io.File.getAbsolutePath()", "de.kopis.glacier.commands.TreeHashArchiveCommand.error(java.lang.String)", "com.amazonaws.services.glacier.TreeHashGenerator.calculateTreeHash(java.io.File)", "de.kopis.glacier.commands.TreeHashArchiveCommand.info(com.amazonaws.services.glacier.TreeHashGenerator.calculateTreeHash(file))"], "Fixed commit": "de3f8d4a696627d577756d3db6c28814a0af20be", "Url": "https://api.github.com/repos/MoriTanosuke/glacieruploader", "Date": "2013-01-16T20:17:09Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mMarkersHashMap.isEmpty()) plotMarkers(mMyMarkersArray, getActivity().getLayoutInflater(), null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4048/buggy-version/src.enst.infsi351.wassup.AcceuilFragment.java", "BodyUseAPI": [], "Fixed commit": "d8c7c8701917a297ac7793a87db29ede2d98f8f7", "Url": "https://api.github.com/repos/tdhman/wassup", "Date": "2015-04-19T21:28:13Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mMyMarkersArray.isEmpty()) initMarkers();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4048/buggy-version/src.enst.infsi351.wassup.AcceuilFragment.java", "BodyUseAPI": [], "Fixed commit": "d8c7c8701917a297ac7793a87db29ede2d98f8f7", "Url": "https://api.github.com/repos/tdhman/wassup", "Date": "2015-04-19T21:28:13Z"},
{"Line": "=>730", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index < 0) || (index >= (m_length))) { throw new java.lang.IndexOutOfBoundsException((((\"index=\" + index) + \", length=\") + (m_length))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5872/buggy-version/core.src.main.java.nl.weeaboo.lua2.vm.LuaString.java", "BodyUseAPI": [], "Fixed commit": "2934c1674772514b5f90b4ee08547c3b8ff66ac5", "Url": "https://api.github.com/repos/anonl/luajpp2", "Date": "2016-03-30T18:11:10Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["config.mqttTopics.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (topic != null) mqtt.publish(topic, (\"\" + val), 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7708/buggy-version/src.net.geekgrandad.plugin.IAMControl.java", "BodyUseAPI": ["net.geekgrandad.interfaces.MQTT.publish(java.lang.String,java.lang.String,int)"], "Fixed commit": "e3d238311534392d75795fbe2034377314d7fc5f", "Url": "https://api.github.com/repos/lawrie/HouseControl", "Date": "2015-09-02T17:14:21Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["get().getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files != null) { for (java.io.File file : files) { model.addElement(file); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5494/buggy-version/src.main.java.org.scijava.ui.swing.widget.SwingFileListWidget.java", "BodyUseAPI": [], "Fixed commit": "5d6768d5f727ff90282af76c6eac5eea3bf77d87", "Url": "https://api.github.com/repos/imagejan/scijava-ui-swing", "Date": "2017-07-19T08:17:52Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (req.method().equals(HttpMethod.OPTIONS)) { res.sendStatus(405); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4788/buggy-version/src.main.java.com.fedepot.mvc.middleware.CorsMiddleware.java", "BodyUseAPI": [], "Fixed commit": "00b7339985eba02b1c8e6236adf8b359675a7142", "Url": "https://api.github.com/repos/thundernet8/Razor", "Date": "2017-09-17T10:20:57Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentGameSession.getGameStatus()) == (edu.wpi.cs.wpisuitetng.modules.planningpoker.models.characteristics.GameStatus.DRAFT)) { newGameP.isNew = false; saveGameButton.setEnabled(true); }else if ((newGameP.getSelected().size()) > 0) { newGameP.isNew = false; saveGameButton.setEnabled(true); }else { saveGameButton.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2045/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.newgame.NewGameInputDistributedPanel.java", "BodyUseAPI": [], "Fixed commit": "a25a07e09edba6722da64542c888961a75373d68", "Url": "https://api.github.com/repos/pelferina/wpi-suite", "Date": "2014-05-04T05:04:19Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.conf.Configuration.get(MRJobConfig.MAP_JAVA_OPTS)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mapJavaOpts == null) { mapJavaOpts = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2/buggy-version/indexing-hadoop.src.main.java.io.druid.indexer.JobHelper.java", "BodyUseAPI": [], "Fixed commit": "a7b4838cde29ae3809964653a03c81021c711874", "Url": "https://api.github.com/repos/wywlds/druid", "Date": "2017-07-21T10:49:09Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.conf.Configuration.get(MRJobConfig.REDUCE_JAVA_OPTS)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (reduceJavaOpts == null) { reduceJavaOpts = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2/buggy-version/indexing-hadoop.src.main.java.io.druid.indexer.JobHelper.java", "BodyUseAPI": [], "Fixed commit": "a7b4838cde29ae3809964653a03c81021c711874", "Url": "https://api.github.com/repos/wywlds/druid", "Date": "2017-07-21T10:49:09Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((\"n/a\".equals(itemName)) || (\"-\".equals(itemName))) { itemName = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8016/buggy-version/DKPManager.src.gui.ManipulationPanel.java", "BodyUseAPI": [], "Fixed commit": "44c4e94f0f7880b7ace4c58aa2ee2c805235b80d", "Url": "https://api.github.com/repos/ltr120/DKPManager", "Date": "2015-02-08T00:36:04Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isSprintSet())) { repairMissingMaster(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2290/buggy-version/src.generated.java.scrum.server.sprint.GSprintDaySnapshot.java", "BodyUseAPI": [], "Fixed commit": "30a152f6aa9f2b1b7165ce8b4ddac69c45b94ff6", "Url": "https://api.github.com/repos/Kunagi/kunagi", "Date": "2011-02-13T22:01:00Z"},
{"Line": "=>862", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (s != null) { s.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7901/buggy-version/src.com.android.bluetooth.opp.BluetoothOppTransfer.java", "BodyUseAPI": ["android.bluetooth.BluetoothSocket.close()"], "Fixed commit": "1d8f9787852d162b4e427fd4e6bdd9a5ab4b2fcd", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Bluetooth", "Date": "2016-12-23T11:49:00Z"},
{"Line": "=>673", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.android.bluetooth.opp.BluetoothOppTransfer.V) android.util.Log.v(com.android.bluetooth.opp.BluetoothOppTransfer.TAG, \"connectRfcommSocket\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7901/buggy-version/src.com.android.bluetooth.opp.BluetoothOppTransfer.java", "BodyUseAPI": [], "Fixed commit": "1d8f9787852d162b4e427fd4e6bdd9a5ab4b2fcd", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Bluetooth", "Date": "2016-12-23T11:49:00Z"},
{"Line": "=>860", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.android.bluetooth.opp.BluetoothOppTransfer.V) android.util.Log.v(com.android.bluetooth.opp.BluetoothOppTransfer.TAG, (\"markConnectionFailed \" + s));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7901/buggy-version/src.com.android.bluetooth.opp.BluetoothOppTransfer.java", "BodyUseAPI": [], "Fixed commit": "1d8f9787852d162b4e427fd4e6bdd9a5ab4b2fcd", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Bluetooth", "Date": "2016-12-23T11:49:00Z"},
{"Line": "=>3653", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (listener != null) { listener.nodeMoved(oldNodeId, newNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2343/buggy-version/src.org.exist.xquery.XQueryContext.java", "BodyUseAPI": ["org.exist.storage.UpdateListener.nodeMoved(org.exist.numbering.NodeId,org.exist.dom.persistent.NodeHandle)"], "Fixed commit": "a12b91d971c398a5260b7c911241851caa9de9f5", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2015-12-08T13:22:12Z"},
{"Line": "=>691", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["social.entourage.android.api.model.Message.getContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((content.isTourRelated()) && ((feedItem.getType()) == (social.entourage.android.api.model.map.FeedItem.ENTOURAGE_CARD))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2935/buggy-version/app.src.main.java.social.entourage.android.map.tour.information.TourInformationFragment.java", "BodyUseAPI": [], "Fixed commit": "eaa844c52c304e047c1d77a1ecab0d994a08f229", "Url": "https://api.github.com/repos/ReseauEntourage/entourage-android", "Date": "2016-09-13T10:52:49Z"},
{"Line": "=>688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["social.entourage.android.api.model.Message.getContent()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (content == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2935/buggy-version/app.src.main.java.social.entourage.android.map.tour.information.TourInformationFragment.java", "BodyUseAPI": [], "Fixed commit": "eaa844c52c304e047c1d77a1ecab0d994a08f229", "Url": "https://api.github.com/repos/ReseauEntourage/entourage-android", "Date": "2016-09-13T10:52:49Z"},
{"Line": "=>739", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((feedItem.getAuthor()) != null) { tourAuthorName.setText(feedItem.getAuthor().getUserName()); java.lang.String avatarURLAsString = feedItem.getAuthor().getAvatarURLAsString(); if (avatarURLAsString != null) { com.squareup.picasso.Picasso.with(getContext()).load(android.net.Uri.parse(avatarURLAsString)).transform(new jp.wasabeef.picasso.transformations.CropCircleTransformation()).into(tourAuthorPhoto); } }else { tourAuthorName.setText(\"--\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2935/buggy-version/app.src.main.java.social.entourage.android.map.tour.information.TourInformationFragment.java", "BodyUseAPI": ["feedItem.getAuthor().getAvatarURLAsString()", "social.entourage.android.api.model.map.FeedItem.getAuthor()", "android.widget.TextView.setText(feedItem.getAuthor().getUserName())", "social.entourage.android.api.model.map.FeedItem.getAuthor()", "feedItem.getAuthor().getUserName()"], "Fixed commit": "eaa844c52c304e047c1d77a1ecab0d994a08f229", "Url": "https://api.github.com/repos/ReseauEntourage/entourage-android", "Date": "2016-09-13T10:52:49Z"},
{"Line": "=>694", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["social.entourage.android.api.model.Message.getContent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((content.isEntourageRelated()) && ((feedItem.getType()) == (social.entourage.android.api.model.map.FeedItem.TOUR_CARD))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2935/buggy-version/app.src.main.java.social.entourage.android.map.tour.information.TourInformationFragment.java", "BodyUseAPI": [], "Fixed commit": "eaa844c52c304e047c1d77a1ecab0d994a08f229", "Url": "https://api.github.com/repos/ReseauEntourage/entourage-android", "Date": "2016-09-13T10:52:49Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.exists()) org.apache.commons.io.FileUtils.cleanDirectory(path);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1971/buggy-version/src.main.java.com.forgeessentials.permissions.persistence.FlatfileProvider.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.cleanDirectory(java.io.File)"], "Fixed commit": "d2d3368571b847d9f6ccea4723cfb3639bcdbd5e", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2014-09-22T13:27:44Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (xmlPath)) { refresh(xmlPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4723/buggy-version/wizard-web.src.main.java.com.engagepoint.labs.wizard.controller.UINavigationBean.java", "BodyUseAPI": [], "Fixed commit": "4d9428f783c3370961813a1d7be746a8f619f413", "Url": "https://api.github.com/repos/engagepoint/labs-questionnaire-wizard", "Date": "2014-03-03T11:40:38Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sourceName == null) return project;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6986/buggy-version/src.eclipse.net.vtst.ow.eclipse.js.closure.src.net.vtst.ow.eclipse.js.closure.builder.ErrorManagerForProjectBuild.java", "BodyUseAPI": [], "Fixed commit": "6c31845fc169e035cab95862876d083dc7dd9291", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2012-06-10T17:09:05Z"},
{"Line": "=>757", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (string == null) throw new java.lang.NullPointerException(\"string\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/945/buggy-version/src.com.massivecraft.factions.engine.EngineMain.java", "BodyUseAPI": [], "Fixed commit": "95b530ec447332bb66563a0542a1b1ceb608a5b2", "Url": "https://api.github.com/repos/ulumulu1510/Factions", "Date": "2016-01-24T14:41:43Z"},
{"Line": "=>758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (faction == null) throw new java.lang.NullPointerException(\"faction\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/945/buggy-version/src.com.massivecraft.factions.engine.EngineMain.java", "BodyUseAPI": [], "Fixed commit": "95b530ec447332bb66563a0542a1b1ceb608a5b2", "Url": "https://api.github.com/repos/ulumulu1510/Factions", "Date": "2016-01-24T14:41:43Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.active) != true) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8426/buggy-version/src.main.java.io.dmalone.personalfinancier.model.Expense.java", "BodyUseAPI": [], "Fixed commit": "43febfc5eb9bfa2463579b4d884845c76a240676", "Url": "https://api.github.com/repos/dave-malone/spring-boot-personal-financier", "Date": "2015-12-11T16:53:40Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dayOfMonth == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8426/buggy-version/src.main.java.io.dmalone.personalfinancier.util.DateRange.java", "BodyUseAPI": [], "Fixed commit": "43febfc5eb9bfa2463579b4d884845c76a240676", "Url": "https://api.github.com/repos/dave-malone/spring-boot-personal-financier", "Date": "2015-12-11T16:53:40Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((kons.length) >= 1) { selection(kons[((kons.length) - 1)]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2974/buggy-version/ch.elexis.core.ui.src.ch.elexis.core.ui.views.PatHeuteView.java", "BodyUseAPI": ["ch.elexis.core.ui.views.PatHeuteView.selection(kons[((kons.length) - 1)])"], "Fixed commit": "c6a65f1565b0ab509a466954fbedf9e2a8357cfa", "Url": "https://api.github.com/repos/elexis/elexis-3-core", "Date": "2014-02-21T07:40:09Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(callbacks.isLoading())) && (!(callbacks.hasLoadedAllItems()))) { if ((wrapperAdapter) != null) { wrapperAdapter.displayFooterRow(true, false, false); } callbacks.onLoadMore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6228/buggy-version/paginate.src.main.java.com.paginate.recycler.RecyclerPaginate.java", "BodyUseAPI": ["com.paginate.recycler.Callbacks.onLoadMore()"], "Fixed commit": "901777f86b290334bffba553d8ea45f6bb5d0309", "Url": "https://api.github.com/repos/29995270/Paginate", "Date": "2016-07-05T02:39:20Z"},
{"Line": "=>1216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ee.ioc.cs.vsle.classeditor.PortGraphicsDialog.getSelectedValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (selection == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6395/buggy-version/src.main.java.ee.ioc.cs.vsle.classeditor.ClassEditor.java", "BodyUseAPI": [], "Fixed commit": "a28423056cc7742178fce0cb5ad5f1d5f84a0a30", "Url": "https://api.github.com/repos/CoCoViLa/CoCoViLa", "Date": "2015-07-07T11:22:31Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(bytesRefs.hasNext())) { return new org.apache.lucene.search.BooleanQuery.Builder().build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1177/buggy-version/sequence-trunk.src.java.org.apache.solr.search.xjoin.XJoinQParserPlugin.java", "BodyUseAPI": [], "Fixed commit": "ff141b8d21dad9af3d6ceb8ed4b74922740c319e", "Url": "https://api.github.com/repos/flaxsearch/BioSolr", "Date": "2015-07-07T11:01:23Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((b.y) > (a.y)) th1 = java.lang.Double.POSITIVE_INFINITY; else th1 = java.lang.Double.NEGATIVE_INFINITY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2061/buggy-version/src.geometry.Shape.java", "BodyUseAPI": [], "Fixed commit": "a241213ecae1b6fe14d9574cfb01be2ec2dd3218", "Url": "https://api.github.com/repos/moherren/Tropical-Put-Put", "Date": "2016-04-23T00:32:33Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["geometry.Vector2D.clone()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((a.x) != (p.x)) th2 = ((p.y) - (a.y)) / ((p.x) - (a.x)); else { if ((java.lang.Math.signum(((p.y) - (a.y)))) == (java.lang.Math.signum(th1))) return true; else return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2061/buggy-version/src.geometry.Shape.java", "BodyUseAPI": ["java.lang.Math.signum(((p.y) - (a.y)))"], "Fixed commit": "a241213ecae1b6fe14d9574cfb01be2ec2dd3218", "Url": "https://api.github.com/repos/moherren/Tropical-Put-Put", "Date": "2016-04-23T00:32:33Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cloudNumber == null) && (xdi2.core.util.XDI3Util.isCloudNumber(xri))) cloudNumber = xri;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6596/buggy-version/client.src.main.java.xdi2.discovery.XDIDiscoveryResult.java", "BodyUseAPI": [], "Fixed commit": "f78c42a9b0fcf79a3c486a387825a13c1104c238", "Url": "https://api.github.com/repos/projectdanube/xdi2", "Date": "2013-08-14T20:26:57Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (endIndex < (args.length)) args = removePortionOfArray(args, i, endIndex, build.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8476/buggy-version/src.main.java.com.sk89q.minecraft.util.commands.CommandContext.java", "BodyUseAPI": [], "Fixed commit": "56fd654eed226bcc4c788d8b34d9e100e333ea20", "Url": "https://api.github.com/repos/wizjany/worldedit", "Date": "2011-09-18T04:10:39Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (imabradley.peach.util.logging.ConsoleLog.logger.getPlugin().isEnabled()) { org.bukkit.Bukkit.getScheduler().runTaskAsynchronously(imabradley.peach.util.logging.ConsoleLog.logger.getPlugin(), () -> imabradley.peach.util.logging.ConsoleLog.logger.write(s)); }else { imabradley.peach.util.logging.ConsoleLog.logger.write(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3284/buggy-version/src.main.java.imabradley.peach.util.logging.ConsoleLog.java", "BodyUseAPI": ["org.bukkit.Bukkit.getScheduler().runTaskAsynchronously(imabradley.peach.util.logging.ConsoleLog.logger.getPlugin(),() -> imabradley.peach.util.logging.ConsoleLog.logger.write(s))", "imabradley.peach.util.logging.PluginLogger.getPlugin()", "imabradley.peach.util.logging.PluginLogger.write(java.lang.String)", "imabradley.peach.util.logging.PluginLogger.write(java.lang.String)"], "Fixed commit": "fb9d681980177582e664b8629e1ce050a885b532", "Url": "https://api.github.com/repos/ImABradley/Peach", "Date": "2017-09-23T12:05:17Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((missingLabels.get(i).size()) == 0) && ((falseAlarmLabels.get(i).size()) == 0)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/9178/buggy-version/FigureProcessing.eval.gov.nih.nlm.iti.figure.PanelSegEval.java", "BodyUseAPI": [], "Fixed commit": "39eea2b90d8975507be5aaf7e8664d0cbe002b49", "Url": "https://api.github.com/repos/JieZou1/FigureProcessing", "Date": "2016-04-25T20:52:37Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (effectType == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/222/buggy-version/src.main.java.me.elsiff.morefish.util.IdentityUtils.java", "BodyUseAPI": [], "Fixed commit": "56772efbb07ad6c09165c4195ad0aa77ce457059", "Url": "https://api.github.com/repos/elsiff/more-fish", "Date": "2017-06-20T10:07:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (matcher.group(org.jboss.narayana.txvis.logparsing.handlers.LOG_CLASS).equals(\"com.arjuna.ats.jtax\")) service.enlistResourceManagerByThreadID(matcher.group(org.jboss.narayana.txvis.logparsing.handlers.THREAD_ID), matcher.group(org.jboss.narayana.txvis.logparsing.handlers.RM_JNDI_NAME), matcher.group(org.jboss.narayana.txvis.logparsing.handlers.RM_PRODUCT_NAME), matcher.group(org.jboss.narayana.txvis.logparsing.handlers.RM_PRODUCT_VERSION), parseTimestamp(matcher.group(org.jboss.narayana.txvis.logparsing.handlers.TIMESTAMP)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4546/buggy-version/txvis-core.src.main.java.org.jboss.narayana.txvis.logparsing.handlers.TransactionImpleHandler.java", "BodyUseAPI": ["java.util.regex.Matcher.group(org.jboss.narayana.txvis.logparsing.handlers.THREAD_ID)", "java.util.regex.Matcher.group(org.jboss.narayana.txvis.logparsing.handlers.RM_JNDI_NAME)", "org.jboss.narayana.txvis.logparsing.handlers.TransactionImpleHandler.parseTimestamp(java.lang.String)", "java.util.regex.Matcher.group(org.jboss.narayana.txvis.logparsing.handlers.TIMESTAMP)", "java.util.regex.Matcher.group(org.jboss.narayana.txvis.logparsing.handlers.RM_PRODUCT_NAME)", "org.jboss.narayana.txvis.logparsing.handlers.TransactionImpleHandler.enlistResourceManagerByThreadID(java.lang.String,java.lang.String,java.lang.String,java.lang.String,parseTimestamp(matcher.group(org.jboss.narayana.txvis.logparsing.handlers.TIMESTAMP)))", "java.util.regex.Matcher.group(org.jboss.narayana.txvis.logparsing.handlers.RM_PRODUCT_VERSION)"], "Fixed commit": "7d84dccfa41e77107388a622c587b4dab23518a0", "Url": "https://api.github.com/repos/alexcreasy/txvis", "Date": "2013-06-23T19:33:07Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["engine.getModel().getErlangProject(org.eclipse.core.resources.IProject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (erlProject == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2686/buggy-version/org.erlide.model.src.org.erlide.engine.internal.model.BeamLocator.java", "BodyUseAPI": [], "Fixed commit": "882fe7e59fc07625e298cafda36d02c3e9549de4", "Url": "https://api.github.com/repos/vladdu/erlide", "Date": "2013-12-10T07:51:32Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.erlide.engine.ErlangEngine.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (engine == null) { org.erlide.util.ErlLogger.warn(\"Erlang engine was not created!\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2686/buggy-version/org.erlide.model.src.org.erlide.engine.internal.model.BeamLocator.java", "BodyUseAPI": [], "Fixed commit": "882fe7e59fc07625e298cafda36d02c3e9549de4", "Url": "https://api.github.com/repos/vladdu/erlide", "Date": "2013-12-10T07:51:32Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cjj.Util.limitValue(int,float)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (a >= 0.7) { mLineView.setVisibility(View.VISIBLE); }else { mLineView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7210/buggy-version/library.src.main.java.com.cjj.SunLayout.java", "BodyUseAPI": [], "Fixed commit": "f01a49dd85547d72fba4ee99dbf1d0a724e0d993", "Url": "https://api.github.com/repos/android-cjj/Android-MaterialRefreshLayout", "Date": "2016-02-25T00:46:38Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatchBuffer.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((match.getStatus()) == (com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch.MATCH_STATUS_COMPLETE)) { Games.TurnBasedMultiplayer.finishMatch(application.getGoogleApiClient(), match.getMatchId()); otherUserFinishedAMatch = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/704/buggy-version/app.src.main.java.de.appphil.categories.activities.TurnbasedMenuActivity.java", "BodyUseAPI": ["com.google.android.gms.games.multiplayer.turnbased.TurnBasedMatch.getMatchId()", "Games.TurnBasedMultiplayer.finishMatch(application.getGoogleApiClient(),match.getMatchId())"], "Fixed commit": "69aba2392a76ed8bac6851125b44d5bf5efd5248", "Url": "https://api.github.com/repos/PhilippDE/Categories", "Date": "2017-02-11T16:01:37Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (otherUserFinishedAMatch) { loadMatches(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/704/buggy-version/app.src.main.java.de.appphil.categories.activities.TurnbasedMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "69aba2392a76ed8bac6851125b44d5bf5efd5248", "Url": "https://api.github.com/repos/PhilippDE/Categories", "Date": "2017-02-11T16:01:37Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEditorOpen()) { oldContent = org.vaadin.patrik.client.EditorWidgets.getValue(getEditorWidgetForColumn(col)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8247/buggy-version/GridFastNavigation-addon.src.main.java.org.vaadin.patrik.client.EditorStateManager.java", "BodyUseAPI": [], "Fixed commit": "e182da8263651f5fafc51fcf33e46b3f154299df", "Url": "https://api.github.com/repos/bsutton/GridFastNavigation", "Date": "2017-08-02T10:13:55Z"},
{"Line": "=>711", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEditorOpen()) { newContent = org.vaadin.patrik.client.EditorWidgets.getValue(getCurrentEditorWidget()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8247/buggy-version/GridFastNavigation-addon.src.main.java.org.vaadin.patrik.client.EditorStateManager.java", "BodyUseAPI": [], "Fixed commit": "e182da8263651f5fafc51fcf33e46b3f154299df", "Url": "https://api.github.com/repos/bsutton/GridFastNavigation", "Date": "2017-08-02T10:13:55Z"},
{"Line": "=>695", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEditorOpen()) { oldContent = org.vaadin.patrik.client.EditorWidgets.getValue(getCurrentEditorWidget()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8247/buggy-version/GridFastNavigation-addon.src.main.java.org.vaadin.patrik.client.EditorStateManager.java", "BodyUseAPI": [], "Fixed commit": "e182da8263651f5fafc51fcf33e46b3f154299df", "Url": "https://api.github.com/repos/bsutton/GridFastNavigation", "Date": "2017-08-02T10:13:55Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getProfile().getPerson()) != (personalData.getProfileDto().getPerson())) { com.softserveinc.tender.entity.Address address = new com.softserveinc.tender.entity.Address(); com.softserveinc.tender.entity.Company company = new com.softserveinc.tender.entity.Company(); company.setAddress(addressService.save(address)); profile.setCompany(companyService.save(company)); profile.setPerson(personalData.getProfileDto().getPerson()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3429/buggy-version/src.main.java.com.softserveinc.tender.facade.impl.UserServiceFacadeImpl.java", "BodyUseAPI": ["com.softserveinc.tender.entity.Profile.setPerson(personalData.getProfileDto().getPerson())", "personalData.getProfileDto().getPerson()", "com.softserveinc.tender.dto.UserPersonalDataDto.getProfileDto()"], "Fixed commit": "93936b5bd00e28d69ee714c889b831d24c4ab0b8", "Url": "https://api.github.com/repos/if045/tender", "Date": "2014-07-11T15:20:00Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((input.index()) - (input.range())) < 2) { errors.add(errorMessageFactory.createDroolsException(e, input.LT((-1)))); }else { errors.add(errorMessageFactory.createDroolsException(e, input.LT(1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2752/buggy-version/drools-compiler.src.main.java.org.drools.compiler.lang.ParserHelper.java", "BodyUseAPI": ["org.drools.compiler.lang.DroolsParserExceptionFactory.createDroolsException(java.lang.Exception,input.LT((-1)))", "org.antlr.runtime.TokenStream.LT(int)", "java.util.List<org.drools.compiler.compiler.DroolsParserException>.add(errorMessageFactory.createDroolsException(e, input.LT((-1))))", "org.drools.compiler.lang.DroolsParserExceptionFactory.createDroolsException(java.lang.Exception,input.LT(1))", "org.antlr.runtime.TokenStream.LT(int)", "java.util.List<org.drools.compiler.compiler.DroolsParserException>.add(errorMessageFactory.createDroolsException(e, input.LT(1)))"], "Fixed commit": "266c4dcebb4e92939c945203abb176c5439cba87", "Url": "https://api.github.com/repos/ThomasLau/drools", "Date": "2015-09-17T01:12:35Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.targetView.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((event.getActionName().equals(getString(R.string.go_to_nap))) || (event.getActionName().equals(getString(R.string.go_to_nap)))) { java.util.Date wokeupDate = utils.ScheduleDatabase.getWakeUpDateFromSleepDate(event.getActionDate()); utils.ScheduleDatabase.deleteEntryBasedOnDate(wokeupDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/213/buggy-version/Android.src.fi.vincit.babyschedule.activities.AllEventsList.java", "BodyUseAPI": ["utils.ScheduleDatabase.getWakeUpDateFromSleepDate(event.getActionDate())", "utils.BabyEvent.getActionDate()"], "Fixed commit": "33a7187ca52fdb668ac95a319ca57831225f26b1", "Url": "https://api.github.com/repos/juhari/BabySchedule", "Date": "2011-09-10T09:37:24Z"},
{"Line": "=>2130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["grisu.model.job.JobDescription.getApplicationVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(applicationVersion)) { applicationVersion = grisu.jcommons.constants.Constants.NO_VERSION_INDICATOR_STRING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8224/buggy-version/grisu-core.src.main.java.grisu.backend.model.job.UserJobManager.java", "BodyUseAPI": [], "Fixed commit": "f6780be3309b4ca9e39e3c95bc0f3ff14cb811ad", "Url": "https://api.github.com/repos/sharayumungel/grisu", "Date": "2013-01-28T23:32:27Z"},
{"Line": "=>2126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["grisu.model.job.JobDescription.getApplication()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(applicationName)) { applicationName = grisu.jcommons.constants.Constants.GENERIC_APPLICATION_NAME; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8224/buggy-version/grisu-core.src.main.java.grisu.backend.model.job.UserJobManager.java", "BodyUseAPI": [], "Fixed commit": "f6780be3309b4ca9e39e3c95bc0f3ff14cb811ad", "Url": "https://api.github.com/repos/sharayumungel/grisu", "Date": "2013-01-28T23:32:27Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.stream.Stream<T>.findAny()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(sourceElement.isPresent())) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4318/buggy-version/src.main.java.com.github.liaochong.converter.core.BeanConverter.java", "BodyUseAPI": [], "Fixed commit": "ff8899735e6807394c3b53a2b75530a5490eb281", "Url": "https://api.github.com/repos/liaochong/spring-boot-starter-converter", "Date": "2017-12-02T03:56:28Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(m_joy.getSwitch(Config.btAllowEdit))) m_sAutonmousStatus = \"Can't Edit\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5153/buggy-version/src.auto.Autonomous.java", "BodyUseAPI": [], "Fixed commit": "7cb76897363faa332e763401c11ef5b0e6e20d69", "Url": "https://api.github.com/repos/FRC-Team-955/InputAutonomous", "Date": "2013-10-23T15:37:57Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((splitString.length) > 1) && (valueTextView != null)) { valueTextView.setText(splitString[1]); }else { valueTextView.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6368/buggy-version/src.org.openhab.habdroid.ui.OpenHABWidgetAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "f42e16adb0a29efb32b56eb36f4080b34dbf9bfd", "Url": "https://api.github.com/repos/openhab/openhab.android", "Date": "2012-07-13T11:05:18Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((k) == 0) return \"RR\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7425/buggy-version/src.ciir.umass.edu.metric.ReciprocalRankScorer.java", "BodyUseAPI": [], "Fixed commit": "cbb9ef717230c4e0aad1583ba013971c5f546167", "Url": "https://api.github.com/repos/jjfiv/ranklib-dev", "Date": "2016-01-01T20:03:02Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(classpath)) classpath = java.lang.System.getProperty(\"java.class.path\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3010/buggy-version/sopremo.sopremo-query.src.main.java.eu.stratosphere.sopremo.query.PackageManager.java", "BodyUseAPI": [], "Fixed commit": "0dc35002fd303744d6534b7f5303045c6fd17750", "Url": "https://api.github.com/repos/fatschi/ozone-meteor", "Date": "2013-08-09T11:01:38Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.isCommitted())) response.sendError(HttpServletResponse.SC_NOT_FOUND);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5897/buggy-version/wasp-file.src.main.java.edu.yu.einstein.wasp.file.web.controller.FileController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.sendError(HttpServletResponse.SC_NOT_FOUND)"], "Fixed commit": "1054ec4bea53297c1fbd761d4225d74c7bec73fe", "Url": "https://api.github.com/repos/WASP-System/central", "Date": "2014-11-25T22:22:26Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.isCommitted())) response.sendError(HttpServletResponse.SC_NOT_FOUND);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5897/buggy-version/wasp-file.src.main.java.edu.yu.einstein.wasp.file.web.controller.FileController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.sendError(HttpServletResponse.SC_NOT_FOUND)"], "Fixed commit": "1054ec4bea53297c1fbd761d4225d74c7bec73fe", "Url": "https://api.github.com/repos/WASP-System/central", "Date": "2014-11-25T22:22:26Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.isCommitted())) response.sendError(HttpServletResponse.SC_NOT_FOUND);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5897/buggy-version/wasp-file.src.main.java.edu.yu.einstein.wasp.file.web.controller.FileController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.sendError(HttpServletResponse.SC_NOT_FOUND)"], "Fixed commit": "1054ec4bea53297c1fbd761d4225d74c7bec73fe", "Url": "https://api.github.com/repos/WASP-System/central", "Date": "2014-11-25T22:22:26Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.isCommitted())) response.sendError(HttpServletResponse.SC_NOT_FOUND);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5897/buggy-version/wasp-file.src.main.java.edu.yu.einstein.wasp.file.web.controller.FileController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.sendError(HttpServletResponse.SC_NOT_FOUND)"], "Fixed commit": "1054ec4bea53297c1fbd761d4225d74c7bec73fe", "Url": "https://api.github.com/repos/WASP-System/central", "Date": "2014-11-25T22:22:26Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (res.getContents().isEmpty()) { throw new org.eclipse.emf.emfstore.common.model.util.SerializationException(\"Resource is empty after reading\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7269/buggy-version/org.eclipse.emf.emfstore.common.model.src.org.eclipse.emf.emfstore.common.model.util.ModelUtil.java", "BodyUseAPI": [], "Fixed commit": "7023e8558c4fa589ebe28b2d3d66d40ceedff0ff", "Url": "https://api.github.com/repos/dlitvinov/FastEMFStore.core", "Date": "2012-05-21T18:10:58Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentState) == null) { currentState = com.puresoltechnologies.statemodel.AbstractStateModel.getStartState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/10/buggy-version/statemodel.src.main.java.com.puresoltechnologies.statemodel.AbstractStateModel.java", "BodyUseAPI": [], "Fixed commit": "d8a571f6af86096f5776dbef2199a32a6a3e3213", "Url": "https://api.github.com/repos/PureSolTechnologies/graphs", "Date": "2015-01-20T22:07:08Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ApiServer.Resource.ScheduleResource.getListIntegerIntersection(java.util.List<java.lang.Integer>,java.util.List<java.lang.Integer>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(allowedIds.isEmpty())) { int id = allowedIds.get(getRandomIndex(allowedIds)); schedule.add(getRecipeById(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7103/buggy-version/src.main.java.ApiServer.Resource.ScheduleResource.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.get(getRandomIndex(allowedIds))", "ApiServer.Resource.ScheduleResource.getRandomIndex(java.util.List<java.lang.Integer>)"], "Fixed commit": "03e79daf4784c53cf5ccd4dbe6ad42510b041c30", "Url": "https://api.github.com/repos/ThomasMulder/dinnermanserver", "Date": "2016-04-09T08:52:14Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item instanceof com.mcmatica.entity.webui.model.BaseEntityModel) { this.getSelected().getFieldListItemsRemoved(childListName).add(((com.mcmatica.entity.webui.model.BaseEntityModel) (item))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6490/buggy-version/src.main.java.com.mcmatica.entity.webui.bean.BaseWebuiBean.java", "BodyUseAPI": [], "Fixed commit": "a497f00d672b3dc14c181de1bd6717d2cb06923e", "Url": "https://api.github.com/repos/ma-tica/entity.webui", "Date": "2017-07-21T23:26:12Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (duelArena == null) { duelArena = this.getFreeArena(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1721/buggy-version/Plugin.src.main.java.com.github.teozfrank.duelme.util.DuelManager.java", "BodyUseAPI": [], "Fixed commit": "59319f4ab5538e9f9fab8989bf3d44d70bdb21a9", "Url": "https://api.github.com/repos/teozfrank/DuelMe", "Date": "2016-12-23T00:08:47Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextSent.isEmpty()) { nextSent = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1314/buggy-version/src.edu.stanford.nlp.process.DocumentPreprocessor.java", "BodyUseAPI": [], "Fixed commit": "5e59d0f67723a8e71dea819026a4589565da8603", "Url": "https://api.github.com/repos/stanfordnlp/CoreNLP", "Date": "2016-01-03T21:34:17Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_session) != null) { _closeInProgress = true; _session.close(new org.eclipse.jetty.websocket.api.CloseStatus(org.eclipse.jetty.websocket.api.StatusCode.SHUTDOWN, \"Client shutting down.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8791/buggy-version/onebusaway-transit-data-federation.src.main.java.org.onebusaway.transit_data_federation.impl.realtime.gtfs_realtime.GtfsRealtimeFeedImpl.java", "BodyUseAPI": [], "Fixed commit": "7ce9acf0a837cac3ea5139253f2dbd50a92cb6d3", "Url": "https://api.github.com/repos/kurtraschke/onebusaway-application-modules", "Date": "2013-09-23T02:18:50Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.length()) > 15) return name.substring(0, 15);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3304/buggy-version/Proxy.src.au.com.addstar.bc.ColourTabList.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "b4aab62267b21f9a2b063155975b78646fb88e1e", "Url": "https://api.github.com/repos/Schmoller/BungeeChat", "Date": "2014-04-19T04:55:13Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fieldConfig != null) { int foreignKey = getId(fieldValue); statement.setForeignKey(fieldConfig.getReferenceColumnName(), foreignKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2505/buggy-version/melt-orm.src.main.java.com.melt.orm.session.UpdateExecutor.java", "BodyUseAPI": ["com.melt.orm.config.parser.FieldConfig.getReferenceColumnName()", "com.melt.orm.statement.UpdateStatement.setForeignKey(fieldConfig.getReferenceColumnName(),int)"], "Fixed commit": "5c74a888d9820a2844fa9cecb90cd8c2c76b7274", "Url": "https://api.github.com/repos/agiledon/melt", "Date": "2013-05-31T02:26:43Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (pageNo != null) { if ((msgIdList.size()) > ((java.lang.Integer.parseInt(pageNo)) * (java.lang.Integer.parseInt(per_page)))) { msgIdList = msgIdList.subList(0, java.lang.Integer.parseInt(per_page)); }else { msgIdList = msgIdList.subList(0, msgIdList.size()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/9114/buggy-version/src.com.dost.dao.MessageDAOImpl.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "b1fa7d13aa5b9a60565190fbbe7ef0a87d298cc7", "Url": "https://api.github.com/repos/timbaktu/dost_iitg", "Date": "2015-02-23T02:47:28Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (pageNo != null) { query.setFirstResult((((java.lang.Integer.parseInt(pageNo)) - 1) * (java.lang.Integer.parseInt(per_page)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/9114/buggy-version/src.com.dost.dao.MessageDAOImpl.java", "BodyUseAPI": ["org.hibernate.Query.setFirstResult(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "b1fa7d13aa5b9a60565190fbbe7ef0a87d298cc7", "Url": "https://api.github.com/repos/timbaktu/dost_iitg", "Date": "2015-02-23T02:47:28Z"},
{"Line": "=>730", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (exchange.hasOut()) { body = exchange.getOut().getBody(); }else { body = exchange.getIn().getBody(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7056/buggy-version/camel-core.src.main.java.org.apache.camel.processor.CamelInternalProcessor.java", "BodyUseAPI": ["org.apache.camel.Exchange.getIn()", "exchange.getOut().getBody()", "exchange.getIn().getBody()", "org.apache.camel.Exchange.getOut()"], "Fixed commit": "b323760152c76f60cc7a6a0c11a5e6ef0a5517f4", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-12-18T04:23:36Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kopdb.toast.Toast.checkTouchDown(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (touched) { draggingToast = toast; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6153/buggy-version/core.src.com.kopdb.toast.Input.ToastInputAdapter.java", "BodyUseAPI": [], "Fixed commit": "84e58fa5158f0aae7df753e19894bd6c494fd319", "Url": "https://api.github.com/repos/lucasdellabella/Toast", "Date": "2017-02-14T23:53:44Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((symbol) != null) code = java.lang.Integer.toHexString(symbol.getCode());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1611/buggy-version/src.microfont.gui.MSymbolView.java", "BodyUseAPI": [], "Fixed commit": "dd137444e1137889a4963891777dc921c0420e56", "Url": "https://api.github.com/repos/u-235/methodius", "Date": "2014-09-07T17:58:24Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (arguments == null) { throw new java.lang.IllegalArgumentException(\"One argument is expected\"); }else if ((arguments.size()) != 1) { throw new java.lang.IllegalArgumentException(((\"One argument was expected, \" + (arguments.size())) + \" were supplied\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7304/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionCeil.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "b2a53fe77b17c89d20a0cb38ebfd9420d1ca2fef", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-21T18:54:46Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.parser.DefaultJSONParser.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (objContext != null) { objContext.type = objectType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6839/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer.java", "BodyUseAPI": [], "Fixed commit": "ce6c3cd6cb10ebdd0d3f6dbb0c6ae1b2bd5ebfc3", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-12-05T15:45:04Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (terminatorServ.submit(term).isDone()) loggerStream.println(\"Killed\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6789/buggy-version/src.main.java.org.jenkinsci.plugins.vncrecorder.vncutil.VncRecorderCallable.java", "BodyUseAPI": [], "Fixed commit": "997727cf2e9249040520311f20074e767e72460d", "Url": "https://api.github.com/repos/jenkinsci/vncrecorder-plugin", "Date": "2016-08-22T23:13:07Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(outFileHtml.delete())) listener.error((\"Can't delete \" + (outFileHtml.getAbsolutePath())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6789/buggy-version/src.main.java.org.jenkinsci.plugins.vncrecorder.VncRecorderBuildWrapper.java", "BodyUseAPI": ["hudson.model.BuildListener.error(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "997727cf2e9249040520311f20074e767e72460d", "Url": "https://api.github.com/repos/jenkinsci/vncrecorder-plugin", "Date": "2016-08-22T23:13:07Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(outFileSwf.delete())) listener.error((\"Can't delete \" + (outFileSwf.getAbsolutePath())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6789/buggy-version/src.main.java.org.jenkinsci.plugins.vncrecorder.VncRecorderBuildWrapper.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "hudson.model.BuildListener.error(java.lang.String)"], "Fixed commit": "997727cf2e9249040520311f20074e767e72460d", "Url": "https://api.github.com/repos/jenkinsci/vncrecorder-plugin", "Date": "2016-08-22T23:13:07Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bytes == 0) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4681/buggy-version/core.src.main.java.org.dcache.nfs.vfs.Stat.java", "BodyUseAPI": [], "Fixed commit": "af5cd5fefeb8c620cd4f5ce191341862256f4199", "Url": "https://api.github.com/repos/radai-rosenblatt/jpnfs", "Date": "2014-09-11T09:50:18Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((infs == null) || ((infs.length) != 2)) { throw new java.lang.Exception((\"ERROR INFORMATION.\" + (java.util.Arrays.toString(infs)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7625/buggy-version/src.main.java.nat.Server2.java", "BodyUseAPI": ["java.util.Arrays.toString(java.lang.String[])"], "Fixed commit": "b90512298b42289d98d12b7d02645594a8553b5e", "Url": "https://api.github.com/repos/kc910521/tcpnat", "Date": "2016-12-13T10:10:22Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cs) != null) { java.lang.System.out.println(\"Resume the music\"); cs.resumeStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7859/buggy-version/AudioStreaming.src.main.java.client.AudioClient.java", "BodyUseAPI": [], "Fixed commit": "c1aec8542f89433974ba61ca8a19a6e2bb1215b2", "Url": "https://api.github.com/repos/pastorsj/pandora-clone", "Date": "2017-04-20T00:51:28Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cs) != null) { java.lang.System.out.println(\"Pausing stream\"); cs.pauseStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7859/buggy-version/AudioStreaming.src.main.java.client.AudioClient.java", "BodyUseAPI": [], "Fixed commit": "c1aec8542f89433974ba61ca8a19a6e2bb1215b2", "Url": "https://api.github.com/repos/pastorsj/pandora-clone", "Date": "2017-04-20T00:51:28Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config.isProtectSensitiveAssociations()) { throw new java.lang.RuntimeException(\"Not implemented!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3278/buggy-version/src.main.org.deidentifier.arx.ARXAnonymizer.java", "BodyUseAPI": [], "Fixed commit": "5a1455407236f1c5746a502b1896bc051e5d2e2f", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2013-08-19T10:33:41Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value == (-1)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/442/buggy-version/app.src.main.java.com.cmu.watchdog.nibbles.models.DatabaseHandler.java", "BodyUseAPI": [], "Fixed commit": "302e68e3b1903d152967623350c99fc440589f69", "Url": "https://api.github.com/repos/ksjung/Nibbles", "Date": "2016-04-30T22:04:37Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_isRichi)) { _gameServer.callRichi(_playerId, richiTile); _isRichi = true; return true; }else { discard(richiTile); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8744/buggy-version/SmartBirdEngine.src.main.org.smartbirdpj.server.player.AbstractGamePlayer.java", "BodyUseAPI": [], "Fixed commit": "b7d540f11cf14fdea261ceab645004f7bd0566b1", "Url": "https://api.github.com/repos/kentan/SilverBird", "Date": "2014-08-12T05:41:27Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((calledPhone.trim().length()) > 0) { addCall(calledPhone, callDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6955/buggy-version/src.ru.jdev.qd.model.ContactInfoDao.java", "BodyUseAPI": ["ru.jdev.qd.model.ContactInfoDao.addCall(java.lang.String,long)"], "Fixed commit": "a6992612f0b3bdc05efa8054ed352c0741862a37", "Url": "https://api.github.com/repos/aleksey-zhidkov/QuickDialer", "Date": "2013-11-26T15:19:10Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.firebase.client.DataSnapshot.getValue(com.firebase.client.GenericTypeIndicator<java.util.HashMap<java.lang.String, com.firebase.androidchat.bean.Channel>>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (map == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/943/buggy-version/app.src.main.java.com.firebase.androidchat.activity.ChannelActivity.java", "BodyUseAPI": [], "Fixed commit": "7ff92d3b2f481db3f9c069f4e75d2a85e1616100", "Url": "https://api.github.com/repos/BitTigerInst/AndroidChat", "Date": "2016-02-17T19:10:32Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (swipeOpenOnLongPress) { if ((downPosition) >= 0) { openAnimate(childPosition); } }else { swapChoiceState(childPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7334/buggy-version/swipelistview.src.main.java.com.fortysevendeg.swipelistview.SwipeListViewTouchListener.java", "BodyUseAPI": [], "Fixed commit": "d1a1c51e4392cd48cccf1654502d87d032020fab", "Url": "https://api.github.com/repos/diegomadruga/android-swipelistview", "Date": "2014-08-28T15:58:31Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sets.isEmpty()) sets.add(new core.SetProperty(\"keine\", \"S\ufffdtze\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3279/buggy-version/untitled_0815_neu.src.core.GameController.java", "BodyUseAPI": ["javafx.collections.ObservableList<core.SetProperty>.add(core.SetProperty)"], "Fixed commit": "33c5297d310628d59bb70573e9f68e988ea0c3f4", "Url": "https://api.github.com/repos/Frameset91/untitled0815", "Date": "2012-11-01T15:07:51Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["module.mission.domain.Mission.getMissionProcess()", "module.mission.domain.MissionProcess.getActivity(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (activity.isActive(missionProcess)) { activity.execute(activityInfo); }else { noLongerActiveItems.add(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4542/buggy-version/expenditure-tracking.src.main.java.module.mission.domain.MissionSystem.java", "BodyUseAPI": ["module.mission.domain.activity.AuthorizeVehicleItemActivity.execute(module.mission.domain.activity.ItemActivityInformation)"], "Fixed commit": "72924ea5c0ccfa1761f6f08c1493374ead2979ae", "Url": "https://api.github.com/repos/ist-dsi/expenditures", "Date": "2015-02-02T23:40:29Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6781/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "cece28a0dc9a522ef010db1e37344fee5118ad63", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6781/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "cece28a0dc9a522ef010db1e37344fee5118ad63", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((++(slotIndex)) >= (inventory.length)) slotIndex = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6166/buggy-version/src.main.java.com.bluepowermod.tileentities.tier2.TileRetriever.java", "BodyUseAPI": [], "Fixed commit": "71f92b4d1f31101b39b997a2be6f91b1ef6f58da", "Url": "https://api.github.com/repos/Qmunity/BluePower", "Date": "2014-08-25T08:48:53Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (other == null) return false; else if ((other.address) == (this.address)) return true; else return equals(other, 0.0F);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/998/buggy-version/be.iminds.iot.dianne.tensor.src.be.iminds.iot.dianne.tensor.Tensor.java", "BodyUseAPI": ["be.iminds.iot.dianne.tensor.Tensor.equals(be.iminds.iot.dianne.tensor.Tensor,float)"], "Fixed commit": "08cf6c07e84aee76bbf72a27a6e051b73b5ffab7", "Url": "https://api.github.com/repos/ibcn-cloudlet/dianne", "Date": "2016-09-17T16:25:22Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other == null) return false; else if (!(other instanceof be.iminds.iot.dianne.tensor.Tensor)) return false; else return equals(((be.iminds.iot.dianne.tensor.Tensor) (other)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/998/buggy-version/be.iminds.iot.dianne.tensor.src.be.iminds.iot.dianne.tensor.Tensor.java", "BodyUseAPI": [], "Fixed commit": "08cf6c07e84aee76bbf72a27a6e051b73b5ffab7", "Url": "https://api.github.com/repos/ibcn-cloudlet/dianne", "Date": "2016-09-17T16:25:22Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((agreementRequest.getAgreement().getAction()) == null) agreementRequest.getAgreement().setAction(Action.CREATE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8536/buggy-version/lams.lams-services.src.main.java.org.egov.lams.web.validator.AgreementValidator.java", "BodyUseAPI": ["org.egov.lams.web.contract.AgreementRequest.getAgreement()", "agreementRequest.getAgreement().setAction(Action.CREATE)"], "Fixed commit": "3fbc42cac21328d87b5155858122997d8fb457c1", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-06-08T17:39:29Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((section.get()) instanceof de.knowwe.kdom.defaultMarkup.DefaultMarkupType) { renderMessages(section, content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4573/buggy-version/KnowWE-Essentials.KnowWE-core.src.main.java.de.knowwe.kdom.defaultMarkup.DefaultMarkupRenderer.java", "BodyUseAPI": ["de.knowwe.kdom.defaultMarkup.DefaultMarkupRenderer.renderMessages(de.knowwe.core.kdom.parsing.Section<?>,de.knowwe.core.kdom.rendering.RenderResult)"], "Fixed commit": "68a352069d89b353b0e9d47b8d1b287cb160b7f1", "Url": "https://api.github.com/repos/denkbares/d3web-KnowWE", "Date": "2016-06-24T09:59:15Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Class<? extends org.primeframework.mvc.content.ContentHandler>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((handlerType == null) && (contentType != null)) { int index = contentType.indexOf(';'); if (index > 0) { contentType = contentType.substring(0, index); } handlerType = org.primeframework.mvc.content.guice.ContentHandlerFactory.bindings.get(contentType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4328/buggy-version/src.main.java.org.primeframework.mvc.content.guice.ContentHandlerFactory.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)"], "Fixed commit": "a9d591c7bc05d91721c156a11769d45ead663672", "Url": "https://api.github.com/repos/prime-framework/prime-mvc", "Date": "2014-04-17T23:48:31Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedNode) != null) { if ((selectedNode) instanceof micronet.tools.model.nodes.EntityTemplateRootNode) { manager.add(createTemplateAction); }else if ((selectedNode) instanceof micronet.tools.model.nodes.EnumRootNode) { manager.add(createEnumAction); }else if ((selectedNode) instanceof micronet.tools.model.nodes.PrefabRootNode) { manager.add(createPrefabAction); }else if ((selectedNode) instanceof micronet.tools.model.nodes.EntityTemplateNode) { action = new micronet.tools.ui.modelview.actions.TemplateRemoveAction(viewer.getControl().getShell(), ((micronet.tools.model.nodes.EntityTemplateNode) (selectedNode))); action.setRefreshViewerAction(refreshViewerAction, true); manager.add(action); action = new micronet.tools.ui.modelview.actions.TemplateCreateAction(viewer.getControl().getShell(), ((micronet.tools.model.nodes.EntityTemplateNode) (selectedNode))); action.setText(\"Add Derived Template\"); action.setRefreshViewerAction(refreshViewerAction, false); manager.add(action); action = new micronet.tools.ui.modelview.actions.TemplateVariableCreateAction(viewer.getControl().getShell(), ((micronet.tools.model.nodes.EntityTemplateNode) (selectedNode))); action.setRefreshViewerAction(refreshViewerAction, true); manager.add(action); }else if ((selectedNode) instanceof micronet.tools.model.nodes.PrefabNode) { action = new micronet.tools.ui.modelview.actions.PrefabCreateAction(viewer.getControl().getShell(), ((micronet.tools.model.nodes.PrefabNode) (selectedNode))); action.setRefreshViewerAction(refreshViewerAction, false); manager.add(action); action = new micronet.tools.ui.modelview.actions.PrefabRemoveAction(viewer.getControl().getShell(), ((micronet.tools.model.nodes.PrefabNode) (selectedNode))); action.setRefreshViewerAction(refreshViewerAction, false); manager.add(action); }else if ((selectedNode) instanceof micronet.tools.model.nodes.EnumNode) { action = new micronet.tools.ui.modelview.actions.EnumRemoveAction(viewer.getControl().getShell(), ((micronet.tools.model.nodes.EnumNode) (selectedNode))); action.setRefreshViewerAction(refreshViewerAction, true); manager.add(action); }else if ((selectedNode) instanceof micronet.tools.model.nodes.EntityVariableNode) { action = new micronet.tools.ui.modelview.actions.TemplateVariableRemoveAction(viewer.getControl().getShell(), ((micronet.tools.model.nodes.EntityVariableNode) (selectedNode))); action.setRefreshViewerAction(refreshViewerAction, true); manager.add(action); }else if ((selectedNode) instanceof micronet.tools.model.nodes.PrefabVariableNode) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4692/buggy-version/MicroNet.Tools.UI.ModelView.src.micronet.tools.ui.modelview.views.ModelView.java", "BodyUseAPI": [], "Fixed commit": "05b90076404b3f105e1c931cebdc27b9c8a52c54", "Url": "https://api.github.com/repos/MrHaribo/MicroNet.Tools", "Date": "2017-06-13T09:43:32Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (comparison != 0) return comparison;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4692/buggy-version/MicroNet.Tools.Processors.src.main.java.micronet.tools.filesync.SyncPrefabTree.java", "BodyUseAPI": [], "Fixed commit": "05b90076404b3f105e1c931cebdc27b9c8a52c54", "Url": "https://api.github.com/repos/MrHaribo/MicroNet.Tools", "Date": "2017-06-13T09:43:32Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (seen_floor) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1876/buggy-version/tamer-share.src.ataa2014.StateRepresentation.java", "BodyUseAPI": [], "Fixed commit": "4a8a70a5918a80cc222e289dd0b222c236d40eb9", "Url": "https://api.github.com/repos/josago/ATAA2014", "Date": "2014-03-14T15:28:59Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((permission) != null) com.wolvencraft.prison.mines.util.Message.log(java.util.logging.Level.SEVERE, (\"hasPermission = \" + (com.wolvencraft.prison.mines.CommandManager.sender.hasPermission(permission))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5230/buggy-version/src.com.wolvencraft.prison.mines.CommandManager.java", "BodyUseAPI": [], "Fixed commit": "05d62dae0884161c1c819f01e4659a79871978f1", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2013-03-19T03:47:37Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((osName != null) && ((osName.indexOf(\"mac\")) > (-1))) { tipText = \"Find (\u2318F)\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5597/buggy-version/src.main.java.org.apache.zookeeper.inspector.gui.nodeviewer.NodeViewerData.java", "BodyUseAPI": [], "Fixed commit": "e66c78481d3ba7ef9825f780ae28552302ef4935", "Url": "https://api.github.com/repos/zzhang5/zooinspector", "Date": "2015-04-08T17:09:56Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eligible) == true) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2129/buggy-version/3716Project.src.project.memberRole.java", "BodyUseAPI": [], "Fixed commit": "d1cb264d59975dbc590c8e624354b68f40699a0a", "Url": "https://api.github.com/repos/lrc374/3716-Project", "Date": "2015-12-04T17:57:52Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (values.isEmpty()) { return values; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1503/buggy-version/de.bund.bfr.knime.gis.src.de.bund.bfr.knime.gis.views.canvas.highlighting.ValueHighlightCondition.java", "BodyUseAPI": [], "Fixed commit": "3efc0c10753f1527736a0d3971b344d5fb201c63", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2014-10-10T12:07:12Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keyCode < 256) { keys[keyCode] = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6689/buggy-version/platformer.src.j15r.xna.platformer.core.KeyboardState.java", "BodyUseAPI": [], "Fixed commit": "12e4da90b18ef5cb6412bc51e6f63dace7879c09", "Url": "https://api.github.com/repos/joelgwebber/xna-platformer", "Date": "2011-07-02T01:17:04Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keyCode < 256) { keys[keyCode] = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6689/buggy-version/platformer.src.j15r.xna.platformer.core.KeyboardState.java", "BodyUseAPI": [], "Fixed commit": "12e4da90b18ef5cb6412bc51e6f63dace7879c09", "Url": "https://api.github.com/repos/joelgwebber/xna-platformer", "Date": "2011-07-02T01:17:04Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Object, com.intellij.ui.treeStructure.filtered.FilteringTreeStructure.FilteringNode>.containsKey(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!isDuplicate) { myDescriptors2Nodes.put(d, n); nodes.add(n); addToCache(n, isDuplicate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4861/buggy-version/platform.platform-api.src.com.intellij.ui.treeStructure.filtered.FilteringTreeStructure.java", "BodyUseAPI": ["com.intellij.ui.treeStructure.filtered.FilteringTreeStructure.addToCache(com.intellij.ui.treeStructure.filtered.FilteringTreeStructure.FilteringNode,boolean)"], "Fixed commit": "3130b03032515cccf057479dd90a992a674f2084", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2012-03-19T18:47:19Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((player1) == null) || ((player2) == null)) return capstat.model.match.Match.Player.ONE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2182/buggy-version/src.main.java.capstat.model.match.Match.java", "BodyUseAPI": [], "Fixed commit": "f5366029e5ba9ec4e344ee7df1737bc494b203b1", "Url": "https://api.github.com/repos/hjorthjort/CapStat", "Date": "2015-05-29T16:54:02Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((warningList.getSelectedValue()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6123/buggy-version/KalenderProsjekt.src.framePackage.NotiPanelView.java", "BodyUseAPI": [], "Fixed commit": "75ff93a2513ba6476edcc7949ab7efdc0f899ae4", "Url": "https://api.github.com/repos/Daveiac/FProj_Gruppe48", "Date": "2013-03-20T18:03:51Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rameses.osiris2.PageFlowInstance.findTransition(com.rameses.osiris2.flow.AbstractNode,java.lang.String,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (t == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8401/buggy-version/osiris2-framework.src.com.rameses.osiris2.PageFlowInstance.java", "BodyUseAPI": [], "Fixed commit": "f669f737281faf4b8147e65c536e535b90e2c8a1", "Url": "https://api.github.com/repos/ramesesinc/incubation", "Date": "2016-06-23T01:57:03Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(workingChord.isEmpty())) && (!(workingChord.equals(\"\")))) { CustomChord_Buttons.addView(chordvalue); CustomChord_Buttons.addView(deleteChord); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8096/buggy-version/app.src.main.java.com.garethevans.church.opensongtablet.CustomChord.java", "BodyUseAPI": [], "Fixed commit": "4cc1b7744eade02276274aa61817495d917531fa", "Url": "https://api.github.com/repos/thebigg73/OpenSongTablet", "Date": "2015-04-30T18:03:54Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getGameState().getMe()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((currentHero.getLife()) > 20) && ((currentHero.getLife()) > (me.getLife()))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7117/buggy-version/src.main.java.com.brianstempin.vindiniumclient.bot.advanced.murderbot.BotTargetingDecisioner.java", "BodyUseAPI": [], "Fixed commit": "2a4afd6b01d863690167de70f779f16fc119b8e8", "Url": "https://api.github.com/repos/bstempi/vindinium-client", "Date": "2014-10-12T04:52:33Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentHero.getPos().equals(currentHero.getSpawnPos())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7117/buggy-version/src.main.java.com.brianstempin.vindiniumclient.bot.advanced.murderbot.BotTargetingDecisioner.java", "BodyUseAPI": [], "Fixed commit": "2a4afd6b01d863690167de70f779f16fc119b8e8", "Url": "https://api.github.com/repos/bstempi/vindinium-client", "Date": "2014-10-12T04:52:33Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.rokru.experiment_x.ExperimentX.debug) { Logger.playerLogger.logInfo(((((((((\"Block @ (\" + (tileX)) + \", \") + (tileY)) + \"): \") + (level.getTile(tileX, tileY).getFormattedTileName())) + \" (id = \") + (level.getTile(tileX, tileY).getTileID())) + \")\")); com.rokru.experiment_x.ExperimentX.setCurrentTile(level.getTile(tileX, tileY)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3870/buggy-version/src.com.rokru.experiment_x.entity.mob.Player.java", "BodyUseAPI": [], "Fixed commit": "661e368c0603918a432a207d618d1242fcc49e9e", "Url": "https://api.github.com/repos/coolawesomeme/Experiment-X", "Date": "2014-09-13T19:41:24Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getWhoClicked()) instanceof org.bukkit.entity.Player) { org.bukkit.entity.Player p = ((org.bukkit.entity.Player) (e.getWhoClicked())); if (((e.getCurrentItem()) != null) && ((e.getCurrentItem().getType()) == (org.bukkit.Material.EMERALD))) { e.setCancelled(true); p.updateInventory(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2924/buggy-version/src.me.mcplayhd.spellwar.listeners.PlayerListener.java", "BodyUseAPI": ["org.bukkit.event.inventory.InventoryClickEvent.getCurrentItem()", "e.getCurrentItem().getType()", "org.bukkit.event.inventory.InventoryClickEvent.getWhoClicked()", "org.bukkit.event.inventory.InventoryClickEvent.setCancelled(boolean)", "org.bukkit.event.inventory.InventoryClickEvent.getCurrentItem()"], "Fixed commit": "850b787a2e8226eef300d313f949cda3bdc23a55", "Url": "https://api.github.com/repos/McPlayHD/DevAthlon3", "Date": "2016-07-16T17:52:15Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((invocation.op) instanceof com.hazelcast.spi.BackupAwareOperation) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3549/buggy-version/hazelcast.src.main.java.com.hazelcast.spi.impl.operationservice.impl.CallIdSequence.java", "BodyUseAPI": [], "Fixed commit": "1bb1b5a9463c231688985a1ecfa0dbade20e6e31", "Url": "https://api.github.com/repos/pveentjer/hazelcast", "Date": "2016-03-22T21:20:57Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (invocation.remote) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3549/buggy-version/hazelcast.src.main.java.com.hazelcast.spi.impl.operationservice.impl.CallIdSequence.java", "BodyUseAPI": [], "Fixed commit": "1bb1b5a9463c231688985a1ecfa0dbade20e6e31", "Url": "https://api.github.com/repos/pveentjer/hazelcast", "Date": "2016-03-22T21:20:57Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.ifmo.ctddev.swapyourbook.dao.BookDAO.getUserOffer(int)", "ru.ifmo.ctddev.swapyourbook.controller.BookController.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((book != null) && (user.getUserid().equals(book.getOwner()))) { mav = new org.springframework.web.servlet.ModelAndView(\"book/book_edit.jsp\"); mav.addObject(\"book\", book); }else { mav = new org.springframework.web.servlet.ModelAndView(\"redirect:/user\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5878/buggy-version/src.ru.ifmo.ctddev.swapyourbook.controller.BookController.java", "BodyUseAPI": ["org.springframework.web.servlet.ModelAndView.addObject(java.lang.String,ru.ifmo.ctddev.swapyourbook.mybatis.gen.model.UserOffer)"], "Fixed commit": "d7085f386a6ac4aada6e5970e52a30d23b95b551", "Url": "https://api.github.com/repos/isae/SwapYourBook", "Date": "2015-01-13T10:29:56Z"},
{"Line": "=>2495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sessionFactory.getCurrentSession().createCriteria(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(targets.list().isEmpty())) { return ((com.hel.iltz.model.transactionTarget) (targets.list().get(0))); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5170/buggy-version/src.main.java.com.hel.iltz.dao.impl.transactionOutDAOImpl.java", "BodyUseAPI": ["org.hibernate.Criteria.list()", "targets.list().get(int)"], "Fixed commit": "729402ba051101da63c84ea8ce99556512668a5f", "Url": "https://api.github.com/repos/bowlinktech/ILTZ", "Date": "2017-12-12T20:26:46Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.getDrops().isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/4544/buggy-version/src.com.me.tft_02.soulbound.hooks.EpicBossRecodedListener.java", "BodyUseAPI": [], "Fixed commit": "45e6502c8b7bc468c7b9dcb425fea6f8b7e22e51", "Url": "https://api.github.com/repos/TfT-02/Soulbound", "Date": "2013-03-13T14:38:16Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(userResourceCenterStorageFile.getParentFile().canWrite())) { userResourceCenterStorageFile = new java.io.File(java.lang.System.getProperty(\"user.home\"), \"FlexoUserResourceCenter/ResourceCenterData.xml\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7957/buggy-version/flexodesktop.model.flexofoundation.src.main.java.org.openflexo.foundation.resource.DefaultResourceCenterService.java", "BodyUseAPI": [], "Fixed commit": "1d1c6fbbe5b288f291177028123d948d232d1b6b", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-02-15T18:55:41Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getEngine()) != null) { entity.attached(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3934/buggy-version/src.main.java.org.achtern.AchternEngine.core.scenegraph.Node.java", "BodyUseAPI": [], "Fixed commit": "6d9e7fd3e5e12d08ceb3bf6fa73e4a9a5426f306", "Url": "https://api.github.com/repos/achtern/AchternEngine", "Date": "2015-07-24T15:55:44Z"},
{"Line": "=>1066", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ids.contains(parts.nodeId()))) changed |= ids.add(parts.nodeId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8433/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.distributed.dht.GridDhtPartitionTopologyImpl.java", "BodyUseAPI": ["java.util.List<java.util.UUID>.add(parts.nodeId())", "org.apache.ignite.internal.processors.cache.distributed.dht.preloader.GridDhtPartitionMap2.nodeId()"], "Fixed commit": "0ac0574512fc7758169f2a7f638c347418d7980f", "Url": "https://api.github.com/repos/ilantukh/ignite", "Date": "2016-02-25T08:12:06Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getBucket()) == (org.bukkit.Material.LAVA_BUCKET)) { event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/774/buggy-version/src.com.mrmag518.iSafe.Events.EntityEvents.PlayerListener.java", "BodyUseAPI": ["com.mrmag518.iSafe.Events.EntityEvents.PlayerBucketEmptyEvent.setCancelled(boolean)"], "Fixed commit": "12128be25944e4192d113bb3bcb26d202f81ad61", "Url": "https://api.github.com/repos/mrmag518/iSafe", "Date": "2012-08-30T18:01:29Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getBucket()) == (org.bukkit.Material.WATER_BUCKET)) { event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/774/buggy-version/src.com.mrmag518.iSafe.Events.EntityEvents.PlayerListener.java", "BodyUseAPI": ["com.mrmag518.iSafe.Events.EntityEvents.PlayerBucketEmptyEvent.setCancelled(boolean)"], "Fixed commit": "12128be25944e4192d113bb3bcb26d202f81ad61", "Url": "https://api.github.com/repos/mrmag518/iSafe", "Date": "2012-08-30T18:01:29Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (category.endsWith(\"\\\\\")) category = category.substring(0, ((category.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6352/buggy-version/olca-simapro-csv.src.main.java.org.openlca.simapro.csv.parser.FlowParser.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "7ceb985167b9c7d1f4c21687271530c7da855f96", "Url": "https://api.github.com/repos/GreenDelta/olca-modules", "Date": "2014-01-09T10:55:02Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<seedu.task.model.task.Task>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (userTask.toString().equals(userTask.getUndoFormatString())) { previousActionUndoString = (userAction + \" \") + (userTask.getUndoFormatString()); }else { previousActionUndoString = (((userAction + \" \") + (userTask.getName())) + \" \") + (userTask.getUndoFormatString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7305/buggy-version/src.main.java.seedu.task.model.UndoTaskStack.java", "BodyUseAPI": ["seedu.task.model.task.Task.getUndoFormatString()", "seedu.task.model.task.Task.getUndoFormatString()", "seedu.task.model.task.Task.getName()"], "Fixed commit": "c5a2fbf3924f8ea3ec1e26f7d8f06f4e474bc76b", "Url": "https://api.github.com/repos/CS2103AUG2016-T13-C1/main", "Date": "2016-11-02T10:39:11Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsat.classifiers.trees.DecisionStump.trainR(dataSet.getDPPList(),java.util.Set<java.lang.Integer>,java.util.concurrent.ExecutorService)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (split == null) throw new jsat.exceptions.FailedToFitException(\"Tree could not be fit, make sure your data is good. Potentially file a bug\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6819/buggy-version/JSAT.src.jsat.classifiers.trees.DecisionStump.java", "BodyUseAPI": [], "Fixed commit": "2cdefd36374f89607f0764ecc215520ba745e1ed", "Url": "https://api.github.com/repos/EdwardRaff/JSAT", "Date": "2016-07-05T01:29:49Z"},
{"Line": "=>917", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(thisSplitSqrdErr)) < 1.0E-13) thisSplitSqrdErr = java.lang.Math.abs(thisSplitSqrdErr);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6819/buggy-version/JSAT.src.jsat.classifiers.trees.DecisionStump.java", "BodyUseAPI": ["java.lang.Math.abs(double)"], "Fixed commit": "2cdefd36374f89607f0764ecc215520ba745e1ed", "Url": "https://api.github.com/repos/EdwardRaff/JSAT", "Date": "2016-07-05T01:29:49Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<negotiator.bidding.BidDetails>.size()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (size > 0) best = randBid.get(randgen.nextInt(size)); else best = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/9014/buggy-version/NegotiationAgent.src.negotiator.group7.phases.Phase3.java", "BodyUseAPI": ["java.util.Random.nextInt(int)", "java.util.List<negotiator.bidding.BidDetails>.get(int)"], "Fixed commit": "c953bc74e55794829f9b5a7a239c429baa986dac", "Url": "https://api.github.com/repos/tomrunia/negotiation-project", "Date": "2014-02-03T21:17:55Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.broadleafcommerce.common.web.BroadleafRequestContext.getBroadleafRequestContext()) == null) { org.broadleafcommerce.common.web.BroadleafRequestContext brc = new org.broadleafcommerce.common.web.BroadleafRequestContext(); brc.setIgnoreSite(true); org.broadleafcommerce.common.web.BroadleafRequestContext.setBroadleafRequestContext(brc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6694/buggy-version/admin.broadleaf-open-admin-platform.src.main.java.org.broadleafcommerce.openadmin.web.rulebuilder.service.AbstractRuleBuilderFieldService.java", "BodyUseAPI": [], "Fixed commit": "a0f7ab44a3f55360a224c67e0e86c44a27531a9e", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-05-16T17:25:50Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controlDominator.getConditionScope()) == null) { java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/589/buggy-version/microbat.src.main.microbat.model.trace.Trace.java", "BodyUseAPI": [], "Fixed commit": "411930616c52aca291470ad46e0687d05f6bc498", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2016-07-17T06:41:26Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFilesToProcess.contains(file)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/9024/buggy-version/src.com.gmail.jerickson314.sdscanner.ScanFragment.java", "BodyUseAPI": [], "Fixed commit": "bd6309d85d46cd0e9dd5e804cd06ac18a4496410", "Url": "https://api.github.com/repos/jerickson314/sdscanner", "Date": "2013-12-05T13:56:28Z"},
{"Line": "=>414", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_ConnectionThreadsByMac.containsKey(mac)) { _ConnectionThreadsByMac.get(mac).write(toMac); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2250/buggy-version/app.src.main.java.BTservice.BTservice.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, BTservice.BTservice.ThreadConnected>.get(java.lang.String)", "BTservice.BTservice.ThreadConnected.write(byte[])"], "Fixed commit": "4645062e44a405f79550064aa3966c5342ce85c2", "Url": "https://api.github.com/repos/AntonPeniaziev/SmartBracelet", "Date": "2017-05-22T16:22:11Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_macToDataForBracelet.containsKey(mac)) { _macToDataForBracelet.get(mac).clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2250/buggy-version/app.src.main.java.BTservice.BTservice.java", "BodyUseAPI": ["java.util.List<java.lang.String>.clear()", "java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)"], "Fixed commit": "4645062e44a405f79550064aa3966c5342ce85c2", "Url": "https://api.github.com/repos/AntonPeniaziev/SmartBracelet", "Date": "2017-05-22T16:22:11Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["device.getAddress().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (_macToJsonList.containsKey(deviceAddr)) { _macToJsonList.get(deviceAddr).add(JsonMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2250/buggy-version/app.src.main.java.BTservice.BTservice.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)"], "Fixed commit": "4645062e44a405f79550064aa3966c5342ce85c2", "Url": "https://api.github.com/repos/AntonPeniaziev/SmartBracelet", "Date": "2017-05-22T16:22:11Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_macToJsonList.containsKey(mac)) { _macToDataForBracelet.get(mac).add(data); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2250/buggy-version/app.src.main.java.BTservice.BTservice.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "4645062e44a405f79550064aa3966c5342ce85c2", "Url": "https://api.github.com/repos/AntonPeniaziev/SmartBracelet", "Date": "2017-05-22T16:22:11Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["device.getAddress().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (_ConnectionThreadsByMac.containsKey(deviceAddr)) { _ConnectionThreadsByMac.get(deviceAddr).write(bytesToSend); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2250/buggy-version/app.src.main.java.BTservice.BTservice.java", "BodyUseAPI": ["BTservice.BTservice.ThreadConnected.write(byte[])", "java.util.HashMap<java.lang.String, BTservice.BTservice.ThreadConnected>.get(java.lang.String)"], "Fixed commit": "4645062e44a405f79550064aa3966c5342ce85c2", "Url": "https://api.github.com/repos/AntonPeniaziev/SmartBracelet", "Date": "2017-05-22T16:22:11Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loginProgressBar) != null) { loginProgressBar.setVisibility(ProgressBar.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5874/buggy-version/app.src.main.java.com.tbbr.tbbr.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "d4e44ca7a0ab43090dabb81faf55f63ce8736236", "Url": "https://api.github.com/repos/tbbr/tbbr-android", "Date": "2016-07-25T07:50:11Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.notEmpty.await(1000, java.util.concurrent.TimeUnit.MILLISECONDS)) { gobblin.eventhub.writer.EventhubBatchAccumulator.LOG.debug(\"Being signaled due to not empty\"); }else { gobblin.eventhub.writer.EventhubBatchAccumulator.LOG.debug(\"Wake up due to timeout\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6146/buggy-version/gobblin-modules.gobblin-eventhub.src.main.java.gobblin.eventhub.writer.EventhubBatchAccumulator.java", "BodyUseAPI": [], "Fixed commit": "e09d810c9988c7ba21c786c644428a6250e1be6f", "Url": "https://api.github.com/repos/yukuai518/gobblin", "Date": "2017-03-23T16:49:52Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.EntityManager.find(java.lang.Class,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (instance.hasOpenTradePosition()) instance.getOpenTradePosition().getTradeOrders().size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6399/buggy-version/trade.src.org.trade.persistent.dao.TradestrategyHome.java", "BodyUseAPI": ["instance.getOpenTradePosition().getTradeOrders().size()", "instance.getOpenTradePosition().getTradeOrders()", "org.trade.persistent.dao.PositionOrders.getOpenTradePosition()"], "Fixed commit": "553c22d8235a5bd24bc4b65d8ae0d6dc7737d6f9", "Url": "https://api.github.com/repos/joequant/trade-manager", "Date": "2014-01-21T15:43:22Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((these) != null) tidtext.setText(these.getThesentext());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/205/buggy-version/MS1.Thes-O-Naise.app.src.main.java.de.schulzgette.thes_o_naise.ThesenAnsichtActivity.java", "BodyUseAPI": [], "Fixed commit": "b39b2c5ccdd74a943eaa5f165c519aa6b819a4d7", "Url": "https://api.github.com/repos/egette/EISWS1617SchulzGette", "Date": "2016-11-17T15:24:28Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((br.ufrgs.inf.tlbellini.lib.PajeDoubleTimedEntity) (ent)).getEndTime()) == (-1)) ((br.ufrgs.inf.tlbellini.lib.PajeDoubleTimedEntity) (ent)).setEndTime(time);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1349/buggy-version/workspace.JavaCCPajeParser.src.br.ufrgs.inf.tlbellini.lib.PajeContainer.java", "BodyUseAPI": ["br.ufrgs.inf.tlbellini.lib.PajeEntity.setEndTime(double)"], "Fixed commit": "1e10e2f8872c3bc5793bda33286d9c6a3ce5f44e", "Url": "https://api.github.com/repos/taisbellini/pajeng", "Date": "2015-11-11T23:26:13Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (propKey.startsWith(\"env:\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2209/buggy-version/core.src.main.java.jeeves.server.overrides.ConfigurationOverrides.java", "BodyUseAPI": [], "Fixed commit": "3b6d2b95d401338106af630ea59fa6bb9795e0a1", "Url": "https://api.github.com/repos/pmauduit/core-geonetwork", "Date": "2015-09-11T21:05:18Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (result.isBeforeFirst()) { result.next(); return result.getInt(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5371/buggy-version/src.us.drome.cobracorral.Database.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)", "java.sql.ResultSet.next()"], "Fixed commit": "d3ef65bb8c4f162c7584dc7c1b7958304c538481", "Url": "https://api.github.com/repos/TheAcademician/CobraCorral", "Date": "2015-10-03T11:36:02Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vision.findBirdsRealShape().size()) > 0) { updateQValue(currentState, nextActionPair, currentState, reward, true); }else { java.util.List<java.awt.Point> traj = vision.findTrajPoints(); trajectoryPlanner.adjustTrajectory(traj, sling, releasePoint); firstShot = false; updateQValue(currentState, nextActionPair, new ab.demo.qlearning.ProblemState(vision), reward, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6687/buggy-version/src.ab.demo.ReinforcementLearningAgentStandalone.java", "BodyUseAPI": ["ab.demo.ReinforcementLearningAgentStandalone.updateQValue(ab.demo.qlearning.ProblemState,ab.demo.ReinforcementLearningAgentStandalone.ActionPair,ab.demo.qlearning.ProblemState,double,boolean)", "ab.vision.Vision.findTrajPoints()"], "Fixed commit": "2cb28106dc453dc5afe03ff4a198a9159fca51ec", "Url": "https://api.github.com/repos/jgonsior/AngryProgrammers", "Date": "2016-12-15T17:44:44Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.paperbook.mapreduce.stat.secondarysort.SortKeyPair.getCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (count <= 5) { return 0; }else if ((count > 5) && (count <= 10)) { return 1; }else if ((count > 10) && (count <= 15)) { return 2; }else { return 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3511/buggy-version/src.com.paperbook.mapreduce.stat.secondarysort.NatualKeyPartitioner.java", "BodyUseAPI": [], "Fixed commit": "3baf33caf7b0ca637b8743da51e34c9fdd26d7b0", "Url": "https://api.github.com/repos/lgrcyanny/PaperBook-MapReduce", "Date": "2014-03-20T10:41:25Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["seedu.addressbook.AddressBook.getPersonByLastVisibleIndex(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (seedu.addressbook.AddressBook.FAV_LIST.contains(targetToAdd)) { return seedu.addressbook.AddressBook.MESSAGE_ALREADY_ADDED_IN_FAV_LIST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8432/buggy-version/addressbook-level1-master.src.seedu.addressbook.AddressBook.java", "BodyUseAPI": [], "Fixed commit": "33a2044ac2e3070b1010d7ee666dbc39f69b8bf7", "Url": "https://api.github.com/repos/ALim95/AddressBook", "Date": "2017-08-28T13:48:25Z"},
{"Line": "=>865", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (randoop.main.GenInputsAbstract.small_tests) { chosenSeq = randoop.generation.Randomness.randomMemberWeighted(l); }else { chosenSeq = randoop.generation.Randomness.randomMember(l); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2611/buggy-version/src.main.java.randoop.generation.ForwardGenerator.java", "BodyUseAPI": [], "Fixed commit": "82b64b3ca38df21e96cea47c1ff99996f7c50aae", "Url": "https://api.github.com/repos/jkotalik/randoop", "Date": "2017-02-28T18:47:11Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_OK)) { if ((user) != null) { saveImageToParse(data); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/74/buggy-version/app.src.main.java.com.example.gokhan.papurrless.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "517514a99c10317cf426ad5e15c077318114c8f1", "Url": "https://api.github.com/repos/GokGuu/Papurrless", "Date": "2016-03-22T16:34:26Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scrubbedTimes.size()) < 1) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1281/buggy-version/app.src.main.java.trictionary.jumproper.com.jumpropetrictionary.SpeedGraph.java", "BodyUseAPI": [], "Fixed commit": "d595d6e683aee1ff7f5b3aa000c864584547fd8c", "Url": "https://api.github.com/repos/the-tricktionary/android", "Date": "2016-09-27T17:42:37Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((content) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3985/buggy-version/src.main.java.org.reactome.web.diagram.thumbnail.diagram.DiagramThumbnail.java", "BodyUseAPI": [], "Fixed commit": "673dd2a519bcc8e8324296bda2254267fc6cb953", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2017-02-09T14:34:45Z"},
{"Line": "=>953", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hazelcast.spi.Operation.getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (connection == null) { counters = syncCounterArray; }else { counters = syncCountersPerConnection.get(connection); if (counters == null) { java.util.concurrent.atomic.AtomicLong[] newCounters = new java.util.concurrent.atomic.AtomicLong[syncCounterArray.length]; for (int k = 0; k < (newCounters.length); k++) { newCounters[k] = new java.util.concurrent.atomic.AtomicLong(); } java.util.concurrent.atomic.AtomicLong[] foundCounters = syncCountersPerConnection.putIfAbsent(connection, newCounters); counters = (foundCounters != null) ? foundCounters : newCounters; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5356/buggy-version/hazelcast.src.main.java.com.hazelcast.spi.impl.BasicOperationService.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentMap<com.hazelcast.nio.Connection, java.util.concurrent.atomic.AtomicLong[]>.get(com.hazelcast.nio.Connection)", "java.util.concurrent.ConcurrentMap<com.hazelcast.nio.Connection, java.util.concurrent.atomic.AtomicLong[]>.putIfAbsent(com.hazelcast.nio.Connection,java.util.concurrent.atomic.AtomicLong[])"], "Fixed commit": "6b343d6937bd4af6e7471f801edd5e07b79acf3e", "Url": "https://api.github.com/repos/pveentjer/hazelcast", "Date": "2014-11-13T12:04:47Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.length) > 0) { java.io.File oldestFile = files[0]; oldestFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7517/buggy-version/src.com.sudolink.isp.tasks.BackupTask.java", "BodyUseAPI": [], "Fixed commit": "4f5c5b90ace90acd34ee7f38da5140a8ab018f7a", "Url": "https://api.github.com/repos/matthew-macgregor/isecurepasswords", "Date": "2013-09-08T17:25:56Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(event.isType(ComplexEditType.CLONE))) { complexEditPanel.setSplit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1027/buggy-version/src.main.java.gov.nih.nci.ui.NCIComplexEditViewComponent.java", "BodyUseAPI": [], "Fixed commit": "8e530dd3d1b3c28e90d2733ffa316dbe3553ba6d", "Url": "https://api.github.com/repos/bdionne/nci-edit-tab", "Date": "2016-11-30T20:46:23Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edu.ucsc.sil.fixcache.cache.CoChange.findCochangeFileNameQuery) != null) edu.ucsc.sil.fixcache.cache.CoChange.findCochangeFileNameQuery.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1146/buggy-version/src.main.java.edu.ucsc.sil.fixcache.cache.CoChange.java", "BodyUseAPI": [], "Fixed commit": "b17befe8a0a7e40c76107108167b4940af39a825", "Url": "https://api.github.com/repos/xyzhu/FixCache", "Date": "2011-03-15T00:20:36Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edu.ucsc.sil.fixcache.cache.CoChange.findCommitIdQuery) != null) edu.ucsc.sil.fixcache.cache.CoChange.findCommitIdQuery.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1146/buggy-version/src.main.java.edu.ucsc.sil.fixcache.cache.CoChange.java", "BodyUseAPI": [], "Fixed commit": "b17befe8a0a7e40c76107108167b4940af39a825", "Url": "https://api.github.com/repos/xyzhu/FixCache", "Date": "2011-03-15T00:20:36Z"},
{"Line": "=>10747", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dropItems) { if (toolType == (org.voxels.BlockType.ToolType.Shears)) { org.voxels.World.world.insertEntity(org.voxels.Entity.NewBlock(org.voxels.Vector.set(org.voxels.Block.digBlock_t1, (x + 0.5F), (y + 0.5F), (z + 0.5F)), org.voxels.Block.NewVines((-1)), org.voxels.World.vRand(org.voxels.Block.digBlock_t2, 0.1F))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/726/buggy-version/src.org.voxels.Block.java", "BodyUseAPI": [], "Fixed commit": "317d47dbb7cefd7db78609c2e7e95be7503aa741", "Url": "https://api.github.com/repos/programmerjake/voxels", "Date": "2013-08-09T05:07:54Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.tregmine.Tregmine.getPlayer(event.getPlayer())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (player == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2097/buggy-version/src.info.tregmine.listeners.TregminePlayerListener.java", "BodyUseAPI": [], "Fixed commit": "64808a4621fca3f135e6cc4b532c6b20ac8589f9", "Url": "https://api.github.com/repos/EmilHernvall/tregmine", "Date": "2013-09-11T16:04:18Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((javax.swing.JComboBox) (c)).getSelectedItem()) != null) { name = c.getName(); if ((((javax.swing.JComboBox) (c)).getSelectedItem()) instanceof es.icarto.gvsig.navtableforms.ormlite.domain.KeyValue) { value = ((es.icarto.gvsig.navtableforms.ormlite.domain.KeyValue) (((javax.swing.JComboBox) (c)).getSelectedItem())).getValue(); }else { value = ((javax.swing.JComboBox) (c)).getSelectedItem().toString(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/524/buggy-version/src.es.icarto.gvsig.navtableforms.validation.ComponentValidator.java", "BodyUseAPI": ["javax.swing.JComponent.getSelectedItem()", "java.lang.Object.toString()", "java.lang.Object.getValue()", "javax.swing.JComponent.getSelectedItem()", "javax.swing.JComponent.getSelectedItem()"], "Fixed commit": "43d5afe0df518c80adfe47bd0fb53a4688c9c792", "Url": "https://api.github.com/repos/navtable/navtableforms", "Date": "2012-08-28T11:45:43Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rent.Tenant.startsWith(\"CraftOfflinePlayer\")) || (rent.Tenant.startsWith(\"CraftPlayer\"))) rent.Tenant = rent.Tenant.substring(((rent.Tenant.indexOf('=')) + 1), ((rent.Tenant.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6847/buggy-version/src.au.com.mineauz.RegionSigns.rent.RentManager.java", "BodyUseAPI": ["rent.Tenant.indexOf(char)", "rent.Tenant.substring(((rent.Tenant.indexOf('=')) + 1),((rent.Tenant.length()) - 1))", "rent.Tenant.length()"], "Fixed commit": "45baa38ec2f2d866730dff8643a8b20c55dac480", "Url": "https://api.github.com/repos/Schmoller/RegionSigns", "Date": "2013-06-13T01:39:52Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clues.startsWith(\"[\")) && (clues.endsWith(\"]\"))) clues = clues.substring(1, ((clues.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4359/buggy-version/atom-server.src.main.java.at.ac.fhcampuswien.atom.server.UploadImportServlet.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "2e710be8187d5488184dd86c7d7655d2c4403a27", "Url": "https://api.github.com/repos/fhcampuswien/atom", "Date": "2016-02-26T14:04:24Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keycode == (Input.Keys.Z)) { }else if (keycode == (Input.Keys.X)) { }else if (keycode == (Input.Keys.A)) { }else if (keycode == (Input.Keys.S)) { }else if (keycode == (Input.Keys.ESCAPE)) { if (paused) { resume(); }else { pause(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/9149/buggy-version/core.src.com.miv.Main.java", "BodyUseAPI": [], "Fixed commit": "dbe4cabb960ae11e8e1220280a05b07bcb219de1", "Url": "https://api.github.com/repos/Miv99/Rhythm-Dungeon", "Date": "2017-02-24T19:58:25Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getSign().getLine(2).contains(\"=\")) { center = com.sk89q.craftbook.gates.world.ICUtil.parseBlockLocation(getSign()); }else { center = com.sk89q.craftbook.util.SignUtil.getBackBlock(getSign().getBlock()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6079/buggy-version/circuits.src.main.java.com.sk89q.craftbook.gates.world.EntitySensor.java", "BodyUseAPI": [], "Fixed commit": "fbb4bc6b7109c50c6a2530ef381a070700f58c1d", "Url": "https://api.github.com/repos/Silthus/craftbook", "Date": "2012-08-05T11:11:42Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.paris.lutece.portal.web.user.AuthenticationFilter.getLoginUrl(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (strLoginUrl == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/632/buggy-version/src.java.fr.paris.lutece.portal.web.user.AuthenticationFilter.java", "BodyUseAPI": [], "Fixed commit": "ae5debfb2574f973dfdab0fa434026087faca34d", "Url": "https://api.github.com/repos/rzara/lutece-core", "Date": "2017-03-06T17:55:45Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dir.isDirectory()) { for (final java.io.File fileEntry : dir.listFiles()) { if (((fileEntry.exists()) && (!(fileEntry.isDirectory()))) && ((fileEntry.getName()) != \"\")) { if (fileEntry.getName().endsWith(fileExtension)) files.add(((directory + \"/\") + (fileEntry.getName()))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8929/buggy-version/GPRO-Visualisation-Tool.src.dataReader.FileHandler.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "705721ebdf1d060e1f0e48cb372deab8b63653c0", "Url": "https://api.github.com/repos/mikerhyssmith/GPRO-Visualisation-Tool", "Date": "2015-06-25T17:39:44Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.isEmpty()) { android.widget.Toast.makeText(getApplicationContext(), \"Image Sent\", Toast.LENGTH_SHORT).show(); }else if (result.get(0).equals(\"Error\")) { android.widget.Toast.makeText(getApplicationContext(), \"Error getting tracks\", Toast.LENGTH_SHORT).show(); }else { mSectionsPagerAdapter = new com.unipd.fabio.agorun.VotedTracks.SectionsPagerAdapter(getSupportFragmentManager(), result); mViewPager = ((android.support.v4.view.ViewPager) (findViewById(R.id.container))); mViewPager.setOffscreenPageLimit(com.unipd.fabio.agorun.VotedTracks.PAGES_TO_SAVE_STATE); mViewPager.setAdapter(mSectionsPagerAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8807/buggy-version/Agorun.app.src.main.java.com.unipd.fabio.agorun.VotedTracks.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "41b0305e6156e9ef5ba34d8ee4e0fccfad1b4d5a", "Url": "https://api.github.com/repos/giulio93/Agorun", "Date": "2017-07-14T12:03:50Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (selectedTabMaps != null) { java.util.Map<java.lang.String, java.lang.String> selectedTabMap = selectedTabMaps.get(breadcrumsId); if (selectedTabMap != null) { java.lang.String selectedTab = selectedTabMap.get(action.getClass().getName()); if (selectedTab != null) { valueMap.put(\"selectedTab\", selectedTab); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3064/buggy-version/giane.src.main.java.com.github.kaitoy.sneo.giane.interceptor.TabSelecterInterceptor.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>.get(java.lang.String)"], "Fixed commit": "3f4f285c80735babf31fb1c9bc92590d0163c64c", "Url": "https://api.github.com/repos/kaitoy/sneo", "Date": "2014-01-06T05:13:38Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scope instanceof eu.factorx.awac.models.business.Site) { thisSite = ((eu.factorx.awac.models.business.Site) (scope)).getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6007/buggy-version/app.eu.factorx.awac.service.impl.ResultExcelGeneratorServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "76f6e494788254bff5ada1d60f3134007ffe6f0e", "Url": "https://api.github.com/repos/Factor-X/awac", "Date": "2014-10-24T08:54:20Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.text.TextUtils.isEmpty(com.hpush.utils.Prefs.getInstance(getApplication()).getGoogleAccount()))) { mPlusClient.connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8369/buggy-version/app.src.main.java.com.hpush.app.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "41bdc807d04e92198395bae2ba9d5b1aed6177b8", "Url": "https://api.github.com/repos/XinyueZ/hpush", "Date": "2014-12-09T20:05:20Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showPlaceholder) { showMessage(\"No report available.\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2400/buggy-version/plugins.org.jboss.tools.windup.ui.src.org.jboss.tools.windup.ui.internal.views.WindupReportView.java", "BodyUseAPI": [], "Fixed commit": "ad4bbdfc7cf0b4ee2c81dc04292eb1d1232743ad", "Url": "https://api.github.com/repos/windup/windup-eclipse-plugin", "Date": "2017-05-05T16:55:38Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ist.expenditureTrackingSystem.domain.acquisitions.refund.RefundableInvoiceFile.getSupplier()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (supplier != null) { suppliers.add(supplier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2392/buggy-version/expenditure-tracking.src.main.java.pt.ist.expenditureTrackingSystem.domain.acquisitions.refund.RefundProcess.java", "BodyUseAPI": ["java.util.Set<pt.ist.expenditureTrackingSystem.domain.organization.Supplier>.add(pt.ist.expenditureTrackingSystem.domain.organization.Supplier)"], "Fixed commit": "9176c18dc22828800479f293821d609934bff852", "Url": "https://api.github.com/repos/ist-dsi/expenditures", "Date": "2014-07-15T17:57:51Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ir.co.bayan.simorq.zal.extractor.nutch.ExtractorParser.LOGGER.isDebugEnabled()) ir.co.bayan.simorq.zal.extractor.nutch.ExtractorParser.LOGGER.debug(doc.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7579/buggy-version/zal.extractor.src.main.java.ir.co.bayan.simorq.zal.extractor.nutch.ExtractorParser.java", "BodyUseAPI": ["org.slf4j.Logger.debug(doc.toString())"], "Fixed commit": "452cf963be608c1ea86d062a9ae123addee762cf", "Url": "https://api.github.com/repos/BayanGroup/nutch-custom-search", "Date": "2013-07-25T09:04:04Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subject.equals(Const.NONE_VALUE)) { subject = uk.bl.Const.NONE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/670/buggy-version/app.controllers.Targets.java", "BodyUseAPI": [], "Fixed commit": "6d43b17ca8c0473b8bc5691553996bc65bc4e630", "Url": "https://api.github.com/repos/ukwa/w3act", "Date": "2014-07-15T14:43:13Z"},
{"Line": "=>1246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (subjectUrl.toLowerCase().equals(Const.NONE)) { play.Logger.debug(\"t1\"); exp = exp.add(com.avaje.ebean.Expr.or(com.avaje.ebean.Expr.eq(Const.FIELD_SUBJECT, \"\"), com.avaje.ebean.Expr.icontains(Const.FIELD_SUBJECT, subjectUrl.toLowerCase()))); }else { exp = exp.icontains(Const.FIELD_SUBJECT, subjectUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/670/buggy-version/app.models.Target.java", "BodyUseAPI": ["com.avaje.ebean.Expr.or(com.avaje.ebean.Expr.eq(Const.FIELD_SUBJECT, \"\"),com.avaje.ebean.Expr.icontains(Const.FIELD_SUBJECT, subjectUrl.toLowerCase()))", "com.avaje.ebean.ExpressionList<models.Target>.icontains(Const.FIELD_SUBJECT,java.lang.String)", "java.lang.String.toLowerCase()", "com.avaje.ebean.Expr.icontains(Const.FIELD_SUBJECT,java.lang.String)", "com.avaje.ebean.ExpressionList<models.Target>.add(com.avaje.ebean.Expr.or(com.avaje.ebean.Expr.eq(Const.FIELD_SUBJECT, \"\"), com.avaje.ebean.Expr.icontains(Const.FIELD_SUBJECT, subjectUrl.toLowerCase())))"], "Fixed commit": "6d43b17ca8c0473b8bc5691553996bc65bc4e630", "Url": "https://api.github.com/repos/ukwa/w3act", "Date": "2014-07-15T14:43:13Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.fhwedel.coinflip.protocol.ProtocolHandler.work(parser.parseJson(message))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (response.isPresent()) { if (response.get().getId().equals(ProtocolId.SEVEN)) { logger.debug(\"Sent last protocol step. Closing connection.\"); client.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5569/buggy-version/src.main.java.de.fhwedel.coinflip.CoinFlipServer.java", "BodyUseAPI": ["response.get().getId()", "response.get().getId().equals(ProtocolId.SEVEN)", "java.util.Optional<de.fhwedel.coinflip.protocol.model.BaseProtocol>.get()"], "Fixed commit": "29ae98152b91a14156341e922e39d72c1955226f", "Url": "https://api.github.com/repos/mervyn-mccreight/coinflip", "Date": "2016-01-17T20:19:15Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(active.getEvents().contains(e))) { e.paralelupdate(container, delta, active); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4849/buggy-version/JAGEgradle.JAGEmodules.src.main.java.com.valarion.gameengine.gamestates.InGameState.java", "BodyUseAPI": ["com.valarion.gameengine.core.Event.paralelupdate(org.newdawn.slick.GameContainer,int,com.valarion.gameengine.core.tiled.SubTiledMap)"], "Fixed commit": "12583245a0dcb7b6650a84117d7235348090121e", "Url": "https://api.github.com/repos/valarion/JAGE", "Date": "2016-05-17T10:12:24Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["microcontroller.interfaces.Database.getTwitterNameFromDeviceId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (twitterName == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1763/buggy-version/src.microcontroller.threads.PresenceThread.java", "BodyUseAPI": [], "Fixed commit": "d6859142cf89d7f26a3dc54cfc60715240489374", "Url": "https://api.github.com/repos/yunusb/loki", "Date": "2013-05-09T04:40:14Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.hasSat()) && (player != (this.getSittingEntity()))) { this.sendLinkPacket(player, ru.bk.beito3.sit.Chair.SITTING_ACTION_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8642/buggy-version/Sit.src.main.java.ru.bk.beito3.sit.Chair.java", "BodyUseAPI": ["ru.bk.beito3.sit.Chair.sendLinkPacket(cn.nukkit.Player,byte)"], "Fixed commit": "6aa23eb3c9aeeb884c6942b36061e0ed467d6142", "Url": "https://api.github.com/repos/beito123/Nukkit-Plugins", "Date": "2017-05-25T13:41:26Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((serviceDocument) == null) throw new java.lang.RuntimeException(\"No 'ServiceDocument' found.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3932/buggy-version/interaction-media-odata-xml.src.main.java.com.temenos.interaction.media.odata.xml.atomsvc.ServiceDocumentProvider.java", "BodyUseAPI": [], "Fixed commit": "2946ef9721367280edde18975e29b07a7d980aa0", "Url": "https://api.github.com/repos/temenostech/IRIS", "Date": "2014-03-04T12:29:31Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentState) == (fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.CURRENT_STATE_PLAYING_BUFFERING_START)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4904/buggy-version/jcvideoplayer-lib.src.main.java.fm.jiecao.jcvideoplayer_lib.JCVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "23b86ea37780e5bb6b7759e6625eabd80d14bfd4", "Url": "https://api.github.com/repos/lipangit/JiaoZiVideoPlayer", "Date": "2017-01-21T09:24:22Z"},
{"Line": "=>1931", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSdx) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2208/buggy-version/plugins.network-elements.netscaler.src.com.cloud.network.resource.NetscalerResource.java", "BodyUseAPI": [], "Fixed commit": "433be68a6c3372bdba30ba05c1c6eda64944bb88", "Url": "https://api.github.com/repos/SungardAS-CloudDevelopers/cloudstack", "Date": "2014-07-22T21:28:01Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cores <= (data.size())) groupSize = (data.size()) / cores;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4050/buggy-version/src.main.java.main.MeanShift.java", "BodyUseAPI": ["java.util.List<coordinates.HoughPoint>.size()"], "Fixed commit": "b15c823f33af4ab6fa782a8a301d7fc9e87dc52b", "Url": "https://api.github.com/repos/IES-HelmholtzZentrumMunchen/imagej-extract-dna-fibers", "Date": "2016-11-11T07:21:50Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.result.audios.users) != null) for (ua.com.studiovision.euromaidan.network.json_protocol.search.MyAudio audio : response.result.audios.users) { audioContentValues.putName(audio.name).putAuthor(audio.author).putDuration(audio.duration).putAudioUrl(audio.url); audioContentValues.insert(context.getContentResolver()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6082/buggy-version/app.src.main.java.ua.com.studiovision.euromaidan.network.process_strategies.SearchStrategy.java", "BodyUseAPI": [], "Fixed commit": "6c4b74f2187d94d53534f60efd70f82aa1416ae2", "Url": "https://api.github.com/repos/GaidamakUA/EuroMaidan", "Date": "2014-12-29T13:59:45Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.result.audios.publics) != null) for (ua.com.studiovision.euromaidan.network.json_protocol.search.MyAudio audio : response.result.audios.publics) { audioContentValues.putName(audio.name).putAuthor(audio.author).putDuration(audio.duration).putAudioUrl(audio.url); audioContentValues.insert(context.getContentResolver()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6082/buggy-version/app.src.main.java.ua.com.studiovision.euromaidan.network.process_strategies.SearchStrategy.java", "BodyUseAPI": [], "Fixed commit": "6c4b74f2187d94d53534f60efd70f82aa1416ae2", "Url": "https://api.github.com/repos/GaidamakUA/EuroMaidan", "Date": "2014-12-29T13:59:45Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstConsumer < 0) firstConsumer = i;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7574/buggy-version/src.heros.cfl.TerminalUtil.java", "BodyUseAPI": [], "Fixed commit": "7c10b69ad316eaaf470b558be8113aba3709daff", "Url": "https://api.github.com/repos/stg-tud/heros", "Date": "2016-01-22T09:29:14Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position >= (getCount())) { return view; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3543/buggy-version/vector.src.main.java.im.vector.adapters.VectorMessagesAdapter.java", "BodyUseAPI": [], "Fixed commit": "08e92eac0470262421cc7ab197a49173f70e0f1d", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-11-28T07:48:10Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.bukkit.entity.Player, tc.oc.commons.core.util.Pair<java.lang.Boolean, java.lang.Boolean>>.remove(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (fly != null) { player.setFlying(fly.second); player.setAllowFlight(fly.first); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4040/buggy-version/Commons.bukkit.src.main.java.tc.oc.commons.bukkit.freeze.PlayerFreezer.java", "BodyUseAPI": ["org.bukkit.entity.Player.setAllowFlight(fly.first)", "org.bukkit.entity.Player.setFlying(fly.second)"], "Fixed commit": "6e666e461c5ca0d2da44762c5ebcc183c02d1f77", "Url": "https://api.github.com/repos/StratusNetwork/projectares", "Date": "2017-07-07T01:14:01Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.isOnGround())) { player.setAllowFlight(true); player.setFlying(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4040/buggy-version/Commons.bukkit.src.main.java.tc.oc.commons.bukkit.freeze.PlayerFreezer.java", "BodyUseAPI": ["org.bukkit.entity.Player.setFlying(boolean)", "org.bukkit.entity.Player.setAllowFlight(boolean)"], "Fixed commit": "6e666e461c5ca0d2da44762c5ebcc183c02d1f77", "Url": "https://api.github.com/repos/StratusNetwork/projectares", "Date": "2017-07-07T01:14:01Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((!(hasnext)) && ((boxnr) == 1))) w.deleteFirst();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5678/buggy-version/WordFrame.java", "BodyUseAPI": [], "Fixed commit": "893fdb485f13da6b9b46de11202ffd0d682fb2a9", "Url": "https://api.github.com/repos/fbthb/leitner-flashcard", "Date": "2017-06-26T19:44:50Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.nineworldsdeep.gauntlet.mnemosyne.ImageGridItem>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((item.getImage()) != null) { holder.ivImage.setImageBitmap(item.getImage()); }else { holder.ivImage.setImageResource(R.mipmap.ic_nwd_junction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/9096/buggy-version/app.src.main.java.com.nineworldsdeep.gauntlet.mnemosyne.ImageGridAdapter.java", "BodyUseAPI": ["com.nineworldsdeep.gauntlet.mnemosyne.ImageGridItem.getImage()", "android.widget.ImageView.setImageBitmap(item.getImage())"], "Fixed commit": "a6f6fb9cfee4919803261ff27ffebfb79be4367b", "Url": "https://api.github.com/repos/BBuchholz/Gauntlet", "Date": "2016-11-21T08:14:54Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (PrefsActivity.STORAGE_OPTION_EXTERNAL.equals(storageOption)) { storagePref.setValue(storagePref.getEntryValues()[1].toString()); }else { storagePref.setValue(storageOption); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8181/buggy-version/app.src.main.java.org.digitalcampus.oppia.fragments.PreferencesFragment.java", "BodyUseAPI": ["android.preference.ListPreference.setValue(java.lang.String)"], "Fixed commit": "5ca7c59b40ac3f1ba9e2fabe7734bba09d5ec256", "Url": "https://api.github.com/repos/jjoseba/oppia-mobile-android", "Date": "2015-12-01T18:16:05Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!simpleThread) for (int i = 0; i < (getStackSize()); ++i) { if ((getStack(i).getID()) == ID) for (java.util.Map.Entry<java.lang.String, com.laneve.asp.ASMAnalysis.asmTypes.AnValue> e : map.entrySet()) getStack(i).setField(e.getKey(), e.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1044/buggy-version/src.com.laneve.asp.ASMAnalysis.asmClasses.BehaviourFrame.java", "BodyUseAPI": [], "Fixed commit": "0ea47878b1a91e0e65dffe8b97ce5ecfb5b85cde", "Url": "https://api.github.com/repos/fagiodarkie/ASMASP", "Date": "2016-08-29T16:01:44Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((updatedField.equalsIgnoreCase(com.laneve.asp.ASMAnalysis.utils.Names.get(i))) && ((parameters.get(i)) instanceof com.laneve.asp.ASMAnalysis.asmTypes.ThreadValue)) { com.laneve.asp.ASMAnalysis.asmTypes.ThreadValue x = ((com.laneve.asp.ASMAnalysis.asmTypes.ThreadValue) (parameters.get(i))); if (x instanceof com.laneve.asp.ASMAnalysis.asmTypes.VarThreadValue) { x = ((com.laneve.asp.ASMAnalysis.asmTypes.VarThreadValue) (x)).compute(parameters); tempMap.put(updatedField, x); }else { com.laneve.asp.ASMAnalysis.asmTypes.ThreadValue t = generateThread((\"t\" + (threadCounter)), getStatusOfThread(x.getThreadID())); tempMap.put(updatedField, t); } threadsStatus.put(x.getThreadID(), getStatusOfThread(((com.laneve.asp.ASMAnalysis.asmTypes.ThreadValue) (up.get(com.laneve.asp.ASMAnalysis.utils.Names.get(i)))).getThreadID())); }else if (updatedField.startsWith(com.laneve.asp.ASMAnalysis.utils.Names.get(i))) { java.lang.String fieldName = updatedField.substring(((updatedField.indexOf('.')) + 1)); com.laneve.asp.ASMAnalysis.asmTypes.AnValue val = up.get(updatedField); if (val instanceof com.laneve.asp.ASMAnalysis.asmTypes.expressions.ConstExpression) tempMap.put(fieldName, val); else if (val instanceof com.laneve.asp.ASMAnalysis.asmTypes.expressions.IExpression) { com.laneve.asp.ASMAnalysis.asmTypes.expressions.IExpression x = ((com.laneve.asp.ASMAnalysis.asmTypes.expressions.IExpression) (val)).evaluate(parameters); tempMap.put(fieldName, x); }else if (val instanceof com.laneve.asp.ASMAnalysis.asmTypes.VarThreadValue) { com.laneve.asp.ASMAnalysis.asmTypes.ThreadValue x = ((com.laneve.asp.ASMAnalysis.asmTypes.VarThreadValue) (val)).compute(parameters); tempMap.put(fieldName, x); int status = getStatusOfThread(((com.laneve.asp.ASMAnalysis.asmTypes.VarThreadValue) (val)).getThreadID()); threadsStatus.put(x.getThreadID(), status); }else if (val instanceof com.laneve.asp.ASMAnalysis.asmTypes.ThreadValue) { com.laneve.asp.ASMAnalysis.asmTypes.ThreadValue t = generateThread((\"t\" + (threadCounter)), getStatusOfThread(((com.laneve.asp.ASMAnalysis.asmTypes.ThreadValue) (val)).getThreadID())); tempMap.put(fieldName, t); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1044/buggy-version/src.com.laneve.asp.ASMAnalysis.asmClasses.AnalysisContext.java", "BodyUseAPI": ["com.laneve.asp.ASMAnalysis.asmTypes.ThreadValue.compute(java.util.List<com.laneve.asp.ASMAnalysis.asmTypes.AnValue>)", "java.lang.String.indexOf(char)", "com.laneve.asp.ASMAnalysis.asmTypes.AnValue.compute(java.util.List<com.laneve.asp.ASMAnalysis.asmTypes.AnValue>)", "java.lang.String.startsWith(com.laneve.asp.ASMAnalysis.utils.Names.get(i))", "com.laneve.asp.ASMAnalysis.utils.Names.get(int)", "com.laneve.asp.ASMAnalysis.asmClasses.AnalysisContext.getStatusOfThread(((com.laneve.asp.ASMAnalysis.asmTypes.ThreadValue) (up.get(com.laneve.asp.ASMAnalysis.utils.Names.get(i)))).getThreadID())", "com.laneve.asp.ASMAnalysis.asmTypes.AnValue.evaluate(java.util.List<com.laneve.asp.ASMAnalysis.asmTypes.AnValue>)", "java.util.List<com.laneve.asp.ASMAnalysis.asmTypes.AnValue>.get(int)", "java.lang.String.substring(int)", "((com.laneve.asp.ASMAnalysis.asmTypes.ThreadValue) (up.get(com.laneve.asp.ASMAnalysis.utils.Names.get(i)))).getThreadID()", "java.util.Map<java.lang.String, com.laneve.asp.ASMAnalysis.asmTypes.AnValue>.put(java.lang.String,com.laneve.asp.ASMAnalysis.asmTypes.ThreadValue)", "java.util.Map<java.lang.String, com.laneve.asp.ASMAnalysis.asmTypes.AnValue>.put(java.lang.String,com.laneve.asp.ASMAnalysis.asmTypes.ThreadValue)", "java.util.Map<java.lang.Long, java.lang.Integer>.put(x.getThreadID(),java.lang.Integer)", "com.laneve.asp.ASMAnalysis.utils.Names.get(int)", "java.util.Map<java.lang.String, com.laneve.asp.ASMAnalysis.asmTypes.AnValue>.get(java.lang.String)", "java.util.Map<java.lang.String, com.laneve.asp.ASMAnalysis.asmTypes.AnValue>.get(com.laneve.asp.ASMAnalysis.utils.Names.get(i))"], "Fixed commit": "0ea47878b1a91e0e65dffe8b97ce5ecfb5b85cde", "Url": "https://api.github.com/repos/fagiodarkie/ASMASP", "Date": "2016-08-29T16:01:44Z"},
{"Line": "=>843", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fieldMap.is(ma.glasnost.orika.metadata.ClassMapBuilder.aMultiOccurrenceElementMap())) { getMappedPropertiesForTypeA().add(fieldMap.getSource().getContainer().getExpression()); getMappedPropertiesForTypeB().add(fieldMap.getDestination().getContainer().getExpression()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2407/buggy-version/core.src.main.java.ma.glasnost.orika.metadata.ClassMapBuilder.java", "BodyUseAPI": ["ma.glasnost.orika.metadata.FieldMap.getDestination()", "fieldMap.getSource().getContainer().getExpression()", "java.util.Set<java.lang.String>.add(fieldMap.getSource().getContainer().getExpression())", "ma.glasnost.orika.metadata.FieldMap.getSource()", "java.util.Set<java.lang.String>.add(fieldMap.getDestination().getContainer().getExpression())", "fieldMap.getSource().getContainer()", "fieldMap.getDestination().getContainer().getExpression()", "fieldMap.getDestination().getContainer()"], "Fixed commit": "2c67c7f601e44f5db7c3ae57e0afc30b67b7cb9c", "Url": "https://api.github.com/repos/orika-mapper/orika", "Date": "2013-07-07T03:19:06Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.PlayerDeathEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (player.hasMetadata(\"NPC\")) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6401/buggy-version/src.com.gmail.molnardad.quester.listeners.DeathListener.java", "BodyUseAPI": [], "Fixed commit": "18d9d2a2159c3f76493c576678c25165bfda39ce", "Url": "https://api.github.com/repos/raGan262/Quester", "Date": "2012-11-12T14:01:45Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.buffer[buffi]) == '\\ufeff') { buffi++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/809/buggy-version/src.main.java.org.thymeleaf.templateparser.TemplatePreprocessingReader.java", "BodyUseAPI": [], "Fixed commit": "563d38f9d77349e8b7d32e7f35e057403f03e388", "Url": "https://api.github.com/repos/thymeleaf/thymeleaf", "Date": "2013-10-05T21:12:17Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, org.pircbotx.PircBotX>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (pircBot != null) { return (pircBot.getState()) == (org.pircbotx.PircBotX.State.CONNECTED); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3742/buggy-version/src.bot.Palebot.java", "BodyUseAPI": ["org.pircbotx.PircBotX.getState()"], "Fixed commit": "ba00428f30a19a7215342301cce583f8a30dbf63", "Url": "https://api.github.com/repos/palepail/palebotV3", "Date": "2015-07-30T12:48:49Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.channel.embedded.AbstractEmbeddedChannel.write(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((future.cause()) != null) { recordException(future.cause()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/818/buggy-version/transport.src.main.java.io.netty.channel.embedded.AbstractEmbeddedChannel.java", "BodyUseAPI": ["io.netty.channel.ChannelFuture.cause()", "io.netty.channel.embedded.AbstractEmbeddedChannel<O>.recordException(future.cause())"], "Fixed commit": "61bbb04852211e0200b669e260a1696c39d58935", "Url": "https://api.github.com/repos/netty/netty", "Date": "2013-02-09T15:46:30Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (time_ms2 == time_ms1) { time_ms2 = time_ms2 + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7490/buggy-version/getMOSPatch.java", "BodyUseAPI": [], "Fixed commit": "95cb8c9e872d43835a51f98d8c5e4f7d425f889e", "Url": "https://api.github.com/repos/MarisElsins/getMOSPatch", "Date": "2017-07-13T14:38:16Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((worldObj.getBlock(x, y, z)) == (flaxbeard.steamcraft.SteamcraftBlocks.dummy)) && (((getBlockMetadata()) % 2) == 0)) { worldObj.setBlockToAir(x, y, z); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4307/buggy-version/src.main.java.flaxbeard.steamcraft.tile.TileEntitySmasher.java", "BodyUseAPI": ["flaxbeard.steamcraft.tile.TileEntitySmasher.setBlockToAir(int,int,int)"], "Fixed commit": "5535ce58befb8467a721fbf9092b36025d637b76", "Url": "https://api.github.com/repos/Flaxbeard/Flaxbeards-Steam-Power", "Date": "2014-06-30T06:59:30Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((p.getDomain()) instanceof edacc.parameterspace.domain.RealDomain) { if (v instanceof java.lang.Integer) v = ((java.lang.Integer) (v)).floatValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3916/buggy-version/src.edacc.parameterspace.ParameterConfiguration.java", "BodyUseAPI": [], "Fixed commit": "22ed91916bd35395b49214da98ac770f95c2ee4d", "Url": "https://api.github.com/repos/ceari/edacc_api", "Date": "2011-11-02T16:22:23Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((param.getDomain()) instanceof edacc.parameterspace.domain.RealDomain) { if (v instanceof java.lang.Integer) v = ((java.lang.Integer) (v)).floatValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3916/buggy-version/src.edacc.parameterspace.ParameterConfiguration.java", "BodyUseAPI": [], "Fixed commit": "22ed91916bd35395b49214da98ac770f95c2ee4d", "Url": "https://api.github.com/repos/ceari/edacc_api", "Date": "2011-11-02T16:22:23Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentField) instanceof controller.Tax) { if ((((controller.Tax) (currentField)).getTaxRate()) > 0) { java.lang.String playerChoice = determineUserInput(new java.lang.String[]{ controller.Messages.getGeneralMessages()[3], ((controller.Messages.getGeneralMessages()[4]) + (((controller.Tax) (currentField)).getTaxRate())) + (controller.Messages.getGeneralMessages()[5]), (controller.Messages.getGeneralMessages()[4]) + (((controller.Tax) (currentField)).getTaxAmount()) }); player.setChoice(playerChoice); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5334/buggy-version/src.controller.TurnController.java", "BodyUseAPI": [], "Fixed commit": "522489bda8316124709461d57a1f1e43757a20cd", "Url": "https://api.github.com/repos/freyahelstrup/17_final", "Date": "2017-01-04T15:47:50Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tempArray.length) == 4) { newNode = new Main.Nodes(tempArray[0], java.lang.Integer.parseInt(tempArray[1]), java.lang.Integer.parseInt(tempArray[2]), tempArray[3]); (totalTerminalNodes)++; if ((newNode.getArea()) > (largestAreaTerminalNodeList.get(0).getArea())) { largestAreaTerminalNodeList.clear(); largestAreaTerminalNodeList.add(newNode); }else if ((newNode.getArea()) < (smallestAreaTerminalNodeList.get(0).getArea())) { smallestAreaTerminalNodeList.clear(); smallestAreaTerminalNodeList.add(newNode); }else if ((newNode.getArea()) == (largestAreaTerminalNodeList.get(0).getArea())) { largestAreaTerminalNodeList.add(newNode); }else if ((newNode.getArea()) == (smallestAreaTerminalNodeList.get(0).getArea())) { smallestAreaTerminalNodeList.add(newNode); } nodelist.add(newNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3542/buggy-version/src.Main.NodeList.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "d7467dfe00d0d4757f566de64ddbd04d49f6fd62", "Url": "https://api.github.com/repos/jwchong93/CircuitProfiler", "Date": "2016-11-11T17:10:29Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHandler) != null) { mHandler.removeCallbacks(pingServer); android.util.Log.d(com.SrivatsanPoddar.helpp.TwilioActivity.TAG, \"Connection lost.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8480/buggy-version/app.src.main.java.com.SrivatsanPoddar.helpp.TwilioActivity.java", "BodyUseAPI": [], "Fixed commit": "2daa61b029af3e47c75768069515006385f2bbfa", "Url": "https://api.github.com/repos/SrivatsanPoddar/diial-androidStudio", "Date": "2014-10-22T03:02:10Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listBooking.size()) == 0) { container.removeAllViews(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/9108/buggy-version/AviaSales.app.src.main.java.avia.androi.innopolis.com.aviasales.history.BookingHistoryFragment.java", "BodyUseAPI": [], "Fixed commit": "1d1459cfac66c02d0dcfb51d124b1eee30f39e9d", "Url": "https://api.github.com/repos/markusFrost/Avia-Sales-Mobile-Application", "Date": "2016-07-20T19:40:11Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((text == null) && (!(map.isEmpty()))) { text = map.values().iterator().next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2535/buggy-version/src.main.java.org.fenixedu.commons.i18n.LocalizedString.java", "BodyUseAPI": ["org.fenixedu.commons.i18n.LocalizedString.InternalMap.values()", "java.util.Collection<java.lang.String>.iterator()", "java.util.Iterator<java.lang.String>.next()"], "Fixed commit": "dc20e11cfbe0adf6cfb8423c5106613708f61321", "Url": "https://api.github.com/repos/FenixEdu/fenixedu-commons", "Date": "2014-04-23T13:55:42Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input instanceof edu.uw.zookeeper.protocol.FourLetterRequest) { com.google.common.util.concurrent.Futures.addCallback(anonymousExecutor.submit(((edu.uw.zookeeper.protocol.FourLetterRequest) (input))), this); }else if (input instanceof edu.uw.zookeeper.protocol.TelnetCloseRequest) { this.stop(); }else { throw new java.lang.AssertionError(java.lang.String.valueOf(input)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/499/buggy-version/src.main.java.edu.uw.zookeeper.protocol.server.ServerConnectionExecutor.java", "BodyUseAPI": ["java.lang.String.valueOf(Message.Client)"], "Fixed commit": "bc7fde79bbb577f27290604fb6f79fcbff150b7f", "Url": "https://api.github.com/repos/lisaglendenning/zookeeper-lite", "Date": "2013-08-20T23:53:09Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((out) != null) { out.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7983/buggy-version/core.src.main.java.com.datasalt.pangool.tuplemr.mapred.lib.output.TupleOutputFormat.java", "BodyUseAPI": [], "Fixed commit": "cf54d7332458e2bc334ff2389d6a10bcf1c4c23c", "Url": "https://api.github.com/repos/datasalt/pangool", "Date": "2013-10-30T15:35:33Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild<?, ?>.getWorkspace()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (workspace == null) { log.write(this, \"Unable to publish, workspace of build is undefined.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/669/buggy-version/relution-publisher.src.main.java.org.jenkinsci.plugins.relution_publisher.configuration.jobs.ArtifactPublisher.java", "BodyUseAPI": [], "Fixed commit": "f378f3ebdaf96ad2f5cd637908a6689a488c7c99", "Url": "https://api.github.com/repos/mwaylabs/relution-jenkins-plugin", "Date": "2014-07-03T18:16:54Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((content.getOperation()) != null) operation = content.getOperation();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8950/buggy-version/VotingSystemAPI.src.main.java.org.votingsystem.dto.SocketMessageDto.java", "BodyUseAPI": ["org.votingsystem.dto.SocketMessageContentDto.getOperation()"], "Fixed commit": "0932ae2a60a501c8391f225486daa479f541d367", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2015-04-25T12:47:09Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (classesAssigned) { android.widget.Toast t = android.widget.Toast.makeText(getApplicationContext(), \"The game has already been started.\", Toast.LENGTH_LONG); t.show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8188/buggy-version/src.com.mfedarko.smspidemic.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2778d4a032d84aa977851f90d7c59d245e92bb99", "Url": "https://api.github.com/repos/fedarko/SMSPidemic", "Date": "2014-09-28T14:24:47Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (response.has(\"results\")) { return extractResults(response.getJSONArray(\"results\")); }else return new java.lang.String[]{ \"error\" };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3728/buggy-version/app.src.main.java.com.terminatingcode.android.migrainetree.GeoLookupParser.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)", "com.terminatingcode.android.migrainetree.GeoLookupParser.extractResults(response.getJSONArray(\"results\"))"], "Fixed commit": "959d91bbd813c18b1957b0a83961dfa89ee45979", "Url": "https://api.github.com/repos/terminatingcode/MigraineTree", "Date": "2016-06-21T20:20:05Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((players.get(0).getInfo().getId()) == (players.get(index).getInfo().getId())) { android.os.Bundle bundle = new android.os.Bundle(); players.remove(0); bundle.putSerializable(\"arrayList\", players); intent.putExtras(bundle); intent.setClass(this, com.poker.common.activity.PunishActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5747/buggy-version/src.com.poker.common.activity.RankActivity.java", "BodyUseAPI": ["android.os.Bundle.putSerializable(java.lang.String,java.util.ArrayList<com.poker.common.entity.ClientPlayer>)", "java.util.ArrayList<com.poker.common.entity.ClientPlayer>.remove(int)"], "Fixed commit": "24347bb18bb50772976236d8666b8578cfd0b887", "Url": "https://api.github.com/repos/CommonPokerInc/commonpoker", "Date": "2014-10-09T06:36:51Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.facebook.Session.getActiveSession()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(session.getPermissions().contains(eoc.studio.voicecard.facebook.FacebookManager.Permissions.PUBLISH_STREAM))) { session.requestNewPublishPermissions(new com.facebook.Session.NewPermissionsRequest(((android.app.Activity) (context)), eoc.studio.voicecard.facebook.FacebookManager.Permissions.ALL_PERMISSION)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7028/buggy-version/src.eoc.studio.voicecard.facebook.FacebookManager.java", "BodyUseAPI": ["com.facebook.Session.requestNewPublishPermissions(com.facebook.Session.NewPermissionsRequest)"], "Fixed commit": "734c030f3b6a385ae35d64a2b3b9c5864525a2b5", "Url": "https://api.github.com/repos/eoc-studio/VoiceCard", "Date": "2014-02-07T14:51:41Z"},
{"Line": "=>685", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.uci.cs241.pl241.backend.DLXInstruction.isBranch(entry.instructions.get(((entry.instructions.size()) - 1)))) == false) { index = entry.instructions.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2395/buggy-version/project.src.com.uci.cs241.pl241.backend.DLXGenerator.java", "BodyUseAPI": ["entry.instructions.size()"], "Fixed commit": "db134e1bb223d71753c0e8b8b950d00eead6b834", "Url": "https://api.github.com/repos/chris-wood/PL241-Compiler", "Date": "2014-03-14T20:35:13Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tokenizer.hasMoreTokens()) filename += \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2394/buggy-version/sda.src.main.java.org.scigap.iucig.filemanager.util.StringUtils.java", "BodyUseAPI": [], "Fixed commit": "a4b546d72177f7d50cf4af33d7e35d274ad09b8f", "Url": "https://api.github.com/repos/SciGaP/IUGateway", "Date": "2014-04-28T19:23:48Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasHeroes()) { org.bukkit.Bukkit.getPluginManager().registerEvents(new se.crafted.chrisb.ecoCreature.listeners.HeroMasteredListener(this), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5368/buggy-version/src.main.java.se.crafted.chrisb.ecoCreature.ecoCreature.java", "BodyUseAPI": [], "Fixed commit": "d243592081b689508c8308bbba30312274579bba", "Url": "https://api.github.com/repos/Herocraft/ecoCreature", "Date": "2012-08-12T04:27:00Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activeCards[playerNum][i]) != null) { activeCards[playerNum][i].leavePlay(playerNum, i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2504/buggy-version/src.Roma.DiceDiscs.java", "BodyUseAPI": ["activeCards[playerNum][i].leavePlay(int,int)"], "Fixed commit": "105cd3bc5655571240477fb71a34641c84ed320d", "Url": "https://api.github.com/repos/nayyarv/Roma_Fun", "Date": "2012-05-22T01:54:18Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDeathEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (entity instanceof org.bukkit.entity.Horse) { org.bukkit.entity.Horse horse = ((org.bukkit.entity.Horse) (entity)); if (horse.isCarryingChest()) { if (me.botsko.prism.Prism.getIgnore().event(\"item-drop\", entity.getWorld())) { for (org.bukkit.inventory.ItemStack i : horse.getInventory().getContents()) { if (i == null) continue; Prism.actionsRecorder.addToQueue(me.botsko.prism.actionlibs.ActionFactory.create(\"item-drop\", i, i.getAmount(), (-1), null, entity.getLocation(), \"horse\")); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2799/buggy-version/src.main.java.me.botsko.prism.listeners.PrismEntityEvents.java", "BodyUseAPI": ["me.botsko.prism.Prism.getIgnore().event(java.lang.String,entity.getWorld())", "org.bukkit.entity.Entity.getWorld()", "me.botsko.prism.actionlibs.ActionFactory.create(java.lang.String,org.bukkit.inventory.ItemStack,i.getAmount(),int,<nulltype>,entity.getLocation(),java.lang.String)", "Prism.actionsRecorder.addToQueue(me.botsko.prism.actionlibs.ActionFactory.create(\"item-drop\", i, i.getAmount(), (-1), null, entity.getLocation(), \"horse\"))", "org.bukkit.entity.Entity.getLocation()"], "Fixed commit": "5e97ebab9f01a1570dccadc92019b65d04ddb514", "Url": "https://api.github.com/repos/ams2990/Prism", "Date": "2013-08-08T05:55:55Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.senseidb.search.req.SenseiResult.getParsedQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((parsedQuery != null) && ((parsedQuery.length()) > 0)) return parsedQuery;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5474/buggy-version/sensei-core.src.main.java.com.senseidb.search.node.ResultMerger.java", "BodyUseAPI": [], "Fixed commit": "04dc2719ff64e688b5c3814b33f60cea71a272a8", "Url": "https://api.github.com/repos/linkedin/sensei", "Date": "2012-08-28T01:49:09Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["multitallented.redcastlemedia.bukkit.townships.region.RegionManager.getRegionType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((rt.getUnlockCost()) < 1) { player.sendMessage(((((ChatColor.RED) + \"[Townships] \") + (rt.getName())) + \" can't be unlocked.\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6000/buggy-version/modules.Townships-Plugin.src.main.java.multitallented.redcastlemedia.bukkit.townships.Townships.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(((((ChatColor.RED) + \"[Townships] \") + (rt.getName())) + \" can't be unlocked.\"))", "multitallented.redcastlemedia.bukkit.townships.region.RegionType.getName()"], "Fixed commit": "ee8a4f1284aecc014273db77c7792d084a7a5d68", "Url": "https://api.github.com/repos/Multitallented/Townships", "Date": "2016-01-26T21:09:10Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.cache.Cache<java.util.UUID, com.lenis0012.bukkit.marriage2.internal.data.MarriagePlayer>.getIfPresent(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (player != null) { core.setMPlayer(userId, cache.getIfPresent(userId)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1918/buggy-version/src.main.java.com.lenis0012.bukkit.marriage2.listeners.DatabaseListener.java", "BodyUseAPI": [], "Fixed commit": "c15f2db284f2e0811fac595648d80df9552051ba", "Url": "https://api.github.com/repos/lenis0012/Marriage", "Date": "2016-02-26T15:34:16Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player == null) || ((player.getUniqueId()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1918/buggy-version/src.main.java.com.lenis0012.bukkit.marriage2.internal.data.DataManager.java", "BodyUseAPI": [], "Fixed commit": "c15f2db284f2e0811fac595648d80df9552051ba", "Url": "https://api.github.com/repos/lenis0012/Marriage", "Date": "2016-02-26T15:34:16Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jtalks.jcommune.web.dto.EditUserProfileDto.getUserContactsDto()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dto == null) { return contacts; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8545/buggy-version/jcommune-view.jcommune-web-controller.src.main.java.org.jtalks.jcommune.web.dto.EditUserProfileDto.java", "BodyUseAPI": [], "Fixed commit": "ee73ad79ab94c04e93ff570e22cb304be011d493", "Url": "https://api.github.com/repos/jtalks-org/jcommune", "Date": "2014-03-11T18:46:14Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(parseArgs(argv))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4057/buggy-version/src.main.java.org.broadinstitute.hellbender.cmdline.PicardCommandLineProgram.java", "BodyUseAPI": [], "Fixed commit": "8bfd712eb2269698ab2b77c564b1ca1db91deed0", "Url": "https://api.github.com/repos/broadinstitute/gatk", "Date": "2015-11-19T01:17:41Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.google.cloud.tools.intellij.appengine.cloud.AppEngineDeployable) (source)).getEnvironment().equals(AppEngineEnvironment.APP_ENGINE_FLEX)) { return new com.google.cloud.tools.intellij.appengine.cloud.flexible.AppEngineFlexibleDeploymentEditor(project); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4823/buggy-version/google-cloud-tools-plugin.src.com.google.cloud.tools.intellij.appengine.cloud.AppEngineDeploymentConfigurator.java", "BodyUseAPI": [], "Fixed commit": "25ee512a10e3da0b2747e35c1d2175979bdac2cd", "Url": "https://api.github.com/repos/GoogleCloudPlatform/google-cloud-intellij", "Date": "2016-12-23T15:59:47Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mSwipeRefreshLayout.isRefreshing()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8330/buggy-version/app.src.main.java.com.initech.news.CategoryFragment.java", "BodyUseAPI": [], "Fixed commit": "0b92c5463702b51f8f39e3f89cbb5b51c3d9f81e", "Url": "https://api.github.com/repos/kkawai/news", "Date": "2016-02-01T14:45:39Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mSwipeRefreshLayout.isRefreshing())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8330/buggy-version/app.src.main.java.com.initech.news.CategoryFragment.java", "BodyUseAPI": [], "Fixed commit": "0b92c5463702b51f8f39e3f89cbb5b51c3d9f81e", "Url": "https://api.github.com/repos/kkawai/news", "Date": "2016-02-01T14:45:39Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(prover.local.LocalProver.availableProvers.contains(proverName))) prover.local.LocalProver.availableProvers.add(proverName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3337/buggy-version/editor.src.main.java.prover.local.LocalProver.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "5b63f3e8f8a59a6305312bda94ffabdc9142db1e", "Url": "https://api.github.com/repos/TobiasGleissner/WYSIWY-Editor-for-THF", "Date": "2017-09-26T08:29:29Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"T3\".equals(lab)) { hm.put(\"title series\", val); }else if ((\"AU\".equals(lab)) || (\"A1\".equals(lab))) { if (\"\".equals(author)) { author = val; }else { author += \" and \" + val; } }else if (\"A2\".equals(lab)) { if (\"\".equals(editor)) { editor = val; }else { editor += \" and \" + val; } }else if (((\"JA\".equals(lab)) || (\"JF\".equals(lab))) || (\"JO\".equals(lab))) { if (\"inproceedings\".equals(type)) { hm.put(\"booktitle\", val); }else { hm.put(\"journal\", val); } }else if (\"SP\".equals(lab)) { startPage = val; }else if (\"PB\".equals(lab)) { if (\"phdthesis\".equals(type)) { hm.put(\"school\", val); }else { hm.put(\"publisher\", val); } }else if ((\"AD\".equals(lab)) || (\"CY\".equals(lab))) { hm.put(\"address\", val); }else if (\"EP\".equals(lab)) { endPage = val; }else if (\"SN\".equals(lab)) { hm.put(\"issn\", val); }else if (\"VL\".equals(lab)) { hm.put(\"volume\", val); }else if (\"IS\".equals(lab)) { hm.put(\"number\", val); }else if ((\"N2\".equals(lab)) || (\"AB\".equals(lab))) { java.lang.String oldAb = hm.get(\"abstract\"); if (oldAb == null) { hm.put(\"abstract\", val); }else { hm.put(\"abstract\", ((oldAb + \"\\n\") + val)); } }else if (\"UR\".equals(lab)) { hm.put(\"url\", val); }else if (((\"Y1\".equals(lab)) || (\"PY\".equals(lab))) && ((val.length()) >= 4)) { java.lang.String[] parts = val.split(\"/\"); hm.put(\"year\", parts[0]); if (((parts.length) > 1) && (!(parts[1].isEmpty()))) { try { int monthNumber = java.lang.Integer.parseInt(parts[1]); net.sf.jabref.importer.fileformat.MonthUtil.Month month = net.sf.jabref.importer.fileformat.MonthUtil.getMonthByNumber(monthNumber); if (month.isValid()) { hm.put(\"month\", month.bibtexFormat); } } catch (java.lang.NumberFormatException ex) { } } }else if (\"KW\".equals(lab)) { if (!(hm.containsKey(\"keywords\"))) { hm.put(\"keywords\", val); }else { java.lang.String kw = hm.get(\"keywords\"); hm.put(\"keywords\", ((kw + \", \") + val)); } }else if (((\"U1\".equals(lab)) || (\"U2\".equals(lab))) || (\"N1\".equals(lab))) { if (!(comment.isEmpty())) { comment = comment + \"\\n\"; } comment = comment + val; }else if (\"ID\".equals(lab)) { hm.put(\"refid\", val); }else if (\"M3\".equals(lab)) { java.lang.String doi = val; if (doi.startsWith(\"doi:\")) { doi = doi.replaceAll(\"(?i)doi:\", \"\").trim(); hm.put(\"doi\", doi); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7665/buggy-version/src.main.java.net.sf.jabref.importer.fileformat.RisImporter.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "bdf552293405b1ea1845bba95d8682e37799b380", "Url": "https://api.github.com/repos/obraliar/jabref", "Date": "2016-01-16T16:15:04Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mousephenotype.cda.owl.OntologyParser.getOntologyTerm(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((child.getNodeIds()) != null) { java.util.List<java.lang.Integer> nodeIds = new java.util.ArrayList<>(); nodeIds.add(child.getNodeIds().iterator().next()); children.add(getJson(nodeIds, baseUrl, parser, \"\", new java.util.HashMap(), mpGeneVariantCount)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1452/buggy-version/indexers.src.main.java.org.mousephenotype.cda.indexers.utils.OntologyBrowserGetter.java", "BodyUseAPI": ["child.getNodeIds().iterator().next()", "org.mousephenotype.cda.owl.OntologyTermDTO.getNodeIds()", "java.util.List<java.lang.Integer>.add(child.getNodeIds().iterator().next())", "child.getNodeIds().iterator()"], "Fixed commit": "b9dc623f51e922e4bb84a3aa8cabfc6756462a3d", "Url": "https://api.github.com/repos/mpi2/PhenotypeData", "Date": "2017-03-28T10:08:27Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.execution.getExecutionStatus()) == (cz.cuni.xrg.intlib.commons.app.pipeline.PipelineExecutionStatus.SCHEDULED)) { this.execution.setExecutionStatus(PipelineExecutionStatus.RUNNING); database.getPipeline().save(this.execution); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6318/buggy-version/backend.src.main.java.cz.cuni.xrg.intlib.backend.execution.PipelineWorker.java", "BodyUseAPI": ["cz.cuni.xrg.intlib.commons.app.pipeline.PipelineExecution.setExecutionStatus(PipelineExecutionStatus.RUNNING)", "database.getPipeline().save(cz.cuni.xrg.intlib.commons.app.pipeline.PipelineExecution)"], "Fixed commit": "819d8e0b7efb933491ada4bd82e358cb4c83a71a", "Url": "https://api.github.com/repos/mff-uk/intlib", "Date": "2013-08-20T11:25:14Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parameterCount == (-1)) { if ((parameterType.length) != (paras.length)) { return null; } parameterCount = parameterType.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5843/buggy-version/src.org.bee.tl.core.MethodUtil.java", "BodyUseAPI": [], "Fixed commit": "9c7dc2799bc91c2d0726abe3160917ad0f67f07f", "Url": "https://api.github.com/repos/javamonkey/my-beetl", "Date": "2013-05-05T09:08:03Z"},
{"Line": "=>780", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["config.resourcesFactory().find(r.uuid())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (((r2 != null) && (r2.isSuspended())) && ((r.hashCode()) != (r2.hashCode()))) { removeAtmosphereResource(r2); checkCachedAndPush(r2, r2.getAtmosphereResourceEvent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4902/buggy-version/modules.cpr.src.main.java.org.atmosphere.cpr.DefaultBroadcaster.java", "BodyUseAPI": ["org.atmosphere.cpr.DefaultBroadcaster.checkCachedAndPush(org.atmosphere.cpr.AtmosphereResource,r2.getAtmosphereResourceEvent())", "org.atmosphere.cpr.AtmosphereResource.getAtmosphereResourceEvent()", "org.atmosphere.cpr.DefaultBroadcaster.removeAtmosphereResource(org.atmosphere.cpr.AtmosphereResource)"], "Fixed commit": "8f1d64b033870a208e2b2f64342ebb926fec417c", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2015-03-09T20:00:12Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (db.isOpen()) { db.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5875/buggy-version/app.src.main.java.de.martinlepsy.einfachsparen.data.TransactionDbHelper.java", "BodyUseAPI": ["android.database.sqlite.SQLiteDatabase.close()"], "Fixed commit": "eac98bff8907d6157806fdcfcc971eaa9c915219", "Url": "https://api.github.com/repos/MartinLepsy/EinfachSparen", "Date": "2016-07-27T15:34:38Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (swipeOpenOnLongPress) { if ((downPosition) >= 0) { openAnimate(childPosition); } }else { swapChoiceState(childPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6081/buggy-version/swipelistview.src.main.java.com.fortysevendeg.swipelistview.SwipeListViewTouchListener.java", "BodyUseAPI": [], "Fixed commit": "1a23c7961c427fd2eb49bb91dd5b81384f73f3ff", "Url": "https://api.github.com/repos/diegomadruga/android-swipelistview", "Date": "2014-08-28T15:58:31Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chance == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4585/buggy-version/src.main.java.com.blakebr0.mysticalagriculture.MobDrops.java", "BodyUseAPI": [], "Fixed commit": "dd1ac3b7b6f4975faa1b4c7de631f2aff7d39fef", "Url": "https://api.github.com/repos/BlakeBr0/MysticalAgriculture", "Date": "2017-04-05T22:57:52Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.naturalis.nba.dao.format.EntityObject.getDocument()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((specimen.getGatheringEvent()) == null) { return nl.naturalis.nba.dao.format.FormatUtil.EMPTY_STRING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1029/buggy-version/nl.naturalis.nba.dao.src.main.java.nl.naturalis.nba.dao.format.calc.VerbatimCoordinatesCalculator.java", "BodyUseAPI": [], "Fixed commit": "5d349326b49cdff6f79330d56ec5babb19687500", "Url": "https://api.github.com/repos/naturalis/naturalis_data_api", "Date": "2017-11-13T12:21:38Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(flowStats.isFinished())) flowStats.markStopped();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5020/buggy-version/cascading-hadoop.src.main.shared.cascading.flow.hadoop.ProcessFlow.java", "BodyUseAPI": ["cascading.flow.hadoop.ProcessFlow.markStopped()"], "Fixed commit": "3446580d143dcc8d359ff5de7be3c5393c1f51ab", "Url": "https://api.github.com/repos/gerashegalov/cascading", "Date": "2014-08-19T22:42:17Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((Cast.CastApi.getApplicationStatus(mApiClient)) != null) && (mediaAppId.equals(currentAppId))) { relaunchIfRunning = false; }else { relaunchIfRunning = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2594/buggy-version/src.com.connectsdk.service.CastService.java", "BodyUseAPI": [], "Fixed commit": "3bff0027f75464dd9a0766205c0718b63db78bdc", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android", "Date": "2014-07-31T02:31:53Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((Cast.CastApi.getApplicationStatus(mApiClient)) != null) && (mediaAppId.equals(currentAppId))) { relaunchIfRunning = false; }else { relaunchIfRunning = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2594/buggy-version/src.com.connectsdk.service.CastService.java", "BodyUseAPI": [], "Fixed commit": "3bff0027f75464dd9a0766205c0718b63db78bdc", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android", "Date": "2014-07-31T02:31:53Z"},
{"Line": "=>862", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.blueprints.impls.orient.OrientVertex.getRecord()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (outDocument == null) throw new java.lang.IllegalArgumentException(((\"source vertex is invalid (rid=\" + (getIdentity())) + \")\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8206/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientVertex.java", "BodyUseAPI": [], "Fixed commit": "1721dbd9a25b28a2d0313b642c834397bfde950a", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-10-23T17:54:22Z"},
{"Line": "=>866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.blueprints.impls.orient.OrientVertex.getRecord()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (inDocument == null) throw new java.lang.IllegalArgumentException(((\"destination vertex is invalid (rid=\" + (inVertex.getIdentity())) + \")\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8206/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientVertex.java", "BodyUseAPI": [], "Fixed commit": "1721dbd9a25b28a2d0313b642c834397bfde950a", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-10-23T17:54:22Z"},
{"Line": "=>1104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tinkerpop.blueprints.impls.orient.OrientVertex.getRecord()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (record == null) return (\"<invalid record \" + (rawElement.getIdentity())) + \">\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8206/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientVertex.java", "BodyUseAPI": [], "Fixed commit": "1721dbd9a25b28a2d0313b642c834397bfde950a", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-10-23T17:54:22Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((fields.length) % 2) != 0) throw new java.lang.IllegalArgumentException((\"Invalid fields: expecting a pairs of fields as String,Object or a single Map<String,Object>, but found: \" + (java.util.Arrays.toString(fields))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8206/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientElement.java", "BodyUseAPI": ["java.util.Arrays.toString(java.lang.Object[])"], "Fixed commit": "1721dbd9a25b28a2d0313b642c834397bfde950a", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-10-23T17:54:22Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["view.GUI.inputInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (masterPassAttempt != 123) { view.GUI.showMessage(\"Senha Mestre Inv\\ufffdlida\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3781/buggy-version/src.controller.Main.java", "BodyUseAPI": [], "Fixed commit": "062fe7595308b0a64f0bb6067e371bf11b1d541d", "Url": "https://api.github.com/repos/cauapedrosa/Library", "Date": "2016-07-04T05:45:53Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mBusRoute) != null) && ((mBusRouteUid) != null)) { mUpdateLocation.setEnabled(true); }else { mUpdateLocation.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/9095/buggy-version/Projects.Finder.src.com.telepathic.finder.app.BusLocationFragment.java", "BodyUseAPI": [], "Fixed commit": "39f85dde22fc11c93e80878152fb4d74faa5950b", "Url": "https://api.github.com/repos/timlian/Telepathic", "Date": "2013-03-16T15:05:41Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trackConnections) freeConnections.release();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4021/buggy-version/src.main.java.com.ning.http.client.providers.netty.pool.ChannelManager.java", "BodyUseAPI": [], "Fixed commit": "c3248bde49ac7e7d7cf120a2fe6305a621d0e21a", "Url": "https://api.github.com/repos/gerdriesselmann/async-http-client", "Date": "2014-07-15T20:39:04Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stick1.getRawButton(7)) { autoRerun = true; }else { autoRerun = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3731/buggy-version/src.org.usfirst.frc.team5459.robot.Robot.java", "BodyUseAPI": [], "Fixed commit": "eed4ec5ae6dcc5486eabe41b9db20641695ac234", "Url": "https://api.github.com/repos/IHS-FRC-5459/Rook", "Date": "2016-02-23T04:44:32Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.database) != null) { this.database.addTables(((i5.las2peer.services.codeGenerationService.models.microservice.Table[]) (tempTables.values().toArray(new i5.las2peer.services.codeGenerationService.models.microservice.Table[tempTables.size()])))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1249/buggy-version/src.main.i5.las2peer.services.codeGenerationService.models.microservice.Microservice.java", "BodyUseAPI": [], "Fixed commit": "c1e964e9751fccede3c660e966d1df7e043d674d", "Url": "https://api.github.com/repos/rwth-acis/CAE-Code-Generation-Service", "Date": "2015-07-27T16:47:34Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (manager != null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5707/buggy-version/components.entities.api.src.main.java.org.phenotips.entities.internal.AbstractPrimaryEntityGroup.java", "BodyUseAPI": [], "Fixed commit": "ac40fb09242b78e72f5701d3894aca8623834270", "Url": "https://api.github.com/repos/phenotips/phenotips", "Date": "2016-09-15T23:56:55Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(modifiedStaticFields.isEmpty())) { org.evosuite.runtime.classhandling.ModifiedTargetStaticFields.getInstance().addFinalFields(modifiedStaticFields); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7057/buggy-version/runtime.src.main.java.org.evosuite.runtime.instrumentation.CreateClassResetClassAdapter.java", "BodyUseAPI": ["org.evosuite.runtime.classhandling.ModifiedTargetStaticFields.getInstance().addFinalFields(java.util.ArrayList<java.lang.String>)"], "Fixed commit": "a56f41d05fe29dbe3b32dd22dec2d7aaaac8cddf", "Url": "https://api.github.com/repos/EvoSuite/evosuite", "Date": "2016-06-15T19:23:36Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (choice.equalsIgnoreCase(\"y\")) { Control.FileArticle.getInstance().writeFile(articles); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7299/buggy-version/src.Control.Management.java", "BodyUseAPI": [], "Fixed commit": "a3fb4c7e5ac385d10451acc48a55720fe9e87754", "Url": "https://api.github.com/repos/Team1BTBKSHRD/JavaArticleManagement-FileBased", "Date": "2015-06-21T10:58:52Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dongliu.apk.parser.parser.Attributes.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (label != null) { apkMeta.setLabel(label); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7018/buggy-version/src.main.java.net.dongliu.apk.parser.parser.ApkMetaTranslator.java", "BodyUseAPI": ["net.dongliu.apk.parser.bean.ApkMeta.setLabel(java.lang.String)"], "Fixed commit": "3782656d1a1619648e45015f07e89ee069fd89b9", "Url": "https://api.github.com/repos/hsiafan/apk-parser", "Date": "2016-08-10T03:26:24Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dps.domain.entity.Customer.getContactDetails()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cd == null) { cd = new com.dps.domain.entity.ContactDetails(); cust.setContactDetails(cd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1140/buggy-version/dps-web-service.src.main.java.com.dps.web.service.controller.CustomerController.java", "BodyUseAPI": [], "Fixed commit": "5f1779e4118a1868a39ddf8bb032b77280ae4161", "Url": "https://api.github.com/repos/ashanbhag12/dps", "Date": "2016-10-12T17:39:25Z"},
{"Line": "=>837", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.kaikk.mc.gpp.DataStore.getClaimAt(clickedBlock.getLocation(),boolean,playerData.lastClaim)", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(claim.isAdminClaim())) && ((player.hasPermission(\"griefprevention.deleteclaims\")) || (player.hasPermission(\"griefprevention.claiminfo\")))) { if ((claim.getParent()) != null) { claim = claim.getParent(); } final net.kaikk.mc.gpp.PlayerData otherPlayerData = this.dataStore.getPlayerData(claim.getOwnerID()); if ((otherPlayerData.getTimeLastLogin()) == 0) { otherPlayerData.lastSeen = net.kaikk.mc.gpp.GriefPreventionPlus.getInstance().getServer().getOfflinePlayer(claim.getOwnerID()).getLastPlayed(); if ((otherPlayerData.lastSeen) != 0) { this.dataStore.savePlayerData(claim.getOwnerID(), otherPlayerData); } } if ((otherPlayerData.lastSeen) == 0) { net.kaikk.mc.gpp.GriefPreventionPlus.sendMessage(player, TextMode.Info, Messages.PlayerOfflineTime, \"N/A\"); }else { final long daysElapsed = ((java.lang.System.currentTimeMillis()) - (otherPlayerData.getTimeLastLogin())) / (((1000 * 60) * 60) * 24); net.kaikk.mc.gpp.GriefPreventionPlus.sendMessage(player, TextMode.Info, Messages.PlayerOfflineTime, java.lang.String.valueOf(daysElapsed)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6794/buggy-version/src.main.java.net.kaikk.mc.gpp.PlayerEventHandler.java", "BodyUseAPI": ["net.kaikk.mc.gpp.Claim.getParent()", "net.kaikk.mc.gpp.GriefPreventionPlus.sendMessage(org.bukkit.entity.Player,TextMode.Info,Messages.PlayerOfflineTime,java.lang.String)", "net.kaikk.mc.gpp.Claim.getParent()", "net.kaikk.mc.gpp.GriefPreventionPlus.sendMessage(org.bukkit.entity.Player,TextMode.Info,Messages.PlayerOfflineTime,java.lang.String)"], "Fixed commit": "00165ce17ddb2a5c93431c945fb95e7c11402529", "Url": "https://api.github.com/repos/KaiKikuchi/GriefPreventionPlus", "Date": "2016-09-21T22:58:52Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listeningFragments) != null) { for (com.android2ee.formation.service.helper.lib.support.MFragmentSup fragment : listeningFragments) { registerReceiver(serviceCallBackReceiver, new android.content.IntentFilter(fragment.getFragmentId())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6353/buggy-version/ServiceHelperLib.src.com.android2ee.formation.service.helper.lib.support.MFragmentActivity.java", "BodyUseAPI": [], "Fixed commit": "c2fefdc38d1d3ef1edb6e99c3889798ad19ac713", "Url": "https://api.github.com/repos/MathiasSeguy-Android2EE/MythicServiceHelper", "Date": "2013-10-21T14:20:09Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listeningFragments) != null) { for (com.android2ee.formation.service.helper.lib.honeycomb.MFragmentHC fragment : listeningFragments) { registerReceiver(serviceCallBackReceiver, new android.content.IntentFilter(fragment.getFragmentId())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6353/buggy-version/ServiceHelperLib.src.com.android2ee.formation.service.helper.lib.honeycomb.MActivityHC.java", "BodyUseAPI": [], "Fixed commit": "c2fefdc38d1d3ef1edb6e99c3889798ad19ac713", "Url": "https://api.github.com/repos/MathiasSeguy-Android2EE/MythicServiceHelper", "Date": "2013-10-21T14:20:09Z"},
{"Line": "=>393", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentWindow > (senderAdvertisedWindow)) advWinFree.await(); else break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3773/buggy-version/org.iaik.net.RUDP.RUDPConnection.java", "BodyUseAPI": [], "Fixed commit": "2d037c64074e29080c2aa9d2329167cf758eb218", "Url": "https://api.github.com/repos/skillii/RNKN", "Date": "2011-06-19T16:22:38Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastPackageAcked) <= (lastPackageSent)) currentWindow = (lastPackageSent) - (lastPackageAcked); else currentWindow = (seqNrsAvailable) - ((lastPackageAcked) - (lastPackageSent));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3773/buggy-version/org.iaik.net.RUDP.RUDPConnection.java", "BodyUseAPI": [], "Fixed commit": "2d037c64074e29080c2aa9d2329167cf758eb218", "Url": "https://api.github.com/repos/skillii/RNKN", "Date": "2011-06-19T16:22:38Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3566/buggy-version/azure-mgmt-resources.src.main.java.com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.java", "BodyUseAPI": [], "Fixed commit": "2b77b401b724cb5c92e5692029c31cdbaf4f0900", "Url": "https://api.github.com/repos/martinsawicki/azure-sdk-for-java", "Date": "2016-12-29T15:58:15Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3566/buggy-version/azure-mgmt-resources.src.main.java.com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.java", "BodyUseAPI": [], "Fixed commit": "2b77b401b724cb5c92e5692029c31cdbaf4f0900", "Url": "https://api.github.com/repos/martinsawicki/azure-sdk-for-java", "Date": "2016-12-29T15:58:15Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errorMessage.isEmpty()) { if (resultList.isEmpty()) { result.addAll(repairService.find50Repairs()); }else result.addAll(resultList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1531/buggy-version/src.main.java.com.codingschool.repairWeb.Controllers.AdminControllers.RepairTasks.HomeRepairController.java", "BodyUseAPI": [], "Fixed commit": "a77dad407eee6fdbb957d665aeb4910481a62507", "Url": "https://api.github.com/repos/lorcus/repairWeb", "Date": "2017-10-24T20:43:42Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mMessage.isHeartbeat()) { return Type.RPC_HEARTBEAT; }else if (mMessage.isReadResponse()) { return Type.RPC_READ_RESPONSE; }else { return RPCMessage.Type.RPC_UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/357/buggy-version/core.common.src.main.java.alluxio.network.protocol.RPCProtoMessage.java", "BodyUseAPI": ["alluxio.util.proto.ProtoMessage.isReadResponse()"], "Fixed commit": "57d1a958c7ea4afc3328e35188f60ea9b1d0d57f", "Url": "https://api.github.com/repos/jsimsa/alluxio", "Date": "2017-05-22T07:20:50Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (plugin.supportsInventoryStackSize) { try { event.getInventory().setMaxStackSize(SIItems.ITEM_NEW_MAX); } catch (java.lang.AbstractMethodError e) { plugin.supportsInventoryStackSize = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1058/buggy-version/mods.bukkit.src.haveric.stackableItems.listeners.SIPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "18e71d9d0823c9e7c7ee7258d46f0836e6a0becf", "Url": "https://api.github.com/repos/haveric/StackableItems", "Date": "2015-11-13T01:30:01Z"},
{"Line": "=>974", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.Inventory.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (topType == (org.bukkit.event.inventory.InventoryType.ENCHANTING)) { if (rawSlot == 0) { if (plugin.supportsInventoryStackSize) { try { top.setMaxStackSize(1); } catch (java.lang.AbstractMethodError e) { plugin.supportsInventoryStackSize = false; } } if (!(event.isShiftClick())) { return; } }else if (rawSlot == 1) { if (plugin.supportsInventoryStackSize) { try { top.setMaxStackSize(64); } catch (java.lang.AbstractMethodError e) { plugin.supportsInventoryStackSize = false; } } } }else if (topType == (org.bukkit.event.inventory.InventoryType.BREWING)) { if (rawSlot <= 2) { if (!(event.isShiftClick())) { return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1058/buggy-version/mods.bukkit.src.haveric.stackableItems.listeners.SIPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "18e71d9d0823c9e7c7ee7258d46f0836e6a0becf", "Url": "https://api.github.com/repos/haveric/StackableItems", "Date": "2015-11-13T01:30:01Z"},
{"Line": "=>976", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (plugin.supportsInventoryStackSize) { try { top.setMaxStackSize(1); } catch (java.lang.AbstractMethodError e) { plugin.supportsInventoryStackSize = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1058/buggy-version/mods.bukkit.src.haveric.stackableItems.listeners.SIPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "18e71d9d0823c9e7c7ee7258d46f0836e6a0becf", "Url": "https://api.github.com/repos/haveric/StackableItems", "Date": "2015-11-13T01:30:01Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.tika.Tika.detect(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"image/tiff\".equals(mimeType)) { fileExtension = \".tif\"; }else if (\"image/jpeg\".equals(mimeType)) { fileExtension = \".jpg\"; }else { throw new java.lang.RuntimeException(\"Not a tiff or a jpeg file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7636/buggy-version/src.amberdb.model.Copy.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "dc440fde2ed6bad56a3c08da0e6189733b69b78a", "Url": "https://api.github.com/repos/nla/amberdb", "Date": "2015-07-30T01:29:38Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.realm.RealmSchema.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (LSP == null) { io.realm.RealmObjectSchema lsp = schema.create(\"LSP\").addField(\"id\", java.lang.Integer.class, FieldAttribute.PRIMARY_KEY).addField(\"name\", java.lang.String.class).addField(\"abbrev\", java.lang.String.class).addField(\"countryCode\", java.lang.String.class).addField(\"type\", java.lang.Integer.class).addField(\"infoURL\", java.lang.String.class).addField(\"wikiURL\", java.lang.String.class); if (!(schema.get(\"Launch\").hasField(\"lsp\"))) { schema.get(\"Launch\").addRealmObjectField(\"lsp\", lsp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2856/buggy-version/data.src.main.java.me.calebjones.spacelaunchnow.data.models.realm.Migration.java", "BodyUseAPI": [], "Fixed commit": "a4179bd971a10fd2bab12745300bf545ac541963", "Url": "https://api.github.com/repos/ItsCalebJones/SpaceLaunchNow-Android", "Date": "2017-11-27T16:21:12Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == (this)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6867/buggy-version/providence-reflect.src.main.java.net.morimekta.providence.reflect.parser.internal.Token.java", "BodyUseAPI": [], "Fixed commit": "14151436aed2da9464312ab13862fc97d1c655cf", "Url": "https://api.github.com/repos/morimekta/providence", "Date": "2016-11-28T15:05:21Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((o == null) || (!(getClass().equals(o.getClass())))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6867/buggy-version/providence-reflect.src.main.java.net.morimekta.providence.reflect.parser.internal.Token.java", "BodyUseAPI": [], "Fixed commit": "14151436aed2da9464312ab13862fc97d1c655cf", "Url": "https://api.github.com/repos/morimekta/providence", "Date": "2016-11-28T15:05:21Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pars.get(i).getTypeSpecifier().getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((tempParameter.indexOf(\"<\")) >= 0) && ((tempParameter.indexOf(\">\")) >= 0)) { tempParameter = (tempParameter.substring(0, tempParameter.indexOf(\"<\"))) + (tempParameter.substring(((tempParameter.lastIndexOf(\">\")) + 1), tempParameter.length())); str += tempParameter; }else { str += tempParameter; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7674/buggy-version/src.mujava.op.basic.MethodLevelMutator.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "a9eacdda0fee3a29567cc6798899505e643cc5ee", "Url": "https://api.github.com/repos/vrthra/muJava", "Date": "2012-10-15T01:28:57Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentAsyncTask) != null) currentAsyncTask.cancel(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6844/buggy-version/app.src.main.java.com.an1metall.gb_a_audioplayer.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "414ca707ce88f10bc1f7dc3cf8545a2ccc749b7b", "Url": "https://api.github.com/repos/An1metall/GB_A_AudioPlayer", "Date": "2016-08-11T15:36:00Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((backupSystemSettings.get(\"http.proxyPort\")) != null) java.lang.System.setProperty(\"http.proxyPort\", backupSystemSettings.get(\"http.proxyPort\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6206/buggy-version/src.com.koldbyte.codebackup.core.MainWindow.java", "BodyUseAPI": ["java.lang.System.setProperty(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "d1404850483c133e8ba7ff81bd563d4ae235f87d", "Url": "https://api.github.com/repos/koldbyte/CodeBackup", "Date": "2016-09-27T14:21:47Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((backupSystemSettings.get(\"http.proxySet\")) != null) java.lang.System.setProperty(\"http.proxySet\", backupSystemSettings.get(\"http.proxySet\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6206/buggy-version/src.com.koldbyte.codebackup.core.MainWindow.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.System.setProperty(java.lang.String,java.lang.String)"], "Fixed commit": "d1404850483c133e8ba7ff81bd563d4ae235f87d", "Url": "https://api.github.com/repos/koldbyte/CodeBackup", "Date": "2016-09-27T14:21:47Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fihgu.core.functions.Language.languageFile) != null) { boolean isNewText = !(fihgu.core.functions.Language.languageFile.containsKey(line)); result = fihgu.core.functions.Language.languageFile.get(line, line); if (isNewText) fihgu.core.functions.Language.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2545/buggy-version/fihgu.core.functions.Language.java", "BodyUseAPI": [], "Fixed commit": "44d25304b40d89247de70f20d9178f135509720d", "Url": "https://api.github.com/repos/Tarig0/FihgusMods", "Date": "2014-01-27T23:30:20Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.charles.mileagetracker.app.database.orm.TripRow>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((row.polyPoints) != null) { com.google.android.gms.maps.model.Polyline polyline = map.addPolyline(new com.google.android.gms.maps.model.PolylineOptions().addAll(row.polyPoints).width(5).color(color).geodesic(true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2626/buggy-version/app.src.main.java.com.charles.mileagetracker.app.maphandlers.TripHandler.java", "BodyUseAPI": ["com.charles.mileagetracker.app.maphandlers.TripHandler.DrawLines.addPolyline(new com.google.android.gms.maps.model.PolylineOptions().addAll(row.polyPoints).width(5).color(color).geodesic(true))", "com.google.android.gms.maps.model.PolylineOptions.addAll(row.polyPoints)", "new com.google.android.gms.maps.model.PolylineOptions().addAll(row.polyPoints).width(int)", "new com.google.android.gms.maps.model.PolylineOptions().addAll(row.polyPoints).width(5).color(color).geodesic(boolean)", "new com.google.android.gms.maps.model.PolylineOptions().addAll(row.polyPoints).width(5).color(int)"], "Fixed commit": "9bbb9379fc063f78b8e0b44822ab320a78e29599", "Url": "https://api.github.com/repos/charles-d-burton/MileageTracker", "Date": "2015-03-11T23:13:00Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((receiver) != null) { receiver.active = false; try { receiverT.join(100); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3503/buggy-version/src.main.java.org.thingml.java.Component.java", "BodyUseAPI": [], "Fixed commit": "07ab6b013727100de030f2eb761466c4afb6773b", "Url": "https://api.github.com/repos/brice-morin/jasm", "Date": "2014-07-23T13:25:54Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((behavior) != null) { behavior.onExit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3503/buggy-version/src.main.java.org.thingml.java.Component.java", "BodyUseAPI": [], "Fixed commit": "07ab6b013727100de030f2eb761466c4afb6773b", "Url": "https://api.github.com/repos/brice-morin/jasm", "Date": "2014-07-23T13:25:54Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6643/buggy-version/src.main.java.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "a2d11046a7a2e16681c7eb820f298601f78731ad", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlockState(vec.down())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((down.getBlock()) == (BlockDust.INSTANCE)) { worldObj.setBlockToAir(vec.down()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8044/buggy-version/ThutCore.src.main.java.thut.core.common.blocks.fluids.BlockMelt.java", "BodyUseAPI": [], "Fixed commit": "fc535ff254e01bdbab30bad5a22675eed56bd475", "Url": "https://api.github.com/repos/Thutmose/Thut", "Date": "2016-06-01T00:13:41Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Settings.Secure.getString(context.getContentResolver(),Settings.Secure.LOCATION_PROVIDERS_ALLOWED)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(status)) { status = \"Unknown\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8945/buggy-version/app.src.main.java.net.gmsworld.devicelocator.Services.SmsSenderService.java", "BodyUseAPI": [], "Fixed commit": "fd1c9d98354c14b356b7551df3518edda997451e", "Url": "https://api.github.com/repos/jstakun/device-locator", "Date": "2017-08-05T17:51:55Z"},
{"Line": "=>431", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outliers == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4448/buggy-version/src.main.org.deidentifier.arx.ARXResult.java", "BodyUseAPI": [], "Fixed commit": "9b7410dc34fcda20118e4ed07e85f8105ffb4453", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2015-12-17T17:08:45Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!ret) { delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4308/buggy-version/bundles.org.savara.protocol.src.main.java.org.savara.protocol.internal.aggregator.LocalProtocolUnit.java", "BodyUseAPI": [], "Fixed commit": "1505a31f8c2b5798f375d462b7a65c85c46069be", "Url": "https://api.github.com/repos/objectiser/savara-core", "Date": "2012-05-21T22:23:52Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getWhitespaceFollowedNode(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((whitespaceFollowedAst.getNextSibling()) == null) || ((whitespaceFollowedAst.getNextSibling().getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.ANNOTATIONS))) { final int whitespaceColumnNo = com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(whitespaceFollowedAst); final int whitespaceLineNo = whitespaceFollowedAst.getLineNo(); if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) { log(whitespaceLineNo, whitespaceColumnNo, com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.MSG_KEY, whitespaceFollowedAst.getText()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6944/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getPositionAfter(com.puppycrawl.tools.checkstyle.api.DetailAST)", "com.puppycrawl.tools.checkstyle.api.DetailAST.getText()", "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.log(int,int,java.lang.String,whitespaceFollowedAst.getText())"], "Fixed commit": "ed36570050b42873e1437da90a5159947b387c36", "Url": "https://api.github.com/repos/sergileon/checkstyle", "Date": "2017-09-05T11:43:02Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (total == 0) { total = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7977/buggy-version/src.main.java.com.intel.chimera.StreamInput.java", "BodyUseAPI": [], "Fixed commit": "80a8628bb5aeb61f186ade3a8abafe7c0421e3ff", "Url": "https://api.github.com/repos/intel-hadoop/chimera", "Date": "2015-11-11T08:49:18Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((worldObj.getBlockState(getPos()).getBlock()) instanceof buildcraft.builders.block.BlockBuilder)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1321/buggy-version/builders.java.buildcraft.builders.tile.TileBuilder.java", "BodyUseAPI": [], "Fixed commit": "fde4d2d5d1803d04dc5e1c8dc5c20a3c2671f55b", "Url": "https://api.github.com/repos/AlexIIL/BuildCraft", "Date": "2015-10-03T15:31:34Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worldObj.isRemote) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1321/buggy-version/builders.java.buildcraft.builders.tile.TileBuilder.java", "BodyUseAPI": [], "Fixed commit": "fde4d2d5d1803d04dc5e1c8dc5c20a3c2671f55b", "Url": "https://api.github.com/repos/AlexIIL/BuildCraft", "Date": "2015-10-03T15:31:34Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(directory.exists())) { directory.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3943/buggy-version/src.org.dobots.robots.BrainlinkDevice.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "2f323a69c5b8338460eb8245334d15b579633f56", "Url": "https://api.github.com/repos/mrquincle/swarm-control", "Date": "2012-12-05T13:14:48Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.csstudio.opibuilder.validation.Activator.getInstance().isNestMarkers()) { org.csstudio.opibuilder.validation.core.ValidationFailure f = getValidationFailure(element); if (f != null) return f.hasSubFailures(); if (original.hasChildren(element)) { java.lang.Object[] obj = filterChildren(original.getChildren(element)); return (obj.length) > 0; } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2791/buggy-version/applications.plugins.org.csstudio.opibuilder.validation.src.org.csstudio.opibuilder.validation.core.ui.ContentProvider.java", "BodyUseAPI": [], "Fixed commit": "c44d7474ead19e97c2987b34c5ae23f8d75dbce9", "Url": "https://api.github.com/repos/css-iter/cs-studio", "Date": "2015-03-09T09:14:27Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getSerializableExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (type == null) type = com.pindroid.Constants.BookmarkViewType.VIEW;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1790/buggy-version/src.com.pindroid.activity.ViewBookmark.java", "BodyUseAPI": [], "Fixed commit": "4062c8b94e6be4502adec10517332c5d9e9dad0f", "Url": "https://api.github.com/repos/maxpower47/PinDroid", "Date": "2012-04-06T19:46:21Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"strikethrough\".equalsIgnoreCase(format)) { ansi.a(Attribute.STRIKETHROUGH_ON); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6312/buggy-version/src.main.java.com.github.games647.colorconsole.ColorPluginAppender.java", "BodyUseAPI": [], "Fixed commit": "eeee6d99b6dfec71de43dfe0270a2517b5458c4c", "Url": "https://api.github.com/repos/games647/ColorConsole", "Date": "2016-05-07T07:39:47Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"hidden\".equalsIgnoreCase(format)) { ansi.a(Attribute.CONCEAL_OFF); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6312/buggy-version/src.main.java.com.github.games647.colorconsole.ColorPluginAppender.java", "BodyUseAPI": [], "Fixed commit": "eeee6d99b6dfec71de43dfe0270a2517b5458c4c", "Url": "https://api.github.com/repos/games647/ColorConsole", "Date": "2016-05-07T07:39:47Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.select.Elements.last()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (\"Comments\".equals(last.text())) { pages.remove(last); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4576/buggy-version/src.main.java.de.herrlock.manga.host.Fox.java", "BodyUseAPI": ["org.jsoup.select.Elements.remove(org.jsoup.nodes.Element)"], "Fixed commit": "b12f149ad7e4b7646c717e2d9406ba6acd6a7c0a", "Url": "https://api.github.com/repos/herrlock/Manga", "Date": "2015-01-26T22:32:32Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.gulshansingh.hackerlivewallpaper.BitSequence.charSet.length()) == 0) { throw new java.lang.RuntimeException(\"Character set length can't be 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/473/buggy-version/app.src.main.java.com.gulshansingh.hackerlivewallpaper.BitSequence.java", "BodyUseAPI": [], "Fixed commit": "3f01b304fd2050995a1724d4ce80d4294480fe39", "Url": "https://api.github.com/repos/gsingh93/hacker-live-wallpaper", "Date": "2015-01-02T05:41:36Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (yVelocity >= 0) { body.setLinearVelocity(body.getLinearVelocity().x, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/444/buggy-version/core.src.com.develorain.game.Tools.PlayerController.java", "BodyUseAPI": [], "Fixed commit": "e0f64415c52153f530ead1207d9e6d9bf4c8ca30", "Url": "https://api.github.com/repos/Develorain/Illumination", "Date": "2015-10-30T23:40:49Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showLogo) net.minecraft.client.Minecraft.getMinecraft().fontRendererObj.drawString(((((((((net.minecraft.util.EnumChatFormatting.DARK_PURPLE) + \"\") + (net.minecraft.util.EnumChatFormatting.BOLD)) + (com.sirhuntpredator.pixelplus.PixelPlus.MODID)) + (net.minecraft.util.EnumChatFormatting.GOLD)) + \" Private Beta \") + (this.VERSION)) + (net.minecraft.util.EnumChatFormatting.BOLD)), 5, 3, 16777215);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/882/buggy-version/src.main.java.com.sirhuntpredator.pixelplus.PixelPlus.java", "BodyUseAPI": [], "Fixed commit": "f34628ec5d9502eea8b3df4dd8e5b19d6512e96b", "Url": "https://api.github.com/repos/Eladkay/PixelPlus-1.8", "Date": "2015-12-08T17:04:16Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((converter) == null) { try { constructor = toCls.getDeclaredConstructor(); constructor.setAccessible(true); } catch (java.lang.NoSuchMethodException e) { throw new com.iostate.hasta.util.exception.BeanAnalysisException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/455/buggy-version/hasta-util.src.main.java.com.iostate.hasta.util.BeanCopier.java", "BodyUseAPI": [], "Fixed commit": "2a503ec1c2a8fd11e1110fb5fd9512c92e9f3751", "Url": "https://api.github.com/repos/sorra/hasta", "Date": "2016-07-18T09:35:00Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((converter) == null) { try { constructor = toCls.getDeclaredConstructor(); constructor.setAccessible(true); } catch (java.lang.NoSuchMethodException e) { throw new com.iostate.hasta.util.exception.BeanAnalysisException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/455/buggy-version/hasta-util.src.main.java.com.iostate.hasta.util.BeanCopier.java", "BodyUseAPI": [], "Fixed commit": "2a503ec1c2a8fd11e1110fb5fd9512c92e9f3751", "Url": "https://api.github.com/repos/sorra/hasta", "Date": "2016-07-18T09:35:00Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pathfindingSystem) == null) { assert false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8877/buggy-version/src.com.team1ofus.hermes.MapManagement.java", "BodyUseAPI": [], "Fixed commit": "da172dd9a120bfa0a9582e9f5c1021873abc432e", "Url": "https://api.github.com/repos/Ares513/Hermes", "Date": "2015-11-20T20:35:38Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.zitomedia.repo.web.scripts.workflow.TaskInstancesGet.logger.isDebugEnabled()) { com.zitomedia.repo.web.scripts.workflow.TaskInstancesGet.logger.debug(java.lang.String.format(\"NameDesComparator [%s] [%s] [%d]\", name1, name2, result)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/993/buggy-version/zitomedia-ap-repo.src.main.java.com.zitomedia.repo.web.scripts.workflow.TaskInstancesGet.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "d1dc8706e8a5edf0288bbda5f664dc983d2a048d", "Url": "https://api.github.com/repos/ZitoMedia/approject", "Date": "2015-01-10T12:20:17Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.zitomedia.repo.web.scripts.workflow.TaskInstancesGet.logger.isDebugEnabled()) { com.zitomedia.repo.web.scripts.workflow.TaskInstancesGet.logger.debug(java.lang.String.format(\"NameAscComparator [%s] [%s] [%d]\", name1, name2, result)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/993/buggy-version/zitomedia-ap-repo.src.main.java.com.zitomedia.repo.web.scripts.workflow.TaskInstancesGet.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "d1dc8706e8a5edf0288bbda5f664dc983d2a048d", "Url": "https://api.github.com/repos/ZitoMedia/approject", "Date": "2015-01-10T12:20:17Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((isbn.length()) != 13) || (count.equals(\"\"))) { map.put(\"status\", \"you have wrong input!\"); return map; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/430/buggy-version/wechat_program.src.main.java.com.lendbook.wechat_program.controller.AdminOperator.java", "BodyUseAPI": [], "Fixed commit": "b715f07eb95989a501d7e75a29c25d51663f1b4e", "Url": "https://api.github.com/repos/gdccwxx/little_wechat_Java", "Date": "2017-12-23T10:12:46Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lendbook.wechat_program.Tools.GetPlaceByIp.getResponse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (str.equals(\"\")) { map.put(\"status\", \"none of this book in douban\"); return map; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/430/buggy-version/wechat_program.src.main.java.com.lendbook.wechat_program.controller.AdminOperator.java", "BodyUseAPI": [], "Fixed commit": "b715f07eb95989a501d7e75a29c25d51663f1b4e", "Url": "https://api.github.com/repos/gdccwxx/little_wechat_Java", "Date": "2017-12-23T10:12:46Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arr[(((e.getX()) - (dX)) / 20)][(((e.getY()) - (dY)) / 20)].flagged) (bCount)--; else if (!(arr[(((e.getX()) - (dX)) / 20)][(((e.getY()) - (dY)) / 20)].isRevealed())) (bCount)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5845/buggy-version/src.ScreenEngine.java", "BodyUseAPI": ["java.awt.event.MouseEvent.getX()", "arr[(((e.getX()) - (dX)) / 20)][(((e.getY()) - (dY)) / 20)].isRevealed()", "java.awt.event.MouseEvent.getY()"], "Fixed commit": "0f8065d13e8ab2d4cf2283c41f6ec746c4d8a999", "Url": "https://api.github.com/repos/km3r/MasterSweep", "Date": "2014-01-17T05:19:29Z"},
{"Line": "=>775", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.creativemd.littletiles.common.blocks.BlockTile.loadingTileEntityFromWorld) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4779/buggy-version/src.main.java.com.creativemd.littletiles.common.blocks.BlockTile.java", "BodyUseAPI": [], "Fixed commit": "30d6cbbfa3d22bfaa15bec18efae6810541a071d", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-02-09T16:02:58Z"},
{"Line": "=>726", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.creativemd.littletiles.common.blocks.BlockTile.loadingTileEntityFromWorld) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4779/buggy-version/src.main.java.com.creativemd.littletiles.common.blocks.BlockTile.java", "BodyUseAPI": [], "Fixed commit": "30d6cbbfa3d22bfaa15bec18efae6810541a071d", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-02-09T16:02:58Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (worldObj.isRemote) structure.isWaitingForApprove = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4779/buggy-version/src.main.java.com.creativemd.littletiles.common.entity.EntityAnimation.java", "BodyUseAPI": [], "Fixed commit": "30d6cbbfa3d22bfaa15bec18efae6810541a071d", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-02-09T16:02:58Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stateQuery != null) { paramString = \"&state=\" + stateQuery; }else { paramString = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4416/buggy-version/src.main.java.com.github.torbinsky.billing.recurly.RecurlyClient.java", "BodyUseAPI": [], "Fixed commit": "859f6af5b186f59cf04152442679f5c33cfa9030", "Url": "https://api.github.com/repos/torbinsky/recurly-java-library", "Date": "2016-02-12T00:23:07Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.graphiti.features.context.IUpdateContext.getPictogramElement()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cd.getGraphicsAlgorithm()) instanceof org.eclipse.graphiti.mm.algorithms.Text) { connection = cd.getConnection(); text = ((org.eclipse.graphiti.mm.algorithms.Text) (cd.getGraphicsAlgorithm())); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8114/buggy-version/de.opalproject.vespucci.sliceEditor.src.de.opalproject.vespucci.sliceEditor.features.UpdateConstraintFeature.java", "BodyUseAPI": ["org.eclipse.graphiti.mm.pictograms.ConnectionDecorator.getConnection()", "org.eclipse.graphiti.mm.pictograms.ConnectionDecorator.getGraphicsAlgorithm()"], "Fixed commit": "40ef14a0f8f17231a16c8d67dc2e096bc3c41a67", "Url": "https://api.github.com/repos/Delors/Vespucci2", "Date": "2013-01-30T10:23:00Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((runner.getReporter()) != null) { com.marklogic.contentpump.utilities.AuditUtil.auditMlcpFinish(job.getConfiguration(), job.getJobName(), runner.getReporter().counters); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/974/buggy-version/mlcp.src.main.java.com.marklogic.contentpump.ContentPump.java", "BodyUseAPI": ["com.marklogic.contentpump.LocalJobRunner.getReporter()", "com.marklogic.contentpump.utilities.AuditUtil.auditMlcpFinish(job.getConfiguration(),job.getJobName(),runner.getReporter().counters)"], "Fixed commit": "07dfc2304c24f97db7af1fd2b57ddda8e579951c", "Url": "https://api.github.com/repos/marklogic/marklogic-contentpump", "Date": "2016-08-09T20:40:41Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (lCurrentEvent != null) { lCurrentEvent.setStatus(this.getEventStatus(lCurrentEvent)); lEvents.add(lCurrentEvent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2637/buggy-version/regataiades-local-app.src.main.java.org.mtdev.regataiades.app.business.DataCollector.java", "BodyUseAPI": ["org.mtdev.regataiades.model.Event.setStatus(int)", "org.mtdev.regataiades.app.business.DataCollector.getEventStatus(org.mtdev.regataiades.model.Event)", "java.util.Collection<org.mtdev.regataiades.model.Event>.add(org.mtdev.regataiades.model.Event)"], "Fixed commit": "7bec37234403c150b6eb94fd560201b5a6808b65", "Url": "https://api.github.com/repos/una-club/regataiades-app", "Date": "2015-05-08T17:30:41Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ogg.crm.entity.Customer.getLastestTradeTime()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(\"null\".equals(lastTradeTime))) { if (lastTradeTime.contains(\".\")) { int index = lastTradeTime.indexOf(\".\"); lastTradeTime = lastTradeTime.substring(index); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8482/buggy-version/crm.src.main.java.com.ogg.crm.ui.activity.CustomerAddActivity.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "018c88714983d2932100e2e18b786b4cbf4184c7", "Url": "https://api.github.com/repos/xiguofeng/Crm", "Date": "2015-12-10T03:02:06Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (status != null) { final org.mifosplatform.portfolio.loanaccount.domain.LoanStatus loanStatus = org.mifosplatform.portfolio.loanaccount.domain.LoanStatus.fromInt(status); if ((loanStatus.isActiveOrAwaitingApprovalOrDisbursal()) || (loanStatus.isUnderTransfer())) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1533/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.account.service.AccountAssociationsReadPlatformServiceImpl.java", "BodyUseAPI": ["org.mifosplatform.portfolio.loanaccount.domain.LoanStatus.fromInt(java.lang.Integer)"], "Fixed commit": "1646995525c715ae0773bbaa0d296ae6df1158a0", "Url": "https://api.github.com/repos/emmanuelnnaa/mifosx", "Date": "2014-10-16T14:46:16Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (status != null) { final org.mifosplatform.portfolio.savings.domain.SavingsAccountStatusType saveStatus = org.mifosplatform.portfolio.savings.domain.SavingsAccountStatusType.fromInt(status); if ((saveStatus.isActiveOrAwaitingApprovalOrDisbursal()) || (saveStatus.isUnderTransfer())) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1533/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.account.service.AccountAssociationsReadPlatformServiceImpl.java", "BodyUseAPI": ["org.mifosplatform.portfolio.savings.domain.SavingsAccountStatusType.fromInt(java.lang.Integer)"], "Fixed commit": "1646995525c715ae0773bbaa0d296ae6df1158a0", "Url": "https://api.github.com/repos/emmanuelnnaa/mifosx", "Date": "2014-10-16T14:46:16Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.ceil(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (targetPage > pagesCount) targetPage = pagesCount;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8824/buggy-version/src.main.java.com.itechart.contactapp.command.ShowContactsCommand.java", "BodyUseAPI": [], "Fixed commit": "c07d59f18f5210637aec79020c40a3bf354fffa4", "Url": "https://api.github.com/repos/dmkach/contacts", "Date": "2016-10-08T21:06:07Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetPage < 1) targetPage = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8824/buggy-version/src.main.java.com.itechart.contactapp.command.ShowContactsCommand.java", "BodyUseAPI": [], "Fixed commit": "c07d59f18f5210637aec79020c40a3bf354fffa4", "Url": "https://api.github.com/repos/dmkach/contacts", "Date": "2016-10-08T21:06:07Z"},
{"Line": "=>1458", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (definitive) { deleteComponentData(componentId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/38/buggy-version/lib-core.src.main.java.com.stratelia.webactiv.beans.admin.Admin.java", "BodyUseAPI": [], "Fixed commit": "e11e25675ce7b15aa5e838c8a1fc7ef6a7d04707", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2014-11-25T08:46:59Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cz.mff.cuni.autickax.Autickax.getInstance()) != null) { this.texture = cz.mff.cuni.autickax.Autickax.getInstance().assets.getGraphics(name); setMeasurements(this.texture.getRegionWidth(), this.texture.getRegionHeight()); return true; }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8746/buggy-version/Auticka.src.cz.mff.cuni.autickax.entities.GameObject.java", "BodyUseAPI": [], "Fixed commit": "9023bc5909c7a841a31e47dbe37213c2437336ce", "Url": "https://api.github.com/repos/machpavel/autickax", "Date": "2014-04-24T11:58:02Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cz.mff.cuni.autickax.Autickax.getInstance()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8746/buggy-version/Auticka.src.cz.mff.cuni.autickax.entities.Car.java", "BodyUseAPI": [], "Fixed commit": "9023bc5909c7a841a31e47dbe37213c2437336ce", "Url": "https://api.github.com/repos/machpavel/autickax", "Date": "2014-04-24T11:58:02Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasStudents) { groupsList.add(group); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1401/buggy-version/src.dao.StudentDAO.java", "BodyUseAPI": [], "Fixed commit": "b6cd70d2918ecd995f254642889a40aa21fc698f", "Url": "https://api.github.com/repos/mustafa1453/StudentsTestProject", "Date": "2015-11-18T20:07:52Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.gibar.crawler.AbstractCrawler.crawl(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((null == result) || (0 == (result.length()))) { return com.google.common.collect.Lists.newArrayList(); }else if (result.substring(0, 1).equals(\"[\")) { java.lang.reflect.Type jsonType = new com.google.gson.reflect.TypeToken<java.util.ArrayList<java.util.HashMap<java.lang.String, java.lang.Object>>>() {}.getType(); return new com.google.gson.Gson().fromJson(result, jsonType); }else { java.lang.reflect.Type jsonType = new com.google.gson.reflect.TypeToken<java.util.Map<java.lang.String, java.lang.Object>>() {}.getType(); java.util.Map<java.lang.String, java.lang.Object> transformmedResult = new com.google.gson.Gson().fromJson(result, jsonType); return com.google.common.collect.Lists.newArrayList(transformmedResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4976/buggy-version/src.main.java.co.gibar.crawler.AbstractCrawler.java", "BodyUseAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)", "com.google.gson.Gson.fromJson(java.lang.String,java.lang.reflect.Type)", "java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "ffe2d4b7a4048e2abf7fcde3ca4e7205066b9f82", "Url": "https://api.github.com/repos/abola/CrawlerTmp", "Date": "2015-09-04T12:54:35Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(FileUtils.VERSION)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (jsVersionID != null) oldVersion = java.lang.Integer.parseInt(jsVersionID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2213/buggy-version/collect_app.src.main.java.com.renngiles.beesweet.collect.android.tasks.DownloadFormsTask.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "e7c8859f573b3578841876d0d03315c3b349cbde", "Url": "https://api.github.com/repos/hogliux/collect", "Date": "2017-04-22T12:21:27Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.query(PersonsContract.Person.TABLE_NAME,java.lang.String[],<nulltype>,<nulltype>,<nulltype>,<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((cursor == null) || ((cursor.getCount()) == 0)) return returnList;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8928/buggy-version/src.ch.santo.howoldis.business.PersonService.java", "BodyUseAPI": [], "Fixed commit": "70387dd1339ea5ed34a20e812f79f5a768f1b2f9", "Url": "https://api.github.com/repos/olle71/howoldis", "Date": "2014-02-07T22:20:53Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((holder.protoId) != 0) { idMap.remove(holder.protoId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7634/buggy-version/actor-sdk.sdk-core.core.core-shared.src.main.java.im.actor.core.network.api.ApiBroker.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Long, java.lang.Long>.remove(long)"], "Fixed commit": "f10212d33abc7d33903da9524cb7381198fd1daf", "Url": "https://api.github.com/repos/actorapp/actor-platform", "Date": "2016-07-13T03:22:57Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((produkNow.getmQty()) == 0) mBillings.remove(produkNow);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/128/buggy-version/app.src.main.java.com.jomblo_terhormat.badjigurrestopelayan.activity.BillingActivity.java", "BodyUseAPI": ["java.util.List<com.jomblo_terhormat.badjigurrestopelayan.entity.Produk>.remove(com.jomblo_terhormat.badjigurrestopelayan.entity.Produk)"], "Fixed commit": "3224c6f2438e1a214b49d79e52b44587256c2f25", "Url": "https://api.github.com/repos/ahmad-mukhlish/Badjigur-Resto-Pelayan", "Date": "2017-12-10T02:58:10Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.classmate.ResolvedType.typeParametersFor(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (resolvedTypes == null) { resolvedTypes = resolvedList.typeParametersFor(java.lang.Iterable.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4170/buggy-version/src.main.java.com.mangofactory.swagger.models.ResolvedCollection.java", "BodyUseAPI": [], "Fixed commit": "08575092b9115adcdff8ca30a39245e60ab676fe", "Url": "https://api.github.com/repos/thomaschristensen/swagger-springmvc", "Date": "2013-04-28T08:39:57Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((resolvedTypes == null) || (resolvedTypes.isEmpty())) throw new java.lang.IllegalArgumentException((\"Unknown List derivative \" + member));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4170/buggy-version/src.main.java.com.mangofactory.swagger.models.ResolvedCollection.java", "BodyUseAPI": [], "Fixed commit": "08575092b9115adcdff8ca30a39245e60ab676fe", "Url": "https://api.github.com/repos/thomaschristensen/swagger-springmvc", "Date": "2013-04-28T08:39:57Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(Constants.NUMBER_ITEMS_PER_PAGE_KEY)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((itemsNumber != null) && (!(itemsNumber.trim().isEmpty()))) { try { items = java.lang.Integer.valueOf(itemsNumber); } catch (java.lang.NumberFormatException ex) { org.occiware.mart.servlet.impl.ServletEntry.LOGGER.error(\"The parameter \\\"number\\\" is not set correctly, please check the parameter, this must be a number.\"); org.occiware.mart.servlet.impl.ServletEntry.LOGGER.error((\"Default to \" + items)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/344/buggy-version/org.occiware.mart.servlet.src.main.java.org.occiware.mart.servlet.impl.ServletEntry.java", "BodyUseAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Fixed commit": "40727b94875ff0450181e83559a4ab567f0f23bf", "Url": "https://api.github.com/repos/occiware/MartServer", "Date": "2017-07-05T06:54:00Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arg.hasField()) { setField(arg.getFieldName(), arg.getFieldId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5235/buggy-version/OpenRedmine.src.main.java.jp.redmine.redmineclient.param.FilterArgument.java", "BodyUseAPI": ["jp.redmine.redmineclient.param.FilterArgument.setField(java.lang.String,long)", "jp.redmine.redmineclient.param.FilterArgument.getFieldId()", "jp.redmine.redmineclient.param.FilterArgument.getFieldName()"], "Fixed commit": "11ca33d1a45872d2a67bcdf86aa99f9e54709b7c", "Url": "https://api.github.com/repos/indication/OpenRedmine", "Date": "2015-10-14T14:21:00Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (data != null) result = data.optString(\"result\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2679/buggy-version/app.src.main.java.com.ycy.voicerobot.module.main.presenter.MainPresenter.java", "BodyUseAPI": ["org.json.JSONObject.optString(java.lang.String)"], "Fixed commit": "29df18574e7ec1a92708355e27fd1bc2f0849b0d", "Url": "https://api.github.com/repos/snailycy/VoiceRobot", "Date": "2017-02-22T04:38:36Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value == null) || (((java.lang.String) (value)).isEmpty())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4684/buggy-version/Platform.src.main.java.com.getknowledge.platform.base.repositories.FilterQuery.java", "BodyUseAPI": [], "Fixed commit": "0d4c57e58eaae5bceeca463839d01babee8148ea", "Url": "https://api.github.com/repos/DenisMd/PlatformGetKnowledge", "Date": "2016-02-01T04:32:38Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enumList.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4684/buggy-version/Platform.src.main.java.com.getknowledge.platform.base.repositories.FilterQuery.java", "BodyUseAPI": [], "Fixed commit": "0d4c57e58eaae5bceeca463839d01babee8148ea", "Url": "https://api.github.com/repos/DenisMd/PlatformGetKnowledge", "Date": "2016-02-01T04:32:38Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tm_Path.exists())) { tm_Path.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/181/buggy-version/flink-core.src.main.java.org.apache.flink.configuration.GlobalConfiguration.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "c89946d5e3ad19dc0485e29ab3b3863b232f4337", "Url": "https://api.github.com/repos/dukechain/ConfinedRecovery", "Date": "2016-02-16T08:56:32Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (row > 0) { java.lang.String bookName = ((java.lang.String) (bookTable.getValueAt(row, 1))); openDetailBookWindow(bookName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6419/buggy-version/src.view.StartWindow.java", "BodyUseAPI": ["javax.swing.JTable.getValueAt(int,int)"], "Fixed commit": "5e71fe312629f0cd0e943ebf1e7ea09196d481ee", "Url": "https://api.github.com/repos/marcelamsler/miniprojectUI", "Date": "2013-10-30T12:23:09Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (row > 0) { domain.Customer cust = library.getCustomers().get(table_1.convertRowIndexToModel(row)); table.setModel(new tablemodel.AddLoanWindowLoanTableModel(library, cust)); table.setEnabled(true); panel_2.setBorder(new javax.swing.border.TitledBorder(null, (((\"Ausleihen von \" + (cust.getSurname())) + \" \") + (cust.getName())), javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, null, null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6419/buggy-version/src.view.AddLoanWindow.java", "BodyUseAPI": ["library.getCustomers().get(int)", "javax.swing.JTable.convertRowIndexToModel(int)"], "Fixed commit": "5e71fe312629f0cd0e943ebf1e7ea09196d481ee", "Url": "https://api.github.com/repos/marcelamsler/miniprojectUI", "Date": "2013-10-30T12:23:09Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.server.distributed.ODistributedConfiguration.getMasterServer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (iLocalNode.equals(masterServer)) return iClusterNames.iterator().next();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7898/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.ODistributedConfiguration.java", "BodyUseAPI": [], "Fixed commit": "2f02541e5af8a61a735a7454fe95ee3f6ed480f8", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-02-09T18:27:33Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (root.key)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6954/buggy-version/src.main.java.net.epsilony.tb.rangesearch.LayeredRangeTree.java", "BodyUseAPI": [], "Fixed commit": "db5addae2349cc4c0a6fb809aead45a09d9e8263", "Url": "https://api.github.com/repos/epsilony/tb", "Date": "2014-05-01T14:30:49Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.getNodeId()) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1632/buggy-version/src.org.exist.storage.dom.NodeIterator.java", "BodyUseAPI": [], "Fixed commit": "76b921d2eba1c980c19c8138b0b5b52de7ae8103", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-08T23:56:08Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.nativelibs4java.opencl.library.Platform.isWindows()) com.nativelibs4java.opencl.library.BridJ.addNativeLibraryAlias(\"OpenGL\", \"OpenGL32\"); else if (com.nativelibs4java.opencl.library.Platform.isUnix()) com.nativelibs4java.opencl.library.BridJ.addNativeLibraryAlias(\"OpenGL\", \"GL\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1086/buggy-version/libraries.OpenCL.OpenCL4Java.src.main.java.com.nativelibs4java.opencl.library.OpenGLContextUtils.java", "BodyUseAPI": [], "Fixed commit": "e87e01fd47bbf62128aaecbd65a37b503278470c", "Url": "https://api.github.com/repos/twitwi/nativelibs4java", "Date": "2012-05-21T19:23:13Z"},
{"Line": "=>718", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkLF) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/155/buggy-version/src.main.java.com.fasterxml.jackson.dataformat.csv.impl.CsvReader.java", "BodyUseAPI": [], "Fixed commit": "4173278d6425aa13961d867c49f0bbca2a9526b1", "Url": "https://api.github.com/repos/FasterXML/jackson-dataformat-csv", "Date": "2012-11-21T21:26:11Z"},
{"Line": "=>745", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == '\\n') { ++(_currInputRow); _currInputRowStart = ptr; }else if (c == (_escapeChar)) { _inputPtr = ptr; c = _unescape(); outBuf[(outPtr++)] = c; continue main_loop; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/155/buggy-version/src.main.java.com.fasterxml.jackson.dataformat.csv.impl.CsvReader.java", "BodyUseAPI": [], "Fixed commit": "4173278d6425aa13961d867c49f0bbca2a9526b1", "Url": "https://api.github.com/repos/FasterXML/jackson-dataformat-csv", "Date": "2012-11-21T21:26:11Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reader.readLine()) == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1308/buggy-version/rest.rest-cli.src.main.java.org.ow2.proactive_grid_cloud_portal.cli.cmd.sched.SubmitJobCommand.java", "BodyUseAPI": [], "Fixed commit": "8fad255588dd243a5c615e8a48a243e67988fef1", "Url": "https://api.github.com/repos/paraita/scheduling", "Date": "2017-07-04T13:24:23Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.commons.lang.StringUtils.split(strArgument, \"&\")) == null) return new java.util.HashMap<java.lang.String, java.lang.String>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6678/buggy-version/com.hangum.tadpole.commons.sql.src.com.hangum.tadpole.engine.restful.RESTfulAPIUtils.java", "BodyUseAPI": [], "Fixed commit": "9aa22ef9207c49f94fd95bcb121af300d78fd191", "Url": "https://api.github.com/repos/hangum/TadpoleForDBTools", "Date": "2015-10-04T23:14:47Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((dataSnapshot.exists()) && (message != null)) { if ((message.getText()) != null) { chatLastMessage.setText(message.getText()); } if ((message.getTimestamp()) != null) { chatTimestamp.setText(formatTimestamp(message.getTimestampLong(), getResources().getString(R.string.chat_timestamp_same_day), getResources().getString(R.string.chat_timestamp_same_week), getResources().getString(R.string.chat_timestamp_default))); } if (mUserKey.equals(message.getSenderKey())) { if ((message.getReadReceipts()) != null) { chatReadReceipt.setImageResource(R.drawable.ic_message_seen); }else if ((message.getDeliveryReceipts()) != null) { chatReadReceipt.setImageResource(R.drawable.ic_message_delivered); }else { chatReadReceipt.setImageResource(R.drawable.ic_message_pending); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4225/buggy-version/app.src.main.java.io.videtur.ignis.ui.MainActivity.java", "BodyUseAPI": ["io.videtur.ignis.model.Message.getTimestamp()", "io.videtur.ignis.model.Message.getText()", "io.videtur.ignis.model.Message.getSenderKey()", "io.videtur.ignis.model.Message.getReadReceipts()", "android.widget.TextView.setText(formatTimestamp(message.getTimestampLong(), getResources().getString(R.string.chat_timestamp_same_day), getResources().getString(R.string.chat_timestamp_same_week), getResources().getString(R.string.chat_timestamp_default)))", "io.videtur.ignis.ui.MainActivity.4.formatTimestamp(message.getTimestampLong(),getResources().getString(R.string.chat_timestamp_same_day),getResources().getString(R.string.chat_timestamp_same_week),getResources().getString(R.string.chat_timestamp_default))", "android.widget.TextView.setText(message.getText())", "io.videtur.ignis.model.Message.getTimestampLong()", "io.videtur.ignis.model.Message.getText()", "io.videtur.ignis.model.Message.getDeliveryReceipts()", "java.lang.String.equals(message.getSenderKey())"], "Fixed commit": "dbc8da0e3f130341a3aa9023efe9971929cbd2c9", "Url": "https://api.github.com/repos/eoin-obrien/Ignis", "Date": "2017-04-05T15:53:44Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (osname.contains(\"mac\")) { return \"libsqlitejdbc.jnilib\"; }else if (osname.contains(\"bsd\")) { return null; }else { return \"libsqlitejdbc.so\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5915/buggy-version/core.src.main.java.com.griefcraft.util.Updater.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)"], "Fixed commit": "395232f3d97014d63f572ce265d36cb1e9d5c884", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2014-07-20T17:51:33Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (osname.contains(\"bsd\")) { return null; }else { return (((com.griefcraft.util.Updater.DEST_LIBRARY_FOLDER) + \"native/Linux/\") + arch) + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5915/buggy-version/core.src.main.java.com.griefcraft.util.Updater.java", "BodyUseAPI": [], "Fixed commit": "395232f3d97014d63f572ce265d36cb1e9d5c884", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2014-07-20T17:51:33Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.griefcraft.util.Updater.getOSSpecificFolder()", "com.griefcraft.util.Updater.getOSSpecificFileName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((osFolder == null) || (osFileName == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5915/buggy-version/core.src.main.java.com.griefcraft.util.Updater.java", "BodyUseAPI": [], "Fixed commit": "395232f3d97014d63f572ce265d36cb1e9d5c884", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2014-07-20T17:51:33Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { mIsUpdateData = true; if (key.equals(getString(R.string.settings_key_sort_is_bought))) { readIsBoughtSetting(); }else if (key.equals(getString(R.string.settings_key_use_category))) { readCategorySetting(); }else if (key.equals(getString(R.string.settings_key_collapse_category))) { readCollapseCategorySetting(); }else if (key.equals(getString(R.string.settings_key_sort_type))) { readSortTypeSetting(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2110/buggy-version/app.src.main.java.ru.android.ainege.shoppinglist.ui.fragments.ShoppingListFragment.java", "BodyUseAPI": [], "Fixed commit": "814e58fe0680edf10b1c61c799cc0dca469bda8a", "Url": "https://api.github.com/repos/Ainege/ShoppingList", "Date": "2016-03-23T08:04:20Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.unicornworld.openunicorn.Component.getBufferStrategy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bs == null) { createBufferStrategy(3); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5946/buggy-version/OpenUnicorn.src.de.unicornworld.openunicorn.Component.java", "BodyUseAPI": [], "Fixed commit": "5948482fa33f6cc2cce983c83c3834e19ac054fa", "Url": "https://api.github.com/repos/Wuffi2405/OpenUnicorn", "Date": "2017-08-20T17:49:39Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tk.wurst_client.ai.FlyPathProcessor.get(tk.wurst_client.ai.FlyPathProcessor)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mc.player.isCollidedHorizontally) && ((mc.player.posY) > ((nextPos.getY()) + 0.2))) mc.gameSettings.keyBindSneak.pressed = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5017/buggy-version/src.tk.wurst_client.ai.FlyPathProcessor.java", "BodyUseAPI": [], "Fixed commit": "6597242f8e8dd433a2b60e07874eb301c2bd6e95", "Url": "https://api.github.com/repos/Wurst-Imperium/Wurst-MC-1.11", "Date": "2016-12-02T14:36:23Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((columnNames.getStringValue()) == null) combinedByAll = true; else { if ((columnNames.getStringValue().length()) > 0) combinedByAll = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/842/buggy-version/src.org.knime.geo.combine.CombineNodeModel.java", "BodyUseAPI": ["columnNames.getStringValue().length()", "org.knime.core.node.defaultnodesettings.SettingsModelString.getStringValue()"], "Fixed commit": "151bd442a2dea0b0d14cca32367cb89c628bbffb", "Url": "https://api.github.com/repos/OpenSpatialAnalytics/ga-osa", "Date": "2017-04-13T04:44:38Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DataProvider.Plans.getBillDays(int,c.getLong(DataProvider.Plans.INDEX_BILLDAY),long,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((bps.isEmpty()) == false) { bps.remove(((bps.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/995/buggy-version/callmeter-master.CallMeter3G.src.main.java.de.ub0r.android.callmeter.LogCallStatsService.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Long>.remove(int)", "java.util.ArrayList<java.lang.Long>.size()"], "Fixed commit": "5f9e21e830a5313987bb9bc17e5bd623f05885c9", "Url": "https://api.github.com/repos/rt1shnik/CallMeter", "Date": "2015-01-30T10:10:06Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((bps.size()) > 0) { bps.remove(((bps.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/995/buggy-version/callmeter-master.CallMeter3G.src.main.java.de.ub0r.android.callmeter.ui.Plans.java", "BodyUseAPI": [], "Fixed commit": "5f9e21e830a5313987bb9bc17e5bd623f05885c9", "Url": "https://api.github.com/repos/rt1shnik/CallMeter", "Date": "2015-01-30T10:10:06Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (EntityRenderer.anaglyphEnable) { float var11 = (((var8 * 30.0F) + (var9 * 59.0F)) + (var10 * 11.0F)) / 100.0F; var12 = ((var8 * 30.0F) + (var9 * 70.0F)) / 100.0F; float var13 = ((var8 * 30.0F) + (var10 * 70.0F)) / 100.0F; var8 = var11; var9 = var12; var10 = var13; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/9098/buggy-version/src.sidben.redstonejukebox.client.RenderRedstoneJukebox.java", "BodyUseAPI": [], "Fixed commit": "1ce19795641b71d148cf1f693fe076bce95e083b", "Url": "https://api.github.com/repos/sidben/RedstoneJukebox", "Date": "2012-12-17T20:24:04Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.picketlink.identity.federation.web.handlers.saml2.BaseSAML2Handler.getHttpSession(org.picketlink.identity.federation.core.saml.v2.interfaces.SAML2HandlerRequest)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (session != null) { java.util.List<java.lang.String> roles = response.getRoles(); if (roles != null) { session.setAttribute(GeneralConstants.ROLES_ID, roles); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6150/buggy-version/overlord-commons-auth.src.main.java.org.overlord.commons.auth.handlers.RoleCachingHandler.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.setAttribute(GeneralConstants.ROLES_ID,java.util.List<java.lang.String>)"], "Fixed commit": "3bd2ff0ef7587ef5a89874507c24c3cd60766d5f", "Url": "https://api.github.com/repos/objectiser/overlord-commons", "Date": "2014-06-13T19:06:13Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selection.getFirstElement()) instanceof org.ietr.dftools.algorithm.model.sdf.SDFVertex) { vertexName = ((org.ietr.dftools.algorithm.model.sdf.SDFVertex) (selection.getFirstElement())).getName(); }else if ((selection.getFirstElement()) instanceof org.ietr.preesm.experiment.model.pimm.AbstractActor) { vertexName = ((org.ietr.preesm.experiment.model.pimm.AbstractActor) (selection.getFirstElement())).getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5803/buggy-version/plugins.org.ietr.preesm.ui.src.org.ietr.preesm.ui.scenario.editor.timings.TimingsTableLabelProvider.java", "BodyUseAPI": ["((org.ietr.preesm.experiment.model.pimm.AbstractActor) (selection.getFirstElement())).getName()", "org.eclipse.jface.viewers.IStructuredSelection.getFirstElement()", "org.eclipse.jface.viewers.IStructuredSelection.getFirstElement()", "org.eclipse.jface.viewers.IStructuredSelection.getFirstElement()", "((org.ietr.dftools.algorithm.model.sdf.SDFVertex) (selection.getFirstElement())).getName()"], "Fixed commit": "d76d72145102cde5bca42d9c74757063639e518a", "Url": "https://api.github.com/repos/preesm/preesm", "Date": "2014-08-27T09:52:21Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.prospects.w4.services.helper.CourseGenerator.getDateFrom(org.w3c.dom.Node,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((courseStartDate != null) && (startToDate != null)) && ((org.joda.time.DateTimeComparator.getDateOnlyInstance().compare(startToDate, courseStartDate)) < 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/9104/buggy-version/src.main.java.uk.ac.prospects.w4.services.helper.CourseGenerator.java", "BodyUseAPI": [], "Fixed commit": "a2d7ae3bf0a0871fccd9172d6a75b00201073c28", "Url": "https://api.github.com/repos/ITSUPPORTPROSPECTS/w4", "Date": "2012-11-23T16:24:28Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLayoutAnimator) == null) { mShowLayout = !(mShowLayout); animateLayout((!(mShowLayout))); viewChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8786/buggy-version/app.src.main.java.com.grarak.kerneladiutor.views.recyclerview.CardView.java", "BodyUseAPI": [], "Fixed commit": "58883d4df3fc709654a5fe3e5835568c77200c88", "Url": "https://api.github.com/repos/Nicklas373/KernelAdiutor", "Date": "2016-12-20T00:39:06Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.devicehive.dao.EquipmentDAO.getByDeviceClass(com.devicehive.model.DeviceClass)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (equipments != null) { for (com.devicehive.model.Equipment e : equipments) { if (newCode.equals(e.getCode())) { throw new com.devicehive.exceptions.HiveException(((((\"Equipment with code = \" + newCode) + \" and device class id = \") + classId) + \" already exists\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6019/buggy-version/src.main.java.com.devicehive.service.DeviceClassService.java", "BodyUseAPI": [], "Fixed commit": "21d6c787f42599d38991bb1ea53ba4cb8c9b234a", "Url": "https://api.github.com/repos/devicehive/devicehive-java", "Date": "2013-08-21T14:28:57Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.devicehive.dao.DeviceClassDAO.get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (deviceClass.getPermanent()) { throw new com.devicehive.exceptions.HiveException(\"Unable to update equipment on permanent device class.\", com.devicehive.service.NOT_FOUND.getStatusCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6019/buggy-version/src.main.java.com.devicehive.service.DeviceClassService.java", "BodyUseAPI": [], "Fixed commit": "21d6c787f42599d38991bb1ea53ba4cb8c9b234a", "Url": "https://api.github.com/repos/devicehive/devicehive-java", "Date": "2013-08-21T14:28:57Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((main) != null) { main.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7893/buggy-version/app.src.main.java.ohi.andre.consolelauncher.LauncherActivity.java", "BodyUseAPI": [], "Fixed commit": "7f2385b00126d08984fa70a7f65ad8d440214e4c", "Url": "https://api.github.com/repos/fAndreuzzi/TUI-ConsoleLauncher", "Date": "2016-05-22T09:59:23Z"},
{"Line": "=>903", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) < (Build.VERSION_CODES.JELLY_BEAN_MR2)) { mChart.setHardwareAccelerationEnabled(false); }else { mChart.setHardwareAccelerationEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6446/buggy-version/OsmAnd.src.net.osmand.plus.helpers.GpxUiHelper.java", "BodyUseAPI": [], "Fixed commit": "84ecf92bd38853bcf36d95edb728675ad221a5a6", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2017-03-18T22:36:05Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bundle.getState()) != (org.osgi.framework.Bundle.ACTIVE)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1174/buggy-version/org.lunifera.runtime.component.configuration.manager.src.main.java.org.lunifera.runtime.component.configuration.manager.spi.SystemConfigurationComponent.java", "BodyUseAPI": [], "Fixed commit": "fa02f38770f12f5ea3ac062bb7d967181bcb6f9e", "Url": "https://api.github.com/repos/lunifera/lunifera-runtime", "Date": "2013-02-18T18:50:35Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((refreshingView) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/587/buggy-version/MrsLiuClient.src.com.techfly.liutaitai.util.view.PullToRefreshLayout.java", "BodyUseAPI": [], "Fixed commit": "5829e1bdc19f73bc4957489d01faa5fb63b1c569", "Url": "https://api.github.com/repos/ren13696607037/MrsLiuProject", "Date": "2015-10-23T05:51:14Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, pluginbase.command.CommandTree>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (commandTree == null) { commandTree = new pluginbase.command.CommandTree(this, initialArg); treeMap.put(initialArg, commandTree); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7252/buggy-version/commands.src.main.java.pluginbase.command.CommandTree.java", "BodyUseAPI": [], "Fixed commit": "e945e75cba4421f835c39ae68f97110dd296533b", "Url": "https://api.github.com/repos/dumptruckman/PluginBase", "Date": "2013-10-18T15:59:31Z"},
{"Line": "=>1240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.chance(100, 40)) { item.setDurability(((short) ((item.getDurability()) + 1))); d.getInventory().setItem(i, item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6404/buggy-version/src.me.mrCookieSlime.Slimefun.Listeners.BlockListener.java", "BodyUseAPI": [], "Fixed commit": "0ef18645997e6d91fe98fb912e3e1917e5e98132", "Url": "https://api.github.com/repos/mrCookieSlime/Slimefun-3.0", "Date": "2014-11-08T18:09:29Z"},
{"Line": "=>1274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (main.chance(100, 40)) { item.setDurability(((short) ((item.getDurability()) + 1))); d.getInventory().setItem(i, item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6404/buggy-version/src.me.mrCookieSlime.Slimefun.Listeners.BlockListener.java", "BodyUseAPI": [], "Fixed commit": "0ef18645997e6d91fe98fb912e3e1917e5e98132", "Url": "https://api.github.com/repos/mrCookieSlime/Slimefun-3.0", "Date": "2014-11-08T18:09:29Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (senMethod.isConstructor()) { java.util.List<edu.rpi.Value> args = new java.util.ArrayList(expr.getArgs()); args.add(soot.jimple.NullConstant.v()); return soot.jimple.Jimple.v().newSpecialInvokeExpr(((edu.rpi.Local) (expr.getBase())), senMethod.makeRef(), args); }else return soot.jimple.Jimple.v().newSpecialInvokeExpr(((edu.rpi.Local) (expr.getBase())), senMethod.makeRef(), expr.getArgs());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4064/buggy-version/soot-jcrypt.src.edu.rpi.TranslatorTransformer.java", "BodyUseAPI": ["soot.jimple.Jimple.v().newSpecialInvokeExpr(((edu.rpi.Local) (expr.getBase())),senMethod.makeRef(),expr.getArgs())", "soot.jimple.Jimple.v().newSpecialInvokeExpr(((edu.rpi.Local) (expr.getBase())),senMethod.makeRef(),java.util.List<edu.rpi.Value>)", "edu.rpi.SootMethod.makeRef()", "edu.rpi.SootMethod.makeRef()"], "Fixed commit": "3c334ef30ce0ca6b9a03d3ed1d2bdd31d80d821f", "Url": "https://api.github.com/repos/proganalysis/type-inference", "Date": "2016-04-25T21:10:05Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item == 1) { }else { android.util.Log.e(\"hello\", \"Delete\"); measureFile.deleteALineFromFile(indexToRename); prepareListData(); listAdapter = new mobop.sounddistance.ExpandableListAdapter(mActivity, listDataHeader, listDataChild); expListView.setAdapter(listAdapter); listAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8217/buggy-version/android_project.app.src.main.java.mobop.sounddistance.ResultListActivity.java", "BodyUseAPI": [], "Fixed commit": "18dc0b13fa8d5f3758c70d13738618d850b2725d", "Url": "https://api.github.com/repos/wheelin/SoundDistance", "Date": "2015-11-09T11:38:34Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((a.length()) != (b.length())) throw new java.lang.ArithmeticException((((\"vectors a and b are of differeing legnths \" + (a.length())) + \" and \") + (b.length())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5376/buggy-version/JSAT.src.jsat.linear.distancemetrics.CosineDistance.java", "BodyUseAPI": ["jsat.linear.Vec.length()", "jsat.linear.Vec.length()"], "Fixed commit": "b968873cba6e651d4b4e78d35dba672cd2c1131d", "Url": "https://api.github.com/repos/EdwardRaff/JSAT", "Date": "2015-11-22T17:36:12Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) > 0) { file1 = args[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5462/buggy-version/src.main.java.innovimax.mixthem.MixThem.java", "BodyUseAPI": [], "Fixed commit": "cb8c9ce9ea0e96e6053720e251acdb0878e0a7e9", "Url": "https://api.github.com/repos/Innovimax-SARL/mix-them", "Date": "2017-02-03T14:12:30Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) > 1) { file2 = args[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5462/buggy-version/src.main.java.innovimax.mixthem.MixThem.java", "BodyUseAPI": [], "Fixed commit": "cb8c9ce9ea0e96e6053720e251acdb0878e0a7e9", "Url": "https://api.github.com/repos/Innovimax-SARL/mix-them", "Date": "2017-02-03T14:12:30Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keepCompany) { com.csci448.goldenrush.networkingpal.CompanyLab.get(getApplicationContext()).updateCompany(mCompany); com.csci448.goldenrush.networkingpal.RecentActionLab.get(getApplicationContext()).updateRecentAction(mRecentAction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4903/buggy-version/app.src.main.java.com.csci448.goldenrush.networkingpal.NewCompanyActivity.java", "BodyUseAPI": [], "Fixed commit": "1ab1fa583802d0375de3ed68a9a3aa2c00c58168", "Url": "https://api.github.com/repos/HelluvaEnginerd/NetworkPal", "Date": "2017-04-03T01:29:40Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(chargingPausedByIllegalChargingType)) { handleDischarging(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2895/buggy-version/app.src.main.java.com.laudien.p1xelfehler.batterywarner.services.BackgroundService.java", "BodyUseAPI": [], "Fixed commit": "0a9d47b963cfddb8be1c41b462bb6c55eb893eb1", "Url": "https://api.github.com/repos/P1xelfehler/BatteryWarner", "Date": "2017-08-09T09:26:21Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.ws.Service.getPort(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(g.erSpilletTabt())) { java.lang.System.out.println(((\"Du har \" + liv) + \" liv tilbage\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8603/buggy-version/src.galgeleg.BenytGalgelegModServer.java", "BodyUseAPI": [], "Fixed commit": "c207ac6859d7cd49651ca36a4594cbefb1f9b2ca", "Url": "https://api.github.com/repos/DaveDenmark/galgemedlogin", "Date": "2017-03-07T10:21:39Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needCommit) { commitUris[sid].add(key); }else { (succeeded)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5685/buggy-version/mlcp.src.main.java.com.marklogic.contentpump.DatabaseTransformWriter.java", "BodyUseAPI": [], "Fixed commit": "f8f6855fd23123c0b0a8ddfefbc204fcdf6ffc05", "Url": "https://api.github.com/repos/marklogic/marklogic-contentpump", "Date": "2017-03-03T22:51:44Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.twitter.service.PostServiceImpl<T, TRepository>.getById(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (post.isBanned()) { throw new com.twitter.exception.PostDeleteException(com.twitter.util.MessageUtil.POST_ALREADY_DELETED); }else if (post.getOwner().equals(currentLoggedUser)) { post.setContent(MessageUtil.DELETE_BY_OWNED_ABSTRACT_POST_CONTENT); post.setBanned(true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/9093/buggy-version/src.main.java.com.twitter.service.PostServiceImpl.java", "BodyUseAPI": ["post.getOwner().equals(com.twitter.model.User)", "T.setContent(MessageUtil.DELETE_BY_OWNED_ABSTRACT_POST_CONTENT)", "T.getOwner()", "T.setBanned(boolean)"], "Fixed commit": "af6f445e97ab642e0291a423442a8141fa61c2e6", "Url": "https://api.github.com/repos/m4riusz/Twitter", "Date": "2016-08-14T16:26:20Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mUpdateRefreshHandler) != null) { mUpdateRefreshHandler.removeCallbacks(mUpdateRefreshRunnableCode); mUpdateRefreshRunnableCode = null; mUpdateRefreshHandler = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2198/buggy-version/BixiTracksExplorer.app.src.main.java.com.udem.ift2906.bixitracksexplorer.NearbyFragment.java", "BodyUseAPI": [], "Fixed commit": "ef1ec5c8fea407851ea666d7521afe90040a7b42", "Url": "https://api.github.com/repos/f8full/ludOScity", "Date": "2015-04-30T14:58:48Z"},
{"Line": "=>689", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(event.getData())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (matcherMail.group(1).equalsIgnoreCase(\"noAttachments\")) { java.util.regex.Pattern attachmentP = java.util.regex.Pattern.compile(\"(\\\\d+)\\\\,\"); java.util.regex.Matcher matcherAttachment = attachmentP.matcher(matcherMail.group(2)); if (matcherAttachment.find()) { mailValues.add(java.lang.Integer.parseInt(matcherAttachment.group(1))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7808/buggy-version/src.main.java.eu.musesproject.server.dataminer.DataMiningUtils.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(java.lang.String)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "f03ba8f25a40b7633fe62d23f67b51eb9f072e0b", "Url": "https://api.github.com/repos/MusesProject/MusesServer", "Date": "2015-09-17T21:49:51Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activeProject) == null) { activeProject = projects.get(0); active_project_string = projects.get(0).getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2905/buggy-version/RPMS.src.beans.ProjectManagerBean.java", "BodyUseAPI": [], "Fixed commit": "8252572764da6034ceed0d9ffcaae2ee2337b81d", "Url": "https://api.github.com/repos/serlachner/sw14_free_12", "Date": "2014-06-14T14:18:35Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(org.apache.hadoop.hbase.util.Bytes.toString(cell.getQualifier()).contains(\"_count\"))) && (!(org.apache.hadoop.hbase.util.Bytes.toString(cell.getQualifier()).equals(\"username\")))) summary += org.apache.hadoop.hbase.util.Bytes.toInt(cell.getValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6906/buggy-version/UsersRatingAnalytics.src.StatsUserRating.java", "BodyUseAPI": ["org.apache.hadoop.hbase.util.Bytes.toInt(cell.getValue())", "org.apache.hadoop.hbase.Cell.getValue()"], "Fixed commit": "ed0f9797b691c8cf53b3dc0106afa71f688c4e33", "Url": "https://api.github.com/repos/williamhovnanyan/Java-Projects", "Date": "2014-04-25T14:15:20Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPositionOffset) >= 1) { currentPositionOffset -= 1; currentPosition += 1; }else if ((currentPositionOffset) < 0) { currentPositionOffset += 1; currentPosition -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3352/buggy-version/library.src.com.astuetz.PagerSlidingTabStrip.java", "BodyUseAPI": [], "Fixed commit": "f145b96f8c68d6979ef3c885a24208d0fe03d482", "Url": "https://api.github.com/repos/wuakitv/PagerSlidingTabStrip", "Date": "2014-09-04T08:25:23Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.akrolsmir.bakegami.WallpaperManager.with(this).getCurrentWallpaper()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (wp.imageInFavorites()) com.squareup.picasso.Picasso.with(this).load(com.akrolsmir.bakegami.WallpaperManager.with(this).getCurrentWallpaper().getFavoriteFile()).fit().centerInside().into(currentBG); else com.squareup.picasso.Picasso.with(this).load(com.akrolsmir.bakegami.WallpaperManager.with(this).getCurrentWallpaper().getCacheFile()).fit().centerInside().into(currentBG);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6946/buggy-version/src.com.akrolsmir.bakegami.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a5fee2e117b49af99e7a5873fc230d3db67e3719", "Url": "https://api.github.com/repos/akrolsmir/Bakegami", "Date": "2014-09-25T03:14:06Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(imageInCache())) && (imageInFavorites())) copyFile(getFavoriteFile(), getCacheFile());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6946/buggy-version/src.com.akrolsmir.bakegami.Wallpaper.java", "BodyUseAPI": [], "Fixed commit": "a5fee2e117b49af99e7a5873fc230d3db67e3719", "Url": "https://api.github.com/repos/akrolsmir/Bakegami", "Date": "2014-09-25T03:14:06Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prevEvent != null) { if ((counters.A_c_u_k[currentEvent.node][k]) <= 0) { throw new java.lang.RuntimeException(\"A_c_u_k contains a negative value\"); } logLikelihoodEvents[k] += (java.lang.Math.log(counters.A_c_u_k[currentEvent.node][k])) - ((model.S[currentEvent.node][k]) * (((currentEvent.timestamp) * (counters.A_c_u_k[currentEvent.node][k])) - (counters.tilde_A_c_u_k[currentEvent.node][k]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8302/buggy-version/src.survivalFactorizationEM.SurvivalFactorizationEM_LearnerOPT.java", "BodyUseAPI": [], "Fixed commit": "d25aade21eacf1e1259fd0536f1a694c7f325107", "Url": "https://api.github.com/repos/gmanco/SurvivalFactorization", "Date": "2016-02-10T15:29:07Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config.isUseCompression()) { ((java.util.zip.GZIPOutputStream) (os)).finish(); os.close(); }else { stegoOS.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6855/buggy-version/src.net.sourceforge.openstego.OpenStego.java", "BodyUseAPI": [], "Fixed commit": "c5d23ed390caed6dc24f0470db53894ae90276f9", "Url": "https://api.github.com/repos/syvaidya/openstego", "Date": "2007-12-10T11:21:01Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.viewers.IStructuredSelection.getFirstElement()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((descriptor.getData()) instanceof org.talend.designer.core.ui.editor.connections.ConnectionLabel) { createDynamicComposite(tabFactory.getTabComposite(), ((org.talend.designer.core.ui.editor.connections.ConnectionLabel) (descriptor.getData())).getConnection(), descriptor.getCategory()); }else { createDynamicComposite(tabFactory.getTabComposite(), ((org.talend.core.model.process.Element) (descriptor.getData())), descriptor.getCategory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2356/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.views.properties.ComponentSettingsView.java", "BodyUseAPI": ["org.talend.designer.core.ui.views.properties.ComponentSettingsView.1.createDynamicComposite(tabFactory.getTabComposite(),((org.talend.core.model.process.Element) (descriptor.getData())),descriptor.getCategory())", "((org.talend.designer.core.ui.editor.connections.ConnectionLabel) (descriptor.getData())).getConnection()", "org.talend.core.properties.tab.TalendPropertyTabDescriptor.getCategory()", "org.talend.core.properties.tab.TalendPropertyTabDescriptor.getCategory()", "org.talend.core.properties.tab.TalendPropertyTabDescriptor.getData()", "org.talend.designer.core.ui.views.properties.ComponentSettingsView.1.createDynamicComposite(tabFactory.getTabComposite(),((org.talend.designer.core.ui.editor.connections.ConnectionLabel) (descriptor.getData())).getConnection(),descriptor.getCategory())", "org.talend.core.properties.tab.TalendPropertyTabDescriptor.getData()"], "Fixed commit": "63f323a078e47405af69f499b85ee336a233f4fb", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2014-06-30T22:32:51Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (elem instanceof org.talend.designer.core.ui.editor.notes.Note) { return EElementType.NOTE.getCategories(); }else if (elem instanceof org.talend.designer.core.ui.editor.subjobcontainer.SubjobContainer) { return EElementType.SUBJOB.getCategories(); }else if (elem instanceof org.talend.designer.core.ui.editor.connections.ConnectionLabel) { return getCategories(((org.talend.designer.core.ui.editor.connections.ConnectionLabel) (elem)).getConnection()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2356/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.views.properties.ComponentSettingsView.java", "BodyUseAPI": [], "Fixed commit": "63f323a078e47405af69f499b85ee336a233f4fb", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2014-06-30T22:32:51Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sdd.aisle4android.FoodNameManager.getCategory(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (category != null) { item2Node = nodes.get(category.toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1555/buggy-version/Aisle4Android.app.src.main.java.sdd.aisle4android.ItemOrderer.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, sdd.aisle4android.ItemGraph.Node>.get(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "b1fb0b8887c9233bf2714330f5e996277ea0fa0b", "Url": "https://api.github.com/repos/Aisle4/SDDProject", "Date": "2017-04-19T21:47:27Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sdd.aisle4android.FoodNameManager.getCategory(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (category != null) { item1Node = nodes.get(category.toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1555/buggy-version/Aisle4Android.app.src.main.java.sdd.aisle4android.ItemOrderer.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.util.HashMap<java.lang.String, sdd.aisle4android.ItemGraph.Node>.get(java.lang.String)"], "Fixed commit": "b1fb0b8887c9233bf2714330f5e996277ea0fa0b", "Url": "https://api.github.com/repos/Aisle4/SDDProject", "Date": "2017-04-19T21:47:27Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newReminderFragment) != null) newReminderFragment.hideKeyboard();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/9247/buggy-version/reminder.src.main.java.com.npaduch.reminder.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c45b589800a586445f137b0af27d42665e43dfb2", "Url": "https://api.github.com/repos/npaduch/reminder", "Date": "2014-06-06T01:12:53Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5490/buggy-version/src.main.java.io.botmaker.simpleredis.property.DataObjectProperty.java", "BodyUseAPI": [], "Fixed commit": "e78448dcb7769a3cd5db1035f7ca10d089380add", "Url": "https://api.github.com/repos/ZupCat/simple-datastore", "Date": "2016-05-03T19:41:25Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (toEncloseInDoubleQuotes) { value = (\"\\\"\" + value) + \"\\\"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4386/buggy-version/modules.server.src.main.java.org.sapia.corus.processor.task.PerformExecProcessTask.java", "BodyUseAPI": [], "Fixed commit": "791cb525a39458f19ec527b2511e3fde2d1a31bc", "Url": "https://api.github.com/repos/sapia-oss/corus", "Date": "2015-01-16T06:06:20Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (instance == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2415/buggy-version/janos-core.src.main.java.org.apache.olingo.odata2.annotation.processor.core.util.AnnotationHelper.java", "BodyUseAPI": [], "Fixed commit": "af26487d35ec6b1ff0f881f3f4956fc95307b729", "Url": "https://api.github.com/repos/mibo/janos", "Date": "2015-04-03T10:30:18Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fname != null) { java.lang.String[] lines = org.seqcode.data.io.IOUtil.readFile2Array(fname); for (int i = 0; i < (lines.length); i++) initialClustPoints.add(org.seqcode.data.io.RegionFileUtilities.loadStrandedPointsFromFile(gen, lines[i])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3551/buggy-version/src.org.seqcode.projects.chexmix.framework.ChExMixConfig.java", "BodyUseAPI": [], "Fixed commit": "9c2f57ca67051fdf630004342cb151e4600c7eba", "Url": "https://api.github.com/repos/seqcode/chexmix", "Date": "2017-11-08T01:36:22Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((idPattern) != null) { options.setIdPattern(idPattern); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4559/buggy-version/src.main.java.org.mybatis.maven.mvnmigrate.NewCommandMojo.java", "BodyUseAPI": [], "Fixed commit": "f2a79738e032e2f93f4118b9efb1c039e6841d08", "Url": "https://api.github.com/repos/hazendaz/migrations-maven-plugin", "Date": "2016-04-14T16:01:21Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((idPattern) != null) { options.setIdPattern(idPattern); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4559/buggy-version/src.main.java.org.mybatis.maven.mvnmigrate.InitCommandMojo.java", "BodyUseAPI": [], "Fixed commit": "f2a79738e032e2f93f4118b9efb1c039e6841d08", "Url": "https://api.github.com/repos/hazendaz/migrations-maven-plugin", "Date": "2016-04-14T16:01:21Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graphicTask.getStatus()) == (AsyncTask.Status.RUNNING)) { return graphicTask; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7426/buggy-version/src.main.java.com.example.termowidget.ConfigActivity.java", "BodyUseAPI": [], "Fixed commit": "0581782b9e880dedd7fc6ccdd14a550f4f76305f", "Url": "https://api.github.com/repos/7554732/TermoWidget", "Date": "2017-10-14T15:45:16Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCard.getNumber().length()) >= 4) { mEtNumber.setTextColor(android.support.v4.content.ContextCompat.getColor(getContext(), android.R.color.holo_red_dark)); if ((mCallback) != null) { mError = com.stripe.example.view.CreditCardView.ERROR_NUMBER; mCallback.onError(mError); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5686/buggy-version/example.src.main.java.com.stripe.example.view.CreditCardView.java", "BodyUseAPI": [], "Fixed commit": "50d7ea099af9b77ae75293c6badc857a2c750c92", "Url": "https://api.github.com/repos/simon-marino/stripe-android", "Date": "2016-12-08T23:13:32Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (curStringLen == 3) { setCreditCardIconForNumber(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5686/buggy-version/example.src.main.java.com.stripe.example.view.CreditCardView.java", "BodyUseAPI": [], "Fixed commit": "50d7ea099af9b77ae75293c6badc857a2c750c92", "Url": "https://api.github.com/repos/simon-marino/stripe-android", "Date": "2016-12-08T23:13:32Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(retryLoad)) { battlecode.engine.instrumenter.IndividualClassLoader.teamsWithErrors.add(teamPackageName); throw ie; }else { retry -= 1; try { java.lang.Thread.sleep(10000); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2479/buggy-version/src.main.battlecode.engine.instrumenter.IndividualClassLoader.java", "BodyUseAPI": [], "Fixed commit": "b1580a4fa4e1529336166a5bbce4bcd53a27d878", "Url": "https://api.github.com/repos/battlecode/battlecode-server", "Date": "2014-01-09T19:16:05Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(game.BoardManager.getCell(this.getBoard(), i, 0).isEmpty())) && (!(game.BoardManager.getCell(this.getBoard(), i, 1).isEmpty()))) && (!(game.BoardManager.getCell(this.getBoard(), i, 2).isEmpty()))) { if (((game.BoardManager.getCell(this.getBoard(), i, 0).getOwner()) == (game.BoardManager.getCell(this.getBoard(), i, 1).getOwner())) && ((game.BoardManager.getCell(this.getBoard(), i, 0).getOwner()) == (game.BoardManager.getCell(this.getBoard(), i, 2).getOwner()))) { winner = game.BoardManager.getCell(this.getBoard(), i, 0).getOwner(); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2396/buggy-version/src.java.game.TicTacToeGame.java", "BodyUseAPI": ["game.BoardManager.getCell(this.getBoard(), i, 0).getOwner()", "game.BoardManager.getCell(this.getBoard(), i, 0).getOwner()", "game.BoardManager.getCell(this.getBoard(),int,int)", "game.BoardManager.getCell(this.getBoard(),int,int)", "game.BoardManager.getCell(this.getBoard(),int,int)", "game.BoardManager.getCell(this.getBoard(),int,int)", "game.BoardManager.getCell(this.getBoard(), i, 0).getOwner()", "game.BoardManager.getCell(this.getBoard(),int,int)", "game.BoardManager.getCell(this.getBoard(), i, 1).getOwner()", "game.BoardManager.getCell(this.getBoard(), i, 2).getOwner()"], "Fixed commit": "0482dda06f03db822e992ca4a9b427eb3773eff8", "Url": "https://api.github.com/repos/giorgospetkakis/tak-ai", "Date": "2017-10-14T19:52:46Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!(game.BoardManager.getCell(this.getBoard(), 0, 2).isEmpty())) && (!(game.BoardManager.getCell(this.getBoard(), 1, 1).isEmpty()))) && (!(game.BoardManager.getCell(this.getBoard(), 2, 0).isEmpty()))) { if (((game.BoardManager.getCell(this.getBoard(), 0, 2).getOwner()) == (game.BoardManager.getCell(this.getBoard(), 1, 1).getOwner())) && ((game.BoardManager.getCell(this.getBoard(), 0, 2).getOwner()) == (game.BoardManager.getCell(this.getBoard(), 2, 0).getOwner()))) { winner = game.BoardManager.getCell(this.getBoard(), 1, 1).getOwner(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2396/buggy-version/src.java.game.TicTacToeGame.java", "BodyUseAPI": [], "Fixed commit": "0482dda06f03db822e992ca4a9b427eb3773eff8", "Url": "https://api.github.com/repos/giorgospetkakis/tak-ai", "Date": "2017-10-14T19:52:46Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(game.BoardManager.getCell(this.getBoard(), 0, i).isEmpty())) && (!(game.BoardManager.getCell(this.getBoard(), 1, i).isEmpty()))) && (!(game.BoardManager.getCell(this.getBoard(), 2, i).isEmpty()))) { if (((game.BoardManager.getCell(this.getBoard(), 0, i).getOwner()) == (game.BoardManager.getCell(this.getBoard(), 1, i).getOwner())) && ((game.BoardManager.getCell(this.getBoard(), 0, i).getOwner()) == (game.BoardManager.getCell(this.getBoard(), 2, i).getOwner()))) { winner = game.BoardManager.getCell(this.getBoard(), 0, i).getOwner(); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2396/buggy-version/src.java.game.TicTacToeGame.java", "BodyUseAPI": ["game.BoardManager.getCell(this.getBoard(), 2, i).getOwner()", "game.BoardManager.getCell(this.getBoard(),int,int)", "game.BoardManager.getCell(this.getBoard(),int,int)", "game.BoardManager.getCell(this.getBoard(), 1, i).getOwner()", "game.BoardManager.getCell(this.getBoard(),int,int)", "game.BoardManager.getCell(this.getBoard(),int,int)", "game.BoardManager.getCell(this.getBoard(), 0, i).getOwner()", "game.BoardManager.getCell(this.getBoard(),int,int)", "game.BoardManager.getCell(this.getBoard(), 0, i).getOwner()", "game.BoardManager.getCell(this.getBoard(), 0, i).getOwner()"], "Fixed commit": "0482dda06f03db822e992ca4a9b427eb3773eff8", "Url": "https://api.github.com/repos/giorgospetkakis/tak-ai", "Date": "2017-10-14T19:52:46Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((audioSource) != null) { audioSource.captureAudioChunk(samples, length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4085/buggy-version/domain.src.main.java.org.m4m.GLCapture.java", "BodyUseAPI": [], "Fixed commit": "9c970b4e8bb0d372dc69b7e713011689cf0bc525", "Url": "https://api.github.com/repos/sjvc/media-for-mobile", "Date": "2017-08-08T16:05:32Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(((org.alfresco.mobile.android.async.workflow.task.complete.CompleteTaskRequest) (request)).variables.containsKey(WorkflowModel.PROP_TRANSITIONS_VALUE))) { java.lang.String transitionIdentifier = \"\"; if (task.getIdentifier().startsWith(WorkflowModel.KEY_PREFIX_ACTIVITI)) { transitionIdentifier = org.alfresco.mobile.android.api.constants.WorkflowModel.TRANSITION_NEXT; } if (!((session.getServiceRegistry().getWorkflowService()) instanceof org.alfresco.mobile.android.api.services.impl.publicapi.PublicAPIWorkflowServiceImpl)) { ((org.alfresco.mobile.android.async.workflow.task.complete.CompleteTaskRequest) (request)).variables.put(WorkflowModel.PROP_TRANSITIONS_VALUE, transitionIdentifier); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1705/buggy-version/alfresco-mobile-android-platform.alfresco-mobile-android-foundation.src.org.alfresco.mobile.android.async.workflow.task.complete.CompleteTaskOperation.java", "BodyUseAPI": ["((org.alfresco.mobile.android.async.workflow.task.complete.CompleteTaskRequest) (request)).variables.put(WorkflowModel.PROP_TRANSITIONS_VALUE,java.lang.String)"], "Fixed commit": "19ddfc2f02d37769ace823691193c6af505dabae", "Url": "https://api.github.com/repos/Alfresco/alfresco-android-app", "Date": "2014-11-18T14:34:25Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSession().getRepositoryInfo().getMajorVersion()) < (org.alfresco.mobile.android.api.constants.OnPremiseConstant.ALFRESCO_VERSION_4)) { variables.put(WorkflowModel.PROP_TRANSITIONS_VALUE, outcome); }else { variables.put(WorkflowModel.PROP_REVIEW_OUTCOME, outcome); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1705/buggy-version/alfresco-mobile-android.src.org.alfresco.mobile.android.application.fragments.workflow.task.TaskDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "19ddfc2f02d37769ace823691193c6af505dabae", "Url": "https://api.github.com/repos/Alfresco/alfresco-android-app", "Date": "2014-11-18T14:34:25Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((model) != null) && ((model.getFeatureProject().getFeatureModel().getFeature(name).getColorList()) != null)) { de.ovgu.featureide.fm.core.Feature feature = model.getFeatureProject().getFeatureModel().getFeature(name); if ((feature.getColorList()) != null) { return model.getFeatureProject().getFeatureModel().getFeature(name).getColorList().getColor(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/350/buggy-version/plugins.de.ovgu.featureide.core.src.de.ovgu.featureide.core.fstmodel.FSTFeature.java", "BodyUseAPI": ["model.getFeatureProject().getFeatureModel()", "de.ovgu.featureide.core.fstmodel.FSTModel.getFeatureProject()", "de.ovgu.featureide.core.fstmodel.FSTModel.getFeatureProject()", "model.getFeatureProject().getFeatureModel().getFeature(java.lang.String)", "model.getFeatureProject().getFeatureModel()", "model.getFeatureProject().getFeatureModel().getFeature(name).getColorList()", "model.getFeatureProject().getFeatureModel().getFeature(java.lang.String)", "model.getFeatureProject().getFeatureModel().getFeature(name).getColorList().getColor()"], "Fixed commit": "203138d7a50deeba4315fd89d7e6df7e5bbc75bd", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2015-08-18T10:59:23Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.refine.util.ParsingUtilities.evaluateJsonStringToObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(json.has(\"baseUri\"))) { json.put(\"baseUri\", req.getParameter(\"baseuri\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/601/buggy-version/extensions.fairifier-rdf-extension.dtls.fairifier.LoadRdfSkeletonCommand.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,req.getParameter(\"baseuri\"))"], "Fixed commit": "ed7498d92ef7631d49c68ac79d60e6e94626c361", "Url": "https://api.github.com/repos/Shamanou/FAIRifier", "Date": "2017-10-17T08:57:09Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.prplplus.scanner.CachedLexer.getNextSymbol()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (curSymbol.isEndOfComment()) { writer.print(curSymbol.text); if ((lexer.peekNextUseful().line) == (curSymbol.line)) writer.println(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2969/buggy-version/src.com.prplplus.scanner.PRPLCompiler.java", "BodyUseAPI": ["java.io.PrintWriter.print(curSymbol.text)"], "Fixed commit": "d1e75a76d582d08d7e4f79e09ddb9b04a4950e04", "Url": "https://api.github.com/repos/kajacx/PRPL-Plus", "Date": "2017-02-23T13:38:10Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((getHeight()) == (-1.0F)) && ((getWidth()) == (-1.0F))) { setWidth(125, Unit.PIXELS); setHeight(125, Unit.PIXELS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5708/buggy-version/circular-progressbar-addon.src.main.java.com.github.appreciated.circularprogressbar.CircularProgressBarClient.java", "BodyUseAPI": [], "Fixed commit": "17a572631c71a28f167bbbc8bce8f01f076e0607", "Url": "https://api.github.com/repos/appreciated/circular-progress-bar", "Date": "2017-05-02T14:57:35Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["be.fedict.dcat.datagovbe.Drupal.getOne(java.util.Map<org.openrdf.model.URI, com.google.common.collect.ListMultimap<java.lang.String, java.lang.String>>,DCTERMS.PUBLISHER,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(publ.isEmpty())) { m = store.queryProperties(store.getURI(publ)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3997/buggy-version/datagovbe.src.main.java.be.fedict.dcat.datagovbe.Drupal.java", "BodyUseAPI": ["be.fedict.dcat.helpers.Storage.getURI(java.lang.String)", "be.fedict.dcat.helpers.Storage.queryProperties(store.getURI(publ))"], "Fixed commit": "21ae04d862e95e40a2349f54ab6575a4a011f4a8", "Url": "https://api.github.com/repos/Fedict/dcattools", "Date": "2015-12-01T21:05:40Z"},
{"Line": "=>823", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextArea.getText()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((text.contains(\"http:\")) || (text.contains(\"https:\"))) && (key.trim().isEmpty())) { try { java.awt.Desktop.getDesktop().browse(new java.net.URL(text).toURI()); } catch (java.net.URISyntaxException e) { e.printStackTrace(); } }else { if ((!(zeng.siyuan.C1comehere.C1comehere.prop.containsKey(text.trim()))) && (!(text.contains(\".\")))) { for (java.lang.Object e : zeng.siyuan.C1comehere.C1comehere.prop.keySet()) { java.lang.String tem = ((java.lang.String) (e)); if (tem.startsWith(text)) { path = ((java.lang.String) (zeng.siyuan.C1comehere.C1comehere.prop.get(tem))); } } }else { path = (((java.lang.String) (zeng.siyuan.C1comehere.C1comehere.prop.get(text.trim().replace(\".\", \"\")))) == null) ? \"\" : ((java.lang.String) (zeng.siyuan.C1comehere.C1comehere.prop.get(text.trim().replace(\".\", \"\")))); } if (((null != path) && (!(path.isEmpty()))) && ((path.contains(\"http://\")) || (path.contains(\"https://\")))) { try { java.awt.Desktop.getDesktop().browse(new java.net.URL(path).toURI()); } catch (java.net.URISyntaxException e) { e.printStackTrace(); } }else if (((text.contains(\"sd\")) && (text.startsWith(\"sd\"))) || ((text.contains(\"shutdown\")) && (text.startsWith(\"shutdown\")))) { java.lang.Runtime.getRuntime().exec(\"shutdown.exe -s -t 0\"); }else if ((null == path) || (path.trim().isEmpty())) { java.awt.Desktop.getDesktop().open(new java.io.File(text.trim())); }else { java.awt.Desktop.getDesktop().open(new java.io.File(path)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7525/buggy-version/c1comehere.src.zeng.siyuan.C1comehere.C1comehere.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.startsWith(java.lang.String)", "java.awt.Desktop.browse(java.net.URI)", "java.lang.String.trim()", "java.lang.String.contains(java.lang.String)", "java.util.Properties.containsKey(java.lang.String)", "java.awt.Desktop.open(java.io.File)", "java.net.URL.toURI()", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.util.Properties.get(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.util.Properties.get(java.lang.String)", "java.lang.String.trim()", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "f50ec2cb98517e1bb256895cde51b585b6429561", "Url": "https://api.github.com/repos/SiyuanZeng/14_GUI", "Date": "2016-09-21T07:58:52Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.nodeId.equals(java.util.UUID.fromString(\"00000000-0000-0000-0000-000000000000\"))) { log.info(\"channelRead: node id matching is not requested by client.\"); }else if (!(this.nodeId.equals(serverId))) { log.error(\"channelRead: Handshake validation failed. Server node id mismatch.\"); log.debug(((((\"channelRead: Client opened socket to server {\" + (this.nodeId)) + \"} instead, connected to: {\") + serverId) + \"}\")); this.fireHandshakeFailed(ctx); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7433/buggy-version/runtime.src.main.java.org.corfudb.protocols.wireprotocol.ClientHandshakeHandler.java", "BodyUseAPI": ["java.util.UUID.equals(java.util.UUID)"], "Fixed commit": "aed31d9317332daa40634ab14a79bda3833f0087", "Url": "https://api.github.com/repos/CorfuDB/CorfuDB", "Date": "2017-12-21T09:21:55Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (projectFileUrl == null) { throw new cz.muni.fi.fresneleditor.common.OpenProjectException(\"No project!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8711/buggy-version/fresnel-editor-common.src.main.java.cz.muni.fi.fresneleditor.common.ContextHolder.java", "BodyUseAPI": [], "Fixed commit": "864d554136714638d491f2000b37a3d307a843d5", "Url": "https://api.github.com/repos/nodrock/fresnel-editor", "Date": "2012-06-13T13:41:17Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myTermWidget) == terminal) { myTermWidget = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1874/buggy-version/src-terminal.com.jediterm.terminal.ui.TabbedTerminalWidget.java", "BodyUseAPI": [], "Fixed commit": "e68d8e890448521f1420540b61d6bfe5c1187a11", "Url": "https://api.github.com/repos/traff/jediterm", "Date": "2013-08-29T15:42:49Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mApplication.parse.userLoggedIn()) { mApplication.parse.getHouse(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8762/buggy-version/root.homeBase.src.app.android.homeBase.GPSservice.java", "BodyUseAPI": ["mApplication.parse.getHouse(app.android.homeBase.GPSservice)"], "Fixed commit": "3a49974bb1b42061219d832e4fb89d79501cc7d3", "Url": "https://api.github.com/repos/MaritalWheat/homebase", "Date": "2014-05-06T02:10:50Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dragansah.filebrowser.sessionstate.UserInfo.getRootFolderForLoggedInUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(f.getAbsolutePath().startsWith(rootFolder))) return new java.io.File(rootFolder);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4752/buggy-version/src.main.java.com.dragansah.filebrowser.services.FileServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "e59ffe3ba89c8d7b57cbae841d6dd4796bb1f1bd", "Url": "https://api.github.com/repos/dragansah/filebrowser", "Date": "2012-09-30T16:28:30Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.util.Arrays.asList(Constants.NAV_TYPE_VALUES).contains(nav_type))) { nav_type = \"terminologies\"; if (debug) gov.nih.nci.evs.browser.utils.JSPUtils._logger.debug((\"nav_type (Default): \" + nav_type)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6957/buggy-version/software.ncitbrowser.src.java.gov.nih.nci.evs.browser.utils.JSPUtils.java", "BodyUseAPI": [], "Fixed commit": "8c440b6c2bdb948dea3fa97d894ac3a0412c633b", "Url": "https://api.github.com/repos/NCIP/nci-term-browser", "Date": "2014-02-03T14:19:07Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1114/buggy-version/src.main.java.ua.yandex.shad.tempseries.TempSummaryStatistics.java", "BodyUseAPI": [], "Fixed commit": "6c0ab8765de52573f403d7bb39b0179e23a99576", "Url": "https://api.github.com/repos/MYatsura/ys15yatsura-hw1", "Date": "2015-10-04T10:26:08Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == (targets[0])) { target = 1.0; }else { target = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8559/buggy-version/src.NeuralNet.java", "BodyUseAPI": [], "Fixed commit": "cfcc83769ceff7d6e4743d17672f4041f7db999c", "Url": "https://api.github.com/repos/cgrange/MachineLearning", "Date": "2017-02-22T20:54:17Z"},
{"Line": "=>633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.connector.isSelected) { this.setHTML(selectedVerticalLine(this.height, style)); }else { this.setHTML(verticalLine(this.height, style)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1187/buggy-version/gwt-connectors.src.main.java.pl.tecna.gwt.connectors.client.elements.Section.java", "BodyUseAPI": [], "Fixed commit": "ebfc350bef026943870d54e7bbaf3111c81d3ca4", "Url": "https://api.github.com/repos/robertwaszkowski/gwt-connectors", "Date": "2014-08-20T10:53:13Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Hashtable<java.lang.String, java.lang.String>.get(RabbitMQConstants.CONSUMER_QOS)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((qos != null) && (!(\"\".equals(qos)))) { try { int qosValue = java.lang.Integer.parseInt(qos); channel = rmqChannel.getChannelWithQOS(qosValue); } catch (java.lang.NumberFormatException e) { channel = rmqChannel.getChannel(); org.apache.axis2.transport.rabbitmq.ServiceTaskManager.log.warn(((\"Can't parse given RabbitMQ qos value as a integer, hence using \" + \"channel without qos, provided qos value - \") + qos)); } }else { channel = rmqChannel.getChannel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1465/buggy-version/modules.rabbitmq.src.main.java.org.apache.axis2.transport.rabbitmq.ServiceTaskManager.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "org.apache.commons.logging.Log.warn(java.lang.String)"], "Fixed commit": "8e9381701eb6c3603c0ade4fb653bf02ad1fa090", "Url": "https://api.github.com/repos/virajsenevirathne/wso2-axis2-transports", "Date": "2016-05-10T05:18:08Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (portIndex > (-1)) { domain = domain.substring(0, portIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/651/buggy-version/src.main.java.com.github.dbadia.sqrl.server.util.SqrlUtil.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "ffa491f300f9be5e7e63140ea7cc94340fbbdf34", "Url": "https://api.github.com/repos/sqrlserverjava/sqrl-server-base", "Date": "2016-11-02T01:14:09Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.ws.rs.container.ContainerResponseContext.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (entity == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4423/buggy-version/src.com.arjvik.arjmart.api.filters.ETagFilter.java", "BodyUseAPI": [], "Fixed commit": "21082777156b089fe062ee7db3d87f802c02fba0", "Url": "https://api.github.com/repos/ArjMart/API", "Date": "2017-08-13T21:17:57Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dto.getMsOfficeKnowledge()) == null) { dto.setMsOfficeKnowledge(KnowledgeEnum.BASIC_USER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5725/buggy-version/gde-backend.src.main.java.com.nagarro.gde.persistence.model.UserITDefaultDetail.java", "BodyUseAPI": ["com.nagarro.gde.dto.UserITDefaultDetailDto.setMsOfficeKnowledge(KnowledgeEnum.BASIC_USER)"], "Fixed commit": "da348589aa6a756ef50a260024ce91dc4d168975", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-01-19T09:30:35Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Main.theClass.Storage.getBoolean(((\"Players.\" + playerName) + \".Book\"))) == true) { return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/687/buggy-version/HubBasics.src.me.Fabricio20.API.BookAPI.java", "BodyUseAPI": [], "Fixed commit": "e1789dbfe6a7a360c817816db8e5df7943d0d304", "Url": "https://api.github.com/repos/Fabricio20/HubBasics", "Date": "2015-01-11T20:09:20Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fieldName) != null) hu.sztaki.ilab.longneck.process.block.BlockUtils.setValue(fieldName, fieldValue, clone, parentScope);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5098/buggy-version/src.main.java.hu.sztaki.ilab.longneck.process.block.CloneRecord.java", "BodyUseAPI": [], "Fixed commit": "14b2d653624982573714f1107a3c435bc8671b27", "Url": "https://api.github.com/repos/MTA-SZTAKI/longneck-core", "Date": "2014-04-17T13:14:43Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(map.keySet().isEmpty())) { return map.get(map.keySet().iterator().next()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8624/buggy-version/src.org.nschmidt.csg.PropertyStorage.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.iterator()", "java.util.Iterator<java.lang.String>.next()", "java.util.Map<java.lang.String, java.lang.Object>.keySet()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "ad86bc956b8436fbb524fc671db81fb008402138", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-11-24T20:21:08Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.previousCollIndex) >= 0) { int missedColls = (currentCollIndex - (this.previousCollIndex)) - 1; for (int i = 0; i < missedColls; i++) { this.values.add(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1460/buggy-version/src.main.java.x.commons.util.ooxml.xlsx.impl.DefaultSheetReader.java", "BodyUseAPI": [], "Fixed commit": "3f12640b2113ad189635fedd4fad8843715bfe05", "Url": "https://api.github.com/repos/quenton-sh/x-commons-utils", "Date": "2015-10-26T11:15:15Z"},
{"Line": "=>987", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rule.containsKey(\"version\")) { java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(((java.lang.String) (rule.get(\"version\")))); java.util.regex.Matcher matcher = pattern.matcher(java.lang.System.getProperty(\"os.version\")); if (matcher.matches()) { shouldDownload = true; } }else { shouldDownload = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7084/buggy-version/src.com.atlauncher.workers.InstanceInstaller.java", "BodyUseAPI": ["java.util.regex.Pattern.compile(((java.lang.String) (rule.get(\"version\"))))", "org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "4a24fcb33ef55e38e63fa1f9cc42bf8732b77fc9", "Url": "https://api.github.com/repos/RyanTheAllmighty/ATLauncher", "Date": "2013-11-19T04:08:44Z"},
{"Line": "=>1007", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rule.containsKey(\"version\")) { java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(((java.lang.String) (rule.get(\"version\")))); java.util.regex.Matcher matcher = pattern.matcher(java.lang.System.getProperty(\"os.version\")); if (matcher.matches()) { shouldDownload = false; } }else { shouldDownload = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7084/buggy-version/src.com.atlauncher.workers.InstanceInstaller.java", "BodyUseAPI": ["java.util.regex.Pattern.compile(((java.lang.String) (rule.get(\"version\"))))", "org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "4a24fcb33ef55e38e63fa1f9cc42bf8732b77fc9", "Url": "https://api.github.com/repos/RyanTheAllmighty/ATLauncher", "Date": "2013-11-19T04:08:44Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endogamousPercentage) == 0.0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4209/buggy-version/src.com.telmomenezes.synthetic.kinship.TopologicalIndices.java", "BodyUseAPI": [], "Fixed commit": "e203dccb7fc7e6e405e73ff2d74c978f056b50f2", "Url": "https://api.github.com/repos/telmomenezes/synthetic", "Date": "2012-04-08T22:22:30Z"},
{"Line": "=>837", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portlet.expando.service.impl.ExpandoValueLocalServiceImpl.findByRowId(value.getRowId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (values.isEmpty()) { com.liferay.expando.kernel.model.ExpandoRow row = expandoRowPersistence.fetchByPrimaryKey(value.getRowId()); expandoRowPersistence.remove(row); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4461/buggy-version/portal-impl.src.com.liferay.portlet.expando.service.impl.ExpandoValueLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1ad6e04bd62110d8044225255a043ebf2967fb7d", "Url": "https://api.github.com/repos/cgoncas/liferay-portal", "Date": "2016-11-25T09:04:16Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (thrown != null) throw thrown;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/912/buggy-version/src.main.java.com.coderskitchen.junitrules.em.EntityManagerStatement.java", "BodyUseAPI": [], "Fixed commit": "6ff96ea4280f35d78d43789581de09f853372854", "Url": "https://api.github.com/repos/coders-kitchen/JUnitRules", "Date": "2013-05-11T17:23:03Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCursor.getInt(mCursor.getColumnIndex(QuoteColumns.ISUP))) == 1) { rv.setInt(R.id.percent_changed, \"setBackgroundColor\", mContext.getResources().getColor(R.color.material_red_700)); }else { rv.setInt(R.id.percent_changed, \"setBackgroundColor\", mContext.getResources().getColor(R.color.material_green_700)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7575/buggy-version/app.src.main.java.com.sam_chordas.android.stockhawk.app_widget.StockWidgetService.java", "BodyUseAPI": [], "Fixed commit": "d1f156b0343f6957388d69e48cdd6f1a6b6c9ad9", "Url": "https://api.github.com/repos/ironthrone/StockHawk", "Date": "2016-06-08T03:20:54Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.toFile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(destinationFolder.exists())) { destinationFolder.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5975/buggy-version/Core.src.org.sleuthkit.autopsy.modules.vmextractor.VMExtractorIngestModule.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "8dc3288b0ab534c0ee1213246637f5eb80ebb95c", "Url": "https://api.github.com/repos/narfindustries/autopsy", "Date": "2016-01-08T18:49:26Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list(java.io.FilenameFilter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (files == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5975/buggy-version/Core.src.org.sleuthkit.autopsy.modules.vmextractor.VirtualMachineFinderUtility.java", "BodyUseAPI": [], "Fixed commit": "8dc3288b0ab534c0ee1213246637f5eb80ebb95c", "Url": "https://api.github.com/repos/narfindustries/autopsy", "Date": "2016-01-08T18:49:26Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ex instanceof br.bireme.scl.NoHttpResponseException) { code = br.bireme.scl.CheckUrl.NO_HTTP_RESPONSE_EXCEPTION; }else { final java.lang.String msg = ex.getMessage(); final java.lang.String lmsg = (msg == null) ? \"\" : msg.toLowerCase(); java.lang.System.out.println((((\"unknown2 -> class:\" + (ex.getClass().getName())) + \" msg: \") + lmsg)); code = br.bireme.scl.CheckUrl.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3506/buggy-version/src.java.br.bireme.scl.CheckUrl.java", "BodyUseAPI": ["java.lang.Exception.getClass()", "java.io.PrintStream.println(java.lang.String)", "java.lang.Class<? extends java.lang.Exception>.getName()", "java.lang.Exception.getMessage()"], "Fixed commit": "facb4d89213bfa5388dcc5337c8850759fa7867d", "Url": "https://api.github.com/repos/bireme/social-checklinks", "Date": "2016-07-21T11:35:11Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (missile.isActive()) missile.drawObject(g);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8078/buggy-version/szl4_project_1.src.team.uninter.mordorq.gamespace.Tower.java", "BodyUseAPI": ["team.uninter.mordorq.gamespace.Tower.Missile.drawObject(java.awt.Graphics)"], "Fixed commit": "f9526fd7511889c4e8190d2253ebbbbaa7409100", "Url": "https://api.github.com/repos/uninterruptables/szl4_repo", "Date": "2014-05-13T14:38:11Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (forceSet) { customDate = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1784/buggy-version/src.strength.history.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "141c73c1cf7011a2e6b772447f2e202803e04166", "Url": "https://api.github.com/repos/johvik/strength_history", "Date": "2013-06-06T14:07:35Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (datePickerDialog.isShowing()) { datePickerDialog.cancel(); forceSet = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1784/buggy-version/src.strength.history.MainActivity.java", "BodyUseAPI": ["android.app.DatePickerDialog.cancel()"], "Fixed commit": "141c73c1cf7011a2e6b772447f2e202803e04166", "Url": "https://api.github.com/repos/johvik/strength_history", "Date": "2013-06-06T14:07:35Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= (Build.VERSION_CODES.KITKAT)) { setLayerType(kaufland.com.coachmarklibrary.LAYER_TYPE_SOFTWARE, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1030/buggy-version/library.src.main.java.kaufland.com.coachmarklibrary.CoachmarkView.java", "BodyUseAPI": [], "Fixed commit": "c4f7ce54f3940027e08d5c52ecd3c3a174d36e3c", "Url": "https://api.github.com/repos/Kaufland/andcoachmark", "Date": "2017-03-22T15:21:14Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((responseMessage.rawData) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4659/buggy-version/JazminServer.src.jazmin.server.im.IMWebSocketSession.java", "BodyUseAPI": [], "Fixed commit": "dcf351e4ef03166c35ba4bf4424a7ac3edeee892", "Url": "https://api.github.com/repos/guooscar/JazminServer", "Date": "2015-06-16T04:00:12Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((((org.bukkit.block.BrewingStand) (brewingStand)).getBrewingTime()) == (-1)) (fuel)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4873/buggy-version/src.main.java.com.gmail.nossr50.runnables.skills.AlchemyBrewTask.java", "BodyUseAPI": [], "Fixed commit": "e3b3e1e10bda0c53e1be96b1812372a9634600ce", "Url": "https://api.github.com/repos/webhaikal/mcMMO", "Date": "2016-11-13T16:26:29Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bytesToAdd.length) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1969/buggy-version/src.main.java.com.metamx.http.client.io.AppendableByteArrayInputStream.java", "BodyUseAPI": [], "Fixed commit": "ad63f2b3a5f2dbbf88c773706bed8a828f321aa8", "Url": "https://api.github.com/repos/metamx/http-client", "Date": "2012-07-20T22:16:30Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clickable) >= 0) { android.text.style.URLSpan[] urlSpans = spannableStringBuilder.getSpans(0, spannableStringBuilder.length(), android.text.style.URLSpan.class); for (int i = 0, size = (urlSpans == null) ? 0 : urlSpans.length; i < size; i++) { android.text.style.URLSpan urlSpan = urlSpans[i]; int start = spannableStringBuilder.getSpanStart(urlSpan); int end = spannableStringBuilder.getSpanEnd(urlSpan); spannableStringBuilder.removeSpan(urlSpan); com.zzhoujay.richtext.LinkHolder linkHolder = new com.zzhoujay.richtext.LinkHolder(urlSpan.getURL()); if ((linkFixCallback) != null) { linkFixCallback.fix(linkHolder); } com.zzhoujay.richtext.spans.LongClickableURLSpan longClickableURLSpan = new com.zzhoujay.richtext.spans.LongClickableURLSpan(urlSpan.getURL(), onURLClickListener, onUrlLongClickListener, linkHolder); spannableStringBuilder.setSpan(longClickableURLSpan, start, end, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE); } }else { android.text.style.URLSpan[] urlSpans = spannableStringBuilder.getSpans(0, spannableStringBuilder.length(), android.text.style.URLSpan.class); for (int i = 0, size = (urlSpans == null) ? 0 : urlSpans.length; i < size; i++) { spannableStringBuilder.removeSpan(urlSpans[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3739/buggy-version/richtext.src.main.java.com.zzhoujay.richtext.RichText.java", "BodyUseAPI": [], "Fixed commit": "5ac07002ea3132ecbb07c167138964a1dbeadc2d", "Url": "https://api.github.com/repos/zzhoujay/RichText", "Date": "2016-11-30T07:56:11Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state.charAt(0)) == 'R') { stopTimer(); startTimer(targetTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6736/buggy-version/app.src.main.java.com.example.peter.racemanager.fragments.RaceFragment.java", "BodyUseAPI": [], "Fixed commit": "3baf1058fe03d31e4a64ee14ad08694dfcdcc48e", "Url": "https://api.github.com/repos/omgwtflolbbl/RaceManager", "Date": "2016-07-07T05:33:57Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (number < 0) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7592/buggy-version/src.main.java.org.hashids.Hashids.java", "BodyUseAPI": [], "Fixed commit": "5fb17b5c2f7537bc9661f219cb37d87e8263eb84", "Url": "https://api.github.com/repos/jiecao-fm/hashids-java", "Date": "2016-12-14T18:35:54Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.plugin.core.PluginLoader.getApplication().getPackageManager().getPackageArchiveInfo(pluginDescriptor.getInstalledPath(),java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((packageInfo.applicationInfo) != null) { packageInfo.applicationInfo.sourceDir = pluginDescriptor.getInstalledPath(); packageInfo.applicationInfo.publicSourceDir = pluginDescriptor.getInstalledPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5554/buggy-version/PluginCore.src.main.java.com.plugin.core.systemservice.AndroidAppIPackageManager.java", "BodyUseAPI": [], "Fixed commit": "284184cc1d31991a6d52e4a337bb079e410d43f7", "Url": "https://api.github.com/repos/limpoxe/Android-Plugin-Framework", "Date": "2016-09-07T08:56:39Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.plugin.core.PluginLoader.getApplication().getPackageManager().getPackageArchiveInfo(pluginDescriptor.getInstalledPath(),java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((packageInfo.applicationInfo) != null) { packageInfo.applicationInfo.sourceDir = pluginDescriptor.getInstalledPath(); packageInfo.applicationInfo.publicSourceDir = pluginDescriptor.getInstalledPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5554/buggy-version/PluginCore.src.main.java.com.plugin.core.systemservice.AndroidAppIPackageManager.java", "BodyUseAPI": [], "Fixed commit": "284184cc1d31991a6d52e4a337bb079e410d43f7", "Url": "https://api.github.com/repos/limpoxe/Android-Plugin-Framework", "Date": "2016-09-07T08:56:39Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((environment.servlets()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/370/buggy-version/src.main.java.com.cylentsystems.dropwizard.sisu.SisuApplication.java", "BodyUseAPI": [], "Fixed commit": "3b9be65b69788d6a712d35cf8c1aed0e30e3bee9", "Url": "https://api.github.com/repos/barklyprotects/dropwizard-sisu", "Date": "2015-03-16T22:34:38Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.scriptbox.panopticon.gauntlet.Gauntlet.LOGGER.isDebugEnabled()) { org.scriptbox.panopticon.gauntlet.Gauntlet.LOGGER.debug((((\"archiveDelivery: oldest message to keep of \" + (deliveries.size())) + \" deliveries: \") + oldest)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6394/buggy-version/panopticon.common.src.main.java.org.scriptbox.panopticon.gauntlet.Gauntlet.java", "BodyUseAPI": ["org.slf4j.Logger.debug((((\"archiveDelivery: oldest message to keep of \" + (deliveries.size())) + \" deliveries: \") + oldest))"], "Fixed commit": "4b8b377b5035b02a13b3a1def67135bf55f7d0fb", "Url": "https://api.github.com/repos/davidcox66/scriptbox", "Date": "2014-06-09T19:35:12Z"},
{"Line": "=>2942", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((handler.getExitValue()) != 0) { throw new java.lang.Exception((((\"Failed to start Solr using command: \" + startCmd) + \" Exception : \") + (handler.getException()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3271/buggy-version/solr.core.src.java.org.apache.solr.util.SolrCLI.java", "BodyUseAPI": ["org.apache.commons.exec.DefaultExecuteResultHandler.getException()"], "Fixed commit": "5ee18c8ab5286842af66aaeee46e6ca935b9297d", "Url": "https://api.github.com/repos/apache/lucene-solr", "Date": "2017-04-03T20:45:54Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (level == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3505/buggy-version/src.engine.network.packet.Packet78ProjectileTargetUpdate.java", "BodyUseAPI": [], "Fixed commit": "7b6468896e89828dcf506bb4bf907dfa61f96186", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-07-22T23:54:35Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((f.getParentFile()) != null) { org.nschmidt.ldparteditor.project.Project.setLastVisitedPath(f.getParentFile().getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6468/buggy-version/src.org.nschmidt.ldparteditor.shells.editortext.EditorTextWindow.java", "BodyUseAPI": ["java.io.File.getParentFile()", "org.nschmidt.ldparteditor.project.Project.setLastVisitedPath(java.lang.String)", "java.io.File.getAbsolutePath()"], "Fixed commit": "17fb38e552db50902139c49ffda17425d9ab0ba6", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-03-16T13:31:51Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(whereClause)) { select.whereClause = new java.lang.StringBuilder(whereClause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6211/buggy-version/src.istat.android.data.access.sqlite.SQLite.java", "BodyUseAPI": [], "Fixed commit": "9e47c335e6c0cc42ee76da1f76a74f2e5a7434b8", "Url": "https://api.github.com/repos/toukea/android-sqlite-access", "Date": "2017-06-28T08:54:09Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gobliip.chronos.server.entities.Tracking.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(Tracking.TrackingStatus.RUNNING.equals(trackingStatus))) { com.gobliip.chronos.server.service.MomentsService.LOGGER.error(\"Tracking currently not running, impossible to create new heartbeat moment: {}\", moment); throw new com.gobliip.chronos.server.service.exception.InvalidTrackingStateException(tracking, com.gobliip.chronos.server.service.MomentsService.TrackingAction.HEARTBEAT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7763/buggy-version/src.main.java.com.gobliip.chronos.server.service.MomentsService.java", "BodyUseAPI": [], "Fixed commit": "f82f03f37c6fbc2e18e051544262a9d25e6c6112", "Url": "https://api.github.com/repos/Gobliip/time-tracker", "Date": "2015-07-20T06:26:25Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.caliog.Villagers.Utils.QuestInventory) (event.getView())).inventoryClick(org.bukkit.event.inventory.InventoryClickEvent)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (cancel) event.setCancelled(cancel);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/139/buggy-version/src.org.caliog.Villagers.Listeners.VillagerListener.java", "BodyUseAPI": ["org.bukkit.event.inventory.InventoryClickEvent.setCancelled(boolean)"], "Fixed commit": "6a891ebdb9e39e2ce674db4df10a377497f94cbc", "Url": "https://api.github.com/repos/caliog/myRPG", "Date": "2017-01-15T12:23:04Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.orienteer.core.util.OSchemaHelper.bind(com.orientechnologies.orient.core.db.document.ODatabaseDocument)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(helper.getOClass().existsProperty(\"title\"))) helper.oProperty(\"title\", OType.STRING, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/219/buggy-version/orienteer-core.src.main.java.org.orienteer.core.module.OWidgetsModule.java", "BodyUseAPI": ["org.orienteer.core.util.OSchemaHelper.oProperty(java.lang.String,OType.STRING,int)"], "Fixed commit": "37892a650aa4a0f3042842ac4ca6bed16593a83d", "Url": "https://api.github.com/repos/OrienteerBAP/Orienteer", "Date": "2016-01-24T01:14:56Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (key.startsWith(\".\")) { key = key.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1179/buggy-version/src.main.java.com.searchly.riemann.service.RiemannService.java", "BodyUseAPI": [], "Fixed commit": "4e0859c7e73d075b131c1d8cc990cf51192a37dc", "Url": "https://api.github.com/repos/searchly/elasticsearch-monitoring-riemann-plugin", "Date": "2015-09-08T13:33:17Z"},
{"Line": "=>760", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (foundField != null) { return foundField; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5861/buggy-version/src.main.java.org.mihkel.avro.io.ExtendedJsonDecoder.java", "BodyUseAPI": [], "Fixed commit": "cc50653ec6ee43f66d78a46f0bcdacb8e119cb1e", "Url": "https://api.github.com/repos/Celos/avro-json-decoder", "Date": "2017-10-04T14:02:59Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jplus.jenkins.plugin.listener.GitListener.getModuleName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((\"pom.xml\".equals(moduleName)) || (\"src\".equals(moduleName))) { moduleName = name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1552/buggy-version/src.main.java.org.jplus.jenkins.plugin.listener.GitListener.java", "BodyUseAPI": [], "Fixed commit": "202d7a8d7157a29217bfa755e67344e191b0200c", "Url": "https://api.github.com/repos/hyberbin/AutoJenkins", "Date": "2015-11-24T00:51:22Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((e.getDamager()) instanceof org.bukkit.entity.LivingEntity)) { if (util.isEntityGriefEnabled()) { if (util.checkForWorldGuard()) { if (util.checkMonster()) { if ((e.getEntity()) instanceof org.bukkit.entity.Monster) { return; } } for (com.sk89q.worldguard.protection.regions.ProtectedRegion region : wg.getRegionManager(e.getEntity().getWorld()).getApplicableRegions(e.getEntity().getLocation())) { if (!((region.getFlag(DefaultFlag.BUILD)) == (com.sk89q.worldguard.protection.flags.StateFlag.State.ALLOW))) { if (util.isWhitelisted(region.getId())) { return; } if (util.MobProtectDisabled(e.getEntity().getWorld())) { return; } e.setCancelled(true); } } } } }else if ((e.getDamager()) instanceof org.bukkit.entity.Wolf) { if (util.checkMonster()) { if ((e.getEntity()) instanceof org.bukkit.entity.Monster) { return; } } for (com.sk89q.worldguard.protection.regions.ProtectedRegion region : wg.getRegionManager(e.getEntity().getWorld()).getApplicableRegions(e.getEntity().getLocation())) { if (!((region.getFlag(DefaultFlag.BUILD)) == (com.sk89q.worldguard.protection.flags.StateFlag.State.ALLOW))) { if (util.isWhitelisted(region.getId())) { return; } if (util.MobProtectDisabled(e.getEntity().getWorld())) { return; } e.setCancelled(true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/867/buggy-version/mobProtect.src.xize.mobprotect.events.mobprotection.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()", "com.sk89q.worldguard.bukkit.WorldGuardPlugin.getRegionManager(e.getEntity().getWorld())", "e.getEntity().getWorld()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()", "wg.getRegionManager(e.getEntity().getWorld()).getApplicableRegions(e.getEntity().getLocation())", "org.bukkit.event.entity.EntityDamageByEntityEvent.setCancelled(boolean)", "org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()", "wg.getRegionManager(e.getEntity().getWorld()).getApplicableRegions(e.getEntity().getLocation())", "e.getEntity().getWorld()", "org.bukkit.event.entity.EntityDamageByEntityEvent.setCancelled(boolean)", "com.sk89q.worldguard.bukkit.WorldGuardPlugin.getRegionManager(e.getEntity().getWorld())", "xize.mobprotect.events.mobprotection.MobProtectDisabled(e.getEntity().getWorld())", "e.getEntity().getWorld()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()", "e.getEntity().getWorld()", "e.getEntity().getLocation()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()", "xize.mobprotect.events.mobprotection.MobProtectDisabled(e.getEntity().getWorld())", "e.getEntity().getLocation()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getEntity()"], "Fixed commit": "02bb66a647447936b2300b3081227a45a4e74114", "Url": "https://api.github.com/repos/xize/mobProtect", "Date": "2013-09-29T14:20:12Z"},
{"Line": "=>1118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ContentResolver.query(android.net.Uri,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((cursor != null) && (cursor.moveToFirst())) { int columnIndex = cursor.getColumnIndex(filePathColumn[0]); filePath = cursor.getString(columnIndex); cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/829/buggy-version/app.src.main.java.com.lgallardo.qbittorrentclient.MainActivity.java", "BodyUseAPI": ["android.database.Cursor.getString(int)", "android.database.Cursor.close()", "android.database.Cursor.getColumnIndex(java.lang.String)"], "Fixed commit": "8de20af0f71646b1d9ea4129ef2bfc45cd8aeed4", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Controller", "Date": "2016-02-25T04:41:34Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (role == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/17/buggy-version/src.main.java.com.netcracker.model.entity.Role.java", "BodyUseAPI": [], "Fixed commit": "9c36b92739bbcd7ea9976936f52497b696b860c9", "Url": "https://api.github.com/repos/genchamax/office-management-system", "Date": "2017-03-29T21:59:49Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v == (newFound)) { startActivity(new android.content.Intent(this, com.example.mcw0805.wheres_my_stuff.Controller.MyListActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7550/buggy-version/app.src.main.java.com.example.mcw0805.wheres_my_stuff.Controller.Dashboard.java", "BodyUseAPI": [], "Fixed commit": "d72702126edbdf04a1a2a04bc860cd23c52a6db3", "Url": "https://api.github.com/repos/mcw0805/wheres-my-stuff", "Date": "2017-06-29T20:34:19Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((previousFragmentID) == (ambiesoft.start.presenter.fragment.PostTweetFragmentPresenter.PER_DETAIL)) { view.getFragmentManager().popBackStack(); }else { view.getFragmentManager().beginTransaction().replace(R.id.content_frame, new ambiesoft.start.view.fragment.TwitterResultListFragment(), \"TwitterFragment\").remove(view).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1703/buggy-version/app.src.main.java.ambiesoft.start.presenter.fragment.PostTweetFragmentPresenter.java", "BodyUseAPI": [], "Fixed commit": "3556052e817dd414b70635c3780a2ca50d7a9645", "Url": "https://api.github.com/repos/bryanyhy/START", "Date": "2016-09-21T06:32:42Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (config.has(radlab.rain.ScenarioTrack.CFG_RESOURCE_PATH)) { this._resourcePath = config.getString(radlab.rain.ScenarioTrack.CFG_RESOURCE_PATH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3948/buggy-version/src.radlab.rain.ScenarioTrack.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "d9c8fc73a065061f1c97ec5d82748f5daf5c072a", "Url": "https://api.github.com/repos/yungsters/rain-workload-toolkit", "Date": "2013-10-24T12:18:48Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (targetDataIndex >= (adapter.getCount())) { item.setView(null, targetDataIndex); }else { android.view.View convertView = adapter.getView(targetDataIndex, item.getView(), this); item.setView(convertView, targetDataIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2861/buggy-version/agility.src.main.src_agility.org.pinwheel.agility.view.SweetCircularView.java", "BodyUseAPI": ["org.pinwheel.agility.view.SweetCircularView.ItemWrapper.setView(android.view.View,int)", "android.widget.BaseAdapter.getView(int,android.view.View,org.pinwheel.agility.view.SweetCircularView)", "org.pinwheel.agility.view.SweetCircularView.ItemWrapper.setView(<nulltype>,int)"], "Fixed commit": "0758478648bb46e22384befdf9d166382d9781ef", "Url": "https://api.github.com/repos/dnwang/agility4android", "Date": "2016-01-15T02:35:03Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rotationEnabled)) { maxTouchCount = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7462/buggy-version/library.src.com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView.java", "BodyUseAPI": [], "Fixed commit": "18d246c3007417c26981c6060aa7b02de596b3f7", "Url": "https://api.github.com/repos/IndoorAtlas/subsampling-scale-image-view", "Date": "2017-05-24T12:15:55Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.eways.elearning.Handler.DialogPlusHandler.vitrichon) == 1) imageHandler.loadImageRound(java.lang.String.valueOf(data.getData()), hinhMatSau); else imageHandler.loadImageRound(java.lang.String.valueOf(data.getData()), avatar);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7937/buggy-version/Code.app.src.main.java.com.eways.elearning.Handler.DialogPlusHandler.java", "BodyUseAPI": [], "Fixed commit": "92a98d8945546809c6ce88e65e09401d4588703d", "Url": "https://api.github.com/repos/MTTA96/ELearning", "Date": "2017-12-28T19:04:59Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.eways.elearning.Handler.DialogPlusHandler.vitrichon) == 0) hinhMatTruoc.setImageBitmap(bitmap); else { if ((com.eways.elearning.Handler.DialogPlusHandler.vitrichon) == 1) hinhMatSau.setImageBitmap(bitmap); else avatar.setImageBitmap(bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7937/buggy-version/Code.app.src.main.java.com.eways.elearning.Handler.DialogPlusHandler.java", "BodyUseAPI": [], "Fixed commit": "92a98d8945546809c6ce88e65e09401d4588703d", "Url": "https://api.github.com/repos/MTTA96/ELearning", "Date": "2017-12-28T19:04:59Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vararg) { if ((arguments.size()) < (argumentNames.size())) { varargList = java.util.Collections.emptyList(); }else { varargList = arguments.subList(argumentNames.size(), arguments.size()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6512/buggy-version/Interpreter.src.edu.tum.lua.types.LuaFunctionInterpreted.java", "BodyUseAPI": [], "Fixed commit": "15eafc88511815dfa726a8abaf976a18c9b272ae", "Url": "https://api.github.com/repos/kobreu/compiler", "Date": "2013-08-02T09:55:12Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msgContext.getProperty(NhttpConstants.REQUEST_HOST_HEADER)) != null) { java.lang.Object headers = msgContext.getProperty(MessageContext.TRANSPORT_HEADERS); if (headers != null) { java.util.Map headersMap = ((java.util.Map) (headers)); if (!(headersMap.containsKey(HTTPConstants.HEADER_HOST))) { headersMap.put(HTTPConstants.HEADER_HOST, msgContext.getProperty(NhttpConstants.REQUEST_HOST_HEADER)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1792/buggy-version/modules.transports.core.nhttp.src.main.java.org.apache.synapse.transport.passthru.util.TargetRequestFactory.java", "BodyUseAPI": ["org.apache.axis2.context.MessageContext.getProperty(MessageContext.TRANSPORT_HEADERS)", "java.util.Map.put(HTTPConstants.HEADER_HOST,msgContext.getProperty(NhttpConstants.REQUEST_HOST_HEADER))", "org.apache.axis2.context.MessageContext.getProperty(NhttpConstants.REQUEST_HOST_HEADER)"], "Fixed commit": "d10da94526260ecb39bca92fbdf3257780625a88", "Url": "https://api.github.com/repos/Buddhima/wso2-synapse", "Date": "2016-04-19T04:24:38Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (bestResult != null) { candidates.remove(bestResult); org.lenskit.rerank.GreedyRerankingResult result = new org.lenskit.rerank.GreedyRerankingResult(bestResult.getId(), bestResult.getScore(), i, bestScore); results.add(result); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8380/buggy-version/lenskit-core.src.main.java.org.lenskit.rerank.GreedyRerankingItemRecommender.java", "BodyUseAPI": ["java.util.List<org.lenskit.api.Result>.remove(org.lenskit.api.Result)", "org.lenskit.api.Result.getScore()", "org.lenskit.api.Result.getId()"], "Fixed commit": "f8affbded79aefdd473d6d5dd7fd5ff064cf36b1", "Url": "https://api.github.com/repos/shantanusharma/lenskit", "Date": "2017-03-14T22:37:21Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(this.currentBikeStationLatestUpdateTimeSb))) { long latestUpdateTimeInMs = java.lang.Long.valueOf(this.currentBikeStationLatestUpdateTimeSb.toString()); if ((latestUpdateTimeInMs + (this.poiMaxValidityInMs)) < (this.newLastUpdateInMs)) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5163/buggy-version/src.org.mtransit.android.commons.provider.BixiBikeStationProvider.java", "BodyUseAPI": ["java.lang.Long.valueOf(java.lang.String)", "java.lang.StringBuilder.toString()"], "Fixed commit": "ccb2b19bd8e701aa253846023334964dddbfcb7a", "Url": "https://api.github.com/repos/mtransitapps/commons-android", "Date": "2015-09-30T20:16:54Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(this.currentBikeStationLastCommWithServerSb))) { long lastComWithServerInMs = java.lang.Long.valueOf(this.currentBikeStationLastCommWithServerSb.toString()); if ((lastComWithServerInMs + (this.poiMaxValidityInMs)) < (this.newLastUpdateInMs)) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5163/buggy-version/src.org.mtransit.android.commons.provider.BixiBikeStationProvider.java", "BodyUseAPI": ["java.lang.Long.valueOf(java.lang.String)", "java.lang.StringBuilder.toString()"], "Fixed commit": "ccb2b19bd8e701aa253846023334964dddbfcb7a", "Url": "https://api.github.com/repos/mtransitapps/commons-android", "Date": "2015-09-30T20:16:54Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.text.TextUtils.isEmpty(this.currentBikeStationTerminalNameSb)) || (!(android.text.TextUtils.isDigitsOnly(this.currentBikeStationTerminalNameSb)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5163/buggy-version/src.org.mtransit.android.commons.provider.BixiBikeStationProvider.java", "BodyUseAPI": [], "Fixed commit": "ccb2b19bd8e701aa253846023334964dddbfcb7a", "Url": "https://api.github.com/repos/mtransitapps/commons-android", "Date": "2015-09-30T20:16:54Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (x.startsWith(\"-\")) { lang.FObj f2 = lang.ForceLang.parse(x.substring(1)); lang.FObj f3 = f2.get(\"mult\"); if ((f3 == null) || (!(f3 instanceof lang.Function))) throw new lang.IllegalInvocationException(\"Illegal argument for hyphen-minus.\"); return ((lang.Function) (f3)).apply(\"-1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4511/buggy-version/src.lang.ForceLang.java", "BodyUseAPI": ["lang.ForceLang.parse(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "0578648fee7f1e5d1f8b0134c5028134da7edd62", "Url": "https://api.github.com/repos/SuperJedi224/ForceLang", "Date": "2017-01-23T01:49:33Z"},
{"Line": "=>1057", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (message != null) { message.setAddress(address); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6092/buggy-version/artemis-core-client.src.main.java.org.apache.activemq.artemis.core.client.impl.ClientSessionImpl.java", "BodyUseAPI": ["org.apache.activemq.artemis.api.core.Message.setAddress(org.apache.activemq.artemis.api.core.SimpleString)"], "Fixed commit": "89b53628fb30ec54e74052939fe09631cd24d2f8", "Url": "https://api.github.com/repos/clebertsuconic/activemq-artemis", "Date": "2016-06-03T15:59:09Z"},
{"Line": "=>1061", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (message != null) { if (!(address.equals(defaultAddress))) { message.setAddress(address); }else { message.setAddress(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6092/buggy-version/artemis-core-client.src.main.java.org.apache.activemq.artemis.core.client.impl.ClientSessionImpl.java", "BodyUseAPI": ["org.apache.activemq.artemis.api.core.Message.setAddress(org.apache.activemq.artemis.api.core.SimpleString)", "org.apache.activemq.artemis.api.core.Message.setAddress(<nulltype>)"], "Fixed commit": "89b53628fb30ec54e74052939fe09631cd24d2f8", "Url": "https://api.github.com/repos/clebertsuconic/activemq-artemis", "Date": "2016-06-03T15:59:09Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arrowTypeIndex == ((com.ayan4m1.multiarrow.ArrowType.values().length) - 1)) { arrowTypeIndex = 0; initialIndex = 0; }else { initialIndex = arrowTypeIndex++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1192/buggy-version/src.com.ayan4m1.multiarrow.MultiArrowPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "703445c7b979021746225951671bdaf5b580dae6", "Url": "https://api.github.com/repos/ayan4m1/multiarrow", "Date": "2011-08-05T04:48:41Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rs.first())) { conn.close(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6431/buggy-version/MovieCollection.MovieCollection.src.java.Model.DBCommand.java", "BodyUseAPI": [], "Fixed commit": "6f7d41a7aaeaee3f036035af7ce484efe05c5345", "Url": "https://api.github.com/repos/wongrg/cs347", "Date": "2015-12-11T01:30:25Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (adjustedElementName != null) { adjustedElementName = org.owasp.html.HtmlLexer.canonicalName(adjustedElementName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6288/buggy-version/src.main.java.org.owasp.html.ElementAndAttributePolicyBasedSanitizerPolicy.java", "BodyUseAPI": ["org.owasp.html.HtmlLexer.canonicalName(java.lang.String)"], "Fixed commit": "8ae326eba6b9bac6036e01850396c1af5b39e804", "Url": "https://api.github.com/repos/OWASP/java-html-sanitizer", "Date": "2016-12-12T22:23:26Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (nodeConfig == null) { timeline.GridState.log.warn((\"No configuration for \" + (ssNode.getShortName()))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2617/buggy-version/src.timeline.GridState.java", "BodyUseAPI": [], "Fixed commit": "3e3f59d0c86e08c23aab1cefbc34f0c3babd63dd", "Url": "https://api.github.com/repos/krokicki/derecho", "Date": "2016-09-26T15:39:54Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(event.getPlayer().isConversing())) { event.getPlayer().closeInventory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2759/buggy-version/src.main.java.com.Acrobot.ChestShop.Listeners.Player.PlayerTeleport.java", "BodyUseAPI": ["event.getPlayer().closeInventory()", "org.bukkit.event.player.PlayerTeleportEvent.getPlayer()"], "Fixed commit": "900009b1032da4f156b849f2e072ec42239e6921", "Url": "https://api.github.com/repos/Acrobot/ChestShop-3", "Date": "2013-08-08T18:25:44Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (g != null) { super.paintComponent(g); g.clearRect(0, 0, getWidth(), getHeight()); game.draw(g); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2033/buggy-version/src.utils.GameWindow.java", "BodyUseAPI": ["java.awt.Graphics.clearRect(int,int,int,int)", "utils.Game.draw(java.awt.Graphics)", "javax.swing.JComponent.paintComponent(java.awt.Graphics)"], "Fixed commit": "59cefdbca5ff162fc8dde53425594e68762e2bf6", "Url": "https://api.github.com/repos/bradleyholloway/ScriptLearner", "Date": "2015-03-04T20:55:35Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { android.widget.SimpleAdapter adapter = new android.widget.SimpleAdapter(getActivity().getBaseContext(), aList, R.layout.template_stream_event_item, from, to); eventsList.setAdapter(adapter); adapter.notifyDataSetChanged(); android.util.Log.d(\"Impromptu\", \"Profile view updated.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2593/buggy-version/app.src.main.java.com.example.steve.impromptu.Main.Profile.FragmentProfile.java", "BodyUseAPI": [], "Fixed commit": "9087ce2fbb2a14be479f36095d0efd1ad9623945", "Url": "https://api.github.com/repos/scobb/Impromptu", "Date": "2014-12-12T04:11:04Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.flaxsearch.resources.TermsResource.getTermsEnum(org.apache.lucene.index.Terms,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((te.next()) == null) { hasTerms = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7133/buggy-version/src.main.java.com.github.flaxsearch.resources.TermsResource.java", "BodyUseAPI": [], "Fixed commit": "b2d7d76a0d204929913ae82c6dc46a53cbaa0cb9", "Url": "https://api.github.com/repos/flaxsearch/marple", "Date": "2016-11-28T15:58:40Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasTerms) { do { collected.add(te.term().utf8ToString()); } while (((te.next()) != null) && ((--count) > 0) ); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7133/buggy-version/src.main.java.com.github.flaxsearch.resources.TermsResource.java", "BodyUseAPI": [], "Fixed commit": "b2d7d76a0d204929913ae82c6dc46a53cbaa0cb9", "Url": "https://api.github.com/repos/flaxsearch/marple", "Date": "2016-11-28T15:58:40Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (direction == \"out\") { java.io.FileOutputStream fos = new java.io.FileOutputStream(f, false); java.io.BufferedOutputStream bos = new java.io.BufferedOutputStream(fos); dO = new java.io.DataOutputStream(bos); }else if (direction == \"in\") { java.io.FileInputStream fis = new java.io.FileInputStream(f); java.io.BufferedInputStream bis = new java.io.BufferedInputStream(fis); dI = new java.io.DataInputStream(bis); }else { javax.swing.JOptionPane.showMessageDialog(null, \"Error: direction argument on openStream must be 'in' or 'out'\", null, javax.swing.JOptionPane.PLAIN_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2520/buggy-version/src.world.SimpleMapIO.java", "BodyUseAPI": [], "Fixed commit": "d3fe54a73424dfcd243781823078b8f9976728a8", "Url": "https://api.github.com/repos/briannkym/SSEngine", "Date": "2014-09-24T21:53:58Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((players) != null) { logger.logMessage(\"processstartdone\", players.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5949/buggy-version/src.main.java.is.ru.honn.rufan.process.PlayerImportProcess.java", "BodyUseAPI": [], "Fixed commit": "d041d764203d36784661231aa138b91309db985b", "Url": "https://api.github.com/repos/Rannveigg13/rufan", "Date": "2015-09-23T19:47:52Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rascalmpl.ast.AbstractAST.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (location.getURI().getScheme().equals(\"rascal\")) { java.net.URI uri = evaluator.getRascalResolver().resolve(location.getURI()); location = evaluator.getValueFactory().sourceLocation(uri, location.getOffset(), location.getLength(), location.getBeginLine(), location.getEndLine(), location.getBeginColumn(), location.getEndColumn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8830/buggy-version/src.org.rascalmpl.interpreter.debug.DebugHandler.java", "BodyUseAPI": ["org.eclipse.imp.pdb.facts.ISourceLocation.getBeginLine()", "org.eclipse.imp.pdb.facts.ISourceLocation.getBeginColumn()", "org.eclipse.imp.pdb.facts.ISourceLocation.getLength()", "evaluator.getRascalResolver().resolve(location.getURI())", "org.eclipse.imp.pdb.facts.ISourceLocation.getEndLine()", "org.eclipse.imp.pdb.facts.ISourceLocation.getEndColumn()", "org.eclipse.imp.pdb.facts.ISourceLocation.getOffset()", "evaluator.getValueFactory().sourceLocation(java.net.URI,location.getOffset(),location.getLength(),location.getBeginLine(),location.getEndLine(),location.getBeginColumn(),location.getEndColumn())", "org.eclipse.imp.pdb.facts.ISourceLocation.getURI()"], "Fixed commit": "6378d2453ce1fafdcf5312fd33e79a3d8e56461b", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2013-08-28T13:34:38Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["postRequest.execute(params).get()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (receivedData.equals(\"Marker Posted!\")) { android.widget.Toast.makeText(getApplicationContext(), receivedData, Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(getApplicationContext(), \"Sorry, the database is sleeping!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/9157/buggy-version/AndroidProjects.WhatsAppening.app.src.main.java.com.dev.cromer.jason.whatsappening.Activities.MapActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(getApplicationContext(),java.lang.String,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(getApplicationContext(), receivedData, Toast.LENGTH_SHORT).show()"], "Fixed commit": "949feaf4ac8700f25f031fb270470811523d98b0", "Url": "https://api.github.com/repos/JasonCromer/Personal_Projects", "Date": "2015-08-31T02:35:55Z"},
{"Line": "=>677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.owner) != null) com.orientechnologies.orient.core.record.ORecordInternal.track(this.owner, identifiable);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/869/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ridbag.sbtree.OSBTreeRidBag.java", "BodyUseAPI": [], "Fixed commit": "76d1807ed1388e158214b1d627343539c07f21fe", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-07-02T14:44:35Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cls == (cnv.shopify.modal.ShopifyBaseModal.class)) { }else { csv.append(cnv.shopify.ShopifyUtil.getFieldsAsCsv(((java.lang.Class<cnv.shopify.modal.ShopifyBaseModal>) (cls.getSuperclass())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4240/buggy-version/src.main.java.cnv.shopify.ShopifyUtil.java", "BodyUseAPI": ["cnv.shopify.ShopifyUtil.getFieldsAsCsv(java.lang.Class<? super T>)", "java.lang.Class<T>.getSuperclass()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "ca3e8a93e052f590670a26a8b0f30e0cde404d9c", "Url": "https://api.github.com/repos/ankurnandu-canvass/canvass-ecom", "Date": "2015-12-28T11:58:04Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTriggerListeners.size()) >= (android.hardware.SystemSensorManager.MAX_LISTENER_COUNT)) { throw new java.lang.IllegalStateException(((\"request failed, \" + \"the trigger listeners size has exceeded the maximum limit \") + (android.hardware.SystemSensorManager.MAX_LISTENER_COUNT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3768/buggy-version/core.java.android.hardware.SystemSensorManager.java", "BodyUseAPI": [], "Fixed commit": "71c1cc9bfd151cfc2bc4a942c451b45a36962e4e", "Url": "https://api.github.com/repos/AICP/frameworks_base", "Date": "2017-04-17T17:16:50Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSensorListeners.size()) >= (android.hardware.SystemSensorManager.MAX_LISTENER_COUNT)) { throw new java.lang.IllegalStateException(((\"register failed, \" + \"the sensor listeners size has exceeded the maximum limit \") + (android.hardware.SystemSensorManager.MAX_LISTENER_COUNT))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3768/buggy-version/core.java.android.hardware.SystemSensorManager.java", "BodyUseAPI": [], "Fixed commit": "71c1cc9bfd151cfc2bc4a942c451b45a36962e4e", "Url": "https://api.github.com/repos/AICP/frameworks_base", "Date": "2017-04-17T17:16:50Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(s)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/9025/buggy-version/src.main.java.org.osframework.util.DateUtil.java", "BodyUseAPI": [], "Fixed commit": "9213880854435a753ed68894aa1546424d5f3914", "Url": "https://api.github.com/repos/osframework/common-utils", "Date": "2013-02-09T04:48:48Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["neiloler.filesystem.FileSystemController.createFileAtPath(neiloler.filesystem.SimpleFile,neiloler.filesystem.FileContainer,java.util.LinkedList<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result != (neiloler.filesystem.FileSystemController.OpResult.SUCCESS)) { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3721/buggy-version/src.neiloler.filesystem.FileSystemController.java", "BodyUseAPI": [], "Fixed commit": "153d7248b7a7ce40e7ed26a4048affe451f99945", "Url": "https://api.github.com/repos/neiloler/simplefilesystem", "Date": "2015-04-16T22:53:20Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1554/buggy-version/core.src.main.java.org.apache.carbondata.core.util.DataTypeUtil.java", "BodyUseAPI": [], "Fixed commit": "c963172c43773e057cdf609501ff9c876af3bef3", "Url": "https://api.github.com/repos/chenerlu/incubator-carbondata", "Date": "2017-06-12T09:52:03Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.isEmpty()) || (!((data.equalsIgnoreCase(\"false\")) || (data.equalsIgnoreCase(\"true\"))))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1554/buggy-version/core.src.main.java.org.apache.carbondata.core.util.DataTypeUtil.java", "BodyUseAPI": [], "Fixed commit": "c963172c43773e057cdf609501ff9c876af3bef3", "Url": "https://api.github.com/repos/chenerlu/incubator-carbondata", "Date": "2017-06-12T09:52:03Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1554/buggy-version/core.src.main.java.org.apache.carbondata.core.util.DataTypeUtil.java", "BodyUseAPI": [], "Fixed commit": "c963172c43773e057cdf609501ff9c876af3bef3", "Url": "https://api.github.com/repos/chenerlu/incubator-carbondata", "Date": "2017-06-12T09:52:03Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thalesgroup.rtti._2016_02_16.ldb.StationBoardResponseType.getGetStationBoardResult()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((stationBoard.getTrainServices()) == null) { return java.util.Collections.emptyList(); }else { return stationBoard.getTrainServices().getService().stream().map(this::convertServiceItemToTrainTime).collect(java.util.stream.Collectors.toList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1842/buggy-version/src.main.java.com.cyanelix.railwatch.client.darwin.converter.response.DepartureBoardConverter.java", "BodyUseAPI": ["com.thalesgroup.rtti._2016_02_16.ldb.types.StationBoard.getTrainServices()", "stationBoard.getTrainServices().getService()", "stationBoard.getTrainServices().getService().stream()", "stationBoard.getTrainServices().getService().stream().map(this::convertServiceItemToTrainTime).collect(java.util.stream.Collector<java.lang.Object, ?, java.util.List<java.lang.Object>>)", "stationBoard.getTrainServices().getService().stream().map(this::convertServiceItemToTrainTime)"], "Fixed commit": "ff9cb390f1519f32f19ca2ff15401c5c21cac36c", "Url": "https://api.github.com/repos/Cyanelix/RailWatchProxy", "Date": "2017-03-19T08:27:14Z"},
{"Line": "=>1921", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.PriorityQueue<com.example.fantasyfootballrankings.ClassFiles.StorageClasses.PlayerObject>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((elem.values.secWorth) > 0.0) { datum.put(\"main\", (((df.format(elem.values.secWorth)) + \": \") + (elem.info.name))); }else { datum.put(\"main\", (((df.format(elem.values.worth)) + \": \") + (elem.info.name))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/913/buggy-version/FFR.src.com.example.fantasyfootballrankings.Pages.Rankings.java", "BodyUseAPI": ["java.text.DecimalFormat.format(elem.values.secWorth)", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,(((df.format(elem.values.secWorth)) + \":  \") + (elem.info.name)))", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,(((df.format(elem.values.worth)) + \": \") + (elem.info.name)))", "java.text.DecimalFormat.format(elem.values.worth)"], "Fixed commit": "7911dea314220fce8048ecca0093420aea6d6389", "Url": "https://api.github.com/repos/jbailey2010/FFR", "Date": "2013-09-25T21:52:56Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stTmArray.get(student)) != null) { stTeam = stTmArray.get(student); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3103/buggy-version/src.ARcommonMethods.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "565694d2619ddb24f90951f8534ead1e18c61149", "Url": "https://api.github.com/repos/Team-01/softEng-partB", "Date": "2015-04-07T12:10:31Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWidget().getNumberOfSeries()) == 0) { seriesAndDataLabelsRendered = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8424/buggy-version/addon.src.main.java.com.vaadin.addon.charts.shared.ChartConnector.java", "BodyUseAPI": [], "Fixed commit": "f2a9e755016a72e716cf02274bce63bbd5081365", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d.empty()) d = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4226/buggy-version/persistent_deque.src.PersistentDeque.java", "BodyUseAPI": [], "Fixed commit": "90867b9117b655a53baf5ae9e43cf0e5585e392f", "Url": "https://api.github.com/repos/happanda/adv_algo", "Date": "2013-04-15T21:14:13Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d.empty()) d = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4226/buggy-version/persistent_deque.src.PersistentDeque.java", "BodyUseAPI": [], "Fixed commit": "90867b9117b655a53baf5ae9e43cf0e5585e392f", "Url": "https://api.github.com/repos/happanda/adv_algo", "Date": "2013-04-15T21:14:13Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(songsMap.isEmpty())) util.FileManager.saveSongMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7226/buggy-version/src.util.window.MusicDialog.java", "BodyUseAPI": [], "Fixed commit": "3f4c7f655a303a90c121eceff771bfd6afd3c466", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-12-09T16:14:44Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mifosplatform.portfolio.group.domain.GroupRepositoryWrapper.findOneWithNotFoundDetection(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((group.isCenter()) && (group.hasStaff())) { org.mifosplatform.organisation.staff.domain.Staff staff = group.getStaff(); group.reassignStaff(staff, activationDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5262/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.group.service.GroupingTypesWritePlatformServiceJpaRepositoryImpl.java", "BodyUseAPI": ["org.mifosplatform.portfolio.group.domain.Group.getStaff()", "org.mifosplatform.portfolio.group.domain.Group.reassignStaff(org.mifosplatform.organisation.staff.domain.Staff,org.joda.time.LocalDate)"], "Fixed commit": "081e93598fb4d9cfb7992c166b16fb0ef3fa3649", "Url": "https://api.github.com/repos/MithunKashyap/mifosx", "Date": "2015-03-04T05:10:11Z"},
{"Line": "=>1344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((paymentIntent.getAmount()) != null) amountCalculatorLink.setBtcAmount(paymentIntent.getAmount());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6113/buggy-version/wallet.src.de.schildbach.wallet.ui.SendCoinsFragment.java", "BodyUseAPI": ["de.schildbach.wallet.PaymentIntent.getAmount()", "de.schildbach.wallet.ui.CurrencyCalculatorLink.setBtcAmount(paymentIntent.getAmount())"], "Fixed commit": "53c8fae6579b0aae1e2b3176bbd27bfdbbc750a2", "Url": "https://api.github.com/repos/HashEngineering/quarkcoin-wallet", "Date": "2017-07-02T04:40:25Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((workflowBean) != null) workflowBean.setWorkFlowHistoryItems(workflowHisObj);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3180/buggy-version/egov.egov-ptisweb.src.main.java.org.egov.ptis.actions.common.PropertyTaxBaseAction.java", "BodyUseAPI": [], "Fixed commit": "e61fe32056b84ea9d6c660940f9cb401ba849d02", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-08-19T13:26:21Z"},
{"Line": "=>1171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(objection.getState().getHistory().isEmpty())) setUpWorkFlowHistory(objection.getState().getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3180/buggy-version/egov.egov-ptisweb.src.main.java.org.egov.ptis.actions.objection.RevisionPetitionAction.java", "BodyUseAPI": ["org.egov.ptis.actions.objection.RevisionPetitionAction.setUpWorkFlowHistory(objection.getState().getId())", "objection.getState().getId()", "org.egov.ptis.domain.entity.objection.RevisionPetition.getState()"], "Fixed commit": "e61fe32056b84ea9d6c660940f9cb401ba849d02", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2016-08-19T13:26:21Z"},
{"Line": "=>714", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((taxon2ID.get(aCurrCluster)) != null) siteA.set(taxon2ID.get(aCurrCluster));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/290/buggy-version/src.dendroscope.embed.GeneralMethods.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.BitSet.set(java.lang.Integer)"], "Fixed commit": "482510544ce407953274a20c0b4e6988ff83f29a", "Url": "https://api.github.com/repos/danielhuson/dendroscope3", "Date": "2017-07-26T14:57:47Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7976/buggy-version/src.main.java.ir.pint.soltoon.soltoongame.shared.data.action.AddFighterSrv.java", "BodyUseAPI": [], "Fixed commit": "1600c33f40cc34e72accbae1403431d116a7894d", "Url": "https://api.github.com/repos/payam-int/soltoon-game", "Date": "2017-12-16T19:24:56Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPart) instanceof com.code44.finance.utils.Calculator.NumberPart) { sb.append(currentPart.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3246/buggy-version/financius.src.main.java.com.code44.finance.utils.Calculator.java", "BodyUseAPI": [], "Fixed commit": "d1854b91abb82fe0c80e7be8cb9b189bab487f1c", "Url": "https://api.github.com/repos/mvarnagiris/financius", "Date": "2015-01-03T13:21:10Z"},
{"Line": "=>993", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modelProcessor.getTarget()) instanceof com.ge.research.sadl.model.gp.Rule) { return getType(((com.ge.research.sadl.sADL.SubjHasProp) (expression)).getProp()); }else { com.ge.research.sadl.sADL.Declaration subjHasPropInDeclaration = subjHasPropIsDeclaration(((com.ge.research.sadl.sADL.SubjHasProp) (expression))); if (subjHasPropInDeclaration != null) { return getType(subjHasPropInDeclaration); }else { issueAcceptor.addError(\"This appears to be a declaration that isn't fully supported; should it be nested (in parentheses)\", expression); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8703/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": [], "Fixed commit": "1a17892cddd1cdda4baccdf8c3cef6560dbb01a7", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2017-08-23T12:37:36Z"},
{"Line": "=>2976", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((isInteger(leftConceptName)) && (isInteger(rightConceptName))) { return true; }else if ((isDecimal(leftConceptName)) && (isInteger(rightConceptName))) { return true; }else if ((isInteger(leftConceptName)) && (isDecimal(rightConceptName))) { return true; }else if ((isDecimal(leftConceptName)) && (isDecimal(rightConceptName))) { return true; }else if ((rightConceptName.getUri().equals(XSD.xstring.getURI())) && ((leftConceptName.getUri().equals(XSD.dateTime.getURI())) || (leftConceptName.getUri().equals(XSD.date.getURI())))) { return true; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8703/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": ["com.ge.research.sadl.jena.JenaBasedSadlModelValidator.isInteger(com.ge.research.sadl.model.ConceptName)", "leftConceptName.getUri().equals(XSD.dateTime.getURI())", "com.ge.research.sadl.jena.JenaBasedSadlModelValidator.isDecimal(com.ge.research.sadl.model.ConceptName)", "com.ge.research.sadl.jena.JenaBasedSadlModelValidator.isDecimal(com.ge.research.sadl.model.ConceptName)", "com.ge.research.sadl.model.ConceptName.getUri()", "com.ge.research.sadl.jena.JenaBasedSadlModelValidator.isDecimal(com.ge.research.sadl.model.ConceptName)", "rightConceptName.getUri().equals(XSD.xstring.getURI())", "com.ge.research.sadl.model.ConceptName.getUri()", "com.ge.research.sadl.jena.JenaBasedSadlModelValidator.isDecimal(com.ge.research.sadl.model.ConceptName)", "com.ge.research.sadl.model.ConceptName.getUri()", "com.ge.research.sadl.jena.JenaBasedSadlModelValidator.isInteger(com.ge.research.sadl.model.ConceptName)", "leftConceptName.getUri().equals(XSD.date.getURI())"], "Fixed commit": "1a17892cddd1cdda4baccdf8c3cef6560dbb01a7", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2017-08-23T12:37:36Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.sourceforge.fenixedu.util.StringUtils.isEmpty(((java.lang.String) (getViewState().getAttribute(\"competenceCourseLevel\"))))) { if ((getCompetenceCourse()) != null) { if ((getCompetenceCourse().getCompetenceCourseLevel(getAssociatedExecutionPeriod())) != null) { setCompetenceCourseLevel(getCompetenceCourse().getCompetenceCourseLevel(getAssociatedExecutionPeriod()).getName()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3289/buggy-version/src.main.java.net.sourceforge.fenixedu.presentationTier.backBeans.bolonhaManager.competenceCourses.CompetenceCourseManagementBackingBean.java", "BodyUseAPI": [], "Fixed commit": "2b126e8802733469985bc058d1b2c44f0f4dc9f3", "Url": "https://api.github.com/repos/ist-dsi/fenix", "Date": "2013-05-29T16:27:41Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((!(com.forgeessentials.core.ForgeEssentials.worldEditCompatilityPresent)) && (!(com.forgeessentials.core.compat.Environment.hasWorldEdit()))) { cpw.mods.fml.common.FMLCommonHandler.instance().bus().register(this); FunctionHelper.FE_INTERNAL_EVENTBUS.register(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5679/buggy-version/src.main.java.com.forgeessentials.core.compat.WorldEditNotifier.java", "BodyUseAPI": [], "Fixed commit": "327606397bee674eeb032cd65475fba9cb228237", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentialsMain", "Date": "2014-12-13T06:40:51Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (command != null) { net.minecraftforge.server.CommandHandlerForge.registerCommand(command, permission, RegisteredPermValue.OP); }else net.minecraftforge.permissions.PermissionsManager.registerPermission(permission, RegisteredPermValue.OP);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5679/buggy-version/src.main.java.com.forgeessentials.worldedit.compat.PermissionsHandler.java", "BodyUseAPI": ["net.minecraftforge.server.CommandHandlerForge.registerCommand(net.minecraft.command.ICommand,java.lang.String,RegisteredPermValue.OP)"], "Fixed commit": "327606397bee674eeb032cd65475fba9cb228237", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentialsMain", "Date": "2014-12-13T06:40:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.slobodanantonijevic.widget.FontManager.get(android.content.Context,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (typeFace != null) { setTypeface(typeFace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5594/buggy-version/customtextview.src.main.java.com.slobodanantonijevic.widget.CustomTextView.java", "BodyUseAPI": ["com.slobodanantonijevic.widget.CustomTextView.setTypeface(android.graphics.Typeface)"], "Fixed commit": "e6dbcd3f3b78044b98c2688460dcee8e959da178", "Url": "https://api.github.com/repos/slobodanantonijevic/CustomTextView", "Date": "2017-04-20T22:41:44Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cv4j.image.util.Tools.getMinMaxLoc(floatProcessor.getGray(),floatProcessor.getWidth(),floatProcessor.getHeight())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (points != null) { resultPoint = points[1]; android.graphics.Bitmap resultBitmap = bitmap1.copy(Bitmap.Config.ARGB_8888, true); android.graphics.Canvas canvas = new android.graphics.Canvas(resultBitmap); android.graphics.Rect rect = new android.graphics.Rect(); rect.set(resultPoint.x, resultPoint.y, ((resultPoint.x) + (templateProcessor.getWidth())), ((resultPoint.y) + (templateProcessor.getHeight()))); android.graphics.Paint paint = new android.graphics.Paint(); paint.setStyle(Paint.Style.STROKE); paint.setColor(Color.RED); canvas.drawRect(rect, paint); resultImage.setImageBitmap(resultBitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6240/buggy-version/app.src.main.java.com.cv4j.app.fragment.TemplateMatchFragment.java", "BodyUseAPI": [], "Fixed commit": "52e394d2d49b936bbb24dfa869e66f5b77f1ef12", "Url": "https://api.github.com/repos/imageprocessor/cv4j", "Date": "2017-09-16T13:11:06Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (Notification_MP.isPlaying()) { com.personal.hung1.checkbus.DisplayBusTiming.isAlarmSound = false; }else if ((com.personal.hung1.checkbus.DisplayBusTiming.isAlarmEnabled) && (com.personal.hung1.checkbus.DisplayBusTiming.isAlarmSound)) { Notification_MP.start(); com.personal.hung1.checkbus.DisplayBusTiming.isAlarmSound = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6157/buggy-version/app.src.main.java.com.personal.hung1.checkbus.DisplayBusTiming.java", "BodyUseAPI": ["android.media.MediaPlayer.start()"], "Fixed commit": "aa11d8b87dfc2179cb287fc59fca6b7828b9543d", "Url": "https://api.github.com/repos/mistrhuhg/CheckBusAndroid", "Date": "2017-12-09T04:18:11Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (askCamera) { net.jejer.hipda.bean.HiSettingsHelper.getInstance().setCameraPermAsked(true); perms = new java.lang.String[]{ Manifest.permission.CAMERA }; }else if (askStorage) { perms = new java.lang.String[]{ Manifest.permission.WRITE_EXTERNAL_STORAGE }; android.widget.Toast.makeText(ctx, \"\\u9700\\u8981\\u6388\\u4e88 \\\"\\u5b58\\u50a8\\u7a7a\\u95f4\\\" \\u6743\\u9650\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6898/buggy-version/hipda.src.main.java.net.jejer.hipda.utils.UIUtils.java", "BodyUseAPI": [], "Fixed commit": "8c455ce2a076731a313ee42f7edec065ded9c004", "Url": "https://api.github.com/repos/GreenSkinMonster/hipda", "Date": "2017-06-20T08:41:19Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (lastIndexOf != (-1)) { de.fxdiagram.xtext.xbase.JvmEObjectDescriptor<org.eclipse.xtext.common.types.JvmDeclaredType> _domainObject_1 = this.getDomainObject(); java.lang.String _fqn_1 = _domainObject_1.getFqn(); _xifexpression = _fqn_1.substring(0, lastIndexOf); }else { _xifexpression = \"<default>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7832/buggy-version/de.fxdiagram.xtext.xbase.xtend-gen.de.fxdiagram.xtext.xbase.JvmTypeNode.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "c30d03512be2d81154957bbf305b1b5ed93f1cf9", "Url": "https://api.github.com/repos/JanKoehnlein/FXDiagram", "Date": "2015-01-09T16:29:40Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cs403x.crowdcade.MainActivity.getScaledBitmap(java.lang.String,cs403x.crowdcade.MainActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bitmap != null) { currentImage = bitmap; cameraButton.setImageBitmap(currentImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4086/buggy-version/CrowdCade.app.src.main.java.cs403x.crowdcade.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b0d4923ba5574c9668fca5b398132ac67d8df2d4", "Url": "https://api.github.com/repos/jnallard/cs403X", "Date": "2016-05-03T01:57:36Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value1 instanceof de.neuland.jade4j.parser.node.ExpressionString) { java.lang.String expression = ((de.neuland.jade4j.parser.node.ExpressionString) (value1)).getValue(); attributes.put(key, (((value2 + \" #{\") + expression) + \"}\")); }else { attributes.put(key, ((value2 + \" \") + value1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1574/buggy-version/src.main.java.de.neuland.jade4j.parser.node.AttributedNode.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)"], "Fixed commit": "77e937adfcc38f07531d141fc81f0c70295f46d5", "Url": "https://api.github.com/repos/neuland/jade4j", "Date": "2012-09-24T19:37:16Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["behavior.SetShape.getMyValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((index < 0) || (index > (behavior.SetShape.INDEX_MAX))) { model.showMessage(\"index must be between 1-5\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1861/buggy-version/src.behavior.SetShape.java", "BodyUseAPI": [], "Fixed commit": "817a0bea6b08d25113fb8a37108de4c8924be481", "Url": "https://api.github.com/repos/th365thli/SLogo", "Date": "2013-03-26T05:18:49Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.isEmpty()) { android.widget.Toast.makeText(mContext, \"Please enter correct details\", Toast.LENGTH_SHORT).show(); }else if (result != null) { android.content.SharedPreferences sharedPreferences = android.preference.PreferenceManager.getDefaultSharedPreferences(mContext); android.content.SharedPreferences.Editor editor = sharedPreferences.edit(); editor.putInt(\"userId\", result.get(0).getmId()); editor.putString(\"userToken\", \"loggedin\"); editor.apply(); android.content.Intent intent = new android.content.Intent(mContext, com.brightfuture.templateproject.activities.AdminDashboard.class); intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); mContext.startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5763/buggy-version/app.src.main.java.com.brightfuture.templateproject.services.LogInUser.java", "BodyUseAPI": ["result.get(0).getmId()", "SharedPreferences.Editor.putInt(java.lang.String,result.get(0).getmId())", "java.util.List<com.brightfuture.templateproject.models.Users>.get(int)"], "Fixed commit": "14cae1c8ce2ba46ebaccce81ae5ec440c5c30b02", "Url": "https://api.github.com/repos/drofnnuD/meetingroomsandroid", "Date": "2015-12-08T12:17:48Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.content.ContextCompat.checkSelfPermission(org.fossasia.phimpme.base.BaseActivity,android.Manifest.permission.WRITE_EXTERNAL_STORAGE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (checkStoragePermission == (android.content.pm.PackageManager.PERMISSION_GRANTED)) presentShowcaseSequence();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1637/buggy-version/app.src.main.java.org.fossasia.phimpme.base.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "51d0a6b197d21bae337148c552e238b12db09418", "Url": "https://api.github.com/repos/robillo/phimpme-android", "Date": "2017-10-03T17:12:53Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getPrivateAttributes()) != null) { for (com.telefonica.euro_iaas.paasmanager.model.Attribute att : p.getPrivateAttributes()) { if ((att.getType()) == null) { att.setType(\"Plain\"); } checkType(att); checkValue(att); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2132/buggy-version/rest-api.src.main.java.com.telefonica.euro_iaas.paasmanager.rest.validation.ProductValidatorImpl.java", "BodyUseAPI": ["com.telefonica.euro_iaas.paasmanager.model.dto.ProductReleaseDto.getPrivateAttributes()"], "Fixed commit": "6069ee986350d5658bd7f6a7d702d615dad7bca9", "Url": "https://api.github.com/repos/alberts-tid/fiware-paas", "Date": "2014-12-03T17:09:09Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((state()) == (RoleState.UAV_FLYING)) || ((state()) == (RoleState.UAV_TAKE_OFF))) || ((state()) == (RoleState.UAV_LOITERING))) || ((state()) == (RoleState.UAV_LANDING))) nextState(RoleState.UAV_NO_SIGNAL, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1764/buggy-version/src.NewModel.Roles.UAVRole.java", "BodyUseAPI": [], "Fixed commit": "c258340d271185a105b6ec7e4d67bb576c4d0c3e", "Url": "https://api.github.com/repos/tjflexmaster/UAV_ROLE_MODEL", "Date": "2013-04-10T23:08:25Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((NewModel.Simulation.Simulator.getInstance().getRoleState(RoleType.ROLE_UAV_GUI)) == (RoleState.UGUI_AUDIBLE_ALARM)) { nextState(RoleState.PILOT_OBSERVING_GUI, 1); }else if ((NewModel.Simulation.Simulator.getInstance().getRoleState(RoleType.ROLE_UAV_GUI)) == (RoleState.UGUI_INACCESSIBLE)) { nextState(RoleState.PILOT_POKE_UGUI, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1764/buggy-version/src.NewModel.Roles.PilotRole.java", "BodyUseAPI": [], "Fixed commit": "c258340d271185a105b6ec7e4d67bb576c4d0c3e", "Url": "https://api.github.com/repos/tjflexmaster/UAV_ROLE_MODEL", "Date": "2013-04-10T23:08:25Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.createnet.raptor.auth.services.UserService.getByUuid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(rawUser.getEmail().equals(user.getEmail()))) { org.createnet.raptor.models.auth.User exists = userService.findByEmail(rawUser.getEmail()); if (exists != null) { return org.createnet.raptor.models.response.JsonErrorResponse.entity(HttpStatus.BAD_REQUEST, \"Email already registered\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/450/buggy-version/raptor-api.raptor-auth.src.main.java.org.createnet.raptor.auth.controller.UserController.java", "BodyUseAPI": ["org.createnet.raptor.auth.services.UserService.findByEmail(rawUser.getEmail())", "org.createnet.raptor.models.auth.User.getEmail()"], "Fixed commit": "08a01224fc44dece3eb713953ce41e208dc0e5e3", "Url": "https://api.github.com/repos/raptorbox/raptor", "Date": "2017-08-19T18:37:41Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (discriminatorUsage.contains(VariableMapping.USAGE_DISCRIMINATOR_VARIABLE)) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8848/buggy-version/plugins.ru.runa.gpd.src.ru.runa.gpd.lang.model.MultiTaskState.java", "BodyUseAPI": [], "Fixed commit": "513a0a4a62f36ddf136c16ff8a2cdb51cda3299b", "Url": "https://api.github.com/repos/dataobject/runawfe-devstudio", "Date": "2017-01-16T19:56:03Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((finderMethod.getParameterTypes().length) != 1) { throw org.jboss.as.cmp.CmpMessages.MESSAGES.illegalNumberOfArgumentsForFindByPrimaryKey(finderMethod.getParameterTypes().length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7508/buggy-version/cmp.src.main.java.org.jboss.as.cmp.component.interceptors.CmpEntityBeanHomeFinderInterceptorFactory.java", "BodyUseAPI": ["java.lang.reflect.Method.getParameterTypes()", "org.jboss.as.cmp.CmpMessages.MESSAGES.illegalNumberOfArgumentsForFindByPrimaryKey(int)"], "Fixed commit": "ae61f5fefd1f1a6ce1a4d3b8c99ae91cd024012b", "Url": "https://api.github.com/repos/olukas/jboss-as", "Date": "2013-01-14T18:05:20Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cache.containsKey(key)) { final org.jboss.as.ejb3.component.entity.entitycache.ReferenceCountingEntityCache.CacheEntry cacheEntry = cache.get(key); return !(cacheEntry.instance.isRemoved()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7508/buggy-version/ejb3.src.main.java.org.jboss.as.ejb3.component.entity.entitycache.ReferenceCountingEntityCache.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentMap<java.lang.Object, org.jboss.as.ejb3.component.entity.entitycache.ReferenceCountingEntityCache.CacheEntry>.get(java.lang.Object)"], "Fixed commit": "ae61f5fefd1f1a6ce1a4d3b8c99ae91cd024012b", "Url": "https://api.github.com/repos/olukas/jboss-as", "Date": "2013-01-14T18:05:20Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isTransactionActive())) || (!(cache.containsKey(key)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7508/buggy-version/ejb3.src.main.java.org.jboss.as.ejb3.component.entity.entitycache.TransactionLocalEntityCache.java", "BodyUseAPI": [], "Fixed commit": "ae61f5fefd1f1a6ce1a4d3b8c99ae91cd024012b", "Url": "https://api.github.com/repos/olukas/jboss-as", "Date": "2013-01-14T18:05:20Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIntent().hasExtra(\"item_id\")) && (!(getIntent().getStringExtra(\"item_id\").equals(\"\")))) id = getIntent().getStringExtra(\"item_id\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4740/buggy-version/src.de.geeksfactory.opacclient.frontend.SearchResultDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "9e2065f7f0cc6be8f2da6e065bdbbe8932f85bee", "Url": "https://api.github.com/repos/raphaelm/opacclient", "Date": "2013-01-07T18:46:10Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mEditMode) toolbar.changeColor(Color.YELLOW); else toolbar.changeColor(Color.WHITE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2360/buggy-version/app.src.main.java.com.ethan.myclub.club.activitylist.viewmodel.ClubActivityListViewModel.java", "BodyUseAPI": [], "Fixed commit": "53d57e1adab56dfea99f2442203b9c0ba886eb11", "Url": "https://api.github.com/repos/Ethan-yt/MyClub", "Date": "2017-04-09T05:04:52Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mp) != null) { mp.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/566/buggy-version/src.com.vorsk.crossfitr.TabataActivity.java", "BodyUseAPI": [], "Fixed commit": "9f7f0a490b203a896b9cceda3ef6e00f6a729392", "Url": "https://api.github.com/repos/mrlanrat/CrossFitr", "Date": "2012-06-04T01:48:59Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mp) != null) { mp.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/566/buggy-version/src.com.vorsk.crossfitr.StopwatchActivity.java", "BodyUseAPI": [], "Fixed commit": "9f7f0a490b203a896b9cceda3ef6e00f6a729392", "Url": "https://api.github.com/repos/mrlanrat/CrossFitr", "Date": "2012-06-04T01:48:59Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mp) != null) { mp.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/566/buggy-version/src.com.vorsk.crossfitr.TimerActivity.java", "BodyUseAPI": [], "Fixed commit": "9f7f0a490b203a896b9cceda3ef6e00f6a729392", "Url": "https://api.github.com/repos/mrlanrat/CrossFitr", "Date": "2012-06-04T01:48:59Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(input.trim().isEmpty())) { queryDoc = searcher.parseTopic(input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3036/buggy-version/information_retrieval_ex1.src.main.java.main.BasicSearcher.java", "BodyUseAPI": ["searcher.Searcher.parseTopic(java.lang.String)"], "Fixed commit": "67b2a9ea6b4404b70d5faa0474fccee60fec8022", "Url": "https://api.github.com/repos/andreas-riegler/ir_ex1", "Date": "2015-04-11T12:27:28Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((taskName) != null) { name = add(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8236/buggy-version/src.logic.Logic.java", "BodyUseAPI": [], "Fixed commit": "a5e6eb79c0b2c67e6836b240b4691e10363cecc0", "Url": "https://api.github.com/repos/cs2103aug2015-w14-4j/main", "Date": "2015-11-08T13:40:51Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((new java.util.Random().nextDouble()) > (org.github.MrCrime.More_Dangers.Main.getWebChance())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5201/buggy-version/src.main.java.org.github.MrCrime.More_Dangers.spiderwebs.SpiderAttackListener.java", "BodyUseAPI": [], "Fixed commit": "bfa141f6769469bcc9aa6d3126bd25ebbc6998e4", "Url": "https://api.github.com/repos/LMiljak/More-Dangers", "Date": "2015-08-21T12:39:40Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((underGrounders.size()) == 0) { for (com.cavernwars.entities.Entity e : aboveGrounders) { e.attacking = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7222/buggy-version/com.cavernwars.Controller.java", "BodyUseAPI": [], "Fixed commit": "b22ffe4ce412ed920daa1e382c828cd26fa12599", "Url": "https://api.github.com/repos/elc1798/CavernWars-Java", "Date": "2015-06-14T03:48:32Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aboveGrounders.size()) == 0) { for (com.cavernwars.entities.Entity e : underGrounders) { e.attacking = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7222/buggy-version/com.cavernwars.Controller.java", "BodyUseAPI": [], "Fixed commit": "b22ffe4ce412ed920daa1e382c828cd26fa12599", "Url": "https://api.github.com/repos/elc1798/CavernWars-Java", "Date": "2015-06-14T03:48:32Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((socket) == null) || (!(socket.isConnected()))) { socket = new java.net.Socket(host, port); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3204/buggy-version/src.main.java.br.com.binarti.jbeanstalkc.DefaultBeanstalkClient.java", "BodyUseAPI": [], "Fixed commit": "7fef17d7c9ec1c5027041ad78fb6de485f19aa71", "Url": "https://api.github.com/repos/francofabio/jbeanstalkc", "Date": "2016-05-21T16:13:45Z"},
{"Line": "=>754", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSelectedImageView) != null) com.mobisys.android.ibp.widget.MImageLoader.displayImage(this, selectedImage.toString(), mSelectedImageView, R.drawable.user_stub);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4876/buggy-version/IBP.src.com.mobisys.android.ibp.NewObservationActivity.java", "BodyUseAPI": [], "Fixed commit": "56f88f3d90323ef6a8c053c95d10b5d7c3694c37", "Url": "https://api.github.com/repos/strandls/biodiv-mobile-android", "Date": "2015-04-22T14:11:36Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getEndTime()) != null) { cal.setTime(event.getEndTime()); intent.putExtra(CalendarContract.EXTRA_EVENT_END_TIME, cal.getTimeInMillis()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6804/buggy-version/app.src.main.java.com.loz.surbitonfoodfestival.events.EventActivity.java", "BodyUseAPI": ["java.util.Calendar.setTime(event.getEndTime())", "com.loz.surbitonfoodfestival.feed.EventData.getEndTime()"], "Fixed commit": "59fecb7d85dfbab6b725aa2acce6d19b5bb48464", "Url": "https://api.github.com/repos/lozarcher/eventapp-android-foodfest", "Date": "2016-03-13T12:15:08Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((override != null) && ((override.getServerInstanceName()) != null)) { dest.setServerInstanceName(override.getServerInstanceName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6202/buggy-version/web.src.main.java.org.jboss.metadata.merge.web.jboss.JBossWebMetaDataMerger.java", "BodyUseAPI": ["org.jboss.metadata.web.jboss.JBossWebMetaData.getServerInstanceName()", "org.jboss.metadata.web.jboss.JBossWebMetaData.setServerInstanceName(override.getServerInstanceName())"], "Fixed commit": "eb27601836348d30583e0df41f2b8953c29a52a6", "Url": "https://api.github.com/repos/wfink/metadata", "Date": "2013-11-06T16:18:22Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((override != null) && ((override.getServletContainerName()) != null)) { dest.setServletContainerName(override.getServletContainerName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6202/buggy-version/web.src.main.java.org.jboss.metadata.merge.web.jboss.JBossWebMetaDataMerger.java", "BodyUseAPI": ["org.jboss.metadata.web.jboss.JBossWebMetaData.setServletContainerName(override.getServletContainerName())", "org.jboss.metadata.web.jboss.JBossWebMetaData.getServletContainerName()"], "Fixed commit": "eb27601836348d30583e0df41f2b8953c29a52a6", "Url": "https://api.github.com/repos/wfink/metadata", "Date": "2013-11-06T16:18:22Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj == null) || (!(obj instanceof org.ballerinalang.model.values.BTypeValue))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8623/buggy-version/modules.ballerina-core.src.main.java.org.ballerinalang.model.values.BTypeValue.java", "BodyUseAPI": [], "Fixed commit": "f345b6cff53a2adcfbd89b68d0257f0197ed0708", "Url": "https://api.github.com/repos/chamil321/ballerina", "Date": "2017-08-01T09:33:44Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.eclipse.jface.util.Util.isCocoa()) && (control instanceof org.eclipse.swt.widgets.Text)) { control.getParent().layout(new org.eclipse.swt.widgets.Control[]{ control }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7403/buggy-version/src.main.java.it.albertus.jface.Formatter.java", "BodyUseAPI": ["control.getParent().layout(org.eclipse.swt.widgets.Control[])", "org.eclipse.swt.widgets.Control.getParent()"], "Fixed commit": "3edc83a2850e829b77beda8fddceef84a3649839", "Url": "https://api.github.com/repos/Albertus82/JFaceUtils", "Date": "2016-11-01T21:06:18Z"},
{"Line": "=>1549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((responseStatus.emailNameTable.get(instructor.email)) == null) { responseStatus.noResponse.add(instructor.name); responseStatus.emailNameTable.put(instructor.email, instructor.name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8036/buggy-version/src.main.java.teammates.logic.core.FeedbackSessionsLogic.java", "BodyUseAPI": ["responseStatus.emailNameTable.put(instructor.email,instructor.name)", "responseStatus.noResponse.add(instructor.name)"], "Fixed commit": "e0569acbf8a267525a9822b5d45b710e6c13b2d6", "Url": "https://api.github.com/repos/TEAMMATES/repo", "Date": "2014-07-07T06:57:46Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.runouw.rcodec.CoderData>.put(java.lang.String,com.runouw.rcodec.CoderData)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (last == null) { keysOrdered.add(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7664/buggy-version/src.main.java.com.runouw.rcodec.CoderNode.java", "BodyUseAPI": [], "Fixed commit": "7db89094645edbe6077e62193a97cab7ac76851b", "Url": "https://api.github.com/repos/runouw-dev/RCodec", "Date": "2017-06-02T06:08:49Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((balance) < (-100.0F)) { balance = (balance) + amount; return \"Cannot overdraw more than $100\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3255/buggy-version/src.banking.primitive.core.Savings.java", "BodyUseAPI": [], "Fixed commit": "4fe3adc79e46b8d1ef836f07204b7223e3f1b057", "Url": "https://api.github.com/repos/ljmatth1/cst316_codereviewlab_ljmatth1", "Date": "2016-02-09T04:03:26Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends de.uniluebeck.itm.tr.iwsn.portal.WiseGuiServiceImpl>.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (resource == null) { throw new java.lang.IllegalArgumentException((\"The internal version of WiseGui cannot be started. \" + (\"Did you forget to initialize and update the submodule running \" + \"'git submodule init' and 'git submodule update'?\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2804/buggy-version/iwsn-portal.src.main.java.de.uniluebeck.itm.tr.iwsn.portal.WiseGuiServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "e2279dd239c47dfd09febc6476ef558a7ee84e8e", "Url": "https://api.github.com/repos/itm/testbed-runtime", "Date": "2013-09-30T12:34:02Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getAction().equals(Action.RIGHT_CLICK_BLOCK)) { e.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8912/buggy-version/src.com.jabyftw.gh.GlassHelmet.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerInteractEvent.setCancelled(boolean)"], "Fixed commit": "fef4eb7bc7161ae1c75c8297ef2c51e880acd0de", "Url": "https://api.github.com/repos/rfsantos1996/GlassHelmet", "Date": "2014-01-15T14:19:57Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((wrappedEntity) != null) && ((wrappedEntity.getContentLength()) > 0)) { return new java.util.zip.GZIPInputStream(content); }else { return wrappedEntity.getContent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4451/buggy-version/rest-assured.src.main.java.io.restassured.internal.http.GZIPEncoding.java", "BodyUseAPI": ["io.restassured.internal.http.GZIPEncoding.GZIPDecompressingEntity.getContent()"], "Fixed commit": "a3f34e7cf0b3ffc59b649b5118208cb4553d6b56", "Url": "https://api.github.com/repos/rest-assured/rest-assured", "Date": "2017-02-27T06:46:18Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonElement.getAsJsonObject().get(\"found\").getAsBoolean()) { items.add(new com.github.vanroy.springdata.jest.internal.MultiDocumentResult.MultiDocumentResultItem(jsonElement)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3402/buggy-version/spring-data-jest.src.main.java.com.github.vanroy.springdata.jest.internal.MultiDocumentResult.java", "BodyUseAPI": ["java.util.List<com.github.vanroy.springdata.jest.internal.MultiDocumentResult.MultiDocumentResultItem>.add(com.github.vanroy.springdata.jest.internal.MultiDocumentResult.MultiDocumentResultItem)"], "Fixed commit": "1f64936a3310b2a48e19b52b5fc0287e448c9fb4", "Url": "https://api.github.com/repos/jensfischerhh/spring-data-jest", "Date": "2017-09-14T19:39:04Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((proc.getPartitiontable()) == null) { return new org.voltdb.ProcedurePartitionData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6395/buggy-version/src.frontend.org.voltdb.ProcedurePartitionData.java", "BodyUseAPI": [], "Fixed commit": "1b4ac885619301c65cf48945569410f5f3ed2846", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2017-11-27T07:39:17Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((proc.getPartitiontable2()) != null) { partitionTableName2 = proc.getPartitiontable2().getTypeName(); columnName2 = proc.getPartitioncolumn2().getTypeName(); partitionIndex2 = java.lang.Integer.toString(proc.getPartitionparameter2()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6395/buggy-version/src.frontend.org.voltdb.ProcedurePartitionData.java", "BodyUseAPI": ["proc.getPartitioncolumn2().getTypeName()", "org.voltdb.catalog.Procedure.getPartitioncolumn2()", "org.voltdb.catalog.Procedure.getPartitiontable2()", "proc.getPartitiontable2().getTypeName()", "org.voltdb.catalog.Procedure.getPartitionparameter2()", "java.lang.Integer.toString(proc.getPartitionparameter2())"], "Fixed commit": "1b4ac885619301c65cf48945569410f5f3ed2846", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2017-11-27T07:39:17Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["publication.getEvent().getEventGroup().getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(publication.getEvent().getEventGroup().getNotation().equals(eventName))) eventName += (\" - \" + (publication.getEvent().getEventGroup().getNotation())) + \",\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/9177/buggy-version/src.main.java.de.rwth.i9.palm.feature.researcher.ResearcherPublicationImpl.java", "BodyUseAPI": ["de.rwth.i9.palm.model.Publication.getEvent()", "publication.getEvent().getEventGroup().getNotation()", "publication.getEvent().getEventGroup()"], "Fixed commit": "6218a0368fc8cd4b70d7f3f58c7484dd9dcdd7e2", "Url": "https://api.github.com/repos/palm-toolkit/palm-core", "Date": "2016-01-22T12:21:12Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eachPublication.select(\"div.data\").first()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dataElement == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/9177/buggy-version/src.main.java.de.rwth.i9.palm.datasetcollect.service.DblpPublicationCollection.java", "BodyUseAPI": [], "Fixed commit": "6218a0368fc8cd4b70d7f3f58c7484dd9dcdd7e2", "Url": "https://api.github.com/repos/palm-toolkit/palm-core", "Date": "2016-01-22T12:21:12Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (aContainer instanceof java.util.Map) { @java.lang.SuppressWarnings(\"unchecked\") java.util.Map<java.lang.String, java.lang.Object> tempMap = ((java.util.Map<java.lang.String, java.lang.Object>) (aContainer)); for (java.util.Map.Entry<java.lang.String, java.lang.Object> tempEntry : tempMap.entrySet()) { tempResultMap.put(tempEntry.getKey(), tempEntry.getValue()); } }else { for (java.beans.PropertyDescriptor tempDescriptor : java.beans.Introspector.getBeanInfo(aContainer.getClass()).getPropertyDescriptors()) { java.lang.reflect.Method tempReadMethod = tempDescriptor.getReadMethod(); if (tempReadMethod != null) { if (java.util.Map.class.isAssignableFrom(tempDescriptor.getPropertyType())) { @java.lang.SuppressWarnings(\"unchecked\") java.util.Map<java.lang.String, java.lang.Object> tempMap = ((java.util.Map<java.lang.String, java.lang.Object>) (tempReadMethod.invoke(aContainer))); for (java.util.Map.Entry<java.lang.String, java.lang.Object> tempEntry : tempMap.entrySet()) { tempResultMap.put(tempEntry.getKey(), tempEntry.getValue()); } }else { tempResultMap.put(tempDescriptor.getName(), tempReadMethod.invoke(aContainer)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6929/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.utils.ParameterUtil.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(java.lang.Object)", "java.lang.reflect.Method.invoke(java.lang.Object)", "java.lang.Object.getClass()", "java.beans.BeanInfo.getPropertyDescriptors()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)", "java.beans.Introspector.getBeanInfo(java.lang.Class<? extends java.lang.Object>)"], "Fixed commit": "52dbf49864e6daa98e1cd33af4a0f2cbf76ca5cf", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2015-06-18T14:33:34Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line.length()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8041/buggy-version/src.main.java.pl.pg.eti.biomed.bioinf.parsers.ClusterParser.java", "BodyUseAPI": [], "Fixed commit": "70d96a349742bd9ce356a626537cc37babe75118", "Url": "https://api.github.com/repos/ifar/Bioinformatics", "Date": "2014-12-14T15:39:22Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.pg.eti.biomed.bioinf.parsers.ClusterParser.getEdgeFromLine(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (edge != null) edges.add(pl.pg.eti.biomed.bioinf.parsers.ClusterParser.getEdgeFromLine(edgesData[i]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8041/buggy-version/src.main.java.pl.pg.eti.biomed.bioinf.parsers.ClusterParser.java", "BodyUseAPI": [], "Fixed commit": "70d96a349742bd9ce356a626537cc37babe75118", "Url": "https://api.github.com/repos/ifar/Bioinformatics", "Date": "2014-12-14T15:39:22Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dot1) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5617/buggy-version/app.src.main.java.com.breadwallet.presenter.activities.PinActivity.java", "BodyUseAPI": [], "Fixed commit": "7cf65abce2ffd96b8396206a0b4a7e169c9f7f4c", "Url": "https://api.github.com/repos/breadwallet/breadwallet-android", "Date": "2017-04-20T17:50:38Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xdi.service.CacheService.get(OxTrustConstants.CACHE_METRICS_NAME,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (entries == null) { entries = findAuthenticationMetrics((-countDays)); cacheService.put(OxTrustConstants.CACHE_METRICS_NAME, key, entries); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4487/buggy-version/server.src.main.java.org.gluu.oxtrust.service.MetricService.java", "BodyUseAPI": [], "Fixed commit": "ceab96b1433451acc89d91bbde0cdaf33b619a9b", "Url": "https://api.github.com/repos/GluuFederation/oxTrust", "Date": "2015-09-14T19:38:20Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mediaworx.intellij.opencmsplugin.actions.menus.AnActionEvent.getPresentation()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((presentation.isEnabled()) != (isPluginEnabled())) { presentation.setEnabled(isPluginEnabled()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8879/buggy-version/src.com.mediaworx.intellij.opencmsplugin.actions.menus.OpenCmsMainMenu.java", "BodyUseAPI": ["com.mediaworx.intellij.opencmsplugin.actions.menus.Presentation.setEnabled(isPluginEnabled())"], "Fixed commit": "1df9d6ccd698596558c1e4566a9a5b1ba027f7fa", "Url": "https://api.github.com/repos/mediaworx/opencms-intellijplugin", "Date": "2014-06-16T09:09:39Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (k == (java.awt.event.KeyEvent.VK_F)) player.setFiring(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2831/buggy-version/src.GameState.Level1State.java", "BodyUseAPI": [], "Fixed commit": "d9d682adfd164abd12e08784d6c23f0e189e2727", "Url": "https://api.github.com/repos/arkuhn/PlatformerDemo", "Date": "2016-04-21T01:17:02Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (k == (java.awt.event.KeyEvent.VK_R)) player.setScratching(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2831/buggy-version/src.GameState.Level1State.java", "BodyUseAPI": [], "Fixed commit": "d9d682adfd164abd12e08784d6c23f0e189e2727", "Url": "https://api.github.com/repos/arkuhn/PlatformerDemo", "Date": "2016-04-21T01:17:02Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["req.getRequestURI().split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((splits.length) != 4) { throw new java.io.FileNotFoundException(\"Invalid file\"); }else if (splits[3].toLowerCase().contains(\".php\")) { throw new java.io.FileNotFoundException(\"File does not appear to be an image\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7672/buggy-version/src.main.java.foodtruck.server.ImageServlet.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "fcc97758a2a14963f87d1995cb37fe90cd3d47b6", "Url": "https://api.github.com/repos/aviolette/foodtrucklocator", "Date": "2015-09-12T12:24:41Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasNext()) { i = (i) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2801/buggy-version/genophenbrowser-client.src.main.java.com.gmi.nordborglab.browser.client.mvp.home.wizard.BasicStudyWizardPresenter.java", "BodyUseAPI": [], "Fixed commit": "ca59eb153d6fcbdf49432ee2bde90b1d9c44fda5", "Url": "https://api.github.com/repos/timeu/GWA-Portal", "Date": "2016-01-14T16:12:37Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasPrevious()) { i = (i) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2801/buggy-version/genophenbrowser-client.src.main.java.com.gmi.nordborglab.browser.client.mvp.home.wizard.BasicStudyWizardPresenter.java", "BodyUseAPI": [], "Fixed commit": "ca59eb153d6fcbdf49432ee2bde90b1d9c44fda5", "Url": "https://api.github.com/repos/timeu/GWA-Portal", "Date": "2016-01-14T16:12:37Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (status != null) { model.addAttribute(\"patientStatus\", status); }else { model.addAttribute(\"patientStatus\", \"Unknown\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8637/buggy-version/omod.src.main.java.org.openmrs.module.patientdashboardapp.page.controller.MainPageController.java", "BodyUseAPI": ["org.openmrs.ui.framework.page.PageModel.addAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "76e126dc368133bb0b08277c53781ef1d947b10e", "Url": "https://api.github.com/repos/bespokeinteractive/patientdashboardapp", "Date": "2016-05-06T10:31:19Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.hospitalcore.PatientQueueService.getLastOPDEncounter(org.openmrs.Patient)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (lastEncounter != null) { lastVisitDate = lastEncounter.getEncounterDatetime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8637/buggy-version/omod.src.main.java.org.openmrs.module.patientdashboardapp.page.controller.MainPageController.java", "BodyUseAPI": ["org.openmrs.Encounter.getEncounterDatetime()"], "Fixed commit": "76e126dc368133bb0b08277c53781ef1d947b10e", "Url": "https://api.github.com/repos/bespokeinteractive/patientdashboardapp", "Date": "2016-05-06T10:31:19Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.hospitalcore.PatientQueueService.getLastOPDEncounter(org.openmrs.Patient)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (lastEncounter != null) { lastVisitDate = lastEncounter.getEncounterDatetime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8637/buggy-version/omod.src.main.java.org.openmrs.module.patientdashboardapp.page.controller.TriagePageController.java", "BodyUseAPI": ["org.openmrs.Encounter.getEncounterDatetime()"], "Fixed commit": "76e126dc368133bb0b08277c53781ef1d947b10e", "Url": "https://api.github.com/repos/bespokeinteractive/patientdashboardapp", "Date": "2016-05-06T10:31:19Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((((p1.x) > (x + width)) || ((p1.x) < x)) || (((p1.y) > (y + height)) || ((p1.y) < y))) || (((p1.z) > (z + depth)) || ((p1.z) < z))) && (((((p2.x) > (x + width)) || ((p2.x) < x)) || (((p2.y) > (y + height)) || ((p2.y) < y))) || (((p2.z) > (z + depth)) || ((p2.z) < z)))) { javax.vecmath.Vector3f dir = new javax.vecmath.Vector3f(p1); dir.sub(p2); eu.mihosoft.vrl.reflection.Pair<java.lang.Boolean, eu.mihosoft.vrl.reflection.Pair<java.lang.Float, java.lang.Float>> res = edu.gcsc.vrl.swcdensityvis.SWCUtility.RayBoxIntersection(p1, dir, new javax.vecmath.Vector3f(x, y, z), new javax.vecmath.Vector3f((x + width), (y + height), (z + depth))); if (res.getFirst()) { javax.vecmath.Vector3f x1 = new javax.vecmath.Vector3f(p1); javax.vecmath.Vector3f x2 = new javax.vecmath.Vector3f(p1); javax.vecmath.Vector3f scaled1 = new javax.vecmath.Vector3f(dir); javax.vecmath.Vector3f scaled2 = new javax.vecmath.Vector3f(dir); scaled1.scale(res.getSecond().getFirst()); scaled2.scale(res.getSecond().getSecond()); x1.add(scaled1); x2.add(scaled2); javax.vecmath.Vector3f segment = new javax.vecmath.Vector3f(x2); segment.sub(x1); length += segment.length(); } }else { java.lang.System.out.println((((((((((((((((\"p1: \" + p1) + \", p2: \") + p2) + \", x: \") + x) + \", y: \") + y) + \", z: \") + z) + \", , width+x: \") + (width + x)) + \", height+y: \") + (height + y)) + \", depth+z: \") + (depth + z))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8757/buggy-version/src.main.java.edu.gcsc.vrl.swcdensityvis.SWCUtility.java", "BodyUseAPI": ["edu.gcsc.vrl.swcdensityvis.SWCUtility.RayBoxIntersection(javax.vecmath.Vector3f,javax.vecmath.Vector3f,javax.vecmath.Vector3f,javax.vecmath.Vector3f)", "javax.vecmath.Vector3f.sub(javax.vecmath.Vector3f)", "java.io.PrintStream.println((((((((((((((((\"p1: \" + p1) + \", p2: \") + p2) + \", x: \") + x) + \", y: \") + y) + \", z: \") + z) + \", , width+x: \") + (width + x)) + \", height+y: \") + (height + y)) + \", depth+z: \") + (depth + z)))"], "Fixed commit": "314c767091f36144973cd966cd515a58e317c252", "Url": "https://api.github.com/repos/stephanmg/VRL-SWC-Density-Vis", "Date": "2014-11-20T12:38:52Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mobilesorcery.sdk.core.MoSyncProject.getPermissions()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((shouldUseDebugRuntimes()) && (!(permissions.isPermissionRequested(ICommonPermissions.FILE_STORAGE_WRITE)))) { addPermission(result, true, \"android.permission.WRITE_EXTERNAL_STORAGE\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/497/buggy-version/com.mobilesorcery.sdk.builder.android.src.com.mobilesorcery.sdk.builder.android.AndroidPackager.java", "BodyUseAPI": [], "Fixed commit": "1dbea0f994e5405194df1c8dd0f3f50ac64514a3", "Url": "https://api.github.com/repos/MoSync/Eclipse", "Date": "2011-01-26T13:32:54Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((d1 < 0.0) && (d2 < 0.0)) { d1 *= -1.0; d2 *= -1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5173/buggy-version/duke-core.src.main.java.no.priv.garshol.duke.comparators.NumericComparator.java", "BodyUseAPI": [], "Fixed commit": "033661fa575ec4536c47fe96643813265a942979", "Url": "https://api.github.com/repos/larsga/Duke", "Date": "2015-10-12T12:27:52Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((nextLine.length()) <= 2) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2918/buggy-version/Chess.java", "BodyUseAPI": [], "Fixed commit": "e092137bf2c90c7f9d8e7bfd9079c367bf27eab1", "Url": "https://api.github.com/repos/Patosai/Chess", "Date": "2014-05-26T15:14:48Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nextLine.equals(\"==\")) { java.lang.String lastLines = input.nextLine(); while (input.hasNextLine()) lastLines += input.nextLine(); board.setMoveText(lastLines); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2918/buggy-version/Chess.java", "BodyUseAPI": [], "Fixed commit": "e092137bf2c90c7f9d8e7bfd9079c367bf27eab1", "Url": "https://api.github.com/repos/Patosai/Chess", "Date": "2014-05-26T15:14:48Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this) == (cz.cuni.mff.d3s.been.core.task.TaskState.SCHEDULED)) && (state == (cz.cuni.mff.d3s.been.core.task.TaskState.WAITING))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3946/buggy-version/core-data.src.main.java.cz.cuni.mff.d3s.been.core.task.TaskState.java", "BodyUseAPI": [], "Fixed commit": "3d7cd1fe5f5db714f76ff1e93e746aea9c3176a4", "Url": "https://api.github.com/repos/ever-been/everBeen", "Date": "2013-09-04T20:37:13Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (setProxy) { findDefaultProxy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2514/buggy-version/wss-agent-client.src.main.java.org.whitesource.agent.client.WssServiceClientImpl.java", "BodyUseAPI": [], "Fixed commit": "16fc1172126b898883b85fd306fc5320647b81bc", "Url": "https://api.github.com/repos/whitesource/agents", "Date": "2016-04-17T08:37:59Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pathStream == null) { ch.racic.caps.utils.IOUtils.log.error(((\"Resource \" + path) + \" could not be found, make sure it is a relative path on the classpath\")); return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/199/buggy-version/src.main.java.ch.racic.caps.utils.IOUtils.java", "BodyUseAPI": [], "Fixed commit": "6867d53d89ed50865e3b4b1b092d984d5b771935", "Url": "https://api.github.com/repos/rac2030/CAPS", "Date": "2015-02-24T00:07:31Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unimi.dsi.fastutil.objects.ObjectIterator<org.gephi.graph.impl.ElementImpl>.hasNext()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!hasNext) { readUnlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4227/buggy-version/store.src.main.java.org.gephi.graph.impl.TimestampIndexImpl.java", "BodyUseAPI": [], "Fixed commit": "ae56596e54f9e40e4cd3e85743eb7fd714683cc0", "Url": "https://api.github.com/repos/gephi/graphstore", "Date": "2015-09-08T06:37:34Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileSize) < 1) { setContentLength(); databaseHelper.updateFileBytes(id, downloadedBytes, fileSize); progress = com.tonyodev.fetch.Utils.getProgress(downloadedBytes, fileSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6852/buggy-version/fetch.src.main.java.com.tonyodev.fetch.FetchRunnable.java", "BodyUseAPI": [], "Fixed commit": "555a46be8a02d2202c9d4c68a375e743a824c07f", "Url": "https://api.github.com/repos/EslamElMeniawy/Fetch", "Date": "2017-03-02T15:46:52Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.java.model.ExpressionUtils.skipParentheses(tree.expression())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (expression.is(Tree.Kind.IDENTIFIER)) { java.lang.String identifierName = ((org.sonar.plugins.java.api.tree.IdentifierTree) (expression)).name(); if ((\"this\".equals(identifierName)) || (\"super\".equals(identifierName))) { tree.identifier().accept(this); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4780/buggy-version/java-frontend.src.main.java.org.sonar.java.se.checks.SyntaxTreeNameFinder.java", "BodyUseAPI": [], "Fixed commit": "7c324fbd7c27a3aea5444000dfd821cff7d9cc6a", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2017-05-15T16:01:31Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success) { triggerMediaScan(localPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2546/buggy-version/src.com.owncloud.android.datamodel.FileDataStorageManager.java", "BodyUseAPI": [], "Fixed commit": "0f39ff841a65d49778abf915b8730bce734bd960", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2014-12-02T10:17:47Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.eyeseetea.malariacare.data.database.utils.populatedb.PopulateDB.hasMandatoryTables()) { org.eyeseetea.malariacare.database.PostMigration.launchPostMigration(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7586/buggy-version/app.src.main.java.org.eyeseetea.malariacare.SplashScreenActivity.java", "BodyUseAPI": [], "Fixed commit": "99af7410e489560d98c58ec1a61f59ff07582686", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2017-03-14T11:12:44Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nuxeo.ecm.core.event.impl.DocumentEventContext.getSourceDocument()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((doc.getId()) != null) { sb.append(\" AND \").append(NXQL.ECM_UUID).append(\"!=\").append(org.nuxeo.ecm.core.query.sql.NXQL.escapeString(doc.getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3534/buggy-version/NuxeoSecurity.src.main.java.ca.firstvoices.listeners.FVDocumentValidationEventListener.java", "BodyUseAPI": ["org.nuxeo.ecm.core.query.sql.NXQL.escapeString(doc.getId())", "org.nuxeo.ecm.core.api.DocumentModel.getId()", "sb.append(\" AND \").append(NXQL.ECM_UUID).append(\"!=\").append(org.nuxeo.ecm.core.query.sql.NXQL.escapeString(doc.getId()))"], "Fixed commit": "b547c0f31ea5f01ebf609bce94d7d7a3b325bb4d", "Url": "https://api.github.com/repos/First-Peoples-Cultural-Council/nuxeo-addons", "Date": "2016-04-20T17:55:01Z"},
{"Line": "=>786", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isObject) { if (!(selectorJson.trim().startsWith(\"\\\"selector\\\"\"))) { throw new com.google.gson.JsonParseException(\"selectorJson should be valid json or like \\\"selector\\\": {...} \"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7263/buggy-version/src.main.java.com.cloudant.client.api.Database.java", "BodyUseAPI": [], "Fixed commit": "8e9f8a28b7535e45ea058867a6133dfaca94e5b1", "Url": "https://api.github.com/repos/cloudant/java-cloudant", "Date": "2015-01-27T09:39:19Z"},
{"Line": "=>794", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isObject) { finalbody.append(\"{\\\"selector\\\": \").append(selectorJson); }else { finalbody.append((\"{\" + selectorJson)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7263/buggy-version/src.main.java.com.cloudant.client.api.Database.java", "BodyUseAPI": [], "Fixed commit": "8e9f8a28b7535e45ea058867a6133dfaca94e5b1", "Url": "https://api.github.com/repos/cloudant/java-cloudant", "Date": "2015-01-27T09:39:19Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((botStatsConfig.getToken()) != null) && (!(botStatsConfig.getToken().isEmpty()))) { this.botan = new me.shib.java.lib.botan.Botan(botStatsConfig.getToken()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3031/buggy-version/src.me.shib.java.lib.jbotan.JBotan.java", "BodyUseAPI": [], "Fixed commit": "8485fe725927e6a296459ba09a26bb777823fcb0", "Url": "https://api.github.com/repos/shibme/jbotan", "Date": "2016-02-19T11:19:26Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.schabi.newpipe.player.PopupVideoPlayer.DEBUG) android.util.Log.d(org.schabi.newpipe.player.PopupVideoPlayer.TAG, ((\"FetcherRunnable.imageLoader.onLoadingComplete() called with: imageUri = [\" + imageUri) + \"]\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1373/buggy-version/app.src.main.java.org.schabi.newpipe.player.PopupVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "9ca8c5480c0e39511a0fe819f58646365729ebbf", "Url": "https://api.github.com/repos/TeamNewPipe/NewPipe", "Date": "2017-05-09T03:12:06Z"},
{"Line": "=>681", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((playerImpl) == null) || ((playerImpl.getPlayer()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1373/buggy-version/app.src.main.java.org.schabi.newpipe.player.PopupVideoPlayer.java", "BodyUseAPI": [], "Fixed commit": "9ca8c5480c0e39511a0fe819f58646365729ebbf", "Url": "https://api.github.com/repos/TeamNewPipe/NewPipe", "Date": "2017-05-09T03:12:06Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((simpleExoPlayer) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1373/buggy-version/app.src.main.java.org.schabi.newpipe.player.BasePlayer.java", "BodyUseAPI": [], "Fixed commit": "9ca8c5480c0e39511a0fe819f58646365729ebbf", "Url": "https://api.github.com/repos/TeamNewPipe/NewPipe", "Date": "2017-05-09T03:12:06Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataObject.hasParameterSet(RESTServerSettingsV1.READONLY_NAME)) applicationConfig.setReadOnly(dataObject.isReadOnly());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3951/buggy-version/src.main.java.org.jboss.pressgang.ccms.server.rest.v1.factory.ServerSettingsV1Factory.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.rest.v1.elements.RESTServerSettingsV1.isReadOnly()", "org.jboss.pressgang.ccms.model.config.ApplicationConfig.setReadOnly(dataObject.isReadOnly())"], "Fixed commit": "5711d841763a55310fa80ee3eab086dbc234d083", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSREST", "Date": "2014-05-15T01:39:07Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pandora.hackathon.pandalist.PostItemData.getImageUrl()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((url != null) && (url != \"\")) { com.squareup.picasso.Picasso.with(holder.image.getContext()).load(url).into(new com.squareup.picasso.Target() { @java.lang.Override public void onBitmapLoaded(android.graphics.Bitmap bitmap, com.squareup.picasso.Picasso.LoadedFrom from) { android.support.v7.graphics.Palette.generateAsync(bitmap, new android.support.v7.graphics.Palette.PaletteAsyncListener() { @java.lang.Override public void onGenerated(android.support.v7.graphics.Palette palette) { int color = palette.getLightMutedColor(android.graphics.Color.parseColor(\"#22224099\")); int colorAlpha = android.graphics.Color.argb(200, android.graphics.Color.red(color), android.graphics.Color.green(color), android.graphics.Color.blue(color)); holder.detailContainer.setBackgroundColor(colorAlpha); } }); } @java.lang.Override public void onBitmapFailed(android.graphics.drawable.Drawable errorDrawable) { } @java.lang.Override public void onPrepareLoad(android.graphics.drawable.Drawable placeHolderDrawable) { } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4834/buggy-version/mobile.android.PandaList.app.src.main.java.com.pandora.hackathon.pandalist.ui.ListingRecyclerAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(holder.image.getContext()).load(url).into(com.squareup.picasso.Target)", "com.squareup.picasso.Picasso.with(holder.image.getContext()).load(java.lang.String)"], "Fixed commit": "bc05fb33a578c5d014b3ab525a87849607951890", "Url": "https://api.github.com/repos/marcn/pandaslist", "Date": "2014-11-07T00:51:15Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/167/buggy-version/app.src.main.java.ch.renuo.hackzurich2016.activities.HouseholdActivity.java", "BodyUseAPI": [], "Fixed commit": "a23ace343fb6fce6b90e79115af6621cee49af13", "Url": "https://api.github.com/repos/renuo/hack-zurich-2016", "Date": "2016-09-18T06:40:04Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(getString(R.string.cluster_id))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (clusterId == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/167/buggy-version/app.src.main.java.ch.renuo.hackzurich2016.activities.HouseholdActivity.java", "BodyUseAPI": [], "Fixed commit": "a23ace343fb6fce6b90e79115af6621cee49af13", "Url": "https://api.github.com/repos/renuo/hack-zurich-2016", "Date": "2016-09-18T06:40:04Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(StringPool.SLASH)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (slashIndex == (-1)) { return com.liferay.knowledge.base.constants.KBArticleConstants.DEFAULT_PRIORITY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/9161/buggy-version/modules.apps.knowledge-base.knowledge-base-service.src.main.java.com.liferay.knowledge.base.internal.importer.KBArticleImporter.java", "BodyUseAPI": [], "Fixed commit": "2d36d6fb8b369f967723e705ac532ccd4692740e", "Url": "https://api.github.com/repos/michaelhashimoto/liferay-portal", "Date": "2017-12-05T09:11:19Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pd) != null) { pd.dismiss(); pd = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3643/buggy-version/src.com.puzzleworld.onecolor.ProcessActivity.java", "BodyUseAPI": [], "Fixed commit": "8add3277effa27d25b7ca4f7dd5910ff8773ff5e", "Url": "https://api.github.com/repos/TrianglePage/onecolor_noapk", "Date": "2016-06-16T15:37:56Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pd) == null) { pd = android.app.ProgressDialog.show(this, \"\u8bf7\u7a0d\u540e\", \"\u6b63\u5728\u5904\u7406\u2026\u2026\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3643/buggy-version/src.com.puzzleworld.onecolor.ProcessActivity.java", "BodyUseAPI": [], "Fixed commit": "8add3277effa27d25b7ca4f7dd5910ff8773ff5e", "Url": "https://api.github.com/repos/TrianglePage/onecolor_noapk", "Date": "2016-06-16T15:37:56Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["query.getOriginalURL().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((url.split(\"/\").length) < 4) { url = url + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8574/buggy-version/src.main.java.com.github.mefi.jkuuza.crawler.DbSaveWorker.java", "BodyUseAPI": [], "Fixed commit": "6a2c6bfce60c9b1508a7e5607404e165a97bad69", "Url": "https://api.github.com/repos/mefi/JKuuza", "Date": "2011-05-26T21:24:37Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((face == (org.bukkit.block.BlockFace.UP)) || (face == (org.bukkit.block.BlockFace.DOWN))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3854/buggy-version/src.main.java.com.evilco.bukkit.locker.LockerPlugin.java", "BodyUseAPI": [], "Fixed commit": "de228292ffb17eb819e265e5ff24b7944b20bab1", "Url": "https://api.github.com/repos/Evil-Co/Locker", "Date": "2014-04-08T01:54:42Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newValue != null) autoStart(name1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7932/buggy-version/jactor2-core.src.main.java.org.agilewiki.jactor2.core.facilities.Plant.java", "BodyUseAPI": [], "Fixed commit": "33b785cc7f662de7ebe48205adb23fa6b4b9f06b", "Url": "https://api.github.com/repos/laforge49/JActor2", "Date": "2013-12-04T15:16:35Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.konstantinschubert.writeinterceptingwebview.WriteHandlingWebViewClient.shouldInterceptRequest(android.webkit.WebView,com.konstantinschubert.writeinterceptingwebview.WriteHandlingWebResourceRequest)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (webResourceResponse == null) { return webResourceResponse; }else { return injectIntercept(webResourceResponse, view.getContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4763/buggy-version/writeintercept.src.main.java.com.konstantinschubert.writeinterceptingwebview.WriteHandlingWebViewClient.java", "BodyUseAPI": ["com.konstantinschubert.writeinterceptingwebview.WriteHandlingWebViewClient.injectIntercept(android.webkit.WebResourceResponse,view.getContext())"], "Fixed commit": "a8de59a525381399e8976be641be20a18bc9e8a0", "Url": "https://api.github.com/repos/KonstantinSchubert/request_data_webviewclient", "Date": "2017-09-25T22:06:32Z"},
{"Line": "=>1643", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((msg.isToPublic()) && (org.zstack.identity.Q.New(org.zstack.identity.SharedResourceVO.class).eq(SharedResourceVO_.ownerAccountUuid, msg.getAccountUuid()).eq(SharedResourceVO_.toPublic, msg.isToPublic()).in(SharedResourceVO_.resourceUuid, msg.getResourceUuids()).isExists())) { throw new org.zstack.header.apimediator.ApiMessageInterceptionException(argerr(\"cannot share the same resource to public twice\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1292/buggy-version/identity.src.main.java.org.zstack.identity.AccountManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "24b9ff12ef611056f432769cbe31a3f7015d266e", "Url": "https://api.github.com/repos/MaJin1996/zstack", "Date": "2017-04-11T08:30:50Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.drawer_container)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (f == null) { mNavigationDrawerFragment = me.williamhester.ui.fragments.NavigationDrawerFragment.newInstance(mSubreddit); getSupportFragmentManager().beginTransaction().replace(R.id.drawer_container, mNavigationDrawerFragment, \"NavigationDrawer\").commit(); }else { mNavigationDrawerFragment = ((me.williamhester.ui.fragments.NavigationDrawerFragment) (f)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3487/buggy-version/Breadit.reddit.src.main.java.me.williamhester.ui.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c891650557a652a0d8caaa61493b6337598f7e94", "Url": "https://api.github.com/repos/WilliamHester/breadit", "Date": "2014-11-04T04:12:52Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alphaMerge && ((this.getBPP()) < 4)) && ((img.getBPP()) < 4)) { alphaMerge = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/10/buggy-version/src.main.java.org.java_lcw.jil.Image.java", "BodyUseAPI": [], "Fixed commit": "206aae92a8e8b7960758105cdcb601d387738e3c", "Url": "https://api.github.com/repos/lwahlmeier/jil", "Date": "2014-09-19T17:59:09Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((img.colors) == 4) && ((img.MAP[(((imgStart + wImgBytes) + imgXOffBytes) + 3)]) == 0)) { continue; }else if (((this.colors) == 4) && ((this.MAP[(((thisStart + XBytes) + wThisBytes) + 3)]) == 0)) { java.lang.System.arraycopy(img.MAP, ((imgStart + wImgBytes) + imgXOffBytes), this.MAP, ((thisStart + wThisBytes) + XBytes), this.colors); }else if (((img.colors) == 4) && ((img.MAP[(((imgStart + wImgBytes) + imgXOffBytes) + 3)]) == 255)) { java.lang.System.arraycopy(img.MAP, ((imgStart + wImgBytes) + imgXOffBytes), this.MAP, ((thisStart + wThisBytes) + XBytes), this.colors); }else { org.java_lcw.jil.Color c = img.getPixel(((wImgBytes + imgXOffBytes) / (img.colors)), ((h - y) + imgYOff)); org.java_lcw.jil.Color c2 = this.getPixel((w + x), h); c2.merge(c); this.setPixel((w + x), h, c2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/10/buggy-version/src.main.java.org.java_lcw.jil.Image.java", "BodyUseAPI": ["org.java_lcw.jil.Image.getPixel(int,int)", "java.lang.System.arraycopy(byte[],int,byte[],int,byte)", "java.lang.System.arraycopy(byte[],int,byte[],int,byte)"], "Fixed commit": "206aae92a8e8b7960758105cdcb601d387738e3c", "Url": "https://api.github.com/repos/lwahlmeier/jil", "Date": "2014-09-19T17:59:09Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(directory.exists())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7612/buggy-version/src.net.vectorgaming.vchat.util.SLAPI.java", "BodyUseAPI": [], "Fixed commit": "46672bfaefb990e06c183160ac1fe652be434159", "Url": "https://api.github.com/repos/exload/VChat", "Date": "2013-09-21T04:42:31Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (className.equals(useStatement.getName())) { isImportNameCollision = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8978/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ClassConstantCanBeUsedInspector.java", "BodyUseAPI": [], "Fixed commit": "777f2a5fe99183ca99d8de60c980d9f87d97017c", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2016-12-13T08:39:32Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((wisemlTrace.getChildren()) == null) { wisemlTrace.setChildren(eu.wisebed.wiseml.model.trace.Trace.listFactory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7103/buggy-version/server.src.main.java.eu.wisebed.wiseui.server.controller.ExperimentController.java", "BodyUseAPI": ["eu.wisebed.wiseml.model.trace.Trace.setChildren(eu.wisebed.wiseml.model.trace.Trace.listFactory())"], "Fixed commit": "a0385c6de31e2c572c87eb127e3370ad31a53ebf", "Url": "https://api.github.com/repos/itm/wiseui", "Date": "2011-06-10T10:57:41Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((structure.prevFluid) == null) && ((structure.fluidStored) != null)) { structure.prevFluid = structure.fluidStored.copy(); }else if (((structure.prevFluid) != null) && ((structure.fluidStored) == null)) { structure.prevFluid = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6490/buggy-version/src.main.java.mekanism.common.tile.TileEntityDynamicTank.java", "BodyUseAPI": [], "Fixed commit": "988d4559e2928b23907774983b9738563e2c48ef", "Url": "https://api.github.com/repos/tossaponk/Mekanism", "Date": "2016-09-11T17:21:32Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dayOfWeek.equals(\"0\")) { dayOfWeek = \"7\"; android.util.Log.d(\"Eric\", (\"day of week\" + dayOfWeek)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6738/buggy-version/app.src.main.java.com.eric.dt211c.dittimetableapp.ViewClassesActivity.java", "BodyUseAPI": [], "Fixed commit": "4fff3b6e714f744fe2d0afc56d760223b3ddf644", "Url": "https://api.github.com/repos/ericstrongDIT/DITTimetableApp", "Date": "2017-11-05T13:17:29Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (selectionManager.getSelection().contains(card)) { setState(ViewState.SELECTED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4425/buggy-version/src.com.spaceagencies.client.graphics.ether.activities.CardView.java", "BodyUseAPI": [], "Fixed commit": "77f5f31e17c1075303d3541c6c268c6c5ad0d80f", "Url": "https://api.github.com/repos/seraf8/spaceagencies", "Date": "2014-04-09T19:26:39Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mTurn) != (mPlayer.getTurn())) { mTurn = mPlayer.getTurn(); updateUi(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/4425/buggy-version/src.com.spaceagencies.client.graphics.ether.activities.BoardActivity.java", "BodyUseAPI": ["com.spaceagencies.common.game.Player.getTurn()"], "Fixed commit": "77f5f31e17c1075303d3541c6c268c6c5ad0d80f", "Url": "https://api.github.com/repos/seraf8/spaceagencies", "Date": "2014-04-09T19:26:39Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == ((wordsPerPerson) - 1)) { wordsArray[i] = editText.getText().subSequence(start, end).toString(); }else { wordsArray[i] = editText.getText().subSequence(start, (end - 1)).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7720/buggy-version/app.src.main.java.com.example.philipp.timesup.WordsActivity.java", "BodyUseAPI": [], "Fixed commit": "28760563df160ea1d9e428fe24d58115a8c6056a", "Url": "https://api.github.com/repos/Hadjimina/TimesUp", "Date": "2017-12-14T09:36:37Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["scene().itemAt(event.posF())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (picked != null) { for (client.AnimatedCard card : cards) { if (((card.imageFront) == picked) || ((card.imageBack) == picked)) { card.isBeingDragged = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8115/buggy-version/client.BoardView.java", "BodyUseAPI": [], "Fixed commit": "341913c889b12dfbd8a31c2f413f7ab0f85632e2", "Url": "https://api.github.com/repos/Micket/cardgames", "Date": "2011-08-07T15:11:14Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((orders != null) && ((orders.getOrders().size()) > 0)) { showData(orders); }else { activity.showToast(\"No order data found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1200/buggy-version/app.src.consumer.java.e2b.fragments.OrdersFragment.java", "BodyUseAPI": ["e2b.fragments.OrdersFragment.1.showData(e2b.model.response.Orders)"], "Fixed commit": "5f9956d353cf6944a3464eb79226d4878748b9cd", "Url": "https://api.github.com/repos/dfg-1310/sample-etwob", "Date": "2017-07-07T04:00:29Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((backupReport.length) == 2) report = (((\"(\" + (backupReport[0])) + \"/\") + (backupReport[1])) + \" jobs backuped for this user)\"; else report = (((((((\"(\" + (backupReport[0])) + \"/\") + (backupReport[1])) + \" jobs backuped ; \") + (backupReport[2])) + \"/\") + (backupReport[3])) + \" users backuped)\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2859/buggy-version/src.uws.service.log.DefaultUWSLog.java", "BodyUseAPI": [], "Fixed commit": "df9be4e30677580b8dfc9de2f0a66cc23fe8344b", "Url": "https://api.github.com/repos/gmantele/taplib", "Date": "2016-07-01T16:02:49Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.ibatis.reflection.MetaObject.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (limiter != null) { cacheKey.update(limiter.getPageNo()); cacheKey.update(limiter.getPageSize()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5656/buggy-version/restma-demo.src.limeng32.mybatis.plugin.CachePlugin.java", "BodyUseAPI": ["org.apache.ibatis.cache.CacheKey.update(limiter.getPageSize())", "org.apache.ibatis.cache.CacheKey.update(limiter.getPageNo())", "limeng32.mybatis.plugin.Limitable.getPageNo()", "limeng32.mybatis.plugin.Limitable.getPageSize()"], "Fixed commit": "98f289a60a48bdca978eafa806ea4cbf1609b494", "Url": "https://api.github.com/repos/limeng32/restma-demo", "Date": "2015-06-09T02:28:25Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((immutable == null) && (persistable == null)) { throw new org.openur.module.util.exception.OpenURRuntimeException(\"Both objects, immutable and entity, are null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7758/buggy-version/open_ur-modules.open_ur-module-persistence-util.src.main.java.org.openur.module.persistence.rdbms.entity.AbstractOpenUrPersistableMapper.java", "BodyUseAPI": [], "Fixed commit": "82dfbb830b557b6593c745243a29416347c3a2d7", "Url": "https://api.github.com/repos/Uwe-Fuchs/open-ur", "Date": "2014-11-21T18:31:51Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mSite.isJetpackConnected()) { saveJetpackSettings(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5642/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.prefs.DotComSiteSettings.java", "BodyUseAPI": [], "Fixed commit": "53d6ce12a8b5558b48ad37b5dce589ba912c0d7f", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2017-07-17T21:23:14Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pattern != null) query += DbConstants.FIND_BY_DATA_CLAUSE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5715/buggy-version/mapsforge-poi.src.main.java.org.mapsforge.poi.storage.AbstractPoiPersistenceManager.java", "BodyUseAPI": [], "Fixed commit": "6d819d00dfe00917f7c8431594a42821d8e24e9d", "Url": "https://api.github.com/repos/Gustl22/mapsforge", "Date": "2017-04-25T19:59:08Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pattern != null) query += DbConstants.FIND_BY_DATA_CLAUSE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5715/buggy-version/mapsforge-poi.src.main.java.org.mapsforge.poi.storage.PoiCategoryRangeQueryGenerator.java", "BodyUseAPI": [], "Fixed commit": "6d819d00dfe00917f7c8431594a42821d8e24e9d", "Url": "https://api.github.com/repos/Gustl22/mapsforge", "Date": "2017-04-25T19:59:08Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.cuni.mff.xrg.odcs.commons.app.facade.PipelineFacadeImpl.getExecution(execution.getId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((currentExec.getStatus()) == (cz.cuni.mff.xrg.odcs.commons.app.pipeline.PipelineExecutionStatus.QUEUED)) { delete(execution); }else if ((currentExec.getStatus()) == (cz.cuni.mff.xrg.odcs.commons.app.pipeline.PipelineExecutionStatus.RUNNING)) { execution.stop(); save(execution); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/542/buggy-version/commons-app.src.main.java.cz.cuni.mff.xrg.odcs.commons.app.facade.PipelineFacadeImpl.java", "BodyUseAPI": ["cz.cuni.mff.xrg.odcs.commons.app.pipeline.PipelineExecution.getStatus()"], "Fixed commit": "a5cafc035790747d2288b4f712da0c54fb72a244", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2014-09-23T07:39:25Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (parameters != null) { java.util.Set<java.lang.String> keys = parameters.keySet(); for (java.lang.String key : keys) { if ((parameters.get(key)) != null) { nameValuePairs.add(new org.apache.http.message.BasicNameValuePair(key, parameters.get(key).toString())); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2678/buggy-version/src.main.java.com.eweblib.util.HttpClientUtil.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.keySet()", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Object.toString()", "java.util.List<org.apache.http.NameValuePair>.add(org.apache.http.message.BasicNameValuePair)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "572e6c4fd4504f3dffdf2713784e2c1f38d080d7", "Url": "https://api.github.com/repos/antme/_eweblib", "Date": "2014-09-02T07:08:22Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((evt.getButton()) != (java.awt.event.MouseEvent.BUTTON1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3998/buggy-version/dbproject.src.my.triviagame.gui.Discover.java", "BodyUseAPI": [], "Fixed commit": "793e43ef7078c637206c40d98e69d5a2f73145f6", "Url": "https://api.github.com/repos/grzn/dbc", "Date": "2012-06-08T14:25:56Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(inputBuffer.hasRemaining())) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8328/buggy-version/src.main.java.org.jboss.stdio.WriterOutputStream.java", "BodyUseAPI": [], "Fixed commit": "dd638027d7cce760da92cd4119aee9896316dc3f", "Url": "https://api.github.com/repos/stuartwdouglas/jboss-stdio", "Date": "2011-05-11T02:59:52Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(inputBuffer.hasRemaining())) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8328/buggy-version/src.main.java.org.jboss.stdio.WriterOutputStream.java", "BodyUseAPI": [], "Fixed commit": "dd638027d7cce760da92cd4119aee9896316dc3f", "Url": "https://api.github.com/repos/stuartwdouglas/jboss-stdio", "Date": "2011-05-11T02:59:52Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentClusterIdx) >= (clusterIds.length)) currentClusterIdx = (clusterIds.length) - 1; else if ((currentClusterIdx) < 0) currentClusterIdx = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7596/buggy-version/core.src.main.java.com.orientechnologies.orient.core.iterator.ORecordIteratorClusters.java", "BodyUseAPI": [], "Fixed commit": "c4f0c87f925603fefc16d36264557218d996d8ca", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-01-27T15:34:35Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(m.audioFile.exists())) { javax.swing.JOptionPane.showMessageDialog(m.pane, \"That audio file does not exist.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7980/buggy-version/src.main.java.com.soniccandle.controller.MainController.java", "BodyUseAPI": ["javax.swing.JOptionPane.showMessageDialog(m.pane,java.lang.String)"], "Fixed commit": "73a300d2582148bec79960617b97006e592d25a3", "Url": "https://api.github.com/repos/ryan-schroeder/sonic-candle", "Date": "2015-02-13T04:16:26Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (pdf == null) { this.pdf = null; }else { this.pdf = pdf.clone(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6231/buggy-version/cermine-web.src.main.java.pl.edu.icm.cermine.service.ExtractionTask.java", "BodyUseAPI": ["byte[].clone()"], "Fixed commit": "b237a9bdd7987b2549b5bdcf00a80f69608e05f5", "Url": "https://api.github.com/repos/CeON/CERMINE", "Date": "2016-09-28T14:20:55Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.issues) != null) && ((lastIssueNumber) < (this.issues.size()))) { fixLastIssueNumber(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3607/buggy-version/app.models.Project.java", "BodyUseAPI": [], "Fixed commit": "7be78b0a0cea0f12ba0f64091b0392a7d31d149b", "Url": "https://api.github.com/repos/nforge/yobi", "Date": "2014-04-28T08:43:23Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(training.getCost().equals(\"null\"))) CheckConcate(\"\u0996\u09b0\u099a\", ((training.getCost()) + \" \u099f\u09be\u0995\u09be\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2431/buggy-version/app.src.main.java.demo.kolorob.kolorobdemoversion.activity.DetailsLayoutEducation.java", "BodyUseAPI": ["demo.kolorob.kolorobdemoversion.activity.DetailsLayoutEducation.CheckConcate(java.lang.String,((training.getCost()) + \" \u099f\u09be\u0995\u09be\"))", "demo.kolorob.kolorobdemoversion.model.EduNewDB.EduTrainingModel.getCost()"], "Fixed commit": "a71143a9387a9901b1a0c109e7da4a2053e11ea9", "Url": "https://api.github.com/repos/Kolorob/Kolorob", "Date": "2017-10-04T10:19:38Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldName.equals(\"keyword\")) { valueStr = org.apache.commons.lang3.StringEscapeUtils.escapeXml(valueStr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/313/buggy-version/DataPackageManager.src.edu.lternet.pasta.datapackagemanager.solr.search.SimpleSolrSearch.java", "BodyUseAPI": [], "Fixed commit": "0526e0f9a119cf447930d05318abe7137981fb28", "Url": "https://api.github.com/repos/PASTAplus/PASTA", "Date": "2017-05-12T21:27:24Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fieldName.equals(\"responsibleParties\"))) { fieldValue = org.apache.commons.lang3.StringEscapeUtils.escapeXml(fieldValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/313/buggy-version/DataPackageManager.src.edu.lternet.pasta.datapackagemanager.solr.search.SimpleSolrSearch.java", "BodyUseAPI": [], "Fixed commit": "0526e0f9a119cf447930d05318abe7137981fb28", "Url": "https://api.github.com/repos/PASTAplus/PASTA", "Date": "2017-05-12T21:27:24Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wycs.builders.Wyal2WycsBuilder.convert(t.element,java.util.Set<java.lang.String>,WyalFile.Context)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (element instanceof wycs.core.SemanticType.Void) { return wycs.core.SemanticType.Set(true, SemanticType.Void); }else { return wycs.core.SemanticType.Set(true, wycs.core.SemanticType.Tuple(SemanticType.Int, element)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6100/buggy-version/modules.wycs.src.wycs.builders.Wyal2WycsBuilder.java", "BodyUseAPI": ["wycs.core.SemanticType.Set(boolean,wycs.core.SemanticType.Tuple(SemanticType.Int, element))", "wycs.core.SemanticType.Tuple(SemanticType.Int,wycs.core.SemanticType)"], "Fixed commit": "67206bd594ecea79c9608405a097d82927f0b7be", "Url": "https://api.github.com/repos/melbyruarus/Whiley", "Date": "2013-06-26T15:30:49Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wycs.builders.Wyal2WycsBuilder.convert(t.value,java.util.Set<java.lang.String>,WyalFile.Context)", "wycs.builders.Wyal2WycsBuilder.convert(t.key,java.util.Set<java.lang.String>,WyalFile.Context)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((key instanceof wycs.core.SemanticType.Void) || (value instanceof wycs.core.SemanticType.Void)) { return wycs.core.SemanticType.Set(true, SemanticType.Void); }else { return wycs.core.SemanticType.Set(true, wycs.core.SemanticType.Tuple(key, value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6100/buggy-version/modules.wycs.src.wycs.builders.Wyal2WycsBuilder.java", "BodyUseAPI": ["wycs.core.SemanticType.Set(boolean,wycs.core.SemanticType.Tuple(key, value))", "wycs.core.SemanticType.Tuple(wycs.core.SemanticType,wycs.core.SemanticType)"], "Fixed commit": "67206bd594ecea79c9608405a097d82927f0b7be", "Url": "https://api.github.com/repos/melbyruarus/Whiley", "Date": "2013-06-26T15:30:49Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (x < y) { com.zacard.algorithm.beautifulOfCode.T207Gcd.gcd1(y, x); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3303/buggy-version/src.main.java.com.zacard.algorithm.beautifulOfCode.T207Gcd.java", "BodyUseAPI": ["com.zacard.algorithm.beautifulOfCode.T207Gcd.gcd1(int,int)"], "Fixed commit": "4e8edb5ab60651dc11e2a8400416d7f133cd3864", "Url": "https://api.github.com/repos/mmaPATHolei/algorithm", "Date": "2017-01-12T06:44:14Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(considerDamperMotorWear())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8013/buggy-version/src.main.java.com.openhouseautomation.logic.HouseFan.java", "BodyUseAPI": [], "Fixed commit": "56eee60cadd6cd5fe7d205a80c7ee1cce16e2bd9", "Url": "https://api.github.com/repos/davras/openhouseautomation", "Date": "2016-07-05T17:32:30Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= (Build.VERSION_CODES.M)) canvas.restore();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7238/buggy-version/library.src.main.java.io.techery.scalablecropp.library.imagecrop.cropoverlay.CropOverlayView.java", "BodyUseAPI": [], "Fixed commit": "41fb01863411a54b92ce9570a1589b902a18c5d5", "Url": "https://api.github.com/repos/adiktz/AndroidImageZoomCrop", "Date": "2016-01-25T06:13:30Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (next != (org.graphstream.stream.file.dgs.DGSParser.Token.EOF)) { pushback(next.name().charAt(0)); pushback(next.name().charAt(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5384/buggy-version/src.org.graphstream.stream.file.dgs.DGSParser.java", "BodyUseAPI": ["org.graphstream.stream.file.dgs.DGSParser.Token.name()", "java.lang.String.charAt(int)", "org.graphstream.stream.file.dgs.DGSParser.Token.name()", "org.graphstream.stream.file.dgs.DGSParser.pushback(char)", "org.graphstream.stream.file.dgs.DGSParser.pushback(char)", "java.lang.String.charAt(int)"], "Fixed commit": "128f0b53a34a758847bde2a8b061b94e03b81866", "Url": "https://api.github.com/repos/graphstream/gs-core", "Date": "2011-11-10T14:53:40Z"},
{"Line": "=>590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (virtualMachineSize.matches(\".*(D|G|F[0-9]+|L[0-9]+)[Ss].*\")) { model.add(Constants.STORAGE_ACCOUNT_TYPE_PREMIUM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1166/buggy-version/src.main.java.com.microsoft.azure.vmagent.AzureVMAgentTemplate.java", "BodyUseAPI": [], "Fixed commit": "79b620c22ca60f1078d3c3ea351a4048c01de55b", "Url": "https://api.github.com/repos/ArchangelSDY/azure-vm-agents-plugin", "Date": "2017-05-18T09:39:04Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((l == null) || (l.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5979/buggy-version/src.main.java.fi.pss.cleanbeach.services.EventService.java", "BodyUseAPI": [], "Fixed commit": "f7d5e181c60fb227fa71eb9a37429686764a3edd", "Url": "https://api.github.com/repos/tmattsso/CleanBeach", "Date": "2014-02-24T18:03:26Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (splitNumbers[count].equals(\"\\n\")) { this.rememberedOp = \"\"; }else if (splitNumbers[count].contains(\"/\")) { if ((this.rememberedOp) == \"\") { fraction = tempFraction(splitNumbers, count, fraction); }else { fraction = this.operator(fraction, tempFraction(splitNumbers, count, fraction)); } }else if (splitNumbers[count].matches(\"-[0-9]+$\")) { if ((this.rememberedOp) == \"\") { fraction = tempFraction(splitNumbers, count, fraction); }else { fraction = this.operator(fraction, tempFraction(splitNumbers, count, fraction)); } }else { java.lang.System.out.println(\"Error!\"); fraction.setNumerator(0); fraction.setDenominator(1); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8958/buggy-version/FractionCalculator.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "FractionCalculator.operator(Fraction,Fraction)", "FractionCalculator.tempFraction(java.lang.String[],int,Fraction)", "FractionCalculator.tempFraction(java.lang.String[],int,Fraction)", "java.lang.String.matches(java.lang.String)", "FractionCalculator.tempFraction(java.lang.String[],int,Fraction)", "FractionCalculator.tempFraction(java.lang.String[],int,Fraction)", "FractionCalculator.operator(Fraction,Fraction)"], "Fixed commit": "7393ff6c4420658570ca14d36172d7022de89e61", "Url": "https://api.github.com/repos/BBK-PiJ-2014-92/cw2", "Date": "2014-10-26T16:40:58Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (e != null) { while (e.hasMoreElements()) { final java.net.NetworkInterface ni = e.nextElement(); if (!(ni.isLoopback())) { final byte[] hardwareAddress = ni.getHardwareAddress(); if (hardwareAddress != null) { for (final byte value : hardwareAddress) { result <<= 8; result |= value & 255; } } break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7162/buggy-version/src.madkit.kernel.KernelAddress.java", "BodyUseAPI": [], "Fixed commit": "989454257a69ee9d4442b3f410a2f81010db9c19", "Url": "https://api.github.com/repos/fmichel/MaDKit", "Date": "2013-11-21T16:45:58Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (hardwareAddress != null) { for (final byte value : hardwareAddress) { result <<= 8; result |= value & 255; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7162/buggy-version/src.madkit.kernel.KernelAddress.java", "BodyUseAPI": [], "Fixed commit": "989454257a69ee9d4442b3f410a2f81010db9c19", "Url": "https://api.github.com/repos/fmichel/MaDKit", "Date": "2013-11-21T16:45:58Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sender instanceof org.bukkit.entity.Player)) { plugin.util.sendError(sender, \"No target specified!\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3670/buggy-version/src.me.zee.mcadministration.executors.CMD_Stats.java", "BodyUseAPI": ["plugin.util.sendError(org.bukkit.command.CommandSender,java.lang.String)"], "Fixed commit": "23bbd386d0b750daeb42005c94e954b4a47ceb33", "Url": "https://api.github.com/repos/ZeezCode/MCAdministration", "Date": "2017-04-21T21:07:57Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (filename != null) { try { bitmap = android.graphics.BitmapFactory.decodeStream(context.getAssets().open(filename)); } catch (java.io.IOException e) { try { bitmap = android.graphics.BitmapFactory.decodeStream(context.getAssets().open(\"textures/error.png\")); } catch (java.io.IOException e1) { e1.printStackTrace(); return -1; } } }else { try { bitmap = android.graphics.BitmapFactory.decodeStream(context.getAssets().open(\"textures/error.png\")); } catch (java.io.IOException e1) { e1.printStackTrace(); return -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1498/buggy-version/Source.Cypher.app.src.main.java.com.semaphore_soft.apps.cypher.opengl.TextureLoader.java", "BodyUseAPI": ["context.getAssets().open(java.lang.String)", "android.graphics.BitmapFactory.decodeStream(context.getAssets().open(filename))"], "Fixed commit": "1018a0affb69c8b64180a5937a1b20ecc0da808b", "Url": "https://api.github.com/repos/semaphore-soft/Cypher", "Date": "2017-02-25T06:35:47Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rci.enums.BusinessEnums.PaymodeCode.paymodeCode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((paymodeMapping.get(paycode)) != null) { java.math.BigDecimal preAmount = paymodeMapping.get(paycode); amount = preAmount.add(amount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/609/buggy-version/src.main.java.com.rci.bean.entity.Order.java", "BodyUseAPI": ["java.util.Map<com.rci.enums.BusinessEnums.PaymodeCode, java.math.BigDecimal>.get(com.rci.enums.BusinessEnums.PaymodeCode)"], "Fixed commit": "9af1504d9eafe6e926eae40b33fc0107053c0452", "Url": "https://api.github.com/repos/zhujiancom/ReconciliationPro", "Date": "2015-09-09T02:55:06Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(paramTokenQueue.isEmpty())) { params.add(new com.virjar.vscrawler.core.selector.string.ExpressionParser(new com.virjar.vscrawler.core.selector.string.StringFunctionTokenQueue(paramTokenQueue.remainder())).parse()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2906/buggy-version/vscrawler-core.src.main.java.com.virjar.vscrawler.core.selector.string.ExpressionParser.java", "BodyUseAPI": ["com.virjar.vscrawler.core.selector.string.StringFunctionTokenQueue.remainder()", "java.util.List<com.virjar.vscrawler.core.selector.string.SyntaxNode>.add(com.virjar.vscrawler.core.selector.string.SyntaxNode)", "com.virjar.vscrawler.core.selector.string.ExpressionParser.parse()"], "Fixed commit": "6ab0147d5a0624730d10c3c835d49eba4474de54", "Url": "https://api.github.com/repos/virjar/vscrawler", "Date": "2017-07-11T15:06:22Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((alle.getHealth()) > 0.0) { alle.damage(5.0); if ((alle.getHealth()) <= 0.0) { killPlayer(alle, p, Abilitys.DAMAGE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6131/buggy-version/src.me.mcplayhd.spellwar.managers.AbilityManager.java", "BodyUseAPI": ["org.bukkit.entity.Player.damage(double)", "org.bukkit.entity.Player.getHealth()", "me.mcplayhd.spellwar.managers.AbilityManager.killPlayer(org.bukkit.entity.Player,org.bukkit.entity.Player,Abilitys.DAMAGE)"], "Fixed commit": "6596bda62c3e8c60603d9f9026cd8266ad8fa9a9", "Url": "https://api.github.com/repos/McPlayHD/DevAthlon3", "Date": "2016-07-16T21:06:28Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (holdInfo == null) { hold.title = \"Unknown Title\"; hold.author = \"Unknown Author\"; }else { hold.title = holdInfo.getString(\"title\"); hold.author = holdInfo.getString(\"author\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5879/buggy-version/core.src.main.java.org.evergreen_ils.accountAccess.AccountAccess.java", "BodyUseAPI": ["org.opensrf.util.OSRFObject.getString(java.lang.String)", "org.opensrf.util.OSRFObject.getString(java.lang.String)"], "Fixed commit": "8a81bf2641ed4396a3dbcce48c0bd870d024fd5d", "Url": "https://api.github.com/repos/kenstir/hemlock", "Date": "2017-11-24T18:11:34Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((f) <= 0) { f = ((p.getLastFeature()) / (k + 1)) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7285/buggy-version/src.ciir.umass.edu.learning.BM25F.java", "BodyUseAPI": [], "Fixed commit": "f534c15328017bee6b5fc4a7685e43001ffbbdde", "Url": "https://api.github.com/repos/tmanabe/RankLibBM25F-IA", "Date": "2017-10-14T05:13:15Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.util.Types.asElement(javax.lang.model.type.TypeMirror)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (typeElement != null) { typeName = typeElement.toString(); }else { typeName = injectedTypeElement.asType().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2160/buggy-version/toothpick-compiler.src.main.java.toothpick.compiler.common.ToothpickProcessor.java", "BodyUseAPI": ["javax.lang.model.element.Element.toString()"], "Fixed commit": "886f2a7dd0deabbf8de0cd5c9d07c1fc330dbd2a", "Url": "https://api.github.com/repos/stephanenicolas/toothpick", "Date": "2017-10-15T12:20:34Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mImageCycleViewListener) != null) { mImageCycleViewListener.onItemSelect(selectedPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6165/buggy-version/fastdev.src.main.java.cn.bluemobi.dylan.fastdev.view.CycleViewPager.java", "BodyUseAPI": [], "Fixed commit": "13fa839a6a31922dea2733a9f2fff6cfd3d5dd36", "Url": "https://api.github.com/repos/linglongxin24/AndroidFastDevFrame", "Date": "2017-03-14T07:03:21Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (segment > ((points.size()) - 2)) { segment = (points.size()) - 2; final double relativePositionOnSegment = 1.0; final java.awt.geom.Point2D segmentStart = points.get(segment); final java.awt.geom.Point2D segmentEnd = points.get((segment + 1)); final double x = (segmentStart.getX()) + (relativePositionOnSegment * ((segmentEnd.getX()) - (segmentStart.getX()))); final double y = (segmentStart.getY()) + (relativePositionOnSegment * ((segmentEnd.getY()) - (segmentStart.getY()))); position = new java.awt.geom.Point2D.Double(x, y); orientation = getAngleBetweenTwoPoints(segmentStart, segmentEnd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5431/buggy-version/src.main.java.ch.bfh.ti.jts.gui.data.PolyShape.java", "BodyUseAPI": ["java.util.List<java.awt.geom.Point2D>.get(int)", "java.util.List<java.awt.geom.Point2D>.size()", "java.util.List<java.awt.geom.Point2D>.get(int)"], "Fixed commit": "1e4ecc9742e6c6317988ec6c812f72abe6914dd1", "Url": "https://api.github.com/repos/winki/jts", "Date": "2014-11-13T10:05:10Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((r.getString(\"stuId\")) != null) { uk.ac.bris.cs.databases.cwk3.PersonView liker = new uk.ac.bris.cs.databases.cwk3.PersonView(r.getString(\"name\"), r.getString(\"username\"), r.getString(\"stuId\")); likers.add(liker); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6689/buggy-version/API.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "7c7b2c0f8d7573b5617dcdcfe666e0d2ef912e49", "Url": "https://api.github.com/repos/adk1010/cwk3", "Date": "2016-05-04T02:07:59Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (condition.getInput().contains(\"\\\"\")) { condition.setInput(condition.getInput().replaceAll(\"\\\"\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1087/buggy-version/src.org.jax.mgi.fewi.hmdc.forms.DiseasePortalConditionQuery.java", "BodyUseAPI": ["condition.getInput().replaceAll(java.lang.String,java.lang.String)", "org.jax.mgi.fewi.hmdc.forms.DiseasePortalCondition.getInput()", "org.jax.mgi.fewi.hmdc.forms.DiseasePortalCondition.setInput(condition.getInput().replaceAll(\"\\\"\", \"\"))"], "Fixed commit": "9b3a65f8f8e1ff88ec18baf73119a82257a99718", "Url": "https://api.github.com/repos/mgijax/fewi", "Date": "2016-05-17T11:32:27Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (condition.getInput().contains(\"\\\"\")) { condition.setInput(condition.getInput().replaceAll(\"\\\"\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1087/buggy-version/src.org.jax.mgi.fewi.hmdc.forms.DiseasePortalConditionQuery.java", "BodyUseAPI": ["condition.getInput().replaceAll(java.lang.String,java.lang.String)", "org.jax.mgi.fewi.hmdc.forms.DiseasePortalCondition.setInput(condition.getInput().replaceAll(\"\\\"\", \"\"))", "org.jax.mgi.fewi.hmdc.forms.DiseasePortalCondition.getInput()"], "Fixed commit": "9b3a65f8f8e1ff88ec18baf73119a82257a99718", "Url": "https://api.github.com/repos/mgijax/fewi", "Date": "2016-05-17T11:32:27Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((reviews.size()) >= 3) { for (index = 0; index < 3; index++) { topReviews.add(reviews.get(index)); } }else { for (index = 0; index < (reviews.size()); index++) { topReviews.add(reviews.get(index)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8727/buggy-version/KulizaProject.src.com.kuliza.service.impl.ImdbServiceImpl.java", "BodyUseAPI": ["java.util.List<com.kuliza.bean.Review>.get(int)", "java.util.List<com.kuliza.bean.Review>.size()", "java.util.List<com.kuliza.bean.Review>.add(reviews.get(index))", "java.util.List<com.kuliza.bean.Review>.add(reviews.get(index))", "java.util.List<com.kuliza.bean.Review>.get(int)"], "Fixed commit": "327b043f25ef4c5774da5e28cd8a427542e1f725", "Url": "https://api.github.com/repos/vipulgarg26/IMDB-Search-App", "Date": "2015-12-13T09:09:25Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultSliceSize) >= 0) r.setDefaultSliceSize(defaultSliceSize);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2113/buggy-version/logic.src.de.zib.gndms.logic.model.dspace.SetupSliceKindAction.java", "BodyUseAPI": [], "Fixed commit": "dfe6549942777b68a33ff6d1a1c1f65f4cee53f3", "Url": "https://api.github.com/repos/zibhub/GNDMS", "Date": "2012-07-25T11:57:05Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cameraOpen) { camera.stopPreview(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7768/buggy-version/robot-cowboy.src.com.msse.robot_cowboy.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d29807cbf7d6a5ddcc29a4581509e06a32951cec", "Url": "https://api.github.com/repos/smcadams86/robot-control", "Date": "2013-05-08T02:26:56Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.size()) > 1) { asl.sensor.utils.NumericUtils.complexMagnitudeSorter(list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2298/buggy-version/src.main.java.asl.sensor.input.InstrumentResponse.java", "BodyUseAPI": ["asl.sensor.utils.NumericUtils.complexMagnitudeSorter(java.util.ArrayList<org.apache.commons.math3.complex.Complex>)"], "Fixed commit": "bea096e72e468ba031fe9d3c668e29d07c004445", "Url": "https://api.github.com/repos/kschramm-usgs/asl_sensor_suite", "Date": "2017-11-20T23:02:03Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.size()) > 1) { asl.sensor.utils.NumericUtils.complexMagnitudeSorter(list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2298/buggy-version/src.main.java.asl.sensor.input.InstrumentResponse.java", "BodyUseAPI": ["asl.sensor.utils.NumericUtils.complexMagnitudeSorter(java.util.ArrayList<org.apache.commons.math3.complex.Complex>)"], "Fixed commit": "bea096e72e468ba031fe9d3c668e29d07c004445", "Url": "https://api.github.com/repos/kschramm-usgs/asl_sensor_suite", "Date": "2017-11-20T23:02:03Z"},
{"Line": "=>1072", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == (-1)) { if (!ignoreOnMismatch) { throw throwExceptionAndClose(((((\"Header '\" + headerName) + \"' could not be found. Defined headers are: \") + (java.util.Arrays.toString(headersInContext))) + '.'), null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6715/buggy-version/src.main.java.com.univocity.parsers.common.AbstractWriter.java", "BodyUseAPI": [], "Fixed commit": "45a7413133637b033dbc0ed1e09704a169b3873f", "Url": "https://api.github.com/repos/uniVocity/univocity-parsers", "Date": "2016-01-30T04:10:40Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromBean == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5410/buggy-version/src.main.java.org.nybatis.core.reflection.Reflector.java", "BodyUseAPI": [], "Fixed commit": "9da32f927dff4698a7990454972d0a9dcb49682c", "Url": "https://api.github.com/repos/NyBatis/NyBatisCore", "Date": "2016-12-13T03:18:41Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["identNode.getPreviousSibling().getLastChild()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (lastChild == null) { mapClassName = null; }else { mapClassName = lastChild.getText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2765/buggy-version/sevntu-checks.src.main.java.com.github.sevntu.checkstyle.checks.coding.MapIterationInForEachLoopCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getText()"], "Fixed commit": "475872e8fc27ae92ce5d322a292b5ffe55010cda", "Url": "https://api.github.com/repos/rnveach/sevntu.checkstyle", "Date": "2017-05-12T15:32:11Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((st.getTemplate_author()) != null) && (!(st.getTemplate_author().equals(\"\")))) { result.append(((\"Created-By: \" + (st.getTemplate_author())) + \"\\n\")); }else { result.append(((\"Created-By: \" + (org.opentosca.yamlconverter.main.utils.CSARUtil.DEFAULT_TEMPLATE_AUTHOR)) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6172/buggy-version/org.opentosca.yamlconverter.main.src.main.java.org.opentosca.yamlconverter.main.utils.CSARUtil.java", "BodyUseAPI": ["java.lang.StringBuilder.append(((\"Created-By: \" + (st.getTemplate_author())) + \"\\n\"))", "org.opentosca.yamlconverter.yamlmodel.yaml.element.ServiceTemplate.getTemplate_author()"], "Fixed commit": "748f6e6f24286fd9e5a61ebe154676b1ab8a3ad6", "Url": "https://api.github.com/repos/seeebiii/YAML_Transformer", "Date": "2015-03-10T11:27:59Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((st.getTemplate_version()) != null) && (!(st.getTemplate_version().equals(\"\")))) { result.append(((\"CSAR-Version: \" + (st.getTemplate_version())) + \"\\n\")); }else { result.append(((\"CSAR-Version: \" + (org.opentosca.yamlconverter.main.utils.CSARUtil.DEFAULT_TEMPLATE_VERSION)) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6172/buggy-version/org.opentosca.yamlconverter.main.src.main.java.org.opentosca.yamlconverter.main.utils.CSARUtil.java", "BodyUseAPI": ["org.opentosca.yamlconverter.yamlmodel.yaml.element.ServiceTemplate.getTemplate_version()", "java.lang.StringBuilder.append(((\"CSAR-Version: \" + (st.getTemplate_version())) + \"\\n\"))"], "Fixed commit": "748f6e6f24286fd9e5a61ebe154676b1ab8a3ad6", "Url": "https://api.github.com/repos/seeebiii/YAML_Transformer", "Date": "2015-03-10T11:27:59Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (estimatedMeanSize <= 1) { estimatedMeanSize = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6406/buggy-version/src.dna.graph.datastructures.GraphDataStructure.java", "BodyUseAPI": [], "Fixed commit": "43054fb98b134e13e64655615752b8669295721f", "Url": "https://api.github.com/repos/NicoHaase/DNA", "Date": "2014-03-23T16:00:41Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit2.Response<com.fooding.companyapp.data.model.Ingredient>.body()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (temp == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1423/buggy-version/app.src.main.java.com.fooding.companyapp.activity.NFCActivity.java", "BodyUseAPI": [], "Fixed commit": "f81e08c97cb96e6059cc4cf13b5256579225b1a7", "Url": "https://api.github.com/repos/CDP-Group2/FOODINGCOMPANY", "Date": "2017-12-08T07:50:57Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(parent.displayHasLabels())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7772/buggy-version/src.com.loverslab.apropos.edit.SidePanel.java", "BodyUseAPI": [], "Fixed commit": "fc79c46ef8b28f82f6acc983024ff58665712c35", "Url": "https://api.github.com/repos/Vauria/Apropos-Edit", "Date": "2017-09-25T12:26:12Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mxlGroupSymbol == null) return BracketGroup.Style.None;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1425/buggy-version/musicxml-in.src.com.xenoage.zong.io.musicxml.in.readers.StavesListReader.java", "BodyUseAPI": [], "Fixed commit": "c8be2eeaf0814bd17ecbe57993972236b7d4258f", "Url": "https://api.github.com/repos/Xenoage/Zong", "Date": "2014-11-05T09:35:49Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(request.getVehicle().isEmpty())) url += \"&vehicle=\" + (request.getVehicle());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5692/buggy-version/web.src.main.java.com.graphhopper.http.GraphHopperWeb.java", "BodyUseAPI": ["com.graphhopper.GHRequest.getVehicle()"], "Fixed commit": "d07541f994207062091ed6c5fe43b76d62519c69", "Url": "https://api.github.com/repos/brunesto/graphhopper", "Date": "2014-09-03T11:35:18Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (note.equals(\"\")) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/9239/buggy-version/KioskApplication.src.main.java.database.objects.Request.java", "BodyUseAPI": [], "Fixed commit": "a027544bdd2d1b3a3bbd3acc1ea634da9bb25d5f", "Url": "https://api.github.com/repos/CS3733-Team-I/CS3733", "Date": "2017-12-09T00:33:23Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.util.List<game.Item>>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (items == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/1995/buggy-version/Lunarcy.src.game.GameState.java", "BodyUseAPI": [], "Fixed commit": "872de73aa5d7658c8c738c52d7d2a96b302a620b", "Url": "https://api.github.com/repos/EmperorJack/Lunarcy-Repo", "Date": "2015-10-14T08:51:55Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (size.toLowerCase().equals(\"large\")) { return 0.7; }else if (size.toLowerCase().equals(\"grand\")) { return 0.9; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/892/buggy-version/Lab1.src.lab1.TeaBased.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "9d5f56e0b0d6668bc8f5795de2350768590688e8", "Url": "https://api.github.com/repos/14SEGroup1/Lab1", "Date": "2016-03-13T11:50:56Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (beveStr.equals(\"decaf mocha\")) { order = new lab1.Decaf(); ((lab1.CoffeeBeverage) (order)).setSize(disArr[i]); order = new lab1.Chocolate(order); }else if (beveStr.equals(\"decaf\")) { order = new lab1.Decaf(); ((lab1.CoffeeBeverage) (order)).setSize(disArr[i]); }else if (beveStr.equals(\"decaf latte\")) { order = new lab1.Decaf(); ((lab1.CoffeeBeverage) (order)).setSize(disArr[i]); order = new lab1.Milk(order); }else if (beveStr.equals(\"decaf cappuccino\")) { order = new lab1.Decaf(); ((lab1.CoffeeBeverage) (order)).setSize(disArr[i]); order = new lab1.WhipCream(order); }else { java.lang.System.out.println((\"Illegal input: \" + beveStr)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/892/buggy-version/Lab1.src.lab1.Main.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "9d5f56e0b0d6668bc8f5795de2350768590688e8", "Url": "https://api.github.com/repos/14SEGroup1/Lab1", "Date": "2016-03-13T11:50:56Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (size.toLowerCase().equals(\"large\")) { return 1.0; }else if (size.toLowerCase().equals(\"grand\")) { return 1.3; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/892/buggy-version/Lab1.src.lab1.CoffeeBased.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "9d5f56e0b0d6668bc8f5795de2350768590688e8", "Url": "https://api.github.com/repos/14SEGroup1/Lab1", "Date": "2016-03-13T11:50:56Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((messflow.getSourceRef()) instanceof org.eclipse.bpmn2.impl.InteractionNodeImpl) { org.eclipse.bpmn2.impl.InteractionNodeImpl source = ((org.eclipse.bpmn2.impl.InteractionNodeImpl) (messflow.getSourceRef())); org.eclipse.bpmn2.impl.InteractionNodeImpl target = ((org.eclipse.bpmn2.impl.InteractionNodeImpl) (messflow.getTargetRef())); java.lang.String fragments = source.eProxyURI().fragment(); java.lang.String fragmentt = target.eProxyURI().fragment(); java.lang.String aid = a.getId(); if ((aid.equals(fragmentt)) || (aid.equals(fragments))) { return true; } }else { if ((messflow.getSourceRef()) instanceof org.eclipse.bpmn2.Activity) { if ((a.equals(messflow.getSourceRef())) || (a.equals(messflow.getTargetRef()))) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/9121/buggy-version/lp-model-verification.verification-component-understandability-plugin.src.main.java.eu.learnpad.verification.plugin.bpmn.guideline.impl.notationusage.UsageMessageFlows.java", "BodyUseAPI": ["org.eclipse.bpmn2.Activity.equals(messflow.getSourceRef())", "org.eclipse.bpmn2.MessageFlow.getSourceRef()", "org.eclipse.bpmn2.MessageFlow.getSourceRef()", "org.eclipse.bpmn2.MessageFlow.getSourceRef()", "org.eclipse.bpmn2.MessageFlow.getTargetRef()", "org.eclipse.bpmn2.Activity.equals(messflow.getTargetRef())", "org.eclipse.bpmn2.MessageFlow.getTargetRef()"], "Fixed commit": "1e45dca1a9bada8e86373a370fb366763b3859d3", "Url": "https://api.github.com/repos/imatesiu/learnpad", "Date": "2016-10-12T21:00:50Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(targetView.isAttached())) { listener.onSpotlightError(com.wooplr.spotlight.SpotlightView.ERROR_TARGET_VIEW_NOT_ATTACHED); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/631/buggy-version/Spotlight-library.src.main.java.com.wooplr.spotlight.SpotlightView.java", "BodyUseAPI": [], "Fixed commit": "0137242e1ce6a850a15f4b50d5b60ba3c63101c7", "Url": "https://api.github.com/repos/PGrube26/Spotlight", "Date": "2017-02-15T09:31:30Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listener) != null) { listener.onSpotlightError(com.wooplr.spotlight.SpotlightView.ERROR_WIDTH_HEIGHT_NULL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/631/buggy-version/Spotlight-library.src.main.java.com.wooplr.spotlight.SpotlightView.java", "BodyUseAPI": [], "Fixed commit": "0137242e1ce6a850a15f4b50d5b60ba3c63101c7", "Url": "https://api.github.com/repos/PGrube26/Spotlight", "Date": "2017-02-15T09:31:30Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(closed.get())) { client.connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8274/buggy-version/src.main.java.org.netlight.client.Connector.java", "BodyUseAPI": [], "Fixed commit": "c49a54dcf72633301397f4c38544da820f11edb0", "Url": "https://api.github.com/repos/ahmadmo/netlight-client", "Date": "2015-10-18T14:15:39Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((currentScore) - score) < 0)) { this.currentScore -= score; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7362/buggy-version/Binding-of-Erik.src.binding_of_erik_game.Score.java", "BodyUseAPI": [], "Fixed commit": "64bc5bdbf4176bd9dadec4fe265f7205b1322173", "Url": "https://api.github.com/repos/eriksandberg/TDDD78", "Date": "2016-10-18T16:24:45Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<Negocio.Modelo.Pedido>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (p.getESTADO().equals(\"Pendiente\")) { for (int j = 0; j < (p.getLista_Productos().size()); j++) { Negocio.Modelo.Producto pr = p.getLista_Productos().get(j); if ((pr.getPR_tipo_producto()) != 3) { boolean esta = Lista_todos_productos.contains(pr); if (esta) { java.lang.Integer index = Lista_todos_productos.indexOf(pr); java.lang.Integer nueva_cant = (Lista_todos_productos.get(index).getCantidad()) + (pr.getCantidad()); Lista_todos_productos.get(index).setCantidad(nueva_cant); }else { Lista_todos_productos.add(pr); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8449/buggy-version/WildSoft.src.Interfaz.JDialogs.Interfaz_Cocina_Pantalla.java", "BodyUseAPI": ["p.getLista_Productos().size()", "p.getLista_Productos().get(int)", "Negocio.Modelo.Pedido.getLista_Productos()", "Negocio.Modelo.Pedido.getLista_Productos()"], "Fixed commit": "54347e0777b54f81b10905de98bbb0620adbdecb", "Url": "https://api.github.com/repos/santi101093/Laboratorio", "Date": "2015-11-20T00:59:10Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3730/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "1a23409741aa27568be419ca540312501ff8b0b4", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-22T03:49:56Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.ibuildthecloud.gdapi.context.ApiContext.getContext().getPolicy()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (policy == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8531/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.dao.impl.AuthDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "32b86f2084225113302e44e4159dfea945ae5124", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-04-07T01:32:49Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((output_data) != null) { for (org.openml.apiconnector.xml.Run.Data.File f : output_data.file) { result.put(f.name, f); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6766/buggy-version/apiconnector.src.main.java.org.openml.apiconnector.xml.Run.java", "BodyUseAPI": [], "Fixed commit": "a228d5a837f5d0dffede62ed656d7ef971476d1b", "Url": "https://api.github.com/repos/openml/java", "Date": "2017-08-03T07:26:14Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(targetAngle)) > (java.lang.Math.PI)) targetAngle = (java.lang.Math.PI) * (java.lang.Math.signum(targetAngle));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5193/buggy-version/src.main.java.za.redbridge.simulator.phenotype.heuristics.Heuristic.java", "BodyUseAPI": ["java.lang.Math.signum(double)"], "Fixed commit": "d16b063bc8c10e87faa063cf289a832d2556c5a0", "Url": "https://api.github.com/repos/JayH5/hons-simulator", "Date": "2014-09-26T02:13:37Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6398/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "b8ba88d1573738b95f2032361f033e1586ef35e2", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-03-30T03:01:15Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.modelexecution.xmof.Syntax.Activities.IntermediateActivities.ActivityNode.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (name == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2035/buggy-version/org.modelexecution.xmof.animation.src.org.modelexecution.xmof.animation.decorator.handler.ActivityElementDecorator.java", "BodyUseAPI": [], "Fixed commit": "745454e8453c0f5e1d21dc0bb3aed1c4eac922e3", "Url": "https://api.github.com/repos/tortmayr/ame_lab", "Date": "2016-05-04T20:25:03Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mVectorMessageListFragment.getMessageAdapter().getClosestRow(org.matrix.androidsdk.rest.model.Event)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (null != closestRow) { final org.matrix.androidsdk.rest.model.Event closestEvent = closestRow.getEvent(); final long newReadMarkerTs = closestEvent.getOriginServerTs(); org.matrix.androidsdk.util.Log.v(im.vector.util.ReadMarkerManager.LOG_TAG, (((((((\"setReadMarkerToLastVisibleRow currentReadMarkerEvent:\" + (currentReadMarkerEvent.eventId)) + \" TS:\") + currentReadMarkerTs) + \" closestEvent:\") + (closestEvent.eventId)) + \" TS:\") + (closestEvent.getOriginServerTs()))); if (newReadMarkerTs > currentReadMarkerTs) { org.matrix.androidsdk.util.Log.d(im.vector.util.ReadMarkerManager.LOG_TAG, (((\"setReadMarkerToLastVisibleRow update read marker to:\" + (newReadMarkerEvent.eventId)) + \" isMessageId:\") + (org.matrix.androidsdk.MXSession.isMessageId(newReadMarkerEvent.eventId)))); mRoom.setReadMakerEventId(newReadMarkerEvent.eventId); onReadMarkerChanged(mRoom.getRoomId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3393/buggy-version/vector.src.main.java.im.vector.util.ReadMarkerManager.java", "BodyUseAPI": ["org.matrix.androidsdk.adapters.MessageRow.getEvent()"], "Fixed commit": "edeb97af069193f66180d7c076eb84561578b749", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-07-13T05:58:35Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(player.worldObj.isRemote)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3493/buggy-version/ponies.abilities.AbilityTeleport.java", "BodyUseAPI": [], "Fixed commit": "b0bf7c01c12fce8a7e215b82e2fb9bfbdcb64d59", "Url": "https://api.github.com/repos/LoECraft/loecraftpack", "Date": "2013-07-30T07:34:17Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Model.FocusModel.getIdFromName(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (getProfile(profileID).isActivated()) { getProfile(profileID).deactivate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8658/buggy-version/Focus.app.src.main.java.Model.FocusModel.java", "BodyUseAPI": ["Model.Profile.deactivate()", "Model.FocusModel.getProfile(int)"], "Fixed commit": "5020cb2c29987cffad74b548aadb13aa8fc1fb02", "Url": "https://api.github.com/repos/hhurja/Moving_Battleships", "Date": "2017-10-31T02:47:34Z"},
{"Line": "=>1838", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (journalVol.isVPlexVolume(_dbClient)) { com.emc.storageos.db.client.model.Volume journalBackendVol = com.emc.storageos.util.VPlexUtil.getVPLEXBackendVolume(journalVol, true, _dbClient); if (journalBackendVol != null) { journalVolName = journalBackendVol.getLabel(); journalVolName = journalVolName.substring(0, journalVolName.lastIndexOf(\"-0\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6591/buggy-version/controllersvc.src.main.java.com.emc.storageos.protectioncontroller.impl.recoverpoint.RPHelper.java", "BodyUseAPI": ["com.emc.storageos.util.VPlexUtil.getVPLEXBackendVolume(com.emc.storageos.db.client.model.Volume,boolean,com.emc.storageos.db.client.DbClient)"], "Fixed commit": "e457a6e5fd0059281dae5aa9f4b256e917a2d8b3", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-08-30T13:55:35Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (halfDepth) { switch (tile.getDirection()) { case 2 : case 3 : return level > 0 ? iconOverlayV[level] : iconSideV[meta]; case 4 : case 5 : return level > 0 ? iconOverlay[level] : iconSide[meta]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/3218/buggy-version/src.com.jaquadro.minecraft.storagedrawers.block.BlockDrawers.java", "BodyUseAPI": [], "Fixed commit": "63ab644bbcd641c28facacf157846a4ec1ee996e", "Url": "https://api.github.com/repos/jaquadro/StorageDrawers", "Date": "2015-05-31T21:45:04Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (recycler)) { buildLocationRects(); layoutItemsOnScroll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8266/buggy-version/VegaLayoutManager.library.src.main.java.com.stone.vega.library.VegaLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "9b87cd3f1feda2c920bd8f39be85f9df983bbb65", "Url": "https://api.github.com/repos/xmuSistone/VegaLayoutManager", "Date": "2017-10-18T04:58:36Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (integer <= 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8012/buggy-version/src.net.named_data.jndn.encoding.der.DerNode.java", "BodyUseAPI": [], "Fixed commit": "f66e864ee21c15ddae2cf3e5192696a72b644b64", "Url": "https://api.github.com/repos/named-data/jndn", "Date": "2014-11-26T21:52:50Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>.contains(CreateFlag.CREATE)", "java.util.EnumSet<org.apache.hadoop.fs.CreateFlag>.contains(CreateFlag.OVERWRITE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (overwrite && (!create)) { throw new java.io.FileNotFoundException((\"File not found: \" + src)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/5854/buggy-version/giraffa-core.src.main.java.org.apache.giraffa.hbase.NamespaceProcessor.java", "BodyUseAPI": [], "Fixed commit": "fe9ff19ba58e20648b68941acf8584025b759eb4", "Url": "https://api.github.com/repos/weilintsaiWand/giraffa", "Date": "2015-06-20T20:59:27Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(propMgr.readValue(PropertyKey.SOLR_TRACKING_NUMBER_OF_THREAD))", "jp.aegif.nemaki.tracker.CoreTracker.extractChangeEvent(java.util.List<org.apache.chemistry.opencmis.client.api.ChangeEvent>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((list.size()) < numberOfThread) { numberOfThread = list.size(); numberPerThread = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/8926/buggy-version/solr.src.main.java.jp.aegif.nemaki.tracker.CoreTracker.java", "BodyUseAPI": ["java.util.List<org.apache.chemistry.opencmis.client.api.ChangeEvent>.size()"], "Fixed commit": "c53e78070a6423d97f08238e9d9d02f79691dea3", "Url": "https://api.github.com/repos/aegif/NemakiWare", "Date": "2015-04-21T07:37:05Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ipOrHostname.toLowerCase().contains(\"https://\")) { java.net.URL server = new java.net.URL((\"https://\" + (de.soderer.utilities.NetworkUtilities.getHostnameFromRequestString(ipOrHostname)))); java.net.HttpURLConnection connection = ((java.net.HttpURLConnection) (server.openConnection())); connection.connect(); return true; }else { return java.net.InetAddress.getByName(de.soderer.utilities.NetworkUtilities.getHostnameFromRequestString(ipOrHostname)).isReachable(5000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2661/buggy-version/src.de.soderer.utilities.NetworkUtilities.java", "BodyUseAPI": ["java.net.InetAddress.getByName(java.lang.String)", "de.soderer.utilities.NetworkUtilities.getHostnameFromRequestString(java.lang.String)", "de.soderer.utilities.NetworkUtilities.getHostnameFromRequestString(java.lang.String)", "java.net.InetAddress.isReachable(int)"], "Fixed commit": "7523be18699e848ef7422c3b2c7f51811072485a", "Url": "https://api.github.com/repos/hudeany/java-utilities-no-dependencies", "Date": "2016-02-04T22:56:04Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["_emailText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((email.isEmpty()) || (!(android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches()))) { android.widget.Toast.makeText(getBaseContext(), \"Gib deine E-Mail Adresse ein\", Toast.LENGTH_LONG).show(); }else { mAuth.sendPasswordResetEmail(email).addOnCompleteListener(new com.google.android.gms.tasks.OnCompleteListener<java.lang.Void>() { @java.lang.Override public void onComplete(@android.support.annotation.NonNull com.google.android.gms.tasks.Task<java.lang.Void> task) { if (task.isSuccessful()) { android.widget.Toast.makeText(getBaseContext(), \"E-Mail wurde versendet\", Toast.LENGTH_LONG).show(); }else { android.widget.Toast.makeText(getBaseContext(), \"Fehler beim Versenden der E-Mail\", Toast.LENGTH_LONG).show(); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/949/buggy-version/app.src.main.java.alextexamplecom.salsa_company.LoginActivity.java", "BodyUseAPI": ["mAuth.sendPasswordResetEmail(email).addOnCompleteListener(com.google.android.gms.tasks.OnCompleteListener<java.lang.Void>)", "com.google.firebase.auth.FirebaseAuth.sendPasswordResetEmail(java.lang.String)"], "Fixed commit": "1acaefc3aa3b207891cff1b613501c7d6c19fb2b", "Url": "https://api.github.com/repos/alextreib/Dance-School-App", "Date": "2017-07-23T21:46:23Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getUsuario()) == null) { repository.delete(p); }else if (p.getUsuario().getEmail().equals(u.getEmail())) { historial.add(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/6793/buggy-version/src.main.java.es.unizar.es.foodnet.controller.ControladorPedido.java", "BodyUseAPI": ["es.unizar.es.foodnet.model.repository.RepositorioPedido.delete(es.unizar.es.foodnet.model.entity.Pedido)", "java.util.List<es.unizar.es.foodnet.model.entity.Pedido>.add(es.unizar.es.foodnet.model.entity.Pedido)", "p.getUsuario().getEmail().equals(u.getEmail())", "es.unizar.es.foodnet.model.entity.Pedido.getUsuario()", "p.getUsuario().getEmail()"], "Fixed commit": "04670ac67c5c1eda13819f870d1d185e84a92fb1", "Url": "https://api.github.com/repos/strummerTFIU/FoodnetWebapp", "Date": "2016-11-16T19:04:11Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((m_dimSelectionModel.getNumSelectedDimLabels(cellValue.getMetadata())) == 0) && ((m_dimSelectionModel.getNumSelectedDimLabels()) > 0)) { throw new org.knime.knip.base.exceptions.KNIPException(\"Not enough selected dimensions provided by image.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/2643/buggy-version/org.knime.knip.base.src.org.knime.knip.base.node.IterableIntervalsNodeModel.java", "BodyUseAPI": [], "Fixed commit": "5600b82dd2fc6064a43608df9da5bca2f62f7908", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2013-12-05T16:52:05Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (limCharFound) { mAlarmText.setText(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V7/7086/buggy-version/Android.android-hc05-bluetooth-freescale-read-only.AndroidHC05Bluetooth.src.com.rinze.wurdklok.BluetoothHC05.BluetoothHC05.java", "BodyUseAPI": [], "Fixed commit": "9894aa0f1f594b76dea0587d8c9cea3f1c70ee2f", "Url": "https://api.github.com/repos/Xinxe4/wurdklok", "Date": "2014-04-27T21:37:39Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((staticText) != null) && (!(staticText.isEmpty()))) { return staticText; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4130/buggy-version/Mage.src.mage.abilities.effects.common.CreateTokenTargetEffect.java", "BodyUseAPI": [], "Fixed commit": "9ece8a21f6460d4222783fa27544118a53d9c005", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-07-21T15:13:27Z"},
{"Line": "=>731", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(groupMembersStr.contains(com.parse.ParseUser.getCurrentUser().getObjectId()))) { groupMembersStr.add(com.parse.ParseUser.getCurrentUser().getObjectId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2082/buggy-version/src.com.codepath.groupproject.dialogs.CreateGroupDialog.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(com.parse.ParseUser.getCurrentUser().getObjectId())"], "Fixed commit": "d7fb61c66b8432fd9aee128dbfd5840d6ff0be74", "Url": "https://api.github.com/repos/sahil0984/codepath-GroupProject", "Date": "2014-07-24T15:21:05Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userRecipes.contains(recipe)) { userRecipes.remove(recipe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3247/buggy-version/RecipeFinder.src.team13.cmput301.recipefinder.RecipeManager.java", "BodyUseAPI": ["java.util.List<team13.cmput301.recipefinder.Recipe>.remove(team13.cmput301.recipefinder.Recipe)"], "Fixed commit": "9d786ba995d7b76d056ec553d917a0a87f27e859", "Url": "https://api.github.com/repos/jessicayuen/CMPUT301T13", "Date": "2013-03-21T22:49:02Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAlive()) { modifyHealth(damage); if (!(isAlive())) { managers.dropPack.maybeDropPack(getCenterX(), getCenterY()); shop.addPoints(4); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5294/buggy-version/src.triGame.game.entities.zombies.Zombie.java", "BodyUseAPI": [], "Fixed commit": "9b6911ab27880334c97b87227706045980724e98", "Url": "https://api.github.com/repos/xuset/TriGame", "Date": "2013-12-24T16:14:41Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minutes.length()) < 2) minutes = \"0\" + minutes;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3793/buggy-version/HWOrganizer.src.hwo.SingleAssignment.java", "BodyUseAPI": [], "Fixed commit": "6e358b2d0025c583580846158bf2213fda2c9982", "Url": "https://api.github.com/repos/derektom14/HackRice2014", "Date": "2014-01-26T07:27:53Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.size) == 0) { return keysArr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8112/buggy-version/RBTree.java", "BodyUseAPI": [], "Fixed commit": "b703a3e5c2a5b8254d98f496ea24b9c1166a7bc6", "Url": "https://api.github.com/repos/avivros007/dataStructures-RBtrees", "Date": "2015-12-06T18:05:05Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.size) == 0) { return valuesArr; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8112/buggy-version/RBTree.java", "BodyUseAPI": [], "Fixed commit": "b703a3e5c2a5b8254d98f496ea24b9c1166a7bc6", "Url": "https://api.github.com/repos/avivros007/dataStructures-RBtrees", "Date": "2015-12-06T18:05:05Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((logger) != null) { logger.fine(((((((((\"(\" + location) + \", \") + className) + \", \") + kind) + \", \") + sibling) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/980/buggy-version/src.de.uni_koblenz.jgralab.schema.impl.compilation.ClassFileManager.java", "BodyUseAPI": [], "Fixed commit": "0d08f225f2a6d23e5be3e38513e6c9a038c9ef2c", "Url": "https://api.github.com/repos/jgralab/jgralab", "Date": "2012-08-20T14:51:05Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((logger) != null) { logger.fine(((((((((\"(\" + location) + \", \") + packageName) + \", \") + kinds) + \", \") + recurse) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/980/buggy-version/src.de.uni_koblenz.jgralab.schema.impl.compilation.ClassFileManager.java", "BodyUseAPI": [], "Fixed commit": "0d08f225f2a6d23e5be3e38513e6c9a038c9ef2c", "Url": "https://api.github.com/repos/jgralab/jgralab", "Date": "2012-08-20T14:51:05Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.type) != null) { arrayQueryStrings.add(org.esupportail.crousannonces.utils.URLUtils.arrayToQueryString(\"type\", this.type)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7455/buggy-version/src.main.java.org.esupportail.crousannonces.form.JobForm.java", "BodyUseAPI": [], "Fixed commit": "8056b6b10e914d7204d9e29342a5d5fb8e5fbe78", "Url": "https://api.github.com/repos/gsouquet/esup-annonces-crous", "Date": "2014-08-21T09:16:46Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.TypedQuery<com.scrumble.server.entities.Sprinttaskassignation>.getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((assignations.size()) == 1) { com.scrumble.server.entities.Sprinttaskassignation assignation = assignations.get(0); if (task.getIdProcessStatus().getCodeStatus().equals(\"don\")) { assignation.setDateEnd(new java.util.Date()); }else { assignation.setDateEnd(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4135/buggy-version/scrumble-server-ejb.src.main.java.com.scrumble.server.sessionbeans.TaskFacade.java", "BodyUseAPI": ["java.util.List<com.scrumble.server.entities.Sprinttaskassignation>.get(int)"], "Fixed commit": "da078ef463c97896f69cb747a2908da7b5789b66", "Url": "https://api.github.com/repos/scrumbleproject/scrumble-server", "Date": "2013-04-12T13:41:33Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, in.bloomington.timer.bean.AccrualWarning>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((d_need % (acc_warn.getStep_hrs())) > 0.01) { d_need = (d_need + (acc_warn.getStep_hrs())) - (d_need % (acc_warn.getStep_hrs())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8226/buggy-version/src.main.java.in.bloomington.timer.bean.Document.java", "BodyUseAPI": ["in.bloomington.timer.bean.AccrualWarning.getStep_hrs()", "in.bloomington.timer.bean.AccrualWarning.getStep_hrs()"], "Fixed commit": "ed3a22b6b7fe19b2f4e4ec6bae1f4ce5e1f8e3ca", "Url": "https://api.github.com/repos/City-of-Bloomington/timetrack", "Date": "2017-11-15T20:05:57Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d_need > 0) { if (acc_warn.require_step()) { if ((d_need % (acc_warn.getStep_hrs())) > 0.01) { d_need = (d_need + (acc_warn.getStep_hrs())) - (d_need % (acc_warn.getStep_hrs())); } if (d_need < (acc_warn.getMin_hrs())) { d_need = acc_warn.getMin_hrs(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8226/buggy-version/src.main.java.in.bloomington.timer.bean.Document.java", "BodyUseAPI": [], "Fixed commit": "ed3a22b6b7fe19b2f4e4ec6bae1f4ce5e1f8e3ca", "Url": "https://api.github.com/repos/City-of-Bloomington/timetrack", "Date": "2017-11-15T20:05:57Z"},
{"Line": "=>595", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d_dif < 40) d_need = 40.0 - d_dif;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8226/buggy-version/src.main.java.in.bloomington.timer.bean.Document.java", "BodyUseAPI": [], "Fixed commit": "ed3a22b6b7fe19b2f4e4ec6bae1f4ce5e1f8e3ca", "Url": "https://api.github.com/repos/City-of-Bloomington/timetrack", "Date": "2017-11-15T20:05:57Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (wc > 0) { sb.append(close, 0, wc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7717/buggy-version/src.main.java.org.vafer.jdeb.utils.Utils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char[],int,int)"], "Fixed commit": "6ca537bb15cbbb596e4e7f5d7f571482bf171415", "Url": "https://api.github.com/repos/crea-doo/jdeb", "Date": "2014-06-12T00:55:42Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (wo > 0) { sb.append(open, 0, wo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7717/buggy-version/src.main.java.org.vafer.jdeb.utils.Utils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char[],int,int)"], "Fixed commit": "6ca537bb15cbbb596e4e7f5d7f571482bf171415", "Url": "https://api.github.com/repos/crea-doo/jdeb", "Date": "2014-06-12T00:55:42Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3659/buggy-version/mineguild-admin-plugin.src.com.github.mineguild.MineguildAdmin.MGACommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "f0e3650a584fc70d9c81674f9be644ad73c6791e", "Url": "https://api.github.com/repos/mineguild/mineguild-admin-plugin", "Date": "2012-08-13T17:08:34Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((base) instanceof framework.scuba.domain.ParamElem) { return ((framework.scuba.domain.ParamElem) (base)); }else if ((base) instanceof framework.scuba.domain.StaticElem) { return ((framework.scuba.domain.StaticElem) (base)); }else { assert false : \"the base MUST be a ParamElem or StaticElem!\"; return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/120/buggy-version/src.framework.scuba.domain.AccessPath.java", "BodyUseAPI": [], "Fixed commit": "ccd21991ee3e3a5f2e388957155d2ee5079a2204", "Url": "https://api.github.com/repos/fredfeng/Scuba", "Date": "2014-06-02T21:12:11Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!sslConfigured) { throw IIOPLogger.ROOT_LOGGER.noSecurityDomainOrSSLContextsSpecified(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7630/buggy-version/iiop-openjdk.src.main.java.org.wildfly.iiop.openjdk.ConfigValidator.java", "BodyUseAPI": [], "Fixed commit": "a0a682fe01324d50a431a715a7355366e5b9ab1b", "Url": "https://api.github.com/repos/salewski/wildfly", "Date": "2017-04-20T21:43:32Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v.getId()) == (R.id.pass_cancel)) { dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6348/buggy-version/src.com.jtschohl.androidfirewall.PassDialog.java", "BodyUseAPI": [], "Fixed commit": "c52ab5b6790f6bae536dc31fbb97c98e3d6f9da3", "Url": "https://api.github.com/repos/iptux/android_packages_apps_Firewall", "Date": "2013-01-17T01:35:43Z"},
{"Line": "=>585", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!((com.example.palpointer.ToDoActivity.contactNumber) == null)) && (coordinatesAvailable(palLat, palLong))) { if ((location.getAccuracy()) <= 30) { image.setImageResource(R.drawable.arrow_green); greenArrow = true; redArrow = false; }else { image.setImageResource(R.drawable.arrow_red); redArrow = true; greenArrow = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5901/buggy-version/AppPalPointer.src.com.example.palpointer.ToDoActivity.java", "BodyUseAPI": [], "Fixed commit": "d90201ccbc65ec931cd9c9f0afda6afea0fa00f4", "Url": "https://api.github.com/repos/DAT255-GLPP/AppPalPointer", "Date": "2014-05-21T17:23:32Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id != (-1)) { return id; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6028/buggy-version/src.main.java.no.dusken.momus.ldap.LdapSyncer.java", "BodyUseAPI": [], "Fixed commit": "a9cd3f66c4fa8f079f5ef835773a2fb3bc1b34f7", "Url": "https://api.github.com/repos/Studentmediene/Momus", "Date": "2017-02-16T12:49:11Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["user.getRestTemplate().getForObject(((getAlfrescoServerUrl()) + (fr.itldev.koya.services.impl.CompanyServiceImpl.REST_GET_SINGLEPREFERENCES)),java.lang.Class,c.getName(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (pref == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2570/buggy-version/libkoya.src.main.java.fr.itldev.koya.services.impl.CompanyServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "1f775934064e133750843f2cb3eb5aa75e2e8f85", "Url": "https://api.github.com/repos/Itldev/Koya", "Date": "2014-08-26T15:50:43Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tmp == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1955/buggy-version/highlight.src.main.java.com.lhc.highlight.HighLight.java", "BodyUseAPI": [], "Fixed commit": "b8ed8171eb50663b63290f05799124e9a33b5ab8", "Url": "https://api.github.com/repos/lhc20040808/HighLightView", "Date": "2017-12-12T06:42:53Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fields.containsKey(\"stack_trace\")) fields.remove(\"stack_trace\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8232/buggy-version/src.main.java.org.graylog2.logging.GelfHandler.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.remove(java.lang.String)"], "Fixed commit": "ed66e9b7a352ea068f703a537ba3eced749be4bf", "Url": "https://api.github.com/repos/sonoflo/gelfj", "Date": "2015-04-01T07:28:18Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((startBlock >= 0) && (endBlock >= 0)) && ((startBlock + 4) < (output.length()))) && (endBlock < (output.length()))) { finalOutput = output.substring((startBlock + 4), endBlock); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6570/buggy-version/rwiki.rwiki-util.radeox.src.java.org.radeox.filter.XHTMLFilter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "d95f2a0df63bc3bd1652b249050cd06bb8e0b32a", "Url": "https://api.github.com/repos/bjones86/sakai", "Date": "2016-11-15T16:27:38Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.eclipse.jface.viewers.IStructuredSelection) (event.getSelection())).getFirstElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (element != null) { element.jumpToResult(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1582/buggy-version/org.eclipse.jubula.client.ui.rcp.src.org.eclipse.jubula.client.ui.rcp.search.SearchResultPage.java", "BodyUseAPI": ["org.eclipse.jubula.client.ui.rcp.search.result.BasicSearchResult.SearchResultElement<java.lang.Long>.jumpToResult()"], "Fixed commit": "0b494662b9183fc50e8ac535e8fe6021a4e7c873", "Url": "https://api.github.com/repos/eclipse/jubula.core", "Date": "2015-05-27T07:27:57Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allowedSpawns.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/894/buggy-version/src.main.java.com.herocc.bukkit.multispawn.MultiSpawn.java", "BodyUseAPI": [], "Fixed commit": "379bf209308814dcf352503c72742a482dd113da", "Url": "https://api.github.com/repos/HeroiCraft/MultiSpawn", "Date": "2016-06-14T01:40:11Z"},
{"Line": "=>687", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Lists.newArrayList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(values.isEmpty())) { short dv = ((short) (rc.getInt(com.google.gerrit.server.git.ProjectConfig.LABEL, name, com.google.gerrit.server.git.ProjectConfig.KEY_DEFAULT_VALUE, 0))); if (isInRange(dv, values)) { label.setDefaultValue(dv); }else { error(new com.google.gerrit.server.git.ValidationError(com.google.gerrit.server.git.ProjectConfig.PROJECT_CONFIG, java.lang.String.format(\"Invalid %s \\\"%s\\\" for label \\\"%s\\\"\", com.google.gerrit.server.git.ProjectConfig.KEY_DEFAULT_VALUE, dv, name))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4098/buggy-version/gerrit-server.src.main.java.com.google.gerrit.server.git.ProjectConfig.java", "BodyUseAPI": ["com.google.gerrit.server.git.ProjectConfig.isInRange(short,java.util.List<com.google.gerrit.common.data.LabelValue>)"], "Fixed commit": "e5e318c0c436851f8bc9a6cf1ce3cb338edcc470", "Url": "https://api.github.com/repos/gerrit-review/gerrit", "Date": "2015-06-10T12:26:33Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((extension == null) || (!(extension.equals(\"maze\")))) file = new java.io.File(((file.getPath()) + \".maze\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8437/buggy-version/MazeEscapeApp.src.mazeEscapeApp.MazeSaveLoad.java", "BodyUseAPI": [], "Fixed commit": "e230063897e2f201f112357c431300d0d8aa140a", "Url": "https://api.github.com/repos/nicholas1029/MazeEscape", "Date": "2013-04-22T20:50:32Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentlySelectedCoord) != null) currentlySelected = m.getgCellClickableArea()[currentlySelectedCoord.getRow()][currentlySelectedCoord.getCol()];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8437/buggy-version/MazeEscapeApp.src.mazeEscapeApp.MazeSaveLoad.java", "BodyUseAPI": [], "Fixed commit": "e230063897e2f201f112357c431300d0d8aa140a", "Url": "https://api.github.com/repos/nicholas1029/MazeEscape", "Date": "2013-04-22T20:50:32Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getName()", "java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((i > 0) && (i < ((str.length()) - 1))) extension = str.substring((i + 1)).toLowerCase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8437/buggy-version/MazeEscapeApp.src.mazeEscapeApp.MazeSaveLoad.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.substring(int)"], "Fixed commit": "e230063897e2f201f112357c431300d0d8aa140a", "Url": "https://api.github.com/repos/nicholas1029/MazeEscape", "Date": "2013-04-22T20:50:32Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (cS != null) out.println(new mazeEscapeApp.GCellCoordinate(cS)); else out.println();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8437/buggy-version/MazeEscapeApp.src.mazeEscapeApp.MazeSaveLoad.java", "BodyUseAPI": ["java.io.PrintWriter.println(mazeEscapeApp.GCellCoordinate)"], "Fixed commit": "e230063897e2f201f112357c431300d0d8aa140a", "Url": "https://api.github.com/repos/nicholas1029/MazeEscape", "Date": "2013-04-22T20:50:32Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cSC.equals(\"\"))) currentlySelectedCoord = new mazeEscapeApp.GCellCoordinate(cSC);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8437/buggy-version/MazeEscapeApp.src.mazeEscapeApp.MazeSaveLoad.java", "BodyUseAPI": [], "Fixed commit": "e230063897e2f201f112357c431300d0d8aa140a", "Url": "https://api.github.com/repos/nicholas1029/MazeEscape", "Date": "2013-04-22T20:50:32Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["counts.resolveFunction.invoke(java.lang.Object,java.lang.Object,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (subVal == resolved) { return leftNode; }else { return new clojure.lang.PersistentHashMap.BitmapIndexedNode(null, leftNode.bitmap, clojure.lang.NodeUtils.cloneAndSet(leftNode.array, valueIndex, resolved)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7846/buggy-version/src.java.clojure.lang.BitmapIndexedNodeAndKeyValuePairSplicer.java", "BodyUseAPI": ["clojure.lang.NodeUtils.cloneAndSet(leftNode.array,int,java.lang.Object)"], "Fixed commit": "9ce462443f095598b1a45f3ba6033913b7653d07", "Url": "https://api.github.com/repos/JulesGosnell/seqspert", "Date": "2014-10-19T10:01:46Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rowCount) < 0) { (rowCount)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/307/buggy-version/sql.src.main.java.io.crate.protocols.postgres.RowCountReceiver.java", "BodyUseAPI": [], "Fixed commit": "6a22a1e05ec9b5971e709a0124e8eef843ef140d", "Url": "https://api.github.com/repos/crate/crate", "Date": "2016-08-05T14:29:28Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (lightState.isReachable()) { lightState.setOn(true); onOffButton.setText(\"On\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4438/buggy-version/app.src.main.java.com.philips.lighting.app.CustomArrayAdapter.java", "BodyUseAPI": ["com.philips.lighting.model.PHLightState.setOn(boolean)"], "Fixed commit": "f0ae6aca8ce462535fff8e10695dda8f6de824d4", "Url": "https://api.github.com/repos/bmcglynn1/HueGlow", "Date": "2017-09-01T19:23:03Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.cerberus.serviceEngine.impl.SystemPropertyEnum.contains(tecd.getProperty()))) { if (tecd.getPropertyResultMessage().isStopTest()) { testCaseStepActionExecution.setStopExecution(tecd.isStopExecution()); testCaseStepActionExecution.setActionResultMessage(tecd.getPropertyResultMessage()); testCaseStepActionExecution.setExecutionResultMessage(new org.cerberus.entity.MessageGeneral(tecd.getPropertyResultMessage().getMessage())); } if ((tecd.getPropertyResultMessage().getCode()) == (MessageEventEnum.PROPERTY_FAILED_NO_PROPERTY_DEFINITION.getCode())) { testCaseStepActionExecution.setStopExecution(tecd.isStopExecution()); testCaseStepActionExecution.setActionResultMessage(tecd.getPropertyResultMessage()); testCaseStepActionExecution.setExecutionResultMessage(new org.cerberus.entity.MessageGeneral(tecd.getPropertyResultMessage().getMessage())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2368/buggy-version/source.src.main.java.org.cerberus.serviceEngine.impl.PropertyService.java", "BodyUseAPI": ["tecd.getPropertyResultMessage().getMessage()", "org.cerberus.entity.TestCaseStepActionExecution.setStopExecution(tecd.isStopExecution())", "org.cerberus.entity.TestCaseStepActionExecution.setExecutionResultMessage(org.cerberus.entity.MessageGeneral)", "org.cerberus.entity.TestCaseExecutionData.getPropertyResultMessage()", "org.cerberus.entity.TestCaseStepActionExecution.setActionResultMessage(tecd.getPropertyResultMessage())", "tecd.getPropertyResultMessage().getCode()", "tecd.getPropertyResultMessage().isStopTest()", "org.cerberus.entity.TestCaseExecutionData.isStopExecution()", "org.cerberus.entity.TestCaseStepActionExecution.setActionResultMessage(tecd.getPropertyResultMessage())", "org.cerberus.entity.TestCaseExecutionData.getPropertyResultMessage()", "org.cerberus.entity.TestCaseExecutionData.getPropertyResultMessage()", "org.cerberus.entity.TestCaseStepActionExecution.setStopExecution(tecd.isStopExecution())", "tecd.getPropertyResultMessage().getMessage()", "org.cerberus.entity.TestCaseExecutionData.isStopExecution()", "org.cerberus.entity.TestCaseStepActionExecution.setExecutionResultMessage(org.cerberus.entity.MessageGeneral)", "org.cerberus.entity.TestCaseExecutionData.getPropertyResultMessage()", "org.cerberus.entity.TestCaseExecutionData.getPropertyResultMessage()", "org.cerberus.entity.TestCaseExecutionData.getPropertyResultMessage()"], "Fixed commit": "1a7de886726974fa8ee70c5baf703b7527e9369f", "Url": "https://api.github.com/repos/cerberustesting/cerberus-source", "Date": "2015-04-15T14:51:32Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (active) { handleIntent(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4647/buggy-version/app.src.main.java.com.cpe409.twiddle.activities.FilteredFeedActivity.java", "BodyUseAPI": [], "Fixed commit": "400aaad1ab246fe0b55d5c7542a84efb8be06fb9", "Url": "https://api.github.com/repos/calvwng/twiddle", "Date": "2015-03-13T04:54:52Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l == null) { return \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1736/buggy-version/src.main.java.com.onarandombox.MultiverseCore.utils.LocationManipulation.java", "BodyUseAPI": [], "Fixed commit": "251b66a8d09b4571be75f4b635d52afa593755db", "Url": "https://api.github.com/repos/Multiverse/Multiverse-Core", "Date": "2011-12-19T02:16:13Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_XML_SUPPORTED) { updatePreferences(preferences, MediaType.APPLICATION_JAVA_OBJECT_XML, 1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8414/buggy-version/modules.org.restlet.src.org.restlet.engine.converter.DefaultConverter.java", "BodyUseAPI": [], "Fixed commit": "12cc79b3953c7bd276e9f1cae2fbfdb9c1a6f070", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2013-08-14T16:08:42Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_XML_SUPPORTED) { result = addVariant(result, org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_XML); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8414/buggy-version/modules.org.restlet.src.org.restlet.engine.converter.DefaultConverter.java", "BodyUseAPI": [], "Fixed commit": "12cc79b3953c7bd276e9f1cae2fbfdb9c1a6f070", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2013-08-14T16:08:42Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["civ.GameMap.getTile(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(tile.hasUnit())) tile.setUnit(pu);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6030/buggy-version/src.civ.MyPacketListener.java", "BodyUseAPI": ["civ.Tile.setUnit(civ.PhysicalUnit)"], "Fixed commit": "f950d8ae541ef038554ae2bad895842e747b8b78", "Url": "https://api.github.com/repos/softarn/Civ6", "Date": "2011-05-31T14:58:02Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((buffer.size()) > 0) string = new java.lang.String(buffer.toByteArray());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7800/buggy-version/cagw-core.src.main.java.com.satnar.smpp.codec.CHexString.java", "BodyUseAPI": ["java.io.ByteArrayOutputStream.toByteArray()"], "Fixed commit": "2dfc044bf6acda75599049d1a9df94b2fe6e35ef", "Url": "https://api.github.com/repos/chamuch/vtlcagw", "Date": "2015-07-19T17:02:26Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((buffer.size()) > 0) string = new java.lang.String(buffer.toByteArray());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7800/buggy-version/cagw-core.src.main.java.com.satnar.smpp.codec.CDecimalString.java", "BodyUseAPI": ["java.io.ByteArrayOutputStream.toByteArray()"], "Fixed commit": "2dfc044bf6acda75599049d1a9df94b2fe6e35ef", "Url": "https://api.github.com/repos/chamuch/vtlcagw", "Date": "2015-07-19T17:02:26Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((buffer.size()) > 0) string = new java.lang.String(buffer.toByteArray());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7800/buggy-version/cagw-core.src.main.java.com.satnar.smpp.codec.COctetString.java", "BodyUseAPI": ["java.io.ByteArrayOutputStream.toByteArray()"], "Fixed commit": "2dfc044bf6acda75599049d1a9df94b2fe6e35ef", "Url": "https://api.github.com/repos/chamuch/vtlcagw", "Date": "2015-07-19T17:02:26Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((energia) < 2) { gui.showMessage(\"\u00c9 necess\u00e1rio ter 2 energias para poder atacar.\"); }else { gui.showMessage(\"Este pok\u00e9mon j\u00e1 atacou nessa rodada.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1255/buggy-version/src.gui.AtorJogador.java", "BodyUseAPI": [], "Fixed commit": "49467ff9ea63c8527d9f1000bb6067a2c251c996", "Url": "https://api.github.com/repos/vieiralucas/Attack-Pokemon-System", "Date": "2014-12-10T03:35:19Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((objects[object].getPosition()) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5354/buggy-version/src.balle.world.filter.KalmanFilter.java", "BodyUseAPI": [], "Fixed commit": "0e0c02791c818732ae9d6518ff1a497b0357a9e2", "Url": "https://api.github.com/repos/RimasTr/sdp-group6", "Date": "2013-03-05T21:00:36Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((s.getOpponent()) == null) || ((s.getOpponent().getAngularVelocity()) == null)) { updatedOpponent = s.getOpponent(); }else { updatedOpponent = new balle.world.objects.Robot(new balle.world.Coord(X[1].get(0, 0), X[1].get(1, 0)), new balle.world.Velocity(X[1].get(2, 0), X[1].get(3, 0), balle.world.filter.KalmanFilter.deltaT), s.getOpponent().getAngularVelocity(), s.getOpponent().getOrientation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5354/buggy-version/src.balle.world.filter.KalmanFilter.java", "BodyUseAPI": ["s.getOpponent().getOrientation()", "s.getOpponent().getAngularVelocity()", "balle.world.Snapshot.getOpponent()", "balle.world.Snapshot.getOpponent()", "balle.world.Snapshot.getOpponent()"], "Fixed commit": "0e0c02791c818732ae9d6518ff1a497b0357a9e2", "Url": "https://api.github.com/repos/RimasTr/sdp-group6", "Date": "2013-03-05T21:00:36Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((s.getBalle()) == null) || ((s.getBalle().getAngularVelocity()) == null)) { updatedRobot = s.getBalle(); }else { updatedRobot = new balle.world.objects.Robot(new balle.world.Coord(X[0].get(0, 0), X[0].get(1, 0)), new balle.world.Velocity(X[0].get(2, 0), X[0].get(3, 0), balle.world.filter.KalmanFilter.deltaT), s.getBalle().getAngularVelocity(), s.getBalle().getOrientation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5354/buggy-version/src.balle.world.filter.KalmanFilter.java", "BodyUseAPI": ["s.getBalle().getAngularVelocity()", "balle.world.Snapshot.getBalle()", "balle.world.Snapshot.getBalle()", "balle.world.Snapshot.getBalle()", "s.getBalle().getOrientation()"], "Fixed commit": "0e0c02791c818732ae9d6518ff1a497b0357a9e2", "Url": "https://api.github.com/repos/RimasTr/sdp-group6", "Date": "2013-03-05T21:00:36Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (raceHasTrinkets) { if (((medal[counter]) != null) && (!(\"\".equals(medal[counter])))) { holder.setTrinket(dao.getTrinket(java.lang.Long.parseLong(medal[(counter++)]))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8282/buggy-version/src.java.is.idega.idegaweb.pheidippides.presentation.CompanyImporter.java", "BodyUseAPI": [], "Fixed commit": "443992bfd6c354ac1ebd61c828fed2311255f26e", "Url": "https://api.github.com/repos/bluebottle/is.idega.idegaweb.block.pheidippides", "Date": "2014-03-18T13:32:44Z"},
{"Line": "=>867", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<global.Task>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(curTask.isDone())) { if (curTask.hasEndingTime()) { listOfEventsDeadlines.add(curTask); }else { listOfFloating.add(curTask); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2072/buggy-version/src.logic.Logic.java", "BodyUseAPI": ["global.Task.hasEndingTime()", "java.util.ArrayList<global.Task>.add(global.Task)", "java.util.ArrayList<global.Task>.add(global.Task)"], "Fixed commit": "27bb272497bbebbfc444d4208b11ec7e75063d6d", "Url": "https://api.github.com/repos/cs2103aug2015-w10-4j/main", "Date": "2015-10-30T11:09:24Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(googleApiClient.isConnected())) { android.util.Log.d(\"TAG\", \"onStart(): connecting\"); googleApiClient.connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3422/buggy-version/SnapThat.app.src.main.java.com.example.umyhpuscdi.snapthat.MainActivity.java", "BodyUseAPI": ["com.google.android.gms.common.api.GoogleApiClient.connect()"], "Fixed commit": "e4c6a8cae183863c052573726d34fb6469b669f0", "Url": "https://api.github.com/repos/Didoniac/SnapThat", "Date": "2016-05-03T13:57:56Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gen) != null) { while (!(gen.step())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/786/buggy-version/jDisjointSets.src.disjoint.maze.jgamegui.MazePanel.java", "BodyUseAPI": [], "Fixed commit": "194424ac58fe690a900faee5106ba22e6fbe5653", "Url": "https://api.github.com/repos/WChargin/apcs", "Date": "2013-10-12T16:05:24Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { player.removeSelf(); player = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/786/buggy-version/jDisjointSets.src.disjoint.maze.jgamegui.MazePanel.java", "BodyUseAPI": [], "Fixed commit": "194424ac58fe690a900faee5106ba22e6fbe5653", "Url": "https://api.github.com/repos/WChargin/apcs", "Date": "2013-10-12T16:05:24Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(withinDelete(e.getPoint()))) { if (((e.getX()) > ((this.getWidth()) - (BORDER_WIDTH))) && ((e.getY()) > ((this.getHeight()) - (BORDER_WIDTH)))) { _resizeLock = true; }else { _dragLock = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4671/buggy-version/code.brainStorm.src.boardnodes.StyledNode.java", "BodyUseAPI": ["java.awt.event.MouseEvent.getY()", "java.awt.event.MouseEvent.getX()"], "Fixed commit": "f0a0fd2f25aa275899fabeaf2e2430e13eebff84", "Url": "https://api.github.com/repos/jboreiko/brainStormProject", "Date": "2012-05-08T02:11:53Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.round(getZ())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((myZ == (-1)) && ((imageData_float.getSizeZ()) == 1)) myZ = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8532/buggy-version/src.plugins.adufour.activecontours.Polygon2D.java", "BodyUseAPI": [], "Fixed commit": "959ad6f68859ec6fdc7de01b4ac76f40d09eb10b", "Url": "https://api.github.com/repos/adufour/Active-Contours", "Date": "2014-08-21T15:06:14Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<ink.va.models.GroupMessagesModel>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (groupMessagesModel.getGroupMessage().isEmpty()) { holder.groupMessageBody.setVisibility(View.GONE); }else { holder.groupMessageBody.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6401/buggy-version/app.src.main.java.ink.va.adapters.GroupMessagesAdapter.java", "BodyUseAPI": [], "Fixed commit": "5e968ad521b238d09a2a1bce4c2d5c9d37ff2888", "Url": "https://api.github.com/repos/vladimirarevshatyan/Ink", "Date": "2016-10-30T16:31:20Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ex.getGraph().featureLibrary.getSymbol(grad.key())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (params.get(feature).isInfinite()) { edu.cmu.ml.proppr.learn.AdaGradSRW.log.warn((((((\"Infinity at \" + feature) + \"; gradient \") + (grad.value())) + \"; rt \") + rt)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7973/buggy-version/src.java.main.edu.cmu.ml.proppr.learn.AdaGradSRW.java", "BodyUseAPI": ["org.apache.log4j.Logger.warn((((((\"Infinity at \" + feature) + \"; gradient \") + (grad.value())) + \"; rt \") + rt))"], "Fixed commit": "45a668d8a5e4cf000c7c6c4ea6525403b3b1067a", "Url": "https://api.github.com/repos/TeamCohen/ProPPR", "Date": "2015-11-13T21:09:40Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (status == (com.owncloud.android.lib.common.network.WebdavEntry.CODE_PROP_NOT_FOUND)) { status = ms.getStatus()[1].getStatusCode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/405/buggy-version/src.com.owncloud.android.lib.common.network.WebdavEntry.java", "BodyUseAPI": [], "Fixed commit": "91e4a4415765ec4232fe775ab29f4af196821706", "Url": "https://api.github.com/repos/owncloud/android-library", "Date": "2015-03-06T09:13:21Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((partei.compareTo(parteiLang)) != 0) { sb.append(\" - \"); sb.append(parteiLang); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8001/buggy-version/src.main.java.org.woehlke.btw17.kandidaten.oodm.model.Partei.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "516dda3891d648b74dcd5139e295f9fdd20324d9", "Url": "https://api.github.com/repos/phasenraum2010/btw17kandidaten", "Date": "2017-09-05T19:34:55Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rajawali3d.Object3D.onRecalculateModelMatrix(org.rajawali3d.math.Matrix4)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (modelMatrixWasRecalculated) child.markModelMatrixDirty();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7048/buggy-version/rajawali.src.main.java.org.rajawali3d.Object3D.java", "BodyUseAPI": [], "Fixed commit": "4cbec7e461860ae51d1b8331733f413f9cbaecbe", "Url": "https://api.github.com/repos/Rajawali/Rajawali", "Date": "2015-03-29T21:43:41Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["g.tool.errMgr.getNumErrors()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((g.tool.errMgr.getNumErrors()) > prevErrors) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2315/buggy-version/tool.src.org.antlr.v4.semantics.SemanticPipeline.java", "BodyUseAPI": [], "Fixed commit": "b5907498de5766db27f4f3140c67d2784c945f00", "Url": "https://api.github.com/repos/antlr/antlr4", "Date": "2015-05-19T21:44:05Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!hasVictim) { try { this.monitor.await(version); } catch (java.lang.InterruptedException e) { java.lang.Thread.currentThread().interrupt(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6413/buggy-version/src.main.java.bgu.spl.a2.Processor.java", "BodyUseAPI": [], "Fixed commit": "1759abe96db83b1a2ce6a6d3f616de3774d04e90", "Url": "https://api.github.com/repos/yuvalevy/SPL-WSS", "Date": "2016-12-30T15:19:16Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (k == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/734/buggy-version/app.src.main.java.com.indysoft.amazingtetris.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "e44a243172b1d2aff2c7feae703652024a5c300f", "Url": "https://api.github.com/repos/scipianus/Amazing-Tetris", "Date": "2015-05-14T19:32:40Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.orbisgis.wkgui.gui.ViewWorkspaceImpl.alwaysStop)) { bc.getBundle(0).stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8110/buggy-version/workspace-gui.src.main.java.org.orbisgis.wkgui.gui.ViewWorkspaceImpl.java", "BodyUseAPI": [], "Fixed commit": "4b7d686f89ef5dd973cccaae72e6bba76f040f43", "Url": "https://api.github.com/repos/nicolas-f/orbisgis", "Date": "2015-01-27T15:21:25Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastKnownLocation) != null) { itemReaderDbHelper.insertLatestLatitude(groupName, itemName, ((float) (lastKnownLocation.getLatitude()))); itemReaderDbHelper.insertLatestLongitude(groupName, itemName, ((float) (lastKnownLocation.getLongitude()))); }else { itemReaderDbHelper.insertLatestLatitude(groupName, itemName, 0.0F); itemReaderDbHelper.insertLatestLongitude(groupName, itemName, 0.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7456/buggy-version/mobile.src.main.java.com.example.jonathan.inventoryassistant.GroupScanMode.java", "BodyUseAPI": [], "Fixed commit": "825c30ee2c71542eaad7f7c2ad1b9cebc48a9b6e", "Url": "https://api.github.com/repos/jshoe/inventory-assistant2", "Date": "2015-08-11T20:22:33Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((displayForm.getCollectionInterval()) == null) { displayForm.setCollectionInterval(0L); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6943/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.resource.common.monitor.visibility.MetricsDisplayActionNG.java", "BodyUseAPI": ["org.hyperic.hq.ui.action.resource.common.monitor.visibility.MetricsDisplayFormNG.setCollectionInterval(long)"], "Fixed commit": "de58de02ee794d380985e132c85dfa6fa65494f8", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-11-09T13:35:56Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newDatum.getName().equals(\"Natures Prophet\")) { newDatum.setName(\"Nature's Prophet\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7233/buggy-version/app.src.main.java.com.carver.paul.dotavision.Models.AdvantagesDownloader.Downloader.java", "BodyUseAPI": ["com.carver.paul.dotavision.Models.AdvantagesDownloader.AdvantagesDatum.setName(java.lang.String)"], "Fixed commit": "fa99f0285d30f09f2d63673f8105896d5a304f46", "Url": "https://api.github.com/repos/dbdkmezz/true-sight-dota", "Date": "2016-03-20T21:53:43Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.winery.model.tosca.TImport.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (loc == null) { java.util.Collection<org.eclipse.winery.repository.resources.entitytypes.nodetypes.NodeTypeResource> nodeTypeResources = org.eclipse.winery.repository.Utils.getAllNodeTypeResources(); for (java.util.Iterator<org.eclipse.winery.repository.resources.entitytypes.nodetypes.NodeTypeResource> iterator = nodeTypeResources.iterator(); iterator.hasNext();) { org.eclipse.winery.repository.resources.entitytypes.nodetypes.NodeTypeResource nodeTypeResource = iterator.next(); if (!(nodeTypeResource.getNamespace().equals(i.getNamespace()))) { continue; } this.putRefAsReferencedItemInCSAR(new org.eclipse.winery.common.RepositoryFileReference(nodeTypeResource.getId(), \"NodeType.tosca\")); } java.util.Collection<org.eclipse.winery.repository.resources.entitytypes.relationshiptypes.RelationshipTypeResource> relationshipTypeResources = org.eclipse.winery.repository.Utils.getAllRelationshipTypeResources(); for (java.util.Iterator<org.eclipse.winery.repository.resources.entitytypes.relationshiptypes.RelationshipTypeResource> iterator = relationshipTypeResources.iterator(); iterator.hasNext();) { org.eclipse.winery.repository.resources.entitytypes.relationshiptypes.RelationshipTypeResource relationshipTypeResource = iterator.next(); if (!(relationshipTypeResource.getNamespace().equals(i.getNamespace()))) { continue; } this.putRefAsReferencedItemInCSAR(new org.eclipse.winery.common.RepositoryFileReference(relationshipTypeResource.getId(), \"RelationshipType.tosca\")); } importsToRemove.add(i); }else if (org.eclipse.winery.common.Util.isRelativeURI(loc)) { org.eclipse.winery.common.ids.definitions.imports.GenericImportId iid = new org.eclipse.winery.common.ids.definitions.imports.GenericImportId(i); java.lang.String fileName = org.eclipse.winery.common.Util.getLastURIPart(loc); fileName = org.eclipse.winery.common.Util.URLdecode(fileName); org.eclipse.winery.common.RepositoryFileReference ref = new org.eclipse.winery.common.RepositoryFileReference(iid, fileName); this.putRefAsReferencedItemInCSAR(ref); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5694/buggy-version/org.eclipse.winery.repository.src.main.java.org.eclipse.winery.repository.export.TOSCAExportUtil.java", "BodyUseAPI": ["org.eclipse.winery.common.Util.isRelativeURI(java.lang.String)", "org.eclipse.winery.common.Util.getLastURIPart(java.lang.String)"], "Fixed commit": "6b4ffc717d38e427a4efbde345494059d46778d2", "Url": "https://api.github.com/repos/nyuuyn/winery", "Date": "2016-08-25T15:06:58Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dialogType == (org.fenix.llanfair.Actions.FILE_CHOOSER_TYPE.OPEN)) option = fileChooser.showOpenDialog(master); else if (dialogType == (org.fenix.llanfair.Actions.FILE_CHOOSER_TYPE.SAVE)) option = fileChooser.showSaveDialog(master);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4420/buggy-version/src.main.java.org.fenix.llanfair.Actions.java", "BodyUseAPI": [], "Fixed commit": "3c9405e74b0896ea5bbe31e6ff1f0fcdb0462db1", "Url": "https://api.github.com/repos/gered/Llanfair", "Date": "2015-12-01T18:34:54Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.powsybl.commons.concurrent.CleanableExecutors.LOGGER.isTraceEnabled()) { com.powsybl.commons.concurrent.CleanableExecutors.LOGGER.trace(\"activeCount={} ,corePoolSize={} ,largestPoolSize={} ,maximumPoolSize={}\", getActiveCount(), getCorePoolSize(), getLargestPoolSize(), getMaximumPoolSize()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4082/buggy-version/commons.src.main.java.com.powsybl.commons.concurrent.CleanableExecutors.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String,int,int,int,int)"], "Fixed commit": "ef54bcb03709574a82271595a9edb42351b39e4a", "Url": "https://api.github.com/repos/powsybl/powsybl-core", "Date": "2017-10-08T17:48:56Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this) == other) { return true; }else { return hasSubType(subTypes, other); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4255/buggy-version/exquery-xquery.src.main.java.org.exquery.xquery.Type.java", "BodyUseAPI": ["org.exquery.xquery.Type.hasSubType(org.exquery.xquery.Type[],org.exquery.xquery.Type)"], "Fixed commit": "d6da6dd801ea1370fe2ed7cbd226482bdb03a96d", "Url": "https://api.github.com/repos/exquery/exquery", "Date": "2012-11-24T22:22:13Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (alias != null) { java.util.UUID dest = system.getAliases().get(alias); if (dest != null) message.dest = dest; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1412/buggy-version/actor4j-analyzer.src.main.java.actor4j.analyzer.AnalyzerActorMessageDispatcher.java", "BodyUseAPI": ["system.getAliases().get(java.lang.String)"], "Fixed commit": "df771e209951194305452f57739882d628045ed8", "Url": "https://api.github.com/repos/relvaner/actor4j-core", "Date": "2016-04-02T19:36:02Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.EditText.getLayout()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (layout == null) { mEditContent.post(new java.lang.Runnable() { @java.lang.Override public void run() { if ((mEditContent) != null) { android.text.Layout layout = mEditContent.getLayout(); if (layout != null) { int line = layout.getLineForOffset(index); int y = layout.getLineBottom(line); mScrollView.scrollTo(0, y); } } } }); }else { int line = layout.getLineForOffset(index); int y = layout.getLineBottom(line); mScrollView.scrollTo(0, y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3589/buggy-version/app.src.main.java.com.axel_stein.noteapp.notes.edit.EditNoteFragment.java", "BodyUseAPI": ["android.text.Layout.getLineForOffset(int)", "android.text.Layout.getLineBottom(int)", "android.text.Layout.getLineBottom(int)", "android.text.Layout.getLineForOffset(int)", "android.widget.EditText.post(java.lang.Runnable)"], "Fixed commit": "94dfab997dba02496a3068fd0dab76f78e38c64f", "Url": "https://api.github.com/repos/AxelStein/NoteApp", "Date": "2017-11-26T11:59:36Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cupStrategy) buildLocation = lu.getCup(bu, d); else buildLocation = lu.getDiag(bu, d);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5547/buggy-version/pentos.g5.Player.java", "BodyUseAPI": [], "Fixed commit": "48474ef68d67899bc21155e10d489706a5045160", "Url": "https://api.github.com/repos/phanieste/pentocity", "Date": "2016-09-17T18:06:01Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (b.contains(q)) { return output; }else if (((!(allRoadCells.contains(q))) && (land.unoccupied(q))) && (!(b.contains(q)))) { queue.add(new pentos.sim.Cell(q.i, q.j, p)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5547/buggy-version/pentos.g5.Player.java", "BodyUseAPI": ["java.util.Set<pentos.sim.Cell>.contains(pentos.sim.Cell)", "pentos.sim.Land.unoccupied(pentos.sim.Cell)", "java.util.Queue<pentos.sim.Cell>.add(pentos.sim.Cell)", "java.util.Set<pentos.sim.Cell>.contains(pentos.sim.Cell)"], "Fixed commit": "48474ef68d67899bc21155e10d489706a5045160", "Url": "https://api.github.com/repos/phanieste/pentocity", "Date": "2016-09-17T18:06:01Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<pentos.sim.Cell>.remove()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (checked[p.i][p.j]) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5547/buggy-version/pentos.g5.Player.java", "BodyUseAPI": [], "Fixed commit": "48474ef68d67899bc21155e10d489706a5045160", "Url": "https://api.github.com/repos/phanieste/pentocity", "Date": "2016-09-17T18:06:01Z"},
{"Line": "=>847", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEOF()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6148/buggy-version/src.main.java.com.alibaba.fastjson.JSONPath.java", "BodyUseAPI": [], "Fixed commit": "46571678009d19b7ca8e3b79f79c7a456b955aa7", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-16T15:13:32Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (trace.has(\"id\")) { if (!(objs.toString().contains(trace.getString(\"id\")))) { objs.put(trace.get(\"id\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/652/buggy-version/sources.appsgate-project.communication-components.TraceMan.src.main.java.appsgate.lig.ehmi.trace.TraceMan.java", "BodyUseAPI": ["org.json.JSONObject.get(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONArray.put(trace.get(\"id\"))", "objs.toString().contains(trace.getString(\"id\"))"], "Fixed commit": "c4c260b704474a23372750ca61eb2eea4061c8f6", "Url": "https://api.github.com/repos/appsgate2015/appsgate", "Date": "2014-12-02T10:18:38Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pet.getOptions().size()) > 0) { for (int x = 0; x < ((pet.getOptions().size()) - 1); x++) { ops += (pet.getOptions().get(x)) + \", \"; } ops += pet.getOptions().get(((pet.getOptions().size()) - 1)); options.setText(ops); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3434/buggy-version/app.src.main.java.com.uml.dpivonka.petadoption.PetViewActivity.java", "BodyUseAPI": ["pet.getOptions().size()", "com.uml.dpivonka.petadoption.Pets.getOptions()", "com.uml.dpivonka.petadoption.Pets.getOptions()", "pet.getOptions().get(int)", "com.uml.dpivonka.petadoption.Pets.getOptions()", "pet.getOptions().get(((pet.getOptions().size()) - 1))", "com.uml.dpivonka.petadoption.Pets.getOptions()", "pet.getOptions().size()"], "Fixed commit": "34a11b77ecf948e64d63b70775c73cadfb189e0b", "Url": "https://api.github.com/repos/uml-app1-2016/PetAdoption", "Date": "2016-12-05T05:40:06Z"},
{"Line": "=>984", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aktuellesSpielfeld[Spielfigurx][Spielfigury]) == (Konstanten.STUNK)) { aktuellesSpielfeld[Spielfigurx][Spielfigury] = Konstanten.PUDEL; aktuellesSpielfeld[altx][alty] = Konstanten.RASEN; zeichner.zeichneSpielfeld(aktuellesSpielfeld); }else if ((aktuellesSpielfeld[Spielfigurx][Spielfigury]) == (Konstanten.SCHWERT)) { beschwertet = 1; aktuellesSpielfeld[Spielfigurx][Spielfigury] = Konstanten.PUDEL; aktuellesSpielfeld[altx][alty] = Konstanten.RASEN; zeichner.zeichneSpielfeld(aktuellesSpielfeld); }else if ((aktuellesSpielfeld[Spielfigurx][Spielfigury]) == (Konstanten.GEGNERTOT)) { aktuellesSpielfeld[Spielfigurx][Spielfigury] = Konstanten.PUDEL; aktuellesSpielfeld[altx][alty] = Konstanten.RASEN; zeichner.zeichneSpielfeld(aktuellesSpielfeld); }else if ((aktuellesSpielfeld[Spielfigurx][Spielfigury]) == (Konstanten.RASEN)) { aktuellesSpielfeld[Spielfigurx][Spielfigury] = Konstanten.PUDEL; aktuellesSpielfeld[altx][alty] = Konstanten.RASEN; zeichner.zeichneSpielfeld(aktuellesSpielfeld); }else if ((aktuellesSpielfeld[Spielfigurx][Spielfigury]) == (Konstanten.CHECKPOINT)) { aktuellesSpielfeld[Spielfigurx][Spielfigury] = Konstanten.PUDEL; aktuellesSpielfeld[altx][alty] = Konstanten.RASEN; CheckSpielfeld = aktuellesSpielfeld; checkx = Spielfigurx; checky = Spielfigury; save = 1; zeichner.zeichneSpielfeld(aktuellesSpielfeld); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6402/buggy-version/src.game.GameFrame.java", "BodyUseAPI": ["game.Zeichner.zeichneSpielfeld(java.lang.Integer[][])", "game.Zeichner.zeichneSpielfeld(java.lang.Integer[][])", "game.Zeichner.zeichneSpielfeld(java.lang.Integer[][])", "game.Zeichner.zeichneSpielfeld(java.lang.Integer[][])", "game.Zeichner.zeichneSpielfeld(java.lang.Integer[][])"], "Fixed commit": "02b80aba0913fbc1c29867b3ad4212e96ff540e2", "Url": "https://api.github.com/repos/propra13-orga/gruppe31", "Date": "2013-06-23T19:08:21Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources().getConfiguration().orientation) == (android.content.res.Configuration.ORIENTATION_LANDSCAPE)) { params.addRule(RelativeLayout.BELOW, R.id.linearLayoutGlobal); }else { params.addRule(RelativeLayout.BELOW, R.id.book_isbn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1520/buggy-version/app.src.main.java.com.mylibrary.alexandreroussiere.mylibrary.ui.BookDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "1cebfb2bc4730e8ea415b18fdf8e4943489264bd", "Url": "https://api.github.com/repos/aroussie/MyLibrary_Android_Application", "Date": "2016-07-03T02:33:17Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources().getConfiguration().orientation) == (android.content.res.Configuration.ORIENTATION_LANDSCAPE)) { params.addRule(RelativeLayout.BELOW, R.id.linearLayoutGlobal); }else { params.addRule(RelativeLayout.BELOW, R.id.book_isbn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1520/buggy-version/app.src.main.java.com.mylibrary.alexandreroussiere.mylibrary.ui.LibraryDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "1cebfb2bc4730e8ea415b18fdf8e4943489264bd", "Url": "https://api.github.com/repos/aroussie/MyLibrary_Android_Application", "Date": "2016-07-03T02:33:17Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["projectmsn.Payload.getPayloadID()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (HelloPayload.PAYLOADID)) { sendPayload(new projectmsn.AckHelloPayload(self.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8197/buggy-version/src.projectmsn.Program.java", "BodyUseAPI": [], "Fixed commit": "439dbf2349c29cccf83189539844aaeba6b093ab", "Url": "https://api.github.com/repos/Washi1337/ProjectMSN", "Date": "2016-04-08T10:12:25Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((payload instanceof projectmsn.AckPayload) || (payload instanceof projectmsn.AckHelloPayload)) || (payload instanceof projectmsn.AckKeyExchangePayload)) { retransmissionThread.addPacket(tcpPacket, this.getAddressList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8197/buggy-version/src.projectmsn.Program.java", "BodyUseAPI": [], "Fixed commit": "439dbf2349c29cccf83189539844aaeba6b093ab", "Url": "https://api.github.com/repos/Washi1337/ProjectMSN", "Date": "2016-04-08T10:12:25Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Number.class.isAssignableFrom(pClass)) && (\"\".equals(value))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1918/buggy-version/rt.frontend.jaxrs.src.main.java.org.apache.cxf.jaxrs.utils.InjectionUtils.java", "BodyUseAPI": [], "Fixed commit": "3042e7a351c595d4bbe31398ec3a9eb425c535d6", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-03-31T11:59:06Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((!((java.lang.Character.TYPE.equals(type)) || (java.lang.Character.class.equals(type)))) && (value != null)) && (value.equals(\"\"))) { value = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1918/buggy-version/core.src.main.java.org.apache.cxf.common.util.PrimitiveUtils.java", "BodyUseAPI": [], "Fixed commit": "3042e7a351c595d4bbe31398ec3a9eb425c535d6", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2017-03-31T11:59:06Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name) != null) { os.write(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6686/buggy-version/src.main.java.com.mgz.afp.ioca.IPD_Segment.java", "BodyUseAPI": [], "Fixed commit": "151f4e12303bcf4cf46ac754d0bc64aee1b7c34e", "Url": "https://api.github.com/repos/afpdev/alpheusafpparser", "Date": "2016-10-02T20:36:20Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["adaptor.getParameterValues().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (adaptorSchedulePeriod != null) { iTime = java.lang.Integer.parseInt(adaptorSchedulePeriod); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5099/buggy-version/core.src.main.java.eu.scape_project.watch.scheduling.quartz.QuartzScheduler.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "ca5df937307f813097569838699d689ca663b1cb", "Url": "https://api.github.com/repos/openplanets/scout", "Date": "2013-04-10T09:09:06Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((layer.getHeight()) == (layer.getWidth())) { layer.resize(width, width); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5912/buggy-version/osgi.CruOrg.src.main.java.org.cru.images.CenterCropImageTransformerImpl.java", "BodyUseAPI": ["com.day.image.Layer.resize(int,int)"], "Fixed commit": "4028119e1b49b0d9ad400e060d83a8704e4c212a", "Url": "https://api.github.com/repos/CruGlobal/CruOrg", "Date": "2014-06-16T23:06:30Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((p.charAt(0)) == 'r') || ((p.charAt(0)) == 'R')) { if (((p.length()) > 1) && (miniscript.MiniScriptASM.isNum(p.charAt(1)))) { return miniscript.MiniScriptASM.readReg(ci, p); }else { return miniscript.MiniScriptASM.readNum(ci, p); } }else { return miniscript.MiniScriptASM.readNum(ci, p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4938/buggy-version/MiniScript.src.miniscript.MiniScriptASM.java", "BodyUseAPI": ["java.lang.String.length()", "miniscript.MiniScriptASM.readNum(miniscript.MiniScriptASM.CompileInfo,java.lang.String)", "miniscript.MiniScriptASM.isNum(char)", "java.lang.String.charAt(int)", "miniscript.MiniScriptASM.readReg(miniscript.MiniScriptASM.CompileInfo,java.lang.String)", "miniscript.MiniScriptASM.readNum(miniscript.MiniScriptASM.CompileInfo,java.lang.String)"], "Fixed commit": "59a445ea796847796b6b28dd3978001c2f4d4ec8", "Url": "https://api.github.com/repos/XOR19/MiniScript", "Date": "2014-02-07T18:57:31Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (gamepad2.a) { robot.sweeper.setPower(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2751/buggy-version/OmniBotTeleop.java", "BodyUseAPI": [], "Fixed commit": "e705f0c65e913fffbf19e250b7a0f3b6a33a1967", "Url": "https://api.github.com/repos/Aftershock9880/OmniBot2_0", "Date": "2017-01-13T01:25:48Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (normal) { targetReached = true; }else { for (int i = outCFLSize; i < (latestCFL.size()); i++) { if ((latestCFL.get(i)) == (targetBbId)) { targetReached = true; } if ((latestCFL.get(i)) == (bbId)) { break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/9166/buggy-version/src.main.java.gg.BagOperatorHost.java", "BodyUseAPI": [], "Fixed commit": "d116cb1a381c19e25d36093d4c48b363dc113426", "Url": "https://api.github.com/repos/ggevay/cfl", "Date": "2017-07-01T18:43:05Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((latestCFL.get(i)) == (bbId)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/9166/buggy-version/src.main.java.gg.BagOperatorHost.java", "BodyUseAPI": [], "Fixed commit": "d116cb1a381c19e25d36093d4c48b363dc113426", "Url": "https://api.github.com/repos/ggevay/cfl", "Date": "2017-07-01T18:43:05Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cond.bt().trace) != null) { if ((!(org.jsoar.kernel.SoarConstants.DO_TOP_LEVEL_REF_CTS)) || ((inst.match_goal_level) > (org.jsoar.kernel.SoarConstants.TOP_GOAL_LEVEL))) { cond.bt().trace.preference_add_ref(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3141/buggy-version/jsoar-core.src.main.java.org.jsoar.kernel.modules.SoarModule.java", "BodyUseAPI": ["cond.bt().trace.preference_add_ref()", "org.jsoar.kernel.lhs.PositiveCondition.bt()"], "Fixed commit": "529f64b38c97bff6f2ec68b1ce97faa73d84cef0", "Url": "https://api.github.com/repos/soartech/jsoar", "Date": "2013-08-14T17:32:33Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (kfold == 1) { startTimestamp[0] = latestStart; endTimestamp[0] = maxTimestamp; splitTimestamp[0] = (startTimestamp[0]) + ((long) (trainRatio * foldLength)); }else { long foldStep = (latestStart - earliestStart) / (kfold - 1); for (int i = 0; i < kfold; i++) { startTimestamp[i] = earliestStart + (i * foldStep); endTimestamp[i] = (startTimestamp[i]) + foldLength; splitTimestamp[i] = (startTimestamp[i]) + ((long) (trainRatio * foldLength)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1273/buggy-version/src.main.i5.las2peer.services.recommender.librec.data.TimeDataSplitter.java", "BodyUseAPI": [], "Fixed commit": "154601a3a8dbd527e8b06e5accf93144c4e5b3c7", "Url": "https://api.github.com/repos/martinb741/Recommender", "Date": "2016-08-10T13:02:54Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.googlecode.easyec.sika.ss.WorkData.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (formulaObj instanceof com.googlecode.easyec.sika.ss.formulas.Formula) { cell.setCellFormula(((com.googlecode.easyec.sika.ss.formulas.Formula) (formulaObj)).encode()); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1793/buggy-version/sika-poi.src.main.java.com.googlecode.easyec.sika.ss.ExcelFactory.java", "BodyUseAPI": [], "Fixed commit": "d08efc89133fb6df8aebf9890e7845a7c1e7f67c", "Url": "https://api.github.com/repos/superego/easyec-sika", "Date": "2017-11-29T07:28:28Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cancelAnnounce) != null) { cancelAnnounce.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8267/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.internal.app.runtime.workflow.WorkflowProgramController.java", "BodyUseAPI": [], "Fixed commit": "9f8fc8c6e06587b2f8327e8c1d92d4e9c0b6cf76", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2016-08-17T05:43:45Z"},
{"Line": "=>704", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.sundeepk.compactcalendarview.CompactCalendarController.computeHorizontalVelocity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (velocityX == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4608/buggy-version/library.src.main.java.com.github.sundeepk.compactcalendarview.CompactCalendarController.java", "BodyUseAPI": [], "Fixed commit": "b0496faaae1d27427d187a816db58e2c935dcc23", "Url": "https://api.github.com/repos/italki/CompactCalendarView", "Date": "2017-07-07T06:20:20Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.couchbase.lite.support.Version.VERSION_CODE) == null) || (com.couchbase.lite.support.Version.VERSION_CODE.isEmpty())) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1115/buggy-version/src.main.java.com.couchbase.lite.support.Version.java", "BodyUseAPI": [], "Fixed commit": "929a559745a9c6a895036c7ac4a10a1aacebb9f2", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-java-core", "Date": "2015-02-16T23:25:33Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (child != null) { stateOut.rowTopOffset = getLayoutManager().getDecoratedTop(child); stateOut.rowHeight = child.getHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5020/buggy-version/recyclerview-fastscroll.src.main.java.com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView.java", "BodyUseAPI": ["getLayoutManager().getDecoratedTop(android.view.View)", "android.view.View.getHeight()"], "Fixed commit": "e4c82cc15b92ed8dca685a0002014fc5d0ea07e3", "Url": "https://api.github.com/repos/kibotu/RecyclerView-FastScroll", "Date": "2016-03-08T14:48:50Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (str.contains(\".\")) { str = str.split(\"\\\\.\")[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2763/buggy-version/src.com.jjoe64.graphview.LineGraphView.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "d69d491d372c3e60bee0bc5bdff7e74611adbbde", "Url": "https://api.github.com/repos/prvn/GraphView", "Date": "2013-03-19T16:35:12Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (fos != null) { fos.flush(); fos.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4727/buggy-version/editor.exporter.src.main.java.es.eucm.ead.editor.utils.ZipUtils.java", "BodyUseAPI": ["java.io.OutputStream.close()", "java.io.OutputStream.flush()"], "Fixed commit": "a2da9f9b6c72a9896bce15bc626bf095257dbab2", "Url": "https://api.github.com/repos/RotaruDan/ead", "Date": "2014-11-19T13:46:34Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((goalsTeamOne) == null) || ((goalsTeamTwo) == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4718/buggy-version/src.main.java.de.fred4jupiter.fredbet.domain.Match.java", "BodyUseAPI": [], "Fixed commit": "4a6f2afc7cd1b414436cff331b957d45273b706d", "Url": "https://api.github.com/repos/fred4jupiter/fredbet", "Date": "2017-06-28T20:34:51Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eventsGroupedByTick.get(tickNr).get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((event.place) == placeId) { java.lang.Double dd = Model.FuzzyPetrinetBehaviourModel.defultFuzz.defuzzify(event.token); if (dd != null) { dataInCurrentTick.add(dd); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7221/buggy-version/FuzzPVizual.src.Model.FuzzyPetrinetBehaviourModel.java", "BodyUseAPI": ["core.FuzzyPetriLogic.Fuzzifiers.TriangleFuzzyfier.defuzzify(event.token)"], "Fixed commit": "62c8536115ce3801d06d4a1669bc7dde1cd50875", "Url": "https://api.github.com/repos/AttilaOrs/FuzzP", "Date": "2016-09-28T17:11:56Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operation) == (net.osmand.plus.download.LocalIndexesFragment.RESTORE_OPERATION)) { listAdapter.clear(); reloadIndexes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5645/buggy-version/OsmAnd.src.net.osmand.plus.download.LocalIndexesFragment.java", "BodyUseAPI": [], "Fixed commit": "d06e883dd1bbc39e836c32b3394171c300d1edaf", "Url": "https://api.github.com/repos/poretsky/Osmand", "Date": "2014-11-17T12:30:15Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((running.size()) == 0) lastAddedJob = \"\"; else lastAddedJob = running.get(0).source.key();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7965/buggy-version/UMFPlatform.src.gov.sandia.umf.platform.ui.jobs.RunPanel.java", "BodyUseAPI": [], "Fixed commit": "97503f6624b8a9948ead6877fc72ed0489c5c2e1", "Url": "https://api.github.com/repos/frothga/n2a", "Date": "2016-08-16T23:27:44Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasRemaining) { final int startIndex = (controller.predictFromArticles.CalcPrincipalComponentValues.batchSize) * numBatches; java.util.List<java.lang.Integer> curIdList = articleIdList.subList(startIndex, articleIdList.size()); query.setParameterList(controller.predictFromArticles.CalcPrincipalComponentValues.articleParamName, curIdList); query.executeUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7933/buggy-version/TextAnalytics.src.controller.predictFromArticles.CalcPrincipalComponentValues.java", "BodyUseAPI": [], "Fixed commit": "ded17748676a0f9ec2dab88e4f888b11d8af1f4a", "Url": "https://api.github.com/repos/dllahr/text_analytics", "Date": "2012-10-10T06:27:30Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i >= (dataPoints.size())) java.lang.System.out.println(\"WHAT?\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1459/buggy-version/JSAT.src.jsat.classifiers.trees.DecisionStump.java", "BodyUseAPI": [], "Fixed commit": "10dc6d4397cd9d8458e31965d643569d0ae67952", "Url": "https://api.github.com/repos/EdwardRaff/JSAT", "Date": "2016-03-24T23:32:54Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getLineNumber()) != (-1)) { treeWriter.addAttribute(new net.sf.saxon.s9api.QName(\"line\"), (\"\" + (e.getLineNumber()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5395/buggy-version/src.com.xmlcalabash.library.ValidateJing.java", "BodyUseAPI": ["com.xmlcalabash.util.TreeWriter.addAttribute(net.sf.saxon.s9api.QName,java.lang.String)", "org.xml.sax.SAXParseException.getLineNumber()"], "Fixed commit": "8a1192b7b366d26a99198c5affe79065f8fa7f92", "Url": "https://api.github.com/repos/Zearin/xmlcalabash1", "Date": "2011-09-11T21:45:25Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getColumnNumber()) != (-1)) { treeWriter.addAttribute(new net.sf.saxon.s9api.QName(\"column\"), (\"\" + (e.getColumnNumber()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5395/buggy-version/src.com.xmlcalabash.library.ValidateJing.java", "BodyUseAPI": ["org.xml.sax.SAXParseException.getColumnNumber()", "com.xmlcalabash.util.TreeWriter.addAttribute(net.sf.saxon.s9api.QName,java.lang.String)"], "Fixed commit": "8a1192b7b366d26a99198c5affe79065f8fa7f92", "Url": "https://api.github.com/repos/Zearin/xmlcalabash1", "Date": "2011-09-11T21:45:25Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == 0) && ((curScore[i]) != (-2))) { cumulativeScores[bowlIndex][(i / 2)] += curScore[i]; }else if ((i / 2) != 9) { if ((curScore[i]) != (-2)) { cumulativeScores[bowlIndex][(i / 2)] += (cumulativeScores[bowlIndex][((i / 2) - 1)]) + (curScore[i]); }else { cumulativeScores[bowlIndex][(i / 2)] += cumulativeScores[bowlIndex][((i / 2) - 1)]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3472/buggy-version/src.LaneRunState.java", "BodyUseAPI": [], "Fixed commit": "4fd3234a38e1dce2383cff2f8eb30f920bde001b", "Url": "https://api.github.com/repos/pdfkpb/3CRefactory", "Date": "2017-05-07T22:15:18Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (facingRight) { g.drawImage(animation.getImage(), ((int) (((x) + (xmap)) - ((width) / 2))), ((int) (((y) + (ymap)) - ((height) / 2))), null); }else { g.drawImage(animation.getImage(), ((int) ((((x) + (xmap)) - ((width) / 2)) + (width))), ((int) (((y) + (ymap)) - ((height) / 2))), (-(width)), height, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2487/buggy-version/src.com.smoke.Render.Render.java", "BodyUseAPI": [], "Fixed commit": "204d8cadd7f0c64aa2854f67f6c3a51a9d369531", "Url": "https://api.github.com/repos/sharathnarayanph/dragonball-smoke-em-out", "Date": "2017-08-20T23:35:10Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((order.getStato()) != null) { if (order.getStato().equals(\"aperto\")) txtStringPay.setText(getResources().getString(R.string.not_payed)); else txtStringPay.setText(getResources().getString(R.string.payed)); float tot = 0; for (int i = 0; i < (prices.size()); i++) { tot = tot + ((java.lang.Float.parseFloat(prices.get(i))) * (java.lang.Float.parseFloat(quantities.get(i)))); } txtTotal.setText(((java.lang.String.valueOf(tot)) + \" \u20ac\")); }else { android.support.design.widget.Snackbar.make(findViewById(android.R.id.content), getResources().getString(R.string.error), Snackbar.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/733/buggy-version/app.src.main.java.fasterfoodcassa.gruppo3.sms16.ivu.di.uniba.it.fasterfoodcassa.nfcscreen.NFCActivity.java", "BodyUseAPI": ["fasterfoodcassa.gruppo3.sms16.ivu.di.uniba.it.fasterfoodcassa.dbdata.Order.getStato()", "order.getStato().equals(java.lang.String)"], "Fixed commit": "f916ad7adf295bf0fd76c854499e88e76bcebd06", "Url": "https://api.github.com/repos/itkkk/FasterFoodCassa", "Date": "2016-07-29T12:21:32Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 7) { java.lang.String text = plugin.getLocale().getString(\"rewards-consolation\"); ordinal = text; number = text; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3797/buggy-version/src.main.java.me.elsiff.morefish.listeners.RewardsGUI.java", "BodyUseAPI": [], "Fixed commit": "c4b04be03fe3d9b2a1545376c07c6dc8f649d97b", "Url": "https://api.github.com/repos/elsiff/more-fish", "Date": "2016-11-20T10:40:13Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Optional<java.lang.String>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(tagStringToSplit.equals(\"\"))) { java.util.ArrayList<java.lang.String> processedTags = new java.util.ArrayList<java.lang.String>(); for (int i = 0; i < (splittedTags.length); i++) { if (!(splittedTags[i].equals(\"\"))) { processedTags.add(splittedTags[i]); } } java.lang.String[] newTags = processedTags.toArray(new java.lang.String[processedTags.size()]); tags = new java.util.ArrayList<java.lang.String>(java.util.Arrays.asList(newTags)); }else { tags = new java.util.ArrayList<java.lang.String>(java.util.Arrays.asList(splittedTags)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1602/buggy-version/src.main.java.seedu.tasklist.logic.parser.ArgumentTokenizer.java", "BodyUseAPI": [], "Fixed commit": "9979b203bd32030c4eb81c93d9ab87d0e469082a", "Url": "https://api.github.com/repos/CS2103JAN2017-W14-B1/main", "Date": "2017-03-18T17:36:23Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["emailInput.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(email.contains(\"@\"))) { emailInput.setError(\"Invalid email\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2904/buggy-version/app.src.main.java.com.dlsu.getbetter.getbetter.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "83906fea2e6ebf82cbe0fec988f4ddbc4a340647", "Url": "https://api.github.com/repos/mikedayupay/GetBetter", "Date": "2016-09-15T13:55:46Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentPointDate.getDayOfYear()) > (startDate.getDayOfYear())) { secondOfDay = (currentPointDate.getSecondOfDay()) + (startDate.getSecondOfDay()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5366/buggy-version/src.main.java.com.mongodb.flightxml.FlightAwareFlightTrackGenerator.java", "BodyUseAPI": ["org.joda.time.DateTime.getSecondOfDay()", "org.joda.time.DateTime.getSecondOfDay()"], "Fixed commit": "74ea8189b9de428b91ce6bf540598914d615a859", "Url": "https://api.github.com/repos/mhelmstetter/replication-demo", "Date": "2015-02-10T16:57:03Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cars) == null) this.cars = new java.util.ArrayList<de.hm.edu.carads.models.Car>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4856/buggy-version/src.main.java.de.hm.edu.carads.models.Driver.java", "BodyUseAPI": [], "Fixed commit": "5e48300edec9aef5366a052e271550b2ee03f911", "Url": "https://api.github.com/repos/bkeckes/caradsServer", "Date": "2016-05-15T18:34:39Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cars) == null) this.cars = new java.util.ArrayList<de.hm.edu.carads.models.Car>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4856/buggy-version/src.main.java.de.hm.edu.carads.models.Driver.java", "BodyUseAPI": [], "Fixed commit": "5e48300edec9aef5366a052e271550b2ee03f911", "Url": "https://api.github.com/repos/bkeckes/caradsServer", "Date": "2016-05-15T18:34:39Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["app.getDbHelper().getAllShoppingItems().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(item.isBought())) { item.setBought(true); }else { item.setBought(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8229/buggy-version/Smart_Kitchen_Ingredients.src.de.nordakademie.smart_kitchen_ingredients.shoppinglist.ShoppingActivity.java", "BodyUseAPI": ["de.nordakademie.smart_kitchen_ingredients.businessobjects.IShoppingListItem.setBought(boolean)", "de.nordakademie.smart_kitchen_ingredients.businessobjects.IShoppingListItem.setBought(boolean)"], "Fixed commit": "3f408a8581428cf61b04d1f6a758864336f5c1ab", "Url": "https://api.github.com/repos/gundermann/SmartKichten_Ingredients", "Date": "2013-12-09T17:16:03Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Deque<progex.graphs.pdg.PDNode>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(cdg.containsVertex(jmpDep))) cdg.addVertex(jmpDep);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6903/buggy-version/src.progex.java.JavaCDGBuilder.java", "BodyUseAPI": ["progex.graphs.pdg.ControlDependenceGraph.addVertex(progex.graphs.pdg.PDNode)"], "Fixed commit": "a758dbee97ae6ce51b9d9139dfd63571a28e5e98", "Url": "https://api.github.com/repos/ghaffarian/progex", "Date": "2017-10-24T12:55:32Z"},
{"Line": "=>674", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Deque<progex.graphs.pdg.PDNode>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(cdg.containsVertex(jmpDep))) cdg.addVertex(jmpDep);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6903/buggy-version/src.progex.java.JavaCDGBuilder.java", "BodyUseAPI": ["progex.graphs.pdg.ControlDependenceGraph.addVertex(progex.graphs.pdg.PDNode)"], "Fixed commit": "a758dbee97ae6ce51b9d9139dfd63571a28e5e98", "Url": "https://api.github.com/repos/ghaffarian/progex", "Date": "2017-10-24T12:55:32Z"},
{"Line": "=>2379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasPermission(hci.gnomex.security.SecurityAdvisor.CAN_ADMINISTER_ALL_CORE_FACILITIES)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6580/buggy-version/src.hci.gnomex.security.SecurityAdvisor.java", "BodyUseAPI": [], "Fixed commit": "b13dcda73c351e99780bc226d7cac80ed52767e1", "Url": "https://api.github.com/repos/hci-gnomex/gnomex", "Date": "2016-04-26T15:18:51Z"},
{"Line": "=>2376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (theLab == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6580/buggy-version/src.hci.gnomex.security.SecurityAdvisor.java", "BodyUseAPI": [], "Fixed commit": "b13dcda73c351e99780bc226d7cac80ed52767e1", "Url": "https://api.github.com/repos/hci-gnomex/gnomex", "Date": "2016-04-26T15:18:51Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.databricks.unsafe.util.ByteArrayMethods.wordAlignedArrayEquals(java.lang.Object,long,java.lang.Object,long,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (areEqual) { return loc.with(pos, hashcode, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8251/buggy-version/core.src.main.java.com.databricks.unsafe.util.BytesToBytesMap.java", "BodyUseAPI": [], "Fixed commit": "ee7eb7b4f16f9751c1dc676fd2b9cfd93e3c0417", "Url": "https://api.github.com/repos/JoshRosen/jvm-unsafe-utils", "Date": "2015-04-17T18:56:44Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((files != null) && ((files.length) > 0)) { java.util.Arrays.sort(files, new java.util.Comparator<java.io.File>() { public int compare(java.io.File file1, java.io.File file2) { return (file1.lastModified()) > (file2.lastModified()) ? -1 : 1; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8195/buggy-version/build.wedeploy-uploader.src.main.java.com.liferay.ide.tools.LogGenerator.java", "BodyUseAPI": ["java.util.Arrays.sort(java.io.File[],java.util.Comparator<java.io.File>)"], "Fixed commit": "8228e2d9aeb3570e9a42050780046b5180feb494", "Url": "https://api.github.com/repos/jtydhr88/liferay-ide", "Date": "2017-12-07T08:41:43Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position + 1) == (getItemCount())) { int paddingBottom = smallBillBoardViewHolder.relativeLayout.getPaddingBottom(); smallBillBoardViewHolder.relativeLayout.setPadding(paddingBottom, paddingBottom, paddingBottom, (paddingBottom * 9)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3395/buggy-version/app.src.main.java.philips.com.myapplication.adapter.RankingRecyclerAdapter.java", "BodyUseAPI": [], "Fixed commit": "9ee033411d4cdf535be7062857d44868c89f9f4e", "Url": "https://api.github.com/repos/DaiXinxuan/NeteaseMusicUi", "Date": "2016-07-22T06:36:55Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (encoding != null) { write(\" encoding=\\\"\"); write(encoding); write(\"\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5871/buggy-version/src.main.java.com.oopsconsultancy.xmltask.output.FormattedDataWriter.java", "BodyUseAPI": ["com.oopsconsultancy.xmltask.output.FormattedDataWriter.write(java.lang.String)"], "Fixed commit": "3c60f7415e1684aa91a7309edb4264374d91e534", "Url": "https://api.github.com/repos/thallgren/xmltask", "Date": "2015-11-02T21:26:44Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spaces.size()) >= 1000) java.lang.System.out.println((((\"Actual split: \" + (sps.fst.size())) + \", \") + (sps.snd.size())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8670/buggy-version/src.no.uio.ifi.qure.traversal.TreeNode.java", "BodyUseAPI": [], "Fixed commit": "171edac64e6d84c321c536c01afbf9cc6db905f0", "Url": "https://api.github.com/repos/leifhka/Qure", "Date": "2017-05-15T21:08:43Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSpaces().size()) >= 1000) { no.uio.ifi.qure.space.Pair<? extends no.uio.ifi.qure.space.Space, ? extends no.uio.ifi.qure.space.Space> e = computeSpacesFromSplit(bestSplit.splitBlock, split); java.lang.System.out.println((((\"Split: \" + (e.fst.equals(bestSplit.uniR))) + \" - \") + (e.snd.equals(bestSplit.uniL)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8670/buggy-version/src.no.uio.ifi.qure.space.SpaceProvider.java", "BodyUseAPI": [], "Fixed commit": "171edac64e6d84c321c536c01afbf9cc6db905f0", "Url": "https://api.github.com/repos/leifhka/Qure", "Date": "2017-05-15T21:08:43Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((refreshAction_Constraint) != null) refreshAction_Constraint.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/593/buggy-version/com.hangum.tadpole.rdb.core.src.com.hangum.tadpole.rdb.core.viewers.object.sub.rdb.table.constraints.TadpoleConstraintComposite.java", "BodyUseAPI": [], "Fixed commit": "4283aaa341e6c05ca550e7f0a7affb5d6d4759e3", "Url": "https://api.github.com/repos/jeongjaehong/TadpoleForDBTools", "Date": "2016-04-21T15:56:37Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((creatAction_Constraint) != null) creatAction_Constraint.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/593/buggy-version/com.hangum.tadpole.rdb.core.src.com.hangum.tadpole.rdb.core.viewers.object.sub.rdb.table.constraints.TadpoleConstraintComposite.java", "BodyUseAPI": [], "Fixed commit": "4283aaa341e6c05ca550e7f0a7affb5d6d4759e3", "Url": "https://api.github.com/repos/jeongjaehong/TadpoleForDBTools", "Date": "2016-04-21T15:56:37Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dropAction_Constraint) != null) dropAction_Constraint.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/593/buggy-version/com.hangum.tadpole.rdb.core.src.com.hangum.tadpole.rdb.core.viewers.object.sub.rdb.table.constraints.TadpoleConstraintComposite.java", "BodyUseAPI": [], "Fixed commit": "4283aaa341e6c05ca550e7f0a7affb5d6d4759e3", "Url": "https://api.github.com/repos/jeongjaehong/TadpoleForDBTools", "Date": "2016-04-21T15:56:37Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((domain.getLogicalId()) != \"*\") { org.carewebframework.api.security.SecurityDomainRegistry.registerSecurityDomain(domain); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5394/buggy-version/org.carewebframework.hibernate-parent.org.carewebframework.hibernate.security.src.main.java.org.carewebframework.hibernate.security.SecurityDomainDAO.java", "BodyUseAPI": ["org.carewebframework.api.security.SecurityDomainRegistry.registerSecurityDomain(org.carewebframework.hibernate.security.SecurityDomain)"], "Fixed commit": "5e8017c32f156c46eeb659359457b30bbf0f8560", "Url": "https://api.github.com/repos/carewebframework/carewebframework-core", "Date": "2016-03-30T21:06:18Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.carewebframework.hibernate.security.UserDAO.authenticate(java.lang.String,java.lang.String,org.carewebframework.hibernate.security.SecurityDomain)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { throw new org.springframework.security.authentication.BadCredentialsException(\"Incorrect username or password.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5394/buggy-version/org.carewebframework.hibernate-parent.org.carewebframework.hibernate.security.src.main.java.org.carewebframework.hibernate.security.SecurityDomain.java", "BodyUseAPI": [], "Fixed commit": "5e8017c32f156c46eeb659359457b30bbf0f8560", "Url": "https://api.github.com/repos/carewebframework/carewebframework-core", "Date": "2016-03-30T21:06:18Z"},
{"Line": "=>2339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((n.getLabel()) != null) { position.push(new org.walkmod.javalang.walkers.Position(n.getLabel().getEndLine(), n.getLabel().getEndColumn())); }else { java.util.List<org.walkmod.javalang.ast.stmt.Statement> stmts = n.getStmts(); if (!(stmts.isEmpty())) { org.walkmod.javalang.ast.stmt.Statement first = stmts.get(0); position.push(new org.walkmod.javalang.walkers.Position(first.getBeginLine(), first.getBeginColumn())); }else { position.push(pos); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6575/buggy-version/src.main.java.org.walkmod.javalang.walkers.ChangeLogVisitor.java", "BodyUseAPI": ["java.util.Stack<org.walkmod.javalang.walkers.Position>.push(org.walkmod.javalang.walkers.Position)", "n.getLabel().getEndColumn()", "n.getLabel().getEndLine()", "org.walkmod.javalang.ast.stmt.SwitchEntryStmt.getStmts()", "org.walkmod.javalang.ast.stmt.SwitchEntryStmt.getLabel()", "org.walkmod.javalang.ast.stmt.SwitchEntryStmt.getLabel()"], "Fixed commit": "5664b9c1d13fa3b9c92943f2c4d578c660f6e69e", "Url": "https://api.github.com/repos/walkmod/walkmod-javalang-plugin", "Date": "2016-05-03T11:45:33Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(argument.isEmpty())) { proto.getParameters().add(createFunctionParameterFrom(argument)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5540/buggy-version/plugins.org.ietr.preesm.experiment.header.parser.cdt.src.org.ietr.preesm.experiment.header.parser.cdt.ASTAndActorComparisonVisitor.java", "BodyUseAPI": ["org.ietr.preesm.experiment.header.parser.cdt.ASTAndActorComparisonVisitor.createFunctionParameterFrom(java.lang.String)", "proto.getParameters().add(org.ietr.preesm.experiment.model.pimm.FunctionParameter)"], "Fixed commit": "7b22e556957283500f8f1c443d5d8557d9734415", "Url": "https://api.github.com/repos/preesm/preesm", "Date": "2014-12-08T13:43:45Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["au.edu.anu.datacommons.search.SearchService.getGroupsString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (au.edu.anu.datacommons.util.Util.isNotEmpty(filterGroups)) { solrQuery.addFilterQuery(((\"(location.published:ANU or unpublished.ownerGroup:(\" + filterGroups) + \"))\")); }else { solrQuery.addFilterQuery(\"location.published:ANU\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3780/buggy-version/DataCommons.src.main.java.au.edu.anu.datacommons.search.SearchService.java", "BodyUseAPI": ["org.apache.solr.client.solrj.SolrQuery.addFilterQuery(java.lang.String)"], "Fixed commit": "9248c82836056aec5f4bf4f12e5dd23f796e5298", "Url": "https://api.github.com/repos/anu-doi/DataCommons", "Date": "2012-06-18T02:20:06Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.renci.databridge.engines.relevance.CollectionDAO.countCollections(java.util.HashMap<java.lang.String, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nCollections <= 0) { this.logger.log(java.util.logging.Level.INFO, \"nCollections <= 0, so nothing to do\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/836/buggy-version/engines.relevance.src.main.java.org.renci.databridge.engines.relevance.RelevanceEngineMessageHandler.java", "BodyUseAPI": [], "Fixed commit": "a72b8bd4716ab45c2d3ccefccf5f91db2bf5231e", "Url": "https://api.github.com/repos/HowardLander/DataBridge", "Date": "2015-10-30T19:10:18Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(includedFile.isAbsolute())) { if ((parent != null) && (parent.exists())) includedFile = new java.io.File(parent.getParent(), includedFilename); if ((includedFile.exists()) && (includedFile.canRead())) return includedFile; java.io.File parentCanon = null; try { parentCanon = parent.getCanonicalFile(); if ((parentCanon != null) && (parentCanon.exists())) includedFile = new java.io.File(parentCanon.getParent(), includedFilename); if ((includedFile.exists()) && (includedFile.canRead())) return includedFile; } catch (java.io.IOException e) { } for (java.lang.String incPath : ca.mcgill.mcb.pcingola.bigDataScript.Config.get().getIncludePath()) { java.io.File incDir = new java.io.File(incPath); includedFile = new java.io.File(incDir, includedFilename); if ((includedFile.exists()) && (includedFile.canRead())) return includedFile; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8600/buggy-version/src.ca.mcgill.mcb.pcingola.bigDataScript.lang.StatementInclude.java", "BodyUseAPI": [], "Fixed commit": "075409ef7037b0734d816c17b0aa482267095e74", "Url": "https://api.github.com/repos/pcingola/BigDataScript", "Date": "2015-11-14T17:58:47Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selected.equals(\"\")) { java.lang.String defaultValue = ((java.lang.String) (field.getDefaultValue(issue))); if (((defaultValue != null) && ((defaultValue.length()) > 0)) && (cfVals.keySet().contains(defaultValue))) { selected = defaultValue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4308/buggy-version/queryfields.src.main.java.ru.mail.jira.plugins.lf.LinkerField.java", "BodyUseAPI": [], "Fixed commit": "d74255649a6b09e1d8afceceefa28540c2728dfd", "Url": "https://api.github.com/repos/AndreyVMarkelov/mailru-jira-plugins-issue-query-cfs", "Date": "2012-11-03T16:37:47Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((issue.getKey()) == null) { return params; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4308/buggy-version/queryfields.src.main.java.ru.mail.jira.plugins.lf.LinkedField.java", "BodyUseAPI": [], "Fixed commit": "d74255649a6b09e1d8afceceefa28540c2728dfd", "Url": "https://api.github.com/repos/AndreyVMarkelov/mailru-jira-plugins-issue-query-cfs", "Date": "2012-11-03T16:37:47Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jqlQuery.contains(\"RLINK\")) { if ((issue.getKey()) == null) { return params; } jqlQuery = jqlQuery.replace(\"RLINK\", issue.getKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4308/buggy-version/queryfields.src.main.java.ru.mail.jira.plugins.lf.LinkedField.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,issue.getKey())"], "Fixed commit": "d74255649a6b09e1d8afceceefa28540c2728dfd", "Url": "https://api.github.com/repos/AndreyVMarkelov/mailru-jira-plugins-issue-query-cfs", "Date": "2012-11-03T16:37:47Z"},
{"Line": "=>630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.activemq.command.MessageDispatch.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (message.isPersistent()) { ((org.apache.activemq.broker.region.BaseDestination) (message.getRegionDestination())).getMessageStore().updateMessage(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4066/buggy-version/activemq-broker.src.main.java.org.apache.activemq.broker.region.RegionBroker.java", "BodyUseAPI": ["org.apache.activemq.command.Message.getRegionDestination()", "((org.apache.activemq.broker.region.BaseDestination) (message.getRegionDestination())).getMessageStore()", "((org.apache.activemq.broker.region.BaseDestination) (message.getRegionDestination())).getMessageStore().updateMessage(org.apache.activemq.command.Message)"], "Fixed commit": "dc25f2a8f9d4e54c2349946b1337eb4b72890e07", "Url": "https://api.github.com/repos/mosoft521/activemq", "Date": "2015-01-27T16:43:35Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.fragment_question_answers)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (oldView == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6493/buggy-version/app.src.main.java.cz.zdrubecky.zoopraha.section.quiz.QuestionFragment.java", "BodyUseAPI": [], "Fixed commit": "08525a3a5f56da65c6f6d19f37c8297041f46916", "Url": "https://api.github.com/repos/zdrubvit/ZooPraha", "Date": "2017-06-26T18:29:02Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dorkbox.systemTray.util.Swt.isEventThread()) { dorkbox.systemTray.util.Swt.currentDisplay.getShells()[0].addListener(org.eclipse.swt.SWT.Close, new org.eclipse.swt.widgets.Listener() { @java.lang.Override public void handleEvent(final org.eclipse.swt.widgets.Event event) { runnable.run(); } }); }else { dorkbox.systemTray.util.Swt.dispatch(new java.lang.Runnable() { @java.lang.Override public void run() { dorkbox.systemTray.util.Swt.currentDisplay.getShells()[0].addListener(org.eclipse.swt.SWT.Close, new org.eclipse.swt.widgets.Listener() { @java.lang.Override public void handleEvent(final org.eclipse.swt.widgets.Event event) { runnable.run(); } }); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6018/buggy-version/src.dorkbox.systemTray.util.Swt.java", "BodyUseAPI": [], "Fixed commit": "9c2e9229ab123bc0ac79339e5222f3b8da0d0012", "Url": "https://api.github.com/repos/dorkbox/SystemTray", "Date": "2016-12-10T23:04:01Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(a.getBeats().keySet().isEmpty())) { result = java.lang.Math.max(java.util.Collections.max(a.getBeats().keySet()), result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4862/buggy-version/src.cs3500.music.view.ConcreteGuiViewPanel.java", "BodyUseAPI": ["a.getBeats().keySet()", "cs3500.music.NoteColumn.getBeats()", "java.util.Collections.max(a.getBeats().keySet())", "java.lang.Math.max(java.lang.Object,int)"], "Fixed commit": "1e95fbaa66d915937ff3735628df3808fe776370", "Url": "https://api.github.com/repos/sambart19/MusicEditorTrue", "Date": "2016-11-06T17:35:32Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(n.getBeats().keySet().isEmpty())) { max = java.lang.Math.max(max, java.util.Collections.max(n.getBeats().keySet())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4862/buggy-version/src.cs3500.music.view.MidiViewImpl.java", "BodyUseAPI": ["n.getBeats().keySet()", "java.lang.Math.max(int,java.lang.Object)", "java.util.Collections.max(n.getBeats().keySet())", "cs3500.music.NoteColumn.getBeats()"], "Fixed commit": "1e95fbaa66d915937ff3735628df3808fe776370", "Url": "https://api.github.com/repos/sambart19/MusicEditorTrue", "Date": "2016-11-06T17:35:32Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.example.netlog.app.MonitorService.ACTION_GET_SIGNAL.equals(action)) { broadCastSignalData(); }else if (com.example.netlog.app.MonitorService.ACTION_SETTINGS_CHANGED.equals(action)) { final java.lang.String key = intent.getStringExtra(com.example.netlog.app.MonitorService.EXTRA_KEY); android.content.SharedPreferences pref = android.preference.PreferenceManager.getDefaultSharedPreferences(this); switch (key) { case \"show_noti\" : updateNotification(pref.getBoolean(key, false)); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5698/buggy-version/app.src.main.java.com.example.netlog.app.MonitorService.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "48c2f0481ad6d9d428464e60a2a35f10a07591f2", "Url": "https://api.github.com/repos/tjeubaoit/netlog", "Date": "2015-06-10T05:03:32Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((volumePercentRequested) != (net.joshuad.hypnos.audio.AudioPlayer.NO_REQUEST)) { return volumePercentRequested; }else if ((decoder) != null) { return decoder.getVolumePercent(); }else { return volumePercent; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4777/buggy-version/src.net.joshuad.hypnos.audio.AudioPlayer.java", "BodyUseAPI": [], "Fixed commit": "9fa5a74d0b8e3cfc267cda6ccd42fb2e45be2144", "Url": "https://api.github.com/repos/JoshuaD84/HypnosMusicPlayer", "Date": "2017-12-13T04:19:13Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (volumePercent > 1) { net.joshuad.hypnos.audio.AudioPlayer.LOGGER.info(\"Volume requested to be more than 1 (i.e. 100%). Setting to 1 instead.\"); volumePercent = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4777/buggy-version/src.net.joshuad.hypnos.audio.AudioPlayer.java", "BodyUseAPI": [], "Fixed commit": "9fa5a74d0b8e3cfc267cda6ccd42fb2e45be2144", "Url": "https://api.github.com/repos/JoshuaD84/HypnosMusicPlayer", "Date": "2017-12-13T04:19:13Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.listener) != null) this.listener.nodeTagged(((size) * (multiplier)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6292/buggy-version/src.main.org.deidentifier.arx.framework.lattice.Lattice.java", "BodyUseAPI": [], "Fixed commit": "70055f22a3b3c07eb11d83271da3fa7203ce7378", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2013-08-19T10:34:17Z"},
{"Line": "=>767", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (check404(attrib[0])) { Links l = new Links(Links.SourceCategory.NSFW, attrib[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3635/buggy-version/src.Bot.java", "BodyUseAPI": [], "Fixed commit": "e2050a9cc779af7f3862aa4fed22b521b20c32c2", "Url": "https://api.github.com/repos/dippingsauce/BroBot", "Date": "2014-08-19T12:45:57Z"},
{"Line": "=>786", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((attrib[1]) != null) { if ((attrib[1].length()) > 0) { l.setArgs(attrib[1]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3635/buggy-version/src.Bot.java", "BodyUseAPI": ["java.lang.String.length()", "Bot.setArgs(java.lang.String)"], "Fixed commit": "e2050a9cc779af7f3862aa4fed22b521b20c32c2", "Url": "https://api.github.com/repos/dippingsauce/BroBot", "Date": "2014-08-19T12:45:57Z"},
{"Line": "=>799", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (check404(attrib[0])) { Links l = new Links(Links.SourceCategory.FUNNYS, attrib[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3635/buggy-version/src.Bot.java", "BodyUseAPI": [], "Fixed commit": "e2050a9cc779af7f3862aa4fed22b521b20c32c2", "Url": "https://api.github.com/repos/dippingsauce/BroBot", "Date": "2014-08-19T12:45:57Z"},
{"Line": "=>802", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((attrib[1]) != null) { if ((attrib[1].length()) > 0) { l.setArgs(attrib[1]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3635/buggy-version/src.Bot.java", "BodyUseAPI": ["java.lang.String.length()", "Bot.setArgs(java.lang.String)"], "Fixed commit": "e2050a9cc779af7f3862aa4fed22b521b20c32c2", "Url": "https://api.github.com/repos/dippingsauce/BroBot", "Date": "2014-08-19T12:45:57Z"},
{"Line": "=>770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((attrib[1]) != null) { if ((attrib[1].length()) > 0) { l.setArgs(attrib[1]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3635/buggy-version/src.Bot.java", "BodyUseAPI": ["java.lang.String.length()", "Bot.setArgs(java.lang.String)"], "Fixed commit": "e2050a9cc779af7f3862aa4fed22b521b20c32c2", "Url": "https://api.github.com/repos/dippingsauce/BroBot", "Date": "2014-08-19T12:45:57Z"},
{"Line": "=>783", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (check404(attrib[0])) { Links l = new Links(Links.SourceCategory.YOUTUBE, attrib[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3635/buggy-version/src.Bot.java", "BodyUseAPI": [], "Fixed commit": "e2050a9cc779af7f3862aa4fed22b521b20c32c2", "Url": "https://api.github.com/repos/dippingsauce/BroBot", "Date": "2014-08-19T12:45:57Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mDeviceConnected)) mBluetoothLeService.connect(mDeviceAddress);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4452/buggy-version/app.src.main.java.de.heimbeeren.hometrainer.TrainingActivity.java", "BodyUseAPI": [], "Fixed commit": "91c4cedc72b21a3fb90eb16a24d098efa7d9929d", "Url": "https://api.github.com/repos/hamacherc/HomeTrainer", "Date": "2016-03-08T20:18:40Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencb.commons.datastore.mongodb.MongoDBCollection.aggregate(java.util.List<org.bson.conversions.Bson>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((aggregate.getNumResults()) > 0) { aclResource = converter.convertToDataModelType(aggregate.first()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6712/buggy-version/opencga-catalog.src.main.java.org.opencb.opencga.catalog.db.mongodb.AclMongoDBAdaptor.java", "BodyUseAPI": ["org.opencb.commons.datastore.core.QueryResult<org.bson.Document>.first()", "org.opencb.opencga.catalog.db.mongodb.converters.GenericConverter<? extends org.opencb.opencga.catalog.models.acls.AbstractAcl, org.bson.Document>.convertToDataModelType(aggregate.first())"], "Fixed commit": "71cca43f9b28ffcdaf88cc0cae356db637a29354", "Url": "https://api.github.com/repos/opencb/opencga", "Date": "2016-10-20T10:11:22Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.apache.tinkerpop.gremlin.structure.Vertex>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (vertex.getBaseVertex().hasType(discriminator)) { result.add(vertex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1064/buggy-version/xo.src.main.java.com.puresoltechnologies.ductiledb.xo.impl.DucileStoreVertexManager.java", "BodyUseAPI": ["java.util.List<com.puresoltechnologies.ductiledb.tinkerpop.DuctileVertex>.add(com.puresoltechnologies.ductiledb.tinkerpop.DuctileVertex)"], "Fixed commit": "bff68844b18c55defc81def6253e2b10c239e6c2", "Url": "https://api.github.com/repos/PureSolTechnologies/DuctileDB", "Date": "2016-01-11T17:31:18Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.formkiq.server.service.SystemPropertyService.getProperty(org.springframework.security.core.userdetails.UserDetails,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.springframework.util.StringUtils.hasText(value)) { com.formkiq.server.domain.type.SystemPropertyDTO pdto = new com.formkiq.server.domain.type.SystemPropertyDTO(); pdto.setKey(key); pdto.setValue(value); dto.setProperties(java.util.Arrays.asList(pdto)); }else { dto.setProperties(java.util.Collections.emptyList()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7526/buggy-version/src.main.java.com.formkiq.server.api.SystemController.java", "BodyUseAPI": ["com.formkiq.server.domain.type.SystemPropertyDTO.setValue(java.lang.String)"], "Fixed commit": "7a0d6e106fe2d4a87c0af10154bc5a8a7a5f4275", "Url": "https://api.github.com/repos/formkiq/formkiq-server", "Date": "2017-03-15T01:26:25Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i > 0) && ((islandMap[(i - 1)][j]) == 1)) { removeIsland(islandMap, (i - 1), j); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7754/buggy-version/trunk.GoJava6.azuiev.intro.src.main.java.com.gojava6.IslandProblemResolving.java", "BodyUseAPI": ["com.gojava6.IslandProblemResolving.removeIsland(int[][],int,int)"], "Fixed commit": "dcf0fca00112159a1ec6bac768e791514f8451a1", "Url": "https://api.github.com/repos/baygoit/GoJava", "Date": "2015-09-16T07:21:18Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((followRelationBuffer.size()) > 0) { flush(followRelationBuffer, followRelationMapper, com.wuyi.wcrawler.entity.FollowRelation.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2026/buggy-version/src.main.java.com.wuyi.wcrawler.crawler.ZhCrawler.java", "BodyUseAPI": ["com.wuyi.wcrawler.crawler.ZhCrawler.flush(java.util.Set<com.wuyi.wcrawler.entity.FollowRelation>,com.wuyi.wcrawler.mapper.FollowRelationMapper,java.lang.Class)"], "Fixed commit": "3ec6f593803be2aa8dbda42bb522ae6e3bb12959", "Url": "https://api.github.com/repos/Ngone51/wcrawler", "Date": "2017-11-13T03:24:05Z"},
{"Line": "=>1244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tools.Tools.hasPermission(player, ability))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2652/buggy-version/Bending2.src.tools.Tools.java", "BodyUseAPI": [], "Fixed commit": "557c477207e75a7b562f615bf13ef037fb08469d", "Url": "https://api.github.com/repos/orion304/MinecraftTLA", "Date": "2012-12-20T21:20:14Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((transaction.getCommission()) != null) { divCommission.getElement().setInnerHTML(NumberUtils.CURRENCYFORMAT.format(transaction.getCommission())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4213/buggy-version/src.com.workpoint.mwallet.client.ui.transactions.table.TransactionTableRow.java", "BodyUseAPI": [], "Fixed commit": "4e964e9dd384f85650b8b26f0423bf320ade4876", "Url": "https://api.github.com/repos/TomKim2012/flexiPay", "Date": "2015-03-27T14:18:06Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.runelite.api.Client.getWidget(WidgetInfo.BANK_INVENTORY)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((bank_inv != null) && (!(bank_inv.isHidden()))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4820/buggy-version/runelite-client.src.main.java.net.runelite.client.plugins.grounditems.GroundItemsOverlay.java", "BodyUseAPI": [], "Fixed commit": "2211f6b45a5f32e08e67b964cd2b20ab98e7e834", "Url": "https://api.github.com/repos/tylerthardy/runelite", "Date": "2017-09-14T08:23:03Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activity instanceof android.support.v7.app.AppCompatActivity) { if (net.wequick.small.util.ReflectAccelerator.sAppCompatActivityHasNoResourcesField) return; if ((net.wequick.small.util.ReflectAccelerator.sAppCompatActivity_mResources_field) == null) { net.wequick.small.util.ReflectAccelerator.sAppCompatActivity_mResources_field = net.wequick.small.util.ReflectAccelerator.getDeclaredField(android.support.v7.app.AppCompatActivity.class, \"mResources\"); if ((net.wequick.small.util.ReflectAccelerator.sAppCompatActivity_mResources_field) == null) { net.wequick.small.util.ReflectAccelerator.sAppCompatActivityHasNoResourcesField = true; return; } } net.wequick.small.util.ReflectAccelerator.setValue(net.wequick.small.util.ReflectAccelerator.sAppCompatActivity_mResources_field, target, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1966/buggy-version/Android.DevSample.small.src.main.java.net.wequick.small.util.ReflectAccelerator.java", "BodyUseAPI": [], "Fixed commit": "e21ab2a1b2358d79415f581c45ccd3649467f285", "Url": "https://api.github.com/repos/wequick/Small", "Date": "2016-03-25T09:10:59Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInverse) return SUCCESS;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8371/buggy-version/src.main.java.jp.vmi.selenium.selenese.command.Assertion.java", "BodyUseAPI": [], "Fixed commit": "3fe4a18e26680b067a3bc4ba78cc82fa7513e02c", "Url": "https://api.github.com/repos/vmi/selenese-runner-java", "Date": "2016-10-30T22:19:19Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInverse) return SUCCESS;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8371/buggy-version/src.main.java.jp.vmi.selenium.selenese.command.Assertion.java", "BodyUseAPI": [], "Fixed commit": "3fe4a18e26680b067a3bc4ba78cc82fa7513e02c", "Url": "https://api.github.com/repos/vmi/selenese-runner-java", "Date": "2016-10-30T22:19:19Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Thread.currentThread()) != currentThread) { com.liferay.portal.kernel.cache.ThreadLocalCacheManager.clearAll(Lifecycle.REQUEST); com.liferay.portal.kernel.util.CentralizedThreadLocal.clearShortLivedThreadLocals(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3449/buggy-version/portal-service.src.com.liferay.portal.kernel.messaging.SerialDestination.java", "BodyUseAPI": [], "Fixed commit": "c541addd4a8d2c923b94366d5c1c718fe9be9ed6", "Url": "https://api.github.com/repos/shuyangzhou/liferay-portal", "Date": "2015-04-16T16:05:31Z"},
{"Line": "=>1765", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((singleMwState.mwController) == null) { singleMwState.mwController = ((com.mbientlab.metawear.api.MetaWearBleService.MetaWearControllerImpl) (getMetaWearController())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7557/buggy-version/src.com.mbientlab.metawear.api.MetaWearBleService.java", "BodyUseAPI": [], "Fixed commit": "ff6eb5cdd607cc69d76df21984d0fcfc2a696bd4", "Url": "https://api.github.com/repos/mbientlab/Metawear-AndroidAPI", "Date": "2014-12-30T10:50:54Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Thread.interrupted()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7590/buggy-version/src.main.java.commands.Land.java", "BodyUseAPI": [], "Fixed commit": "7b34ca44e701ed8cfa63422fa51b4c45927d0722", "Url": "https://api.github.com/repos/KrisC369/BeSwarm", "Date": "2016-08-12T11:22:53Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((objenti.getIdUnidad()) < (java.lang.Integer.parseInt(objenti.getCuentaCarga()))) { modeloTabla.addRow(campo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5884/buggy-version/src.Presentacion.FrmReportesFaltantes.java", "BodyUseAPI": [], "Fixed commit": "6b3294416aa99cce3633d2b7e5863ed302ea9124", "Url": "https://api.github.com/repos/Drei109/SistemaInformesUPT", "Date": "2016-12-11T02:17:28Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((projectDetail.getEmdAmount()) != null) { pattern = java.util.regex.Pattern.compile(com.psk.pms.validator.AMOUNT_PATTERN); matcher = pattern.matcher(projectDetail.getEmdAmount()); if (!(matcher.matches())) { errors.rejectValue(\"emdAmount\", \"emdAmount.incorrect\", \"Enter a numeric value and only a single dot is allowed\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8987/buggy-version/src.main.java.com.psk.pms.validator.ProjectDetailValidator.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(projectDetail.getEmdAmount())", "com.psk.pms.model.ProjectDetail.getEmdAmount()"], "Fixed commit": "e7ff7d4959c90a2c7c33ef166d68c84ac7ad4803", "Url": "https://api.github.com/repos/devintqa/pms", "Date": "2015-05-12T06:24:20Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (oldExtraConfigFile.exists()) { try { java.io.PrintWriter w = new java.io.PrintWriter(new java.io.FileWriter(oldExtraConfigFile)); w.println(\"The AutoSwitch overrides file has moved to AutoSwitch_Overrides.txt\"); w.close(); } catch (java.io.IOException ioe) { autoSwitch.throwException(\"Failed to fix redirect old config.\", ioe, false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/9003/buggy-version/src.thebombzen.mods.autoswitch.Configuration.java", "BodyUseAPI": [], "Fixed commit": "57ae7eec04d66310ca2479735202808b6e433245", "Url": "https://api.github.com/repos/thebombzen/AutoSwitch", "Date": "2014-02-24T21:36:40Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.nunnerycode.bukkit.mythicdrops.tiers.TierMap.getInstance().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tier != null) { return tier; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7899/buggy-version/src.main.java.net.nunnerycode.bukkit.mythicdrops.utils.TierUtil.java", "BodyUseAPI": [], "Fixed commit": "bbb67d6bb6c1e017cdd95914d5581120400e5b83", "Url": "https://api.github.com/repos/Nunnery/MythicDrops", "Date": "2014-04-13T03:23:04Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lastMergeTarget) != null) && (!(lastMergeTarget.isMutable()))) lastMergeTarget = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6874/buggy-version/amibe.src.org.jcae.mesh.stitch.EdgeProjector.java", "BodyUseAPI": [], "Fixed commit": "9c92259ec6352265e2e63031ee260de7df1872aa", "Url": "https://api.github.com/repos/jeromerobert/jCAE", "Date": "2013-09-02T16:34:40Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((lastMergeTarget) != null) && (!(lastMergeTarget.isMutable()))) lastMergeTarget = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6874/buggy-version/amibe.src.org.jcae.mesh.stitch.EdgeProjector.java", "BodyUseAPI": [], "Fixed commit": "9c92259ec6352265e2e63031ee260de7df1872aa", "Url": "https://api.github.com/repos/jeromerobert/jCAE", "Date": "2013-09-02T16:34:40Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentMatch) != null) { loadMatch(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4368/buggy-version/app.src.main.java.com.eyecuelab.survivalists.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "25ace0c18c70b61c088a9553bfd1434f919864b5", "Url": "https://api.github.com/repos/kcmdouglas/Survivalists", "Date": "2016-05-12T23:21:08Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((TransporteOpciones) != null) for (pojos.Transporte t : TransporteOpciones) { pojotemp.getTransporte().add(t); java.lang.System.out.println((\"seleccion \" + (t.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3024/buggy-version/src.controllers.ControllerSenderos.java", "BodyUseAPI": [], "Fixed commit": "74b2d31b260242752aaed5022444f32008a3cce2", "Url": "https://api.github.com/repos/GUIAMOVILTURISTICAUPSE/Data_Manager_Desktop", "Date": "2017-08-02T21:08:40Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.pressgang.ccms.contentspec.ITopicNode.getTopic()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(createPressGangTranslatedTopic(providerFactory, topic, condition, customEntities, translatedCSNode))) { error = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1054/buggy-version/src.main.java.org.jboss.pressgang.ccms.server.async.process.task.ZanataPushTask.java", "BodyUseAPI": [], "Fixed commit": "6e2462509cde3ac8d34de3e2a2ec95183bfb001c", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSREST", "Date": "2014-09-02T00:15:25Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.pressgang.ccms.contentspec.ITopicNode.getTopic()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(createPressGangTranslatedTopic(providerFactory, topic, condition, customEntities, translatedCSNode))) { error = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1054/buggy-version/src.main.java.org.jboss.pressgang.ccms.server.async.process.task.ZanataPushTask.java", "BodyUseAPI": [], "Fixed commit": "6e2462509cde3ac8d34de3e2a2ec95183bfb001c", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSREST", "Date": "2014-09-02T00:15:25Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.metas.ui.web.vaadin.window.prototype.order.model.LookupPropertyValue.cast(getChildPropertyValues().get(lookupPropertyName))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (lookupPropertyValue == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5087/buggy-version/src.main.java.de.metas.ui.web.vaadin.window.prototype.order.model.ObjectPropertyValue.java", "BodyUseAPI": [], "Fixed commit": "2c07523cc0231fdd1596a49c8df64c0f91bc1f33", "Url": "https://api.github.com/repos/metasfresh/metasfresh-webui-api", "Date": "2016-05-13T16:54:20Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (content != null) { try { content.close(); } catch (java.io.IOException ex) { com.plausiblelabs.metrics.reporting.InstanceIdAdder.LOG.warn(\"Uable to close input stream\", ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/997/buggy-version/src.main.java.com.plausiblelabs.metrics.reporting.InstanceIdAdder.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "081f9664fa11a918fd4739984eb8b5a6060e57e6", "Url": "https://api.github.com/repos/omnifone/metrics-cloudwatch", "Date": "2013-11-29T13:13:19Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (argsLine.hasOption(\"s\")) { windowSize = java.lang.Integer.parseInt(argsLine.getOptionValue(\"s\")); }else { windowSize = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5352/buggy-version/src.com.oltpbenchmark.util.ResultUploader.java", "BodyUseAPI": [], "Fixed commit": "a428f7da57d6708df480049d367ec7d871f6b444", "Url": "https://api.github.com/repos/mdashti/oltpbench", "Date": "2016-02-12T16:19:43Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arr.getSize()) == 1) { return arr.getAt(0).toByteArray(); }else { return arr.toByteArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2899/buggy-version/src.arithmetic.objects.groups.ProductGroupElement.java", "BodyUseAPI": ["arithmetic.objects.arrays.ArrayOfElements<arithmetic.objects.groups.IGroupElement>.getAt(int)", "arr.getAt(0).toByteArray()", "arithmetic.objects.arrays.ArrayOfElements<arithmetic.objects.groups.IGroupElement>.toByteArray()"], "Fixed commit": "38c38e0a97d4a7ab36d04f25ac1bed83b4f4cebe", "Url": "https://api.github.com/repos/tagel/Verifier", "Date": "2013-07-20T08:47:04Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((currRank == (-1)) || (currRank == 8)) || (currFile == (-1))) || (currFile == 8)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5524/buggy-version/MoveInterpreter.java", "BodyUseAPI": [], "Fixed commit": "834f2994f899c9062a29f84be2bb5bd8293b0c27", "Url": "https://api.github.com/repos/emdoyle/ChessProgram", "Date": "2015-08-09T22:46:19Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MoveInterpreter.fileToInt(char)", "MoveInterpreter.fileToInt(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Math.abs((firstFile - secondFile))) != 1) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5524/buggy-version/MoveInterpreter.java", "BodyUseAPI": [], "Fixed commit": "834f2994f899c9062a29f84be2bb5bd8293b0c27", "Url": "https://api.github.com/repos/emdoyle/ChessProgram", "Date": "2015-08-09T22:46:19Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((spaceArr[currRank][currFile].getPiece()) != null) && ((spaceArr[currRank][currFile].getPiece().getClass()) != (bsh.getClass()))) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5524/buggy-version/MoveInterpreter.java", "BodyUseAPI": [], "Fixed commit": "834f2994f899c9062a29f84be2bb5bd8293b0c27", "Url": "https://api.github.com/repos/emdoyle/ChessProgram", "Date": "2015-08-09T22:46:19Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MoveInterpreter.fileToInt(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((spaceArr[destRank][firstFile].getPiece()) != null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5524/buggy-version/MoveInterpreter.java", "BodyUseAPI": [], "Fixed commit": "834f2994f899c9062a29f84be2bb5bd8293b0c27", "Url": "https://api.github.com/repos/emdoyle/ChessProgram", "Date": "2015-08-09T22:46:19Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { openProgressDialog(); rest = list.load(false, Sample.CATEGORY_DATA, null, SampleServerIndirectList.SORT_AS_IS, false, listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1914/buggy-version/app.src.main.java.diy.uigeneric.sampleserver.SampleServerListActivity.java", "BodyUseAPI": [], "Fixed commit": "2a42544a6a59763bef0461e2a6fd6fee05f9277f", "Url": "https://api.github.com/repos/taworn/uigeneric", "Date": "2016-05-04T00:22:25Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (row.isEmpty()) { rows.remove(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/398/buggy-version/concourse-plugin-core.src.main.java.com.cinchapi.concourse.server.plugin.data.Dataset.java", "BodyUseAPI": [], "Fixed commit": "03652976597310bf2b5f7ad97625a3b54822b40d", "Url": "https://api.github.com/repos/cinchapi/concourse", "Date": "2016-12-24T12:29:44Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<A, java.util.Set<V>>.get(A)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (values.isEmpty()) { row.remove(attribute); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/398/buggy-version/concourse-plugin-core.src.main.java.com.cinchapi.concourse.server.plugin.data.Dataset.java", "BodyUseAPI": [], "Fixed commit": "03652976597310bf2b5f7ad97625a3b54822b40d", "Url": "https://api.github.com/repos/cinchapi/concourse", "Date": "2016-12-24T12:29:44Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (java.lang.Double.isNaN(weight[i][j])) throw new java.lang.IllegalArgumentException(((((\"weight \" + i) + \"-\") + j) + \" is NaN\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/605/buggy-version/src.main.java.edu.princeton.cs.algs4.AssignmentProblem.java", "BodyUseAPI": [], "Fixed commit": "b6359faa0e938a27eb7dda0fe614f6ebc6dcfd46", "Url": "https://api.github.com/repos/kevin-wayne/algs4", "Date": "2016-10-18T12:50:04Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(reducedCost)) <= ((edu.princeton.cs.algs4.AssignmentProblem.FLOATING_POINT_EPSILON) * magnitude)) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/605/buggy-version/src.main.java.edu.princeton.cs.algs4.AssignmentProblem.java", "BodyUseAPI": [], "Fixed commit": "b6359faa0e938a27eb7dda0fe614f6ebc6dcfd46", "Url": "https://api.github.com/repos/kevin-wayne/algs4", "Date": "2016-10-18T12:50:04Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (reducedCost < 0.0) { java.lang.System.out.println((\"reduced cost = \" + reducedCost)); java.lang.System.out.println((\"weight = \" + (weight[i][j]))); java.lang.System.out.println((\"px = \" + (px[i]))); java.lang.System.out.println((\"py = \" + (py[j]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/605/buggy-version/src.main.java.edu.princeton.cs.algs4.AssignmentProblem.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "b6359faa0e938a27eb7dda0fe614f6ebc6dcfd46", "Url": "https://api.github.com/repos/kevin-wayne/algs4", "Date": "2016-10-18T12:50:04Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(website.getText().isEmpty())) { java.lang.String ext = website.getText().replaceFirst(\"[^\\\\.]+\\\\.\", \"@\"); extension.setText(ext); populateEmailBox(); }else { extension.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7359/buggy-version/main.ui.ContactDialog.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)"], "Fixed commit": "2f46c8a791e0dd0fc660aa8e6e44dd8459446241", "Url": "https://api.github.com/repos/quanchifootball/dataminer", "Date": "2017-12-13T06:50:27Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getType()) != null) { return getType(); }else { return getVariable().getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/9236/buggy-version/gina-api.src.main.java.org.openflexo.gina.model.bindings.FIBVariableBindingVariable.java", "BodyUseAPI": [], "Fixed commit": "9e9693e273e1afc533a87f102f1f579c8fad3c81", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2016-08-23T17:05:14Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parameterName.equals(name)) { if ((parameterValues == null) || ((parameterValues.length) == 0)) { return pattern.matches(\"\"); }else { for (java.lang.String value : parameterValues) { if (pattern.matches(value)) { org.ocpsoft.rewrite.param.ParameterStore store = ((org.ocpsoft.rewrite.param.ParameterStore) (context.get(org.ocpsoft.rewrite.param.ParameterStore.class))); org.ocpsoft.rewrite.param.ParameterValueStore values = ((org.ocpsoft.rewrite.param.ParameterValueStore) (context.get(org.ocpsoft.rewrite.param.ParameterValueStore.class))); return values.submit(store.get(parameterName), value); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3734/buggy-version/config-servlet.src.main.java.org.ocpsoft.rewrite.servlet.config.Query.java", "BodyUseAPI": ["org.ocpsoft.rewrite.param.ParameterStore.get(java.lang.String)", "org.ocpsoft.rewrite.param.ParameterValueStore.submit(store.get(parameterName),java.lang.String)"], "Fixed commit": "4a19e6a8af9553723302e7dd0fe71fc5a42c4ed8", "Url": "https://api.github.com/repos/chkal/rewrite", "Date": "2013-02-26T16:28:48Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((track.album.images.size()) > 0) { if ((track.album.images.size()) > 1) this.trackImage = track.album.images.get(1).url; else this.trackImage = track.album.images.get(0).url; this.trackImageLarge = track.album.images.get(0).url; }else { this.trackImage = \"\"; this.trackImageLarge = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7668/buggy-version/app.src.main.java.pasta.streamer.data.TrackListData.java", "BodyUseAPI": [], "Fixed commit": "4bdaa004584a2ff7682f714907225aa5ff972934", "Url": "https://api.github.com/repos/TheAndroidMaster/Pasta-for-Spotify", "Date": "2016-04-23T11:15:07Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(vFiles.isEmpty())) { processedConsumer.consume(sm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8598/buggy-version/workbench.mps-platform.source_gen.jetbrains.mps.workbench.findusages.StubModelsFastFindSupport.java", "BodyUseAPI": [], "Fixed commit": "cd3865c0b96e605aa68566bba53947c6aba459a7", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2016-07-25T17:41:40Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bool_symbol_map.containsKey(s)) { sym = bool_symbol_map.get(s); }else { sym = int_symbol_map.get(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6458/buggy-version/src.edu.ucla.cs.utils.SAT.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "5531951cabc5903b7be12837ac0b658124b2d6b5", "Url": "https://api.github.com/repos/husttroy/Maple", "Date": "2017-03-12T22:12:49Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(years.contains(yr))) { years.add(yr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4377/buggy-version/app.src.main.java.com.blessedenterprises.DatePicker.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "d7cfd64c4ebb6abfb4ac5585ab06941309c358fb", "Url": "https://api.github.com/repos/stephanenoutsa/BlessedEnterprises", "Date": "2016-10-02T21:35:05Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_resId) > 0) _tts.speak(getString(_resId), TextToSpeech.QUEUE_ADD, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/195/buggy-version/src.com.github.kencordero.rishi.WordsActivity.java", "BodyUseAPI": [], "Fixed commit": "e56fb7dad0b8e6db5dac1d2469967fd334cb930d", "Url": "https://api.github.com/repos/kencordero/rishi", "Date": "2013-06-05T21:11:15Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.neo4j.impl.store.prototype.neole.PropertyCursor.shortStringEncoding(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((encoding == (ShortStringEncoding.ENCODING_UTF8)) || (encoding == (ShortStringEncoding.ENCODING_LATIN1))) { return org.neo4j.impl.store.prototype.neole.ShortStringEncoding.numberOfBlocksUsedUTF8OrLatin1(stringLength); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6428/buggy-version/enterprise.runtime.neole.src.main.java.org.neo4j.impl.store.prototype.neole.PropertyCursor.java", "BodyUseAPI": [], "Fixed commit": "102671c9195f1e514e17bb493cbb52ace49c951d", "Url": "https://api.github.com/repos/thobe/neo4j", "Date": "2017-06-21T12:40:04Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((block) == (java.lang.Integer.MIN_VALUE)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6428/buggy-version/enterprise.runtime.neole.src.main.java.org.neo4j.impl.store.prototype.neole.PropertyCursor.java", "BodyUseAPI": [], "Fixed commit": "102671c9195f1e514e17bb493cbb52ace49c951d", "Url": "https://api.github.com/repos/thobe/neo4j", "Date": "2017-06-21T12:40:04Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (code == 0) { GlobalVariables.currentUser.setAvatar(avatarId); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7315/buggy-version/src.com.isummon.net.RealNetHelper.java", "BodyUseAPI": [], "Fixed commit": "a09d419f32d22198364574ca518c6ec0bc0ed310", "Url": "https://api.github.com/repos/horzwxy/iSummon", "Date": "2013-12-27T13:29:33Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkDraw()) { declareWinner(new int[][]{ new int[]{ -1 } }); playerTurn = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/503/buggy-version/src.Game.PlayingField.java", "BodyUseAPI": [], "Fixed commit": "bb96e633b46a581e983fd42e0f5bd85be14ad445", "Url": "https://api.github.com/repos/Humphrik/Connect4", "Date": "2017-02-03T22:52:12Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (speedLimit <= 0) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7176/buggy-version/train-sensor.src.main.java.hu.bme.mit.train.sensor.TrainSensorImpl.java", "BodyUseAPI": [], "Fixed commit": "7ec31bae35e4321318c18a71498e0d8b243c1486", "Url": "https://api.github.com/repos/FTSRG-ReteLab/Asztal-vcs-ci-lab", "Date": "2017-03-06T15:05:38Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nextX >= (originalImageBitmapDrawable.getBitmap().getWidth())) { nextX = (originalImageBitmapDrawable.getBitmap().getWidth()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5803/buggy-version/app.src.main.java.com.martinock.imagehistogram.MainActivity.java", "BodyUseAPI": ["android.graphics.drawable.BitmapDrawable.getBitmap()", "originalImageBitmapDrawable.getBitmap().getWidth()"], "Fixed commit": "90f5fdc1887321560b6612c6e07aa91570aeea51", "Url": "https://api.github.com/repos/martinock/ImageHistogram", "Date": "2017-11-14T01:32:09Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((res.get(field)) != null) { count++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8033/buggy-version/src.main.java.es.uah.cc.ie.metadatastatistics.ResourceSampleImpl.java", "BodyUseAPI": [], "Fixed commit": "162fa1693a5c04676213c8521aa68f2a689e5603", "Url": "https://api.github.com/repos/ieru/metadata-statistics", "Date": "2013-03-27T13:21:36Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (checkResult.next()) { pstCheck.close(); return true; }else { pstCheck.close(); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8018/buggy-version/src.se.molk.blog.dao.PostDAO.java", "BodyUseAPI": [], "Fixed commit": "2bfa7ac3bdc66247623fbfd08ad07ab69d2c78d9", "Url": "https://api.github.com/repos/HaojunZou/Blog_Project_GP4", "Date": "2015-05-21T14:59:09Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) == 0) { results.add(\"PKU\"); results.add(\"THU\"); }else { results.add(\"HIT\"); results.add(\"HMU\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5910/buggy-version/src.action.personalInfo.school.java", "BodyUseAPI": [], "Fixed commit": "159ad786a45929fbdb06980f4126d43fed957462", "Url": "https://api.github.com/repos/MEDUGI/2016SE-project", "Date": "2016-12-15T10:19:33Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (roles != null) return (roles.size()) + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1591/buggy-version/infocenter.src.main.java.com.ustudy.infocenter.services.impl.TeacherServiceImpl.java", "BodyUseAPI": ["java.util.List<com.ustudy.infocenter.model.UElem>.size()"], "Fixed commit": "ec0de2ab072a99c41dcb88b6a3280702d4103de8", "Url": "https://api.github.com/repos/yu2003w/ustudy", "Date": "2017-08-20T15:22:03Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (clss != null) return clss.size(); else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1591/buggy-version/infocenter.src.main.java.com.ustudy.infocenter.services.impl.TeacherServiceImpl.java", "BodyUseAPI": ["java.util.List<com.ustudy.infocenter.model.UElem>.size()"], "Fixed commit": "ec0de2ab072a99c41dcb88b6a3280702d4103de8", "Url": "https://api.github.com/repos/yu2003w/ustudy", "Date": "2017-08-20T15:22:03Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (grades != null) return grades.size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1591/buggy-version/infocenter.src.main.java.com.ustudy.infocenter.services.impl.TeacherServiceImpl.java", "BodyUseAPI": ["java.util.List<com.ustudy.infocenter.model.UElem>.size()"], "Fixed commit": "ec0de2ab072a99c41dcb88b6a3280702d4103de8", "Url": "https://api.github.com/repos/yu2003w/ustudy", "Date": "2017-08-20T15:22:03Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (subs != null) return subs.size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1591/buggy-version/infocenter.src.main.java.com.ustudy.infocenter.services.impl.TeacherServiceImpl.java", "BodyUseAPI": ["java.util.List<com.ustudy.infocenter.model.UElem>.size()"], "Fixed commit": "ec0de2ab072a99c41dcb88b6a3280702d4103de8", "Url": "https://api.github.com/repos/yu2003w/ustudy", "Date": "2017-08-20T15:22:03Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (perms != null) return perms.size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1591/buggy-version/infocenter.src.main.java.com.ustudy.infocenter.services.impl.TeacherServiceImpl.java", "BodyUseAPI": ["java.util.List<com.ustudy.infocenter.model.UElem>.size()"], "Fixed commit": "ec0de2ab072a99c41dcb88b6a3280702d4103de8", "Url": "https://api.github.com/repos/yu2003w/ustudy", "Date": "2017-08-20T15:22:03Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loc_yes_RadioButton.isChecked()) { com.google.android.gms.location.places.ui.PlacePicker.IntentBuilder builder = new com.google.android.gms.location.places.ui.PlacePicker.IntentBuilder(); try { startActivityForResult(builder.build(mActivity), com.example.cmput301f17t19.echoes.HabitEventDetailActivity.PLACE_PICKER_REQUEST); } catch (com.google.android.gms.common.GooglePlayServicesRepairableException e) { e.printStackTrace(); } catch (com.google.android.gms.common.GooglePlayServicesNotAvailableException e) { e.printStackTrace(); } }else { android.widget.Toast.makeText(mActivity, \"Please check attach location first\", Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3494/buggy-version/Echoes.app.src.main.java.com.example.cmput301f17t19.echoes.HabitEventDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "9cb879b0f4c29c1fd518fccc25e2588bbab83bf0", "Url": "https://api.github.com/repos/CMPUT301F17T19/Echoes", "Date": "2017-11-22T23:51:00Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((qualOut) != null) { qualOut.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7388/buggy-version/src.xsqconvertergit.FastQWriter.java", "BodyUseAPI": [], "Fixed commit": "0c751773c3f62dd63da78c95d1e613b79c20e19d", "Url": "https://api.github.com/repos/WimS83/XSQConverter", "Date": "2013-03-26T11:35:28Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { mPresenter.hideProgress(); getSupportFragmentManager().beginTransaction().replace(R.id.content, new com.example.neha.appsdontlie_capstonestage2.HomeFragment(mPresenter, data)).commit(); getSupportFragmentManager().beginTransaction().replace(R.id.list_container, new com.example.neha.appsdontlie_capstonestage2.DashboardFragment(mPresenter)).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7353/buggy-version/app.src.main.java.com.example.neha.appsdontlie_capstonestage2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f8e6daef642e321b7a3a7322dc3583feabad737d", "Url": "https://api.github.com/repos/nehas510/AppsDontLie-CapstoneStage2", "Date": "2017-05-18T17:40:29Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTab) { fragmentTransaction.replace(R.id.list_container, newFragment, tag); }else { fragmentTransaction.replace(R.id.content, newFragment, tag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7353/buggy-version/app.src.main.java.com.example.neha.appsdontlie_capstonestage2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f8e6daef642e321b7a3a7322dc3583feabad737d", "Url": "https://api.github.com/repos/nehas510/AppsDontLie-CapstoneStage2", "Date": "2017-05-18T17:40:29Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((kv.length) == 1) { parameters.add(new com.kloudtek.util.URLBuilder.Param(kv[0], \"\")); }else { parameters.add(new com.kloudtek.util.URLBuilder.Param(kv[0], kv[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5742/buggy-version/core.src.main.java.com.kloudtek.util.URLBuilder.java", "BodyUseAPI": ["java.util.List<com.kloudtek.util.URLBuilder.Param>.add(com.kloudtek.util.URLBuilder.Param)", "java.util.List<com.kloudtek.util.URLBuilder.Param>.add(com.kloudtek.util.URLBuilder.Param)"], "Fixed commit": "e5e3b2436f7793c88974512a5b48a815125ca07a", "Url": "https://api.github.com/repos/kloudtek/ktutils", "Date": "2016-03-16T22:16:35Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tower) != null) return tower.checkRune(r);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7297/buggy-version/src.model.mapitem.Field.java", "BodyUseAPI": [], "Fixed commit": "700bf4d7ad4131b8ca42542d1459980f993e9ba6", "Url": "https://api.github.com/repos/m2kohand/Szoftlab4", "Date": "2014-04-22T07:19:51Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(dir.exists())) { dir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8805/buggy-version/core.src.main.java.fi.iki.elonen.NanoHTTPD.java", "BodyUseAPI": [], "Fixed commit": "fbcdb13d251bdbb2ef1f95badee26b8b4b170be2", "Url": "https://api.github.com/repos/LordFokas/nanohttpd", "Date": "2015-10-16T08:03:47Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m._rows.getRows().size()) > 0) erg.add(m);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2490/buggy-version/src.main.java.de.appdynamics.ace.metric.query.data.DataMap.java", "BodyUseAPI": ["java.util.List<de.appdynamics.ace.metric.query.data.DataMap>.add(de.appdynamics.ace.metric.query.data.DataMap)"], "Fixed commit": "10549ffcafb0bf63bebf1156f795753c5a1281c1", "Url": "https://api.github.com/repos/OpenAppdynamicsExtensions/RestMetricQueries", "Date": "2016-04-15T12:33:05Z"},
{"Line": "=>1212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl.DATABASE_TYPE_MYSQL.equals(databaseType)) { maxNrOfStatementsInBulkInsert = DEFAULT_MAX_NR_OF_STATEMENTS_BULK_INSERT_SQL_SERVER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3006/buggy-version/modules.activiti-engine.src.main.java.org.activiti.engine.impl.cfg.ProcessEngineConfigurationImpl.java", "BodyUseAPI": [], "Fixed commit": "b9ec2ede6e3b79f7879274b804a26c0bc425ce8f", "Url": "https://api.github.com/repos/Activiti/Activiti", "Date": "2016-08-24T15:46:08Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_schemaUtil.isStandby()) { java.lang.System.setProperty(\"cassandra.auto_bootstrap\", \"false\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6077/buggy-version/dbsvc.src.main.java.com.emc.storageos.db.server.impl.DbServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "b36a566749a81477d19b9549591a0b988abe4bac", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-02-10T21:19:10Z"},
{"Line": "=>2885", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mSearchingTarget)) { boolean foundMatch = false; if ((item.renderedSourceText) != null) { foundMatch = item.renderedSourceText.toString().toLowerCase().contains(matcher); }else if ((item.sourceText) != null) { foundMatch = item.sourceText.toString().toLowerCase().contains(matcher); if (foundMatch) { java.lang.CharSequence text = renderSourceText(item.sourceText, item.sourceTranslationFormat, null, item, false); foundMatch = text.toString().toLowerCase().contains(matcher); } } match = foundMatch || match; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/837/buggy-version/app.src.main.java.com.door43.translationstudio.ui.translate.ReviewModeAdapter.java", "BodyUseAPI": [], "Fixed commit": "7ff336be0d3c09264b318e535291d0c8df079b3c", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2017-03-02T19:44:36Z"},
{"Line": "=>2891", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.door43.translationstudio.ui.translate.ListItem>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.sourceText) != null) { foundMatch = item.sourceText.toString().toLowerCase().contains(matcher); if (foundMatch) { java.lang.CharSequence text = renderSourceText(item.sourceText, item.sourceTranslationFormat, null, item, false); foundMatch = text.toString().toLowerCase().contains(matcher); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/837/buggy-version/app.src.main.java.com.door43.translationstudio.ui.translate.ReviewModeAdapter.java", "BodyUseAPI": ["com.door43.translationstudio.ui.translate.ReviewModeAdapter.45.renderSourceText(item.sourceText,item.sourceTranslationFormat,<nulltype>,com.door43.translationstudio.ui.translate.ReviewModeAdapter.ReviewListItem,boolean)", "item.sourceText.toString()", "item.sourceText.toString().toLowerCase()", "item.sourceText.toString().toLowerCase().contains(java.lang.String)"], "Fixed commit": "7ff336be0d3c09264b318e535291d0c8df079b3c", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2017-03-02T19:44:36Z"},
{"Line": "=>2876", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.door43.translationstudio.ui.translate.ListItem>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.targetText) != null) { foundMatch = item.targetText.toString().toLowerCase().contains(matcher); if (foundMatch) { java.lang.CharSequence text = renderTargetText(item.targetText, item.targetTranslationFormat, item.ft, null, item); foundMatch = text.toString().toLowerCase().contains(matcher); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/837/buggy-version/app.src.main.java.com.door43.translationstudio.ui.translate.ReviewModeAdapter.java", "BodyUseAPI": ["item.targetText.toString()", "com.door43.translationstudio.ui.translate.ReviewModeAdapter.45.renderTargetText(item.targetText,item.targetTranslationFormat,item.ft,<nulltype>,com.door43.translationstudio.ui.translate.ReviewModeAdapter.ReviewListItem)", "item.targetText.toString().toLowerCase().contains(java.lang.String)", "item.targetText.toString().toLowerCase()"], "Fixed commit": "7ff336be0d3c09264b318e535291d0c8df079b3c", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2017-03-02T19:44:36Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.usfirst.frc.team2557.robot.subsystems.Camera.getValueArray(java.lang.String)", "org.usfirst.frc.team2557.robot.subsystems.Camera.getValueArray(java.lang.String)", "org.usfirst.frc.team2557.robot.subsystems.Camera.getValueArray(java.lang.String)", "org.usfirst.frc.team2557.robot.subsystems.Camera.getValueArray(java.lang.String)", "org.usfirst.frc.team2557.robot.subsystems.Camera.getValueArray(java.lang.String)", "org.usfirst.frc.team2557.robot.subsystems.Camera.getValueArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((((((centerXs.length) <= i) || ((centerYs.length) <= i)) || ((widths.length) <= i)) || ((heights.length) <= i)) || ((areas.length) <= i)) || ((soliditys.length) <= i)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5376/buggy-version/Robot.src.main.java.org.usfirst.frc.team2557.robot.subsystems.Camera.java", "BodyUseAPI": [], "Fixed commit": "9902444cb5ac33665d3e99e83a6295f4df715d71", "Url": "https://api.github.com/repos/FIRST-Team-2557-The-SOTABots/FRC_Robot", "Date": "2016-03-13T21:17:01Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((_event.getX()) < 0) || ((_event.getY()) < 0)) || ((_event.getX()) >= (bi_colors.getWidth()))) || ((_event.getY()) >= (bi_colors.getHeight()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4661/buggy-version/PaintNotes.src.main.java.control.util.CColorPanel.java", "BodyUseAPI": [], "Fixed commit": "501210e6a092d82570d34247fb71efc599b044dc", "Url": "https://api.github.com/repos/juliusHuelsmann/paint", "Date": "2015-07-23T18:08:10Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 0) { try { speed = java.lang.Float.parseFloat(args[0]); } catch (java.lang.NumberFormatException exception) { sender.sendMessage((((plugin.getPrefix()) + (org.bukkit.ChatColor.RED)) + \"Speed must be a number.\")); } }else { if (player != null) { player.setFlySpeed(0.1F); sender.sendMessage((((((plugin.getPrefix()) + (org.bukkit.ChatColor.GREEN)) + \"Reset \") + (player.getName())) + \"'s fly speed\")); player.sendMessage(((((plugin.getPrefix()) + (org.bukkit.ChatColor.GREEN)) + \"Your fly speed was reset by \") + (sender.getName()))); } return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2895/buggy-version/WaywardEssentials.src.main.java.net.wayward_realms.waywardessentials.command.SpeedCommand.java", "BodyUseAPI": ["java.lang.Float.parseFloat(java.lang.String)"], "Fixed commit": "00617073a8d39540bce5f4b905c934c2d7a59566", "Url": "https://api.github.com/repos/WaywardRealms/Wayward", "Date": "2014-06-16T20:26:28Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getRanges().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((response.getEntity().hasKnownSize()) && ((requestedRange.getSize()) > (response.getEntity().getAvailableSize()))) { requestedRange.setSize(Range.SIZE_MAX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2011/buggy-version/modules.org.restlet.src.org.restlet.engine.application.RangeFilter.java", "BodyUseAPI": ["org.restlet.data.Range.setSize(Range.SIZE_MAX)"], "Fixed commit": "87c4aa607d3edb8a5c3184527fdbc3cb81d2bfde", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-06-27T14:34:23Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BezetteMatchManager.findPlayerMatch(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((match.hasVictor()) > 0) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/9237/buggy-version/src.BezetteMatchManager.java", "BodyUseAPI": [], "Fixed commit": "c6a5fec8c0941e57eb447df9601e8bc04e381608", "Url": "https://api.github.com/repos/iVinicius/BezetteRMI", "Date": "2017-06-08T22:44:34Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.apache.ignite.internal.processors.cache.transactions.IgniteTxKey, java.util.Set<org.apache.ignite.internal.processors.cache.version.GridCacheVersion>>.get(e.getKey())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (txs == null) txRequestedKeys.put(e.getKey(), (txs = new java.util.HashSet()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/9196/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.transactions.TxDeadlockDetection.java", "BodyUseAPI": [], "Fixed commit": "cf3083bdb6f043c4dd02a6b028c563c6a2f87c04", "Url": "https://api.github.com/repos/BiryukovVA/ignite", "Date": "2017-10-03T13:41:18Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.type.datatype.ExpressSelect.getList()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((list.get(j)) instanceof com.type.datatype.ExpressDefined) { com.type.datatype.ExpressDefined member = ((com.type.datatype.ExpressDefined) (list.get(j))); member.setDataType(getDefinedType(defs, member.getDataTypeName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/561/buggy-version/src.com.neo4j.dao.ExpressSchemaDao.java", "BodyUseAPI": ["java.util.List<com.type.datatype.ExpressGeneralizedDataType>.get(int)"], "Fixed commit": "7cffd4a078426782f85aed2eb857a2de9e8f1205", "Url": "https://api.github.com/repos/reacherxu/NeoServer", "Date": "2016-03-16T08:17:25Z"},
{"Line": "=>613", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((validator) == null) { com.emc.storageos.volumecontroller.impl.smis.SmisStorageDevice._log.error(\"ERROR: VALIDATOR IS NOT SET IN THIS BEAN!!!! AVOIDING VALIDATOR!! COP-20450\"); com.emc.storageos.volumecontroller.impl.smis.SmisStorageDevice._log.error(\"ERROR: VALIDATOR IS NOT SET IN THIS BEAN!!!! AVOIDING VALIDATOR!! COP-20450\"); com.emc.storageos.volumecontroller.impl.smis.SmisStorageDevice._log.error(\"ERROR: VALIDATOR IS NOT SET IN THIS BEAN!!!! AVOIDING VALIDATOR!! COP-20450\"); com.emc.storageos.volumecontroller.impl.smis.SmisStorageDevice._log.error(\"ERROR: VALIDATOR IS NOT SET IN THIS BEAN!!!! AVOIDING VALIDATOR!! COP-20450\"); com.emc.storageos.volumecontroller.impl.smis.SmisStorageDevice._log.error(\"ERROR: VALIDATOR IS NOT SET IN THIS BEAN!!!! AVOIDING VALIDATOR!! COP-20450\"); com.emc.storageos.volumecontroller.impl.smis.SmisStorageDevice._log.error(\"ERROR: VALIDATOR IS NOT SET IN THIS BEAN!!!! AVOIDING VALIDATOR!! COP-20450\"); com.emc.storageos.volumecontroller.impl.smis.SmisStorageDevice._log.error(\"ERROR: VALIDATOR IS NOT SET IN THIS BEAN!!!! AVOIDING VALIDATOR!! COP-20450\"); }else { validator.deleteVolumes(storageSystem, volumes).validate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1987/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.smis.SmisStorageDevice.java", "BodyUseAPI": [], "Fixed commit": "175be592933794009ebe2be75a3db535e4601d64", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-07-20T21:08:00Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values) != null) { for (java.lang.String value : values) { java.lang.String[] valueParts = value.split(\"::\"); if (valueParts[0].equals(pathParts[2])) { return valueParts[1]; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2252/buggy-version/app.src.main.java.scal.io.liger.CardModel.java", "BodyUseAPI": [], "Fixed commit": "8cfda3184b95efc688ec9e6a7827c746897e948c", "Url": "https://api.github.com/repos/scalio/liger-prototype", "Date": "2014-07-21T23:25:20Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (fr != null) { fr.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4479/buggy-version/src.main.java.tk.bnbm.clockdrive4j.model.Road.java", "BodyUseAPI": ["java.io.FileReader.close()"], "Fixed commit": "70fe74097b7b59cdac79f300b34262ed18f9a8c0", "Url": "https://api.github.com/repos/kazuhito-m/clockdrive4j", "Date": "2013-02-07T08:30:24Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (br != null) { br.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4479/buggy-version/src.main.java.tk.bnbm.clockdrive4j.model.Road.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "70fe74097b7b59cdac79f300b34262ed18f9a8c0", "Url": "https://api.github.com/repos/kazuhito-m/clockdrive4j", "Date": "2013-02-07T08:30:24Z"},
{"Line": "=>517", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((previousOnFocusChangeListener) != null) { previousOnFocusChangeListener.onFocusChange(view, hasFocus); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6152/buggy-version/marqueeto.src.main.java.com.github.guilhermesgb.marqueeto.LabelledMarqueeEditText.java", "BodyUseAPI": [], "Fixed commit": "ed8b3e28e31fe517f378f2c1efc31730edabef23", "Url": "https://api.github.com/repos/guilhermesgb/marqueeto", "Date": "2015-12-15T04:57:36Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getSource()) instanceof org.mage.card.arcane.CardPanel) { this.hideDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5950/buggy-version/Mage.Client.src.main.java.mage.client.dialog.ShowCardsDialog.java", "BodyUseAPI": [], "Fixed commit": "e2625fd60e7c611e49223264c33e48aa2280ce29", "Url": "https://api.github.com/repos/markedagain/mage", "Date": "2015-08-18T10:29:57Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toCharArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fullTextChar[beginOfLineCursor]) != '#') { for (int j = beginOfLineCursor; j < (fullTextChar.length); j++) { model.append(fullTextChar[j]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4224/buggy-version/src.ciir.umass.edu.learning.tree.LambdaMART.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)"], "Fixed commit": "d6510187063135fc826a2d7a1f8a097cd5985828", "Url": "https://api.github.com/repos/o19s/RankyMcRankFace", "Date": "2017-02-04T19:52:12Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((connection == null) || (status == null)) || (username == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7883/buggy-version/src.sourcePackage.Database.java", "BodyUseAPI": [], "Fixed commit": "a1315b0f1e97b31ef8452c7d78a7f7cd2e5e8962", "Url": "https://api.github.com/repos/IKhaduri/QuizWebsite", "Date": "2016-06-14T12:01:49Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection == null) || (username == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7883/buggy-version/src.sourcePackage.Database.java", "BodyUseAPI": [], "Fixed commit": "a1315b0f1e97b31ef8452c7d78a7f7cd2e5e8962", "Url": "https://api.github.com/repos/IKhaduri/QuizWebsite", "Date": "2016-06-14T12:01:49Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.miningmark48.miscconfigs.handler.ConfigurationHandler.sendChatMessageOnce) { if ((tag.getString(((com.miningmark48.miscconfigs.reference.Reference.MOD_ID) + \"doChatMessage\"))) == \"\") { tag.setString(((com.miningmark48.miscconfigs.reference.Reference.MOD_ID) + \"doChatMessage\"), \"send\"); } if (com.miningmark48.miscconfigs.handler.ConfigurationHandler.sendChatMessageOnce) { if ((tag.getString(((com.miningmark48.miscconfigs.reference.Reference.MOD_ID) + \"doChatMessage\"))) == \"send\") { sendChatMessage(e.player); tag.setString(((com.miningmark48.miscconfigs.reference.Reference.MOD_ID) + \"doChatMessage\"), \"noSend\"); } } }else { sendChatMessage(e.player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3352/buggy-version/src.main.java.com.miningmark48.miscconfigs.event.EventJoinGame.java", "BodyUseAPI": [], "Fixed commit": "daa1d430c63811ace5867a1b27c3269481782346", "Url": "https://api.github.com/repos/MiningMark48/Misc-Configs", "Date": "2016-04-22T03:13:17Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tag instanceof net.sharkfw.knowledgeBase.inmemory.SNSemanticTag) { snTag = ((net.sharkfw.knowledgeBase.inmemory.SNSemanticTag) (tag)); }else { snTag = net.sharkfw.knowledgeBase.inmemory.InMemoSharkKB.createInMemoCopyToSNSemanticTag(tag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7702/buggy-version/src.java.core.net.sharkfw.knowledgeBase.inmemory.InMemoSemanticNet.java", "BodyUseAPI": ["net.sharkfw.knowledgeBase.inmemory.InMemoSharkKB.createInMemoCopyToSNSemanticTag(net.sharkfw.knowledgeBase.inmemory.SemanticTag)"], "Fixed commit": "55ac55361627642ef7eca6104289f614069bbb3f", "Url": "https://api.github.com/repos/SharedKnowledge/SharkFW", "Date": "2014-04-09T07:23:55Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node instanceof org.eclipse.php.internal.core.ast.rewrite.Assignment) { prefix = \"<?php\\n\"; suffix = \";\"; }else if ((node instanceof org.eclipse.php.internal.core.ast.rewrite.Expression) && ((node.getType()) != (ASTNode.SINGLE_FIELD_DECLARATION))) { node.getClass(); }else if (node instanceof org.eclipse.php.internal.core.ast.rewrite.BodyDeclaration) { }else if (node instanceof org.eclipse.php.internal.core.ast.rewrite.Comment) { prefix += \"class x{\"; suffix = \"}\"; }else { if ((node.getType()) == (ASTNode.CATCH_CLAUSE)) { prefix += \"try {}\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1920/buggy-version/plugins.org.eclipse.php.core.src.org.eclipse.php.internal.core.ast.rewrite.ASTRewriteFormatter.java", "BodyUseAPI": ["org.eclipse.php.internal.core.ast.rewrite.ASTNode.getType()", "org.eclipse.php.internal.core.ast.rewrite.ASTNode.getClass()", "org.eclipse.php.internal.core.ast.rewrite.ASTNode.getType()"], "Fixed commit": "47758c3872bbf19eb3e8f7de5198e8099bb44851", "Url": "https://api.github.com/repos/zendtech/pdt", "Date": "2013-10-14T17:17:18Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.opengamma.engine.value.ValueRequirement.getConstraint(ISDAFunctionConstants.ISDA_BUCKET_TENORS)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bucketTenors == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8949/buggy-version/projects.OG-Financial.src.main.java.com.opengamma.financial.analytics.model.credit.ISDARiskMetricsVanillaCDSFunction.java", "BodyUseAPI": [], "Fixed commit": "f58d763ed35efa19afa6807f42484fd7db5803c4", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2013-05-09T10:21:05Z"},
{"Line": "=>856", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.connectsdk.service.DeviceService.getService(java.lang.Class<? extends com.connectsdk.service.DeviceService>,com.connectsdk.service.config.ServiceDescription,com.connectsdk.service.config.ServiceConfig)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (deviceService != null) { deviceService.setServiceDescription(desc); device.addService(deviceService); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8649/buggy-version/core.src.com.connectsdk.discovery.DiscoveryManager.java", "BodyUseAPI": ["com.connectsdk.device.ConnectableDevice.addService(com.connectsdk.service.DeviceService)", "com.connectsdk.service.DeviceService.setServiceDescription(com.connectsdk.service.config.ServiceDescription)"], "Fixed commit": "1fbd2ecc95fb172c72f405941e206e87fd692a17", "Url": "https://api.github.com/repos/bladeFury/Connect-SDK-Android-Lite", "Date": "2014-08-20T18:17:46Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ctx.getBaseLocator()) == null) { throw new net.ontopia.topicmaps.db2tm.DB2TMException(((\"Cannot resolve locator '\" + relloc) + \"', missing a base locator\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1965/buggy-version/ontopia-db2tm.src.main.java.net.ontopia.topicmaps.db2tm.Utils.java", "BodyUseAPI": [], "Fixed commit": "49aed7e72a54bba1b8700872fd5d708ff3ecc22f", "Url": "https://api.github.com/repos/ontopia/ontopia", "Date": "2017-05-09T17:40:55Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ctx.getBaseLocator()) == null) { throw new net.ontopia.topicmaps.db2tm.DB2TMException(((\"Cannot resolve locator '\" + value) + \"', missing a base locator\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1965/buggy-version/ontopia-db2tm.src.main.java.net.ontopia.topicmaps.db2tm.Utils.java", "BodyUseAPI": [], "Fixed commit": "49aed7e72a54bba1b8700872fd5d708ff3ecc22f", "Url": "https://api.github.com/repos/ontopia/ontopia", "Date": "2017-05-09T17:40:55Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.OfflinePlayer.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((donor.getName().length()) < 14) donor.setPlayerListName(((org.bukkit.ChatColor.BLUE) + (donor.getName())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/37/buggy-version/src.japura.MonoPerms.MonoPerms.java", "BodyUseAPI": ["org.bukkit.entity.Player.setPlayerListName(((org.bukkit.ChatColor.BLUE) + (donor.getName())))", "org.bukkit.entity.Player.getName()"], "Fixed commit": "b22b001ce64248f3e6d5ef7777f2469aa22245c3", "Url": "https://api.github.com/repos/monofuel/MonoMods", "Date": "2014-04-28T22:11:28Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["japura.MonoPerms.PermData.getConf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((java.lang.String) (permList.get(i))).length()) > 16) { japura.MonoPerms.MonoPerms.log((\"got invalid username \" + (permList.get(i)))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/37/buggy-version/src.japura.MonoPerms.MonoPerms.java", "BodyUseAPI": ["japura.MonoPerms.MonoPerms.log((\"got invalid username \" + (permList.get(i))))", "org.json.simple.JSONArray.get(int)"], "Fixed commit": "b22b001ce64248f3e6d5ef7777f2469aa22245c3", "Url": "https://api.github.com/repos/monofuel/MonoMods", "Date": "2014-04-28T22:11:28Z"},
{"Line": "=>838", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == 2) { java.lang.String year = eventLiTextSplit[0].trim(); if ((year.length()) > 4) year = year.substring(0, 4); dblpJournal.put(\"year\", year); for (org.jsoup.nodes.Element volumeElement : eventLiChildren) { volumeMap.put(volumeElement.text().trim(), volumeElement.absUrl(\"href\")); } dblpJournal.put(\"volume\", volumeMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7426/buggy-version/src.main.java.de.rwth.i9.palm.datasetcollect.service.DblpEventCollection.java", "BodyUseAPI": [], "Fixed commit": "c5f1289b7eb3682c372aa16c71bd644e70e2ab26", "Url": "https://api.github.com/repos/palm-toolkit/palm-core", "Date": "2016-03-15T08:34:16Z"},
{"Line": "=>796", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.text()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(eventLiText.toLowerCase().startsWith(\"volume\"))) type = 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7426/buggy-version/src.main.java.de.rwth.i9.palm.datasetcollect.service.DblpEventCollection.java", "BodyUseAPI": [], "Fixed commit": "c5f1289b7eb3682c372aa16c71bd644e70e2ab26", "Url": "https://api.github.com/repos/palm-toolkit/palm-core", "Date": "2016-03-15T08:34:16Z"},
{"Line": "=>810", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((eventLiTextSplit.length) != 2) { eventLiTextSplit = eventLiText.split(\",\"); if ((eventLiTextSplit.length) != 2) { return java.util.Collections.emptyMap(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7426/buggy-version/src.main.java.de.rwth.i9.palm.datasetcollect.service.DblpEventCollection.java", "BodyUseAPI": [], "Fixed commit": "c5f1289b7eb3682c372aa16c71bd644e70e2ab26", "Url": "https://api.github.com/repos/palm-toolkit/palm-core", "Date": "2016-03-15T08:34:16Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outNode1.getColor) == (Node.Color.GRAY)) context.getCounter(MoreIterations.numberOfIterations).increment(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4535/buggy-version/st_Connectivity.PEP_DualRoot.st_Dual_PEPReducer.java", "BodyUseAPI": [], "Fixed commit": "33a028f8d8f9febf14af415070678a0f26acc1b4", "Url": "https://api.github.com/repos/metastableB/bigDataExperiments", "Date": "2015-07-11T01:29:27Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.maps.GoogleMap.getMyLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (loc != null) { updatedLocationHandler(loc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/9147/buggy-version/app.src.main.java.com.hackzurich.captaing.captaing.MainActivity.java", "BodyUseAPI": ["com.hackzurich.captaing.captaing.MainActivity.2.updatedLocationHandler(android.location.Location)"], "Fixed commit": "06c53af2fc28af5745b1ae3a87467d35d71893af", "Url": "https://api.github.com/repos/andreas128/CaptainG", "Date": "2015-10-03T23:28:10Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ImageSliderAdapter.mPhotos) != null) { com.squareup.picasso.Picasso.with(getContext()).load(com.anca.lazymap.Utils.UrlUtils.getPlacePhoto(ImageSliderAdapter.mPhotos.get(mPhotoNum).getPhotoReference(), getResources().getString(R.string.google_web_service_key))).into(mImageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2424/buggy-version/app.src.main.java.com.anca.lazymap.Slider.ImageSliderFragment.java", "BodyUseAPI": [], "Fixed commit": "dd2845a9d75221f77c562f7cf6416e0034faadbc", "Url": "https://api.github.com/repos/ducbm95/LazyMap", "Date": "2016-01-27T18:34:06Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.orcid.jaxb.model.message.Funding.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((source.getSourceOrcid()) != null) result.setSource(source.retrieveSourcePath());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1708/buggy-version/orcid-core.src.main.java.org.orcid.pojo.ajaxForm.FundingForm.java", "BodyUseAPI": ["org.orcid.jaxb.model.message.Source.retrieveSourcePath()", "org.orcid.pojo.ajaxForm.FundingForm.setSource(source.retrieveSourcePath())"], "Fixed commit": "403b27857b83c0fc460be024d0c76de3815b8f2b", "Url": "https://api.github.com/repos/ORCID/ORCID-Source", "Date": "2014-12-05T20:18:33Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((point) == null) return gameObject.tower.MovingObject.AT_END;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8050/buggy-version/src.gameObject.tower.MovingObject.java", "BodyUseAPI": [], "Fixed commit": "83fbc67dfef692310049fbe4e3700977e1122d50", "Url": "https://api.github.com/repos/lab712-kao/pre_TowerDefender", "Date": "2015-03-23T05:47:05Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((latObj != null) && (lonObj != null)) { java.lang.Double lat; java.lang.Double lon; if (latObj instanceof java.lang.Double) { lat = ((java.lang.Double) (latObj)); }else { if (latObj instanceof java.lang.String) { lat = new java.lang.Double(((java.lang.String) (latObj))); }else { lat = null; } } if (lonObj instanceof java.lang.Double) { lon = ((java.lang.Double) (lonObj)); }else { if (lonObj instanceof java.lang.String) { lon = new java.lang.Double(((java.lang.String) (lonObj))); }else { lon = null; } } if ((lat != null) && (lon != null)) { geometry = geometryFactory.createPoint(new com.vividsolutions.jts.geom.Coordinate(lon, lat)); }else { geometry = null; } }else { geometry = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/416/buggy-version/gt-elasticsearch.src.main.java.mil.nga.giat.data.elasticsearch.ElasticParserUtil.java", "BodyUseAPI": [], "Fixed commit": "814e13ed3bbe0cb73583aa5d07ca2d826f884aa2", "Url": "https://api.github.com/repos/orofarne/elasticgeo", "Date": "2015-11-11T21:50:34Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(morphium.isAutoValuesEnabledForThread())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4531/buggy-version/src.de.caluga.morphium.query.QueryImpl.java", "BodyUseAPI": [], "Fixed commit": "0685c54dc2d6dd73d58c4d81b939e37453d45579", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2014-04-24T11:35:25Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.runtime.IPath.removeFirstSegments(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((removeFirstSegments.segmentCount()) == 0) { return container; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3042/buggy-version/plugins.org.python.pydev.src.org.python.pydev.editorinput.PySourceLocatorBase.java", "BodyUseAPI": [], "Fixed commit": "ac1e5308e0df91daa3f4cefdf9bb8b2ac609e409", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2014-02-02T10:27:53Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.runtime.IPath.removeFirstSegments(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((removingFirstSegments.segmentCount()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3042/buggy-version/plugins.org.python.pydev.src.org.python.pydev.editorinput.PySourceLocatorBase.java", "BodyUseAPI": [], "Fixed commit": "ac1e5308e0df91daa3f4cefdf9bb8b2ac609e409", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2014-02-02T10:27:53Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.IWorkbenchPage.findViewReference(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((partRef.isFastView()) || ((org.eclipse.ui.IWorkbenchPage.STATE_MINIMIZED) == (page.getPartState(partRef)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/383/buggy-version/org.eclipse.debug.ui.ui.org.eclipse.debug.internal.ui.views.ViewContextService.java", "BodyUseAPI": [], "Fixed commit": "8504bf5213a6a65738c64c809ba86003e8d1129a", "Url": "https://api.github.com/repos/eclipse/eclipse.platform.debug", "Date": "2014-10-06T14:43:43Z"},
{"Line": "=>1078", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((posFondo[lastFondo]) > (screenWidth)) { for (int i = 0; i < ((com.project.main.GamePreferences.MAX_TEXTURE_BACKGROUND) - 1); i++) { if ((posFondo[i]) <= (-(screenWidth))) { posFondo[i] = screenWidth; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2591/buggy-version/src.com.android.view.OpenGLRenderer.java", "BodyUseAPI": [], "Fixed commit": "190777da8079e56803c8762db5a9df444a001167", "Url": "https://api.github.com/repos/SSII201314/SSII1314DeformedInvaders", "Date": "2014-04-06T18:27:21Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getPlayer(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.skyost.jail.BukkitJail.isJailed(player)) { try { com.skyost.jail.BukkitJail.getBukkitJailConfig().JailedPlayers.remove(playername); com.skyost.jail.BukkitJail.getBukkitJailConfig().save(); if ((player != null) && (player.isOnline())) { player.teleport(com.skyost.jail.util.Utils.getMainWorld().getSpawnLocation()); player.sendMessage(com.skyost.jail.BukkitJail.getBukkitJailConfig().JailedMessages_5); } } catch (java.lang.Exception ex) { ex.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3762/buggy-version/src.com.skyost.jail.tasks.ReleasePlayer.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(com.skyost.jail.BukkitJail.getBukkitJailConfig().JailedMessages_5)", "org.bukkit.entity.Player.teleport(com.skyost.jail.util.Utils.getMainWorld().getSpawnLocation())", "org.bukkit.entity.Player.isOnline()"], "Fixed commit": "e8f3d9f7c72686e156912f4db7eda50dc2db0f56", "Url": "https://api.github.com/repos/Skyost/BukkitJail", "Date": "2013-10-06T11:44:45Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((doc.getFieldValues(ImageDTO.PARAMETER_ASSOCIATION_VALUE)) != null) { for (java.lang.Object obj : doc.getFieldValues(ImageDTO.PARAMETER_ASSOCIATION_VALUE)) { paramValuess.add(obj.toString()); } }else { logger.warn(((\"PARAMETER_ASSOCIATION_NAME \" + (org.mousephenotype.cda.solr.service.dto.ImageDTO.PARAMETER_ASSOCIATION_NAME)) + \" has no associated value!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5006/buggy-version/data-model-solr.src.main.java.org.mousephenotype.cda.solr.service.ImageService.java", "BodyUseAPI": ["org.apache.solr.common.SolrDocument.getFieldValues(ImageDTO.PARAMETER_ASSOCIATION_VALUE)"], "Fixed commit": "d25ddb6062e03c9330e00069f49959a2db4624ed", "Url": "https://api.github.com/repos/mpi2/PhenotypeData", "Date": "2015-12-10T14:27:24Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((float) (status.treesSize())) / (analysis.Main.TREES_PER_GARDENER)) > (status.gardenersSize())) { throw new java.lang.RuntimeException(\"Illegal tree purchase\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7395/buggy-version/src.analysis.Main.java", "BodyUseAPI": [], "Fixed commit": "95ec73c4c0216e05da45aaa550d0b079d1350abc", "Url": "https://api.github.com/repos/Mshnik/battlecode-p", "Date": "2017-01-14T23:40:47Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needGardener) { treesToBuy = java.lang.Math.min(treesToBuy, (treesBeforeNextGardener - treeBoughtSinceLastGardener)); }else { treesToBuy = java.lang.Math.min(treesToBuy, (treeCount - (status.treesSize()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7395/buggy-version/src.analysis.Main.java", "BodyUseAPI": [], "Fixed commit": "95ec73c4c0216e05da45aaa550d0b079d1350abc", "Url": "https://api.github.com/repos/Mshnik/battlecode-p", "Date": "2017-01-14T23:40:47Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cursor.getCount()) > 0) { id = cursor.getColumnIndex(PK_ID); name = cursor.getColumnIndex(NAME_COL); ingredients = cursor.getColumnIndex(INGREDIENTS_COL); description = cursor.getColumnIndex(DESCRIPTION_COL); notes = cursor.getColumnIndex(NOTES_COL); return new rstead.bgoff.mshultz.therecipebook.Recipe(java.lang.Integer.parseInt(cursor.getString(id)), cursor.getString(name), cursor.getString(imageLink), cursor.getString(ingredients), cursor.getString(description), cursor.getString(notes)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8278/buggy-version/app.src.main.java.rstead.bgoff.mshultz.therecipebook.DatabaseHandler.java", "BodyUseAPI": ["android.database.Cursor.getString(int)", "android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.getString(int)", "android.database.Cursor.getString(int)", "android.database.Cursor.getString(int)", "android.database.Cursor.getColumnIndex(java.lang.String)", "android.database.Cursor.getString(int)", "java.lang.Integer.parseInt(cursor.getString(id))", "android.database.Cursor.getString(int)", "android.database.Cursor.getColumnIndex(java.lang.String)"], "Fixed commit": "e5f056a1bb5e10f5d1b794ac808046abd8b8ce0c", "Url": "https://api.github.com/repos/MShultz/TheRecipeBook", "Date": "2017-05-03T02:39:32Z"},
{"Line": "=>794", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((animator_) != null) && (animator_.isRunning())) { android.util.Log.i(com.playPATHngqi.hoxchess.BoardView.TAG, \"Reset board: Move animation is running. End it now!\"); animator_.end(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8724/buggy-version/Android_studio.app.src.main.java.com.playPATHngqi.hoxchess.BoardView.java", "BodyUseAPI": ["android.animation.ObjectAnimator.end()"], "Fixed commit": "879a1e152aac737510fdc2dc9c0834c9d3c28fb1", "Url": "https://api.github.com/repos/huygithub/hoxChess", "Date": "2016-04-15T00:11:57Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mContentView) != null) && ((modalWindow) != null)) { ((android.view.ViewGroup) (mContentView.getParent())).removeView(mContentView); ((android.view.ViewGroup) (modalWindow.getParent())).removeView(modalWindow); if ((!itemSelected) && ((this.mOnDismissCallback) != null)) { mOnDismissCallback.call(); this.mOnDismissCallback = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7331/buggy-version/library.src.main.java.com.shehabic.droppy.DroppyMenuPopup.java", "BodyUseAPI": [], "Fixed commit": "42f67ea05a5bcb4e5d4d6394d80d8c6c2d544168", "Url": "https://api.github.com/repos/shehabic/Droppy", "Date": "2017-05-07T18:17:23Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencron.server.service.UserService.queryUserById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { return \"/error/404\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8595/buggy-version/opencron-server.src.main.java.org.opencron.server.controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "9641392790e467bd02a69f3b48884a48334e5502", "Url": "https://api.github.com/repos/royalosyin/opencron", "Date": "2017-04-22T15:01:37Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event instanceof org.asteriskjava.manager.QueueEvent) { handleEvent(((org.asteriskjava.manager.QueueEvent) (event))); }else if (event instanceof org.asteriskjava.manager.RegistrationsCompleteEvent) { handleEvent(((org.asteriskjava.manager.RegistrationsCompleteEvent) (event))); }else if (event instanceof org.asteriskjava.manager.RegistryEntryEvent) { handleEvent(((org.asteriskjava.manager.RegistryEntryEvent) (event))); }else if (event instanceof org.asteriskjava.manager.RegistryEvent) { handleEvent(((org.asteriskjava.manager.RegistryEvent) (event))); }else if (event instanceof org.asteriskjava.manager.ReloadEvent) { handleEvent(((org.asteriskjava.manager.ReloadEvent) (event))); }else if (event instanceof org.asteriskjava.manager.RenameEvent) { handleEvent(((org.asteriskjava.manager.RenameEvent) (event))); }else if (event instanceof org.asteriskjava.manager.ShutdownEvent) { handleEvent(((org.asteriskjava.manager.ShutdownEvent) (event))); }else if (event instanceof org.asteriskjava.manager.UserEvent) { handleEvent(((org.asteriskjava.manager.UserEvent) (event))); }else if (event instanceof org.asteriskjava.manager.AgentCompleteEvent) { handleEvent(((org.asteriskjava.manager.AgentCompleteEvent) (event))); }else if (event instanceof org.asteriskjava.manager.AgentConnectEvent) { handleEvent(((org.asteriskjava.manager.AgentConnectEvent) (event))); }else if (event instanceof org.asteriskjava.manager.AgentDumpEvent) { handleEvent(((org.asteriskjava.manager.AgentDumpEvent) (event))); }else if (event instanceof org.asteriskjava.manager.FaxReceivedEvent) { handleEvent(((org.asteriskjava.manager.FaxReceivedEvent) (event))); }else if (event instanceof org.asteriskjava.manager.NewCallerIdEvent) { handleEvent(((org.asteriskjava.manager.NewCallerIdEvent) (event))); }else if (event instanceof org.asteriskjava.manager.HangupEvent) { handleEvent(((org.asteriskjava.manager.HangupEvent) (event))); }else if (event instanceof org.asteriskjava.manager.NewChannelEvent) { handleEvent(((org.asteriskjava.manager.NewChannelEvent) (event))); }else if (event instanceof org.asteriskjava.manager.NewStateEvent) { handleEvent(((org.asteriskjava.manager.NewStateEvent) (event))); }else if (event instanceof org.asteriskjava.manager.MeetMeJoinEvent) { handleEvent(((org.asteriskjava.manager.MeetMeJoinEvent) (event))); }else if (event instanceof org.asteriskjava.manager.DongleNewSMSBase64Event) { handleEvent(((org.asteriskjava.manager.DongleNewSMSBase64Event) (event))); }else if (event instanceof org.asteriskjava.manager.DongleCENDEvent) { handleEvent(((org.asteriskjava.manager.DongleCENDEvent) (event))); }else if (event instanceof org.asteriskjava.manager.DongleCallStateChangeEvent) { handleEvent(((org.asteriskjava.manager.DongleCallStateChangeEvent) (event))); }else if (event instanceof org.asteriskjava.manager.DongleNewSMSEvent) { handleEvent(((org.asteriskjava.manager.DongleNewSMSEvent) (event))); }else if (event instanceof org.asteriskjava.manager.DongleNewCMGREvent) { handleEvent(((org.asteriskjava.manager.DongleNewCMGREvent) (event))); }else if (event instanceof org.asteriskjava.manager.DongleStatusEvent) { handleEvent(((org.asteriskjava.manager.DongleStatusEvent) (event))); }else if (event instanceof org.asteriskjava.manager.DongleDeviceEntryEvent) { handleEvent(((org.asteriskjava.manager.DongleDeviceEntryEvent) (event))); }else if (event instanceof org.asteriskjava.manager.MeetMeLeaveEvent) { handleEvent(((org.asteriskjava.manager.MeetMeLeaveEvent) (event))); }else if (event instanceof org.asteriskjava.manager.MeetMeMuteEvent) { handleEvent(((org.asteriskjava.manager.MeetMeMuteEvent) (event))); }else if (event instanceof org.asteriskjava.manager.MeetMeTalkingEvent) { handleEvent(((org.asteriskjava.manager.MeetMeTalkingEvent) (event))); }else if (event instanceof org.asteriskjava.manager.ParkedCallGiveUpEvent) { handleEvent(((org.asteriskjava.manager.ParkedCallGiveUpEvent) (event))); }else if (event instanceof org.asteriskjava.manager.ParkedCallTimeOutEvent) { handleEvent(((org.asteriskjava.manager.ParkedCallTimeOutEvent) (event))); }else if (event instanceof org.asteriskjava.manager.UnparkedCallEvent) { handleEvent(((org.asteriskjava.manager.UnparkedCallEvent) (event))); }else if (event instanceof org.asteriskjava.manager.QueueMemberAddedEvent) { handleEvent(((org.asteriskjava.manager.QueueMemberAddedEvent) (event))); }else if (event instanceof org.asteriskjava.manager.QueueMemberPausedEvent) { handleEvent(((org.asteriskjava.manager.QueueMemberPausedEvent) (event))); }else if (event instanceof org.asteriskjava.manager.QueueMemberRemovedEvent) { handleEvent(((org.asteriskjava.manager.QueueMemberRemovedEvent) (event))); }else if (event instanceof org.asteriskjava.manager.AgentsCompleteEvent) { handleEvent(((org.asteriskjava.manager.AgentsCompleteEvent) (event))); }else if (event instanceof org.asteriskjava.manager.AgentsEvent) { handleEvent(((org.asteriskjava.manager.AgentsEvent) (event))); }else if (event instanceof org.asteriskjava.manager.DbGetResponseEvent) { handleEvent(((org.asteriskjava.manager.DbGetResponseEvent) (event))); }else if (event instanceof org.asteriskjava.manager.BridgeEvent) { handleEvent(((org.asteriskjava.manager.BridgeEvent) (event))); }else if (event instanceof org.asteriskjava.manager.OriginateResponseEvent) { handleEvent(((org.asteriskjava.manager.OriginateResponseEvent) (event))); }else if (event instanceof org.asteriskjava.manager.ParkedCallEvent) { handleEvent(((org.asteriskjava.manager.ParkedCallEvent) (event))); }else if (event instanceof org.asteriskjava.manager.ParkedCallsCompleteEvent) { handleEvent(((org.asteriskjava.manager.ParkedCallsCompleteEvent) (event))); }else if (event instanceof org.asteriskjava.manager.PeerEntryEvent) { handleEvent(((org.asteriskjava.manager.PeerEntryEvent) (event))); }else if (event instanceof org.asteriskjava.manager.PeerlistCompleteEvent) { handleEvent(((org.asteriskjava.manager.PeerlistCompleteEvent) (event))); }else if (event instanceof org.asteriskjava.manager.QueueEntryEvent) { handleEvent(((org.asteriskjava.manager.QueueEntryEvent) (event))); }else if (event instanceof org.asteriskjava.manager.QueueMemberEvent) { handleEvent(((org.asteriskjava.manager.QueueMemberEvent) (event))); }else if (event instanceof org.asteriskjava.manager.QueueMemberStatusEvent) { handleEvent(((org.asteriskjava.manager.QueueMemberStatusEvent) (event))); }else if (event instanceof org.asteriskjava.manager.QueueParamsEvent) { handleEvent(((org.asteriskjava.manager.QueueParamsEvent) (event))); }else if (event instanceof org.asteriskjava.manager.QueueStatusCompleteEvent) { handleEvent(((org.asteriskjava.manager.QueueStatusCompleteEvent) (event))); }else if (event instanceof org.asteriskjava.manager.StatusCompleteEvent) { handleEvent(((org.asteriskjava.manager.StatusCompleteEvent) (event))); }else if (event instanceof org.asteriskjava.manager.StatusEvent) { handleEvent(((org.asteriskjava.manager.StatusEvent) (event))); }else if (event instanceof org.asteriskjava.manager.ZapShowChannelsCompleteEvent) { handleEvent(((org.asteriskjava.manager.ZapShowChannelsCompleteEvent) (event))); }else if (event instanceof org.asteriskjava.manager.DahdiShowChannelsCompleteEvent) { handleEvent(((org.asteriskjava.manager.DahdiShowChannelsCompleteEvent) (event))); }else if (event instanceof org.asteriskjava.manager.ZapShowChannelsEvent) { handleEvent(((org.asteriskjava.manager.ZapShowChannelsEvent) (event))); }else if (event instanceof org.asteriskjava.manager.DahdiShowChannelsEvent) { handleEvent(((org.asteriskjava.manager.DahdiShowChannelsEvent) (event))); }else if (event instanceof org.asteriskjava.manager.CoreShowChannelEvent) { handleEvent(((org.asteriskjava.manager.CoreShowChannelEvent) (event))); }else if (event instanceof org.asteriskjava.manager.CoreShowChannelsCompleteEvent) { handleEvent(((org.asteriskjava.manager.CoreShowChannelsCompleteEvent) (event))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2601/buggy-version/src.main.java.org.asteriskjava.manager.AbstractManagerEventListener.java", "BodyUseAPI": [], "Fixed commit": "e152245580515c4937dc490b23b801f6af401f66", "Url": "https://api.github.com/repos/scgm11/asterisk-java", "Date": "2014-11-14T09:32:35Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencms.file.CmsObject.readParentFolder(resource.getStructureId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parentFolder == null) { return VISIBILITY_INVISIBLE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3667/buggy-version/src.org.opencms.ui.contextmenu.CmsStandardVisibilityCheck.java", "BodyUseAPI": [], "Fixed commit": "ef729ff8816b61c12bb8fdb041c036260e0f459f", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2017-07-28T10:13:09Z"},
{"Line": "=>9679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.server.wm.WindowList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((w.mExiting) && ((w.mLastFreezeDuration) > (com.android.server.wm.WindowManagerService.WINDOW_EXITING_TIME_OUT))) && ((w.mInputChannel) == null)) { removeWindowInnerLocked(w.mSession, w); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7432/buggy-version/services.core.java.com.android.server.wm.WindowManagerService.java", "BodyUseAPI": ["com.android.server.wm.WindowManagerService.removeWindowInnerLocked(w.mSession,com.android.server.wm.WindowState)"], "Fixed commit": "60f4940542032c67d6db56d06d8339a9d59c89d3", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-base", "Date": "2015-03-31T11:04:47Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((listView) == null) || (state == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7260/buggy-version/src.de.azapps.mirakel.ListFragment.java", "BodyUseAPI": [], "Fixed commit": "e5cea9c696b2365f33ebe830afe72858d10c715c", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-04-21T13:25:30Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((listView) == null) || (state == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7260/buggy-version/src.de.azapps.mirakel.TasksFragment.java", "BodyUseAPI": [], "Fixed commit": "e5cea9c696b2365f33ebe830afe72858d10c715c", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-04-21T13:25:30Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ifLiked(rating.getUserId(), rating.getQuestionId()))) { ratingRepository.save(rating); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2559/buggy-version/src.main.java.ua.f13group.KnowHub.service.jpaService.JpaRatingService.java", "BodyUseAPI": ["ua.f13group.KnowHub.repository.RatingRepository.save(ua.f13group.KnowHub.domain.Rating)"], "Fixed commit": "52ff7b42ae5be93c7ca9c3827534457257c8a197", "Url": "https://api.github.com/repos/F13Group/KnowHub", "Date": "2015-10-28T14:29:47Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shinemo.mydb.meta.service.DataBaseService.find(com.shinemo.mydb.meta.domain.DataBaseQuery)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (((ret != null) && (ret.isSuccess())) && ((ret.getValue()) != null)) { model.addAttribute(\"ret\", ret.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/9055/buggy-version/mydb-web.src.main.java.com.shinemo.mydb.websql.controller.WebSqlController.java", "BodyUseAPI": ["org.springframework.ui.Model.addAttribute(java.lang.String,ret.getValue())", "com.shinemo.mydb.common.Result<java.util.List<com.shinemo.mydb.meta.domain.DataBaseDO>>.getValue()"], "Fixed commit": "110f3a5144f39fafb556fd6f06d383a78dc51fad", "Url": "https://api.github.com/repos/zhileihuang/mydb", "Date": "2015-07-12T09:15:09Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.shinemo.mydb.meta.service.DataBaseService.find(com.shinemo.mydb.meta.domain.DataBaseQuery)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (((ret != null) && (ret.isSuccess())) && ((ret.getValue()) != null)) { model.addAttribute(\"ret\", ret.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/9055/buggy-version/mydb-web.src.main.java.com.shinemo.mydb.websql.controller.SqlTaskController.java", "BodyUseAPI": ["com.shinemo.mydb.common.Result<java.util.List<com.shinemo.mydb.meta.domain.DataBaseDO>>.getValue()", "org.springframework.ui.Model.addAttribute(java.lang.String,ret.getValue())"], "Fixed commit": "110f3a5144f39fafb556fd6f06d383a78dc51fad", "Url": "https://api.github.com/repos/zhileihuang/mydb", "Date": "2015-07-12T09:15:09Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getItemId()) == (R.id.items_view_menu_item)) { com.osama.cryptofmroot.filemanager.utils.SharedData.GRID_LAYOUTMANAGER = !(com.osama.cryptofmroot.filemanager.utils.SharedData.GRID_LAYOUTMANAGER); mCurrentFragment.toggleLayout(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/847/buggy-version/app.src.main.java.com.osama.cryptofmroot.filemanager.ui.FileManagerActivity.java", "BodyUseAPI": ["com.osama.cryptofmroot.filemanager.ui.TabsFragmentOne.toggleLayout(android.view.MenuItem)"], "Fixed commit": "573e6570c8896e04680c70d23de7baeea38bf028", "Url": "https://api.github.com/repos/mosamabinomar/RootPGPExplorer", "Date": "2017-05-10T03:17:17Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (parent instanceof org.ballerinalang.plugins.idea.psi.ConnectorInitExpressionNode) { namedIdentifierDefNode = com.intellij.psi.util.PsiTreeUtil.findChildOfType(parent, org.ballerinalang.plugins.idea.psi.ConnectorReferenceNode.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2669/buggy-version/src.main.java.org.ballerinalang.plugins.idea.editor.BallerinaParameterInfoHandler.java", "BodyUseAPI": ["com.intellij.psi.util.PsiTreeUtil.findChildOfType(com.intellij.psi.PsiElement,java.lang.Class)"], "Fixed commit": "c40f09ea90ca8aeb9dcce8e4392fb647038bfe61", "Url": "https://api.github.com/repos/ballerina-attic/plugin-intellij", "Date": "2017-08-22T13:58:50Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"help\".regionMatches(true, 0, args[0], 0, args[0].length())) ret.add(\"help\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2847/buggy-version/src.me.bibo38.Bibo38Lib.command.CommandHandler.java", "BodyUseAPI": [], "Fixed commit": "29e1b790463f0c9ec57e692c09a23899cb1e67ae", "Url": "https://api.github.com/repos/bibo38/Bibo38Lib", "Date": "2014-04-26T14:36:11Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (shouldexit) { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7454/buggy-version/src.main.java.net.elronnd.ttyrec2video.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "b2e75d82619d1ca200064d0c4caceee61566d6c2", "Url": "https://api.github.com/repos/Elronnd/ttyrec2video", "Date": "2017-10-07T21:39:10Z"},
{"Line": "=>963", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.eclipse.jface.viewers.IStructuredSelection) (itemViewer.getSelection())).getFirstElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (item != null) setValue(java.lang.String.format(\"%s.%s\", lov, item.getName()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/727/buggy-version/org.entirej.ide.ui.src.org.entirej.ide.ui.editors.report.ReportBlockItemsGroupNode.java", "BodyUseAPI": ["org.entirej.framework.plugin.reports.EJPluginReportItemProperties.getName()", "4.setValue(java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String,item.getName())"], "Fixed commit": "dabd4199a64c897bba72a770bec0aa2985f5044f", "Url": "https://api.github.com/repos/entirej/plugin", "Date": "2014-10-27T08:20:57Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFile(flagCreatedPath))) { return com.release.builder.storage.StorageItem.STATUS_IN_PROGRESS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3681/buggy-version/src.main.java.com.release.builder.storage.StorageItem.java", "BodyUseAPI": [], "Fixed commit": "ab9f261fa773d56e587877b9e8df23bfb027ba25", "Url": "https://api.github.com/repos/madkroll/stockrelease", "Date": "2015-03-10T12:18:06Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isImportCommand(commandWord)) { return new seedu.typed.logic.parser.ImportCommandParser().parse(args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7373/buggy-version/src.main.java.seedu.typed.logic.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "56c72c2b7ebce5497787ee81e71652f4317d29f2", "Url": "https://api.github.com/repos/CS2103JAN2017-W09-B2/main", "Date": "2017-04-04T14:29:08Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchInput.length()) == 0) { doc = fileArray.get(item); title = doc.getFilename(); }else { doc = searchArray.get(item); title = doc.getFilename(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/618/buggy-version/src.com.example.lockdoc.FileListActivity.java", "BodyUseAPI": [], "Fixed commit": "73cec76fdecfc27a27d0589cbdd9c255278799b0", "Url": "https://api.github.com/repos/camtaylor/LockDoc", "Date": "2014-12-08T20:26:43Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(incomingParticipant.getDateOfBirth())) { return (((clientAge()) < (gov.ca.cwds.rest.business.rules.R00824SetDispositionCode.ADULT)) && ((screeningToReferral.getResponseTime()) == (gov.ca.cwds.rest.business.rules.R00824SetDispositionCode.EVALUATE_OUT))) && ((screeningToReferral.getApprovalStatus()) == (gov.ca.cwds.rest.business.rules.R00824SetDispositionCode.APPROVED)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6225/buggy-version/src.main.java.gov.ca.cwds.rest.business.rules.R00824SetDispositionCode.java", "BodyUseAPI": [], "Fixed commit": "346117935bc8d6d7ebed1695d6be0c2f4b0d62a0", "Url": "https://api.github.com/repos/ca-cwds/API", "Date": "2017-12-10T01:53:12Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentInfoBar) != null) { try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8629/buggy-version/src.com.smarttiger.demos.manager.InfoBarManager.java", "BodyUseAPI": [], "Fixed commit": "5c2371ea60c1eb65d744badcd1921b3288abbde4", "Url": "https://api.github.com/repos/ZhangShaojun/SmartTiger", "Date": "2013-11-13T03:11:54Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(drUtil.isMultivdc())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/741/buggy-version/dbsvc.src.main.java.com.emc.storageos.db.server.impl.SchemaUtil.java", "BodyUseAPI": [], "Fixed commit": "f1e77326527b025b9ce46d7a1037ef11cd170129", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-13T17:30:09Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.mCurrentButton) != null) { this.mCurrentButton.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/9094/buggy-version/app.src.main.java.com.example.arunans23.smartremotecontroller.activities.RemoteConfigureActivity.java", "BodyUseAPI": [], "Fixed commit": "1fcaca912d1cdef77fd524bc77e17781c08e4e2f", "Url": "https://api.github.com/repos/arunans23/smart-remote-controller", "Date": "2017-07-11T20:32:28Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((topPos) < (bufferSize)) && (expectedIndex == (topIndex))) && (expectedPos >= (topPos))) { return true; }else if ((((topPos) == (-1)) && (expectedIndex == ((topIndex) - 1))) && (expectedPos == (bufferSize))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8621/buggy-version/src.main.java.net.amygdalum.stringsearchalgorithms.io.StreamByteProvider.java", "BodyUseAPI": [], "Fixed commit": "a80b77661a6df7b6ff3b1f62cc468ce6ce71cc1b", "Url": "https://api.github.com/repos/almondtools/stringsearchalgorithms", "Date": "2016-12-02T07:50:41Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((topPos) < (bufferSize)) && (expectedIndex == (topIndex))) && (expectedPos >= (topPos))) { return true; }else if ((((topPos) == (-1)) && (expectedIndex == ((topIndex) - 1))) && (expectedPos == (bufferSize))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8621/buggy-version/src.main.java.net.amygdalum.stringsearchalgorithms.io.ReaderCharProvider.java", "BodyUseAPI": [], "Fixed commit": "a80b77661a6df7b6ff3b1f62cc468ce6ce71cc1b", "Url": "https://api.github.com/repos/almondtools/stringsearchalgorithms", "Date": "2016-12-02T07:50:41Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((energy) > 0) com.celestek.hexcraft.init.HexBlocks.updateMachineState(0, worldObj, xCoord, yCoord, zCoord); else { com.celestek.hexcraft.init.HexBlocks.updateMachineState(2, worldObj, xCoord, yCoord, zCoord); hasEnergy = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1059/buggy-version/main.java.com.celestek.hexcraft.tileentity.TilePersonalTeleportationPad.java", "BodyUseAPI": [], "Fixed commit": "601d8ef91bfe7c6101b5ec7f65e8b791a5e6728b", "Url": "https://api.github.com/repos/CelesTek-Team/HexCraft", "Date": "2015-06-23T09:27:22Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temp != 0) Pnr = temp;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7262/buggy-version/src.pk.edu.kics.dsl.qa.qe.PRF.java", "BodyUseAPI": [], "Fixed commit": "a38d6923c1b33ad01609f41969a0a59adc95b296", "Url": "https://api.github.com/repos/wasimbhalli/DSL-BiomedicalQueryExpansion", "Date": "2017-09-19T15:34:25Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getTheta()) < (java.lang.Math.toRadians((-180)))) { double offset = (this.getTheta()) % (java.lang.Math.toRadians((-180))); this.setTheta(((java.lang.Math.toRadians(180)) - offset)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3149/buggy-version/src.de.bytedev.exercise2.Pendulum.java", "BodyUseAPI": [], "Fixed commit": "87130b6e967945db983019c8612d1fa9ea8cb249", "Url": "https://api.github.com/repos/Patrick05/computationalScience", "Date": "2017-11-09T06:47:01Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getTheta()) > (java.lang.Math.toRadians(180))) { double offset = (this.getTheta()) % (java.lang.Math.toRadians(180)); this.setTheta(((java.lang.Math.toRadians((-180))) + offset)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3149/buggy-version/src.de.bytedev.exercise2.Pendulum.java", "BodyUseAPI": [], "Fixed commit": "87130b6e967945db983019c8612d1fa9ea8cb249", "Url": "https://api.github.com/repos/Patrick05/computationalScience", "Date": "2017-11-09T06:47:01Z"},
{"Line": "=>1526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((org.apache.commons.lang.StringUtils.isNotBlank(qorderString)) && (org.apache.commons.lang.StringUtils.isNumeric(qorderString))) { section.addSectionMetaData(SectionDataIfc.QUESTIONS_ORDERING, qorderString); }else { section.addSectionMetaData(SectionDataIfc.QUESTIONS_ORDERING, SectionDataIfc.AS_LISTED_ON_ASSESSMENT_PAGE.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5251/buggy-version/samigo.samigo-qti.src.java.org.sakaiproject.tool.assessment.qti.helper.ExtractionHelper.java", "BodyUseAPI": ["org.sakaiproject.tool.assessment.facade.SectionFacade.addSectionMetaData(SectionDataIfc.QUESTIONS_ORDERING,java.lang.String)"], "Fixed commit": "11e2eff2684f797fba32281055ef84f106255dfc", "Url": "https://api.github.com/repos/sakaiproject/sakai", "Date": "2016-04-21T15:06:05Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((histogram) == null) throw new java.lang.IllegalStateException(\"Either compacted or expanded form has to be defined!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6039/buggy-version/extensions.hdrhistogram.src.main.java.org.radargun.stats.HistogramOperationStats.java", "BodyUseAPI": [], "Fixed commit": "78439dd23a5bfcb500fe32b31c75e7d361c6f9d0", "Url": "https://api.github.com/repos/rvansa/radargun", "Date": "2014-11-07T10:36:51Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((compacted) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6039/buggy-version/extensions.hdrhistogram.src.main.java.org.radargun.stats.HistogramOperationStats.java", "BodyUseAPI": [], "Fixed commit": "78439dd23a5bfcb500fe32b31c75e7d361c6f9d0", "Url": "https://api.github.com/repos/rvansa/radargun", "Date": "2014-11-07T10:36:51Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exponent) == 0) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2534/buggy-version/CrazyGeo.src.de.st_ddt.crazyutil.poly.room.FuncRoom.java", "BodyUseAPI": [], "Fixed commit": "d229a82adb1015a283bcf3be30b1e75c68b14de5", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-05-12T22:13:39Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((prefix != null) && (input.getKey().startsWith(prefix))) || ((suffix != null) && (input.getKey().endsWith(suffix)))) { return input.getKey(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/9071/buggy-version/src.main.java.org.atlasapi.s3.DefaultS3Client.java", "BodyUseAPI": ["org.jets3t.service.model.S3Object.getKey()"], "Fixed commit": "020256fc0bf951b1f7da2feaef77b11bc3d98181", "Url": "https://api.github.com/repos/atlasapi/atlas", "Date": "2012-06-14T17:27:48Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xtremelabs.robolectric.res.ColorResourceLoader.getResourceName(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (resourceName == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7487/buggy-version/src.main.java.com.xtremelabs.robolectric.res.ColorResourceLoader.java", "BodyUseAPI": [], "Fixed commit": "f647512bd80162f9cb6b2fac8c7b0db984266967", "Url": "https://api.github.com/repos/pivotal/robolectric", "Date": "2012-05-22T21:10:25Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.isFull) != null) p_77875_1_.setBlock(p_77875_2_, p_77875_3_, p_77875_4_, this.isFull, 0, 3);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7539/buggy-version/src.main.java.com.xplosivesnet.components.genericComponent.java", "BodyUseAPI": [], "Fixed commit": "4b3d3ec814e3d3ff50f7e8d3204366fe157c5d45", "Url": "https://api.github.com/repos/konatatatata/xplosivesnet_minecraftmod", "Date": "2015-02-23T11:31:50Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.glassy) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7539/buggy-version/src.main.java.com.xplosivesnet.building.genericBuildingBlock.java", "BodyUseAPI": [], "Fixed commit": "4b3d3ec814e3d3ff50f7e8d3204366fe157c5d45", "Url": "https://api.github.com/repos/konatatatata/xplosivesnet_minecraftmod", "Date": "2015-02-23T11:31:50Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.storm.utils.TupleUtils.isTick(tuple)) { collector.ack(tuple); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3181/buggy-version/external.storm-elasticsearch.src.main.java.org.apache.storm.elasticsearch.bolt.EsIndexBolt.java", "BodyUseAPI": ["org.apache.storm.elasticsearch.bolt.EsIndexBolt.ack(org.apache.storm.tuple.Tuple)"], "Fixed commit": "5db82486516fa715a3444dad7f512d7a7cfe02c0", "Url": "https://api.github.com/repos/yarikc/storm", "Date": "2016-07-06T12:32:43Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1306/buggy-version/blade-engine.src.com.bladecoder.engine.model.SoundFX.java", "BodyUseAPI": [], "Fixed commit": "5ade14d104748f1d4aa1a7b9f14ce62667878853", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2014-11-05T13:47:09Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1306/buggy-version/blade-engine.src.com.bladecoder.engine.model.SoundFX.java", "BodyUseAPI": [], "Fixed commit": "5ade14d104748f1d4aa1a7b9f14ce62667878853", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2014-11-05T13:47:09Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eventsA != null) && (eventsB == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8518/buggy-version/spi.src.main.java.org.fuin.esc.spi.EscSpiUtils.java", "BodyUseAPI": [], "Fixed commit": "d9857230cc247ff47da78c17781904d4f05ad153", "Url": "https://api.github.com/repos/fuinorg/event-store-commons", "Date": "2016-10-03T07:01:04Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eventsA == null) && (eventsB == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8518/buggy-version/spi.src.main.java.org.fuin.esc.spi.EscSpiUtils.java", "BodyUseAPI": [], "Fixed commit": "d9857230cc247ff47da78c17781904d4f05ad153", "Url": "https://api.github.com/repos/fuinorg/event-store-commons", "Date": "2016-10-03T07:01:04Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eventsA == null) && (eventsB != null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8518/buggy-version/spi.src.main.java.org.fuin.esc.spi.EscSpiUtils.java", "BodyUseAPI": [], "Fixed commit": "d9857230cc247ff47da78c17781904d4f05ad153", "Url": "https://api.github.com/repos/fuinorg/event-store-commons", "Date": "2016-10-03T07:01:04Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eidReader) != null) { eidReader.pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8318/buggy-version/src.android.org.cordova.eid.EidPlugin.java", "BodyUseAPI": [], "Fixed commit": "cf74fce4d846ca87ae2096a2dd24dbefbf17d148", "Url": "https://api.github.com/repos/aximobile/cordova-plugin-eid", "Date": "2017-04-05T07:20:00Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eidReader) != null) { eidReader.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8318/buggy-version/src.android.org.cordova.eid.EidPlugin.java", "BodyUseAPI": [], "Fixed commit": "cf74fce4d846ca87ae2096a2dd24dbefbf17d148", "Url": "https://api.github.com/repos/aximobile/cordova-plugin-eid", "Date": "2017-04-05T07:20:00Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eidReader) != null) { eidReader.resume(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8318/buggy-version/src.android.org.cordova.eid.EidPlugin.java", "BodyUseAPI": [], "Fixed commit": "cf74fce4d846ca87ae2096a2dd24dbefbf17d148", "Url": "https://api.github.com/repos/aximobile/cordova-plugin-eid", "Date": "2017-04-05T07:20:00Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result) { systemStatus.occurs(consequence.getName(), consequence.getStatus(), false); if (firstTime) { printRuleChange(); firstTime = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4484/buggy-version/mreasoner-core.src.main.java.edu.casetools.icase.mreasoner.core.elements.rules.SameTimeRule.java", "BodyUseAPI": [], "Fixed commit": "dde5ecfa5b70910a294bde65be679a45974be554", "Url": "https://api.github.com/repos/ualegre/mreasoner-core", "Date": "2017-12-15T21:33:04Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((productsList) == null) || (!(productsList.moveToFirst()))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6803/buggy-version/src.com.tedebold.buylist.ProductList.java", "BodyUseAPI": [], "Fixed commit": "74f5b0688bb4b55747e6463f0685ff868dcbe3ec", "Url": "https://api.github.com/repos/jairodemorais/BuyList", "Date": "2012-04-29T22:37:42Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldMarkDups) { final com.google.cloud.dataflow.sdk.values.PCollection<org.broadinstitute.hellbender.utils.read.GATKRead> initialReads = readsDataflowSource.getReadPCollection(intervals); markedReads = initialReads.apply(new org.broadinstitute.hellbender.tools.dataflow.transforms.markduplicates.MarkDuplicates(headerSingleton, finderPcolView)); }else { final com.google.cloud.dataflow.sdk.values.PCollection<com.google.cloud.dataflow.sdk.values.KV<java.lang.String, java.lang.Iterable<org.broadinstitute.hellbender.utils.read.GATKRead>>> readsByShard = readsDataflowSource.getGroupedReadPCollection(intervals, basesPerShard, outputBasesPerWorkUnit, pipeline); markedReads = readsByShard.apply(new org.broadinstitute.hellbender.tools.dataflow.transforms.markduplicates.MarkDuplicatesFromShardsDataflowTransform(headerSingleton, finderPcolView)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5721/buggy-version/src.main.java.org.broadinstitute.hellbender.tools.dataflow.pipelines.ReadsPreprocessingPipeline.java", "BodyUseAPI": [], "Fixed commit": "d613a30431245eeaf670af08f6cabc7f613591c6", "Url": "https://api.github.com/repos/broadinstitute/gatk", "Date": "2015-08-27T16:40:37Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mContentView) != null) { mContentView.animate().alpha(1.0F).setDuration(300).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6808/buggy-version/onehookinclibrary.src.main.java.com.onehook.view.overlay.ActivityOverlayView.java", "BodyUseAPI": [], "Fixed commit": "d11602f69f2e86c1542dbb6132ae36ef9d621783", "Url": "https://api.github.com/repos/oneHook/oneHookLibraryAndroid", "Date": "2017-11-02T18:08:24Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { android.util.Log.d(com.quantimodo.tools.activities.QuantimodoLoginActivity.TAG, \"result json null!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7060/buggy-version/quantimodo-sdk-tools.src.main.java.com.quantimodo.tools.activities.QuantimodoLoginActivity.java", "BodyUseAPI": [], "Fixed commit": "7e27af385ce21e770b32049c4d301e6068441744", "Url": "https://api.github.com/repos/QuantiModo/quantimodo-sdk-android", "Date": "2015-11-04T13:44:05Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.sitecore.android.sdk.web.VersionUtils.isKitKatOrLater()) { intent.setAction(Intent.ACTION_PICK); }else { intent.setAction(Intent.ACTION_GET_CONTENT); intent.addCategory(Intent.CATEGORY_OPENABLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4942/buggy-version/sitecore-js-android.src.net.sitecore.android.sdk.web.CameraPlugin.java", "BodyUseAPI": [], "Fixed commit": "3506fdb45bda59f8329ca5540e15e2431694033e", "Url": "https://api.github.com/repos/Sitecore/sitecore-android-sdk", "Date": "2013-12-12T14:49:31Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getArmor()) != null) { if (p.getArmor().getName().equals(itemToObtain.getName())) { amount++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1339/buggy-version/src.Quest.ItemQuest.java", "BodyUseAPI": ["p.getArmor().getName().equals(itemToObtain.getName())", "p.getArmor().getName()", "Character.PlayerCharacter.getArmor()"], "Fixed commit": "73415efa6f88a6d513d9f0d2fcb6b85ebc561956", "Url": "https://api.github.com/repos/Krill/red-elephant", "Date": "2013-02-27T15:50:08Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p.getWeapon().getName().equals(itemToObtain.getName())) { amount++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1339/buggy-version/src.Quest.ItemQuest.java", "BodyUseAPI": [], "Fixed commit": "73415efa6f88a6d513d9f0d2fcb6b85ebc561956", "Url": "https://api.github.com/repos/Krill/red-elephant", "Date": "2013-02-27T15:50:08Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uk.co.newagedev.hieranarchy.util.KeyBinding.isKeyDown(\"Down\")) { camera.move(0, ((int) ((-5) * (camera.getZoom())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6677/buggy-version/src.uk.co.newagedev.hieranarchy.editor.EditorState.java", "BodyUseAPI": [], "Fixed commit": "9556a990b0dc282d13fd9a08911f475feacb10ae", "Url": "https://api.github.com/repos/JoshuaBradbury/Hieranarchy", "Date": "2015-03-28T23:22:56Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uk.co.newagedev.hieranarchy.util.KeyBinding.isKeyDown(\"Up\")) { camera.move(0, ((int) (5 * (camera.getZoom())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6677/buggy-version/src.uk.co.newagedev.hieranarchy.editor.EditorState.java", "BodyUseAPI": [], "Fixed commit": "9556a990b0dc282d13fd9a08911f475feacb10ae", "Url": "https://api.github.com/repos/JoshuaBradbury/Hieranarchy", "Date": "2015-03-28T23:22:56Z"},
{"Line": "=>323", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (initialLightSensorRate == (-1)) { initialLightSensorRate = lightSensorRate; }else if (initialLightSensorRate > lightSensorRate) { android.util.Slog.w(com.android.server.display.DisplayPowerController.TAG, (((((\"Expected config_autoBrightnessInitialLightSensorRate (\" + initialLightSensorRate) + \") to be less than or equal to \") + \"config_autoBrightnessLightSensorRate (\") + lightSensorRate) + \").\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3007/buggy-version/services.core.java.com.android.server.display.DisplayPowerController.java", "BodyUseAPI": [], "Fixed commit": "1b86237c862455f5588e1500a4ab7b48cc39be38", "Url": "https://api.github.com/repos/ReaperRoms/frameworks_base", "Date": "2017-08-08T23:23:43Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (activePage == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3104/buggy-version/main.plugins.org.talend.commons.ui.src.main.java.org.talend.commons.ui.utils.CheatSheetUtils.java", "BodyUseAPI": [], "Fixed commit": "28a40677f054e03939f5e909e3bc1959f4d238ee", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-01-26T06:59:55Z"},
{"Line": "=>1641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.nuxeo.runtime.transaction.TransactionHelper.isNoTransaction()) { org.nuxeo.runtime.transaction.TransactionHelper.startTransaction(); try { return writeReplace(); } finally { org.nuxeo.runtime.transaction.TransactionHelper.commitOrRollbackTransaction(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5016/buggy-version/nuxeo-core.nuxeo-core-api.src.main.java.org.nuxeo.ecm.core.api.impl.DocumentModelImpl.java", "BodyUseAPI": [], "Fixed commit": "5783ee68bc6386093e9b01749f5fdd14c6c0cb3d", "Url": "https://api.github.com/repos/ron1/nuxeo", "Date": "2016-02-05T11:10:13Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (counter > 6) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/25/buggy-version/ChatbotEmerald.src.groupFiles.MahinCalendar.java", "BodyUseAPI": [], "Fixed commit": "5e31af74a8f257e56d61cab4e78c0546639c6fa6", "Url": "https://api.github.com/repos/truiko/chatbotEmerald", "Date": "2016-10-07T02:50:43Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (record.get(subBatch).isEmpty()) { batchComparator = record.get(batchType); }else { batchComparator = ((record.get(batchType)) + \"_\") + (record.get(subBatch)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/800/buggy-version/src.uk.gov.dvla.osg.batch.Main.java", "BodyUseAPI": ["org.apache.commons.csv.CSVRecord.get(java.lang.String)", "org.apache.commons.csv.CSVRecord.get(java.lang.String)", "org.apache.commons.csv.CSVRecord.get(java.lang.String)"], "Fixed commit": "1b3cf6263084f0ed1f2fc4397ad5a4a860a510e6", "Url": "https://api.github.com/repos/dendleberry/batch", "Date": "2017-02-07T10:23:00Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((lookup.get(record.get(selectorRef))) == null) { uk.gov.dvla.osg.batch.Main.LOGGER.fatal(\"Selector '{}' not found in lookup '{}'\", selectorRef, lookupFile); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/800/buggy-version/src.uk.gov.dvla.osg.batch.Main.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.fatal(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "1b3cf6263084f0ed1f2fc4397ad5a4a860a510e6", "Url": "https://api.github.com/repos/dendleberry/batch", "Date": "2017-02-07T10:23:00Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DataContentAnalysis.exContent(eu.learnpad.ca.rest.data.Content)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (inode < (content.length())) { java.lang.String token = content.substring(inode, content.length()); prec = new DataContent(token, acca.getType()); listdata.add(prec); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4172/buggy-version/src.main.java.DataContentAnalysis.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(java.lang.Integer,int)"], "Fixed commit": "433656e98db68c2c67a7dd00bf84c9f2bacbfbe7", "Url": "https://api.github.com/repos/imatesiu/uicontentanalysiscomponent", "Date": "2015-12-16T19:39:26Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["EventManager.Event.SetImages(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bitmapArrayList.get(2)) != null) viewHolder.timelineImage3.setImageBitmap(bitmapArrayList.get(2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6666/buggy-version/app.src.main.java.com.remember.alpha.adapters.CardViewAdapter.java", "BodyUseAPI": ["com.remember.alpha.adapters.SquareImageView.setImageBitmap(bitmapArrayList.get(2))", "java.util.ArrayList<android.graphics.Bitmap>.get(int)"], "Fixed commit": "04f1549fb85f832c09123893f42353e9410bebd7", "Url": "https://api.github.com/repos/cnnr-adams/Remember", "Date": "2016-01-17T15:05:51Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["EventManager.Event.SetImages(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bitmapArrayList.get(0)) != null) viewHolder.timelineImage.setImageBitmap(bitmapArrayList.get(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6666/buggy-version/app.src.main.java.com.remember.alpha.adapters.CardViewAdapter.java", "BodyUseAPI": ["java.util.ArrayList<android.graphics.Bitmap>.get(int)", "com.remember.alpha.adapters.SquareImageView.setImageBitmap(bitmapArrayList.get(0))"], "Fixed commit": "04f1549fb85f832c09123893f42353e9410bebd7", "Url": "https://api.github.com/repos/cnnr-adams/Remember", "Date": "2016-01-17T15:05:51Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["EventManager.Event.SetImages(android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bitmapArrayList.get(1)) != null) viewHolder.timelineImage2.setImageBitmap(bitmapArrayList.get(1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6666/buggy-version/app.src.main.java.com.remember.alpha.adapters.CardViewAdapter.java", "BodyUseAPI": ["java.util.ArrayList<android.graphics.Bitmap>.get(int)", "com.remember.alpha.adapters.SquareImageView.setImageBitmap(bitmapArrayList.get(1))"], "Fixed commit": "04f1549fb85f832c09123893f42353e9410bebd7", "Url": "https://api.github.com/repos/cnnr-adams/Remember", "Date": "2016-01-17T15:05:51Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (s == null) { return; }else if (s.equals(\"Visa alla\")) { ChangeCategoryShown(); mNumberOfPunsField.setText(java.lang.Integer.toString(GetTotalPunCount())); }else { ChangeCategoryShown(s); mNumberOfPunsField.setText(java.lang.Integer.toString(GetCategoryPunCount(s))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1871/buggy-version/Databasprojektet.src.databasprojektet.AdminWindow.java", "BodyUseAPI": ["databasprojektet.AdminWindow.2.ChangeCategoryShown(java.lang.String)", "databasprojektet.AdminWindow.2.GetCategoryPunCount(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.Integer.toString(int)", "javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "1da9b53c971e49d7b521ec745a1341809a6dc403", "Url": "https://api.github.com/repos/MrCuddle/Javaprojektet", "Date": "2014-08-13T16:48:01Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jdh.datatable.MapNameFieldValue.getEntityFieldName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (entityNameField != null) { value = mapNameFieldValue.getSearchValue(fieldName, parameters.get(name)[0]); searchMap.put(entityNameField, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3406/buggy-version/jquery-datatable-hibernate-api.src.main.java.jdh.datatable.ProcessJqueryDataTableRequest.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)"], "Fixed commit": "8e2cdbc32d4c5611debd590c7ec18a6b1e1c66bb", "Url": "https://api.github.com/repos/avivasp/jquery-datatable-hibernate", "Date": "2016-08-24T12:52:21Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mechanic instanceof com.sk89q.craftbook.circuits.ic.ICMechanic) { try { load(((com.sk89q.craftbook.circuits.ic.ICMechanic) (mechanic)).getIC().getSign().getBlockVector(), null); } catch (com.sk89q.craftbook.util.exceptions.InvalidMechanismException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5084/buggy-version/src.main.java.com.sk89q.craftbook.MechanicManager.java", "BodyUseAPI": [], "Fixed commit": "8d3029e6a1b7f8327b83c43a00414e2abe63bb92", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-05-12T04:40:33Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((watchBlocks.get(pos)) == null) return folks;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5084/buggy-version/src.main.java.com.sk89q.craftbook.WatchBlockManager.java", "BodyUseAPI": [], "Fixed commit": "8d3029e6a1b7f8327b83c43a00414e2abe63bb92", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-05-12T04:40:33Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.smap.smapTask.android.tasks.DownloadTasksTask.synchroniseForms(tr.forms)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (outcome != null) { for (org.odk.collect.android.logic.FormDetails key : outcome.keySet()) { results.put(key.formName, outcome.get(key)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7396/buggy-version/fieldTask.src.main.java.org.smap.smapTask.android.tasks.DownloadTasksTask.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(key.formName,outcome.get(key))", "java.util.HashMap<org.odk.collect.android.logic.FormDetails, java.lang.String>.get(org.odk.collect.android.logic.FormDetails)", "java.util.HashMap<org.odk.collect.android.logic.FormDetails, java.lang.String>.keySet()"], "Fixed commit": "ef68a332c7cbca5ea800ba05b99328ed2f42684c", "Url": "https://api.github.com/repos/nap2000/fieldTask2", "Date": "2016-10-15T07:46:09Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(highPrice)) if (org.apache.commons.lang.StringUtils.isNumeric(highPrice)) criteria.add(org.hibernate.criterion.Restrictions.le(\"price\", java.lang.Double.parseDouble(highPrice)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4970/buggy-version/src.main.java.com.middleground.dao.hibernate.ProductDAOHibernate.java", "BodyUseAPI": ["org.apache.commons.lang.StringUtils.isNumeric(java.lang.String)", "org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.le(\"price\", java.lang.Double.parseDouble(highPrice)))", "org.hibernate.criterion.Restrictions.le(java.lang.String,double)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "a9bed8c346879c9e6d9db885cb8ecce5f33e9bcd", "Url": "https://api.github.com/repos/vernozlak/middleground", "Date": "2013-03-16T18:02:41Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(lowPrice)) if (org.apache.commons.lang.StringUtils.isNumeric(lowPrice)) criteria.add(org.hibernate.criterion.Restrictions.ge(\"price\", java.lang.Double.parseDouble(lowPrice)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4970/buggy-version/src.main.java.com.middleground.dao.hibernate.ProductDAOHibernate.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "org.apache.commons.lang.StringUtils.isNumeric(java.lang.String)", "org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.ge(\"price\", java.lang.Double.parseDouble(lowPrice)))", "org.hibernate.criterion.Restrictions.ge(java.lang.String,double)"], "Fixed commit": "a9bed8c346879c9e6d9db885cb8ecce5f33e9bcd", "Url": "https://api.github.com/repos/vernozlak/middleground", "Date": "2013-03-16T18:02:41Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (stringList[0].equalsIgnoreCase(\"s_event\")) { eventProcess(stringList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6449/buggy-version/JavaSocket.src.main.java.WebSocket.RemoteServer.java", "BodyUseAPI": ["WebSocket.RemoteServer.eventProcess(java.lang.String[])"], "Fixed commit": "87471934544b0a7bf592e45010e1d6281fa2b134", "Url": "https://api.github.com/repos/PPatchara/Socket", "Date": "2016-06-09T13:41:45Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestThread) != null) { requestThread.interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6491/buggy-version/app.src.main.java.de.teyzer.genie.connect.ServerConnect.java", "BodyUseAPI": [], "Fixed commit": "c0c88adcceaf545b60337c56ba981e9698f96a26", "Url": "https://api.github.com/repos/caleron/Genie", "Date": "2016-03-27T10:53:09Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((socket) != null) { try { socket.close(); java.lang.System.out.println(\"socket closed after timeout\"); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6491/buggy-version/app.src.main.java.de.teyzer.genie.connect.ServerConnect.java", "BodyUseAPI": [], "Fixed commit": "c0c88adcceaf545b60337c56ba981e9698f96a26", "Url": "https://api.github.com/repos/caleron/Genie", "Date": "2016-03-27T10:53:09Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.springframework.util.StringUtils.isEmpty(reign.getReignEnded())) { reignEnded = \"N/A\"; }else { reignEnded = org.joda.time.format.ISODateTimeFormat.date().print(new org.joda.time.DateTime(reign.getReignEnded())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4977/buggy-version/src.main.java.com.example.ehdee.heavyweightdesktop.gui.GUIComponentFactoryImpl.java", "BodyUseAPI": ["com.example.ehdee.heavyweightdesktop.model.Reign.getReignEnded()", "org.joda.time.format.ISODateTimeFormat.date().print(org.joda.time.DateTime)"], "Fixed commit": "c50e0b6436a3beaa4b40f0507e81e7e0394ff915", "Url": "https://api.github.com/repos/edwinek/heavyweight-desktop", "Date": "2016-10-15T16:23:08Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(integrations.containsKey(type))) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3385/buggy-version/prison-core.src.main.java.tech.mcprison.prison.integration.IntegrationManager.java", "BodyUseAPI": [], "Fixed commit": "c33a16efd6e70eb44d050904b34a8bae8f132a65", "Url": "https://api.github.com/repos/PrisonTeam/Prison", "Date": "2017-12-25T05:52:26Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["snml.dataconvert.IntermediateRecommendationData.getItemAttribute()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (itemAttrib == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3198/buggy-version/src.main.java.snml.dataconvert.IntermediateRecommendationDataSet.java", "BodyUseAPI": [], "Fixed commit": "fdaff18179c6fc69ad2ff8519ff2128e7b38f9ef", "Url": "https://api.github.com/repos/jwbartel/SharingPredictor", "Date": "2014-07-30T19:41:52Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender.estimatePreference(java.lang.Long,java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.Float.isNaN(preference))) { return preference; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3198/buggy-version/src.main.java.snml.rule.superfeature.model.mahout.MahoutUserBasedModelRule.java", "BodyUseAPI": [], "Fixed commit": "fdaff18179c6fc69ad2ff8519ff2128e7b38f9ef", "Url": "https://api.github.com/repos/jwbartel/SharingPredictor", "Date": "2014-07-30T19:41:52Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null != (this.graphContext)) { this.graphContext.getApplicationGraph().injectStatics(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5529/buggy-version/src.main.java.prism.framework.DependencyInjector.java", "BodyUseAPI": [], "Fixed commit": "a9fa6a48df6d16b841e913940989151e44a6cec9", "Url": "https://api.github.com/repos/ReneeVandervelde/Prism", "Date": "2014-12-12T17:51:51Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (status != null) { transactionManager.rollback(status); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7805/buggy-version/SibLinksService.src.main.java.com.siblinks.ws.service.impl.FavouriteVideoServiceImpl.java", "BodyUseAPI": ["org.springframework.transaction.PlatformTransactionManager.rollback(org.springframework.transaction.TransactionStatus)"], "Fixed commit": "5e6fe5060dfc854bb8a8247ef7f1c43ef7bee347", "Url": "https://api.github.com/repos/hungbadboy/WebApp", "Date": "2016-10-21T05:24:38Z"},
{"Line": "=>2310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((params.getValidityPeriod().hasPeriod()) && (net.named_data.jndn.security.ValidityPeriod.canGetFromSignature(signatureInfo))) net.named_data.jndn.security.ValidityPeriod.getFromSignature(signatureInfo).setPeriod(params.getValidityPeriod().getNotBefore(), params.getValidityPeriod().getNotAfter());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/106/buggy-version/src.net.named_data.jndn.security.KeyChain.java", "BodyUseAPI": ["params.getValidityPeriod().getNotBefore()", "net.named_data.jndn.security.SigningInfo.getValidityPeriod()", "params.getValidityPeriod().getNotAfter()", "net.named_data.jndn.security.ValidityPeriod.getFromSignature(signatureInfo).setPeriod(params.getValidityPeriod().getNotBefore(),params.getValidityPeriod().getNotAfter())", "net.named_data.jndn.security.SigningInfo.getValidityPeriod()", "net.named_data.jndn.security.ValidityPeriod.getFromSignature(net.named_data.jndn.Signature)"], "Fixed commit": "60ac43eccacc424c9172f41be64a2914b08cb86b", "Url": "https://api.github.com/repos/named-data/jndn", "Date": "2017-10-04T20:09:10Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((crowd.getId()) == null) || (crowd.getId().isEmpty())) { object.addProperty(\"_id\", \"-1\"); }else { object.addProperty(\"_id\", crowd.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1438/buggy-version/app.src.main.java.com.crowdshelf.app.io.network.serializers.CrowdSerializer.java", "BodyUseAPI": ["com.crowdshelf.app.models.Crowd.getId()", "com.google.gson.JsonObject.addProperty(java.lang.String,crowd.getId())"], "Fixed commit": "c0e1491e586ad5f8268fd8eb76b1adea0551cba4", "Url": "https://api.github.com/repos/CrowdShelf/android", "Date": "2015-09-28T14:33:03Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((crowd.getMembers()) == null) || (crowd.getMembers().isEmpty())) { object.add(\"members\", JsonNull.INSTANCE); }else { com.google.gson.JsonArray members = new com.google.gson.JsonArray(); for (com.crowdshelf.app.models.MemberId memberId : crowd.getMembers()) { members.add(new com.google.gson.JsonPrimitive(memberId.getId())); object.add(\"members\", members); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1438/buggy-version/app.src.main.java.com.crowdshelf.app.io.network.serializers.CrowdSerializer.java", "BodyUseAPI": ["com.crowdshelf.app.models.Crowd.getMembers()"], "Fixed commit": "c0e1491e586ad5f8268fd8eb76b1adea0551cba4", "Url": "https://api.github.com/repos/CrowdShelf/android", "Date": "2015-09-28T14:33:03Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(value2 instanceof org.openrdf.model.URI)) { return cz.cuni.mff.odcleanstore.conflictresolution.impl.DistanceMeasureImpl.DIFFERENT_TYPE_DISTANCE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6743/buggy-version/odcleanstore.conflictresolution.src.main.java.cz.cuni.mff.odcleanstore.conflictresolution.impl.DistanceMeasureImpl.java", "BodyUseAPI": [], "Fixed commit": "5a84281f334f29f4bb304aeb07c7b00d2da348ea", "Url": "https://api.github.com/repos/ODCleanStore/ODCleanStore", "Date": "2014-05-10T22:08:03Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(value2 instanceof org.openrdf.model.BNode)) { return cz.cuni.mff.odcleanstore.conflictresolution.impl.DistanceMeasureImpl.DIFFERENT_TYPE_DISTANCE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6743/buggy-version/odcleanstore.conflictresolution.src.main.java.cz.cuni.mff.odcleanstore.conflictresolution.impl.DistanceMeasureImpl.java", "BodyUseAPI": [], "Fixed commit": "5a84281f334f29f4bb304aeb07c7b00d2da348ea", "Url": "https://api.github.com/repos/ODCleanStore/ODCleanStore", "Date": "2014-05-10T22:08:03Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(value2 instanceof org.openrdf.model.Literal)) { return cz.cuni.mff.odcleanstore.conflictresolution.impl.DistanceMeasureImpl.DIFFERENT_TYPE_DISTANCE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6743/buggy-version/odcleanstore.conflictresolution.src.main.java.cz.cuni.mff.odcleanstore.conflictresolution.impl.DistanceMeasureImpl.java", "BodyUseAPI": [], "Fixed commit": "5a84281f334f29f4bb304aeb07c7b00d2da348ea", "Url": "https://api.github.com/repos/ODCleanStore/ODCleanStore", "Date": "2014-05-10T22:08:03Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bingo.lang.xml.XmlReader.getAttributeValue(javax.xml.namespace.QName)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bingo.lang.Strings.isBlank(httpMethod)) httpMethod = reader.getAttributeValue(\"HttpMethod\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3558/buggy-version/odata-core.src.main.java.bingo.odata.format.xml.XmlMetadataDocumentReader.java", "BodyUseAPI": [], "Fixed commit": "894ead51027af43b226029d15489d847dced41ae", "Url": "https://api.github.com/repos/bingo-open-source/bingo-odata", "Date": "2013-07-01T09:02:51Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((list.size()) > 1) list.remove(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2033/buggy-version/src.animations.FallingAnimation.java", "BodyUseAPI": ["animations.FallingAnimation.remove(int)"], "Fixed commit": "b68e8a20050da0b7bda823ed6fd7c34082dc1cd6", "Url": "https://api.github.com/repos/tomBeep/Swen222Game", "Date": "2017-08-23T04:23:56Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) > 1) { animationPercent = 100; super.drawAnimation(g, x, y, width, height, selected, greyOut); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2033/buggy-version/src.animations.FallingAnimation.java", "BodyUseAPI": [], "Fixed commit": "b68e8a20050da0b7bda823ed6fd7c34082dc1cd6", "Url": "https://api.github.com/repos/tomBeep/Swen222Game", "Date": "2017-08-23T04:23:56Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xdi2.discovery.XDIDiscoveryClient.discoverFromRegistry(xdi2.core.xri3.XDI3Segment.create(dependentCloudName.toString()),<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((dependentRegistry == null) || ((dependentRegistry.getCloudNumber()) == null)) { net.respectnetwork.csp.application.manager.RegisterDependentCloudThread.logger.debug(\"Dependent name is not in discovery yet. So going back to check again ...\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8678/buggy-version/src.main.java.net.respectnetwork.csp.application.manager.RegisterDependentCloudThread.java", "BodyUseAPI": [], "Fixed commit": "648c5e199397498ce4738bf84da9b5af78b1b220", "Url": "https://api.github.com/repos/peeyushi/csp-provisioning-application", "Date": "2014-04-29T16:07:48Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(loggers.containsKey(key))) { getLogger().info((\"Creating new LoggerAbstraction for LoggingCategory.\" + (category.toString()))); com.zack6849.superlogger.LoggerAbstraction log = new com.zack6849.superlogger.LoggerAbstraction(); try { log.setFile(new java.io.File((((((getDataFolder()) + (java.io.File.separator)) + \"logs\") + (java.io.File.separator)) + key))); log.setWriter(new java.io.BufferedWriter(new java.io.FileWriter(log.getFile(), true))); log.setCategory(category); } catch (java.io.IOException e) { logger.severe(((\"Error setting up logger for \" + filename) + \"!\")); logger.severe(e.getMessage()); } loggers.put(key, log); return log; }else { return loggers.get(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6549/buggy-version/src.main.java.com.zack6849.superlogger.Main.java", "BodyUseAPI": ["com.zack6849.superlogger.LoggerAbstraction.setFile(java.io.File)", "java.util.concurrent.ConcurrentHashMap<java.lang.String, com.zack6849.superlogger.LoggerAbstraction>.get(java.lang.String)", "java.util.concurrent.ConcurrentHashMap<java.lang.String, com.zack6849.superlogger.LoggerAbstraction>.put(java.lang.String,com.zack6849.superlogger.LoggerAbstraction)"], "Fixed commit": "edcf53c23916a31a381520ea58ba6465eaeb5f54", "Url": "https://api.github.com/repos/marshall-lee/SuperLogger", "Date": "2015-02-21T23:33:10Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["question.env.findType(node.getTypeName(),node.getLocation().getModule())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (typedef != null) { node.setTypedef(typedef.clone()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/637/buggy-version/core.typechecker.src.main.java.org.overture.typechecker.visitor.QualificationVisitor.java", "BodyUseAPI": ["org.overture.ast.expressions.AIsExp.setTypedef(typedef.clone())", "org.overture.ast.definitions.PDefinition.clone()"], "Fixed commit": "b497e532f9567177c0c6d19ddd94595aaf866b12", "Url": "https://api.github.com/repos/overturetool/overture", "Date": "2016-02-05T17:24:41Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAppropriation) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5414/buggy-version/org.amanzi.neo.loader.core.src.org.amanzi.neo.loader.core.newsaver.AbstractDriveSaver.java", "BodyUseAPI": [], "Fixed commit": "88898097f04fb3028366a1eb05b509cab4397768", "Url": "https://api.github.com/repos/AmanziTel/awe-core", "Date": "2011-11-18T14:53:28Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(fileSynonyms.containsKey(name))) fileSynonyms.put(name, header);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5414/buggy-version/org.amanzi.neo.loader.core.src.org.amanzi.neo.loader.core.newsaver.AbstractDriveSaver.java", "BodyUseAPI": ["org.amanzi.neo.loader.core.newsaver.AbstractDriveSaver.put(java.lang.String,java.lang.String)"], "Fixed commit": "88898097f04fb3028366a1eb05b509cab4397768", "Url": "https://api.github.com/repos/AmanziTel/awe-core", "Date": "2011-11-18T14:53:28Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDockerHostSet()) { dockerServerUri = org.arquillian.cube.impl.util.SystemEnvironmentVariables.getEnvironmentOrPropertyVariable(org.arquillian.cube.docker.impl.client.CubeDockerConfigurator.DOCKER_HOST); }else { dockerServerUri = resolveBoot2Docker(dockerServerUri, config.get(CubeDockerConfiguration.BOOT2DOCKER_PATH)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6785/buggy-version/docker.docker.src.main.java.org.arquillian.cube.docker.impl.client.CubeDockerConfigurator.java", "BodyUseAPI": [], "Fixed commit": "659d1c88ae9a3daa7b6f1bce4985954797019977", "Url": "https://api.github.com/repos/lordofthejars/arquillian-cube", "Date": "2015-07-02T18:07:52Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rstudio.studio.client.workbench.views.source.editors.text.AceEditor.getScopeAtPosition(cursor.currentPosition())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((peekState()) == (org.rstudio.studio.client.workbench.views.source.editors.text.TextEditingTargetRenameHelper.STATE_FUNCTION_DEFINITION)) && (scope != candidate)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4894/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.TextEditingTargetRenameHelper.java", "BodyUseAPI": [], "Fixed commit": "203004dc488e09ef8b53beb41d0c6638951fffb9", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2016-03-28T18:15:51Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rstudio.studio.client.workbench.views.source.editors.text.AceEditor.getScopeAtPosition(cursor.currentPosition())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((peekState()) == (org.rstudio.studio.client.workbench.views.source.editors.text.TextEditingTargetRenameHelper.STATE_FUNCTION_DEFINITION)) && (scope != candidate)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4894/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.TextEditingTargetRenameHelper.java", "BodyUseAPI": [], "Fixed commit": "203004dc488e09ef8b53beb41d0c6638951fffb9", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2016-03-28T18:15:51Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rstudio.studio.client.workbench.views.source.editors.text.ace.TokenCursor.currentValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(functionName.equals(\"function\"))) return renameFunctionArgument(functionName, argName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4894/buggy-version/src.gwt.src.org.rstudio.studio.client.workbench.views.source.editors.text.TextEditingTargetRenameHelper.java", "BodyUseAPI": ["org.rstudio.studio.client.workbench.views.source.editors.text.TextEditingTargetRenameHelper.renameFunctionArgument(java.lang.String,java.lang.String)"], "Fixed commit": "203004dc488e09ef8b53beb41d0c6638951fffb9", "Url": "https://api.github.com/repos/rstudio/rstudio", "Date": "2016-03-28T18:15:51Z"},
{"Line": "=>1841", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sonar.sslr.api.AstNode.getFirstChild(JavaGrammar.INNER_CREATOR)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (innerCreatorNode.hasDirectChildren(Kind.ANNOTATION)) { identifier.prependChildren(innerCreatorNode.getChildren(Kind.ANNOTATION)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7287/buggy-version/java-squid.src.main.java.org.sonar.java.ast.parser.TreeFactory.java", "BodyUseAPI": ["org.sonar.java.model.expression.IdentifierTreeImpl.prependChildren(innerCreatorNode.getChildren(Kind.ANNOTATION))", "com.sonar.sslr.api.AstNode.getChildren(Kind.ANNOTATION)"], "Fixed commit": "747746508a3ff5c3ec5e9be58e1192b51059c192", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2014-09-22T16:18:42Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((loadingHolder.replace) != null) && (!willReplace)) { challenge = loadingHolder.replace; loadingHolder.challenge = challenge; loadingHolder.replace = null; reset = true; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3979/buggy-version/src.com.mishiranu.dashchan.content.net.RecaptchaReader.java", "BodyUseAPI": [], "Fixed commit": "1d1a4a7a5a4332740d1f240066f2b29b87358d11", "Url": "https://api.github.com/repos/Mishiranu/Dashchan", "Date": "2017-04-03T12:57:28Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, net.floodlightcontroller.core.IOFSwitch>.get(nodePath.getIdSession())", "net.floodlightcontroller.core.internal.IOFSwitchService.getSwitch(nodePath.getDataPathId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((iofswitch != null) && (iofs.getId().equals(iofswitch.getId()))) { gmod.modifyGroup(); }else { gmod.writeGroup(); oldGroupsCreated.put(nodePath.getIdSession(), iofs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5965/buggy-version/floodlight.src.main.java.net.floodlightcontroller.classico.pathscontrol.ExecutorPathFlowSDN.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, net.floodlightcontroller.core.IOFSwitch>.put(nodePath.getIdSession(),net.floodlightcontroller.core.IOFSwitch)"], "Fixed commit": "8608886c69f408d2cb6878a5ce7f25fb30e5648f", "Url": "https://api.github.com/repos/Barbalho12/classico-sdn", "Date": "2017-08-16T15:31:44Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selected) { if ((pos.x) < (rect.x)) { value = 0; sliderSlide.setX(((rect.x) - (18 / 2))); }else if ((pos.x) > ((rect.x) + (rect.width))) { value = 100; sliderSlide.setX((((rect.x) + (rect.width)) - (18 / 2))); }else { value = (((int) ((pos.x) - (rect.x))) * 100) / ((int) (rect.width)); sliderSlide.setX(((pos.x) - (18 / 2))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5766/buggy-version/core.src.com.starbangers.sasus.GSlider.java", "BodyUseAPI": [], "Fixed commit": "174e5c0b42492c6d9f9a6c03d5d83a0b672c1718", "Url": "https://api.github.com/repos/Starbangers/SASUS", "Date": "2016-05-24T10:58:52Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.m_state) == null) { this.m_state = new node.facebook.FacebookShardState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8350/buggy-version/assignment2.src.node.facebook.FacebookShardSystem.java", "BodyUseAPI": [], "Fixed commit": "31dd4f847a18fd37b53641609022d6838c837592", "Url": "https://api.github.com/repos/sergioclemente/distributed_systems", "Date": "2012-05-13T21:58:12Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.isSneaking()) && (com.michael.e.liquislots.config.ConfigHandler.debugMode)) { com.michael.e.liquislots.block.TileEntityLiquipackIO te = ((com.michael.e.liquislots.block.TileEntityLiquipackIO) (world.getTileEntity(x, y, z))); if (((te.buffer.getFluid()) != null) && ((te.buffer.getFluid().getFluid()) != null)) { player.addChatComponentMessage(new net.minecraft.util.ChatComponentText((((te.buffer.getFluid().getFluid().getName()) + \" \") + (te.buffer.getFluid().amount)))); }else if ((te.buffer.getFluid()) != null) { player.addChatComponentMessage(new net.minecraft.util.ChatComponentText((((te.buffer.getFluid().fluidID) + \" \") + (te.buffer.getFluid().amount)))); } player.addChatComponentMessage(new net.minecraft.util.ChatComponentText((((te.isDrainingMode()) + \" \") + (te.getTank())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4908/buggy-version/src.main.java.com.michael.e.liquislots.block.BlockLiquipackIO.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.addChatComponentMessage(net.minecraft.util.ChatComponentText)", "net.minecraft.entity.player.EntityPlayer.addChatComponentMessage(net.minecraft.util.ChatComponentText)", "net.minecraft.entity.player.EntityPlayer.addChatComponentMessage(net.minecraft.util.ChatComponentText)"], "Fixed commit": "b9fcb9552d0cad9612f147c8b4e4799298262330", "Url": "https://api.github.com/repos/michael-3-141/LiquiPacks", "Date": "2015-03-24T14:10:38Z"},
{"Line": "=>2535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.groovy.grails.orm.hibernate.cfg.ColumnConfig.getIndex()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (indexObj instanceof java.lang.Boolean) { java.lang.Boolean b = ((java.lang.Boolean) (indexObj)); if (b) { indexDefinition = columnName + \"_idx\"; } }else { indexDefinition = indexObj.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2694/buggy-version/grails-hibernate.src.main.groovy.org.codehaus.groovy.grails.orm.hibernate.cfg.GrailsDomainBinder.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "c530518181ec324cf44329873f7d804f1293f85d", "Url": "https://api.github.com/repos/grails/grails-core", "Date": "2011-07-05T08:47:25Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.devicehive.dao.AccessKeyDAO.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((accessKey.getExpirationDate()) != null) { final java.lang.Long expiresIn = (accessKey.getExpirationDate().getTime()) - (timestampService.getTimestamp().getTime()); if ((((com.devicehive.model.enums.AccessKeyType.SESSION) == (accessKey.getType())) && (expiresIn > 0)) && (expiresIn < (expirationPeriod / 2))) { em.refresh(accessKey, LockModeType.PESSIMISTIC_WRITE); accessKey.setExpirationDate(new java.sql.Timestamp(((timestampService.getTimestamp().getTime()) + expirationPeriod))); return accessKeyDAO.update(accessKey); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8031/buggy-version/server.src.main.java.com.devicehive.service.AccessKeyService.java", "BodyUseAPI": ["accessKey.getExpirationDate().getTime()", "com.devicehive.service.AccessKey.setExpirationDate(java.sql.Timestamp)", "javax.persistence.EntityManager.refresh(com.devicehive.service.AccessKey,LockModeType.PESSIMISTIC_WRITE)", "com.devicehive.dao.AccessKeyDAO.update(com.devicehive.service.AccessKey)", "com.devicehive.service.AccessKey.getType()", "com.devicehive.service.AccessKey.getExpirationDate()"], "Fixed commit": "9e9e6f2b9c1d9d0a37dec1ca52f59a931eeecfbc", "Url": "https://api.github.com/repos/devicehive/devicehive-java", "Date": "2015-02-11T14:28:10Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.catrobat.catroid.ui.BackPackActivity.currentFragmentPosition) == (org.catrobat.catroid.ui.BackPackActivity.FRAGMENT_BACKPACK_SCENES)) { ((org.catrobat.catroid.ui.adapter.SceneAdapter) (adapter)).clearCheckedScenes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/575/buggy-version/catroid.src.org.catrobat.catroid.ui.BackPackActivity.java", "BodyUseAPI": [], "Fixed commit": "2e33358da7f2f025dae4485330b82a1e91ee47db", "Url": "https://api.github.com/repos/loibi93/Catroid", "Date": "2016-07-12T11:19:34Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(StringHelper.MIDDLE_LINE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (p > 0) { title = title.substring(0, p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2495/buggy-version/ytb.src.main.java.com.ps0x.service.YtbService.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "8e71555833c6001552dcd54757d025dd8b77b316", "Url": "https://api.github.com/repos/moistrot/yestube", "Date": "2015-09-29T10:55:00Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sparkJars != null) { jarsArray = new java.lang.String[sparkJars.size()]; sparkJars.toArray(jarsArray); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6705/buggy-version/src.main.java.com.stratio.connector.deep.connection.DeepConnector.java", "BodyUseAPI": ["java.util.List<java.lang.String>.toArray(java.lang.String[])", "java.util.List<java.lang.String>.size()"], "Fixed commit": "2a887c56b30bc1ff237b1d9427fd8a6dbae63671", "Url": "https://api.github.com/repos/Stratio/stratio-connector-deep", "Date": "2014-12-16T15:38:21Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action == (net.minecraftforge.event.entity.player.PlayerInteractEvent.Action.RIGHT_CLICK_AIR)) { event = org.spongepowered.api.event.SpongeEventFactory.createInteractBlockEventSecondary(org.spongepowered.api.event.cause.Cause.of(org.spongepowered.api.event.cause.NamedCause.source(player)), java.util.Optional.empty(), ((org.spongepowered.api.world.World) (world)).createSnapshot(org.spongepowered.common.util.VecHelper.toVector(pos)).withState(BlockTypes.AIR.getDefaultState()), (face == null ? org.spongepowered.api.util.Direction.NONE : org.spongepowered.common.registry.provider.DirectionFacingProvider.getInstance().getKey(face).get())); }else { event = org.spongepowered.api.event.SpongeEventFactory.createInteractBlockEventSecondary(org.spongepowered.api.event.cause.Cause.of(org.spongepowered.api.event.cause.NamedCause.source(player)), java.util.Optional.empty(), ((org.spongepowered.api.world.World) (world)).createSnapshot(org.spongepowered.common.util.VecHelper.toVector(pos)), (face == null ? org.spongepowered.api.util.Direction.NONE : org.spongepowered.common.registry.provider.DirectionFacingProvider.getInstance().getKey(face).get())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8579/buggy-version/src.main.java.org.spongepowered.mod.mixin.core.forge.event.MixinForgeEventFactory.java", "BodyUseAPI": [], "Fixed commit": "688b7b4618d2e204d4caa4384301bf32047a307d", "Url": "https://api.github.com/repos/sanman00/SpongeForge", "Date": "2015-12-26T09:51:49Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((router) == null) { throw new java.lang.NullPointerException(\"router is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4898/buggy-version/BlueMesh.src.blue.mesh.BlueMeshService.java", "BodyUseAPI": [], "Fixed commit": "d8c407cbb25bdca290b8018efd3781f3bf84e783", "Url": "https://api.github.com/repos/schnej7/Blue-Mesh", "Date": "2012-10-22T18:55:05Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (configs != null) { for (int i = 0; i < (configs.length); i++) { pid = configs[i].getPid(); item = new freemarker.template.SimpleHash(); item.put(\"pid\", pid); item.put(\"pid_cleaned\", pid.replace('.', '_')); config_list.add(item); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2798/buggy-version/com.buglabs.app.bugdash2.com.buglabs.app.bugdash2.controller.system.ConfigurationController.java", "BodyUseAPI": ["configs[i].getPid()"], "Fixed commit": "67a3d747d401c58df29416f1c0ffc051c4035a04", "Url": "https://api.github.com/repos/buglabs/bug-osgi", "Date": "2011-07-18T09:33:31Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.PlatformUI.getWorkbench().getEditorRegistry().getDefaultEditor(fileToBeOpened.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (desc == null) { page.openEditor(editorInput, \"org.eclipse.ui.DefaultTextEditor\"); }else { page.openEditor(editorInput, desc.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/9222/buggy-version/net.sourceforge.vrapper.eclipse.src.net.sourceforge.vrapper.eclipse.platform.EclipseFileService.java", "BodyUseAPI": ["org.eclipse.ui.IWorkbenchPage.openEditor(org.eclipse.ui.IEditorInput,desc.getId())", "org.eclipse.ui.IEditorDescriptor.getId()"], "Fixed commit": "2659b611c616392bd7295c2849e3931e6dfcdbef", "Url": "https://api.github.com/repos/vrapper/vrapper", "Date": "2012-10-20T02:55:32Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { setProgressDrawable(resources.getDrawable(com.andrew.apollo.widgets.theme.ThemeableSeekBar.PROGESS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2294/buggy-version/android.apollo.src.com.andrew.apollo.widgets.theme.ThemeableSeekBar.java", "BodyUseAPI": [], "Fixed commit": "ac915d6c2147bed9fa3a0053d2178304dfdc87aa", "Url": "https://api.github.com/repos/gubatron/frostwire", "Date": "2016-10-11T18:14:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { setBackground(resources.getDrawable(com.andrew.apollo.widgets.theme.ThemeableFrameLayout.BACKGROUND)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2294/buggy-version/android.apollo.src.com.andrew.apollo.widgets.theme.ThemeableFrameLayout.java", "BodyUseAPI": [], "Fixed commit": "ac915d6c2147bed9fa3a0053d2178304dfdc87aa", "Url": "https://api.github.com/repos/gubatron/frostwire", "Date": "2016-10-11T18:14:22Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInEditMode()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2294/buggy-version/android.apollo.src.com.andrew.apollo.widgets.RepeatingImageButton.java", "BodyUseAPI": [], "Fixed commit": "ac915d6c2147bed9fa3a0053d2178304dfdc87aa", "Url": "https://api.github.com/repos/gubatron/frostwire", "Date": "2016-10-11T18:14:22Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (networkUp()) { com.udacity.stockhawk.sync.QuoteSyncJob.syncImmediately(this); }else { swipeRefreshLayout.setRefreshing(false); es.dmoral.toasty.Toasty.error(this, getString(R.string.toast_no_connectivity), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3626/buggy-version/app.src.main.java.com.udacity.stockhawk.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7b9ae116e1803a33d2426dc67b37fa9d2fdb0490", "Url": "https://api.github.com/repos/firdausmaulan/Stock-Hawk", "Date": "2017-05-21T13:10:05Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.appwidget.AppWidgetManager.getAppWidgetIds(android.content.ComponentName)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((appWidgetIds.length) != 0) { com.udacity.stockhawk.StockHawkProvider.updateAppWidget(this, appWidgetManager, appWidgetIds[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3626/buggy-version/app.src.main.java.com.udacity.stockhawk.BackgroundService.java", "BodyUseAPI": ["com.udacity.stockhawk.StockHawkProvider.updateAppWidget(com.udacity.stockhawk.BackgroundService,android.appwidget.AppWidgetManager,int)"], "Fixed commit": "7b9ae116e1803a33d2426dc67b37fa9d2fdb0490", "Url": "https://api.github.com/repos/firdausmaulan/Stock-Hawk", "Date": "2017-05-21T13:10:05Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((dataSources.get(0)) instanceof ucar.unidata.idv.control.AddeImageDataSource)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7044/buggy-version/src.ucar.unidata.idv.control.ImagePlanViewControl.java", "BodyUseAPI": [], "Fixed commit": "095ca81e64ddea2a3d0316b2ac4d98ebe283178f", "Url": "https://api.github.com/repos/lesserwhirls/IDV", "Date": "2014-01-28T23:47:58Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Models.SimulatorView.getFirstReservation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (freeLocation == null) { freeLocation = simulatorView.getFirstFreeLocation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3826/buggy-version/src.Models.Simulator.java", "BodyUseAPI": [], "Fixed commit": "e641777f51b137933d941fc401067815bbeda75b", "Url": "https://api.github.com/repos/CrazyMazzo/Parking_Garage", "Date": "2017-01-30T13:37:00Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((foodID) != (-1)) TFC.Food.ItemFoodTFC.FoodList[foodID] = this.itemID;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1327/buggy-version/TFC_Shared.src.TFC.Food.ItemFoodTFC.java", "BodyUseAPI": [], "Fixed commit": "0f8a85629bc7a6fc8a2d7a4ba642b2bf46724e14", "Url": "https://api.github.com/repos/Deadrik/TFCraft", "Date": "2014-02-11T23:27:23Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state.isEmpty()) return defaultValue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7119/buggy-version/src.main.java.me.dmillerw.quadrum.trait.QuadrumTrait.java", "BodyUseAPI": [], "Fixed commit": "b808aa067fc832a0b60f5e1b98e727e006e0b1c4", "Url": "https://api.github.com/repos/dmillerw/Quadrum", "Date": "2017-02-12T09:21:13Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.oscarehr.common.dao.AppointmentStatusDao.findAll(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((results.size()) >= 100) { org.oscarehr.managers.ScheduleManager.logger.error(\"We reached a hard coded limit, why >100 statuses?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4093/buggy-version/src.main.java.org.oscarehr.managers.ScheduleManager.java", "BodyUseAPI": [], "Fixed commit": "f4a04e6c32473b2d921ca18931952b965fd4a2aa", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2014-10-24T13:41:33Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.achartengine.model.XYMultipleSeriesDataset.getSeriesAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (series != null) { final java.lang.String title = series.getTitle(); if (title != null) { titles[i] = title; }else { titles[i] = \"\"; } }else { titles[i] = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7168/buggy-version/achartengine.src.org.achartengine.chart.XYChart.java", "BodyUseAPI": ["org.achartengine.model.XYSeries.getTitle()"], "Fixed commit": "5bb5869b3809f07abcd02d4b99c549088e4259d9", "Url": "https://api.github.com/repos/beemogmbh/AChartEngine", "Date": "2017-08-02T08:25:23Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mResults.result.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (item.isLoading) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6157/buggy-version/app.src.main.java.moe.exmagic.tricks.bangumiinfo.SearchResultFragment.java", "BodyUseAPI": [], "Fixed commit": "9c0b2f51a38790fc078eb882329591673da4a524", "Url": "https://api.github.com/repos/Trickness/BangumiInfo-Android", "Date": "2017-01-06T04:53:19Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((memstoreReplicationExecutor) != null) { memstoreReplicationExecutor.resizeQueues(conf); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3345/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.ipc.SimpleRpcScheduler.java", "BodyUseAPI": [], "Fixed commit": "e3b9236347f97e46b3114c3d89b4007b7baed637", "Url": "https://api.github.com/repos/ramkrish86/hbase-1", "Date": "2017-09-25T11:45:10Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((memstoreReplicationExecutor) != null) memstoreReplicationExecutor.start(port);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3345/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.ipc.SimpleRpcScheduler.java", "BodyUseAPI": [], "Fixed commit": "e3b9236347f97e46b3114c3d89b4007b7baed637", "Url": "https://api.github.com/repos/ramkrish86/hbase-1", "Date": "2017-09-25T11:45:10Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((memstoreReplicationExecutor) != null) memstoreReplicationExecutor.stop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3345/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.ipc.SimpleRpcScheduler.java", "BodyUseAPI": [], "Fixed commit": "e3b9236347f97e46b3114c3d89b4007b7baed637", "Url": "https://api.github.com/repos/ramkrish86/hbase-1", "Date": "2017-09-25T11:45:10Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gameMaster.getState().getCurrentBlock().getSelectTeam()) != null) { java.lang.String pickingTeam = gameMaster.getState().getCurrentBlock().getSelectTeam().getTeamName(); java.awt.Font choice = new java.awt.Font(\"Arial\", java.awt.Font.PLAIN, 12); g.setFont(choice); g.drawString(pickingTeam, (((view.Renderer.inputManager.getDiceButtonOrigin().getX()) - (i * 56)) - 3), ((view.Renderer.inputManager.getDiceButtonOrigin().getY()) + 68)); g.setFont(standard); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6645/buggy-version/BloodBowlITU.src.view.Renderer.java", "BodyUseAPI": ["gameMaster.getState().getCurrentBlock().getSelectTeam().getTeamName()", "gameMaster.getState().getCurrentBlock().getSelectTeam()", "gameMaster.getState().getCurrentBlock()", "game.GameMaster.getState()"], "Fixed commit": "a7e47e43bb4e7063c039bfa8f00d554177ada1d8", "Url": "https://api.github.com/repos/njustesen/bbowl", "Date": "2013-04-01T18:22:31Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.isRaining()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isRaining) { return 0.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7676/buggy-version/src.main.java.starryskyline.teastory.block.Teapan.java", "BodyUseAPI": [], "Fixed commit": "205bc0c9b46e4f0563734d2b9b13cbf5f98c6e33", "Url": "https://api.github.com/repos/LuoXiao-Wing/TeaStory", "Date": "2017-02-19T02:37:27Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ee461l.surewalk.RequesterRequestScreen.1.getLocationFromAddress(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (destAddress != null) { com.google.android.gms.maps.model.LatLng destLatLng = new com.google.android.gms.maps.model.LatLng(destAddress.getLatitude(), destAddress.getLongitude()); destinationMarker = mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(destLatLng).title(\"Destination\")); destinationLocData = destLatLng; if ((currentRequester) != null) { currentRequest = currentRequester.newRequest(currentLocData, destinationLocData); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1748/buggy-version/app.src.main.java.ee461l.surewalk.RequesterRequestScreen.java", "BodyUseAPI": ["android.location.Address.getLatitude()", "android.location.Address.getLongitude()"], "Fixed commit": "f9a27268b198b63f08731bf70908481e00faf5d6", "Url": "https://api.github.com/repos/alex-cone/SureWalk", "Date": "2016-11-19T21:04:59Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args[0].equalsIgnoreCase(\"list\")) { if ((currentGame) != null) { player.sendMessage(((org.bukkit.ChatColor.GOLD) + \"Players left alive:\")); for (net.evtr.hungergames.HungerPlayer hPlayer : currentGame.getAlivePlayers()) { player.sendMessage(((org.bukkit.ChatColor.GOLD) + (hPlayer.getPlayerName()))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8862/buggy-version/src.net.evtr.hungergames.HungerGames.java", "BodyUseAPI": [], "Fixed commit": "c7b27dedd4920e618fbef02df62c7d436f5f6d18", "Url": "https://api.github.com/repos/thebinaryhood/bukkit_hunger", "Date": "2012-05-04T05:19:41Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (len <= 255) { offset = 2; data = new byte[offset + len]; data[0] = org.shypl.biser.server.ClientConnection.MARK_MSG_1; data[1] = ((byte) (len)); }else if (len <= 65535) { offset = 3; data = new byte[offset + len]; data[0] = org.shypl.biser.server.ClientConnection.MARK_MSG_2; data[1] = ((byte) (len >>> 8)); data[2] = ((byte) (len)); }else if (len <= 16777215) { offset = 4; data = new byte[offset + len]; data[0] = org.shypl.biser.server.ClientConnection.MARK_MSG_3; data[1] = ((byte) (len >>> 16)); data[2] = ((byte) (len >>> 8)); data[3] = ((byte) (len)); }else { offset = 5; data = new byte[offset + len]; data[0] = org.shypl.biser.server.ClientConnection.MARK_MSG_4; data[1] = ((byte) (len >>> 24)); data[2] = ((byte) (len >>> 16)); data[3] = ((byte) (len >>> 8)); data[4] = ((byte) (len)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1208/buggy-version/java.src.org.shypl.biser.server.ClientConnection.java", "BodyUseAPI": [], "Fixed commit": "f52e888d02c0fcf110e166979c822a54416ada47", "Url": "https://api.github.com/repos/shypl/biser", "Date": "2014-04-14T14:18:05Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8443/buggy-version/application.src.main.java.cn.edu.nju.utils.StringUtil.java", "BodyUseAPI": [], "Fixed commit": "991173ae1d41bde5e3bcd55e90c0a2580caf68c6", "Url": "https://api.github.com/repos/bedisdover/ESS", "Date": "2017-12-10T13:16:58Z"},
{"Line": "=>1191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["data.getProperties().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((isMultiple != null) && ((isMultiple.length) > 0)) { propertyDefinition.setMultiple(java.lang.Boolean.parseBoolean(isMultiple[0])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3710/buggy-version/modules-provider.src.main.java.org.jahia.modules.external.modules.ModulesDataSource.java", "BodyUseAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)", "org.jahia.modules.external.modules.ExtendedPropertyDefinition.setMultiple(boolean)"], "Fixed commit": "8aa5762912c2efead02fa40d2775a5f0caf6b3d6", "Url": "https://api.github.com/repos/Jahia/external-provider", "Date": "2014-02-13T17:02:14Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (engineUrl.equals(ai.grakn.factory.OrientDBInternalFactory.SPECIAL_IN_MEMORY)) engineUrl = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6581/buggy-version/grakn-orientdb-factory.src.main.java.ai.grakn.factory.OrientDBInternalFactory.java", "BodyUseAPI": [], "Fixed commit": "3e1ea0253549b8c9471e3b3401ffa7518eecc5b5", "Url": "https://api.github.com/repos/fppt/grakn", "Date": "2016-11-23T15:52:49Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isPasswordChanged(user)) { user.setPassword(org.apache.commons.codec.digest.DigestUtils.md5Hex(user.getPassword())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7637/buggy-version/src.main.java.it.univaq.incipict.profilemanager.presentation.UserController.java", "BodyUseAPI": ["org.apache.commons.codec.digest.DigestUtils.md5Hex(user.getPassword())", "it.univaq.incipict.profilemanager.business.model.User.getPassword()", "it.univaq.incipict.profilemanager.business.model.User.setPassword(org.apache.commons.codec.digest.DigestUtils.md5Hex(user.getPassword()))"], "Fixed commit": "69c414f65e7e9b74548913a3cd7818da5a7a4746", "Url": "https://api.github.com/repos/dantel19/profile-manager", "Date": "2017-01-28T17:09:14Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IProject.getFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(optionsFile.exists())) { java.io.InputStream is = new java.io.ByteArrayInputStream(toUuagcString().getBytes()); optionsFile.create(is, true, null); }else { provider.connect(optionsFile); org.eclipse.jface.text.IDocument doc = provider.getDocument(optionsFile); doc.set(toUuagcString()); provider.saveDocument(null, optionsFile, doc, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4774/buggy-version/net.sf.eclipsefp.haskell.core.src.net.sf.eclipsefp.haskell.core.uuagc.UuagcProjectManager.java", "BodyUseAPI": ["org.eclipse.core.resources.IFile.create(java.io.InputStream,boolean,<nulltype>)", "org.eclipse.ui.editors.text.TextFileDocumentProvider.getDocument(org.eclipse.core.resources.IFile)", "org.eclipse.ui.editors.text.TextFileDocumentProvider.connect(org.eclipse.core.resources.IFile)", "org.eclipse.ui.editors.text.TextFileDocumentProvider.saveDocument(<nulltype>,org.eclipse.core.resources.IFile,org.eclipse.jface.text.IDocument,boolean)"], "Fixed commit": "12c457e3072b433e3f569fd7d04c29a00147c9bb", "Url": "https://api.github.com/repos/serras/eclipsefp", "Date": "2011-08-21T15:03:56Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((threadEvent.getStartTime()) + 50) > tempMaximumTime) { tempMaximumTime = (threadEvent.getStartTime()) + 50; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8396/buggy-version/src.utils.SizeHelper.java", "BodyUseAPI": ["model.ThreadEvent.getStartTime()"], "Fixed commit": "2cf03465ec7bfeb601accfe2896ea3bfc1e9c1d0", "Url": "https://api.github.com/repos/scale-proactive/A-viewer-tool-for-multiactive-objects", "Date": "2015-06-15T08:01:23Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["in.co.sdslabs.cognizance.DatabaseHelper.getStartTime(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((start >= 1200) && (start < 1300)) { if ((start % 100) == 0) { startX = ((start / 100) + \":\") + \"00 pm\"; }else { startX = (((start / 100) + \":\") + (start % 100)) + \" pm\"; } }else { if ((start % 100) == 0) { startX = (((start / 100) - 12) + \":\") + \"00 pm\"; }else { startX = ((((start / 100) - 12) + \":\") + (start % 100)) + \" pm\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2239/buggy-version/Cognizance.src.in.co.sdslabs.cognizance.EventActivity.java", "BodyUseAPI": [], "Fixed commit": "eb2c0bba2b183d5c92afd5aab7b9905798642f82", "Url": "https://api.github.com/repos/sdsmdg/Cognizance", "Date": "2014-03-17T07:59:55Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.startDateTime) == null) || ((this.endDateTime) == null)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2141/buggy-version/src.main.java.seedu.geekeep.logic.commands.UpdateCommand.java", "BodyUseAPI": [], "Fixed commit": "265cb4b3de35fa46e4b647f8b70f9ca42c8db6f2", "Url": "https://api.github.com/repos/CS2103JAN2017-W15-B4/main", "Date": "2017-03-23T18:50:00Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.venky.swf.db.model.reflection.ModelReflector<M>.getFieldGetter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (getter == null) { throw new java.lang.NullPointerException((((\"No Field Getter found for fieldName:\" + fieldName) + \" In \") + (getModelClass().getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3836/buggy-version/swf.src.main.java.com.venky.swf.db.model.reflection.ModelReflector.java", "BodyUseAPI": [], "Fixed commit": "f5b951f7cf6ad085fea6e4c4a6004222e4538ac1", "Url": "https://api.github.com/repos/venkatramanm/swf-all", "Date": "2013-03-11T10:21:43Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.venky.swf.db.model.reflection.ModelReflector<? extends com.venky.swf.db.model.Model>.get(com.venky.swf.db.model.Model,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.venky.swf.db.Database.getJdbcTypeHelper().isVoid(value)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3836/buggy-version/swf.src.main.java.com.venky.swf.db.model.io.xls.XLSModelIO.java", "BodyUseAPI": [], "Fixed commit": "f5b951f7cf6ad085fea6e4c4a6004222e4538ac1", "Url": "https://api.github.com/repos/venkatramanm/swf-all", "Date": "2013-03-11T10:21:43Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mQuestionList.contains(q)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1975/buggy-version/app.src.main.java.com.jbrys.android.bloquery.ui.fragment.QuestionsFragment.java", "BodyUseAPI": [], "Fixed commit": "3a2ce6ba294e8e83c4a5fb042f2e8d97d66e5ca8", "Url": "https://api.github.com/repos/jbrys/BloQuery", "Date": "2015-12-24T05:40:35Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(response.getEntries().isEmpty())) { (disseminationRounds)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5699/buggy-version/search.src.main.java.search.system.peer.search.Search.java", "BodyUseAPI": [], "Fixed commit": "6cc5960be284bbc712b879279b285d9adb6bdf57", "Url": "https://api.github.com/repos/Nypias/id2210-vt13", "Date": "2013-05-21T18:04:40Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (liftedRxLifecycleBinder.isClosed()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/9197/buggy-version/android.src.main.java.io.nextop.rx.RxViewGroup.java", "BodyUseAPI": [], "Fixed commit": "6d9c67dd4c991dbdc4989b1d366a81a4df82baa6", "Url": "https://api.github.com/repos/nextopio/nextop-client", "Date": "2015-02-24T02:35:16Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wyil.transforms.BackPropagation.Env.get(code.target)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (req == (Type.T_ANY)) { coerceAfter(req, code.constant.type(), code.target, index, entry); }else { wyil.transforms.Constant nconstant; if (req == (Type.T_STRING)) { nconstant = wyil.transforms.Constant.V_STRING(code.constant.toString()); }else { nconstant = convert(req, code.constant, entry); } wyil.transforms.BackPropagation.rewrites.put(index, new wyil.transforms.Block.Entry(wyil.transforms.Code.Const(code.target, nconstant), entry.attributes())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1272/buggy-version/modules.wyil.src.wyil.transforms.BackPropagation.java", "BodyUseAPI": ["wyil.transforms.BackPropagation.coerceAfter(wyil.transforms.Type,code.constant.type(),code.target,int,wyil.lang.Block.Entry)", "wyil.transforms.BackPropagation.convert(wyil.transforms.Type,code.constant,wyil.lang.Block.Entry)"], "Fixed commit": "1c5eac73be80087e1ccd21cb46427a6a2abe6363", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2013-10-05T04:58:12Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((windchill) == \"null\") { windchill = \"feels like \" + (temp); }else { windchill = (\"feels like \" + (windchill)) + \"\u00b0c\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6246/buggy-version/app.src.main.java.com.szaidi.uwaterlooweather.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "9c11f089f05239b84d7d775139492d7a0635e037", "Url": "https://api.github.com/repos/TheSZ11/uWaterlooWeather", "Date": "2015-04-14T23:51:03Z"},
{"Line": "=>1912", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.clusterSelection.getName().equals(clusterSelection)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/31/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OClassImpl.java", "BodyUseAPI": [], "Fixed commit": "6f3cfa31ec04f9e671331aa69037956943f7296d", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2015-11-23T14:19:39Z"},
{"Line": "=>1928", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.clusterSelection.getName().equals(iClusterSelection.getName())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/31/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OClassImpl.java", "BodyUseAPI": [], "Fixed commit": "6f3cfa31ec04f9e671331aa69037956943f7296d", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2015-11-23T14:19:39Z"},
{"Line": "=>3403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((op.equals(\"and\")) || (op.equals(\"or\"))) { com.ge.research.sadl.model.gp.Junction jct = new com.ge.research.sadl.model.gp.Junction(); jct.setJunctionName(op); jct.setLhs(lobj); jct.setRhs(robj); return jct; }else { return createBinaryBuiltin(op, lobj, robj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8054/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelProcessor.java", "BodyUseAPI": ["com.ge.research.sadl.model.gp.Junction.setJunctionName(java.lang.String)", "com.ge.research.sadl.jena.JenaBasedSadlModelProcessor.createBinaryBuiltin(java.lang.String,java.lang.Object,java.lang.Object)"], "Fixed commit": "901a19504cb9f0ff38b1f60a61d9ad6c128566d5", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2017-11-01T17:47:01Z"},
{"Line": "=>1705", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((patterns.size()) == 0) { patterns.add(be); }else { patterns.add(((patterns.size()) - 1), be); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8054/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.IntermediateFormTranslator.java", "BodyUseAPI": ["java.util.List<com.ge.research.sadl.model.gp.GraphPatternElement>.size()", "java.util.List<com.ge.research.sadl.model.gp.GraphPatternElement>.add(com.ge.research.sadl.model.gp.BuiltinElement)", "java.util.List<com.ge.research.sadl.model.gp.GraphPatternElement>.add(((patterns.size()) - 1),com.ge.research.sadl.model.gp.BuiltinElement)"], "Fixed commit": "901a19504cb9f0ff38b1f60a61d9ad6c128566d5", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2017-11-01T17:47:01Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getDateOfBirth()) != null) { jsonObject.addProperty(\"dateOfBirth\", ddMMyyyyFormat.format(user.getDateOfBirth())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4279/buggy-version/web.src.main.java.com.aristotle.web.plugin.impl.UserPlugin.java", "BodyUseAPI": ["com.aristotle.web.plugin.impl.UserPlugin.format(user.getDateOfBirth())", "com.aristotle.core.persistance.User.getDateOfBirth()", "com.google.gson.JsonObject.addProperty(java.lang.String,ddMMyyyyFormat.format(user.getDateOfBirth()))"], "Fixed commit": "9897908253db66e8c5d7fa6e9a466250ecda18e4", "Url": "https://api.github.com/repos/ModernAristotle/aristotle", "Date": "2015-06-11T04:34:44Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentMinute == 0) { currentMinute = 12; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3089/buggy-version/wear.src.main.java.com.bytemesoftware.wear.faces.binary.time.Hours.java", "BodyUseAPI": [], "Fixed commit": "611d3aa99b2c4f9e0e77a57f377c1edbeadc743e", "Url": "https://api.github.com/repos/dwa012/WearBinaryWatchFace", "Date": "2014-07-06T18:03:53Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (whiteTurn) { whiteMoves = this.allLegalMoves().moves.size(); }else { blackMoves = this.allLegalMoves().moves.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1139/buggy-version/src.Board.java", "BodyUseAPI": [], "Fixed commit": "63585b198d055ecb40bebc47dd4b1d944391b1d8", "Url": "https://api.github.com/repos/amirshukayev/chess", "Date": "2017-11-12T03:14:12Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fr.axicer.SpatiumUtils.Configs.ConfigManager.getMoneyConfig().getInt((\"players.\" + (ev.getPlayer().getUniqueId().toString())))) == 0) { fr.axicer.SpatiumUtils.Configs.ConfigManager.getMoneyConfig().set((\"players.\" + (ev.getPlayer().getUniqueId().toString())), 0); fr.axicer.SpatiumUtils.Configs.ConfigManager.saveMoneyConfig(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4329/buggy-version/SpatiumUtils.src.fr.axicer.SpatiumUtils.Events.EventsListener.PlayerJoin.java", "BodyUseAPI": ["ev.getPlayer().getUniqueId()", "org.bukkit.event.player.PlayerJoinEvent.getPlayer()", "fr.axicer.SpatiumUtils.Configs.ConfigManager.getMoneyConfig().set((\"players.\" + (ev.getPlayer().getUniqueId().toString())),int)", "ev.getPlayer().getUniqueId().toString()"], "Fixed commit": "c2c63c97e73ccad87fa5248debe5a53c14631401", "Url": "https://api.github.com/repos/Axicer/SpatiumUtils", "Date": "2015-07-27T12:06:52Z"},
{"Line": "=>612", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jwebsocket.tcp.WebSocketProtocolAbstraction.protocolToRawPacket(int,java.io.InputStream)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (WebSocketFrameType.PONG.equals(lPacket.getFrameType())) { if (org.jwebsocket.tcp.TCPConnector.mLog.isDebugEnabled()) { org.jwebsocket.tcp.TCPConnector.mLog.debug(((\"Received 'pong' frame from \" + lFrom) + \"...\")); } }else if (WebSocketFrameType.CLOSE.equals(lPacket.getFrameType())) { if (org.jwebsocket.tcp.TCPConnector.mLog.isDebugEnabled()) { org.jwebsocket.tcp.TCPConnector.mLog.debug(((\"Processing 'close' frame from \" + lFrom) + \"...\")); } mCloseReason = CloseReason.CLIENT; setStatus(WebSocketConnectorStatus.DOWN); org.jwebsocket.api.WebSocketPacket lClose = new org.jwebsocket.tcp.RawPacket(WebSocketFrameType.CLOSE, \"\"); sendPacket(lClose); }else { org.jwebsocket.tcp.TCPConnector.mLog.error(((\"Unknown frame type '\" + (lPacket.getFrameType())) + \"', closing connection.\")); mCloseReason = CloseReason.SERVER; setStatus(WebSocketConnectorStatus.DOWN); org.jwebsocket.api.WebSocketPacket lClose = new org.jwebsocket.tcp.RawPacket(\"\"); lClose.setFrameType(WebSocketFrameType.CLOSE); sendPacket(lClose); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3139/buggy-version/src.main.java.org.jwebsocket.tcp.TCPConnector.java", "BodyUseAPI": ["org.jwebsocket.api.WebSocketPacket.getFrameType()", "org.jwebsocket.api.WebSocketPacket.getFrameType()", "WebSocketFrameType.CLOSE.equals(lPacket.getFrameType())", "org.apache.log4j.Logger.error(((\"Unknown frame type '\" + (lPacket.getFrameType())) + \"', closing connection.\"))"], "Fixed commit": "98f176dcf15a3779b9048628ab64db52e0b62e80", "Url": "https://api.github.com/repos/jamieforth/jwebsocket-server", "Date": "2012-09-19T14:44:14Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((accounts.size()) == 0) { javax.swing.JOptionPane.showMessageDialog(null, \"No accounts inputted.\", \"No accounts inputted.\", javax.swing.JOptionPane.ERROR_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/221/buggy-version/src.GUI.java", "BodyUseAPI": [], "Fixed commit": "2690e20d14688e318cbb06d45006ed86b75202f4", "Url": "https://api.github.com/repos/T-Wong/SearchBot", "Date": "2014-10-04T21:49:33Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["HashChains.ListNode.getPrevious()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (p == null) { nodeArray[index] = q; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5588/buggy-version/course_2.week_4.assignment_2.src.main.java.HashChains.java", "BodyUseAPI": [], "Fixed commit": "a18ebadfa6b54e9d46ee38e4afa4cf05151ce5e5", "Url": "https://api.github.com/repos/shamim-ahmed/coursera-algorithm-specialization", "Date": "2017-06-18T05:28:21Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loadout.getHeatsinksCount()) < 10) { heatsinks.setForeground(java.awt.Color.RED); }else { heatsinks.setForeground(effectiveHS.getForeground()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2877/buggy-version/src.lisong_mechlab.view.LoadoutInfoPanel.java", "BodyUseAPI": [], "Fixed commit": "6b47a8bccb6a1f68d2f97cc56aca7f0808ed1b10", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2013-11-16T19:05:09Z"},
{"Line": "=>1205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { systemBarsReservedSpace = java.lang.Math.max(getSystemBarHeight(\"status_bar_height\"), getSystemBarHeight(\"navigation_bar_height\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/75/buggy-version/lib.src.main.java.com.rey.material.widget.ListPopupWindow.java", "BodyUseAPI": [], "Fixed commit": "c1942a1d47997c29432d57bb1cd3198adf77ef4b", "Url": "https://api.github.com/repos/rey5137/material", "Date": "2015-05-13T17:03:04Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((specialViewFlow1) != null) { specialViewFlow1.addSkinFactories(new eu.mihosoft.vrl.workflow.fx.FXSkinFactory(minimapPane3.getContentPane())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4277/buggy-version/VWorkflows-FX.src.eu.mihosoft.vrl.workflow.demo.MainWindowFXMLController.java", "BodyUseAPI": [], "Fixed commit": "46ad009d98307846e877ab823feb50aeb6cadd72", "Url": "https://api.github.com/repos/miho/VWorkflows", "Date": "2013-05-27T18:48:11Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((specialViewFlow2) != null) { specialViewFlow2.addSkinFactories(new eu.mihosoft.vrl.workflow.fx.FXSkinFactory(minimapPane4.getContentPane())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4277/buggy-version/VWorkflows-FX.src.eu.mihosoft.vrl.workflow.demo.MainWindowFXMLController.java", "BodyUseAPI": [], "Fixed commit": "46ad009d98307846e877ab823feb50aeb6cadd72", "Url": "https://api.github.com/repos/miho/VWorkflows", "Date": "2013-05-27T18:48:11Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((((grts == null) || (grts == (com.wantscart.jade.core.GenericUtils.EMPTY_CLASSES))) || ((grts[0]) == null)) && ((definition.getDAOGenericsClazz()) != null)) { grts = new java.lang.Class[1]; grts[0] = definition.getDAOGenericsClazz(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1953/buggy-version/wantscart-db-jade.src.main.java.com.wantscart.jade.provider.Modifier.java", "BodyUseAPI": [], "Fixed commit": "2dd24ad9e73d7690f2fe36763ce60ec783c511dd", "Url": "https://api.github.com/repos/Gbeginner/wantscart-db", "Date": "2015-12-25T04:54:41Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(block instanceof info.u_team.u_team_core.block.UBlock)) { throw new java.lang.IllegalArgumentException(\"You need to use an instance of UBlock here.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5421/buggy-version/src.main.java.info.u_team.u_team_core.item.UItemBlock.java", "BodyUseAPI": [], "Fixed commit": "b8b4673a65c17d97fee42cdced8ce9d75ad338bd", "Url": "https://api.github.com/repos/MC-U-Team/U-Team-Core", "Date": "2017-10-25T19:09:48Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (event.parameters[0].equalsIgnoreCase(\"reload\")) { dmillerw.time.data.SessionData.loadFromConfiguration(TooMuchTime.configuration); }else if (event.parameters[0].equals(\"set\")) { if (event.parameters[1].equals(\"day\")) { time = 0; }else if (event.parameters[1].equals(\"noon\")) { time = (dmillerw.time.data.SessionData.dayDuration) / 2; }else if (event.parameters[1].equals(\"night\")) { time = dmillerw.time.data.SessionData.dayDuration; }else { time = net.minecraft.command.CommandBase.parseIntWithMin(event.sender, event.parameters[1], 0); } setTime(time); net.minecraft.command.CommandBase.notifyAdmins(event.sender, \"commands.time.set\", time); return; }else if (event.parameters[0].equals(\"add\")) { time = net.minecraft.command.CommandBase.parseIntWithMin(event.sender, event.parameters[1], 0); addTime(time); net.minecraft.command.CommandBase.notifyAdmins(event.sender, \"commands.time.added\", time); return; }else if (event.parameters[0].equals(\"stop\")) { if ((event.parameters.length) == 3) { if (event.parameters[1].equals(\"sun\")) { int setAngle = net.minecraft.command.CommandBase.parseIntBounded(event.sender, event.parameters[2], 0, 180); dmillerw.time.data.SessionData.staticMoon = false; dmillerw.time.data.SessionData.staticAngle = setAngle; dmillerw.time.data.SessionData.setConfigurationProperty(\"general\", \"staticMoon\", false); dmillerw.time.data.SessionData.setConfigurationProperty(\"general\", \"staticAngle\", setAngle); net.minecraft.command.CommandBase.notifyAdmins(event.sender, \"tmt.commands.time.stop\", net.minecraft.util.StatCollector.translateToLocal(\"tmt.misc.sun\"), setAngle); PacketHandler.INSTANCE.sendToAll(new dmillerw.time.network.packet.PacketServerSettings()); return; }else if (event.parameters[1].equals(\"moon\")) { int setAngle = net.minecraft.command.CommandBase.parseIntBounded(event.sender, event.parameters[2], 0, 180); dmillerw.time.data.SessionData.staticMoon = true; dmillerw.time.data.SessionData.staticAngle = setAngle; dmillerw.time.data.SessionData.setConfigurationProperty(\"general\", \"staticMoon\", true); dmillerw.time.data.SessionData.setConfigurationProperty(\"general\", \"staticAngle\", setAngle); net.minecraft.command.CommandBase.notifyAdmins(event.sender, \"tmt.commands.time.stop\", net.minecraft.util.StatCollector.translateToLocal(\"tmt.misc.moon\"), setAngle); PacketHandler.INSTANCE.sendToAll(new dmillerw.time.network.packet.PacketServerSettings()); return; } } }else if (event.parameters[0].equals(\"set-day\")) { int setTime = net.minecraft.command.CommandBase.parseInt(event.sender, event.parameters[1]); dmillerw.time.data.SessionData.dayDuration = setTime; dmillerw.time.data.SessionData.setConfigurationProperty(\"general\", \"dayDuration\", setTime); net.minecraft.command.CommandBase.notifyAdmins(event.sender, \"tmt.commands.time.set\", net.minecraft.util.StatCollector.translateToLocal(\"tmt.misc.day\"), setTime); PacketHandler.INSTANCE.sendToAll(new dmillerw.time.network.packet.PacketServerSettings()); return; }else if (event.parameters[0].equals(\"set-night\")) { int setTime = net.minecraft.command.CommandBase.parseInt(event.sender, event.parameters[1]); dmillerw.time.data.SessionData.nightDuration = setTime; dmillerw.time.data.SessionData.setConfigurationProperty(\"general\", \"nightDuration\", setTime); net.minecraft.command.CommandBase.notifyAdmins(event.sender, \"tmt.commands.time.set\", net.minecraft.util.StatCollector.translateToLocal(\"tmt.misc.night\"), setTime); PacketHandler.INSTANCE.sendToAll(new dmillerw.time.network.packet.PacketServerSettings()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8053/buggy-version/src.main.java.dmillerw.time.handler.CommandEventHandler.java", "BodyUseAPI": ["net.minecraft.command.CommandBase.notifyAdmins(event.sender,java.lang.String,net.minecraft.util.StatCollector.translateToLocal(\"tmt.misc.night\"),int)", "event.parameters[0].equals(java.lang.String)", "net.minecraft.command.CommandBase.parseInt(event.sender,event.parameters[1])", "net.minecraft.command.CommandBase.parseIntBounded(event.sender,event.parameters[2],int,int)", "event.parameters[0].equals(java.lang.String)", "net.minecraft.command.CommandBase.parseInt(event.sender,event.parameters[1])", "event.parameters[1].equals(java.lang.String)", "net.minecraft.command.CommandBase.parseIntBounded(event.sender,event.parameters[2],int,int)", "net.minecraft.command.CommandBase.notifyAdmins(event.sender,java.lang.String,int)", "event.parameters[0].equals(java.lang.String)", "net.minecraft.command.CommandBase.notifyAdmins(event.sender,java.lang.String,net.minecraft.util.StatCollector.translateToLocal(\"tmt.misc.day\"),int)", "net.minecraft.command.CommandBase.parseIntWithMin(event.sender,event.parameters[1],int)", "event.parameters[0].equals(java.lang.String)", "event.parameters[1].equals(java.lang.String)", "event.parameters[0].equals(java.lang.String)", "event.parameters[1].equals(java.lang.String)", "net.minecraft.command.CommandBase.parseIntWithMin(event.sender,event.parameters[1],int)", "net.minecraft.command.CommandBase.notifyAdmins(event.sender,java.lang.String,int)", "net.minecraft.command.CommandBase.notifyAdmins(event.sender,java.lang.String,net.minecraft.util.StatCollector.translateToLocal(\"tmt.misc.moon\"),int)", "event.parameters[1].equals(java.lang.String)", "event.parameters[1].equals(java.lang.String)", "net.minecraft.command.CommandBase.notifyAdmins(event.sender,java.lang.String,net.minecraft.util.StatCollector.translateToLocal(\"tmt.misc.sun\"),int)"], "Fixed commit": "480f41533391f19834d9073c6350ac45f5bedebc", "Url": "https://api.github.com/repos/dmillerw/TooMuchTime", "Date": "2014-08-27T17:57:13Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) { cc.moecraft.hykilpikonna.lores.Messaging.sendHelpMessage(player); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5654/buggy-version/src.cc.moecraft.hykilpikonna.lores.HyLores.java", "BodyUseAPI": [], "Fixed commit": "62493b6f827baca2a203c5ce75fcd0fde22df1c6", "Url": "https://api.github.com/repos/hykilpikonna/HyLores", "Date": "2017-06-15T12:28:18Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((viewerWidget.getText().equals((widgetText + \"\\n\"))) || (viewerWidget.getText().equals((widgetText + \"\\r\\n\")))) || (viewerWidget.getText().equals((widgetText + \"\\r\")))) { evalExpression(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1436/buggy-version/ccw.core.src.java.ccw.repl.REPLView.java", "BodyUseAPI": [], "Fixed commit": "7e34e1caa2c5664930bce99eb0ecae95dc3fcc73", "Url": "https://api.github.com/repos/laurentpetit/ccw", "Date": "2012-04-30T20:41:15Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.btobastian.javacord.utils.handler.user.PresenceUpdateHandler.getOrCreateUser(packet.getJSONObject(\"user\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (user == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8637/buggy-version/src.main.java.de.btobastian.javacord.utils.handler.user.PresenceUpdateHandler.java", "BodyUseAPI": [], "Fixed commit": "b2189682208d4013ea87037ad140e24fc10ac3da", "Url": "https://api.github.com/repos/Javacord/Javacord", "Date": "2016-12-19T13:58:25Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(psiFile instanceof com.intellij.plugin.buck.lang.BuckFile)) { return text; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8827/buggy-version/src.com.intellij.plugin.buck.format.BuckCopyPasteProcessor.java", "BodyUseAPI": [], "Fixed commit": "da31b43a688192b64e4c799a28127f3ce2b09b5d", "Url": "https://api.github.com/repos/wangyanxing/Buck-IntelliJ-Plugin", "Date": "2015-08-03T18:13:02Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(img))) { imgComm.setImage(img); list.add(imgComm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3898/buggy-version/app.src.main.java.com.comeonbabys.android.app.db.dto.ImageCommunityDTO.java", "BodyUseAPI": ["com.comeonbabys.android.app.db.dto.ImageCommunityDTO.setImage(java.lang.String)"], "Fixed commit": "17029b4d47b4af29dc0b10f29922cc6fe2a00de1", "Url": "https://api.github.com/repos/UASoftwareFactory/ComeOnBabyClient", "Date": "2017-03-24T12:07:23Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (buffer.hasRemaining()) { first = buffer.get(); if (!(com.stellaris.ScriptParser.isByteOrderMark(first))) { buffer.rewind(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4174/buggy-version/src.com.stellaris.ScriptParser.java", "BodyUseAPI": ["java.nio.CharBuffer.get()", "java.nio.CharBuffer.rewind()"], "Fixed commit": "ebfc581be4cca6320d71693cc34ab5b34450aa63", "Url": "https://api.github.com/repos/WayOfModding/StellarisIDE", "Date": "2016-06-19T13:46:01Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.label2time2rp2value.get(label).get(time).get(rp.toString())) == null) { throw new java.lang.RuntimeException(\"null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3277/buggy-version/contribs.noise.src.main.java.org.matsim.contrib.noise.utils.MergeNoiseCSVFile.java", "BodyUseAPI": [], "Fixed commit": "7cd59eb82e09f3e1389ee5d06d18436842633905", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2017-06-16T08:49:46Z"},
{"Line": "=>1901", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.broad.igv.sam.AlignmentTrack.PopupMenu.getAlignmentAt(double,int,org.broad.igv.ui.panel.ReferenceFrame)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (alignment == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3942/buggy-version/src.org.broad.igv.sam.AlignmentTrack.java", "BodyUseAPI": [], "Fixed commit": "70497fc537df4d9e44c602af18063f2ad9b1f24a", "Url": "https://api.github.com/repos/broadinstitute/IGV", "Date": "2013-01-04T20:06:48Z"},
{"Line": "=>869", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mulesoft.jaxrs.raml.annotation.model.ResourceVisitor.CustomSchemaOutputResolver.getFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (file != null) { java.lang.String content = com.mulesoft.jaxrs.raml.annotation.model.FileUtil.fileToString(file); generateExamle(file, content); spec.getCoreRaml().addGlobalSchema(name, content, false, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2802/buggy-version/jaxrs-to-raml.com.mulesoft.jaxrs.raml.generator.src.com.mulesoft.jaxrs.raml.annotation.model.ResourceVisitor.java", "BodyUseAPI": ["com.mulesoft.jaxrs.raml.annotation.model.ResourceVisitor.generateExamle(java.io.File,java.lang.String)", "com.mulesoft.jaxrs.raml.annotation.model.FileUtil.fileToString(java.io.File)"], "Fixed commit": "92ba342ce2fc47d7585a158b458c4f6675a08dd6", "Url": "https://api.github.com/repos/mulesoft-labs/raml-for-jax-rs", "Date": "2015-06-04T20:54:25Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((res.product.sizes) == null) { res.product.sizes = new java.util.ArrayList<java.lang.String>(); res.product.sizes.add(getResources().getString(R.string.text_only_size)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2805/buggy-version/app.src.main.java.activity.ProductDetailFragment.java", "BodyUseAPI": ["res.product.sizes.add(getResources().getString(R.string.text_only_size))"], "Fixed commit": "4e30d2b0345f16be804a3d0f4fb47a415ec5bb7a", "Url": "https://api.github.com/repos/lsoncini/neonstoreapp", "Date": "2015-06-22T06:25:19Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (colorsAdapter != null) { colors.setAdapter(colorsAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2805/buggy-version/app.src.main.java.activity.ProductDetailFragment.java", "BodyUseAPI": ["android.widget.Spinner.setAdapter(android.widget.ArrayAdapter<java.lang.String>)"], "Fixed commit": "4e30d2b0345f16be804a3d0f4fb47a415ec5bb7a", "Url": "https://api.github.com/repos/lsoncini/neonstoreapp", "Date": "2015-06-22T06:25:19Z"},
{"Line": "=>997", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pdf2.exists()) { pdf2.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2686/buggy-version/VaqPack.src.vaqpack.VP_DatabaseManager.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "f2ea7646427b21e8ae44f9dea0ab079d4b66e944", "Url": "https://api.github.com/repos/AtomicUs5000/VaqPack-Team2", "Date": "2015-11-25T18:28:10Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (varID.equals(\"vir_22\")) { java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4310/buggy-version/microbat.src.main.microbat.model.trace.Trace.java", "BodyUseAPI": [], "Fixed commit": "a887ed801adf2c29861c2aad6387a1fd2ee66654", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2016-01-18T14:26:13Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((_parms._init) == (hex.kmeans.KMeans.Initialization.User)) && ((_parms._user_points) == null)) error(\"_user_points\", \"Must specify initial cluster centers\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3412/buggy-version/h2o-algos.src.main.java.hex.kmeans.KMeans.java", "BodyUseAPI": [], "Fixed commit": "d95dec2a412e87e054fc000032da375023b87dce", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-05-07T23:55:21Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(userCalledGet)) { if (com.kryptnostic.datastore.util.Util.wasLightweightTransactionApplied(rs)) { isDone = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2116/buggy-version/src.main.java.com.dataloom.graph.core.objects.LoomVertexFuture.java", "BodyUseAPI": [], "Fixed commit": "b854396c2bfa30c6f10534385f508298441265d9", "Url": "https://api.github.com/repos/openlattice/conductor-client", "Date": "2017-04-18T01:01:17Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((source.getFormat()) != null) { this.format = source.getFormat().getIdentifier(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/704/buggy-version/ginco-admin.src.main.java.fr.mcc.ginco.extjs.view.pojo.ThesaurusView.java", "BodyUseAPI": [], "Fixed commit": "dda73052d6b1be0f4ac6f348c9133cb4825a3328", "Url": "https://api.github.com/repos/culturecommunication/ginco", "Date": "2013-02-07T13:14:35Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((source.getType()) != null) { this.type = source.getType().getIdentifier(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/704/buggy-version/ginco-admin.src.main.java.fr.mcc.ginco.extjs.view.pojo.ThesaurusView.java", "BodyUseAPI": [], "Fixed commit": "dda73052d6b1be0f4ac6f348c9133cb4825a3328", "Url": "https://api.github.com/repos/culturecommunication/ginco", "Date": "2013-02-07T13:14:35Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.apollo.game.model.Position, java.util.List<org.apollo.game.model.Entity>>.get(entity.getPosition())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (entities == null) { this.entities.put(entity.getPosition(), new java.util.ArrayList<org.apollo.game.model.Entity>()); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5600/buggy-version/src.org.apollo.game.model.sector.Sector.java", "BodyUseAPI": [], "Fixed commit": "dd4f7b2a92f6379abaf0ed1ad70f4b0ebd6156de", "Url": "https://api.github.com/repos/apollo-rsps/apollo", "Date": "2014-03-08T12:46:55Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((timer.getTick()) > 1) { timer.tick(); currentTick = timer.getTick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2018/buggy-version/src.edu.wpi.first.wpilibj.templates.Launcher.java", "BodyUseAPI": ["edu.wpi.first.wpilibj.templates.Timer.tick()", "edu.wpi.first.wpilibj.templates.Timer.getTick()"], "Fixed commit": "49ed9cde7b15fa93e1e60cc8bfc74b194c9d3809", "Url": "https://api.github.com/repos/2635Lakemonsters/T-Shirt-Robot", "Date": "2015-09-30T00:06:37Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentTick) == 1) { timer.tick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2018/buggy-version/src.edu.wpi.first.wpilibj.templates.Launcher.java", "BodyUseAPI": [], "Fixed commit": "49ed9cde7b15fa93e1e60cc8bfc74b194c9d3809", "Url": "https://api.github.com/repos/2635Lakemonsters/T-Shirt-Robot", "Date": "2015-09-30T00:06:37Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["reactor.core.publisher.Operators.onOperatorError(java.lang.Throwable)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (t != _e) { _e.addSuppressed(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6324/buggy-version/src.main.java.reactor.core.publisher.FluxResume.java", "BodyUseAPI": ["java.lang.Throwable.addSuppressed(java.lang.Throwable)"], "Fixed commit": "6327441f30b599594a31db4d5e1a4604274e5219", "Url": "https://api.github.com/repos/dfeist/reactor-core", "Date": "2016-10-11T12:07:54Z"},
{"Line": "=>648", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.henzoshimada.feeltrip.FeelTripApplication.getFrag().equals(\"map\")) { updateMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2236/buggy-version/app.src.main.java.com.example.henzoshimada.feeltrip.MainScreen.java", "BodyUseAPI": [], "Fixed commit": "169caafd0b631665d072f2e50aa31b96641db264", "Url": "https://api.github.com/repos/CMPUT301W17T11/FeelTrip", "Date": "2017-04-03T19:54:17Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!fromSign) && (!toSign)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1714/buggy-version/src.wyil.lang.IntersectionOperator.java", "BodyUseAPI": [], "Fixed commit": "2992c64514e1fbf5924711858c450f534ba0dfc4", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-09-10T04:09:30Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.zib.vold.backend.PartitionedDirectory.lookup(int,java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (null != timeslice) { final long oldTimeStamp = to_timeslice(timeslice); if (timeStamp < oldTimeStamp) { log.debug(((\"Not overwriting Key \" + (key.toString())) + \", since the inserted one is newer.\")); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8121/buggy-version/server.src.main.java.de.zib.vold.volatilelogic.VolatileDirectoryImpl.java", "BodyUseAPI": ["de.zib.vold.volatilelogic.VolatileDirectoryImpl.to_timeslice(java.util.List<java.lang.String>)"], "Fixed commit": "221409047c3c8a13fa55b1c8422fccecdd05e3c0", "Url": "https://api.github.com/repos/zibhub/VolD", "Date": "2013-07-01T12:34:16Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gV.getNumeroDiVoltePrestazioniEseguite()) == null) { javax.swing.JOptionPane.showMessageDialog(this, \"Attenzione! Seleziona il numero di prestazioni.\"); }else { int dialogButton = javax.swing.JOptionPane.YES_NO_OPTION; dialogButton = javax.swing.JOptionPane.showConfirmDialog(null, \"Confermi la registrazione?\", \"Warning\", dialogButton); if (dialogButton == (javax.swing.JOptionPane.YES_OPTION)) { date = dcDataRegClienteFattura.getDate(); cal.setTime(date); year = cal.get(java.util.Calendar.YEAR); java.lang.String numeroFattura = ((\"\" + ((mFunzioni.numeroFattureAnnuali(mSessionFactory, (\"\" + year))) + 1)) + \" - \") + year; cliente = mFunzioni.inserisciCliente(mSessionFactory, tfNomeRegClienteFattura.getText(), tfCognomeRegClienteFattura.getText(), taIndirizzoRegClienteFattura.getText(), tfCFRegClienteFattura.getText(), taNoteRegClienteFattura.getText()); java.lang.System.out.println((\"LENTH\" + (gV.getNumeroDiVoltePrestazioniEseguite().length))); for (int i = 0; i < (gV.getPrestazioniEseguite().length); i++) { if (i == 0) { fattura = mFunzioni.registraFatturaPrestazione(mSessionFactory, cliente.getCodiceFiscale(), prestazioniEseguite[i], numeroPilastriUsati[i], java.lang.Double.parseDouble(tfSommaDovutaRegClienteFattura.getText()), java.lang.Double.parseDouble(tfSommaPagataRegClienteFattura.getText()), dcDataRegClienteFattura.getDate(), numeroFattura); if ((gV.getNumeroDiVoltePrestazioniEseguite()[i]) > 1) { for (int j = 0; j < ((gV.getNumeroDiVoltePrestazioniEseguite()[i]) - 1); j++) { fattura = mFunzioni.registraFatturaPrestazione(mSessionFactory, cliente.getCodiceFiscale(), prestazioniEseguite[i], numeroPilastriUsati[i], (-1), 0, dcDataRegClienteFattura.getDate(), numeroFattura); } } }else { fattura = mFunzioni.registraFatturaPrestazione(mSessionFactory, cliente.getCodiceFiscale(), prestazioniEseguite[i], numeroPilastriUsati[i], (-1), 0, dcDataRegClienteFattura.getDate(), numeroFattura); if ((gV.getNumeroDiVoltePrestazioniEseguite()[i]) > 1) { for (int j = 0; j < ((gV.getNumeroDiVoltePrestazioniEseguite()[i]) - 1); j++) { fattura = mFunzioni.registraFatturaPrestazione(mSessionFactory, cliente.getCodiceFiscale(), prestazioniEseguite[i], numeroPilastriUsati[i], (-1), 0, dcDataRegClienteFattura.getDate(), numeroFattura); } } } } javax.swing.JOptionPane.showMessageDialog(this, \"Operazione eseguita con successo!\"); tfNomeRegClienteFattura.setText(\"\"); tfCognomeRegClienteFattura.setText(\"\"); taIndirizzoRegClienteFattura.setText(\"\"); tfCFRegClienteFattura.setText(\"\"); taNoteRegClienteFattura.setText(\"\"); tfSommaDovutaRegClienteFattura.setText(\"\"); tfSommaPagataRegClienteFattura.setText(\"\"); jLabelRisultatoRicerca.setText(\"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1467/buggy-version/src.org.hsb.softwares.easymanage.beta.JFrameFormRegistrazioneClienteFattura.java", "BodyUseAPI": ["org.hsb.softwares.easymanage.beta.GlobalVariables.getPrestazioniEseguite()", "org.hsb.softwares.easymanage.beta.GlobalVariables.getNumeroDiVoltePrestazioniEseguite()", "java.io.PrintStream.println((\"LENTH\" + (gV.getNumeroDiVoltePrestazioniEseguite().length)))", "org.hsb.softwares.easymanage.beta.GlobalVariables.getNumeroDiVoltePrestazioniEseguite()", "org.hsb.softwares.easymanage.beta.GlobalVariables.getNumeroDiVoltePrestazioniEseguite()", "org.hsb.softwares.easymanage.beta.GlobalVariables.getNumeroDiVoltePrestazioniEseguite()", "org.hsb.softwares.easymanage.beta.GlobalVariables.getNumeroDiVoltePrestazioniEseguite()"], "Fixed commit": "e0e061b80cd240c02c91f6006e86772f48d3b11e", "Url": "https://api.github.com/repos/harpreet-singh-bola/EasyManage", "Date": "2015-03-03T21:38:26Z"},
{"Line": "=>819", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expanded) { items[0].setText(\"No peers\"); int n = peer_tree.getColumnCount(); for (int i = 1; i < n; i++) items[0].setText(i, \"\"); }else { org.eclipse.tcf.protocol.Protocol.invokeAndWait(new java.lang.Runnable() { public void run() { disconnectPeer(parent); } }); items[0].setText(\"\"); int n = peer_tree.getColumnCount(); for (int i = 1; i < n; i++) items[0].setText(i, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7326/buggy-version/plugins.org.eclipse.tcf.debug.ui.src.org.eclipse.tcf.internal.debug.ui.launch.TCFTargetTab.java", "BodyUseAPI": [], "Fixed commit": "ebd4160910afd2fcd1e5b51b5728c1856fce8a0b", "Url": "https://api.github.com/repos/wind-river-cdt/tcf", "Date": "2012-03-22T22:27:20Z"},
{"Line": "=>964", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (endpoint != null) { if ((endpoint.getSwitchName()) != null) { if ((endpoint.getAwolCount()) == 0) { return endpoint.getSwitchName(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2291/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.placement.StoragePortsAllocator.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.FCEndpoint.getAwolCount()", "com.emc.storageos.db.client.model.FCEndpoint.getSwitchName()", "com.emc.storageos.db.client.model.FCEndpoint.getSwitchName()"], "Fixed commit": "15272cae31bc672a17a4bf577c3f28a284a4036d", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-07-06T19:27:08Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataSet) != null) { mapIndex = new java.util.LinkedHashMap<java.lang.String, java.lang.Integer>(); mapAssetQuantity = new java.util.LinkedHashMap<java.lang.String, java.lang.Integer>(); for (int x = 0; x < (dataSet.size()); x++) { java.lang.String dateAccepted = org.fermat.fermat_dap_android_wallet_redeem_point.v3.util.Utils.getTimeAgoHistory(dataSet.get(x).getAcceptedDate().getTime()); if (dateAccepted != null) { if (!(mapIndex.containsKey(dateAccepted))) { mapIndex.put(dateAccepted, x); mapAssetQuantity.put(dateAccepted, 1); }else { mapAssetQuantity.put(dateAccepted, ((mapAssetQuantity.get(dateAccepted)) + 1)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1750/buggy-version/DAP.android.reference_wallet.fermat-dap-android-reference-wallet-redeem-point.src.main.java.org.fermat.fermat_dap_android_wallet_redeem_point.v3.adapters.DigitalAssetHistoryAdapter.java", "BodyUseAPI": [], "Fixed commit": "8171c84efb2bd4bd7773ee384b1b58e184137e47", "Url": "https://api.github.com/repos/jinmyjbv/fermat", "Date": "2016-04-22T22:10:12Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((viewpagerHandler) != null) && ((mCountDownTimer) != null)) { viewpagerHandler.removeCallbacks(runnable); mCountDownTimer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/700/buggy-version/app.src.main.java.com.example.vaibhav.app.viewpager.SampleActivity.java", "BodyUseAPI": [], "Fixed commit": "b488c6042ee4a1f54019381b135f2fc1a820a005", "Url": "https://api.github.com/repos/Feroz-Istar/AndroidCMS", "Date": "2016-11-29T07:29:37Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((amountOfTheStones((-1))) > 2) || ((amountOfTheStones(1)) > 2)) e = sumOfTheStones();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1745/buggy-version/src.main.java.Game.Board.java", "BodyUseAPI": [], "Fixed commit": "0516b6136fcb84655b8b8c005341cea05e1b8b56", "Url": "https://api.github.com/repos/xoliba/xoliba-ai", "Date": "2017-06-14T11:42:39Z"},
{"Line": "=>777", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((glm._parms._family) == (hex.glm.GLMModel.GLMParameters.Family.binomial)) && ((domains[_dinfo.responseChunkId(0)]) == null)) domains[_dinfo.responseChunkId(0)] = new java.lang.String[]{ \"0\", \"1\" };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1400/buggy-version/h2o-algos.src.main.java.hex.glm.GLMModel.java", "BodyUseAPI": [], "Fixed commit": "438a778b455114b78a28edcb96135794cc404b07", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2016-02-09T20:00:00Z"},
{"Line": "=>669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.body().getAnswers().get(0).getActions().get(1).getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isHavingType.equals(\"anchor\")) { counter = responseActionSize; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7103/buggy-version/app.src.main.java.org.fossasia.susi.ai.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "91f609c6795e3f42a89851f3f43d11776a965ec1", "Url": "https://api.github.com/repos/samsruti/susi_android", "Date": "2016-12-11T14:49:42Z"},
{"Line": "=>677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isHavingType.equals(\"anchor\")) && (!(ismap))) { addNewMessage(anchor, false, false, false, isSearchResult, datumList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7103/buggy-version/app.src.main.java.org.fossasia.susi.ai.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "91f609c6795e3f42a89851f3f43d11776a965ec1", "Url": "https://api.github.com/repos/samsruti/susi_android", "Date": "2016-12-11T14:49:42Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((year.length()) == 4) { year = year.substring(2, 4); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3727/buggy-version/core.src.org.javarosa.core.model.utils.DateUtils.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "3d9f88d4f87f97bca6a6acbcb2a6da8ee59f08f2", "Url": "https://api.github.com/repos/opendatakit/javarosa", "Date": "2010-06-24T16:43:36Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.fau.cs.mad.yasme.android.ui.AbstractYasmeActivity.getSelfUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((self.getId()) > 0) { profilePicture.setBackgroundColor(de.fau.cs.mad.yasme.android.ui.ChatAdapter.CONTACT_DUMMY_COLORS_ARGB[(((int) (self.getId())) % (ChatAdapter.CONTACT_DUMMY_COLORS_ARGB.length))]); android.widget.TextView initial = ((android.widget.TextView) (layout.findViewById(R.id.own_profile_picture_text))); initial.setText(self.getName().substring(0, 1).toUpperCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5332/buggy-version/yasme.src.main.java.de.fau.cs.mad.yasme.android.ui.fragments.OwnProfileFragment.java", "BodyUseAPI": ["android.widget.ImageView.setBackgroundColor(de.fau.cs.mad.yasme.android.ui.ChatAdapter.CONTACT_DUMMY_COLORS_ARGB[(((int) (self.getId())) % (ChatAdapter.CONTACT_DUMMY_COLORS_ARGB.length))])", "de.fau.cs.mad.yasme.android.entities.User.getName()", "android.widget.TextView.setText(self.getName().substring(0, 1).toUpperCase())", "self.getName().substring(int,int)", "de.fau.cs.mad.yasme.android.entities.User.getId()", "self.getName().substring(0, 1).toUpperCase()"], "Fixed commit": "07a8b0be16ae156daab41814c8e34415c6f8d4ed", "Url": "https://api.github.com/repos/FAU-Inf2/yasme-android", "Date": "2014-09-06T19:54:01Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yubo.wechat.vote.service.VoteService.getPreviousAnswerRecord(<nulltype>,int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (list == null) { return map; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1562/buggy-version/yubo-wechat-vote.src.main.java.com.yubo.wechat.vote.service.VoteService.java", "BodyUseAPI": [], "Fixed commit": "6df729150d26fb8c8bb1a809c39c581a5bd872e8", "Url": "https://api.github.com/repos/yubo-world/yubo", "Date": "2016-05-28T04:51:34Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userService.isAuthenticated()) { return \"redirect:/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2486/buggy-version/src.main.java.org.registrator.community.controller.RegisterController.java", "BodyUseAPI": [], "Fixed commit": "c0b1fc0feb72213c02d4b715689d81ef094452ce", "Url": "https://api.github.com/repos/Social-Projects/Resource-Registration-System", "Date": "2016-04-02T09:31:38Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (quit) { break; }else playGame = restart();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8222/buggy-version/42_CDIO_03.src.gui.GUI_Controller.java", "BodyUseAPI": [], "Fixed commit": "40e195a1548ebb27fe4823020309ca864bebacc5", "Url": "https://api.github.com/repos/LasseJensen213/42_CDIO_03", "Date": "2016-11-24T13:16:51Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (piuk.blockchain.android.BuildConfig.DEBUG) { android.util.Log.d(piuk.blockchain.android.ui.buy.FrontendJavascriptManager.TAG, (\"Executing: \" + script)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8115/buggy-version/app.src.main.java.piuk.blockchain.android.ui.buy.FrontendJavascriptManager.java", "BodyUseAPI": [], "Fixed commit": "cd60665337f43d7c7cff0f34c9f2111a4578b6b0", "Url": "https://api.github.com/repos/blockchain/My-Wallet-V3-Android", "Date": "2017-05-22T20:07:57Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end > (-1)) { com.reissgrvs.spotifyplaylisttool.SpotifyAPI.SpotifyAPIManager.getService().reorderPlaylistTracks(userID, playlistID, body); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/20/buggy-version/app.src.main.java.com.reissgrvs.spotifyplaylisttool.PlaylistUpdateUtils.PlaylistUpdateUtils.java", "BodyUseAPI": [], "Fixed commit": "3156e9f38038ba6072b27828fdd0a1a0f00a9253", "Url": "https://api.github.com/repos/reissGRVS/SpotifyPlaylistTool", "Date": "2017-10-03T17:47:28Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.LinearLayout.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (mChildView != null) { mChildView.setVisibility(com.yunPATHn.carousel.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7804/buggy-version/carousel.src.main.java.com.yunPATHn.carousel.CarouselView.java", "BodyUseAPI": ["android.view.View.setVisibility(com.yunPATHn.carousel.GONE)"], "Fixed commit": "d45969738f84b7930947c72f8e55706fe6f38fee", "Url": "https://api.github.com/repos/ls1110924/CarouselView", "Date": "2016-09-25T07:21:07Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getCause()) instanceof java.io.FileNotFoundException) { return java.lang.System.getProperty(\"user.dir\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1426/buggy-version/flexo-ui.src.main.java.org.openflexo.Flexo.java", "BodyUseAPI": [], "Fixed commit": "b485e6536c90477378fba1e580ad3e31e9d97be1", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2014-03-20T13:59:42Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(storyDetail.getContent()))) { headerViewHolder.mContent.setVisibility(View.VISIBLE); android.text.Spanned jobContent = android.text.Html.fromHtml(storyDetail.getContent()); headerViewHolder.mContent.setMovementMethod(android.text.method.LinkMovementMethod.getInstance()); headerViewHolder.mContent.setText(jobContent); headerViewHolder.mContent.setTextColor(context.getResources().getColor((io.dwak.holohackernews.app.preferences.UserPreferenceManager.getInstance().isNightModeEnabled() ? android.R.color.white : android.R.color.black))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5590/buggy-version/app.src.main.java.io.dwak.holohackernews.app.ui.storydetail.HeaderViewHolder.java", "BodyUseAPI": ["android.text.Html.fromHtml(storyDetail.getContent())", "io.dwak.holohackernews.app.models.StoryDetail.getContent()"], "Fixed commit": "fae82a84770c76893fb4ddc6c1f1106909a7b82f", "Url": "https://api.github.com/repos/dinosaurwithakatana/hacker-news-android", "Date": "2015-07-19T00:59:13Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getLoaderManager().getLoader(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((loader != null) && (loader.isStarted())) { getLoaderManager().restartLoader(com.techan.activities.fragments.StockListFragment.LOADER_ID, null, this); }else { getLoaderManager().initLoader(com.techan.activities.fragments.StockListFragment.LOADER_ID, null, this); java.lang.String[] from = new java.lang.String[]{ com.techan.database.StocksTable.COLUMN_SYMBOL, com.techan.database.StocksTable.COLUMN_PRICE, com.techan.database.StocksTable.COLUMN_CHANGE }; int[] to = new int[]{ R.id.listSymbol, R.id.listPrice, R.id.listChange }; adapter = new com.techan.custom.StockCursorAdapter(getActivity(), R.layout.stock_row, null, from, to, 0); listView.setAdapter(adapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6805/buggy-version/app.src.main.java.com.techan.activities.fragments.StockListFragment.java", "BodyUseAPI": [], "Fixed commit": "0b33946bd3032431373b63dbfd451ad1e44b41b2", "Url": "https://api.github.com/repos/kumarad/asanecon", "Date": "2016-02-10T01:35:24Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.cursor.equalsIgnoreCase(\"0\")) { return 0; }else if (this.cursor.isEmpty()) { this.cursor = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7198/buggy-version/src.main.java.com.divinitor.discord.wahrbot.core.util.redis.RedisSet.java", "BodyUseAPI": ["java.lang.String.isEmpty()"], "Fixed commit": "54c03675c82971232ede2b70b16c5bcf4085ced8", "Url": "https://api.github.com/repos/vincentzhang96/WahrBotCore", "Date": "2017-10-16T08:24:33Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.equals(goal)) { return (!(chalmers.dax021308.ecosystem.model.environment.obstacle.AbstractObstacle.isInsideObstacleList(obsList, node, 0))) && (shape.isInside(simulationDim, node)); }else { return (!(chalmers.dax021308.ecosystem.model.environment.obstacle.AbstractObstacle.isInsideObstacleList(obsList, node, safetyDistance))) && (shape.isInside(simulationDim, node)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5959/buggy-version/src.chalmers.dax021308.ecosystem.model.util.JPSPathfinder.java", "BodyUseAPI": ["chalmers.dax021308.ecosystem.model.environment.obstacle.AbstractObstacle.isInsideObstacleList(java.util.List<chalmers.dax021308.ecosystem.model.environment.obstacle.IObstacle>,chalmers.dax021308.ecosystem.model.util.JPSPathfinder.JPSNode,int)", "chalmers.dax021308.ecosystem.model.util.shape.IShape.isInside(java.awt.Dimension,chalmers.dax021308.ecosystem.model.util.JPSPathfinder.JPSNode)", "chalmers.dax021308.ecosystem.model.util.shape.IShape.isInside(java.awt.Dimension,chalmers.dax021308.ecosystem.model.util.JPSPathfinder.JPSNode)", "chalmers.dax021308.ecosystem.model.environment.obstacle.AbstractObstacle.isInsideObstacleList(java.util.List<chalmers.dax021308.ecosystem.model.environment.obstacle.IObstacle>,chalmers.dax021308.ecosystem.model.util.JPSPathfinder.JPSNode,double)"], "Fixed commit": "52dc63ab9ef2fd0fc31cc3b437dd7673ee999785", "Url": "https://api.github.com/repos/Ramqvist/Simulated-ecosystem", "Date": "2013-04-29T13:50:23Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchResult.getImages().length) == 0) { fetchMoreImages(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1387/buggy-version/app.src.main.java.com.cuddlesoft.nori.ImageViewerActivity.java", "BodyUseAPI": [], "Fixed commit": "edc299e867441ffbf26263ac40370569725aeccd", "Url": "https://api.github.com/repos/vomitcuddle/nori", "Date": "2014-08-27T10:30:10Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((visibleItemCount) <= 0) visibleItemCount = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7884/buggy-version/src.main.java.org.biouno.unochoice.AbstractScriptableParameter.java", "BodyUseAPI": [], "Fixed commit": "49b6e939e9c1654d192d576501497a3248506836", "Url": "https://api.github.com/repos/biouno/uno-choice-plugin", "Date": "2014-12-08T01:29:24Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 12) { net.neevek.android.lib.paginize.util.AnnotationUtils.sSetListenerMethodMap.put(View.OnAttachStateChangeListener.class, \"addOnAttachStateChangeListener\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4054/buggy-version/PaginizeLib.src.net.neevek.android.lib.paginize.util.AnnotationUtils.java", "BodyUseAPI": [], "Fixed commit": "d06e6f878b172c4695cab2fc5d3a43114857addf", "Url": "https://api.github.com/repos/neevek/Paginize", "Date": "2015-05-25T07:20:03Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (Event.EVENT_CONNECTED.equals(action)) { handler.removeCallbacks(disconnectionTask); if ((notificationHandler) == null) { notificationHandler = new org.droidplanner.android.notifications.NotificationHandler(getApplicationContext(), drone); } }else if (Event.EVENT_DISCONNECTED.equals(action)) { shouldWeTerminate(); }else if (DPApiCallback.ACTION_DRONE_CONNECTION_FAILED.equals(action)) { java.lang.String errorMsg = intent.getStringExtra(DPApiCallback.EXTRA_CONNECTION_FAILED_ERROR_MESSAGE); android.widget.Toast.makeText(getApplicationContext(), (\"Connection failed: \" + errorMsg), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4435/buggy-version/Android.src.org.droidplanner.android.DroidPlannerApp.java", "BodyUseAPI": ["Event.EVENT_DISCONNECTED.equals(java.lang.String)", "DPApiCallback.ACTION_DRONE_CONNECTION_FAILED.equals(java.lang.String)"], "Fixed commit": "53f13a7cf196f374839012f3871d9e48e833fbcc", "Url": "https://api.github.com/repos/ne0fhyk/droidplanner", "Date": "2014-11-17T15:57:32Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mySensor.getType()) == (android.hardware.Sensor.TYPE_ACCELEROMETER)) { float x = sensorEvent.values[0]; float y = sensorEvent.values[1]; float z = sensorEvent.values[2]; long curTime = java.lang.System.currentTimeMillis(); if ((curTime - (lastUpdate)) > 100) { long diffTime = curTime - (lastUpdate); lastUpdate = curTime; java.lang.String xs = java.lang.Float.toString(sensorEvent.values[0]); java.lang.String ys = java.lang.Float.toString(sensorEvent.values[1]); java.lang.String zs = java.lang.Float.toString(sensorEvent.values[2]); android.util.Log.w(\"Accelerometer\", ((((((\"(\" + xs) + \", \") + ys) + \", \") + zs) + \")\")); last_x = x; last_y = y; last_z = z; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1707/buggy-version/RoboApp.app.src.main.java.com.robodoot.dr.RoboApp.FdActivity.java", "BodyUseAPI": [], "Fixed commit": "b01d5ac47f93ae3a1d368ee18bb256885d954ad3", "Url": "https://api.github.com/repos/kd345312/RoboApp", "Date": "2016-10-17T23:28:21Z"},
{"Line": "=>785", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result.contains(\"find\")) && (result.contains(\"me\"))) { android.content.Intent intent = new android.content.Intent(\"com.google.android.gms.samples.vision.face.facetracker.FaceTrackerActivity\"); startActivity(intent); }else { android.content.Context context = getApplicationContext(); java.lang.CharSequence commandNotFound = \"Command not found!\"; int duration = android.widget.Toast.LENGTH_SHORT; android.widget.Toast notFoundToast = android.widget.Toast.makeText(context, commandNotFound, duration); notFoundToast.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1707/buggy-version/RoboApp.app.src.main.java.com.robodoot.dr.RoboApp.FdActivity.java", "BodyUseAPI": [], "Fixed commit": "b01d5ac47f93ae3a1d368ee18bb256885d954ad3", "Url": "https://api.github.com/repos/kd345312/RoboApp", "Date": "2016-10-17T23:28:21Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPoi) != null) { bringMeThere(getEvent()); }else { android.widget.Toast.makeText(getSherlockActivity(), R.string.toast_poi_not_found, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/915/buggy-version/src.eu.trentorise.smartcampus.dt.fragments.events.EventDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "cdb565dbf4477f0240b635a1d8cff2d4a13d1005", "Url": "https://api.github.com/repos/smartcampuslab/android.discovertrento.lib", "Date": "2013-11-13T16:11:25Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lemon.web.system.mapper.UserMapper.checkLogin(java.lang.String,lemon.shared.toolkit.secure.SecureUtil.aesEncrypt(password, encryptKeyItem.getValue()))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (Status.AVAILABLE.equals(user.getIslock())) throw new org.springframework.security.authentication.AuthenticationServiceException(\"\u60a8\u7684\u5e10\u6237\u5df2\u9501\u5b9a\uff0c\u8bf7\u8054\u7cfb\u7cfb\u7edf\u7ba1\u7406\u5458\u3002\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1394/buggy-version/mmt-web.src.main.java.lemon.web.security.MMTAuthenticationFilter.java", "BodyUseAPI": [], "Fixed commit": "e0679a67fd73c154d9bb0897baa4f5f70a24de73", "Url": "https://api.github.com/repos/cjm0000000/mmt", "Date": "2013-11-23T05:21:03Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (contactEmailRecords == null) { textEmails.setText(\"no data\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7241/buggy-version/app.src.main.java.com.sviat.k.androidphones.app.ContactDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "ae80d47ecf0a748abcb3a6afc9e75eca09b4d4a0", "Url": "https://api.github.com/repos/costello/android-vphones", "Date": "2014-11-04T22:52:01Z"},
{"Line": "=>770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index >= (valueCount)) || (index < 0)) { throw new java.lang.IllegalArgumentException((((((\"Expected index \" + index) + \" to \") + \"be greater than 0 and less than the maximum value count \") + \"of \") + (valueCount))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3584/buggy-version/src.main.java.com.jakewharton.disklrucache.DiskLruCache.java", "BodyUseAPI": [], "Fixed commit": "e53179d17fe1b1a7e1f5978bfb04d7580a5f4f32", "Url": "https://api.github.com/repos/sjudd/DiskLruCache", "Date": "2014-06-30T14:36:03Z"},
{"Line": "=>633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bi.getType().getClientResource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (clientResource == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2987/buggy-version/deployer.src.main.java.org.cloudml.deployer.CloudAppDeployer.java", "BodyUseAPI": [], "Fixed commit": "b8332081399d243b0a4776a50e5b4edcf02e684a", "Url": "https://api.github.com/repos/SINTEF-9012/cloudml", "Date": "2014-08-28T16:09:59Z"},
{"Line": "=>636", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bi.getType().getClientResource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((clientResource.getRetrieveCommand()) != null) && (!(clientResource.getRetrieveCommand().equals(\"\")))) jcClient.execCommand(ownerVMClient.getId(), (((((((clientResource.getRetrieveCommand()) + \" \\\"\") + ipAddress) + \"\\\" \\\"\") + destinationIpAddress) + \"\\\" \") + destinationPortNumber), \"ubuntu\", VMClient.getPrivateKey());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2987/buggy-version/deployer.src.main.java.org.cloudml.deployer.CloudAppDeployer.java", "BodyUseAPI": ["org.cloudml.deployer.Connector.execCommand(ownerVMClient.getId(),(((((((clientResource.getRetrieveCommand()) + \" \\\"\") + ipAddress) + \"\\\" \\\"\") + destinationIpAddress) + \"\\\" \") + destinationPortNumber),java.lang.String,VMClient.getPrivateKey())", "org.cloudml.deployer.Resource.getRetrieveCommand()"], "Fixed commit": "b8332081399d243b0a4776a50e5b4edcf02e684a", "Url": "https://api.github.com/repos/SINTEF-9012/cloudml", "Date": "2014-08-28T16:09:59Z"},
{"Line": "=>638", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bi.getType().getClientResource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((clientResource.getConfigureCommand()) != null) && (!(clientResource.getConfigureCommand().equals(\"\")))) { java.lang.String configurationCommand = ((((((clientResource.getConfigureCommand()) + \" \\\"\") + ipAddress) + \"\\\" \\\"\") + destinationIpAddress) + \"\\\" \") + destinationPortNumber; configure(jcClient, VMClient, ownerVMClient, configurationCommand, clientResource.getRequireCredentials()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2987/buggy-version/deployer.src.main.java.org.cloudml.deployer.CloudAppDeployer.java", "BodyUseAPI": ["org.cloudml.deployer.Resource.getConfigureCommand()", "org.cloudml.deployer.CloudAppDeployer.configure(org.cloudml.deployer.Connector,org.cloudml.deployer.VM,org.cloudml.deployer.VMInstance,java.lang.String,clientResource.getRequireCredentials())", "org.cloudml.deployer.Resource.getRequireCredentials()"], "Fixed commit": "b8332081399d243b0a4776a50e5b4edcf02e684a", "Url": "https://api.github.com/repos/SINTEF-9012/cloudml", "Date": "2014-08-28T16:09:59Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bi.getType().getClientResource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((clientResource.getInstallCommand()) != null) && (!(clientResource.getInstallCommand().equals(\"\")))) { java.lang.String installationCommand = ((((((clientResource.getInstallCommand()) + \" \\\"\") + ipAddress) + \"\\\" \\\"\") + destinationIpAddress) + \"\\\" \") + destinationPortNumber; configure(jcClient, VMClient, ownerVMClient, installationCommand, clientResource.getRequireCredentials()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2987/buggy-version/deployer.src.main.java.org.cloudml.deployer.CloudAppDeployer.java", "BodyUseAPI": ["org.cloudml.deployer.Resource.getRequireCredentials()", "org.cloudml.deployer.CloudAppDeployer.configure(org.cloudml.deployer.Connector,org.cloudml.deployer.VM,org.cloudml.deployer.VMInstance,java.lang.String,clientResource.getRequireCredentials())", "org.cloudml.deployer.Resource.getInstallCommand()"], "Fixed commit": "b8332081399d243b0a4776a50e5b4edcf02e684a", "Url": "https://api.github.com/repos/SINTEF-9012/cloudml", "Date": "2014-08-28T16:09:59Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (de.jClipCorn.util.helper.RegExHelper.startsWithRegEx(de.jClipCorn.util.formatter.PathFormatter.REGEX_SELFDRIVE, rPath)) { if (de.jClipCorn.util.helper.ApplicationHelper.isWindows()) { char letter = de.jClipCorn.util.formatter.PathFormatter.WORKINGDIR.charAt(0); rPath = de.jClipCorn.util.helper.RegExHelper.replace(de.jClipCorn.util.formatter.PathFormatter.REGEX_SELFDRIVE, rPath, ((letter + \":\") + (de.jClipCorn.util.formatter.PathFormatter.SEPERATOR))); }else if ((de.jClipCorn.util.helper.ApplicationHelper.isUnix()) || (de.jClipCorn.util.helper.ApplicationHelper.isMac())) { rPath = de.jClipCorn.util.helper.RegExHelper.replace(de.jClipCorn.util.formatter.PathFormatter.REGEX_SELFDRIVE, rPath, \"/\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4163/buggy-version/src.de.jClipCorn.util.formatter.PathFormatter.java", "BodyUseAPI": ["de.jClipCorn.util.helper.RegExHelper.replace(java.lang.String,java.lang.String,java.lang.String)", "de.jClipCorn.util.helper.RegExHelper.replace(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "f12da5b28bf22dc014e4db64717c16bf4cf24401", "Url": "https://api.github.com/repos/Mikescher/jClipCorn", "Date": "2016-01-02T16:09:49Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.stream.XMLEventReader.nextEvent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (event instanceof com.sun.xml.internal.stream.events.CharacterEvent) { parent.setTextContent(((com.sun.xml.internal.stream.events.CharacterEvent) (event)).getData()); return parent; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2738/buggy-version/src.com.googlecode.totallylazy.xml.XmlReader.java", "BodyUseAPI": [], "Fixed commit": "79ef0966358a960979385b024176706f97ee8b02", "Url": "https://api.github.com/repos/bodar/totallylazy", "Date": "2015-05-29T10:02:12Z"},
{"Line": "=>692", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.size()) == 0) { arg = \"\"; }else { arg = args.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3383/buggy-version/database_api.src.audiohosting.utils.CLI.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "8447354733eb6a332df7396aee045e150107b15a", "Url": "https://api.github.com/repos/Yakkodash/audiohosting-sql-itmo", "Date": "2016-12-12T22:18:41Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name == \"\") callableStatement.setString(2, \"\"); else callableStatement.setString(2, name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3383/buggy-version/database_api.src.audiohosting.api.Playlist.java", "BodyUseAPI": ["java.sql.CallableStatement.setString(int,java.lang.String)"], "Fixed commit": "8447354733eb6a332df7396aee045e150107b15a", "Url": "https://api.github.com/repos/Yakkodash/audiohosting-sql-itmo", "Date": "2016-12-12T22:18:41Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 1) { formato = args[1].substring(9).toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4056/buggy-version/v2.src.main.java.ar.edu.uca.objetos.primos.Programa.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.substring(int)"], "Fixed commit": "78aff7a3797f3440714c387b1401278e22be9e05", "Url": "https://api.github.com/repos/danielspk/uca-ceis-objetos", "Date": "2017-06-03T23:48:16Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (elto.contains(\"'\")) { sb.append(elto).append(\", \"); }else { sb.append(\"'\").append(elto).append(\"'\").append(\", \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4132/buggy-version/meta-core.src.main.java.com.stratio.meta.core.utils.ParserUtils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "b27c9dced3291685f89f3a71c6bba18119c54e26", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-05-14T13:40:08Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.MenuItem.getItemId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (id == (R.id.action_alarm)) { goToActivity(com.example.anas.firstapp.AlarmActivity.class, null); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1166/buggy-version/app.src.main.java.com.example.anas.firstapp.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "1bdb473240fcafe6cf74e92f9f240288679fa5e8", "Url": "https://api.github.com/repos/anashmamouch/wakeuppilot", "Date": "2016-02-17T17:23:08Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((halo.query.Query.instance) == null) { throw new java.lang.RuntimeException((\"must create \" + (halo.query.Query.class.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3426/buggy-version/src.main.java.halo.query.Query.java", "BodyUseAPI": [], "Fixed commit": "5ea6be3ac793ef628aa6af95d091852645ece107", "Url": "https://api.github.com/repos/akwei/halo-query", "Date": "2014-08-15T10:14:53Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (manifestVersion != null) { fileName = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.decodeZipFileName(fileName); actualFilePath = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.decodeZipFileName(actualFilePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3130/buggy-version/extensions.src.org.pentaho.platform.plugin.services.importer.SolutionImportHandler.java", "BodyUseAPI": [], "Fixed commit": "99abf890ca0fd111fd9f706e0f0d48d21aebbc2c", "Url": "https://api.github.com/repos/ivanpogodin/pentaho-platform", "Date": "2015-09-18T14:23:23Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (manifestVersion != null) { decodedFile = new org.pentaho.platform.api.repository2.unified.RepositoryFile.Builder(decodedFile).path(decodedFilePath).name(fileName).title(fileName).build(); decodedFilePath = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.decodeZipFileName(file.getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3130/buggy-version/extensions.src.org.pentaho.platform.plugin.services.importer.SolutionImportHandler.java", "BodyUseAPI": [], "Fixed commit": "99abf890ca0fd111fd9f706e0f0d48d21aebbc2c", "Url": "https://api.github.com/repos/ivanpogodin/pentaho-platform", "Date": "2015-09-18T14:23:23Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.withManifest) { zipEntryName = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.encodeZipPathName(zipEntryName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3130/buggy-version/extensions.src.org.pentaho.platform.plugin.services.importexport.ZipExportProcessor.java", "BodyUseAPI": [], "Fixed commit": "99abf890ca0fd111fd9f706e0f0d48d21aebbc2c", "Url": "https://api.github.com/repos/ivanpogodin/pentaho-platform", "Date": "2015-09-18T14:23:23Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.withManifest) { zipEntryName = org.pentaho.platform.plugin.services.importexport.ExportFileNameEncoder.encodeZipPathName(zipEntryName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3130/buggy-version/extensions.src.org.pentaho.platform.plugin.services.importexport.ZipExportProcessor.java", "BodyUseAPI": [], "Fixed commit": "99abf890ca0fd111fd9f706e0f0d48d21aebbc2c", "Url": "https://api.github.com/repos/ivanpogodin/pentaho-platform", "Date": "2015-09-18T14:23:23Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == null) { throw new com.rockwellcollins.atc.agree.analysis.AgreeException(\"The type name should have been created\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3447/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.analysis.src.com.rockwellcollins.atc.agree.analysis.ast.AgreeASTBuilder.java", "BodyUseAPI": [], "Fixed commit": "ba7eb9868b7df19360c249a4a852f9f80d737e6a", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2016-01-05T22:23:28Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value.startsWith(\"+\")) value = value.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6648/buggy-version/src.com.iotracks.iofabric.utils.configuration.Configuration.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "855dc8ab9c29e2c032abca983ec12cc582920854", "Url": "https://api.github.com/repos/iotracks/iofabric", "Date": "2016-05-17T20:33:31Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handler) != null) { byte[] body = server.errorPages.apply(status); new com.xqbase.tuna.http.HttpPacket(status, com.xqbase.tuna.proxy.ProxyConnection.getReason(status), body, \"Connection\", \"close\").write(handler, true, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4171/buggy-version/proxy.src.main.java.com.xqbase.tuna.proxy.ProxyConnection.java", "BodyUseAPI": [], "Fixed commit": "955486f5aa2d129904342492d74697a0743c6ff8", "Url": "https://api.github.com/repos/xqbase/tuna", "Date": "2015-06-24T12:57:51Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) == null) { timer = new control.Controller.Timer(); updater = new control.Controller.Updater(); refresher = new control.Controller.Renderer(); timer.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2050/buggy-version/src.control.Controller.java", "BodyUseAPI": [], "Fixed commit": "a222eecc553ad4eb9d7316394e513b04e3cc79fd", "Url": "https://api.github.com/repos/ngc7293/UFRLRPG", "Date": "2015-04-24T04:23:50Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.endsWith(\"_\")) && ((object.getClass().getAnnotation(com.redhat.ceylon.compiler.java.metadata.Ceylon.class)) != null)) { name = name.substring(0, ((name.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1549/buggy-version/runtime.ceylon.language.className_.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "b66f0cad8ae10ba88dc90741a3992a4797df6fbc", "Url": "https://api.github.com/repos/ceylon/ceylon.language", "Date": "2012-08-20T17:07:32Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((scores[i]) > 99999999) { android.widget.Toast.makeText(act, ((calculateArr[i].getName()) + \"'s rating can go no higher\"), Toast.LENGTH_SHORT).show(); scores[i] = 99999999; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1131/buggy-version/src.com.Centaurii.app.RatingCalculator.listeners.CalculatorButtonsOnClick.java", "BodyUseAPI": ["calculateArr[i].getName()", "android.widget.Toast.makeText(android.support.v4.app.FragmentActivity,((calculateArr[i].getName()) + \"'s rating can go no higher\"),Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(act, ((calculateArr[i].getName()) + \"'s rating can go no higher\"), Toast.LENGTH_SHORT).show()"], "Fixed commit": "5bb820c15106f5fc160da7dd2f1279dc66e07831", "Url": "https://api.github.com/repos/gnarizzy/GameRatingCalculator", "Date": "2013-10-25T19:05:12Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4703/buggy-version/src.main.java.com.mridang.hotspot.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "bbdd4ad5f2a720dca93ec73d8fc7c6b8afdbacaa", "Url": "https://api.github.com/repos/mridang/dashclock-hotspot", "Date": "2015-03-29T09:10:39Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((result == null) || (result.equals(\"\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6337/buggy-version/app.src.main.java.ml.puredark.hviewer.activities.PictureViewerActivity.java", "BodyUseAPI": [], "Fixed commit": "999c0338a7d50bd70ff035a988e99803def1ecfa", "Url": "https://api.github.com/repos/PureDark/H-Viewer", "Date": "2016-08-22T14:23:48Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getLogin.isEmpty()) == false) && ((getSenha.isEmpty()) == false)) { javax.swing.JOptionPane.showMessageDialog(null, \"Login ou senha incorreto(s).\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8071/buggy-version/projetoLp2.src.projetoLp2.bolao.TelaDeLogin.java", "BodyUseAPI": [], "Fixed commit": "b0150ccbff05f1d72435eb182b9d7ee1b57cfa86", "Url": "https://api.github.com/repos/leticiamaia/Lp2-Projeto", "Date": "2014-03-22T01:29:20Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value instanceof java.lang.String) && (((java.lang.String) (value)).isEmpty())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1876/buggy-version/railo-java.railo-core.src.railo.runtime.type.QueryColumnUtil.java", "BodyUseAPI": [], "Fixed commit": "9c6c1367158ca15f82a99d79c983238266dd8d7e", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-08-21T11:05:37Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (k == 1) { return nums; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6189/buggy-version/src.SlidingWindowMaximum.java", "BodyUseAPI": [], "Fixed commit": "4e212557ec6ceec3674a9d0fbfa04447eea9e17d", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-07-23T00:13:05Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((savedLatitude) != (org.opendatakit.tables.fragments.TableMapInnerFragment.initCameraValue)) && ((savedLongitude) != (org.opendatakit.tables.fragments.TableMapInnerFragment.initCameraValue))) && ((savedZoom) != (org.opendatakit.tables.fragments.TableMapInnerFragment.initCameraValue))) { this.map.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new org.opendatakit.tables.fragments.LatLng(savedLatitude, savedLongitude), savedZoom)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6674/buggy-version/tables_app.src.main.java.org.opendatakit.tables.fragments.TableMapInnerFragment.java", "BodyUseAPI": [], "Fixed commit": "b36d023a07ef5cb451c599ca18009c2fcc053086", "Url": "https://api.github.com/repos/nilesr/tables", "Date": "2017-07-07T23:36:53Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection) == null) { return getConnection(getServerConfiguration().getServerURI(), ((org.eclipse.jgit.lib.Repository) (null))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5455/buggy-version/com.microsoft.gittf.client.clc.src.main.java.com.microsoft.gittf.client.clc.commands.framework.Command.java", "BodyUseAPI": [], "Fixed commit": "22c22f85983f19e9f4e4d787edf03bfb42b19284", "Url": "https://api.github.com/repos/caioproiete/gittf", "Date": "2013-12-19T18:32:48Z"},
{"Line": "=>758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((y != null) && ((y.key) <= key)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6165/buggy-version/src.main.java.thirdparty.edu.princeton.cs.algs4.RedBlackBSTLongInt.java", "BodyUseAPI": [], "Fixed commit": "46ec2aa383f0be598e5339a40ce5bccbd5fdbaa8", "Url": "https://api.github.com/repos/nking/shared", "Date": "2017-07-12T01:49:23Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((y != null) && ((y.key) >= key)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6165/buggy-version/src.main.java.thirdparty.edu.princeton.cs.algs4.RedBlackBSTLongInt.java", "BodyUseAPI": [], "Fixed commit": "46ec2aa383f0be598e5339a40ce5bccbd5fdbaa8", "Url": "https://api.github.com/repos/nking/shared", "Date": "2017-07-12T01:49:23Z"},
{"Line": "=>719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((forwardCurveName == null) || (forwardCurveName.isEmpty())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/4223/buggy-version/src.main.java6.net.finmath.marketdata.calibration.CalibratedCurves.java", "BodyUseAPI": [], "Fixed commit": "d9fddac0a561b69a797a4d796d07cce060e2fcf0", "Url": "https://api.github.com/repos/NiklasRodi/finmath-lib", "Date": "2017-06-07T13:58:25Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (saveEcore) { org.eclipse.emf.ecore.resource.Resource resource = rs.createResource(org.eclipse.emf.common.util.URI.createFileURI((message + \".ecore\"))); resource.getContents().add(pkg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/718/buggy-version/edi.ecore.src.main.java.org.milyn.ecore.SchemaConverter.java", "BodyUseAPI": [], "Fixed commit": "917d9c356a5d3888d1dd85dc94be7902c4683759", "Url": "https://api.github.com/repos/zubairov/smooks", "Date": "2011-03-15T16:31:02Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((btOutputStream) != null) { btOutputStream.write(message.getBytes()); btOutputStream.flush(); }else { handler.post(new java.lang.Runnable() { @java.lang.Override public void run() { android.widget.Toast.makeText(getApplicationContext(), \"no output stream\", Toast.LENGTH_SHORT).show(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8401/buggy-version/HardwareDemo.app.src.main.java.calvin.hu.hardwaredemo.GcmIntentService.java", "BodyUseAPI": [], "Fixed commit": "87a49d6b00ca9984554c5fc2719cacb864bbf132", "Url": "https://api.github.com/repos/calvinhu4/HardwareDemo", "Date": "2014-08-18T21:16:22Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (query.isEmpty()) { return \"[]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2826/buggy-version/src.main.java.edu.ucsb.hopefully_unhackable.controllers.MainController.java", "BodyUseAPI": [], "Fixed commit": "61b9f86cb3046adeae562d11ccac7958de494d3d", "Url": "https://api.github.com/repos/2yangk23/Hopefully_Unhackable", "Date": "2016-01-19T21:05:33Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((keywords.length) == 0) { return \"[]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2826/buggy-version/src.main.java.edu.ucsb.hopefully_unhackable.controllers.MainController.java", "BodyUseAPI": [], "Fixed commit": "61b9f86cb3046adeae562d11ccac7958de494d3d", "Url": "https://api.github.com/repos/2yangk23/Hopefully_Unhackable", "Date": "2016-01-19T21:05:33Z"},
{"Line": "=>813", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (includingBCDChange || ((cur.getEventType()) != (org.killbill.billing.subscription.events.SubscriptionBaseEvent.EventType.BCD_UPDATE))) { unactivateEventFromTransaction(cur, entitySqlDaoWrapperFactory, context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5117/buggy-version/subscription.src.main.java.org.killbill.billing.subscription.engine.dao.DefaultSubscriptionDao.java", "BodyUseAPI": ["org.killbill.billing.subscription.engine.dao.DefaultSubscriptionDao.unactivateEventFromTransaction(org.killbill.billing.subscription.engine.dao.model.SubscriptionEventModelDao,org.killbill.billing.util.entity.dao.EntitySqlDaoWrapperFactory,org.killbill.billing.callcontext.InternalCallContext)"], "Fixed commit": "fb86be06821e6fcf162a87c9c76da5479bbdfb58", "Url": "https://api.github.com/repos/matias-aguero-hs/killbill", "Date": "2016-05-27T18:47:27Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mergedBindings.get(key).equals(b2.get(key)))) { java.lang.Object existingValue = mergedBindings.get(key); java.lang.Object conflictingValue = b2.get(key); java.lang.Object newValue = existingValue; if (key.equals(\"startDate\")) { java.util.Date d1 = ((java.util.Date) (existingValue)); java.util.Date d2 = ((java.util.Date) (conflictingValue)); newValue = new java.util.Date(java.lang.Math.min(d1.getTime(), d2.getTime())); }else if (key.equals(\"endDate\")) { java.util.Date d1 = ((java.util.Date) (existingValue)); java.util.Date d2 = ((java.util.Date) (conflictingValue)); newValue = new java.util.Date(java.lang.Math.max(d1.getTime(), d2.getTime())); }else if (!(ch.uzh.ddis.katts.bolts.join.SameValueJoinCondition.ignoredBindings.contains(key))) { throw new java.lang.IllegalStateException(java.lang.String.format((\"Conflicting values for key '%1s' \" + \"when trying to merge variable bindings %2s into %s3.\"), key, b2.toString(), mergedBindings.toString())); } mergedBindings.put(key, newValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/775/buggy-version/katts.src.main.java.ch.uzh.ddis.katts.bolts.join.SameValueJoinCondition.java", "BodyUseAPI": ["ch.uzh.ddis.katts.bolts.join.SimpleVariableBindings.get(java.lang.String)", "ch.uzh.ddis.katts.bolts.join.SimpleVariableBindings.get(java.lang.String)", "ch.uzh.ddis.katts.bolts.join.SimpleVariableBindings.toString()", "java.lang.String.format(java.lang.String,java.lang.String,b2.toString(),mergedBindings.toString())", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "ch.uzh.ddis.katts.bolts.join.SimpleVariableBindings.toString()", "ch.uzh.ddis.katts.bolts.join.SimpleVariableBindings.put(java.lang.String,java.lang.Object)", "java.util.Set<java.lang.String>.contains(java.lang.String)"], "Fixed commit": "2d2f34806c1982472e1bf83d6a095b4970661bc1", "Url": "https://api.github.com/repos/uzh/katts", "Date": "2012-09-03T16:23:29Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ch.uzh.ddis.katts.bolts.join.SameValueJoinCondition.ignoredBindings.contains(key))) { throw new java.lang.IllegalStateException(java.lang.String.format((\"Conflicting values for key '%1s' \" + \"when trying to merge variable bindings %2s into %s3.\"), key, b2.toString(), mergedBindings.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/775/buggy-version/katts.src.main.java.ch.uzh.ddis.katts.bolts.join.SameValueJoinCondition.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,b2.toString(),mergedBindings.toString())"], "Fixed commit": "2d2f34806c1982472e1bf83d6a095b4970661bc1", "Url": "https://api.github.com/repos/uzh/katts", "Date": "2012-09-03T16:23:29Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (data == null) { java.lang.Long id = (java.lang.Long.valueOf(txId)) - 1; path = ((((((_rootPath) + \"/\") + tx) + \"/user/partition_\") + partition) + \"/\") + id; data = _zkHelper.getData(path, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/1686/buggy-version/src.main.java.com.kunjian.TridentMeta.java", "BodyUseAPI": [], "Fixed commit": "eeb0e39c14ac334e9d8cdac6d6bcce87fe7dfb15", "Url": "https://api.github.com/repos/tomsunelite/tridenttool", "Date": "2016-07-28T07:51:16Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.vfs.provider.UriParser.encode(paramFileName.getPath())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (path.startsWith(\"/\")) path = path.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5213/buggy-version/core.src.main.java.org.apache.commons.vfs.provider.zip.ZipFileSystem.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "3126234847ef1bb8a88ec0f2eed67f82ed73015f", "Url": "https://api.github.com/repos/Kamapcuc/pdi-vfs", "Date": "2014-04-15T12:05:15Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hang) != null) { if (((getY()) <= ((hang.getPosition().second()) - 32)) && ((java.lang.Math.abs(((hang.getPosition().first()) - (getX())))) < (GUI.MainChar.SCALE))) { hang = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6503/buggy-version/src.GUI.MainChar.java", "BodyUseAPI": [], "Fixed commit": "02d76fb20b65a6b043e875b30fba5663f2e38c42", "Url": "https://api.github.com/repos/holard/platformer", "Date": "2015-03-12T08:00:23Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((attachments.size()) > 0) { table.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/892/buggy-version/modules.activiti-explorer.src.main.java.org.activiti.explorer.ui.task.HistoricTaskDetailPanel.java", "BodyUseAPI": [], "Fixed commit": "0acfce6e1f0bfd392731e562e908822d32652d67", "Url": "https://api.github.com/repos/Activiti/Activiti", "Date": "2013-05-06T10:01:18Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 0) { if (!(args[0].equalsIgnoreCase(\"one\"))) { price = price * (invi.getAmount()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/631/buggy-version/main.java.io.github.thatsmusic99.headsplus.commands.SellHead.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "4c6244dbc0ab3327bad01985cbee7a372501426b", "Url": "https://api.github.com/repos/Thatsmusic99/HeadsPlus", "Date": "2017-05-12T15:48:42Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.PlayerInventory.getItemInMainHand()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((invi.getAmount()) > 0) && ((args.length) >= 0)) { if ((args.length) > 0) { if (!(args[0].equalsIgnoreCase(\"one\"))) { price = price * (invi.getAmount()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/631/buggy-version/main.java.io.github.thatsmusic99.headsplus.commands.SellHead.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "org.bukkit.inventory.ItemStack.getAmount()"], "Fixed commit": "4c6244dbc0ab3327bad01985cbee7a372501426b", "Url": "https://api.github.com/repos/Thatsmusic99/HeadsPlus", "Date": "2017-05-12T15:48:42Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.PlayerInventory.getItemInMainHand()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((invi.getAmount()) > 0) && ((args.length) >= 0)) { if ((args.length) > 0) { if (!(args[0].equalsIgnoreCase(\"one\"))) { price = price * (invi.getAmount()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/631/buggy-version/main.java.io.github.thatsmusic99.headsplus.commands.SellHead.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getAmount()", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "4c6244dbc0ab3327bad01985cbee7a372501426b", "Url": "https://api.github.com/repos/Thatsmusic99/HeadsPlus", "Date": "2017-05-12T15:48:42Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.socket) == null) this.socket = new java.net.DatagramSocket(com.oneofthesevenbillion.ziah.FriendModule.network.NetworkManager.getInstance().getPort());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/3334/buggy-version/src.minecraft.com.oneofthesevenbillion.ziah.FriendModule.network.NetworkConnectionManager.java", "BodyUseAPI": [], "Fixed commit": "fefd76fdd056a5125542544d426aec804555b6cc", "Url": "https://api.github.com/repos/ziah/Friends-Module", "Date": "2013-09-12T19:24:49Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arena.rewardMap.get(p)) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/2938/buggy-version/src.com.garbagemule.MobArena.MASpawnThread.java", "BodyUseAPI": [], "Fixed commit": "da8c77082ed69d7d4ebc00cdfd480fa7df67c2ad", "Url": "https://api.github.com/repos/garbagemule/MobArena", "Date": "2011-07-16T21:06:31Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAccessibilityServiceSwitch) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7305/buggy-version/app.src.main.java.com.stardust.scriptdroid.ui.main.SideMenuFragment.java", "BodyUseAPI": [], "Fixed commit": "32e07c6951a28cf1e7f38af8906df90bf15a1cce", "Url": "https://api.github.com/repos/hyb1996/Auto.js", "Date": "2017-07-09T00:32:54Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.stardust.autojs.execution.ScriptExecuteActivity.execution) == null) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/7305/buggy-version/autojs.src.main.java.com.stardust.autojs.execution.ScriptExecuteActivity.java", "BodyUseAPI": [], "Fixed commit": "32e07c6951a28cf1e7f38af8906df90bf15a1cce", "Url": "https://api.github.com/repos/hyb1996/Auto.js", "Date": "2017-07-09T00:32:54Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMultiUserSwitch) != null) { mMultiUserSwitch.setActivityStarter(activityStarter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6087/buggy-version/packages.SystemUI.src.com.android.systemui.statusbar.phone.StatusBarHeaderView.java", "BodyUseAPI": [], "Fixed commit": "41e10bb62c21e4e6b8d418a8708b5463f161b160", "Url": "https://api.github.com/repos/CyanHacker-Lollipop/frameworks_base", "Date": "2015-01-18T16:45:46Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActivityStarter) != null) { mActivityStarter.startActivity(intent, true); }else { getContext().startActivityAsUser(intent, new android.os.UserHandle(android.os.UserHandle.USER_CURRENT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6087/buggy-version/packages.SystemUI.src.com.android.systemui.statusbar.phone.MultiUserSwitch.java", "BodyUseAPI": [], "Fixed commit": "41e10bb62c21e4e6b8d418a8708b5463f161b160", "Url": "https://api.github.com/repos/CyanHacker-Lollipop/frameworks_base", "Date": "2015-01-18T16:45:46Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (selectedRow == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/6146/buggy-version/Source.src.uk.co.fostorial.sotm.deck.DeckManager.java", "BodyUseAPI": [], "Fixed commit": "ca884aecba2e8a93a94353e14bafcb36cfde90d2", "Url": "https://api.github.com/repos/darthdie/Forge-of-the-Multiverse", "Date": "2014-05-15T20:03:07Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/848/buggy-version/src.main.java.net.canadensys.utils.NumberUtils.java", "BodyUseAPI": [], "Fixed commit": "7fce74de881d22ef15d828f311284f3612d6214a", "Url": "https://api.github.com/repos/Canadensys/canadensys-core", "Date": "2012-12-14T21:07:39Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mWrapAdapter) != null) { mWrapAdapter.setScrollState(state); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8397/buggy-version/LRecyclerview_library.src.main.java.com.github.jdsjlzx.recyclerview.LuRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "2ab0df08aef6ddea82a5a5995ae471d788f47f1a", "Url": "https://api.github.com/repos/weatherfish/LRecyclerView", "Date": "2016-09-20T09:08:35Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mWrapAdapter) != null) { mWrapAdapter.setScrollState(state); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/8397/buggy-version/LRecyclerview_library.src.main.java.com.github.jdsjlzx.recyclerview.LRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "2ab0df08aef6ddea82a5a5995ae471d788f47f1a", "Url": "https://api.github.com/repos/weatherfish/LRecyclerView", "Date": "2016-09-20T09:08:35Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bittle.telegram.config.PerGroupBotConfig.get_values(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) { return com.bittle.telegram.main.Constants.MAX_MESSAGE_INT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/949/buggy-version/src.com.bittle.telegram.config.PerGroupBotConfig.java", "BodyUseAPI": [], "Fixed commit": "35ce75f0da08067dfc3cc941be006574bf35e314", "Url": "https://api.github.com/repos/oscar0812/TelegramBot", "Date": "2017-10-20T19:50:05Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.String.class.cast(source.get(\"entityid\")).contains(\"teams\")) { java.lang.System.out.println(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V8/5367/buggy-version/manage-server.src.main.java.manage.format.EngineBlockFormatter.java", "BodyUseAPI": [], "Fixed commit": "28ec6f094434c9e983db2319b3e95c91538a052b", "Url": "https://api.github.com/repos/OpenConext/OpenConext-manage", "Date": "2017-10-13T11:57:43Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((socket) != null) { try { output.writeObject(LobbyServer.DISCONNECT); socket.close(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2082/buggy-version/src.riskyspace.network.LobbyClient.java", "BodyUseAPI": [], "Fixed commit": "3e73ef3fb9d3cfbc69710c836fc142f436f38215", "Url": "https://api.github.com/repos/RorasGit/RiskySpace", "Date": "2012-05-23T04:32:09Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inText.length) == 3) lastactive = inText[2];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4660/buggy-version/src.com.gmail.melvinchien.InspirePlayed.InspirePlayed.java", "BodyUseAPI": [], "Fixed commit": "05d4616a9da18e24bf12f28be65216b497c97be9", "Url": "https://api.github.com/repos/suuoh/iPlayed", "Date": "2011-06-23T15:10:44Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userColor != null) { item.style = \"color: \" + userColor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/22/buggy-version/src.main.java.org.wilson.world.menu.UserContextMenuItemProvider.java", "BodyUseAPI": [], "Fixed commit": "679cbf36e17944061446c39b6aa621e5b01b9434", "Url": "https://api.github.com/repos/liumiaowilson/world", "Date": "2017-04-22T00:20:10Z"},
{"Line": "=>2000", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isKmaxMode)) && (isRightsOnTopicsEnabled())) { com.stratelia.webactiv.util.node.model.NodeDetail node = getNodeHeader(getCurrentFolderId()); if (node.haveRights()) { sug.setObjectId(((ObjectType.NODE.getCode()) + (node.getRightsDependsOn()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4826/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.control.KmeliaSessionController.java", "BodyUseAPI": [], "Fixed commit": "e37f7abd49fba3f4379224b628028098f357a6e0", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Components", "Date": "2013-09-09T14:15:23Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(this.heroes[0].isAlive())) { (this.chance)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6993/buggy-version/src.de.titanium.enterprise.View.FightView.FightMenu.java", "BodyUseAPI": [], "Fixed commit": "3adb10c0a7769994b15d97da45c859216ccbe1c3", "Url": "https://api.github.com/repos/Titanium-Team/Enterprise", "Date": "2016-04-14T16:36:12Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(this.heroes[1].isAlive())) { (this.chance)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6993/buggy-version/src.de.titanium.enterprise.View.FightView.FightMenu.java", "BodyUseAPI": [], "Fixed commit": "3adb10c0a7769994b15d97da45c859216ccbe1c3", "Url": "https://api.github.com/repos/Titanium-Team/Enterprise", "Date": "2016-04-14T16:36:12Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(this.heroes[2].isAlive())) { (this.chance)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6993/buggy-version/src.de.titanium.enterprise.View.FightView.FightMenu.java", "BodyUseAPI": [], "Fixed commit": "3adb10c0a7769994b15d97da45c859216ccbe1c3", "Url": "https://api.github.com/repos/Titanium-Team/Enterprise", "Date": "2016-04-14T16:36:12Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (executor.isShutdown()) { throw new java.util.concurrent.RejectedExecutionException(((\"Rejected execution of task [\" + (r.getClass())) + \"] since the executor is shutdown.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2467/buggy-version/core.src.main.java.org.jclouds.concurrent.DynamicThreadPoolExecutor.java", "BodyUseAPI": [], "Fixed commit": "05f64b20a8d757a06f03027231bc53e000717835", "Url": "https://api.github.com/repos/jclouds/jclouds", "Date": "2017-04-21T18:17:02Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (executor.isShutdown()) { throw new java.util.concurrent.RejectedExecutionException(((\"Rejected execution of task [\" + (r.getClass())) + \"] since the executor is shutdown.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2467/buggy-version/core.src.main.java.org.jclouds.concurrent.DynamicThreadPoolExecutor.java", "BodyUseAPI": [], "Fixed commit": "05f64b20a8d757a06f03027231bc53e000717835", "Url": "https://api.github.com/repos/jclouds/jclouds", "Date": "2017-04-21T18:17:02Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(getActivity())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sp.edit().clear().commit()) { com.mikroskil.android.qattend.db.QattendDatabase dbHelper = new com.mikroskil.android.qattend.db.QattendDatabase(getActivity()); final android.database.sqlite.SQLiteDatabase db = dbHelper.getWritableDatabase(); dbHelper.onUpgrade(db, QattendDatabase.DB_VERSION, ((com.mikroskil.android.qattend.db.QattendDatabase.DB_VERSION) + 1)); com.parse.ParseUser.logOut(); android.content.Intent intent = new android.content.Intent(getActivity(), com.mikroskil.android.qattend.SplashActivity.class); intent.addFlags(((android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK) | (android.content.Intent.FLAG_ACTIVITY_NEW_TASK))); startActivity(intent); }else android.widget.Toast.makeText(getActivity(), \"Failed to clear your preferences.\", Toast.LENGTH_LONG).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3211/buggy-version/eclipse.qattend.src.com.mikroskil.android.qattend.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "da785a431bbef5b6253a3a8a93c13d2b927dcf2b", "Url": "https://api.github.com/repos/Mikroskil/Chrone-Code", "Date": "2014-01-06T20:11:00Z"},
{"Line": "=>1173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ihtsdo.otf.mapping.services.ContentService.getTreePositionsWithDescendants(trackingRecord.getTerminologyId(),trackingRecord.getTerminology(),trackingRecord.getTerminologyVersion())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((treePositionList.getCount()) == 0) { throw new java.lang.Exception(((\"Concept \" + (trackingRecord.getTerminologyId())) + \" is unexpectedly missing tree positions.\")); }else { mapRecord.setCountDescendantConcepts(new java.lang.Long(treePositionList.getTreePositions().get(0).getDescendantCount())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8778/buggy-version/jpa-services.src.main.java.org.ihtsdo.otf.mapping.jpa.handlers.DefaultProjectSpecificAlgorithmHandler.java", "BodyUseAPI": ["org.ihtsdo.otf.mapping.helpers.TreePositionList.getTreePositions()", "org.ihtsdo.otf.mapping.model.MapRecord.setCountDescendantConcepts(java.lang.Long)", "treePositionList.getTreePositions().get(0).getDescendantCount()", "treePositionList.getTreePositions().get(int)"], "Fixed commit": "92ab27c345d58198728de6a0c2e758e7bcfd5226", "Url": "https://api.github.com/repos/WestCoastInformatics/OTF-Mapping-Service", "Date": "2014-08-28T23:20:51Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((recipients) == null) || (recipients.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8778/buggy-version/rest.src.main.java.org.ihtsdo.otf.mapping.rest.RootServiceRest.java", "BodyUseAPI": [], "Fixed commit": "92ab27c345d58198728de6a0c2e758e7bcfd5226", "Url": "https://api.github.com/repos/WestCoastInformatics/OTF-Mapping-Service", "Date": "2014-08-28T23:20:51Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.eod) != (-1)) { this.eod -= length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1009/buggy-version/src.main.java.org.verapdf.as.filters.io.ASBufferedInFilter.java", "BodyUseAPI": [], "Fixed commit": "7bfb653060d26aea2f48f7a8d5428400fbf20410", "Url": "https://api.github.com/repos/shem-sergey/veraPDF-pdflib", "Date": "2017-06-05T14:25:10Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((guess[i]) < (code)) { java.lang.System.out.println(\"higher\"); java.lang.System.out.println(\"No more guesses, you lost.\"); java.lang.System.out.println(((i + 1) + \" guesses:\")); }else { java.lang.System.out.println(\"lower\"); java.lang.System.out.println(\"No more guesses, you lost.\"); java.lang.System.out.println(((i + 1) + \" guesses:\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6504/buggy-version/src.GuessingGame.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "c5dbfbc88dc02b355547bf41fd5a1cd7f09036b7", "Url": "https://api.github.com/repos/leonardomathon/GuessingGame", "Date": "2017-09-18T19:17:53Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((proguard) != null) { if ((proguard.isSkip()) != null) { parsedSkip = proguard.isSkip(); } if (org.apache.commons.lang.StringUtils.isNotEmpty(proguard.getConfig())) { parsedConfig = proguard.getConfig(); } if (org.apache.commons.lang.StringUtils.isNotEmpty(proguard.getProguardJarPath())) { parsedProguardJarPath = proguard.getProguardJarPath(); } if (((proguard.getJvmArguments()) != null) && ((proguard.getJvmArguments().length) > 0)) { parsedJvmArguments = proguardJvmArguments; } if ((proguard.isFilterManifest()) != null) { parsedFilterManifest = proguard.isFilterManifest(); } if ((proguard.isFilterMavenDescriptor()) != null) { parsedFilterMavenDescriptor = proguard.isFilterMavenDescriptor(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5745/buggy-version/src.main.java.com.jayway.maven.plugins.android.phase04processclasses.ProguardMojo.java", "BodyUseAPI": [], "Fixed commit": "b3985a719c0ccd00e7ad095e10b52ab5cd6416d9", "Url": "https://api.github.com/repos/jayway/maven-android-plugin", "Date": "2012-03-05T22:18:53Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params.getLabelProp()) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2238/buggy-version/src.cz.zcu.kiv.eeg.owlimport.model.rules.export.ExportTitleRule.java", "BodyUseAPI": [], "Fixed commit": "35e659fa132531a5a95634ba077432a26781b5e5", "Url": "https://api.github.com/repos/NEUROINFORMATICS-GROUP-FAV-KIV-ZCU/KIM-OWLImport", "Date": "2013-05-03T21:44:20Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((authors != null) && (!(authors.isEmpty()))) { java.lang.String[] authorsArr = authors.split(\",\"); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setLines(authorsArr.length); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(authors.replace(\",\", \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/207/buggy-version/Alexandria_Code.alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": ["((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "3031267c5915f354a1dbfa3c2fffdaa0534d10e8", "Url": "https://api.github.com/repos/AshitakaLax/uand_project3", "Date": "2016-02-23T13:53:26Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((authors != null) && (!(authors.isEmpty()))) { java.lang.String[] authorsArr = authors.split(\",\"); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setLines(authorsArr.length); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(authors.replace(\",\", \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/207/buggy-version/Alexandria_Code.alexandria.app.src.main.java.it.jaschke.alexandria.AddBook.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "3031267c5915f354a1dbfa3c2fffdaa0534d10e8", "Url": "https://api.github.com/repos/AshitakaLax/uand_project3", "Date": "2016-02-23T13:53:26Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((com.openpojo.reflection.utils.AttributeHelper.getAttributeName(field).length()) > 2) && (com.openpojo.reflection.utils.AttributeHelper.getAttributeName(field).startsWith(\"Is\"))) && (java.lang.Character.isUpperCase(com.openpojo.reflection.utils.AttributeHelper.getAttributeName(field).charAt(2)))) prefix.add((\"set\" + (com.openpojo.reflection.utils.AttributeHelper.getAttributeName(field).replaceFirst(\"Is\", \"is\"))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8030/buggy-version/src.main.java.com.openpojo.reflection.impl.PojoMethodFactory.java", "BodyUseAPI": ["com.openpojo.reflection.utils.AttributeHelper.getAttributeName(field).replaceFirst(java.lang.String,java.lang.String)", "java.util.List<java.lang.String>.add((\"set\" + (com.openpojo.reflection.utils.AttributeHelper.getAttributeName(field).replaceFirst(\"Is\", \"is\"))))", "com.openpojo.reflection.utils.AttributeHelper.getAttributeName(java.lang.reflect.Field)"], "Fixed commit": "07cc9cad6aab71836cec0956c59bab7f2959ce8b", "Url": "https://api.github.com/repos/bangoker/openpojo", "Date": "2017-08-14T21:52:14Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toast) == null) toast = android.widget.Toast.makeText(getApplicationContext(), (item + \" removed.\"), Toast.LENGTH_SHORT); else toast.setText((item + \" removed.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5563/buggy-version/app.src.main.java.list.task.tasklist.TaskListActivity.java", "BodyUseAPI": [], "Fixed commit": "e1ce4204f06e3764a8948ec773a0af6611efdf02", "Url": "https://api.github.com/repos/anubiann00b/TaskList", "Date": "2014-09-09T03:43:42Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((addForm.getAvailableGroups()) != null) { org.hyperic.hq.ui.util.SessionUtils.addToList(session, Constants.PENDING_RESGRPS_SES_ATTR, addForm.getAvailableGroups()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/131/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.resource.common.inventory.AddResourceGroupsActionNG.java", "BodyUseAPI": ["org.hyperic.hq.ui.action.resource.common.inventory.AddResourceGroupsFormNG.getAvailableGroups()", "org.hyperic.hq.ui.util.SessionUtils.addToList(javax.servlet.http.HttpSession,Constants.PENDING_RESGRPS_SES_ATTR,addForm.getAvailableGroups())"], "Fixed commit": "13769a4501a14e21efa7d94120f0745f206b11f0", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-09-08T08:08:34Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((addForm.getPendingGroups()) != null) { org.hyperic.hq.ui.util.SessionUtils.removeFromList(session, Constants.PENDING_RESGRPS_SES_ATTR, addForm.getPendingGroups()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/131/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.resource.common.inventory.AddResourceGroupsActionNG.java", "BodyUseAPI": ["org.hyperic.hq.ui.action.resource.common.inventory.AddResourceGroupsFormNG.getPendingGroups()", "org.hyperic.hq.ui.util.SessionUtils.removeFromList(javax.servlet.http.HttpSession,Constants.PENDING_RESGRPS_SES_ATTR,addForm.getPendingGroups())"], "Fixed commit": "13769a4501a14e21efa7d94120f0745f206b11f0", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-09-08T08:08:34Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((V.getext()) != null) { V.getext().getTextField().setText(java.lang.Integer.toString(tick)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7451/buggy-version/src.production.Master.java", "BodyUseAPI": ["production.Visualizer.getext()", "V.getext().getTextField().setText(java.lang.String)", "V.getext().getTextField()"], "Fixed commit": "01cf85459974b2217849fe7d71fa8037186a2191", "Url": "https://api.github.com/repos/di-huang/Amazon-Warehouse-System", "Date": "2016-12-08T15:57:50Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((placeMarkers) == null) { placeMarkers = new net.c_kogyo.returnvisitorv5.data.PlaceMarkers(mMap); }else { placeMarkers.drawAllMarkers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1882/buggy-version/app.src.main.java.net.c_kogyo.returnvisitorv5.activity.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "3925fb78f1b60c3c063200ecaab0b2fa1551ed69", "Url": "https://api.github.com/repos/SeijiShii/ReturnVisitorV5", "Date": "2017-06-12T04:09:18Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(itemId.isEmpty())) responseData.setItemId(org.extensiblecatalog.ncip.v2.koha.util.KohaUtil.createItemId(itemId));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/9240/buggy-version/connectors.koha.3.xx.trunk.jar.src.main.java.org.extensiblecatalog.ncip.v2.koha.KohaCancelRequestItemService.java", "BodyUseAPI": ["org.extensiblecatalog.ncip.v2.koha.util.KohaUtil.createItemId(java.lang.String)", "org.extensiblecatalog.ncip.v2.service.CancelRequestItemResponseData.setItemId(org.extensiblecatalog.ncip.v2.koha.util.KohaUtil.createItemId(itemId))"], "Fixed commit": "5b18aefb24efea0cd32e110e42ccdd26570acf69", "Url": "https://api.github.com/repos/moravianlibrary/xcncip2toolkit", "Date": "2015-08-11T10:51:11Z"},
{"Line": "=>870", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.ednovo.gooru.client.mvp.shelf.ShelfView.collectionDo) != null) { if (((org.ednovo.gooru.client.mvp.shelf.ShelfView.collectionDo.getPublishStatus()) != null) && (org.ednovo.gooru.client.mvp.shelf.ShelfView.collectionDo.getPublishStatus().getValue().equals(\"pending\"))) { rbPublic.setVisible(false); lblPublishPending.setVisible(true); publishedPanel.setVisible(false); }else { rbPublic.setVisible(true); lblPublishPending.setVisible(false); publishedPanel.setVisible(false); } }else { rbPublic.setVisible(false); lblPublishPending.setVisible(false); publishedPanel.setVisible(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3342/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.shelf.ShelfView.java", "BodyUseAPI": [], "Fixed commit": "677a62911b9ff18ca74862bf21b48b0085496a3d", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-01-08T13:32:03Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(recordFound.getResponse().equals(UpdateNotification.RESPONSE_NEW))) { OrcMath.createScreen.presentUpdateNotification(recordFound); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4538/buggy-version/OrcMathGUI.src.data.SettingsData.java", "BodyUseAPI": ["OrcMath.createScreen.presentUpdateNotification(components.UpdateNotification)"], "Fixed commit": "1a0cc9e25250b3c62da8d4bbca3f1da613a624f6", "Url": "https://api.github.com/repos/bnockles/orcmath", "Date": "2017-02-13T01:50:48Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((line.length) > 4) this.notificationText = line[5]; else this.notificationText = \"A new update is available at orcmath.com/orcmath\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4538/buggy-version/OrcMathGUI.src.components.UpdateNotification.java", "BodyUseAPI": [], "Fixed commit": "1a0cc9e25250b3c62da8d4bbca3f1da613a624f6", "Url": "https://api.github.com/repos/bnockles/orcmath", "Date": "2017-02-13T01:50:48Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((line.length) > 3) this.url = line[4]; else this.url = \"http://www.neverbenbetter.com/orcmath/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4538/buggy-version/OrcMathGUI.src.components.UpdateNotification.java", "BodyUseAPI": [], "Fixed commit": "1a0cc9e25250b3c62da8d4bbca3f1da613a624f6", "Url": "https://api.github.com/repos/bnockles/orcmath", "Date": "2017-02-13T01:50:48Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((line.contains(\"icmp_seq\")) && (line.contains(\"time=\"))) { int count = java.lang.Integer.parseInt(line.split(\"icmp_seq=\")[1].split(\" \")[0]); double value = java.lang.Double.parseDouble(line.split(\"time=\")[1].split(\" ms\")[0]); experiment.addSequence(value, count); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/778/buggy-version/client.Ping.src.com.num.utils.ParseUtil.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "c4f0c958cc14d4ef7743998c0556f1722bc16cff", "Url": "https://api.github.com/repos/ykim320/androidperformance", "Date": "2013-09-19T03:48:18Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameSim.Reporter.w) == null) { try { gameSim.Reporter.w = new java.io.FileWriter(gameSim.Reporter.f, true); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/391/buggy-version/src.gameSim.Reporter.java", "BodyUseAPI": [], "Fixed commit": "3490ca1a92627fd581e0c73c78210c25159f8b5c", "Url": "https://api.github.com/repos/tagger94/HackISU_Spring", "Date": "2015-04-11T21:32:34Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.sun.glass.events.KeyEvent.VK_ENTER) == (evt.getKeyCode())) && (eatReaturn)) eatReaturn = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/551/buggy-version/src.de.relaunch64.popelganda.util.EditorPanes.java", "BodyUseAPI": [], "Fixed commit": "54311c1f9648bf3b7b0d1994fac24d28e1d25183", "Url": "https://api.github.com/repos/sjPlot/Relaunch64", "Date": "2014-04-02T08:02:19Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.CreatureSpawnEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pz.getTarget()) != (target)) { pz.setTarget(target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5459/buggy-version/AngryPigZombies.src.com.incraftion.j2ther.angrypigzombies.MobListener.java", "BodyUseAPI": ["org.bukkit.entity.PigZombie.setTarget(org.bukkit.entity.Player)"], "Fixed commit": "33a5f492eafb97c6a697f518e936d0722ed067e8", "Url": "https://api.github.com/repos/j2ther/AngryPigZombies", "Date": "2012-04-17T13:45:44Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tolerance.charAt(((tolerance.length()) - 1))) == '%') { this.tolerance = tolerance; return; }else if (tolerance.substring(((tolerance.length()) - 2)).equals(\"--\")) this.tolerance = \"0%\"; else this.tolerance = tolerance + \"%\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3455/buggy-version/Costinator.src.de.bandb.costinator.customadapter.CostelementListViewItem.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "9e4ad4bd3df90d3150802d5452bc044617fef378", "Url": "https://api.github.com/repos/MathiasBicker/costinator", "Date": "2014-03-02T22:40:04Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pEvent.getHand().equals(EquipmentSlot.HAND))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8437/buggy-version/src.main.java.com.brohoof.brohoofplus.bukkit.Mount.java", "BodyUseAPI": [], "Fixed commit": "449695b37c68b34b4f8a726c1f6052efdf871be8", "Url": "https://api.github.com/repos/EquestriaCubed/BrohoofPlus", "Date": "2017-08-05T23:24:28Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.factory) == null) { return spoon.support.reflect.declaration.CtElementImpl.DEFAULT_FACTORY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3830/buggy-version/src.main.java.spoon.support.reflect.declaration.CtElementImpl.java", "BodyUseAPI": [], "Fixed commit": "d835b8e00300ed530295c008f2a9d42d61e5cbad", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2017-06-29T14:54:40Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.liferay.portal.kernel.util.Validator.isNotNull(portalContext)) && (!(StringPool.SLASH.equals(portalContext)))) { sb.append(portalContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6210/buggy-version/src.main.java.com.liferay.opensourceforlife.util.CustomLandingPageUtil.java", "BodyUseAPI": ["com.liferay.portal.kernel.util.StringBundler.append(java.lang.String)"], "Fixed commit": "53db7963cc070bb66dcf0779f1f2a90101072c4e", "Url": "https://api.github.com/repos/opensourceforlife/CustomLandingPage-Hook", "Date": "2013-11-12T04:02:01Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.player.EntityPlayer.getHeldItem(net.minecraft.util.EnumHand)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((stack.getItem()) == (net.minecraft.init.Items.NAME_TAG)) { setAlwaysRenderNameTag(true); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8556/buggy-version/src.main.java.com.crowsofwar.avatar.common.entity.mob.EntitySkyBison.java", "BodyUseAPI": [], "Fixed commit": "4d2fd58007875c6971f4dc29757b01add2ce4886", "Url": "https://api.github.com/repos/CrowsOfWar/AvatarMod", "Date": "2017-04-14T01:13:05Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.commons.lang.StringUtils.isNotBlank(imgRef)) && ((imgRef.indexOf(locale)) == (-1))) { if ((imgRef.indexOf(\"/en/us/\")) != (-1)) { imgRef = imgRef.replace(\"/en/us/\", ((\"/global/\" + locale) + \"/\")); }else if ((imgRef.indexOf(\"/en_us/\")) != (-1)) { imgRef = imgRef.replace(\"/en_us/\", ((\"/global/\" + locale) + \"/\")); }else if ((imgRef.indexOf(\"/assets/\")) != (-1)) { imgRef = imgRef.replace(\"/assets/\", ((\"/global/\" + locale) + \"/\")); } }else { java.net.URL url = new java.net.URL(path); java.lang.String imagePath = url.getPath(); if (imagePath.startsWith(\"/web/\")) { imgRef = imagePath.replace(\"/web/\", ((\"/content/dam/global/\" + locale) + \"/\")); }else if (imagePath.toLowerCase().startsWith(\"/en/us/\")) { imgRef = imagePath.replace(\"/en/us/\", ((\"/content/dam/global/\" + locale) + \"/\")); imgRef = imagePath.replace(\"/en/US/\", ((\"/content/dam/global/\" + locale) + \"/\")); }else { imgRef = (\"/content/dam/global/\" + locale) + imagePath; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6093/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.config.FrameworkUtils.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "f651158168ea8de3a12f678ee87159a4d39f4671", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-02-16T07:30:28Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((imgRef.indexOf(\"/en_us/\")) != (-1)) { imgRef = imgRef.replace(\"/en_us/\", ((\"/global/\" + locale) + \"/\")); }else if ((imgRef.indexOf(\"/assets/\")) != (-1)) { imgRef = imgRef.replace(\"/assets/\", ((\"/global/\" + locale) + \"/\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6093/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.config.FrameworkUtils.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "f651158168ea8de3a12f678ee87159a4d39f4671", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-02-16T07:30:28Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isResultDelivered)) { progressDialog.show(); ((com.example.myequilator.CalculationLoader) (loader)).setHandler(handler); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5279/buggy-version/app.src.main.java.com.example.myequilator.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "af6603fbc6b78d429d30ddb690e1ff7338044bd3", "Url": "https://api.github.com/repos/Vilagra/Equilator", "Date": "2017-06-25T09:36:24Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) isResultDelivered = savedInstanceState.getBoolean(Constants.IS_RESULT_DELIVERED);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5279/buggy-version/app.src.main.java.com.example.myequilator.MainFragment.java", "BodyUseAPI": ["android.os.Bundle.getBoolean(Constants.IS_RESULT_DELIVERED)"], "Fixed commit": "af6603fbc6b78d429d30ddb690e1ff7338044bd3", "Url": "https://api.github.com/repos/Vilagra/Equilator", "Date": "2017-06-25T09:36:24Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(methodDecl.equals(coreMethod))) { com.sun.tools.javac.tree.JCTree.JCMethodInvocation invocation = null; com.sun.tools.javac.tree.JCTree.JCStatement stat = methodDecl.body.stats.get(0); if (stat instanceof com.sun.tools.javac.tree.JCTree.JCReturn) { if ((((com.sun.tools.javac.tree.JCTree.JCReturn) (stat)).expr) instanceof com.sun.tools.javac.tree.JCTree.JCMethodInvocation) { invocation = ((com.sun.tools.javac.tree.JCTree.JCMethodInvocation) (((com.sun.tools.javac.tree.JCTree.JCReturn) (stat)).expr)); } }else if (stat instanceof com.sun.tools.javac.tree.JCTree.JCExpressionStatement) { if ((((com.sun.tools.javac.tree.JCTree.JCExpressionStatement) (stat)).expr) instanceof com.sun.tools.javac.tree.JCTree.JCMethodInvocation) { invocation = ((com.sun.tools.javac.tree.JCTree.JCMethodInvocation) (((com.sun.tools.javac.tree.JCTree.JCExpressionStatement) (stat)).expr)); } } if (invocation == null) { isValid = false; }else { com.sun.tools.javac.code.Symbol.MethodSymbol method = org.jsweet.transpiler.util.Util.findMethodDeclarationInType(types, ((com.sun.tools.javac.code.Symbol.TypeSymbol) (methodDecl.sym.getEnclosingElement())), invocation); if ((method != null) && (method.getSimpleName().toString().equals(methodName))) { java.lang.String inv = invocation.meth.toString(); if (!(((inv.equals(methodName)) || (inv.equals((\"this.\" + (methodName))))) || (inv.equals(\"this\")))) { isValid = false; } if ((isValid) && ((invocation.getArguments()) != null)) { for (int i = 0; i < (invocation.getArguments().size()); i++) { com.sun.tools.javac.tree.JCTree.JCExpression expr = invocation.getArguments().get(i); if (org.jsweet.transpiler.util.Util.isConstant(expr)) { defaultValues.put(i, expr); }else { if (!(((expr instanceof com.sun.tools.javac.tree.JCTree.JCIdent) && (i < (methodDecl.params.length()))) && (methodDecl.params.get(i).name.equals(((com.sun.tools.javac.tree.JCTree.JCIdent) (expr)).name)))) { isValid = false; break; } } } } }else { isValid = false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/584/buggy-version/transpiler.src.main.java.org.jsweet.transpiler.OverloadScanner.java", "BodyUseAPI": ["org.jsweet.transpiler.util.Util.findMethodDeclarationInType(com.sun.tools.javac.code.Types,com.sun.tools.javac.code.Symbol,com.sun.tools.javac.tree.JCTree.JCMethodInvocation)", "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree.JCVariableDecl>.get(int)", "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree.JCStatement>.get(int)", "com.sun.tools.javac.util.Name.equals(com.sun.tools.javac.util.Name)", "com.sun.tools.javac.code.Symbol.MethodSymbol.getEnclosingElement()", "com.sun.tools.javac.util.List<com.sun.tools.javac.tree.JCTree.JCVariableDecl>.length()"], "Fixed commit": "3294131670326a3d9f90e023b1bdf2059d3c6df1", "Url": "https://api.github.com/repos/cincheo/jsweet", "Date": "2017-02-20T12:48:14Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.JELLY_BEAN)) { view.setBackgroundDrawable(background); }else { view.setBackground(background); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8583/buggy-version/preference-v7.src.main.java.com.takisoft.fix.support.v7.preference.PreferenceGroupAdapter.java", "BodyUseAPI": [], "Fixed commit": "55b0b2937601b170ba0922a0e0c462086619f116", "Url": "https://api.github.com/repos/Gericop/Android-Support-Preference-V7-Fix", "Date": "2017-08-04T18:23:13Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4437/buggy-version/carbon.src.main.java.carbon.widget.Toolbar.java", "BodyUseAPI": [], "Fixed commit": "5929352722b52447e27335ce5bd01b1a43c96c49", "Url": "https://api.github.com/repos/ZieIony/Carbon", "Date": "2016-02-19T20:58:05Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context instanceof android.app.Activity) ((android.app.Activity) (context)).onBackPressed();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4437/buggy-version/carbon.src.main.java.carbon.widget.Toolbar.java", "BodyUseAPI": [], "Fixed commit": "5929352722b52447e27335ce5bd01b1a43c96c49", "Url": "https://api.github.com/repos/ZieIony/Carbon", "Date": "2016-02-19T20:58:05Z"},
{"Line": "=>793", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requestCode == (eu.siacs.conversations.ui.ConversationActivity.REQUEST_IMAGE_CAPTURE)) { pendingImageUri = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2677/buggy-version/src.eu.siacs.conversations.ui.ConversationActivity.java", "BodyUseAPI": [], "Fixed commit": "c067bf96b032e1bef3b021df246dadccbb1b5fd7", "Url": "https://api.github.com/repos/SamWhited/Conversations", "Date": "2014-10-22T15:32:59Z"},
{"Line": "=>2243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((last - first) < 0) { last = first + (key.substring(first).indexOf(' ')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2772/buggy-version/components.formats-gpl.src.loci.formats.in.NativeND2Reader.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.indexOf(char)"], "Fixed commit": "296c30062896e634b20bbdbdfdc4d85597efa6cc", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-03-25T03:01:09Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (namedIdentifierDefNode instanceof org.ballerinalang.plugins.idea.psi.InvocationNode) { nameIdentifier = com.intellij.psi.util.PsiTreeUtil.getChildOfType(namedIdentifierDefNode, org.ballerinalang.plugins.idea.psi.IdentifierPSINode.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8363/buggy-version/src.main.java.org.ballerinalang.plugins.idea.editor.BallerinaParameterInfoHandler.java", "BodyUseAPI": ["com.intellij.psi.util.PsiTreeUtil.getChildOfType(com.intellij.psi.PsiElement,java.lang.Class)"], "Fixed commit": "3f156a7443d4555db3b622e84368f30084527a24", "Url": "https://api.github.com/repos/Shan1024/plugin-intellij", "Date": "2017-10-12T09:27:21Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (parent == null) { parent = com.intellij.psi.util.PsiTreeUtil.getParentOfType(expressionListNode, org.ballerinalang.plugins.idea.psi.InvocationNode.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8363/buggy-version/src.main.java.org.ballerinalang.plugins.idea.editor.BallerinaParameterInfoHandler.java", "BodyUseAPI": [], "Fixed commit": "3f156a7443d4555db3b622e84368f30084527a24", "Url": "https://api.github.com/repos/Shan1024/plugin-intellij", "Date": "2017-10-12T09:27:21Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (parent == null) { parent = com.intellij.psi.util.PsiTreeUtil.getParentOfType(expressionListNode, org.ballerinalang.plugins.idea.psi.InvocationNode.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8363/buggy-version/src.main.java.org.ballerinalang.plugins.idea.editor.BallerinaParameterInfoHandler.java", "BodyUseAPI": [], "Fixed commit": "3f156a7443d4555db3b622e84368f30084527a24", "Url": "https://api.github.com/repos/Shan1024/plugin-intellij", "Date": "2017-10-12T09:27:21Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) != (org.jboss.pressgang.ccms.contentspec.enums.LevelType.INITIAL_CONTENT)) { if (!(isNullOrEmpty(title))) { output.append(\" \"); output.append(org.jboss.pressgang.ccms.contentspec.utils.ContentSpecUtilities.escapeTitle(title)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1763/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.Level.java", "BodyUseAPI": [], "Fixed commit": "10513ef2504b15725c6b97311d828990b36ebd31", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2014-02-12T00:05:05Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.safframwork.tony.common.utils.Preconditions.isNotBlank(filterNames)) { for (java.lang.String filter : filterNames) { list.add(filter); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8642/buggy-version/app.src.main.java.com.cv4j.app.fragment.SpitalConvFragment.java", "BodyUseAPI": [], "Fixed commit": "e9302ce191539de2eaefb2cb401a4eb38e1ce6d6", "Url": "https://api.github.com/repos/imageprocessor/cv4j", "Date": "2017-05-07T08:43:44Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(java.nio.file.Files.exists(java.nio.file.Paths.get(src)))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1789/buggy-version/feature.src.main.java.org.idstack.validator.feature.FeatureImpl.java", "BodyUseAPI": [], "Fixed commit": "799049f9e2b43f23a98d8ac7923a9109345cc95d", "Url": "https://api.github.com/repos/IDStack/IDStack-Validator", "Date": "2017-08-30T13:45:03Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((S.getDegree()) < n) || ((lambda.getDegree()) < L)) { throw com.google.zxing.ChecksumException.getChecksumInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2208/buggy-version/core.src.main.java.com.google.zxing.pdf417.decoder.ec.ErrorCorrection.java", "BodyUseAPI": [], "Fixed commit": "9aa0ea9455d87aed03fc6f29b53532d235e992fb", "Url": "https://api.github.com/repos/angelnar87/zxing", "Date": "2014-03-26T18:26:36Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (artifactCoords != null) for (sorcer.util.ArtifactCoordinates artCord : artifactCoords) { codebase.append(' ').append(sorcer.core.requestor.ServiceRequestor.resolve(artCord)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2387/buggy-version/sos.commons-req.src.main.java.sorcer.core.requestor.ServiceRequestor.java", "BodyUseAPI": [], "Fixed commit": "f3d4b806bfc3bb36a0a7c0e7bb5818549dfde0da", "Url": "https://api.github.com/repos/sorcersoft/sorcer", "Date": "2013-09-14T00:43:28Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (username.equals(\"\")) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2662/buggy-version/app.src.main.java.me.jaxbot.wear.leafstatus.Carwings.java", "BodyUseAPI": [], "Fixed commit": "e2e8c25f63f2da55d4e9c2acde0e2e34ccfe180f", "Url": "https://api.github.com/repos/jaxbot/wear-LeafStatus", "Date": "2014-10-09T19:55:50Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((request.body) != null) && ((request.body.type) != null)) session.param(\"CONTENT_TYPE\", request.body.type);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4677/buggy-version/src.org.avuna.httpd.http.plugins.base.PluginFCGI.java", "BodyUseAPI": ["org.avuna.httpd.http.plugins.base.fcgi.FCGISession.param(java.lang.String,request.body.type)"], "Fixed commit": "f90f94ba26b70a46fd780165c19395beb436da0d", "Url": "https://api.github.com/repos/paullaz/Avuna-HTTPD", "Date": "2015-08-04T08:53:15Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((defaultPrefix) != null) && (!(defaultPrefix.isEmpty()))) { name = ((defaultPrefix) + \"-\") + name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8092/buggy-version/src.main.java.com.netflix.jenkins.plugins.DynaSlavePlugin.java", "BodyUseAPI": [], "Fixed commit": "ce95d2ee85cc1a7c286475ce2c87af4780e91558", "Url": "https://api.github.com/repos/garethbowles/dynaslave-plugin", "Date": "2013-01-30T01:17:15Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user.getID().equals(\"200989665304641536\")) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6161/buggy-version/src.main.java.io.github.johnfg10.commands.SettingsCommandHandler.java", "BodyUseAPI": [], "Fixed commit": "04d35e7b4225c1a15b70dcf688022d6705ee7958", "Url": "https://api.github.com/repos/johnfg10/Expedit_Public", "Date": "2017-04-17T11:47:17Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ExpeditConst.databaseUtils.getSetting(\"modrole\", guild.getID())) == null) { perm = \"expeditMod\"; }else { perm = ExpeditConst.databaseUtils.getSetting(\"modrole\", guild.getID()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6161/buggy-version/src.main.java.io.github.johnfg10.commands.SettingsCommandHandler.java", "BodyUseAPI": ["ExpeditConst.databaseUtils.getSetting(java.lang.String,guild.getID())", "io.github.johnfg10.commands.IGuild.getID()"], "Fixed commit": "04d35e7b4225c1a15b70dcf688022d6705ee7958", "Url": "https://api.github.com/repos/johnfg10/Expedit_Public", "Date": "2017-04-17T11:47:17Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (returnValue == null) return \"nothing\"; else return returnValue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6161/buggy-version/src.main.java.io.github.johnfg10.utils.storage.GeneralSettingsDatabaseUtils.java", "BodyUseAPI": [], "Fixed commit": "04d35e7b4225c1a15b70dcf688022d6705ee7958", "Url": "https://api.github.com/repos/johnfg10/Expedit_Public", "Date": "2017-04-17T11:47:17Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (perm == null) perm = \"expeditMod\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6161/buggy-version/src.main.java.io.github.johnfg10.commands.GeneralCommandHandler.java", "BodyUseAPI": [], "Fixed commit": "04d35e7b4225c1a15b70dcf688022d6705ee7958", "Url": "https://api.github.com/repos/johnfg10/Expedit_Public", "Date": "2017-04-17T11:47:17Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (perm == null) perm = \"expeditMod\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6161/buggy-version/src.main.java.io.github.johnfg10.commands.GeneralCommandHandler.java", "BodyUseAPI": [], "Fixed commit": "04d35e7b4225c1a15b70dcf688022d6705ee7958", "Url": "https://api.github.com/repos/johnfg10/Expedit_Public", "Date": "2017-04-17T11:47:17Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (perm == null) perm = \"expeditMod\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6161/buggy-version/src.main.java.io.github.johnfg10.commands.GeneralCommandHandler.java", "BodyUseAPI": [], "Fixed commit": "04d35e7b4225c1a15b70dcf688022d6705ee7958", "Url": "https://api.github.com/repos/johnfg10/Expedit_Public", "Date": "2017-04-17T11:47:17Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Objects.equals(user.getID(), \"200989665304641536\")) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6161/buggy-version/src.main.java.io.github.johnfg10.commands.GeneralCommandHandler.java", "BodyUseAPI": [], "Fixed commit": "04d35e7b4225c1a15b70dcf688022d6705ee7958", "Url": "https://api.github.com/repos/johnfg10/Expedit_Public", "Date": "2017-04-17T11:47:17Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (perm == null) perm = \"expeditMod\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6161/buggy-version/src.main.java.io.github.johnfg10.commands.GeneralCommandHandler.java", "BodyUseAPI": [], "Fixed commit": "04d35e7b4225c1a15b70dcf688022d6705ee7958", "Url": "https://api.github.com/repos/johnfg10/Expedit_Public", "Date": "2017-04-17T11:47:17Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (perm == null) perm = \"expeditMod\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6161/buggy-version/src.main.java.io.github.johnfg10.commands.GeneralCommandHandler.java", "BodyUseAPI": [], "Fixed commit": "04d35e7b4225c1a15b70dcf688022d6705ee7958", "Url": "https://api.github.com/repos/johnfg10/Expedit_Public", "Date": "2017-04-17T11:47:17Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.earth2me.essentials.commands.Commandr.getUser(sender.getPlayer())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (user.isMuted()) { throw new java.lang.Exception(com.earth2me.essentials.I18n.tl(\"voiceSilenced\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4539/buggy-version/Essentials.src.com.earth2me.essentials.commands.Commandr.java", "BodyUseAPI": [], "Fixed commit": "83aa518a5b1a97cfc3a4c5e6e1495b516eae03ed", "Url": "https://api.github.com/repos/LCookman/Essentials", "Date": "2017-07-09T04:17:58Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newScope) { context.popScope(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8722/buggy-version/src.main.java.com.mitchellbosecke.pebble.node.ForNode.java", "BodyUseAPI": [], "Fixed commit": "93d0ddca1808c5584d38727b77148e457aa648a6", "Url": "https://api.github.com/repos/PebbleTemplates/pebble", "Date": "2015-03-02T03:05:05Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchItem) != null) searchItem.collapseActionView();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4040/buggy-version/app.src.main.java.com.ghostflying.portalwaitinglist.fragment.PortalListFragment.java", "BodyUseAPI": [], "Fixed commit": "b8f43b253aee4838110998cb3853e22d4a2d7253", "Url": "https://api.github.com/repos/GhostFlying/PortalWaitingList", "Date": "2015-05-22T16:33:22Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mouseLeftClick()) && (mCaptureKeyboardInput)) { stopCapture(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8189/buggy-version/src.net.lintford.library.core.input.InputState.java", "BodyUseAPI": [], "Fixed commit": "8629e72633389a53ca06bcedc7257155337d3fe1", "Url": "https://api.github.com/repos/LintfordPickle/LintfordLib", "Date": "2017-12-06T19:37:55Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(field.getName().equals(\"$assertionsDisabled)\"))) { result.addAll(fieldValidationAdder.apply(factoryBase, field)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7082/buggy-version/factory.src.main.java.de.factoryfx.factory.validator.FactoryStyleValidator.java", "BodyUseAPI": ["java.util.function.BiFunction<de.factoryfx.factory.FactoryBase<?, ?>, java.lang.reflect.Field, java.util.List<de.factoryfx.factory.validator.FactoryStyleValidation>>.apply(de.factoryfx.factory.FactoryBase<?, ?>,java.lang.reflect.Field)", "java.util.ArrayList<de.factoryfx.factory.validator.FactoryStyleValidation>.addAll(fieldValidationAdder.apply(factoryBase, field))"], "Fixed commit": "84dd6c20f39a04fed1ec2b4d17c5eda0af09915a", "Url": "https://api.github.com/repos/factoryfx/factoryfx", "Date": "2017-06-20T09:24:12Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tokens[i].equals(\"..\")) { throw new java.lang.IllegalArgumentException(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3552/buggy-version/stapler-core.src.main.java.org.kohsuke.stapler.TokenList.java", "BodyUseAPI": [], "Fixed commit": "cdaa402100cb53d845ba79edfd3b8736db161520", "Url": "https://api.github.com/repos/hudson/stapler", "Date": "2012-05-17T00:48:31Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameState) == (Controllers.GameManager.state.GAME)) riverGame.move(direction);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1815/buggy-version/Implementation.RiverAdventures.src.Controllers.GameManager.java", "BodyUseAPI": [], "Fixed commit": "2defa7bc602ceb85426b509e94b929aff2006b18", "Url": "https://api.github.com/repos/nazliozge/CS319-OO-Software-Development-Project", "Date": "2016-05-02T21:17:58Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((capstone.server.util.GameRecorder.players.get(gameID)) == null) { game = new capstone.player.GameRecord(); capstone.server.util.GameRecorder.gameIDs.get(player).add(gameID); }else { game = capstone.server.util.GameRecorder.players.get(gameID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6401/buggy-version/ttt2.src.java.capstone.server.util.GameRecorder.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.util.Map<java.lang.String, capstone.player.GameRecord>.get(java.lang.String)"], "Fixed commit": "97e3c1ab3a158c5bb735b5a2c084b8addd8b14aa", "Url": "https://api.github.com/repos/mbdietrich/MUCapstone2013_Team2", "Date": "2013-10-16T23:46:06Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextTokenMatch(\"<\")) groupLoop(); else { try { throw new ParseException(\"Attributes not specified\"); } catch (ParseException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1944/buggy-version/src.SQLParser.java", "BodyUseAPI": [], "Fixed commit": "75bbcfce918d2d8df5c12ac5b81c8a2bf814ce5d", "Url": "https://api.github.com/repos/MichaelCDormann/SQLToXMLConverter", "Date": "2016-11-28T23:52:13Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((rule != null) && (!(rule.equals(\"\")))) su.addRule(rule);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5177/buggy-version/heat-wave.src.main.java.urlshortener2015.heatwave.web.MainController.java", "BodyUseAPI": ["urlshortener2015.heatwave.entities.ShortURL.addRule(java.lang.String)"], "Fixed commit": "041716d4c39fc19ddb31508fda72a00c252fc637", "Url": "https://api.github.com/repos/MarcosCM/UrlShortener2015", "Date": "2016-01-13T22:10:41Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.mGeofenceList) != null) && ((this.mGeofenceList.size()) > 0)) this.stopGeofencing();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5680/buggy-version/TaskLoc.app.src.main.java.de.unima.pc2016.taskloc.application.Geofences.GeofenceController.java", "BodyUseAPI": [], "Fixed commit": "1a9e25031aaffb6c44813c421ba4a483334d9414", "Url": "https://api.github.com/repos/dflaxx/unima-pc2016", "Date": "2016-04-25T19:01:05Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (title != null) title.setTypeface(null, Typeface.NORMAL);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1568/buggy-version/app.src.main.java.net.pr0npaganda.appvoat.ActivityPostList.java", "BodyUseAPI": ["android.widget.TextView.setTypeface(<nulltype>,Typeface.NORMAL)"], "Fixed commit": "030ece2441699b7c47b0be2c0827b5a6bddc0304", "Url": "https://api.github.com/repos/daita/appvoat", "Date": "2017-02-02T00:32:47Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.findViewById(R.id.title)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (title == null) title = ((android.widget.TextView) (((android.view.ViewGroup) (v.getParent())).findViewById(R.id.title)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1568/buggy-version/app.src.main.java.net.pr0npaganda.appvoat.ActivityPostList.java", "BodyUseAPI": [], "Fixed commit": "030ece2441699b7c47b0be2c0827b5a6bddc0304", "Url": "https://api.github.com/repos/daita/appvoat", "Date": "2017-02-02T00:32:47Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ratio.equals(\"\u221e\")) { return \"1000\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7247/buggy-version/app.src.main.java.com.lgallardo.qbittorrentclient.Torrent.java", "BodyUseAPI": [], "Fixed commit": "52e33aac2013644182ff98108dbdb9772d985067", "Url": "https://api.github.com/repos/lgallard/qBittorrent-Controller", "Date": "2015-10-31T06:49:07Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.optimizationBenchmarking.utils.ml.classification.spec.EFeatureType.featureDoubleIsUnspecified(possible)) { continue innerest; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4761/buggy-version/src.main.java.org.optimizationBenchmarking.utils.ml.classification.impl.weka._WekaClassifierTrainingJob.java", "BodyUseAPI": [], "Fixed commit": "f68969c2cd8acf4b88f653355938eaea6361e667", "Url": "https://api.github.com/repos/optimizationBenchmarking/utils-ml", "Date": "2016-11-15T06:23:50Z"},
{"Line": "=>908", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mResumed) { doOnResumeAndBound(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3955/buggy-version/src.com.owncloud.android.ui.activity.FileActivity.java", "BodyUseAPI": [], "Fixed commit": "6e7bcda263d9b13b55f0fbf804a19a857fdfed49", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2015-11-21T19:18:56Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ru.lionzxy.simlyhammer.hammers.BasicHammer) (hammer.getItem())).MDiamond) hammer.getTagCompound().setBoolean(\"Diamond\", true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3611/buggy-version/src.main.java.ru.lionzxy.simlyhammer.recipe.RecipeRepair.java", "BodyUseAPI": ["hammer.getTagCompound().setBoolean(java.lang.String,boolean)", "net.minecraft.item.ItemStack.getTagCompound()"], "Fixed commit": "6de69fcd25dc3c8a69561972d3363729de21710c", "Url": "https://api.github.com/repos/LionZXY/SimplyHammer", "Date": "2015-09-03T16:48:08Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (wrkFileName != null) { for (int i = 0; i < (MainWindow.taskTree.getEdfRootNode().getChildCount()); i++) { editor.EDFTreeNode child = ((editor.EDFTreeNode) (MainWindow.taskTree.getEdfRootNode().getChildAt(i))); if (wrkFileName.equals(child.getHostFile().getAbsolutePath())) { MainWindow.taskTree.setSelectionRow((i + 2)); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4303/buggy-version/src.table.ErrorListTable.java", "BodyUseAPI": ["java.lang.String.equals(child.getHostFile().getAbsolutePath())"], "Fixed commit": "03e8f6275525b55892041067a4f35cce91de745a", "Url": "https://api.github.com/repos/nsrr/edf-editor-translator", "Date": "2014-03-07T04:15:34Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.target) == (org.deidentifier.arx.gui.model.ModelEvent.ModelPart.OUTPUT)) hierarchy = acontext.getHierarchy(context, attribute);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8982/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.analyze.ViewDistribution.java", "BodyUseAPI": [], "Fixed commit": "41026a4418fbc11a87ade9df153b82b75f607383", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-03-25T16:10:26Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.asyarif.taarufsg.ActivityUserDetails.mUser.mReplyToUser.equals(ActivityMain.mCurrentUser.mUid)) { mTv_answer.setText(com.asyarif.taarufsg.ActivityUserDetails.mUser.mReplyToText); mTv_answer.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7245/buggy-version/app.src.main.java.com.asyarif.taarufsg.ActivityUserDetails.java", "BodyUseAPI": ["android.widget.TextView.setText(com.asyarif.taarufsg.ActivityUserDetails.mUser.mReplyToText)"], "Fixed commit": "a445c2c760904503bd0184c981b8484bdb3904c7", "Url": "https://api.github.com/repos/ahmadsyarif/taarufsg", "Date": "2017-06-11T07:03:21Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.brickData.getString(\"firmwarename\").equals(\"ev3lejosv1\")) { lejosVersion = \"v1/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7289/buggy-version/OpenRobertaUSB.src.main.java.de.fhg.iais.roberta.connection.EV3USBConnector.java", "BodyUseAPI": [], "Fixed commit": "13f8b6d41fef254a5d8c693b2caf31fc63a741f6", "Url": "https://api.github.com/repos/OpenRoberta/robertalab-usbprogram", "Date": "2017-11-21T11:44:49Z"},
{"Line": "=>1569", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nbop != null) { nbop.rawSrcType = bop.rawSrcType; nbop.nominalType = bop.nominalType; return nbop; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2713/buggy-version/src.wyc.stages.CodeGeneration.java", "BodyUseAPI": [], "Fixed commit": "4318c26895de8e24b5c35509e07137b5e59e0899", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-12-22T07:41:03Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.intermine.objectstore.query.Results.getQuery()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (realQ == q) { getPathQueryExecutor().updateQueryToPathToQueryNode(q, pathToQueryNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5265/buggy-version/intermine.web.main.src.org.intermine.webservice.server.query.result.TableRowService.java", "BodyUseAPI": ["getPathQueryExecutor().updateQueryToPathToQueryNode(org.intermine.objectstore.query.Query,java.util.Map<java.lang.String, org.intermine.objectstore.query.QuerySelectable>)"], "Fixed commit": "72256ff5db634782037c3cf5dfd9207d2bd7cfde", "Url": "https://api.github.com/repos/yukyra/intermine", "Date": "2016-12-22T12:31:03Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getQueryString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (previousPage.equals(\"\")) { previousPage = ((request.getServletPath()) + \"?\") + previousPage; }else { previousPage = request.getServletPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6435/buggy-version/core.src.main.java.com.tw.core.interceptor.LoginInterceptor.java", "BodyUseAPI": [], "Fixed commit": "32eba496ad1a7c14b2caf2648a2dde2977d8e9ae", "Url": "https://api.github.com/repos/sighWang/JavaEE-exercise", "Date": "2015-07-16T03:48:43Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(outFn.endsWith(\".fastq\"))) outFn += \".fastq\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2032/buggy-version/AlignerBoost.src.edu.upenn.egricelab.AlignerBoost.PrepareTrimCmd.java", "BodyUseAPI": [], "Fixed commit": "fc51668bf735408a32e3b6dc4d4b2953577b29d3", "Url": "https://api.github.com/repos/Grice-Lab/AlignerBoost", "Date": "2016-10-20T17:28:54Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(\"javax.sql.DataSource\".equals(ref.getClassName()))) && (!(\"com.alibaba.druid.pool.DruidDataSource\".equals(ref.getClassName())))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8069/buggy-version/src.main.java.com.alibaba.druid.pool.DruidDataSourceFactory.java", "BodyUseAPI": [], "Fixed commit": "2abc2d207e81e3ccda250ca853b3fc5fce3879c4", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2012-12-10T09:51:51Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.systemui.statusbar.SystemBars.getString(R.string.config_statusBarComponent)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clsName.contains(\"PhoneStatusBar\")) { mStatusBar = new com.android.systemui.statusbar.phone.PhoneStatusBar(); }else { mStatusBar = ((com.android.systemui.statusbar.BaseStatusBar) (cls.newInstance())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/986/buggy-version/packages.SystemUI.src.com.android.systemui.statusbar.SystemBars.java", "BodyUseAPI": [], "Fixed commit": "e236b2305aaa3c35d51d6d229723032400de87b6", "Url": "https://api.github.com/repos/LOSP/frameworks_base", "Date": "2014-07-09T23:59:45Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["projectboarding.PlaneDimension.getNumberOfNormalRows()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numberOfRows < 3) { numberOfRowsPerBlock = numberOfRows; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7439/buggy-version/src.projectboarding.SeatingMethod.java", "BodyUseAPI": [], "Fixed commit": "17f85ffe929950f2407fd3d0355ef8c1ec6501d5", "Url": "https://api.github.com/repos/VirginAir/Project-Boarding", "Date": "2014-11-30T10:08:46Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state.action[state.round][i]) != null) { if ((state.action[state.round][i].type) == (ActionType.a_raise)) { ++ret; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3765/buggy-version/src.acpc.Game.java", "BodyUseAPI": [], "Fixed commit": "c77d49ef1444a1aa3be9f22ec3300cd20be4bec6", "Url": "https://api.github.com/repos/JaysenStark/MyCFR", "Date": "2017-06-12T08:16:26Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["acpc.Game.currentPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sizes[0]) > (stack[p])) { if ((state.maxSpent) >= (stack[p])) { return false; }else { sizes[0] = sizes[1]; return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3765/buggy-version/src.acpc.Game.java", "BodyUseAPI": [], "Fixed commit": "c77d49ef1444a1aa3be9f22ec3300cd20be4bec6", "Url": "https://api.github.com/repos/JaysenStark/MyCFR", "Date": "2017-06-12T08:16:26Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ref == 2) { output2 = output3; }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5985/buggy-version/APIWorkshopTeam2.src.main.java.nl.tu.api.apiworkshopteam2.Circuit.java", "BodyUseAPI": [], "Fixed commit": "b0245087b12fe508093bb03306aa2b395a2d910f", "Url": "https://api.github.com/repos/Colin-TUE/API-Workshop", "Date": "2016-01-25T14:51:32Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.equals(\"\")) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5187/buggy-version/app.src.main.java.info.nightscout.utils.SafeParse.java", "BodyUseAPI": [], "Fixed commit": "befdbefa499990e0637eb02f0aa484f384bad5c6", "Url": "https://api.github.com/repos/MilosKozak/AndroidAPS", "Date": "2017-06-20T17:58:43Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.equals(\"\")) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5187/buggy-version/app.src.main.java.info.nightscout.utils.SafeParse.java", "BodyUseAPI": [], "Fixed commit": "befdbefa499990e0637eb02f0aa484f384bad5c6", "Url": "https://api.github.com/repos/MilosKozak/AndroidAPS", "Date": "2017-06-20T17:58:43Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input.equals(\"\")) return 0L;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5187/buggy-version/app.src.main.java.info.nightscout.utils.SafeParse.java", "BodyUseAPI": [], "Fixed commit": "befdbefa499990e0637eb02f0aa484f384bad5c6", "Url": "https://api.github.com/repos/MilosKozak/AndroidAPS", "Date": "2017-06-20T17:58:43Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entry.getMessage().toBuilder()", "org.openbase.jul.storage.registry.ProtoBufFileSynchronizedRegistry<java.lang.String, rst.domotic.unit.UnitConfigType.UnitConfig, UnitConfig.Builder, UnitRegistryDataType.UnitRegistryData.Builder>.getMessage(dalUnitConfig.getUnitHostId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(dalUnitConfig.getLabel().equals(deviceUnitConfig.getLabel()))) { dalUnitConfig.setLabel(deviceUnitConfig.getLabel()); modification = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3370/buggy-version/unit-registry.core.src.main.java.org.openbase.bco.registry.unit.core.consistency.dalunitconfig.UnitBoundToHostConsistencyHandler.java", "BodyUseAPI": ["UnitConfig.Builder.setLabel(deviceUnitConfig.getLabel())", "rst.domotic.unit.UnitConfigType.UnitConfig.getLabel()"], "Fixed commit": "d74fbb42b7f797fbd609c231eaa10ea43f4e4530", "Url": "https://api.github.com/repos/openbase/bco.registry", "Date": "2016-12-09T16:22:18Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["invregsystem.logic.invention.InventionRegistrationRequestCatalog.getInvRegReqsByPermitted(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(requests.isEmpty())) { invregsystem.logic.invention.InventionRegistrationRequest request = requests.get(0); request.setPermitted(true); catalog.updateItem(request); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1735/buggy-version/src.invregsystem.logic.invention.InventionRegistrationRequest.java", "BodyUseAPI": ["java.util.List<invregsystem.logic.invention.InventionRegistrationRequest>.get(int)"], "Fixed commit": "465cd9b7d5363d59544623ec524ffa0dad3a0c66", "Url": "https://api.github.com/repos/hforghani/OOD", "Date": "2012-08-16T02:17:09Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (minNumTargets == 0) { setRequired(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8138/buggy-version/Mage.src.mage.target.TargetObject.java", "BodyUseAPI": [], "Fixed commit": "5ae1f6306bb1ea7db6c9e74cb6c21f3a20d133da", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-06-24T23:32:01Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((items.size()) > 0) { java.util.Collections.sort(items, new java.util.Comparator<ren.hankai.cordwood.console.persist.model.SidebarItemBean>() { @java.lang.Override public int compare(ren.hankai.cordwood.console.persist.model.SidebarItemBean o1, ren.hankai.cordwood.console.persist.model.SidebarItemBean o2) { return (o1.getSink()) - (o2.getSink()); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1777/buggy-version/source.cordwood-console.src.main.java.ren.hankai.cordwood.console.service.SidebarService.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<ren.hankai.cordwood.console.persist.model.SidebarItemBean>,java.util.Comparator<ren.hankai.cordwood.console.persist.model.SidebarItemBean>)"], "Fixed commit": "0ffc4780f27cdb59d5de64114aa6e5a4920ffe1b", "Url": "https://api.github.com/repos/hankai520/cordwood", "Date": "2017-03-13T08:20:33Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.liferay.portal.kernel.util.Validator.isNull(clearTextPassword)) { throw new com.liferay.portal.PwdEncryptorException(\"Unable to encrypt empty passwords.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2751/buggy-version/portal-impl.src.com.liferay.portal.security.pwd.PasswordEncryptorImpl.java", "BodyUseAPI": [], "Fixed commit": "c85fc5760588699512b84675abfad25a29d09276", "Url": "https://api.github.com/repos/topolik/liferay-portal", "Date": "2013-03-13T12:25:55Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSelectedCountry) != null) { iso = mSelectedCountry.getIso(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1469/buggy-version/intlphoneinput.src.main.java.net.rimoto.intlphoneinput.IntlPhoneInput.java", "BodyUseAPI": [], "Fixed commit": "ff1dea5f44f617814f58ad2aea8799e5b6fde263", "Url": "https://api.github.com/repos/AlmogBaku/IntlPhoneInput", "Date": "2016-01-07T07:51:51Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (s == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1732/buggy-version/circuits.src.main.java.com.sk89q.craftbook.plc.PlcIC.java", "BodyUseAPI": [], "Fixed commit": "5ff52dd5b77d2da5093bdfb920e68ce826380bf2", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2012-12-13T05:09:34Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commandString == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5761/buggy-version/src.kosiec.Server.CommandTranslator.java", "BodyUseAPI": [], "Fixed commit": "08cb7f415d24fe10295ce7ffee1a62d6025b6726", "Url": "https://api.github.com/repos/Supericy/Arduino-Server", "Date": "2014-11-02T01:05:51Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (line != null) { kosiec.Server.MetaCommand meta = commandTranslator.decode(line); if (meta != null) { kosiec.Server.Command c = commandFactory.make(meta.getCommandName()); c.execute(socket, meta.getCommandArgs()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5761/buggy-version/src.kosiec.Server.ClientHandler.java", "BodyUseAPI": ["kosiec.Server.CommandTranslator.decode(java.lang.String)"], "Fixed commit": "08cb7f415d24fe10295ce7ffee1a62d6025b6726", "Url": "https://api.github.com/repos/Supericy/Arduino-Server", "Date": "2014-11-02T01:05:51Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.ss.usermodel.Sheet.getRow(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (row == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1229/buggy-version/jpaw-batch-poi.src.main.java.de.jpaw.batch.poi.BatchReaderPoi.java", "BodyUseAPI": [], "Fixed commit": "444fc237b957efbdf4a2a39ab0a3ed003614290b", "Url": "https://api.github.com/repos/jpaw/jpaw", "Date": "2015-08-23T12:44:48Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.util.PortalUtil.getClassNameId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((repository != null) && ((repository.getClassNameId()) != liferayRepositoryClassNameId)) || (folder.isMountPoint())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5628/buggy-version/portal-impl.src.com.liferay.portlet.documentlibrary.lar.FolderStagedModelDataHandler.java", "BodyUseAPI": [], "Fixed commit": "6367904b4c425386939733a066919a9f1d7525a2", "Url": "https://api.github.com/repos/marcellustavares/liferay-portal", "Date": "2013-05-07T02:03:01Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.service.persistence.RepositoryUtil.findByPrimaryKey(fileEntry.getRepositoryId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((repository.getClassNameId()) != (com.liferay.portal.util.PortalUtil.getClassNameId(com.liferay.portal.repository.liferayrepository.LiferayRepository.class.getName()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5628/buggy-version/portal-impl.src.com.liferay.portlet.documentlibrary.lar.FileEntryStagedModelDataHandler.java", "BodyUseAPI": [], "Fixed commit": "6367904b4c425386939733a066919a9f1d7525a2", "Url": "https://api.github.com/repos/marcellustavares/liferay-portal", "Date": "2013-05-07T02:03:01Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.bsa) == 0.0) && ((this.asa) == 0.0)) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1677/buggy-version/src.main.java.owl.core.structure.HetResidue.java", "BodyUseAPI": [], "Fixed commit": "fd7c0cce0aa3683865111726f63191fc9cad6ca5", "Url": "https://api.github.com/repos/eppic-team/owl", "Date": "2014-03-06T15:37:20Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.bsa) == 0.0) && ((this.asa) == 0.0)) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1677/buggy-version/src.main.java.owl.core.structure.AaResidue.java", "BodyUseAPI": [], "Fixed commit": "fd7c0cce0aa3683865111726f63191fc9cad6ca5", "Url": "https://api.github.com/repos/eppic-team/owl", "Date": "2014-03-06T15:37:20Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.bsa) == 0.0) && ((this.asa) == 0.0)) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1677/buggy-version/src.main.java.owl.core.structure.NucResidue.java", "BodyUseAPI": [], "Fixed commit": "fd7c0cce0aa3683865111726f63191fc9cad6ca5", "Url": "https://api.github.com/repos/eppic-team/owl", "Date": "2014-03-06T15:37:20Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dto.getPersonalDataOtherSectionDto().getValidPassport()) == (com.nagarro.gde.persistence.model.enums.DecisionEnum.YES)) { if (((dto.getPersonalDataOtherSectionDto().getTravelPassDto().getDocId()) == 0) && (((dto.getPersonalDataOtherSectionDto().getTravelPassDto().getFile()) == null) || (dto.getPersonalDataOtherSectionDto().getTravelPassDto().getFile().isEmpty()))) { err.rejectValue(\"personalDataDto.personalDataOtherSectionDto.travelPassDto.file\", \"required.field\"); } org.springframework.validation.ValidationUtils.rejectIfEmptyOrWhitespace(err, \"personalDataDto.personalDataOtherSectionDto.expirationDatePassport\", \"required.field\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6774/buggy-version/gde-webapp.src.main.java.com.nagarro.gde.validator.PersonalInfoValidator.java", "BodyUseAPI": ["dto.getPersonalDataOtherSectionDto().getTravelPassDto()", "com.nagarro.gde.dto.PersonalDataDto.getPersonalDataOtherSectionDto()", "dto.getPersonalDataOtherSectionDto().getTravelPassDto().getFile()", "com.nagarro.gde.dto.PersonalDataDto.getPersonalDataOtherSectionDto()", "dto.getPersonalDataOtherSectionDto().getTravelPassDto().getFile()", "dto.getPersonalDataOtherSectionDto().getTravelPassDto()", "dto.getPersonalDataOtherSectionDto().getTravelPassDto().getDocId()", "dto.getPersonalDataOtherSectionDto().getTravelPassDto().getFile().isEmpty()", "dto.getPersonalDataOtherSectionDto().getTravelPassDto()", "com.nagarro.gde.dto.PersonalDataDto.getPersonalDataOtherSectionDto()"], "Fixed commit": "550a699b0dc53f1c8fdb834bb0fe34663913dce7", "Url": "https://api.github.com/repos/nagarro-gde/GDE", "Date": "2015-01-14T09:53:54Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((read) != null) { return read; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4346/buggy-version/source.library.com.restfb.types.webhook.messaging.MessagingItem.java", "BodyUseAPI": [], "Fixed commit": "b1828a0f340cbb5c25f670abd409b4d842047434", "Url": "https://api.github.com/repos/restfb/restfb", "Date": "2016-09-22T09:48:55Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDrawerGoto) != null) { mDrawerGoto.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3083/buggy-version/app.src.main.java.com.leddit.leddit.NavigationDrawerFragment.java", "BodyUseAPI": [], "Fixed commit": "25bd9fbd2710a15a8a76cd79c2b2d168ab12dce0", "Url": "https://api.github.com/repos/isurakka/leddit", "Date": "2014-12-08T22:39:50Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.tuckey.web.filters.urlrewrite.utils.StringUtils.isBlank(counterpartyId)) { newSubjectCapacity.setCounterparty(counterparties.get(0)); }else { for (com.brxt.model.Counterparty cp : counterparties) { if (cp.getId().equals(java.lang.Long.valueOf(counterpartyId))) { newSubjectCapacity.setCounterparty(cp); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5299/buggy-version/src.main.java.com.brxt.webapp.controller.SubjectCapacityFormController.java", "BodyUseAPI": ["java.lang.Long.valueOf(java.lang.String)", "cp.getId().equals(java.lang.Long)"], "Fixed commit": "0bbffe1091d74810d7c33a7b410a809143eda7b5", "Url": "https://api.github.com/repos/yegaofei/brxt", "Date": "2014-07-23T16:15:59Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((option.getKey()) != (ExpectedOption.NO_KEY)) || ((option.getLongKey()) == null)) options.put(option.getKey(), option);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8378/buggy-version/src.main.java.de.dk.util.opt.ArgumentParserBuilder.java", "BodyUseAPI": ["de.dk.util.opt.ExpectedOption.getKey()", "java.util.Map<java.lang.Character, de.dk.util.opt.ExpectedOption>.put(option.getKey(),de.dk.util.opt.ExpectedOption)"], "Fixed commit": "c8fec4f33f6a86b4ad30e6c5bc437896f70056b5", "Url": "https://api.github.com/repos/Koefflitz/Util", "Date": "2017-08-28T06:07:33Z"},
{"Line": "=>1210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (configFile.exists()) { outputStream = new java.io.FileOutputStream(configFile); sonarConfig.store(outputStream, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7087/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.rest.api.ParameterService.java", "BodyUseAPI": [], "Fixed commit": "12e8d2c628a4c20caffd42d5fec694e50663e143", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2014-06-20T04:43:34Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((workspace) != null) { pc.openWorkspace(workspace); }else { workspace = pc.newWorkspace(pc.getCurrentProject()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1445/buggy-version/modules.ProcessorPlugin.src.main.java.org.gephi.io.processor.plugin.MultiProcessor.java", "BodyUseAPI": [], "Fixed commit": "4442616477990f58c53794cba4cd494d72e7dcef", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2015-10-27T13:58:28Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getChildCount()) > 0) getChildAt(0).setVisibility(nuclei.ui.view.media.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2273/buggy-version/nuclei-android.src.main.java.nuclei.ui.view.media.PlayerControlsView.java", "BodyUseAPI": [], "Fixed commit": "190561135850b4af900dedf1a059154e30dd15ad", "Url": "https://api.github.com/repos/lifechurch/nuclei-android", "Date": "2016-11-03T13:17:13Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getChildCount()) > 0) getChildAt(0).setVisibility(nuclei.ui.view.media.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2273/buggy-version/nuclei-android.src.main.java.nuclei.ui.view.media.PlayerControlsView.java", "BodyUseAPI": [], "Fixed commit": "190561135850b4af900dedf1a059154e30dd15ad", "Url": "https://api.github.com/repos/lifechurch/nuclei-android", "Date": "2016-11-03T13:17:13Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getChildCount()) > 0) return (getChildAt(0).getVisibility()) == (VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2273/buggy-version/nuclei-android.src.main.java.nuclei.ui.view.media.PlayerControlsView.java", "BodyUseAPI": [], "Fixed commit": "190561135850b4af900dedf1a059154e30dd15ad", "Url": "https://api.github.com/repos/lifechurch/nuclei-android", "Date": "2016-11-03T13:17:13Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.rpi.phil.legup.BoardState.getSingleParentState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((destBoardState.getExtraData().size()) - (origBoardState.getExtraData().size())) != numTentsAdded) { error = \"This rule requires links to be added for every tent added.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7357/buggy-version/code.edu.rpi.phil.legup.puzzles.treetent.RuleOneUnknownNearTree.java", "BodyUseAPI": [], "Fixed commit": "661fb05643e412f061b8824673f84cc4ee6171a3", "Url": "https://api.github.com/repos/Bram28/LEGUP", "Date": "2013-08-29T19:00:43Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.cvut.kbss.ontodriver.sesame.SesameUtils.toSesameUri(axiomDescriptor.getAssertionContext(a),org.openrdf.model.ValueFactory)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (contextUri != null) { toRemove.addAll(connector.findStatements(individual, cz.cvut.kbss.ontodriver.sesame.SesameUtils.toSesameUri(a.getIdentifier(), valueFactory), null, a.isInferred(), contextUri)); }else { toRemove.addAll(connector.findStatements(individual, cz.cvut.kbss.ontodriver.sesame.SesameUtils.toSesameUri(a.getIdentifier(), valueFactory), null, a.isInferred())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6049/buggy-version/ontodriver-sesame.src.main.java.cz.cvut.kbss.ontodriver.sesame.EpistemicAxiomRemover.java", "BodyUseAPI": ["cz.cvut.kbss.ontodriver.sesame.connector.Connector.findStatements(org.openrdf.model.Resource,cz.cvut.kbss.ontodriver.sesame.SesameUtils.toSesameUri(a.getIdentifier(), valueFactory),<nulltype>,a.isInferred(),org.openrdf.model.URI)", "java.util.Collection<org.openrdf.model.Statement>.addAll(connector.findStatements(individual, cz.cvut.kbss.ontodriver.sesame.SesameUtils.toSesameUri(a.getIdentifier(), valueFactory), null, a.isInferred(), contextUri))"], "Fixed commit": "6faa275ca35848f144ab39cc06d67b6a5fa8cb81", "Url": "https://api.github.com/repos/kbss-cvut/jopa", "Date": "2016-06-09T08:05:01Z"},
{"Line": "=>914", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nokogiri.XmlNode.rubyStringToString(org.jruby.runtime.builtin.IRubyObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(element.hasAttribute(key))) return context.getRuntime().getNil();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/401/buggy-version/ext.java.nokogiri.XmlNode.java", "BodyUseAPI": [], "Fixed commit": "79f9875469ffcd7fefdcf5e0997db0c506b3c2de", "Url": "https://api.github.com/repos/aceofspades/nokogiri", "Date": "2013-01-05T10:48:51Z"},
{"Line": "=>1539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sohu.cache.redis.impl.AppDao.getAppDescById(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.sohu.cache.redis.impl.TypeUtil.isRedisCluster(appDesc.getType()))) { return java.util.Collections.emptyMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8606/buggy-version/cachecloud-open-web.src.main.java.com.sohu.cache.redis.impl.RedisCenterImpl.java", "BodyUseAPI": [], "Fixed commit": "d91a28480e845f66ae99aa5510de8c3c18af8131", "Url": "https://api.github.com/repos/m949976269/cachecloud", "Date": "2017-03-21T03:36:36Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(lastOperator.canBeMerged())) || (!(searchResult.lastOperator.canBeMerged()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/32/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OIndexSearchResult.java", "BodyUseAPI": [], "Fixed commit": "a242cd8fb39fd371e5dfd3ba2f972abc05ebfecb", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-10-27T15:12:36Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (proposalId != (proposal.getProposalId())) { org.xcolab.points.PointsTarget target = new org.xcolab.points.PointsTarget(); target.setProposalId(proposalId); target.setPercentage((1.0 / (proposalIds.size()))); targets.add(target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5645/buggy-version/services.plansProposalsFacade.plansProposalsFacade-portlet-service.src.main.java.org.xcolab.points.ReceiverLimitationStrategy.java", "BodyUseAPI": ["org.xcolab.points.PointsTarget.setProposalId(java.lang.Long)"], "Fixed commit": "db9b721868efe334631413d6cabc23c6ba4577bc", "Url": "https://api.github.com/repos/CCI-MIT/XCoLab", "Date": "2014-09-30T00:33:30Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (description != null) { super.setDescription(description.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1015/buggy-version/src.model.events.ShoppingList.java", "BodyUseAPI": [], "Fixed commit": "22998b6596369cd30933aec03da5c39353a19231", "Url": "https://api.github.com/repos/noexile/Life-Organizer-EE", "Date": "2016-03-16T22:40:03Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (petablox.project.Config.sootIgnoreStatic) { soot.options.Options.v().setPhaseOption(\"jb.tr\", \"ignore-wrong-staticness:true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/660/buggy-version/src.petablox.program.Program.java", "BodyUseAPI": [], "Fixed commit": "30f2ad667d2c60dbeee1fc01650d84fc24123346", "Url": "https://api.github.com/repos/petablox-project/petablox", "Date": "2016-02-02T23:11:27Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pepsoft.worldpainter.Dimension.getBorder()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (border != (org.pepsoft.worldpainter.Dimension.Border.VOID)) { final java.util.Set<org.pepsoft.worldpainter.layers.Layer> minimumLayers = dimension.getMinimumLayers(); if (!(minimumLayers.isEmpty())) { org.pepsoft.worldpainter.Tile virtualTile = new org.pepsoft.worldpainter.Tile((chunkX >> 3), (chunkZ >> 3), dimension.getMaxHeight()) { @java.lang.Override public synchronized float getHeight(int x, int y) { return floor + (((noiseGenerator.getPerlinNoise(((((getX()) << (TILE_SIZE_BITS)) | x) / (MEDIUM_BLOBS)), ((((getY()) << (TILE_SIZE_BITS)) | y) / (MEDIUM_BLOBS)))) + 0.5F) * variation); } @java.lang.Override public synchronized int getWaterLevel(int x, int y) { return borderLevel; } private static final long serialVersionUID = 1L; }; for (org.pepsoft.worldpainter.layers.Layer layer : minimumLayers) { org.pepsoft.worldpainter.exporting.LayerExporter layerExporter = exporters.get(layer); if (layerExporter instanceof org.pepsoft.worldpainter.exporting.FirstPassLayerExporter) { ((org.pepsoft.worldpainter.exporting.FirstPassLayerExporter) (layerExporter)).render(dimension, virtualTile, result.chunk); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/9019/buggy-version/WorldPainter.WPCore.src.main.java.org.pepsoft.worldpainter.exporting.BorderChunkFactory.java", "BodyUseAPI": [], "Fixed commit": "2747bd98e453d5bd292c0a00f17ffd4055e93afd", "Url": "https://api.github.com/repos/Captain-Chaos/WorldPainter", "Date": "2015-11-15T18:20:19Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.edges.containsKey(vertex)) { return this.edges.get(vertex); }else { return new java.util.ArrayList<T>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5070/buggy-version/src.scc.Graph.java", "BodyUseAPI": ["java.util.Map<T, java.util.Collection<T>>.get(T)"], "Fixed commit": "3f5a6320e31d172ccb29c17d5f4770df17207e56", "Url": "https://api.github.com/repos/cloverrose/StronglyConnectedComponent", "Date": "2013-10-08T05:54:33Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recyclerView == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4881/buggy-version/arms.src.main.java.com.jess.arms.base.DefaultAdapter.java", "BodyUseAPI": [], "Fixed commit": "9cf8fd6c186e0f01d1385f73a80d64eca381ab67", "Url": "https://api.github.com/repos/kakarrot/MVPArms", "Date": "2017-02-22T06:46:17Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.names()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (playersIds != null) { for (int i = 0; i < (playersIds.length()); i++) { fr.kyriog.android.voxpopuli.entity.Player player = new fr.kyriog.android.voxpopuli.entity.Player(playersIds.getString(i)); player.setVote(jsonPlayersVotes.getInt(playersIds.getString(i))); playersVotes.add(player); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6688/buggy-version/src.fr.kyriog.android.voxpopuli.socketio.GameCallback.java", "BodyUseAPI": ["org.json.JSONArray.getString(int)", "org.json.JSONArray.getString(int)", "fr.kyriog.android.voxpopuli.entity.Player.setVote(jsonPlayersVotes.getInt(playersIds.getString(i)))", "org.json.JSONArray.length()", "org.json.JSONObject.getInt(playersIds.getString(i))"], "Fixed commit": "cd1e3fb9bcec70fff67ab6f798d77e4b373e2c3a", "Url": "https://api.github.com/repos/kyriog/VoxPopuli-Android", "Date": "2014-02-27T16:46:22Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.reactome.pgm.PGMVariable.getShortName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name1 == null) name1 = var1.getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/530/buggy-version/src.main.java.org.reactome.cytoscape.pgm.IPAValueTablePane.java", "BodyUseAPI": [], "Fixed commit": "d92bf1610e627291a5446a8be9aeadd3dd92999c", "Url": "https://api.github.com/repos/reactome-fi/CytoscapePlugIn", "Date": "2014-07-01T21:46:40Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.reactome.pgm.PGMVariable.getShortName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (name2 == null) name2 = var2.getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/530/buggy-version/src.main.java.org.reactome.cytoscape.pgm.IPAValueTablePane.java", "BodyUseAPI": [], "Fixed commit": "d92bf1610e627291a5446a8be9aeadd3dd92999c", "Url": "https://api.github.com/repos/reactome-fi/CytoscapePlugIn", "Date": "2014-07-01T21:46:40Z"},
{"Line": "=>3401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((x.getParameters().size()) > 0) { print(\" FROM \"); x.getParameters().get(0).accept(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5778/buggy-version/src.main.java.com.alibaba.druid.sql.dialect.oracle.visitor.OracleOutputVisitor.java", "BodyUseAPI": ["x.getParameters().get(0).accept(com.alibaba.druid.sql.dialect.oracle.visitor.OracleOutputVisitor)", "x.getParameters().get(int)", "com.alibaba.druid.sql.ast.expr.SQLMethodInvokeExpr.getParameters()"], "Fixed commit": "90d262fc1260fc818a2aec99e63aa1c86245d830", "Url": "https://api.github.com/repos/alibaba/druid", "Date": "2013-12-24T02:27:52Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cropView.getImageBitmap()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5894/buggy-version/app.src.main.java.org.hofapps.tinyplanet.TabFragment.java", "BodyUseAPI": [], "Fixed commit": "3c36ad9923afd8ba5b66125931008cdcee7ef4d4", "Url": "https://api.github.com/repos/hollaus/TinyPlanetMaker", "Date": "2017-05-27T21:36:02Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNotEmpty(name)) { dpuName = name; dpuMenuName = name; }else { if (useLocalizedDpuName()) { eu.unifiedviews.helpers.dpu.localization.Messages messages = moduleFacade.getMessageFromDPUInstance(dpuObject); if (!(messages.getString(cz.cuni.mff.xrg.odcs.commons.app.module.DPUModuleManipulator.DPU_NAME_KEY).equals(cz.cuni.mff.xrg.odcs.commons.app.module.DPUModuleManipulator.DPU_NAME_KEY))) { dpuName = messages.getString(cz.cuni.mff.xrg.odcs.commons.app.module.DPUModuleManipulator.DPU_NAME_KEY); } if (!(messages.getString(cz.cuni.mff.xrg.odcs.commons.app.module.DPUModuleManipulator.DPU_MENU_NAME_KEY).equals(cz.cuni.mff.xrg.odcs.commons.app.module.DPUModuleManipulator.DPU_MENU_NAME_KEY))) { dpuMenuName = messages.getString(cz.cuni.mff.xrg.odcs.commons.app.module.DPUModuleManipulator.DPU_MENU_NAME_KEY); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5040/buggy-version/commons-app.src.main.java.cz.cuni.mff.xrg.odcs.commons.app.module.DPUModuleManipulator.java", "BodyUseAPI": [], "Fixed commit": "f50ea458731263d49ed3cd0df3f1efe943436444", "Url": "https://api.github.com/repos/UnifiedViews/Core", "Date": "2015-07-14T11:49:33Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (piece.getType().equals(HantoPieceType.BUTTERFLY)) { currentTurn.setPlayerButterflyCoordinate(new hanto.studentanivarthi.common.coordinate.HantoCoordinateImpl(dest)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3797/buggy-version/src.hanto.studentanivarthi.common.game.AbstractHantoGame.java", "BodyUseAPI": [], "Fixed commit": "a4486be9d6d866eefd529aeb32c911d185d6c493", "Url": "https://api.github.com/repos/SIZMW/hanto-game", "Date": "2016-04-27T21:11:39Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["compile.parse.TermBinExprBuilder.getOpInfo(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (info == null) { compile.Session.error(loc, \"operator ''{0}'' not yet supported\", op); info = Ops.DEFAULT_BINOP_INFO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/983/buggy-version/src.java.compile.parse.TermBinExprBuilder.java", "BodyUseAPI": [], "Fixed commit": "0b8c9794f72c654ee6e0b3db8d6c352d054de9a4", "Url": "https://api.github.com/repos/adobe-research/mesh", "Date": "2013-05-07T20:20:48Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getBundle(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bundle == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2401/buggy-version/lyra-coder-gson.src.main.java.com.fondesa.lyra.coder.gson.base.DefaultGsonCoder.java", "BodyUseAPI": [], "Fixed commit": "180be2d93629c5932314d0f2b6df8b288f8e0713", "Url": "https://api.github.com/repos/Fondesa/Lyra", "Date": "2017-04-21T22:00:52Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.readUntilNonEmptyLine(java.io.BufferedReader)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (line1.startsWith(\"The Gazette\")) { source = line1; title = line2; }else if (line2.equals(\"2000 Summer\")) { source = line1; title = line3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2583/buggy-version/src.main.java.edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.java", "BodyUseAPI": [], "Fixed commit": "9d855748620b40f2b15b0e58a4b227ffee1cb4fe", "Url": "https://api.github.com/repos/forkunited/micro-mid", "Date": "2016-02-09T20:30:27Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.readUntilNonEmptyLine(java.io.BufferedReader)", "edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.readUntilNonEmptyLine(java.io.BufferedReader)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((line2.startsWith(\"2000 Summer\")) && (line3.startsWith(\"New Delhi's\"))) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2583/buggy-version/src.main.java.edu.psu.ist.acs.micro.mid.scratch.ConstructMID4NewsDocumentSet.java", "BodyUseAPI": [], "Fixed commit": "9d855748620b40f2b15b0e58a4b227ffee1cb4fe", "Url": "https://api.github.com/repos/forkunited/micro-mid", "Date": "2016-02-09T20:30:27Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((placeGrade >= 1) && (placeGrade <= 3)) { node.divisionPlaceAttribute = node.maybeDivisionPlaceAttributes.get(0); clearDivisionAttribute = node.maybeDivisionPlaceAttributes.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8588/buggy-version/src.main.java.cn.royhoo.address.segment.AddressSegment.java", "BodyUseAPI": [], "Fixed commit": "fc4029ea11ab2949d057c39f3eacdd45c508a4d9", "Url": "https://api.github.com/repos/Royhoo/address", "Date": "2017-10-25T12:59:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!imageIs3D) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/175/buggy-version/BoneJProtosMVN.src.main.java.org.bonej.common.ImageCheck.java", "BodyUseAPI": [], "Fixed commit": "889034a71eab4151084aa78d28ca23145abda6d5", "Url": "https://api.github.com/repos/rimadoma/BoneJ-sandbox", "Date": "2015-12-11T15:21:08Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((name != null) && (!(\"\".equals(name)))) && (chainElement.hasAttribute(\"name\"))) { if (name.equals(chainElement.getAttribute(\"name\"))) { elementsToModify.add(chainElement); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8239/buggy-version/src.main.java.org.walkmod.conf.providers.xml.AddConfigurationParameterXMLAction.java", "BodyUseAPI": ["java.util.List<org.w3c.dom.Element>.add(org.w3c.dom.Element)", "java.lang.String.equals(java.lang.String)", "org.w3c.dom.Element.getAttribute(java.lang.String)"], "Fixed commit": "70610064099180b90601120018083ade14118c3c", "Url": "https://api.github.com/repos/walkmod/walkmod-core", "Date": "2015-12-30T11:30:16Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.equals(\"script\")) { name = \"walkmod:commons:scripting\"; }else if (name.equals(\"template\")) { name = \"walkmod:commons:template\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8239/buggy-version/src.main.java.org.walkmod.conf.entities.impl.ConfigurationImpl.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "70610064099180b90601120018083ade14118c3c", "Url": "https://api.github.com/repos/walkmod/walkmod-core", "Date": "2015-12-30T11:30:16Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.walkmod.conf.entities.TransformationConfig.getType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((!(type.equals(\"script\"))) && (!(type.equals(\"template\")))) { composeName(type, plugins); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8239/buggy-version/src.main.java.org.walkmod.conf.providers.AbstractChainConfigurationProvider.java", "BodyUseAPI": ["org.walkmod.conf.providers.AbstractChainConfigurationProvider.composeName(java.lang.String,java.util.HashSet<java.lang.String>)"], "Fixed commit": "70610064099180b90601120018083ade14118c3c", "Url": "https://api.github.com/repos/walkmod/walkmod-core", "Date": "2015-12-30T11:30:16Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (avatar != null) { builder.setAvatar(avatar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7091/buggy-version/jailbreak-service.src.main.java.org.jailbreak.service.db.mappers.TeamsMapper.java", "BodyUseAPI": ["Team.Builder.setAvatar(java.lang.String)"], "Fixed commit": "d520301ea31b23f8548342c7d50ac510a8b84560", "Url": "https://api.github.com/repos/jailbreakhq/JailbreakApi", "Date": "2015-01-29T23:09:26Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(DYNServerMod.frozenPlayers.contains(event.player))) { net.minecraft.server.MinecraftServer.getServer().getCommandManager().executeCommand(net.minecraft.server.MinecraftServer.getServer(), ((\"/p user \" + (event.player)) + \" group remove _FROZEN_\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6580/buggy-version/proxy.Server.java", "BodyUseAPI": ["net.minecraft.server.MinecraftServer.getServer().getCommandManager().executeCommand(net.minecraft.server.MinecraftServer.getServer(),((\"/p user \" + (event.player)) + \" group remove _FROZEN_\"))"], "Fixed commit": "072d4a852cc6d64f6f85b7da0e02e7d927f50b71", "Url": "https://api.github.com/repos/CityOfLearning/Server", "Date": "2016-07-24T07:02:25Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((sign.getState()) instanceof org.bukkit.block.Sign)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4365/buggy-version/common.src.main.java.com.sk89q.craftbook.bukkit.BukkitUtil.java", "BodyUseAPI": [], "Fixed commit": "f9246412f5f2089f1d5b62d51bf0c6511af8c490", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2012-12-13T09:41:25Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((start == null) || (stop == null)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4365/buggy-version/mechanisms.src.main.java.com.sk89q.craftbook.mech.Elevator.java", "BodyUseAPI": [], "Fixed commit": "f9246412f5f2089f1d5b62d51bf0c6511af8c490", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2012-12-13T09:41:25Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cmp2.equals(\"#default\")) { result = after; break; }else if (((i == ((args.size()) - 1)) && (before != null)) && (after == null)) { result = before; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6440/buggy-version/swc-engine.src.main.java.org.sweble.wikitext.engine.ext.ParserFunctionSwitch.java", "BodyUseAPI": [], "Fixed commit": "ce7b0d3fcac77f0133f49abf9136977295a20a6b", "Url": "https://api.github.com/repos/harshal/sweble-wikitext", "Date": "2012-07-26T09:09:32Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.jug.MoMA.running_as_Fiji_plugin)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/53/buggy-version/src.main.java.com.jug.gurobi.GurobiInstaller.java", "BodyUseAPI": [], "Fixed commit": "b85c7285faf4a50603aa7c539cebbaf53e6200f9", "Url": "https://api.github.com/repos/fjug/MoMA", "Date": "2017-05-01T09:26:04Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.Qball.Wild.Utils.Checks.wild.getConfig().getList(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((biomes.size()) == 0) { me.Qball.Wild.Utils.Checks.Biomes = false; }else { for (int i = 0; i <= (biomes.size()); i++) { java.lang.String biome = biomes.get(i).toString().toUpperCase(); if ((loc.getBlock().getBiome()) == (org.bukkit.block.Biome.valueOf(biome))) { me.Qball.Wild.Utils.Checks.Biomes = true; break; }else { if (i == (biomes.size())) { me.Qball.Wild.Utils.Checks.Biomes = false; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2533/buggy-version/src.me.Qball.Wild.Utils.Checks.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "java.lang.String.toString()", "java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.size()"], "Fixed commit": "3a3f8b73dff0eae3a6d21672f65dadcd3c69632a", "Url": "https://api.github.com/repos/Qballl/WildernessTp", "Date": "2016-05-19T21:03:03Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.realm.Realm.getDefaultInstance().where(ru.burocratos.macdev.myapplication.model.Mail.class).equalTo(\"mail_id\", mail).findFirst()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (first == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3253/buggy-version/app.src.main.java.ru.burocratos.macdev.myapplication.mail.MailRecycleFragment.java", "BodyUseAPI": [], "Fixed commit": "8e7e6ab69d67a5f6b2fb3bd7d13629a0c14807d3", "Url": "https://api.github.com/repos/NiceWone/Android-Crm", "Date": "2017-10-03T13:12:31Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target == null) return new org.springframework.web.servlet.ModelAndView(\"redirect:/logout\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8006/buggy-version/src.main.java.eu.trentorise.smartcampus.permissionprovider.controller.AuthController.java", "BodyUseAPI": [], "Fixed commit": "b4d91e0509be49ae1a4658463e32e19684e33ef3", "Url": "https://api.github.com/repos/smartcampuslab/permission.provider", "Date": "2013-08-27T08:08:17Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getSelectedShape(start)) != (-1)) { shapesList.set(getSelectedShape(start), newshape); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7774/buggy-version/Colorclicker.src.DrawingPanel.java", "BodyUseAPI": ["DrawingPanel.getSelectedShape(java.awt.Point)", "java.util.ArrayList<MyShape>.set(int,MyShape)"], "Fixed commit": "c16109f7b414faeb9d8d9d6e5466056b64733342", "Url": "https://api.github.com/repos/Rubenkl/peent-daanruben", "Date": "2014-10-07T16:06:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getSelectedShape(start)) != (-1)) { shapesList.remove(getSelectedShape(start)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7774/buggy-version/Colorclicker.src.DrawingPanel.java", "BodyUseAPI": ["java.util.ArrayList<MyShape>.remove(int)", "DrawingPanel.getSelectedShape(java.awt.Point)"], "Fixed commit": "c16109f7b414faeb9d8d9d6e5466056b64733342", "Url": "https://api.github.com/repos/Rubenkl/peent-daanruben", "Date": "2014-10-07T16:06:26Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.reactome.web.diagram.util.MapSet<java.lang.String, org.reactome.web.diagram.data.interactors.raw.RawInteractor>.getElements(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (set != null) { rtn.addAll(set); java.util.Collections.sort(rtn, new java.util.Comparator<org.reactome.web.diagram.data.interactors.raw.RawInteractor>() { @java.lang.Override public int compare(org.reactome.web.diagram.data.interactors.raw.RawInteractor o1, org.reactome.web.diagram.data.interactors.raw.RawInteractor o2) { int c = java.lang.Double.compare(o2.getScore(), o1.getScore()); if (c == 0) return o1.getAcc().compareTo(o2.getAcc()); return c; } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5138/buggy-version/src.main.java.org.reactome.web.diagram.data.InteractorsContent.java", "BodyUseAPI": ["java.util.List<org.reactome.web.diagram.data.interactors.raw.RawInteractor>.addAll(java.util.Set<org.reactome.web.diagram.data.interactors.raw.RawInteractor>)"], "Fixed commit": "116793d3b980d1264b2afdce80c0cbf4746f2ee6", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2016-01-22T17:17:34Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getOnRecyclerItemTouchListener()) != null) { mRecyclerView.addOnItemTouchListener(getOnRecyclerItemTouchListener()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5926/buggy-version/mywatchdogapp.src.main.java.angel.zxiu.mywatchdog.fragment._BaseRecycleFragment.java", "BodyUseAPI": [], "Fixed commit": "2995007b71135962440cc922bbc8569ff2416402", "Url": "https://api.github.com/repos/zxiu/MyWatchDog", "Date": "2015-10-15T14:28:56Z"},
{"Line": "=>622", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fBitmap) { p.y = (p.y) + fSize; }else { p.y = (p.y) + (fSize * 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3418/buggy-version/msi.gama.core.src.msi.gaml.statements.DrawStatement.java", "BodyUseAPI": [], "Fixed commit": "f6906ae751002779c03440eb15d2e0d0336b427c", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2016-01-15T18:08:35Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { startVideoRecorder(); mHandlerDelayStimuli.postDelayed(new java.lang.Runnable() { public void run() { launchExperiment(); } }, 2000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/409/buggy-version/src.ca.ilanguage.oprime.morphologicalawareness.ui.MorphologicalAwarenessHome.java", "BodyUseAPI": [], "Fixed commit": "844abac31e7e415521b301076e1de2fc4276f1a0", "Url": "https://api.github.com/repos/cesine/AndroidMorphologicalAwareness", "Date": "2011-10-25T00:04:26Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Gdx.app.getType().equals(Application.ApplicationType.Android)) { file = Gdx.files.internal(fileName); }else { file = Gdx.files.local(fileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6944/buggy-version/core.src.com.mygdx.game.utils.SaveMngr.java", "BodyUseAPI": [], "Fixed commit": "cb6ecfd2e91fab359356ec13d7ae9a7328e94191", "Url": "https://api.github.com/repos/Teatree/Krashe3", "Date": "2016-05-23T20:09:50Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.contains(\"\\\\\")) { path = path.replace('\\\\', '/'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5071/buggy-version/src.main.java.org.vafer.jdeb.DataBuilder.java", "BodyUseAPI": ["java.lang.String.replace(char,char)"], "Fixed commit": "594058fa7760007ceb644135e3a23141661c2b93", "Url": "https://api.github.com/repos/tcurdt/jdeb", "Date": "2013-05-23T21:10:39Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (address == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5268/buggy-version/src.com.sonycsl.echo.Echo.java", "BodyUseAPI": [], "Fixed commit": "f7c1fcd285e9c2ae01b6307d240e4bf5c5e8f102", "Url": "https://api.github.com/repos/SonyCSL/OpenECHO", "Date": "2013-06-11T05:10:21Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (address == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5268/buggy-version/src.com.sonycsl.echo.Echo.java", "BodyUseAPI": [], "Fixed commit": "f7c1fcd285e9c2ae01b6307d240e4bf5c5e8f102", "Url": "https://api.github.com/repos/SonyCSL/OpenECHO", "Date": "2013-06-11T05:10:21Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (address == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5268/buggy-version/src.com.sonycsl.echo.Echo.java", "BodyUseAPI": [], "Fixed commit": "f7c1fcd285e9c2ae01b6307d240e4bf5c5e8f102", "Url": "https://api.github.com/repos/SonyCSL/OpenECHO", "Date": "2013-06-11T05:10:21Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((left instanceof java.math.BigDecimal) || (right instanceof java.math.BigDecimal)) { java.math.BigDecimal l = toBigDecimal(left); java.math.BigDecimal r = toBigDecimal(right); return l.compareTo(r); }else if ((left instanceof java.math.BigInteger) || (right instanceof java.math.BigInteger)) { java.math.BigInteger l = toBigInteger(left); java.math.BigInteger r = toBigInteger(right); return l.compareTo(r); }else if ((isFloatingPoint(left)) || (isFloatingPoint(right))) { double lhs = toDouble(left); double rhs = toDouble(right); if (java.lang.Double.isNaN(lhs)) { if (java.lang.Double.isNaN(rhs)) { return 0; }else { return -1; } }else if (java.lang.Double.isNaN(rhs)) { return +1; }else if (lhs < rhs) { return -1; }else if (lhs > rhs) { return +1; }else { return 0; } }else if ((isNumberable(left)) || (isNumberable(right))) { long lhs = toLong(left); long rhs = toLong(right); if (lhs < rhs) { return -1; }else if (lhs > rhs) { return +1; }else { return 0; } }else if (\"==\".equals(operator)) { return left.equals(right) ? 0 : -1; }else if (left instanceof java.lang.Comparable<?>) { @java.lang.SuppressWarnings(\"unchecked\") final java.lang.Comparable<java.lang.Object> comparable = ((java.lang.Comparable<java.lang.Object>) (left)); return comparable.compareTo(right); }else if (right instanceof java.lang.Comparable<?>) { @java.lang.SuppressWarnings(\"unchecked\") final java.lang.Comparable<java.lang.Object> comparable = ((java.lang.Comparable<java.lang.Object>) (right)); return comparable.compareTo(left); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8405/buggy-version/src.main.java.org.apache.commons.jexl2.JadeJexlArithmetic.java", "BodyUseAPI": ["org.apache.commons.jexl2.JadeJexlArithmetic.toDouble(java.lang.Object)", "org.apache.commons.jexl2.JadeJexlArithmetic.isFloatingPoint(java.lang.Object)", "java.lang.Object.equals(java.lang.Object)", "org.apache.commons.jexl2.JadeJexlArithmetic.isNumberable(java.lang.Object)", "org.apache.commons.jexl2.JadeJexlArithmetic.toBigDecimal(java.lang.Object)", "org.apache.commons.jexl2.JadeJexlArithmetic.toBigInteger(java.lang.Object)", "org.apache.commons.jexl2.JadeJexlArithmetic.toLong(java.lang.Object)", "org.apache.commons.jexl2.JadeJexlArithmetic.toBigDecimal(java.lang.Object)", "java.lang.Comparable<java.lang.Object>.compareTo(java.lang.Object)", "org.apache.commons.jexl2.JadeJexlArithmetic.isFloatingPoint(java.lang.Object)", "org.apache.commons.jexl2.JadeJexlArithmetic.toDouble(java.lang.Object)", "org.apache.commons.jexl2.JadeJexlArithmetic.isNumberable(java.lang.Object)", "org.apache.commons.jexl2.JadeJexlArithmetic.toLong(java.lang.Object)", "java.lang.Comparable<java.lang.Object>.compareTo(java.lang.Object)", "org.apache.commons.jexl2.JadeJexlArithmetic.toBigInteger(java.lang.Object)"], "Fixed commit": "08e7029ef82e2119760f76c1e984369e0e6dc06b", "Url": "https://api.github.com/repos/neuland/jade4j", "Date": "2015-12-02T09:52:51Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(call.isCanceled())) { listener.onRequestError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2231/buggy-version/app.src.main.java.de.christinecoenen.code.zapp.app.livestream.api.ProgramGuideRequest.java", "BodyUseAPI": [], "Fixed commit": "f1ade02957c55aa1e65cd3716ae8e6fa5753e0ec", "Url": "https://api.github.com/repos/cemrich/zapp", "Date": "2017-08-05T14:11:40Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.json.Json.createReader(new java.io.StringReader(json)).readObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(jsonObject.getBoolean(\"turnTimeExpired\"))) { checkerBoard.changePlayer(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4286/buggy-version/src.sockets.multithreading.SocketProtocol.java", "BodyUseAPI": [], "Fixed commit": "9ca0bd186a92be86dd86b77e67e1ff6da1b86724", "Url": "https://api.github.com/repos/joeyhage/checkersmis307", "Date": "2017-04-03T18:22:50Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((host) != null) { builder = builder.withUri(java.lang.String.valueOf(host)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5306/buggy-version/src.main.java.com.alexecollins.docker.mojo.AbstractDockerMojo.java", "BodyUseAPI": [], "Fixed commit": "9addd015ca89d29d2318f44f2a015befad2d9924", "Url": "https://api.github.com/repos/alexec/docker-maven-plugin", "Date": "2014-11-02T00:30:13Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((action.getTimeAsDate()) != null) { botrev3.MyTimer.scheduleTask(new botrev3.MyPostWriter(action, botrev3.MyTimer.bot)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3904/buggy-version/src.main.java.botrev3.MyTimer.java", "BodyUseAPI": ["botrev3.MyTimer.scheduleTask(botrev3.MyPostWriter)"], "Fixed commit": "3e6f2bbcdf8034e9aa87863d8f0858f2870fba1e", "Url": "https://api.github.com/repos/Art1209/botrev3", "Date": "2017-10-25T08:09:36Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj != null) return (this.id) == (((org.sample.vo.Employee) (obj)).getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2603/buggy-version/src.main.java.org.sample.vo.Employee.java", "BodyUseAPI": [], "Fixed commit": "fdd5cebdaee46dc541fc7d411b84224beeaf5f07", "Url": "https://api.github.com/repos/muqtarbaig/servlet", "Date": "2015-12-07T13:03:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (listOfFiles != null) { java.util.List<java.io.File> files = java.util.Arrays.asList(listOfFiles); java.lang.System.out.println((\"Files \" + files)); for (java.io.File f : files) { java.lang.System.out.println((\"Each \" + f)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2603/buggy-version/src.main.java.org.sample.component.Main.java", "BodyUseAPI": ["java.util.Arrays.asList(java.io.File[])"], "Fixed commit": "fdd5cebdaee46dc541fc7d411b84224beeaf5f07", "Url": "https://api.github.com/repos/muqtarbaig/servlet", "Date": "2015-12-07T13:03:22Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rotationVector.equals(Vector3d.zero)) { return Matrix4x4.IDENTITY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/187/buggy-version/src.main.java.nova.core.util.transform.MatrixHelper.java", "BodyUseAPI": [], "Fixed commit": "e55091efd44ad2fb115ea4d1a796667b83527143", "Url": "https://api.github.com/repos/NOVA-Team/NOVA-Core", "Date": "2015-02-28T03:13:31Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((normalQuat.w) > 1) { normalQuat = normalize(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/187/buggy-version/src.main.java.nova.core.util.transform.Quaternion.java", "BodyUseAPI": [], "Fixed commit": "e55091efd44ad2fb115ea4d1a796667b83527143", "Url": "https://api.github.com/repos/NOVA-Team/NOVA-Core", "Date": "2015-02-28T03:13:31Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (implAffects) { com.siberika.idea.pascal.lang.references.PasReferenceUtil.addUnitNamespaces(namespaces, ((com.siberika.idea.pascal.lang.psi.impl.PascalModuleImpl) (section)).getPrivateUnits(), includeLibrary); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4739/buggy-version/plugin.src.lang.references.PasReferenceUtil.java", "BodyUseAPI": [], "Fixed commit": "527f41a3d488722315752b229b7bd4aea831ac57", "Url": "https://api.github.com/repos/casteng/i-pascal", "Date": "2017-04-18T00:18:02Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(model.getCurrentPurchaseTableModel().hasItems())) { throw new java.lang.Exception(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6355/buggy-version/POS.src.ee.ut.math.tvt.salessystem.ui.tabs.PurchaseTab.java", "BodyUseAPI": [], "Fixed commit": "4ebd1d7bebe65e9eccee2dc2b7471324216179c8", "Url": "https://api.github.com/repos/andrestaht/FutureTech", "Date": "2013-10-28T21:39:09Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String[]>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dateArray != null) { date = dateArray[0]; }else { date = new java.util.Date().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2667/buggy-version/app.controllers.Post.java", "BodyUseAPI": [], "Fixed commit": "15e2b44ff9a7d9493ce00e3835b0bb110da38aa5", "Url": "https://api.github.com/repos/jiangecho/maopao_server", "Date": "2015-09-10T14:54:49Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2474/buggy-version/src.main.java.com.zendesk.maxwell.MaxwellFilter.java", "BodyUseAPI": [], "Fixed commit": "a0757587fdff3a6989d134e1f2ded2fcd6e4345c", "Url": "https://api.github.com/repos/copart-sujit/maxwell", "Date": "2017-07-15T05:35:49Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (reaction.isSetKineticLaw()) { org.sbml.jsbml.KineticLaw law = reaction.getKineticLaw(); if (law.isSetMath()) { kineticLaw = law.getMath().toFormula(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4796/buggy-version/src.main.java.org.cy3sbml.miriam.NamedSBaseInfoFactory.java", "BodyUseAPI": ["org.sbml.jsbml.Reaction.getKineticLaw()"], "Fixed commit": "ee772a064685f5d08985fafce849d5c4f290df34", "Url": "https://api.github.com/repos/matthiaskoenig/cy3sbml", "Date": "2016-04-01T16:32:23Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getCommandAliases()) != null) && (!(getCommandAliases().isEmpty()))) { for (java.lang.String alias : getCommandAliases()) { commandMap.remove(alias); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6207/buggy-version/src.main.java.com.forgeessentials.core.commands.ForgeEssentialsCommandBase.java", "BodyUseAPI": [], "Fixed commit": "70a3fe5d4c148546d8ae8d4d7d7eb0b548d8a8f2", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentials", "Date": "2015-09-02T02:06:03Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.tasree7a.utils.UserDefaultUtil.getAppLanguage()) == (com.tasree7a.Enums.Language.AR)) && ((com.tasree7a.utils.UserDefaultUtil.getUserLanguage()) == (com.tasree7a.Enums.Language.AR))) com.tasree7a.ThisApplication.getCurrentActivity().getWindow().getDecorView().setLayoutDirection(View.LAYOUT_DIRECTION_RTL); else com.tasree7a.ThisApplication.getCurrentActivity().getWindow().getDecorView().setLayoutDirection(View.LAYOUT_DIRECTION_LTR);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4674/buggy-version/app.src.main.java.com.tasree7a.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ced12174c2351a5915a442dd938bc7d0139020fd", "Url": "https://api.github.com/repos/khataha92/tasree7a", "Date": "2017-10-21T16:38:29Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.tasree7a.utils.UserDefaultUtil.getAppLanguage()) == (com.tasree7a.Enums.Language.AR)) && ((com.tasree7a.utils.UserDefaultUtil.getUserLanguage()) == (com.tasree7a.Enums.Language.AR))) com.tasree7a.ThisApplication.getCurrentActivity().getWindow().getDecorView().setLayoutDirection(View.LAYOUT_DIRECTION_RTL); else com.tasree7a.ThisApplication.getCurrentActivity().getWindow().getDecorView().setLayoutDirection(View.LAYOUT_DIRECTION_LTR);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4674/buggy-version/app.src.main.java.com.tasree7a.Fragments.CustomerRegistrationFragment.java", "BodyUseAPI": [], "Fixed commit": "ced12174c2351a5915a442dd938bc7d0139020fd", "Url": "https://api.github.com/repos/khataha92/tasree7a", "Date": "2017-10-21T16:38:29Z"},
{"Line": "=>1113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (db instanceof nz.co.gregs.dbvolution.databases.supports.SupportsDateRepeatDatatypeFunctions) { return db.getDefinition().doDateMinusDateRepeatTransform(getFirst().toSQLString(db), getSecond().toSQLString(db)); }else { final nz.co.gregs.dbvolution.expressions.DateExpression left = getFirst(); final nz.co.gregs.dbvolution.expressions.DateRepeatExpression right = new nz.co.gregs.dbvolution.expressions.DateRepeatExpression(getSecond()); return nz.co.gregs.dbvolution.expressions.BooleanExpression.anyOf(left.isNull(), right.isNull()).ifThenElse(nz.co.gregs.dbvolution.expressions.DateExpression.nullExpression(), left.addYears(right.getYears()).addMonths(right.getMonths()).addDays(right.getDays()).addHours(right.getHours()).addMinutes(right.getMinutes()).addSeconds(right.getSeconds())).toSQLString(db); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8944/buggy-version/src.main.java.nz.co.gregs.dbvolution.expressions.DateExpression.java", "BodyUseAPI": ["nz.co.gregs.dbvolution.expressions.DateExpression.toSQLString(nz.co.gregs.dbvolution.DBDatabase)", "nz.co.gregs.dbvolution.expressions.BooleanExpression.anyOf(left.isNull(), right.isNull()).ifThenElse(nz.co.gregs.dbvolution.expressions.DateExpression.nullExpression(), left.addYears(right.getYears()).addMonths(right.getMonths()).addDays(right.getDays()).addHours(right.getHours()).addMinutes(right.getMinutes()).addSeconds(right.getSeconds())).toSQLString(nz.co.gregs.dbvolution.DBDatabase)", "db.getDefinition().doDateMinusDateRepeatTransform(java.lang.String,getSecond().toSQLString(db))", "nz.co.gregs.dbvolution.results.DateRepeatResult.toSQLString(nz.co.gregs.dbvolution.DBDatabase)", "nz.co.gregs.dbvolution.DBDatabase.getDefinition()"], "Fixed commit": "265e873253a4cefa44faaef095d02c25991aa465", "Url": "https://api.github.com/repos/gregorydgraham/DBvolution", "Date": "2015-10-06T11:17:20Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nephology.properties.CustomPropertyReader.getAwsProxyPort()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (awsProxyPort == 0) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6658/buggy-version/src.main.java.org.nephology.aws.ec2.client.EC2ClientFactory.java", "BodyUseAPI": [], "Fixed commit": "2cedc40a8a1c62b7baa011f7a8c898c149287711", "Url": "https://api.github.com/repos/NephologyFJ/nephology", "Date": "2017-04-18T13:49:09Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nephology.properties.CustomPropertyReader.getAwsProxyHost()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((awsProxyHost == null) || (awsProxyHost.isEmpty())) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6658/buggy-version/src.main.java.org.nephology.aws.ec2.client.EC2ClientFactory.java", "BodyUseAPI": [], "Fixed commit": "2cedc40a8a1c62b7baa011f7a8c898c149287711", "Url": "https://api.github.com/repos/NephologyFJ/nephology", "Date": "2017-04-18T13:49:09Z"},
{"Line": "=>770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (f != null) { java.lang.String p = f.getParent(); if (p != null) { return new java.io.File(p); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7731/buggy-version/jaguar-2015.ant-1_5.src.main.org.apache.tools.ant.util.FileUtils.java", "BodyUseAPI": ["java.io.File.getParent()"], "Fixed commit": "c5178bc7bd6e32c1b87a15950da46cdc9ad4e37c", "Url": "https://api.github.com/repos/saeg/experiments", "Date": "2015-11-21T23:51:31Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mEvents) != null) { mEvents.clear(); for (com.ecolem.workoutside.model.Event event : events) { if (event.getDateStart().after(now)) { mEvents.add(event); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2652/buggy-version/app.src.main.java.com.ecolem.workoutside.activities.EventsActivity.java", "BodyUseAPI": [], "Fixed commit": "47947d403b41666bfead7bc50881d9a39ff8e1a4", "Url": "https://api.github.com/repos/jdzeta/Workoutside", "Date": "2015-11-09T23:18:29Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (entity != null) { if ((((entity.getLastDamageCause().getCause()) == (EntityDamageEvent.DamageCause.SUFFOCATION)) && (entity instanceof org.bukkit.craftbukkit.entity.CraftPlayer)) && (((org.bukkit.craftbukkit.entity.CraftPlayer) (entity)).getHandle().bQ)) { event.setCancelled(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4213/buggy-version/src.main.java.com.md_5.noclip.NoClip.java", "BodyUseAPI": ["org.bukkit.entity.Entity.getLastDamageCause()", "entity.getLastDamageCause().getCause()"], "Fixed commit": "0ab059e48586e52f99021aa2e0404792b2b5f986", "Url": "https://api.github.com/repos/md-5/Zombes4Bukkit", "Date": "2012-03-20T20:17:19Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nombre.length()) > (limitNombre)) { nombre = nombre.substring(0, limitNombre); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8547/buggy-version/Servidor.src.entity.Programa.java", "BodyUseAPI": ["java.lang.String.substring(int,byte)"], "Fixed commit": "b2af87c02fbb7ac1438886fe58b31a3b7c656225", "Url": "https://api.github.com/repos/DanielCastellanos/Java-CS", "Date": "2017-05-07T22:10:19Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(line.startsWith(\"package\"))) { body.append(line); body.append(java.lang.System.lineSeparator()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1093/buggy-version/sdk.sdk.src.main.java.org.zgif.tooling.GenerationPostProcessor.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "8b59b3746ac44811313c489cb439af1f0596d4bf", "Url": "https://api.github.com/repos/GIF-IDA/gif-ida-converter-sdk-java", "Date": "2015-08-03T08:26:40Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((token) != null) { if ((token.getToken()) == null) getTokenForService(urlParams, MoodleRestOption.SERVICE_MOODLE_MOBILE); }else { token = new in.co.praveenkumar.mdroid.moodlemodel.MoodleToken(); token.appenedError(\"Token fetch failed!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/879/buggy-version/src.in.co.praveenkumar.mdroid.moodlerest.MoodleRestToken.java", "BodyUseAPI": [], "Fixed commit": "82dce9092e287a68217c271fc08c71b04f5a6a83", "Url": "https://api.github.com/repos/praveendath92/MDroid", "Date": "2014-10-24T17:20:08Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((token) != null) { if ((token.getToken()) == null) getTokenForService(urlParams, MoodleRestOption.SERVICE_MOODY); }else { token = new in.co.praveenkumar.mdroid.moodlemodel.MoodleToken(); token.appenedError(\"Token fetch failed!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/879/buggy-version/src.in.co.praveenkumar.mdroid.moodlerest.MoodleRestToken.java", "BodyUseAPI": [], "Fixed commit": "82dce9092e287a68217c271fc08c71b04f5a6a83", "Url": "https://api.github.com/repos/praveendath92/MDroid", "Date": "2014-10-24T17:20:08Z"},
{"Line": "=>525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((from_tables.size()) > 1) new_table = kickassdb.Table.mergeTables(from_tables.get(0), from_tables.get(1)); else new_table = from_tables.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1533/buggy-version/src.kickassdb.parser.java", "BodyUseAPI": ["java.util.ArrayList<kickassdb.Table>.get(int)", "java.util.ArrayList<kickassdb.Table>.get(int)", "java.util.ArrayList<kickassdb.Table>.get(int)", "kickassdb.Table.mergeTables(from_tables.get(0),from_tables.get(1))"], "Fixed commit": "5a4827f84c702d319cb4b15015c795f2d7b5920a", "Url": "https://api.github.com/repos/ocampos16/KickAssDB", "Date": "2014-04-23T15:09:06Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((container.getDescription()) != null) { description = container.getDescription(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2120/buggy-version/dockstore-client.src.main.java.io.dockstore.client.Client.java", "BodyUseAPI": ["io.swagger.client.model.Container.getDescription()"], "Fixed commit": "fc5f08d1fb8246978055ea332a9530ab3dc75439", "Url": "https://api.github.com/repos/ga4gh/dockstore", "Date": "2015-10-19T19:50:33Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((container.getGitUrl()) != null) && (!(container.getGitUrl().isEmpty()))) { gitUrl = container.getGitUrl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2120/buggy-version/dockstore-client.src.main.java.io.dockstore.client.Client.java", "BodyUseAPI": ["io.swagger.client.model.Container.getGitUrl()"], "Fixed commit": "fc5f08d1fb8246978055ea332a9530ab3dc75439", "Url": "https://api.github.com/repos/ga4gh/dockstore", "Date": "2015-10-19T19:50:33Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["provider.getComputeServices().getImageSupport().getImage(withLaunchOptions.getMachineImageId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((image != null) && ((image.getTag(\"contentLink\")) != null)) params.setSourceImage(((java.lang.String) (image.getTag(\"contentLink\")))); else throw new org.dasein.cloud.google.compute.server.CloudException((\"Problem getting the contentLink tag value from the image for \" + (withLaunchOptions.getMachineImageId())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3757/buggy-version/src.main.java.org.dasein.cloud.google.compute.server.ServerSupport.java", "BodyUseAPI": ["org.dasein.cloud.google.compute.server.MachineImage.getTag(java.lang.String)", "org.dasein.cloud.google.compute.server.AttachedDiskInitializeParams.setSourceImage(((java.lang.String) (image.getTag(\"contentLink\"))))"], "Fixed commit": "ecdc9f77989ae65814ded42ba38db343704f003a", "Url": "https://api.github.com/repos/unwin/dasein-cloud-google", "Date": "2014-07-31T22:51:50Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (SKUs.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/403/buggy-version/src.main.java.com.vmware.entertainmentetc.services.bestbuy.BestBuyService.java", "BodyUseAPI": [], "Fixed commit": "7882ed7aa81edd4f4994bb9d6efe51121642f59f", "Url": "https://api.github.com/repos/sudeepster/entertainmentetc", "Date": "2011-07-26T20:55:36Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["database.getStorage().deleteRecord(com.orientechnologies.orient.core.id.ORecordId,com.orientechnologies.orient.core.version.OVersionFactory.instance().createUntrackedVersion(),int,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result.getResult()) deleted++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8859/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OCommandExecutorSQLTruncateRecord.java", "BodyUseAPI": [], "Fixed commit": "fb8003dda7e0b138cd2ed525aecb1dbc40e4b50e", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-02-06T23:39:52Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message.getAuthor().isYourself()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4755/buggy-version/src.main.java.de.btobastian.javacordbot.listeners.MessageListener.java", "BodyUseAPI": [], "Fixed commit": "7c89baa88a808eecc9f6b7dd47ea408b49aeb6ad", "Url": "https://api.github.com/repos/Bastian/JavacordBot", "Date": "2016-03-20T10:30:03Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isVisible()) { getActivity().finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1803/buggy-version/app.src.main.java.fr.vpm.audiorss.FeedItemReader.java", "BodyUseAPI": [], "Fixed commit": "3257e6523da4a8a795d504f3fff07ccfa1126c73", "Url": "https://api.github.com/repos/vpmalley/radiofeedz", "Date": "2014-11-25T01:15:45Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (new fr.vpm.audiorss.http.DefaultNetworkChecker().checkNetworkForRefresh(getContext(), false)) { for (fr.vpm.audiorss.rss.RSSChannel channel : feeds) { fr.vpm.audiorss.http.SaveFeedCallback callback = new fr.vpm.audiorss.http.SaveFeedCallback(progressListener, this); new fr.vpm.audiorss.http.AsyncFeedRefresh(getContext(), callback).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, channel.getUrl()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1803/buggy-version/app.src.main.java.fr.vpm.audiorss.process.FeedsManagerDataModel.java", "BodyUseAPI": [], "Fixed commit": "3257e6523da4a8a795d504f3fff07ccfa1126c73", "Url": "https://api.github.com/repos/vpmalley/radiofeedz", "Date": "2014-11-25T01:15:45Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.String>.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parIndex == (-1)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3972/buggy-version/src.main.java.ru.redenergy.flexy.resolve.TemplateResolver.java", "BodyUseAPI": [], "Fixed commit": "6b08e52bc6c92f50b96dc8fe58f193eb30134535", "Url": "https://api.github.com/repos/FRedEnergy/flexy-commands", "Date": "2016-05-02T14:06:19Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nMsgType) == 0) { main_activity.yy_data_source.initOutgoingIsUseDefaultMessage0(true); }else { main_activity.yy_data_source.initOutgoingIsUseDefaultMessage1(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/472/buggy-version/src.com.yy2039.answermachine.OutgoingMessagesView.java", "BodyUseAPI": [], "Fixed commit": "d78534fa1dced0b370c9842d2a5d8fdae6032fcb", "Url": "https://api.github.com/repos/PATHouC/AM", "Date": "2016-03-16T17:22:57Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rapidoid.html.TagContext.getEventCmd(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (cmd != null) { org.rapidoid.pages.Pages.callCmdHandler(x, page, cmd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5174/buggy-version/rapidoid-pages.src.main.java.org.rapidoid.pages.Pages.java", "BodyUseAPI": ["org.rapidoid.pages.Pages.callCmdHandler(org.rapidoid.http.HttpExchange,java.lang.Object,org.rapidoid.html.Cmd)"], "Fixed commit": "933196bcbe79de6daa8eec388fd5b77755c3eac9", "Url": "https://api.github.com/repos/rapidoid/rapidoid", "Date": "2014-11-21T05:25:58Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((objectMapper) == null) && ((environment) != null)) { objectMapper = environment.getObjectMapper(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5242/buggy-version/dropwizard-client.src.main.java.io.dropwizard.client.JerseyClientBuilder.java", "BodyUseAPI": [], "Fixed commit": "ac3bf70437c75313239f35bc287981ce7e85c400", "Url": "https://api.github.com/repos/nickbabcock/dropwizard", "Date": "2015-04-23T15:00:39Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dataSnapshot.child(\"user_image\").getValue().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(image.equals(\"default_profile\"))) { com.squareup.picasso.Picasso.with(this).load(image).into(settingsDisplayImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4989/buggy-version/app.src.main.java.com.example.mitchell.mychat.SettingsActivity.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(this).load(image).into(de.hdodenhof.circleimageview.CircleImageView)", "com.squareup.picasso.Picasso.with(this).load(java.lang.String)"], "Fixed commit": "7c8eaebffd5ef88e7a747d7082f45412cc728105", "Url": "https://api.github.com/repos/mitcho426/AndroidChats", "Date": "2017-09-29T09:30:16Z"},
{"Line": "=>942", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((creatureList.get(room).get(i)) instanceof hhu.propra2013.gruppe55_opengl.FireElemental) && ((creatureList.get(room).get(i).getCurrState()) == 1)) { creatureList.get(room).get(i).action(playerCenter[0], playerCenter[1]); }else if (((creatureList.get(room).get(i)) instanceof hhu.propra2013.gruppe55_opengl.Boss_FireSnail) && ((creatureList.get(room).get(i).getCurrState()) == 1)) { creatureList.get(room).get(i).action(playerCenter[0], playerCenter[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6279/buggy-version/src.hhu.propra2013.gruppe55_opengl.LevelMP.java", "BodyUseAPI": ["creatureList.get(room).get(i).action(int,int)", "creatureList.get(room).get(i).action(int,int)", "creatureList.get(room).get(int)", "creatureList.get(room).get(int)", "hhu.propra2013.gruppe55_opengl.LevelMP.get(hhu.propra2013.gruppe55_opengl.LevelMP)", "creatureList.get(room).get(int)", "creatureList.get(room).get(i).getCurrState()", "creatureList.get(room).get(int)", "hhu.propra2013.gruppe55_opengl.LevelMP.get(hhu.propra2013.gruppe55_opengl.LevelMP)", "hhu.propra2013.gruppe55_opengl.LevelMP.get(hhu.propra2013.gruppe55_opengl.LevelMP)", "hhu.propra2013.gruppe55_opengl.LevelMP.get(hhu.propra2013.gruppe55_opengl.LevelMP)"], "Fixed commit": "bf830b0b2679f73b081ac3f11063a897e888776e", "Url": "https://api.github.com/repos/propra13-orga/gruppe55", "Date": "2013-07-13T17:56:01Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.util.ArrayList<java.lang.String>>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tempParameterList.get(0).equals(\"23\")) { java.lang.String[] tempStr2 = tempParameterList.get(1).split(\" \"); staticList.get(r).add(new hhu.propra2013.gruppe55_opengl.Switch(xPos, yPos, tempStr2)); }else if (tempParameterList.get(0).equals(\"24\")) { staticList.get(r).add(new hhu.propra2013.gruppe55_opengl.Lavahat(xPos, yPos)); }else if (tempParameterList.get(0).equals(\"25\")) { staticList.get(r).add(new hhu.propra2013.gruppe55_opengl.Lavapatch(xPos, yPos)); }else if (tempParameterList.get(0).equals(\"26\")) { creatureList.get(r).add(new hhu.propra2013.gruppe55_opengl.Boss_FireSnail(xPos, yPos, java.lang.Integer.parseInt(tempParameterList.get(1)), java.lang.Integer.parseInt(tempParameterList.get(2)), java.lang.Integer.parseInt(tempParameterList.get(3)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6279/buggy-version/src.hhu.propra2013.gruppe55_opengl.LevelMP.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.equals(java.lang.String)", "creatureList.get(r).add(hhu.propra2013.gruppe55_opengl.Boss_FireSnail)", "java.lang.Integer.parseInt(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "java.lang.Integer.parseInt(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.equals(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "java.lang.String.split(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "bf830b0b2679f73b081ac3f11063a897e888776e", "Url": "https://api.github.com/repos/propra13-orga/gruppe55", "Date": "2013-07-13T17:56:01Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lvlData[r][i][j]) == 25) { staticList.get(r).add(new hhu.propra2013.gruppe55_opengl.Lavapatch((i * 32), (j * 32))); }else if ((lvlData[r][i][j]) == 26) { creatureList.get(r).add(new hhu.propra2013.gruppe55_opengl.Boss_FireSnail((i * 32), (j * 32), 15, 1, 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6279/buggy-version/src.hhu.propra2013.gruppe55_opengl.LevelMP.java", "BodyUseAPI": ["creatureList.get(r).add(hhu.propra2013.gruppe55_opengl.Boss_FireSnail)", "hhu.propra2013.gruppe55_opengl.LevelMP.get(int)", "hhu.propra2013.gruppe55_opengl.LevelMP.get(int)", "staticList.get(r).add(hhu.propra2013.gruppe55_opengl.Lavapatch)"], "Fixed commit": "bf830b0b2679f73b081ac3f11063a897e888776e", "Url": "https://api.github.com/repos/propra13-orga/gruppe55", "Date": "2013-07-13T17:56:01Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((user.getPhoto()) == null) || (\"\".equals(user.getPhoto().trim()))) { setPhoto(((com.huangshihe.rt.util.GlobalUtils.RESOURCE_LOCATION) + \"user_placeholder.png\")); }else { setPhoto(user.getPhoto()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/9257/buggy-version/src.main.java.com.huangshihe.rt.awl.packet.UserPacket.java", "BodyUseAPI": [], "Fixed commit": "3835448b49db069c0042b9c5b0fd5b873952936b", "Url": "https://api.github.com/repos/htzy/hve", "Date": "2016-10-17T14:13:53Z"},
{"Line": "=>1480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (indexExternalElements) { indexExternalElementsOfPublication(pubDetail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/128/buggy-version/kmelia.kmelia-library.src.main.java.org.silverpeas.components.kmelia.service.DefaultKmeliaService.java", "BodyUseAPI": [], "Fixed commit": "8070df212b83124b8daef4e41ce05078ee30c5ab", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2017-11-24T13:09:30Z"},
{"Line": "=>895", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<org.opendaylight.yang.gen.v1.urn.opendaylight.sxp.node.rev141002.TimerType, org.opendaylight.sxp.util.time.ManagedTimer>.put(org.opendaylight.yang.gen.v1.urn.opendaylight.sxp.node.rev141002.TimerType,org.opendaylight.sxp.util.time.ManagedTimer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (t != null) { t.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2525/buggy-version/sxp-core.src.main.java.org.opendaylight.sxp.core.SxpConnection.java", "BodyUseAPI": ["org.opendaylight.sxp.util.time.ManagedTimer.stop()"], "Fixed commit": "73eb3e4ab12a0aea8fbfd2c3b61c86ea72926ba5", "Url": "https://api.github.com/repos/opendaylight/sxp", "Date": "2015-04-27T13:45:44Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((appFCIProprietaryTemplate.getIssuerDiscretionaryData()) != null) return appFCIProprietaryTemplate.getIssuerDiscretionaryData().getIssuerCountryCode();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1656/buggy-version/emvpaycard.src.main.java.com.qualicom.emvpaycard.business.CardData.java", "BodyUseAPI": ["appFCIProprietaryTemplate.getIssuerDiscretionaryData().getIssuerCountryCode()", "com.qualicom.emvpaycard.data.FCIProprietaryTemplate.getIssuerDiscretionaryData()"], "Fixed commit": "208242ce82d0c43d7e0e10d120941a67dd6750bc", "Url": "https://api.github.com/repos/kangelov/PaycardPOC", "Date": "2015-10-29T16:49:19Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((actnames.length) == 1) && (actnames[0].equals(ActionSequence.DEFAULT_SEQUENCE))) { classActions.put(component.componentClass.name, fullActions); }else { classActions.put(component.componentClass.name, new javax.swing.DefaultComboBoxModel(actnames)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5377/buggy-version/src.main.java.de.onyxbits.scenepainter.gui.dialogs.nenyacomponent.Controller.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, javax.swing.DefaultComboBoxModel>.put(component.componentClass.name,javax.swing.DefaultComboBoxModel)"], "Fixed commit": "48bacd0014ea0a81879ea53cc0c2d566ea50a696", "Url": "https://api.github.com/repos/onyxbits/ScenePainter", "Date": "2011-03-21T14:23:52Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getReactGateway().isInitialized()) { getReactGateway().onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/525/buggy-version/android.app.src.main.java.com.reactnativenavigation.controllers.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "3dd185ecad338aa35f4d921140faa52b135e5466", "Url": "https://api.github.com/repos/pqkluan/react-native-navigation", "Date": "2017-10-22T12:34:42Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((mAppBarLayout) != null) && (isAdded())) && ((getActivity()) != null)) { android.support.v4.view.ViewCompat.setElevation(mAppBarLayout, ((showViewPager()) && (!(hideBanner())) ? 0 : getResources().getDimension(R.dimen.app_bar_elevation))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5235/buggy-version/app.src.main.java.com.grarak.kerneladiutor.fragments.RecyclerViewFragment.java", "BodyUseAPI": [], "Fixed commit": "c277d6d6fc015d8610143bd909f9bfa541b61992", "Url": "https://api.github.com/repos/halldl/KernelAdiutor", "Date": "2016-11-03T16:13:21Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getScope()) != null) { if (getScope().isLoading()) { getScope().setLoading(false); } getScope().setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8317/buggy-version/proadmin-android.app.src.main.java.com.sasd13.proadmin.android.controller.Controller.java", "BodyUseAPI": [], "Fixed commit": "ffa0c2f0d34ee817386d5756664e6eef08cad799", "Url": "https://api.github.com/repos/sasd13/proadmin", "Date": "2017-05-28T17:14:26Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((search) == null) || (org.apache.commons.collections4.CollectionUtils.isEmpty(cacheList))) { showToast(res.getString(R.string.warn_no_cache_coord)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7382/buggy-version/main.src.cgeo.geocaching.CacheListActivity.java", "BodyUseAPI": [], "Fixed commit": "46d99563037e97099a1de1e4cf8471c33afe6654", "Url": "https://api.github.com/repos/letiziaj/cgeo", "Date": "2014-03-14T17:05:31Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.getSupportFragmentManager().findFragmentById(R.id.main_activity_frame)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (fragment != null) { tag = fragment.getTag(); }else { tag = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2456/buggy-version/app.src.main.java.net.elinformaticoenganchado.note.MainActivity.java", "BodyUseAPI": ["android.support.v4.app.Fragment.getTag()"], "Fixed commit": "e18b8a2478e95a4e5c9b8aa523cd3db8a120ab91", "Url": "https://api.github.com/repos/Sermanes/Note", "Date": "2016-07-30T00:41:15Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentDropUp.getCurrentDropUpId()) != null) { if (!(currentDropUp.getCurrentDropUpId().equals(currentDropUpId))) { currentDropUpId = currentDropUp.getCurrentDropUpId(); newCurrentDropUpSubject.onNext(currentDropUp.getCurrentDropUpId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5383/buggy-version/app.src.main.java.uk.org.lsucs.lanvantracker.manager.DataManager.java", "BodyUseAPI": ["uk.org.lsucs.lanvantracker.retrofit.models.CurrentDropUp.getCurrentDropUpId()", "currentDropUp.getCurrentDropUpId().equals(java.lang.Integer)", "uk.org.lsucs.lanvantracker.retrofit.models.CurrentDropUp.getCurrentDropUpId()", "io.reactivex.subjects.BehaviorSubject<java.lang.Integer>.onNext(currentDropUp.getCurrentDropUpId())", "uk.org.lsucs.lanvantracker.retrofit.models.CurrentDropUp.getCurrentDropUpId()"], "Fixed commit": "c46dac2fc4d8374d1ca056f500959101a3c2eef1", "Url": "https://api.github.com/repos/zackpollard/lan-van-tracker-android", "Date": "2017-11-14T00:35:08Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((identity.isLoggedIn()) && ((identity.getAccount()) != null)) && (org.apache.commons.lang.StringUtils.isEmpty(role))) { return org.picketlink.idm.model.basic.BasicModel.hasRole(relationshipManager, identity.getAccount(), getRole(identityManager, role)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5700/buggy-version/web.web_support.src.main.java.com.intuit.tank.auth.Security.java", "BodyUseAPI": ["org.picketlink.idm.model.basic.BasicModel.hasRole(org.picketlink.idm.RelationshipManager,identity.getAccount(),getRole(identityManager, role))", "org.picketlink.Identity.getAccount()", "com.intuit.tank.auth.Security.getRole(org.picketlink.idm.IdentityManager,java.lang.String)"], "Fixed commit": "c933bd164322ad57af4faf3bf2088e86368e65e0", "Url": "https://api.github.com/repos/intuit/Tank", "Date": "2016-06-08T20:29:54Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(module.equals(c))) checkClass(c);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6194/buggy-version/src.gluon.AnalysisMain.java", "BodyUseAPI": ["gluon.AnalysisMain.checkClass(soot.SootClass)"], "Fixed commit": "aa01ddb1528b7224821a72044a789445897178bd", "Url": "https://api.github.com/repos/trxsys/gluon", "Date": "2014-06-30T14:13:11Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["KMP.search(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (kmpValue != 0) { matchLength = 0; }else if ((pattern.charAt((matchLength - 1))) == '*') { matchLength++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3435/buggy-version/src.KMP.java", "BodyUseAPI": [], "Fixed commit": "f47b2b8e7abbd4d6c22c54b0f562ec09daa790b7", "Url": "https://api.github.com/repos/thevarunshah/Wild-KMP", "Date": "2016-05-17T05:06:31Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reset && ((pattern.charAt(matchLength)) == (text.charAt((i - 1))))) { matchLength++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3435/buggy-version/src.KMP.java", "BodyUseAPI": [], "Fixed commit": "f47b2b8e7abbd4d6c22c54b0f562ec09daa790b7", "Url": "https://api.github.com/repos/thevarunshah/Wild-KMP", "Date": "2016-05-17T05:06:31Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fields[0].trim().equals(\"FONT_SIZE\")) fontSize = java.lang.Integer.parseInt(fields[1].trim()); else if (fields[0].trim().equals(\"DEBUG\")) StenoTray.DEBUG = fields[1].trim().equals(\"true\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2442/buggy-version/StenoTray.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.trim()", "java.lang.String.trim()", "java.lang.String.equals(java.lang.String)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "ed90c8f6d472bf17da1562754963f6b35e9384b7", "Url": "https://api.github.com/repos/brentn/StenoTray", "Date": "2013-04-20T01:39:12Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (sparkObject == null) setToNull(); else { value = new com.splicemachine.db.iapi.types.HBaseRowLocation(); value.setSparkObject(sparkObject); setIsNull(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6170/buggy-version/db-engine.src.main.java.com.splicemachine.db.iapi.types.SQLRef.java", "BodyUseAPI": ["com.splicemachine.db.iapi.types.RowLocation.setSparkObject(java.lang.Object)"], "Fixed commit": "dc7dc06aa369c3b7a0373677fe5422524a033f7c", "Url": "https://api.github.com/repos/splicemachine/spliceengine", "Date": "2017-04-14T17:14:55Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gemserk.commons.gdx.camera.CameraRestrictedImpl.getRealWidth()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (zoomedWidth >= (worldBounds.getWidth())) this.zoom = (this.width) / (worldBounds.getWidth());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1190/buggy-version/commons-gdx-core.src.main.java.com.gemserk.commons.gdx.camera.CameraRestrictedImpl.java", "BodyUseAPI": ["com.badlogic.gdx.math.Rectangle.getWidth()"], "Fixed commit": "de680b38aa2bb0e1a26773d34d2aed5be2329e40", "Url": "https://api.github.com/repos/gemserk/commons-gdx", "Date": "2011-07-27T13:25:39Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.base.MoreObjects.firstNonNull(req.getParameter(\"tab\"),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tab.equals(\"inactiveTrucks\")) { req.setAttribute(\"inactiveTrucks\", truckDAO.findInactiveTrucks()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8059/buggy-version/src.main.java.foodtruck.server.dashboard.TruckListServlet.java", "BodyUseAPI": [], "Fixed commit": "3fc82a1834f490fa8f630cf2474e0d7fca61ada5", "Url": "https://api.github.com/repos/aviolette/foodtrucklocator", "Date": "2015-10-07T02:25:09Z"},
{"Line": "=>856", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firstRail) instanceof main.Switch) main.Application.targetOS.print((\"-\" + (main.Application.getStringForRail(firstRail))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6142/buggy-version/ProjlabProto.src.main.Application.java", "BodyUseAPI": [], "Fixed commit": "5695ae2ed457fa250a1d0e8ab0bfdd98cd078af9", "Url": "https://api.github.com/repos/ProjlabFlash/proto", "Date": "2017-04-19T23:19:23Z"},
{"Line": "=>858", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firstRail) == firstout) main.Application.targetOS.print(\"-\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6142/buggy-version/ProjlabProto.src.main.Application.java", "BodyUseAPI": [], "Fixed commit": "5695ae2ed457fa250a1d0e8ab0bfdd98cd078af9", "Url": "https://api.github.com/repos/ProjlabFlash/proto", "Date": "2017-04-19T23:19:23Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["accountNameCell.toString().toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (accountNameString.isEmpty()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8332/buggy-version/src.ExcelEmailBuilder.java", "BodyUseAPI": [], "Fixed commit": "4b3b9a6ca6b13ea3b4d6dcabafc60772e1e245ee", "Url": "https://api.github.com/repos/EsteMac/linkedin-list-builder", "Date": "2016-05-05T01:44:35Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((itemList.tagCount()) > 0) { inventory[universalcoins.tile.TilePackager.itemOutputSlot] = new net.minecraft.item.ItemStack(UniversalCoins.proxy.itemPackage); tagCompound.setTag(\"Inventory\", itemList); inventory[universalcoins.tile.TilePackager.itemOutputSlot].setTagCompound(tagCompound); if (cardAvailable) { java.lang.String account = inventory[universalcoins.tile.TilePackager.itemCardSlot].getTagCompound().getString(\"accountNumber\"); universalcoins.util.UniversalAccounts.getInstance().debitAccount(worldObj, account, packageCost[packageSize]); }else { coinSum -= packageCost[packageSize]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6521/buggy-version/java.universalcoins.tile.TilePackager.java", "BodyUseAPI": ["net.minecraft.nbt.NBTTagCompound.setTag(java.lang.String,net.minecraft.nbt.NBTTagList)"], "Fixed commit": "c34a7204f73717f90db1548d68dc88ecd6c24e54", "Url": "https://api.github.com/repos/cc3768/UniversalCoinsMod", "Date": "2015-07-01T05:11:37Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.longhaiyan.user.service.UserInfoService.findById(taskFinish.getTakerId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (finisherInfo == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/615/buggy-version/src.main.java.cn.longhaiyan.task.web.TaskInfoController.java", "BodyUseAPI": [], "Fixed commit": "a2d76d8ad179ec0f1c25fbbb7f17d1c2b5c7b608", "Url": "https://api.github.com/repos/chenxubiao/bank", "Date": "2017-05-22T04:28:12Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (sequenceTypeStr != null) return com.orientechnologies.orient.core.metadata.sequence.OSequence.SEQUENCE_TYPE.valueOf(sequenceTypeStr);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/163/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.sequence.OSequence.java", "BodyUseAPI": ["com.orientechnologies.orient.core.metadata.sequence.OSequence.SEQUENCE_TYPE.valueOf(java.lang.String)"], "Fixed commit": "b4c5b09ca8621c77d5eceedb0107a422a0f6d601", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-07-19T12:41:23Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((room.getName()) == \"Pool\") { accusation = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6543/buggy-version/src.Main.java", "BodyUseAPI": [], "Fixed commit": "ef6754c55f0fcd39d28fc817fd02ee202855f6d3", "Url": "https://api.github.com/repos/Ciaran5933/clue", "Date": "2013-08-12T08:27:49Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.getSuperclass()) != null) { initMethods(type.getSuperclass(), autoConfigure); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1726/buggy-version/modules.injection.standalone.src.main.java.org.apache.tamaya.inject.internal.ConfiguredTypeImpl.java", "BodyUseAPI": ["java.lang.Class.getSuperclass()", "org.apache.tamaya.inject.internal.ConfiguredTypeImpl.initMethods(java.lang.Class,boolean)"], "Fixed commit": "abb34d65181d9be614cbba258dd0ee174a7f3b7d", "Url": "https://api.github.com/repos/apache/incubator-tamaya-extensions", "Date": "2017-02-26T23:00:30Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.getSuperclass()) != null) { return org.apache.tamaya.inject.internal.ConfiguredTypeImpl.isConfigured(type.getSuperclass()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1726/buggy-version/modules.injection.standalone.src.main.java.org.apache.tamaya.inject.internal.ConfiguredTypeImpl.java", "BodyUseAPI": ["org.apache.tamaya.inject.internal.ConfiguredTypeImpl.isConfigured(java.lang.Class)", "java.lang.Class.getSuperclass()"], "Fixed commit": "abb34d65181d9be614cbba258dd0ee174a7f3b7d", "Url": "https://api.github.com/repos/apache/incubator-tamaya-extensions", "Date": "2017-02-26T23:00:30Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((type.getSuperclass()) != null) { initFields(type.getSuperclass(), autoConfigure); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1726/buggy-version/modules.injection.standalone.src.main.java.org.apache.tamaya.inject.internal.ConfiguredTypeImpl.java", "BodyUseAPI": ["org.apache.tamaya.inject.internal.ConfiguredTypeImpl.initFields(java.lang.Class,boolean)", "java.lang.Class.getSuperclass()"], "Fixed commit": "abb34d65181d9be614cbba258dd0ee174a7f3b7d", "Url": "https://api.github.com/repos/apache/incubator-tamaya-extensions", "Date": "2017-02-26T23:00:30Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.roots.ProjectRootManager.getInstance(file.getProject()).getFileIndex().getModuleForFile(com.intellij.openapi.vfs.VirtualFile)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (module == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6267/buggy-version/src.main.java.org.sonar.ide.intellij.inspection.SonarQubeLocalInspection.java", "BodyUseAPI": [], "Fixed commit": "65b9dc69b78a75551350ec6146dc956fd12adc6e", "Url": "https://api.github.com/repos/SonarSource/sonar-intellij", "Date": "2013-11-21T16:42:41Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiFile.getVirtualFile()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (virtualFile == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6267/buggy-version/src.main.java.org.sonar.ide.intellij.inspection.SonarQubeLocalInspection.java", "BodyUseAPI": [], "Fixed commit": "65b9dc69b78a75551350ec6146dc956fd12adc6e", "Url": "https://api.github.com/repos/SonarSource/sonar-intellij", "Date": "2013-11-21T16:42:41Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parameterClasses == null) parameterClasses = new java.lang.Class<?>[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7585/buggy-version/src.de.robv.android.xposed.XposedHelpers.java", "BodyUseAPI": [], "Fixed commit": "9495a1de6854d6a16c4a3dd63237b593c41933df", "Url": "https://api.github.com/repos/rovo89/XposedBridge", "Date": "2012-07-01T16:17:15Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_balanceClasses) hex.genmodel.GenModel.correctProbabilities(preds, _priorClassDistrib, _modelClassDistrib);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1018/buggy-version/h2o-genmodel.src.main.java.hex.genmodel.algos.deeplearning.DeeplearningMojoModel.java", "BodyUseAPI": [], "Fixed commit": "8b153b37afddc0264c6df2a72ad38222112867a8", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2017-09-01T00:30:45Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dbxFileService.containsClient(principal.getName())) { dbxFileService.removeClient(principal.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2310/buggy-version/web.src.main.java.lt.milkusteam.cloud.web.controller.DbxFilesController.java", "BodyUseAPI": ["java.security.Principal.getName()", "lt.milkusteam.cloud.core.service.DbxFileService.removeClient(java.lang.String)"], "Fixed commit": "f2dce4692274a1b20558f172b5eb64f92dd15a2f", "Url": "https://api.github.com/repos/ArnoldasMilkus/DDDCloudManager", "Date": "2016-04-19T06:03:38Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((!(\"\".equalsIgnoreCase(resultRedirect))) && (resultRedirect != null)) { request.setAttribute(\"result\", resultRedirect); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/9106/buggy-version/src.java.com.smi.travel.controller.RefundController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "46f989c3d0cc9b772cd8f0e0383fd29b8e61a608", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2016-01-29T09:18:16Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["1.findViewById(R.id.infoMsg)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (infoMsg.getText().equals(getText(R.string.info_scanning))) { infoMsg.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2080/buggy-version/main.java.com.gbrfix.randomyzik.MainActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "fd649e9e910030d347889bfb823159bfa4b438b2", "Url": "https://api.github.com/repos/gruffieux/randomyzik", "Date": "2017-09-16T20:28:31Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((physicalObject != null) && ((physicalObject.getPerspective().getCompass().findCardinalDirection(args[2])) == null)) { getResponder().setResponse(\"WARN: unsupported compass direction\"); }else if (world.canMoveTo(x, y)) { world.setObject(x, y); physicalObject = physicalObjectFactory.create(); physicalObject.getPerspective().setXPos(x); physicalObject.getPerspective().setYPos(y); physicalObject.getPerspective().setCompass(physicalObject.getPerspective().getCompass().findCardinalDirection(args[2])); }else { getResponder().setResponse((((\"WARN: Unable to move to \" + x) + \":\") + y)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5308/buggy-version/src.main.java.rea.toyrobot.actions.world.PlaceAction.java", "BodyUseAPI": ["physicalObject.getPerspective().getCompass().findCardinalDirection(java.lang.String)", "physicalObject.getPerspective().setCompass(physicalObject.getPerspective().getCompass().findCardinalDirection(args[2]))"], "Fixed commit": "42d16c5b09948adc3ce0f3e418a106eedb023c28", "Url": "https://api.github.com/repos/azzmosphere/rearobotproblem", "Date": "2017-08-08T04:57:24Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isPresent())) { run.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/744/buggy-version/src.main.java.almost.functional.Optional.java", "BodyUseAPI": [], "Fixed commit": "a8ec13b34c21a430c1b6d9001781abae2af2e156", "Url": "https://api.github.com/repos/nwillc/almost-functional", "Date": "2016-02-10T21:55:34Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (removeTrailingBreak) { java.lang.String inlinedString = gd.inlinedString(org.nschmidt.ldparteditor.helpers.compositetext.Inliner.bfcStatusTarget, org.nschmidt.ldparteditor.enums.View.getLDConfigColour(16)); int end = inlinedString.length(); if (inlinedString.endsWith(\"<br>\")) { end -= 4; } inlinedString = inlinedString.substring(0, end); source = org.nschmidt.ldparteditor.helpers.compositetext.Inliner.setLine(lineNumber, inlinedString, source); }else { source = org.nschmidt.ldparteditor.helpers.compositetext.Inliner.setLine(lineNumber, gd.inlinedString(org.nschmidt.ldparteditor.helpers.compositetext.Inliner.bfcStatusTarget, org.nschmidt.ldparteditor.enums.View.getLDConfigColour(16)), source); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4563/buggy-version/src.org.nschmidt.ldparteditor.helpers.compositetext.Inliner.java", "BodyUseAPI": [], "Fixed commit": "71b90759c0d900e84071d2d063fc8dae7f5efc77", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-12-30T15:58:25Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.cassandra.net.OutboundTcpConnection.DEBUG_COALESCING) && ((java.util.concurrent.ThreadLocalRandom.current().nextDouble()) < 1.0E-6)) org.apache.cassandra.net.OutboundTcpConnection.logger.info((\"Coalescing average \" + (java.util.concurrent.TimeUnit.NANOSECONDS.toMicros(averageGap()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4606/buggy-version/src.java.org.apache.cassandra.net.OutboundTcpConnection.java", "BodyUseAPI": [], "Fixed commit": "047c422496fc1341328d5ae267f037a8c921f4df", "Url": "https://api.github.com/repos/aweisberg/cassandra", "Date": "2015-02-10T21:30:11Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) >= 3) { args[2] = args[2].replaceAll(\"&\", (\"\" + ((char) (167)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1102/buggy-version/src.main.java.nz.co.lolnet.james137137.FactionChat.ChatMode.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "7872d21ec5d2996439c5e65c70bc4ef32e1c41af", "Url": "https://api.github.com/repos/James137137/FactionChat", "Date": "2015-07-30T05:51:34Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) >= 3) { args[2] = args[2].replaceAll(\"&\", (\"\" + ((char) (167)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1102/buggy-version/src.main.java.nz.co.lolnet.james137137.FactionChat.ChatMode.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "7872d21ec5d2996439c5e65c70bc4ef32e1c41af", "Url": "https://api.github.com/repos/James137137/FactionChat", "Date": "2015-07-30T05:51:34Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dialog.EXIT_CODE) == (CreateThemeDialog.OK)) { createTheme(project, module); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4835/buggy-version/src.net.offbeatpioneer.intellij.plugins.grav.action.CreateNewThemeAction.java", "BodyUseAPI": [], "Fixed commit": "c1d7746a4f3d5bf908ada289e7461b544a2d2000", "Url": "https://api.github.com/repos/PioBeat/GravSupport", "Date": "2017-08-15T20:49:38Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.runtime.type.scope.ArgumentImpl.get(railo.runtime.type.scope.Key,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (obj instanceof railo.runtime.type.UDF) { return ((railo.runtime.type.UDF) (obj)).callWithNamedValues(pc, args, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5752/buggy-version/railo-java.railo-core.src.railo.runtime.type.scope.ArgumentImpl.java", "BodyUseAPI": [], "Fixed commit": "91bafbca36b1f368e2ab9eaaf06c06359f5ea723", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-08-30T07:40:10Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.runtime.type.scope.ArgumentImpl.get(railo.runtime.type.scope.Key,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (obj instanceof railo.runtime.type.UDF) { return ((railo.runtime.type.UDF) (obj)).call(pc, args, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5752/buggy-version/railo-java.railo-core.src.railo.runtime.type.scope.ArgumentImpl.java", "BodyUseAPI": [], "Fixed commit": "91bafbca36b1f368e2ab9eaaf06c06359f5ea723", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-08-30T07:40:10Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.broadleafcommerce.openadmin.web.rulebuilder.service.AbstractRuleBuilderFieldService.handlersInitialized)) { synchronized(org.broadleafcommerce.openadmin.web.rulebuilder.service.AbstractRuleBuilderFieldService.handlersInitialized) { if (!(org.broadleafcommerce.openadmin.web.rulebuilder.service.AbstractRuleBuilderFieldService.handlersInitialized)) { if ((extensionManager) != null) { extensionManager.getProxy().addFields(fields, getName()); } } } org.broadleafcommerce.openadmin.web.rulebuilder.service.AbstractRuleBuilderFieldService.handlersInitialized = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7893/buggy-version/admin.broadleaf-open-admin-platform.src.main.java.org.broadleafcommerce.openadmin.web.rulebuilder.service.AbstractRuleBuilderFieldService.java", "BodyUseAPI": [], "Fixed commit": "5e79dd8e593c9c187444696ce8678a4e02ef087e", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-11-25T20:08:57Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isResolved()) return new com.github.jonathanxd.iutils.type.TypeInfo(this.getTypeClass(), this.getRelated(), this.isUnique());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3248/buggy-version/src.main.java.com.github.jonathanxd.iutils.type.DynamicTypeInfo.java", "BodyUseAPI": [], "Fixed commit": "3d54ce3860d17abd2fed17f682867a1c8650c353", "Url": "https://api.github.com/repos/JonathanxD/JwIUtils", "Date": "2017-03-24T23:30:19Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.isFile()) paths.add(fileToResPath(f));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4034/buggy-version/src.main.java.figurabia.io.workspace.LocalFileWorkspace.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "figurabia.io.workspace.LocalFileWorkspace.fileToResPath(java.io.File)"], "Fixed commit": "cd3870380f6fa3bf0c3aa224b9b4592827a1ccb1", "Url": "https://api.github.com/repos/sambe/figurabia", "Date": "2013-02-17T16:39:47Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itemButtons) != null) { cleanupAfterItem(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1174/buggy-version/src.main.java.com.smithsiciliano.checkout.VCheckout.java", "BodyUseAPI": [], "Fixed commit": "eaf7aa5d2ec397a9de64701a8e4394dae117038b", "Url": "https://api.github.com/repos/colinsmith87/FinalProject", "Date": "2017-05-08T20:35:18Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(summary.getText()))) { builder.add(summary); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3431/buggy-version/app.src.main.java.com.github.spelrawler.gamebase.ui.adapters.GamesAdapter.java", "BodyUseAPI": ["com.github.spelrawler.gamebase.mvp.models.TransitionBuilder.add(android.widget.TextView)"], "Fixed commit": "9b407183a3e529bbb3ece884d33490e7c6b91fe3", "Url": "https://api.github.com/repos/Spelcrawler/GameBase", "Date": "2017-05-30T22:18:35Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node) == null) { org.apache.logging.log4j.core.appender.AppenderSet.LOGGER.error(\"No node in AppenderSet {}\", this); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6241/buggy-version/log4j-core.src.main.java.org.apache.logging.log4j.core.appender.AppenderSet.java", "BodyUseAPI": [], "Fixed commit": "53ad0d7d32a8f042220c7be4744e3c0e5819c6a9", "Url": "https://api.github.com/repos/apache/logging-log4j2", "Date": "2016-09-20T19:11:08Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mPlayer.isPlaying()) seekTo(mSeekBar.getProgress());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5742/buggy-version/src.com.example.simplemusic.PlayActivity.java", "BodyUseAPI": [], "Fixed commit": "64f747b25a8ccbbd12d8f5854c1588c456123109", "Url": "https://api.github.com/repos/developerzjy/SimpleMusic", "Date": "2016-09-22T07:14:45Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.compile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((Pdt.split(result).length) < 2) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/64/buggy-version/Client.src.net.jlxip.prostremio.GetTorrents.java", "BodyUseAPI": [], "Fixed commit": "1d0d6fa77b2c67bf28cc65e79d59f2dc2796479e", "Url": "https://api.github.com/repos/jlxip/PROStremio", "Date": "2016-12-25T14:54:49Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileName == null) || (fileName.isEmpty())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1432/buggy-version/engine-mr.src.main.java.org.apache.kylin.engine.mr.common.AbstractHadoopJob.java", "BodyUseAPI": [], "Fixed commit": "2cf66a21bfa0c06bfd796de1d8466638bf96a896", "Url": "https://api.github.com/repos/ashikaumanga/kylin", "Date": "2016-09-26T01:16:09Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tonymanou.computerdb.util.Util.parsePositiveLong(req.getParameter(\"companyId\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (companyId == 0) { companyId = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2896/buggy-version/src.main.java.com.tonymanou.computerdb.controller.AddComputerController.java", "BodyUseAPI": [], "Fixed commit": "1c7e9d464ff34d9135631fc7410905cbbb6ea4ef", "Url": "https://api.github.com/repos/tonymanou/computer-database", "Date": "2015-01-29T12:46:23Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tonymanou.computerdb.util.Util.parsePositiveLong(req.getParameter(\"companyId\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (companyId == 0) { companyId = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2896/buggy-version/src.main.java.com.tonymanou.computerdb.controller.EditComputerController.java", "BodyUseAPI": [], "Fixed commit": "1c7e9d464ff34d9135631fc7410905cbbb6ea4ef", "Url": "https://api.github.com/repos/tonymanou/computer-database", "Date": "2015-01-29T12:46:23Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.HttpResponse.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (entity == null) return new byte[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4596/buggy-version/railo-java.railo-core.src.railo.commons.net.http.httpclient4.HTTPResponse4Impl.java", "BodyUseAPI": [], "Fixed commit": "f7e1a9e10e3a283f328f6ee9d57fcd381500c18e", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-01-11T14:08:46Z"},
{"Line": "=>1141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cytoscape.model.CyRow.getList(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (values == null) { continue; }else { for (java.lang.String str : row.getList(column, java.lang.String.class)) { residueList.add(str.trim()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4661/buggy-version/src.main.java.edu.ucsf.rbvi.structureViz2.internal.model.StructureManager.java", "BodyUseAPI": [], "Fixed commit": "776ca504e297346aa6ab456fd63534014619c729", "Url": "https://api.github.com/repos/RBVI/structureViz2", "Date": "2014-05-14T18:50:15Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cytoscape.model.CyRow.getList(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (values == null) { continue; }else { for (java.lang.String str : row.getList(column, java.lang.String.class)) { if (!(str.trim().equals(\"\"))) { cellList.add(str.trim()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4661/buggy-version/src.main.java.edu.ucsf.rbvi.structureViz2.internal.model.ChimUtils.java", "BodyUseAPI": [], "Fixed commit": "776ca504e297346aa6ab456fd63534014619c729", "Url": "https://api.github.com/repos/RBVI/structureViz2", "Date": "2014-05-14T18:50:15Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cytoscape.model.CyRow.getList(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (values == null) { continue; }else { for (java.lang.String str : values) { java.lang.String[] keyParts = edu.ucsf.rbvi.structureViz2.internal.model.ChimUtils.getResKeyParts(str.trim()); if ((keyParts[0]) != null) { cellList.add(keyParts[0]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4661/buggy-version/src.main.java.edu.ucsf.rbvi.structureViz2.internal.model.ChimUtils.java", "BodyUseAPI": [], "Fixed commit": "776ca504e297346aa6ab456fd63534014619c729", "Url": "https://api.github.com/repos/RBVI/structureViz2", "Date": "2014-05-14T18:50:15Z"},
{"Line": "=>2434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!fakePlayer) { recipientName = \"public\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2613/buggy-version/src.me.ryanhamshire.GriefPrevention.GriefPrevention.java", "BodyUseAPI": [], "Fixed commit": "ec7fc048e29e5ab714eb881f06b093cb07c9dd37", "Url": "https://api.github.com/repos/MineYourMind/GriefPrevention", "Date": "2015-10-17T23:10:15Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.janusproject.kernel.util.sizediterator.SizedIterator<org.janusproject.kernel.address.AgentAddress>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(aagent.equals(this.kernelAgentAddress))) { agents.add(aagent.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/46/buggy-version/janus-propose-demo.src.main.java.org.janusproject.demos.meetingscheduler.gui.MeetingSchedulor.java", "BodyUseAPI": ["org.janusproject.kernel.address.AgentAddress.getName()", "java.util.List<java.lang.String>.add(aagent.getName())"], "Fixed commit": "6d2b6df8852498d8c16c23d4b35522b95e3a518b", "Url": "https://api.github.com/repos/Lothiraldan/janus-acl-json", "Date": "2012-12-14T23:21:40Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.jobMap.size()) == 0) { java.lang.System.out.println(\"No Job in the system!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1466/buggy-version/MapReduceAndDFS.src.mapreduce.master.Master.java", "BodyUseAPI": [], "Fixed commit": "4a83e8ab73764d6532a56768de6fac9120f51727", "Url": "https://api.github.com/repos/Eagles2F/MapReduceAndDFS", "Date": "2014-11-22T04:30:47Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (page != null) MinecraftForge.EVENT_BUS.post(new micdoodle8.mods.galacticraft.api.recipe.SchematicEvent.Unlock(player, page));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6967/buggy-version/src.main.java.micdoodle8.mods.galacticraft.api.recipe.SchematicRegistry.java", "BodyUseAPI": ["MinecraftForge.EVENT_BUS.post(micdoodle8.mods.galacticraft.api.recipe.SchematicEvent.Unlock)"], "Fixed commit": "521f60a5c79f7ac889eb8acc82432e92811b4838", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2017-03-22T00:13:50Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskConfig.usesConvergenceCriterion()) { aggregator.reset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6706/buggy-version/pact.pact-runtime.src.main.java.eu.stratosphere.pact.runtime.iterative.task.IterationSynchronizationSinkTask.java", "BodyUseAPI": [], "Fixed commit": "c4a44d21c9a4f7b0a3553507cbad6f162b9f638d", "Url": "https://api.github.com/repos/dimalabs/stratosphere-iterations", "Date": "2012-11-13T17:17:42Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.catma.tag.TagDefinition.getPropertyDefinition(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (propDef.isSystemProperty()) { updateSystemPropertyBatch.bind(propDef.getFirstValue(), idGenerator.catmaIDToUUIDBytes(propDefUuid), userMarkupCollection.getId()); }else { updateUserPropertyBatch.bind(propDef.getName(), idGenerator.catmaIDToUUIDBytes(propDefUuid), userMarkupCollection.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1998/buggy-version/src.de.catma.indexer.db.TagReferenceIndexer.java", "BodyUseAPI": ["org.jooq.BatchBindStep.bind(propDef.getFirstValue(),idGenerator.catmaIDToUUIDBytes(propDefUuid),userMarkupCollection.getId())", "de.catma.tag.PropertyDefinition.getFirstValue()", "org.jooq.BatchBindStep.bind(propDef.getName(),idGenerator.catmaIDToUUIDBytes(propDefUuid),userMarkupCollection.getId())", "de.catma.tag.PropertyDefinition.getName()"], "Fixed commit": "5b3de3c0dc2383f153667ee0728814bdc9e7af4e", "Url": "https://api.github.com/repos/mpetris/catma", "Date": "2013-11-02T15:21:08Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (files == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2169/buggy-version/edu.buffalo.cse.irf14.Runner.java", "BodyUseAPI": [], "Fixed commit": "c5d03a20bbd23fe60c0f467b191fc5a0faff13a8", "Url": "https://api.github.com/repos/sai-srinath/newsindexer", "Date": "2014-08-29T21:52:24Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((email.isEmpty()) || (password.isEmpty())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7588/buggy-version/app.src.main.java.com.annguyen.android.parti.login.LoginPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "6a4c36613aa627e53a7e4b4818378a223f135275", "Url": "https://api.github.com/repos/ntban15/parti", "Date": "2017-06-22T14:31:27Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3355/buggy-version/Lab01App-build.Lab01App-code.src.main.java.ch.heigvd.res.lab01.impl.explorers.DFSFileExplorer.java", "BodyUseAPI": [], "Fixed commit": "345cd2dd297691839300d9dddb5b4a0aeba222f9", "Url": "https://api.github.com/repos/Celestius010/Teaching-HEIGVD-RES-2017-Labo-01", "Date": "2017-03-07T15:09:24Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mainPreferences.getProperty(\"BrimLines\")) == null) { mainPreferences.setProperty(\"BrimLines\", \"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5161/buggy-version/slicer.src.main.java.org.reprap.configuration.Preferences.java", "BodyUseAPI": [], "Fixed commit": "bb69c6059886f0dfaf324bb9cd223e28469cbfff", "Url": "https://api.github.com/repos/holgero/RepRapProSlicer", "Date": "2013-05-01T21:52:35Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (updates.size())) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1057/buggy-version/src.users.User.java", "BodyUseAPI": [], "Fixed commit": "834eea549fda8528df3745d2623e94338fdf6fd1", "Url": "https://api.github.com/repos/prostrykerz/quizProject", "Date": "2014-03-15T02:49:16Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ucar.unidata.gis.ProjectionImpl.latLonToProj(ucar.unidata.gis.LatLonPointImpl)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pt.getX()) == (pt.getX())) { if (((i == 0) || (displayProject.crossSeam(pt, lastW))) || ((lastW.x) != (lastW.x))) { path.moveTo(((float) (pt.getX())), ((float) (pt.getY()))); }else { path.lineTo(((float) (pt.getX())), ((float) (pt.getY()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1850/buggy-version/src.ucar.unidata.gis.AbstractGisFeature.java", "BodyUseAPI": ["ucar.unidata.gis.ProjectionPoint.getX()", "ucar.unidata.gis.ProjectionImpl.crossSeam(ucar.unidata.gis.ProjectionPoint,ucar.unidata.gis.ProjectionPointImpl)", "ucar.unidata.gis.ProjectionPoint.getY()", "java.awt.geom.GeneralPath.moveTo(((float) (pt.getX())),((float) (pt.getY())))", "ucar.unidata.gis.ProjectionPoint.getX()", "java.awt.geom.GeneralPath.lineTo(((float) (pt.getX())),((float) (pt.getY())))", "ucar.unidata.gis.ProjectionPoint.getY()"], "Fixed commit": "cdd71cd751bb7f011d50b588c1dacaf30c481b4f", "Url": "https://api.github.com/repos/Unidata/IDV", "Date": "2013-10-14T22:51:44Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (elternmithilfe != null) { maercheneinteilungenElternmithilfe.put(elternmithilfe, maercheneinteilung); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5584/buggy-version/src.main.java.ch.metzenthin.svm.domain.commands.CreateElternmithilfeListeCommand.java", "BodyUseAPI": ["java.util.Map<ch.metzenthin.svm.persistence.entities.Person, ch.metzenthin.svm.persistence.entities.Maercheneinteilung>.put(ch.metzenthin.svm.persistence.entities.Person,ch.metzenthin.svm.persistence.entities.Maercheneinteilung)"], "Fixed commit": "7639ea2b9c1bf42a75e8d050ff43914e702f5d23", "Url": "https://api.github.com/repos/marschraner/svm", "Date": "2015-11-12T23:57:22Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.files.size()) == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6563/buggy-version/src.main.java.org.act.dynproperty.impl.Level1.java", "BodyUseAPI": [], "Fixed commit": "19bb6e1c185eaff02faba502120f791cbfa63fa5", "Url": "https://api.github.com/repos/TGraphDB/temporal-storage", "Date": "2016-01-06T17:03:19Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((io.github.data4all.util.MapUtil.getBoundingBoxForPointList(geoPointList).getDiagonalLengthInMeters()) > 1) && (scaleFactor < 1)) || (((io.github.data4all.util.MapUtil.getBoundingBoxForPointList(geoPointList).getDiagonalLengthInMeters()) < 10000) && (scaleFactor > 1))) { super.setPoints(geoPointList); mapView.invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6481/buggy-version/src.main.java.io.github.data4all.model.map.MapPolygon.java", "BodyUseAPI": ["org.osmdroid.bonuspack.overlays.Polygon.setPoints(java.util.List<org.osmdroid.util.GeoPoint>)"], "Fixed commit": "56b64eea25649040bb1913fd130b7191acf18a94", "Url": "https://api.github.com/repos/Data4All/Data4All", "Date": "2015-04-14T14:58:45Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tier.isGrouped()) { for (java.lang.String grpVal : rowVals) { tier.addGroup(grpVal); } }else { tier.setGroup(0, rowval); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1053/buggy-version/src.main.java.ca.phon.csv2phon.CSVImporter.java", "BodyUseAPI": ["ca.phon.session.Tier<java.lang.String>.setGroup(int,java.lang.String)", "ca.phon.session.Tier<java.lang.String>.addGroup(java.lang.String)"], "Fixed commit": "9fb4780dac30dfba476f9a816537de5aa497dd7e", "Url": "https://api.github.com/repos/phon-ca/csv2phon", "Date": "2015-05-27T16:32:23Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xeneo.db.Activity.getTarget()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (tar != null) if (isExistingObject(tar.getObjectURI())) { jdbcTemplate.update(org.xeneo.db.JdbcActivityManager.UPDATE_OBJECT_BY_URI, tar.getObjectName(), tar.getObjectTypeURI(), tar.getObjectURI()); }else { jdbcTemplate.update(org.xeneo.db.JdbcActivityManager.ADD_OBJECT, tar.getObjectURI(), tar.getObjectName(), tar.getObjectTypeURI()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6770/buggy-version/src.main.java.org.xeneo.db.JdbcActivityManager.java", "BodyUseAPI": ["java.lang.Object.getObjectTypeURI()", "java.lang.Object.getObjectTypeURI()", "java.lang.Object.getObjectURI()", "java.lang.Object.getObjectURI()", "org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String,tar.getObjectName(),tar.getObjectTypeURI(),tar.getObjectURI())", "org.springframework.jdbc.core.JdbcTemplate.update(java.lang.String,tar.getObjectURI(),tar.getObjectName(),tar.getObjectTypeURI())", "java.lang.Object.getObjectName()", "java.lang.Object.getObjectURI()", "org.xeneo.db.JdbcActivityManager.isExistingObject(tar.getObjectURI())", "java.lang.Object.getObjectName()"], "Fixed commit": "6829c55466b7bf4508ceebdb519e186edd1f27b1", "Url": "https://api.github.com/repos/openmandragora/xeneo-db-impl", "Date": "2012-06-29T17:59:17Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flow.getKind().equals(FlowKind.SOURCE)) { connNext = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6349/buggy-version/org.osate.xtext.aadl2.src.org.osate.xtext.aadl2.validation.Aadl2JavaValidator.java", "BodyUseAPI": [], "Fixed commit": "c22c894481875697006d8f95e046ba3dc1414622", "Url": "https://api.github.com/repos/osate/osate2-core", "Date": "2013-03-11T02:16:08Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((categoryCode == null) || (displayName == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7773/buggy-version/retail-web-services.src.main.java.au.com.biztune.retail.service.ConfigCategoryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "2b9f1ea31e9fe00763560f4e512f8397c184bd33", "Url": "https://api.github.com/repos/aroudi/retail", "Date": "2017-09-14T07:20:41Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((str1.length()) != (str2.length())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6215/buggy-version/src.main.java.johny.crackingthecodinginterview.chapter1.Question2.java", "BodyUseAPI": [], "Fixed commit": "571bad1a437423ed07631a3b4777d03217c7877f", "Url": "https://api.github.com/repos/johnythomas/Cracking-The-Coding-Interview-6thEd", "Date": "2017-06-18T14:59:22Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.getAuthor().equals(event.getJDA().getSelfUser())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3610/buggy-version/FredBoat.src.main.java.fredboat.event.EventListenerBoat.java", "BodyUseAPI": [], "Fixed commit": "a60b28a77ffe488fd3a58cf9c5b9e01a67a11a4b", "Url": "https://api.github.com/repos/Frederikam/FredBoat", "Date": "2017-01-02T16:29:43Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clusterWeight[i]) <= 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7759/buggy-version/src.datamining.clustering.protoype.altopt.HardCMeansClusteringAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "2a5c000c878c9dc94e1513f0c8abb483beaf1ef0", "Url": "https://api.github.com/repos/Roland-Winkler/EDMOAL", "Date": "2013-05-01T13:07:07Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["medicalCardDTO.getPatient().getBloodType()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (bloodType != null) { int lastSymbol = (bloodType.length()) - 1; java.lang.String bloodGroup = bloodType.substring(0, lastSymbol); pdfService.addText(bloodGroup, pdfContentByte, 12, 105, 557); java.lang.String rh = bloodType.substring(lastSymbol); pdfService.addText(rh, pdfContentByte, 12, 340, 557); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1363/buggy-version/src.main.java.com.chetyrkin.medis.view.PdfView.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "ea7016d5f4cfcf722444510bc017cb6138a7afca", "Url": "https://api.github.com/repos/Antypko/medis", "Date": "2013-08-15T09:33:36Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["faultDetail.getAny().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(javax.xml.bind.JAXBIntrospector.isElement(detailObj))) { try { return new javax.xml.ws.soap.SOAPFaultException(javax.xml.soap.SOAPFactory.newInstance().createFault(message, fault.getFaultcode())); } catch (javax.xml.soap.SOAPException e) { throw new org.apache.camel.RuntimeCamelException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8747/buggy-version/components.camel-soap.src.main.java.org.apache.camel.dataformat.soap.Soap11DataFormatAdapter.java", "BodyUseAPI": [], "Fixed commit": "34edd2cd3edc83b10c4c9bae0518fcf8ca144735", "Url": "https://api.github.com/repos/linead/camel", "Date": "2017-04-02T23:32:13Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vn.edu.fu.veazy.core.response.GetReportDataResponse.getLessonId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (lessonId != null) { vn.edu.fu.veazy.core.response.GetLessonResponse lesson = lessonService.getLesson(lessonId, false); data.setLesonTitle(lesson.getLessonTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/350/buggy-version/WIP.Source.Veazy.src.main.java.vn.edu.fu.veazy.core.controller.ReportController.java", "BodyUseAPI": ["vn.edu.fu.veazy.core.service.LessonService.getLesson(java.lang.Integer,boolean)"], "Fixed commit": "3851c8ad14d13bd8e5f343808a2a69a79f86a95f", "Url": "https://api.github.com/repos/sangnvus/201605JS01", "Date": "2016-08-24T07:11:08Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["vn.edu.fu.veazy.core.response.GetReportDataResponse.getSenderId()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (senderId != null) { vn.edu.fu.veazy.core.model.UserModel user = userService.findUserById(senderId); data.setUsername(user.getUserName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/350/buggy-version/WIP.Source.Veazy.src.main.java.vn.edu.fu.veazy.core.controller.ReportController.java", "BodyUseAPI": ["vn.edu.fu.veazy.core.service.UserService.findUserById(java.lang.Integer)"], "Fixed commit": "3851c8ad14d13bd8e5f343808a2a69a79f86a95f", "Url": "https://api.github.com/repos/sangnvus/201605JS01", "Date": "2016-08-24T07:11:08Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ref.WeakReference<org.bouchot.plopoid.PostsUpdateService>.get()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mService == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8290/buggy-version/Plopoid.src.org.bouchot.plopoid.PostsUpdateService.java", "BodyUseAPI": [], "Fixed commit": "4bdfeaf2871ef219582e486e6066bac9cef6c463", "Url": "https://api.github.com/repos/lesensei/Plopoid", "Date": "2012-12-04T22:31:37Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1680/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "da0cf74156e9f72da3d915b0b2f389292a7fa64e", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getProbes_include()[0].equals(\"\"))) { for (int i = 0; i < (this.getProbes_include().length); i++) { include.put(this.getProbes_include()[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7995/buggy-version/scheduler.src.ripeAtmos.Ping.java", "BodyUseAPI": [], "Fixed commit": "89b481a4eea2bf822f3ab605b6da9418a12c9fff", "Url": "https://api.github.com/repos/Flugstein/ripe-atmos", "Date": "2016-08-19T16:00:22Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.getProbes_exclude()[0].equals(\"\"))) { for (int i = 0; i < (this.getProbes_exclude().length); i++) { exclude.put(this.getProbes_exclude()[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7995/buggy-version/scheduler.src.ripeAtmos.Ping.java", "BodyUseAPI": [], "Fixed commit": "89b481a4eea2bf822f3ab605b6da9418a12c9fff", "Url": "https://api.github.com/repos/Flugstein/ripe-atmos", "Date": "2016-08-19T16:00:22Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mapEntry.getEntity().getMatchingFlow(org.openlca.core.database.IDatabase)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (flow == null) return null; else return new org.openlca.io.maps.MapFactor(flow, mapEntry.getFactor());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/9183/buggy-version/olca-io.src.main.java.org.openlca.io.simapro.csv.input.FlowSync.java", "BodyUseAPI": [], "Fixed commit": "f046db6d9a528f9ad4340c58d6f2131537d9eb14", "Url": "https://api.github.com/repos/GreenDelta/olca-modules", "Date": "2014-03-20T15:40:24Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((actualSize) < (maxSize)) { result[(i + 1)] = result[i]; (actualSize)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/235/buggy-version/src.com.unicorn.tracking.SearchResult.java", "BodyUseAPI": [], "Fixed commit": "215595dca6bb95d357c752ead882d0afd5b9970e", "Url": "https://api.github.com/repos/xhuanl/UnicornTracking", "Date": "2017-07-02T01:40:28Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (argType instanceof java.lang.reflect.WildcardType) { java.lang.reflect.WildcardType wildcardType = ((java.lang.reflect.WildcardType) (argType)); java.lang.reflect.Type[] upperBounds = wildcardType.getUpperBounds(); if ((upperBounds.length) == 1) { argType = upperBounds[0]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8355/buggy-version/src.main.java.com.alibaba.fastjson.parser.ListTypeFieldDeserializer.java", "BodyUseAPI": [], "Fixed commit": "880ed384b043f54d1744405b20bdaf61f65ce015", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-01-16T13:44:23Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (preferredPresenter != null) { result = preferredPresenter.onSubMenuSelected(subMenu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5635/buggy-version/core.java.com.android.internal.view.menu.MenuBuilder.java", "BodyUseAPI": ["com.android.internal.view.menu.MenuPresenter.onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)"], "Fixed commit": "3a153c0de271a004710e5ac545c48778f7e51b12", "Url": "https://api.github.com/repos/JAOSP/aosp_platform_frameworks_base", "Date": "2014-03-11T01:22:10Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(value.getTableName())) { inputs.put(name, java.util.Arrays.asList(params.get(friendlyName).toString().replace(\"\\\"\", \"\"))); }else { inputs.put(name, java.util.Arrays.asList(params.get(friendlyName).toString().replace(\"\\\"\", \"\").split(\",\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2475/buggy-version/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.customservices.CustomServicesService.java", "BodyUseAPI": [], "Fixed commit": "dc0d91003efb8e3be7cb911e32d6a0ecdf32470e", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-04-28T19:03:11Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((synth.SimpleTrack.SimpleSound) (it.next())).play(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((int) (retVal[i])) + ((int) (r[i]))) > (java.lang.Short.MAX_VALUE)) retVal[i] = java.lang.Short.MAX_VALUE; else if ((((int) (retVal[i])) + ((int) (r[i]))) < (-(java.lang.Short.MAX_VALUE))) retVal[i] = -(java.lang.Short.MAX_VALUE); else retVal[i] += r[i];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6009/buggy-version/src.synth.SimpleTrack.java", "BodyUseAPI": [], "Fixed commit": "9fc0e8202f21e0ead39e145591bc7179c6dfd34e", "Url": "https://api.github.com/repos/sitronTe/TinySynth", "Date": "2012-12-26T23:26:12Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getLobby()) != null) { removeFromLobby(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4141/buggy-version/src.Server.src.LobbyManager.java", "BodyUseAPI": ["LobbyManager.removeFromLobby(Player)"], "Fixed commit": "0860fc4dc07d5a47210284d93d7ecfca614246b5", "Url": "https://api.github.com/repos/pligenza/PPZ_Project", "Date": "2017-06-06T06:41:53Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (initDate == null) { initDate = new java.util.Date(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/739/buggy-version/src.main.java.org.rapla.client.gwt.components.DateComponent.java", "BodyUseAPI": [], "Fixed commit": "3dd55bc43869804605e749f2ccc74efd160896ea", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2015-08-05T11:32:05Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wyil.transforms.BackPropagation.Env.get(code.slot)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (iter == (Type.T_VOID)) { iter = code.type; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/47/buggy-version/src.wyil.transforms.BackPropagation.java", "BodyUseAPI": [], "Fixed commit": "b5b243f24f6997f7a80fc9687562718460a5c015", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-12T02:51:23Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(plugin.creatingPlayer.isFinish())) { event.setCancelled(true); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/864/buggy-version/src.de.lordvader.Listeners.SignInteractListeners.java", "BodyUseAPI": [], "Fixed commit": "2d88a0f731854f8da267a482968e0253377226d4", "Url": "https://api.github.com/repos/lordvaderde/SignPlugin", "Date": "2016-03-13T18:34:56Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mCamera)) { if (null != (mCameraTextureView)) { mCamera.stopPreview(); } mCamera.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6451/buggy-version/vector.src.main.java.im.vector.activity.VectorMediasPickerActivity.java", "BodyUseAPI": [], "Fixed commit": "7514c767376d803a0a094606e1aa6603a8644217", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-06-09T08:57:31Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Game.Game.state.name) == null) Game.Game.state.name = Main.Azmata.name;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2827/buggy-version/src.Game.Game.java", "BodyUseAPI": [], "Fixed commit": "432939e2d58296b13ec60bd86d28607263c61fc2", "Url": "https://api.github.com/repos/Jeffmagma/Azmata", "Date": "2017-06-06T15:01:20Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!((isOperandInput(inputEntered)) || (isSubOperandInput(inputEntered)))) && (reset)) { expression = new java.lang.StringBuilder(inputEntered); refreshOutput(); }else if ((isSubOperandInput(inputEntered)) || (isConstantInput(inputEntered))) { if (!((isOperandInput(prevOp)) || (isSubOperandInput(prevOp)))) { expression.append(com.sensei.easycalc.core.Symbols.symbol(com.sensei.easycalc.core.Symbols.MULTIPLY)); } expression.append(inputEntered); refreshOutput(); }else { if (isConstantInput(prevOp)) { expression.append(com.sensei.easycalc.core.Symbols.symbol(com.sensei.easycalc.core.Symbols.MULTIPLY)); } expression.append(inputEntered); refreshOutput(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1492/buggy-version/app.src.main.java.com.sensei.easycalc.core.ExpressionController.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "com.sensei.easycalc.core.ExpressionController.isSubOperandInput(java.lang.String)", "com.sensei.easycalc.core.ExpressionController.isConstantInput(java.lang.String)"], "Fixed commit": "1f99acf061847236c2b56092653afc0aaa5d3fbc", "Url": "https://api.github.com/repos/Aniruddha-Deb/EasyCalc-android", "Date": "2017-06-01T14:21:49Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConstantInput(prevOp)) { expression.append(com.sensei.easycalc.core.Symbols.symbol(com.sensei.easycalc.core.Symbols.MULTIPLY)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1492/buggy-version/app.src.main.java.com.sensei.easycalc.core.ExpressionController.java", "BodyUseAPI": [], "Fixed commit": "1f99acf061847236c2b56092653afc0aaa5d3fbc", "Url": "https://api.github.com/repos/Aniruddha-Deb/EasyCalc-android", "Date": "2017-06-01T14:21:49Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (programs.isEmpty()) { return sessionFactory.getCurrentSession().createCriteria(org.openmrs.PatientProgram.class).createAlias(\"patient\", \"p\").setProjection(org.hibernate.criterion.Projections.distinct(org.hibernate.criterion.Projections.property(\"p.patientId\"))).list(); }else { org.hibernate.criterion.DetachedCriteria subquery = org.hibernate.criterion.DetachedCriteria.forClass(org.openmrs.PatientProgram.class).add(org.hibernate.criterion.Restrictions.in(\"program\", programs)).setProjection(org.hibernate.criterion.Projections.distinct(org.hibernate.criterion.Projections.property(\"patient\"))); return sessionFactory.getCurrentSession().createCriteria(org.openmrs.PatientProgram.class).add(org.hibernate.criterion.Subqueries.propertyNotIn(\"patient\", subquery)).createAlias(\"patient\", \"p\").setProjection(org.hibernate.criterion.Projections.distinct(org.hibernate.criterion.Projections.property(\"p.patientId\"))).list(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2121/buggy-version/api.src.main.java.org.openmrs.module.patientaccesscontrol.api.db.hibernate.HibernateRoleProgramDAO.java", "BodyUseAPI": ["org.hibernate.criterion.DetachedCriteria.forClass(org.openmrs.PatientProgram.class).add(org.hibernate.criterion.Restrictions.in(\"program\", programs))", "org.hibernate.criterion.DetachedCriteria.forClass(org.openmrs.PatientProgram.class).add(org.hibernate.criterion.Restrictions.in(\"program\", programs)).setProjection(org.hibernate.criterion.Projections.distinct(org.hibernate.criterion.Projections.property(\"patient\")))", "org.hibernate.criterion.Restrictions.in(java.lang.String,java.util.Collection<org.openmrs.Program>)"], "Fixed commit": "9f89a3ef411506aa66dbec4cd78ec6e7213cc557", "Url": "https://api.github.com/repos/wesleysee/openmrs-module-patientaccesscontrol", "Date": "2014-04-28T15:24:02Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.jackson.JsonParser.readValueAsTree()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (node == null) { throw new java.io.IOException(\"Error retrieving JSON tree node.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/209/buggy-version/server.src.pctelelog.Client.java", "BodyUseAPI": [], "Fixed commit": "4949a507ca7c22026d64ae14412305bedefd95cd", "Url": "https://api.github.com/repos/Kenishi/DroidNavi", "Date": "2014-06-01T08:18:33Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (defaultIfEmpty == null) { print(ShellColor.BOLD, ((\" \" + count) + \" - (none)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2898/buggy-version/shell.src.main.java.org.jboss.seam.forge.shell.AbstractShellPrompt.java", "BodyUseAPI": [], "Fixed commit": "e60450ea07c083bd259a0cadeca7dd48056c0ef0", "Url": "https://api.github.com/repos/mikebrock/seam-forge", "Date": "2011-04-16T18:28:51Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((entry != null) && (entry.equals(defaultIfEmpty))) { print(ShellColor.BOLD, ((((\" \" + count) + \" - [\") + entry) + \"]\")); }else if (entry != null) { print(((((\" \" + count) + \" - [\") + entry) + \"]\")); }else if (defaultIfEmpty == null) { print(ShellColor.BOLD, ((\" \" + count) + \" - (none)\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2898/buggy-version/shell.src.main.java.org.jboss.seam.forge.shell.AbstractShellPrompt.java", "BodyUseAPI": ["org.jboss.seam.forge.shell.AbstractShellPrompt.print(java.lang.String)", "org.jboss.seam.forge.shell.AbstractShellPrompt.print(ShellColor.BOLD,java.lang.String)"], "Fixed commit": "e60450ea07c083bd259a0cadeca7dd48056c0ef0", "Url": "https://api.github.com/repos/mikebrock/seam-forge", "Date": "2011-04-16T18:28:51Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parent.getChildViews()) == null) this.colorMapMenu.setEnabled((!(heatMapModel.isGlobalScaling())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8305/buggy-version/de.mpicbg.knime.hcs.base.src.de.mpicbg.knime.hcs.base.heatmap.menu.ViewMenu.java", "BodyUseAPI": [], "Fixed commit": "b4c0c76773f09ae616587927db8a13587cb60a0b", "Url": "https://api.github.com/repos/knime-mpicbg/HCS-Tools", "Date": "2015-03-26T07:47:37Z"},
{"Line": "=>1764", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((element.eContainer()) == null) { if (element instanceof org.osate.xtext.aadl2.properties.linking.Namespace) return ((org.osate.xtext.aadl2.properties.linking.Namespace) (element)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3965/buggy-version/org.osate.xtext.aadl2.properties.src.org.osate.xtext.aadl2.properties.linking.PropertiesLinkingService.java", "BodyUseAPI": [], "Fixed commit": "fc43c7ddf15981981044dbbb3e5763511bac9fb2", "Url": "https://api.github.com/repos/reteprelief/osate2-core", "Date": "2011-10-24T18:07:04Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osate.xtext.aadl2.properties.linking.PropertiesLinkingService.getContainingPackageSection(org.eclipse.emf.ecore.EObject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (scope == null) scope = getContainingPropertySet(context);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3965/buggy-version/org.osate.xtext.aadl2.properties.src.org.osate.xtext.aadl2.properties.linking.PropertiesLinkingService.java", "BodyUseAPI": [], "Fixed commit": "fc43c7ddf15981981044dbbb3e5763511bac9fb2", "Url": "https://api.github.com/repos/reteprelief/osate2-core", "Date": "2011-10-24T18:07:04Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scan) { if (leDevicesScan) leDevicesScan = sk.henrichg.phoneprofilesplus.ScannerService.isLocationEnabled(context, scanType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7260/buggy-version/phoneProfilesPlus.src.main.java.sk.henrichg.phoneprofilesplus.ScannerService.java", "BodyUseAPI": [], "Fixed commit": "6eb8e50439f172e95b4f233772d0b243ffb70cbe", "Url": "https://api.github.com/repos/henrichg/PhoneProfilesPlus", "Date": "2016-02-10T13:12:07Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scan) { if (wifiEventsExists) scan = sk.henrichg.phoneprofilesplus.ScannerService.isLocationEnabled(context, scanType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7260/buggy-version/phoneProfilesPlus.src.main.java.sk.henrichg.phoneprofilesplus.ScannerService.java", "BodyUseAPI": [], "Fixed commit": "6eb8e50439f172e95b4f233772d0b243ffb70cbe", "Url": "https://api.github.com/repos/henrichg/PhoneProfilesPlus", "Date": "2016-02-10T13:12:07Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.session.getRequirements().size()) > 0) { this.session.activate(); session.save(); edu.wpi.cs.wpisuitetcw.modules.planningpoker.view.ViewEventManager.getInstance().removeTab(panel); edu.wpi.cs.wpisuitetcw.modules.planningpoker.view.ViewEventManager.getInstance().viewSession(session); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7651/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetcw.modules.planningpoker.controllers.session.ActivateSessionController.java", "BodyUseAPI": ["edu.wpi.cs.wpisuitetcw.modules.planningpoker.models.PlanningPokerSession.activate()"], "Fixed commit": "2962d6f39646aa8b751b9a7c7272f48afb023763", "Url": "https://api.github.com/repos/Team-Combat-Wombat/wpi-suite-tcw", "Date": "2014-04-22T22:45:01Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((val) == (N)) val = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/495/buggy-version/app.src.main.java.byuie499.auto_nvs.Xlo.java", "BodyUseAPI": [], "Fixed commit": "257eaa73f49cb46b1b358ac734a8717f7f8fb610", "Url": "https://api.github.com/repos/alexsmu/Android_NVS", "Date": "2016-05-23T08:33:20Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (EntityAnalysisMRJob.runOnCluster) { inputFile = java.nio.file.Paths.get(com.eduonix.hadoop.partone.RunClusterFlow.projectRootPath, com.eduonix.hadoop.partone.RunClusterFlow.mapped_data); }else { inputFile = java.nio.file.Paths.get(com.eduonix.hadoop.partone.RunClusterFlow.projectRootPath, \"output\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5057/buggy-version/src.main.java.com.eduonix.hadoop.partone.RunClusterFlow.java", "BodyUseAPI": [], "Fixed commit": "c561191122900ccb76e88e2bde9cb3afa1e1a539", "Url": "https://api.github.com/repos/nsavageJVM/cluster-mapred", "Date": "2015-07-16T19:44:00Z"},
{"Line": "=>1264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mHandler) != null) { mHandler.removeCallbacks(mAutoFullscreenRunnable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/330/buggy-version/src.com.android.incallui.VideoCallPresenter.java", "BodyUseAPI": [], "Fixed commit": "2c660b0a2295f555a5ce166c4caaf1f381e4cbe2", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-InCallUI", "Date": "2016-05-19T03:03:33Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<be.howest.nmct.hellocal.models.ProfileDetails>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(profile.getPhotoUri().isEmpty())) com.squareup.picasso.Picasso.with(getActivity().getApplicationContext()).load(profile.getPhotoUri()).into(holder.imageViewPhoto);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6769/buggy-version/app.src.main.java.be.howest.nmct.hellocal.InboxFragment.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(getActivity().getApplicationContext()).load(profile.getPhotoUri())", "be.howest.nmct.hellocal.models.ProfileDetails.getPhotoUri()", "com.squareup.picasso.Picasso.with(getActivity().getApplicationContext()).load(profile.getPhotoUri()).into(android.widget.ImageView)"], "Fixed commit": "dc5f83e6ec9f255a3830e103a167a876fd34a0fc", "Url": "https://api.github.com/repos/FBeuselinck/HelLOCAL", "Date": "2016-12-05T11:13:59Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((choices.size()) > 1) && ((choices.get(((choices.size()) - 1))) != (choices.get(((choices.size()) - 2))))) { java.lang.System.out.println(\"WHAT?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2573/buggy-version/src.environment.Agent.java", "BodyUseAPI": [], "Fixed commit": "972cce53480665dd65639ad2bd7dce89f6617784", "Url": "https://api.github.com/repos/Siretu/Neural-Networks", "Date": "2015-03-04T00:46:44Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.padule.cospradar.data.Charactor.getLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((location.getLatitude()) == 0.0F) && ((location.getLatitude()) == 0.0F)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3273/buggy-version/src.com.padule.cospradar.adapter.CharactorsAdapter.java", "BodyUseAPI": [], "Fixed commit": "05fbb6856b104d0874ed09314292ef22f0080425", "Url": "https://api.github.com/repos/padule/cospradar_android", "Date": "2014-07-16T02:41:01Z"},
{"Line": "=>1367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasPlusSign) { value = java.lang.Integer.parseInt(text.substring((position + 1), (position += length))); }else { value = java.lang.Integer.parseInt(text.substring(position, (position += length))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8078/buggy-version/src.main.java.org.joda.time.format.DateTimeFormatterBuilder.java", "BodyUseAPI": [], "Fixed commit": "4d7255901c897a8573e1a75c9e6927103de20ba2", "Url": "https://api.github.com/repos/hshankar/joda-time", "Date": "2013-11-13T12:18:08Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1522/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "9f04fda5b09d589a122151de54369f535e77e9fc", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>1226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fromReplication) java.lang.System.out.println(\"take MIRRRRRRRRRRRRRRRROR\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3609/buggy-version/xap-core.xap-datagrid.src.main.java.com.gigaspaces.internal.server.space.SpaceEngine.java", "BodyUseAPI": [], "Fixed commit": "5f9129ca0ffb72a1f8bc326da3d9fe1c65a36e1a", "Url": "https://api.github.com/repos/xap/xap", "Date": "2017-01-18T13:39:38Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((getSurroundingForm(component, true)) == null) || (!(isHorizontalForm(component)))) { throw new javax.faces.FacesException((((((\"The \" + (FormGroup.COMPONENT_TYPE)) + \" component with the id \") + (component.getClientId())) + \" must be inside an horizontal \") + (net.bootsfaces.component.form.Form.COMPONENT_TYPE))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7076/buggy-version/src.main.java.net.bootsfaces.component.formGroup.FormGroupRenderer.java", "BodyUseAPI": ["javax.faces.component.UIComponent.getClientId()"], "Fixed commit": "f7425d52b136dfd0b02c93c36ba07f0a25f2688a", "Url": "https://api.github.com/repos/mtvweb/BootsFaces-OSP", "Date": "2017-04-08T15:42:11Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(st.hasMoreTokens())) { throw new java.lang.IllegalArgumentException(\"Attempt to scan invalid header\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/510/buggy-version/src.com.meterware.httpunit.HttpUnitUtils.java", "BodyUseAPI": [], "Fixed commit": "218890b5a994fa62e2f7e146b303bc8365c3183f", "Url": "https://api.github.com/repos/emopers/httpunit", "Date": "2015-10-21T18:30:45Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tickSpace < 10) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5425/buggy-version/xchart.src.main.java.com.xeiam.xchart.internal.chartpart.AxisTickDateCalculator.java", "BodyUseAPI": [], "Fixed commit": "1aa2104c9b9ae3cd94226d0a234cfdff475f17be", "Url": "https://api.github.com/repos/knowm/XChart", "Date": "2015-10-02T22:19:08Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (finish != null) { finish.run(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8629/buggy-version/app.src.main.java.com.gustavoparreira.realtimetile.Player.java", "BodyUseAPI": ["co.realtime.storage.ext.OnItemSnapshot.run(<nulltype>)"], "Fixed commit": "2d632c8195c76527efeffdb82e21fec2234fb4bf", "Url": "https://api.github.com/repos/jparreira/memorygame", "Date": "2015-01-07T01:00:17Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((path.indexOf(\".\")) == (-1)) path += \".\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1915/buggy-version/src.Base.java", "BodyUseAPI": [], "Fixed commit": "806c6d2410dba94107311dc2322af697562a3d1a", "Url": "https://api.github.com/repos/jschwel1/HF_Schedule", "Date": "2016-08-15T14:37:51Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((path.indexOf(\".\")) == (-1)) path += \".\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1915/buggy-version/src.Base.java", "BodyUseAPI": [], "Fixed commit": "806c6d2410dba94107311dc2322af697562a3d1a", "Url": "https://api.github.com/repos/jschwel1/HF_Schedule", "Date": "2016-08-15T14:37:51Z"},
{"Line": "=>1177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((deployUrl) == null) { throw new org.freemarker.docgen.DocgenException(((\"The \\\"\" + (org.freemarker.docgen.Transform.SETTING_DEPLOY_URL)) + \"\\\" setting wasn\\'t specified\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7349/buggy-version/src.main.org.freemarker.docgen.Transform.java", "BodyUseAPI": [], "Fixed commit": "05ddf9339cbcb80fd021d94a2c7ec0b37fce6825", "Url": "https://api.github.com/repos/apache/freemarker-docgen", "Date": "2017-01-06T14:21:12Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDeleteEmptyDirectory()) { java.io.File srcDirectory; if ((org.apache.commons.lang.StringUtils.isEmpty(getWildcard())) && (org.apache.commons.lang.StringUtils.isEmpty(getWildcardSessionKey()))) { srcDirectory = srcFile.getParentFile(); }else { srcDirectory = srcFile.getAbsoluteFile(); } log.debug(((((\"srcFile [\" + (srcFile.getPath())) + \"] srcDirectory [\") + (srcDirectory.getPath())) + \"]\")); if (srcDirectory.exists()) { if ((srcDirectory.list().length) == 0) { boolean success = srcDirectory.delete(); if (!success) { log.warn(((((getLogPrefix(session)) + \"could not delete directory [\") + (srcDirectory.getAbsolutePath())) + \"]\")); }else { log.info(((((getLogPrefix(session)) + \"deleted directory [\") + (srcDirectory.getAbsolutePath())) + \"]\")); } }else { log.info(((((getLogPrefix(session)) + \"directory [\") + (srcDirectory.getAbsolutePath())) + \"] is not empty\")); } }else { log.info(((((getLogPrefix(session)) + \"directory [\") + (srcDirectory.getAbsolutePath())) + \"] doesn't exist\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3353/buggy-version/core.src.main.java.nl.nn.adapterframework.pipes.MoveFilePipe.java", "BodyUseAPI": [], "Fixed commit": "0d074f1f3d13cca719492d0af844c786baa7855e", "Url": "https://api.github.com/repos/ibissource/iaf", "Date": "2014-06-27T09:56:10Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentText) != null) json.writeValue(\"currentText\", currentText);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4907/buggy-version/blade-engine.src.com.bladecoder.engine.model.TextManager.java", "BodyUseAPI": [], "Fixed commit": "5817b5d3daf3cc312e19702bf43132c304c737d9", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2017-03-28T12:19:11Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (TransactionStatus.NOT_ACTIVE.equals(txn.getStatus())) { txn.begin(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6803/buggy-version/api-core-cms.src.main.java.gov.ca.cwds.data.BaseDaoImpl.java", "BodyUseAPI": ["org.hibernate.Transaction.begin()"], "Fixed commit": "7d1a2e73707667b3397cc1a34ee41133e5bdcc06", "Url": "https://api.github.com/repos/ca-cwds/api-core", "Date": "2017-09-27T22:07:17Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTransparentViewHeight()) <= 0) { return super.onInterceptTouchEvent(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3049/buggy-version/library.src.main.java.com.klinker.android.sliding.MultiShrinkScroller.java", "BodyUseAPI": [], "Fixed commit": "ee6efb900313464ea03cfcec334f9b3a5a27a8e2", "Url": "https://api.github.com/repos/jiangecho/android-slidingactivity", "Date": "2016-04-21T02:51:37Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((remainder.compareTo(java.math.BigInteger.ZERO)) == 0) { index = index.subtract(java.math.BigInteger.ONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/860/buggy-version/convertToSequence.java", "BodyUseAPI": [], "Fixed commit": "616e9a6f7761f4c41e1846d02321fbd8a3eb2e79", "Url": "https://api.github.com/repos/volkovasystems/convertToSequence", "Date": "2014-07-07T04:22:36Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.state) == \"pursuePlayer\") || ((this.state) == \"pursueSurvivor\")) speed = chasingSpeed; else speed = walkingSpeed;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7786/buggy-version/src.ZombieEntity.java", "BodyUseAPI": [], "Fixed commit": "ca30a12cca6caed0958aaf0bd3d7a4a9ab600186", "Url": "https://api.github.com/repos/huderlem/zombie-jam", "Date": "2012-09-17T03:29:03Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numOrders) < 0) { numOrders = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3145/buggy-version/android.Mapingo.app.src.main.java.com.debkbanerji.mapingo.MakeOrderActivity.java", "BodyUseAPI": [], "Fixed commit": "cee1a9a6769a91c82ce68ca0f21aaeb257f5f1e7", "Url": "https://api.github.com/repos/mcw0805/mapingo", "Date": "2017-03-26T07:19:17Z"},
{"Line": "=>3218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.hadoop.hive.metastore.newms.ThriftRPC.dm.getDeviceInfo(to_devid)) == null) { org.apache.hadoop.hive.metastore.newms.ThriftRPC.LOG.error(((\"Target device \" + to_devid) + \" doesn't exist.\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8309/buggy-version/src.metastore.src.java.org.apache.hadoop.hive.metastore.newms.ThriftRPC.java", "BodyUseAPI": ["org.apache.commons.logging.Log.error(java.lang.String)"], "Fixed commit": "82adc362a6cf73eeeb7679c8ada6a0139d68c50f", "Url": "https://api.github.com/repos/bd-group/metastore", "Date": "2016-01-12T09:08:11Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numSegments) > 0) { segmentNumber = ((int) (response.getHeader().getMutable().getSegmentNumber().getLongValue())); lastSegment = response.getHeader().getMutable().getSegmentNumber().getLastSegment(); transactionKey = response.getBody().getDataTransfer().getDataEncryptionInfo().getTransactionKey(); orderData = response.getBody().getDataTransfer().getOrderData().getByteArrayValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3313/buggy-version/axelor-bank-payment.src.main.java.com.axelor.apps.bank.payment.ebics.xml.DInitializationResponseElement.java", "BodyUseAPI": [], "Fixed commit": "db7ac16f00f6780fcfd48c54592ba815d57982ad", "Url": "https://api.github.com/repos/ale-axelor/axelor-business-suite", "Date": "2017-03-06T12:03:52Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (txt == null) { txt = \"N/A\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1529/buggy-version/src.main.java.IMSApp.Ops.java", "BodyUseAPI": [], "Fixed commit": "7084da3b62455f1f1a7a61041411a47d83d0b5e5", "Url": "https://api.github.com/repos/amyer3/Inv_mgmt_app", "Date": "2017-11-03T03:48:15Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWidget().getNumberOfSeries()) == 0) { seriesAndDataLabelsRendered = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/303/buggy-version/addon.src.main.java.com.vaadin.addon.charts.shared.ChartConnector.java", "BodyUseAPI": [], "Fixed commit": "4f67efc15a7bf8f20c7ec448dda815cef1d47d50", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsOverlay.getSeries()) != null) { return jsOverlay.getSeries().length(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/303/buggy-version/addon.src.main.java.com.vaadin.addon.charts.client.ui.HighchartWidget.java", "BodyUseAPI": ["com.vaadin.addon.charts.client.ui.HighchartJsOverlay.getSeries()", "jsOverlay.getSeries().length()"], "Fixed commit": "4f67efc15a7bf8f20c7ec448dda815cef1d47d50", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (designErrors.isEmpty()) design.fillInUnusedPackages(designErrors);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2262/buggy-version/trunk.ant-contrib.src.java.net.sf.antcontrib.design.VerifyDesignDelegate.java", "BodyUseAPI": ["net.sf.antcontrib.design.Design.fillInUnusedPackages(java.util.Vector)"], "Fixed commit": "cb543aeff7482e1654743ab9efdcf4b35164374e", "Url": "https://api.github.com/repos/crazy-max/ant-contrib", "Date": "2006-10-25T21:22:43Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((track) != null) { if (track.getTrackPoints().isEmpty()) { track = null; }else { track = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8130/buggy-version/src.main.java.io.github.data4all.service.GPSservice.java", "BodyUseAPI": [], "Fixed commit": "decd70fb7f7003aa64b0dfe66e2cca6397701225", "Url": "https://api.github.com/repos/Data4All/Data4All", "Date": "2015-02-20T13:28:48Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oldPipelineId) != 0) source.show(oldPipelineId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3738/buggy-version/frontend.src.main.java.cz.cuni.mff.xrg.odcs.frontend.gui.components.SchedulePipeline.java", "BodyUseAPI": [], "Fixed commit": "bfdf4b76f403924ea0a3e4d558c278bd14180431", "Url": "https://api.github.com/repos/mff-uk/ODCS", "Date": "2013-12-15T15:18:53Z"},
{"Line": "=>2012", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cgVolume.getPersonality().equalsIgnoreCase(PersonalityTypes.METADATA.toString())) && productionCopy) { return cgVolume.getRpCopyName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5589/buggy-version/controllersvc.src.main.java.com.emc.storageos.protectioncontroller.impl.recoverpoint.RPHelper.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.Volume.getRpCopyName()"], "Fixed commit": "64093bb4a926eadf93fc089967260ee8dace4457", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-04-12T06:06:16Z"},
{"Line": "=>964", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (component instanceof org.shaolin.bmdp.datamodel.page.UITabPaneType) { out.write(\" ,items: [\"); java.util.List<org.shaolin.bmdp.datamodel.page.UITabPaneItemType> tabs = ((org.shaolin.bmdp.datamodel.page.UITabPaneType) (component)).getTabs(); for (org.shaolin.bmdp.datamodel.page.UITabPaneItemType t : tabs) { out.write(((\"\\\"\" + (t.getUiid())) + \"\\\",\")); } out.write(\"\\\"\\\"]\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3207/buggy-version/modules.designtime.src.main.java.org.shaolin.bmdp.designtime.page.UIFormJSGenerator0.java", "BodyUseAPI": [], "Fixed commit": "6da854e8068ae11b2e040c4ca19f8135484bd8bc", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2015-11-10T12:47:51Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (concepts.isEmpty()) return concepts;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3013/buggy-version/reformulation-core.src.main.java.it.unibz.krdb.obda.owlrefplatform.core.reformulation.TreeWitnessGenerator.java", "BodyUseAPI": [], "Fixed commit": "6a4edf93fb1ba979706aa73d6f5c9f12cefe2b78", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2013-11-19T00:24:43Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getInt(java.lang.String)", "game.logic.Game.getBoard()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (troops >= (board.getCountry(from).getTroops())) { throw new game.objects.exceptions.CommandException(\"Command: MOVE. Source country does not have enough troops to move.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6308/buggy-version/src.java.game.logic.Commands.java", "BodyUseAPI": [], "Fixed commit": "c8d99a7bb31401d2151d4226cb9f0ee28ebbb0f3", "Url": "https://api.github.com/repos/HDXconnor/Risque", "Date": "2014-10-16T11:57:14Z"},
{"Line": "=>1553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((com.magestore.app.pos.panel.CheckoutDetailPanel) (mDetailView)).getVisibility()) == (android.view.View.VISIBLE)) { if (!isShow) { ((com.magestore.app.pos.panel.CheckoutListPanel) (mView)).showButtonDiscount(isShow); } }else { ((com.magestore.app.pos.panel.CheckoutListPanel) (mView)).showButtonDiscount(isShow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3518/buggy-version/AppPOS.src.main.java.com.magestore.app.pos.controller.CheckoutListController.java", "BodyUseAPI": [], "Fixed commit": "fd59f41b69a3da0846f811d15bb6743624ebb08a", "Url": "https://api.github.com/repos/miketrueplus/MagestorePOSAndroid", "Date": "2017-04-25T06:27:22Z"},
{"Line": "=>978", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.magestore.app.lib.model.checkout.Checkout.getCheckoutShipping()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((listShipping != null) && ((listShipping.size()) > 0)) { bindDataToShippingMethodList(listShipping); autoSelectShipping(listShipping); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3518/buggy-version/AppPOS.src.main.java.com.magestore.app.pos.controller.CheckoutListController.java", "BodyUseAPI": ["com.magestore.app.pos.controller.CheckoutListController.autoSelectShipping(java.util.List<com.magestore.app.lib.model.checkout.CheckoutShipping>)", "com.magestore.app.pos.controller.CheckoutListController.bindDataToShippingMethodList(java.util.List<com.magestore.app.lib.model.checkout.CheckoutShipping>)"], "Fixed commit": "fd59f41b69a3da0846f811d15bb6743624ebb08a", "Url": "https://api.github.com/repos/miketrueplus/MagestorePOSAndroid", "Date": "2017-04-25T06:27:22Z"},
{"Line": "=>750", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isNumeric(x))) { x = (\"^\" + x) + \"^\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7016/buggy-version/src.com.ppm.integration.agilesdk.connector.octane.client.ClientPublicAPI.java", "BodyUseAPI": [], "Fixed commit": "8e954a4f3c1976002b92c6dcec94fd0a06e65d73", "Url": "https://api.github.com/repos/MicroFocus/ppm-octane-connector", "Date": "2017-11-01T03:42:46Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ab.demo.qlearning.ProblemState.getShootableObjects()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((shootableObjects.size()) - 1) < nextAction) { nextAction = (shootableObjects.size()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3574/buggy-version/src.ab.demo.ReinforcementLearningAgentStandalone.java", "BodyUseAPI": ["java.util.List<ab.vision.ABObject>.size()"], "Fixed commit": "0e4fb16eccb13d1b7ba651e62994b5378b3d9563", "Url": "https://api.github.com/repos/jgonsior/AngryProgrammers", "Date": "2017-01-02T13:02:26Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userID >= 1) { ca.ualberta.app.models.AuthorList.authorList.get((userID - 1)).getUserName(); }else { ca.ualberta.app.models.AuthorList.authorList.get(0).getUserName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3406/buggy-version/App.src.ca.ualberta.app.models.AuthorList.java", "BodyUseAPI": ["ca.ualberta.app.models.AuthorList.authorList.get((userID - 1)).getUserName()", "java.util.ArrayList<ca.ualberta.app.models.Author>.get(int)"], "Fixed commit": "f86e1222641ae91210afb22b1b4df8843e0960a7", "Url": "https://api.github.com/repos/CMPUT301F14T06/Team06MapleSyrup", "Date": "2014-10-17T19:30:54Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stanfordSentence.get(CoreAnnotations.TokensAnnotation.class).indexOf(token)) == ((stanfordSentence.get(CoreAnnotations.TokensAnnotation.class).size()) - 1)) { sentence.addEntity(new fr.eurecom.stanfordnlprestapi.datatypes.Entity(token.get(CoreAnnotations.TextAnnotation.class), token.get(CoreAnnotations.NamedEntityTagAnnotation.class), sentence, context, token.get(CoreAnnotations.CharacterOffsetBeginAnnotation.class), token.get(CoreAnnotations.CharacterOffsetEndAnnotation.class))); sentence.addEntity(new fr.eurecom.stanfordnlprestapi.datatypes.Entity(sb.toString(), type, sentence, context, start, end)); }else { sentence.addEntity(new fr.eurecom.stanfordnlprestapi.datatypes.Entity(sb.toString(), type, sentence, context, start, end)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6603/buggy-version/src.main.java.fr.eurecom.stanfordnlprestapi.core.StanfordNlp.java", "BodyUseAPI": ["edu.stanford.nlp.ling.CoreLabel.get(java.lang.Class)", "fr.eurecom.stanfordnlprestapi.interfaces.Sentence.addEntity(fr.eurecom.stanfordnlprestapi.datatypes.Entity)", "edu.stanford.nlp.ling.CoreLabel.get(java.lang.Class)", "edu.stanford.nlp.ling.CoreLabel.get(java.lang.Class)", "edu.stanford.nlp.ling.CoreLabel.get(java.lang.Class)"], "Fixed commit": "e152fc117527d5020562fae4df8e9f6cbf2667ca", "Url": "https://api.github.com/repos/jplu/stanfordNLPRESTAPI", "Date": "2017-08-10T10:02:38Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(saveFile.exists())) { saveFile.createNewFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7387/buggy-version/src.com.snake.ld31.IO.java", "BodyUseAPI": ["java.io.File.createNewFile()"], "Fixed commit": "ad8875db1b776b339530aaad194f73f3e8ccb424", "Url": "https://api.github.com/repos/mail929/Ludum-Dare-31", "Date": "2014-12-06T14:16:29Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buyOnlineCoefficient == 0) { this.buyOnlineCoefficient = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3515/buggy-version/src.main.java.com.printmaster.nk.model.entity.Product.java", "BodyUseAPI": [], "Fixed commit": "1af28cacb9ceec5563c3051289be023c21226af3", "Url": "https://api.github.com/repos/MykolaKosharnyi/web-printer", "Date": "2017-10-11T20:17:27Z"},
{"Line": "=>714", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ihtsdo.otf.tcc.model.cc.concept.ConceptDataSimpleReference.getRefsetMember(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (temp == null) { temp = getRefsetDynamicMember(nid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/9005/buggy-version/tcc-model-impl.src.main.java.org.ihtsdo.otf.tcc.model.cc.concept.ConceptDataSimpleReference.java", "BodyUseAPI": [], "Fixed commit": "547db5f0b70c5d7c63232981d4abc7919a8e7935", "Url": "https://api.github.com/repos/Apelon-VA/OTF-Versioning-Service", "Date": "2014-05-08T16:09:10Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.res.TypedArray.getString(R.styleable.font_fontTypeFaceAsset)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (fontInAssets != null) { android.graphics.Typeface typeFace = com.slobodanantonijevic.widget.FontManager.get(context, java.lang.String.format(\"fonts/%s\", fontInAssets)); if (typeFace != null) { setTypeface(typeFace); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/331/buggy-version/customtextview.src.main.java.com.slobodanantonijevic.widget.CustomTextView.java", "BodyUseAPI": ["com.slobodanantonijevic.widget.FontManager.get(android.content.Context,java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String)"], "Fixed commit": "ad710da0c5da84f72bff2e52067f9f467e12b6e2", "Url": "https://api.github.com/repos/slobodanantonijevic/CustomTextView", "Date": "2017-04-20T23:01:14Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (attrs != null) { android.content.res.TypedArray typedArray = context.obtainStyledAttributes(attrs, R.styleable.font, 0, 0); try { java.lang.String fontInAssets = typedArray.getString(R.styleable.font_fontTypeFaceAsset); if (fontInAssets != null) { android.graphics.Typeface typeFace = com.slobodanantonijevic.widget.FontManager.get(context, java.lang.String.format(\"fonts/%s\", fontInAssets)); if (typeFace != null) { setTypeface(typeFace); } } } finally { typedArray.recycle(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/331/buggy-version/customtextview.src.main.java.com.slobodanantonijevic.widget.CustomTextView.java", "BodyUseAPI": ["android.content.Context.obtainStyledAttributes(android.util.AttributeSet,R.styleable.font,int,int)"], "Fixed commit": "ad710da0c5da84f72bff2e52067f9f467e12b6e2", "Url": "https://api.github.com/repos/slobodanantonijevic/CustomTextView", "Date": "2017-04-20T23:01:14Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 1) return 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8009/buggy-version/impl.src.main.java.org.coderthoughts.bridge.impl.PrimeNumbers.java", "BodyUseAPI": [], "Fixed commit": "8b384275dd576c5472220df5355ed1519bc551a1", "Url": "https://api.github.com/repos/coderthoughts/primes", "Date": "2016-02-06T21:12:34Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (param == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/9028/buggy-version/arachnidium-app-model.src.main.java.com.github.arachnidium.model.common.ApplicationFactory.java", "BodyUseAPI": [], "Fixed commit": "3b8429ca5321e0e99645f4675e9b0ef240e9dace", "Url": "https://api.github.com/repos/arachnidium/arachnidium-java", "Date": "2015-01-19T22:12:59Z"},
{"Line": "=>561", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (options != null) { if (options.matches(flavor.product)) { products.add(flavor.product); } }else { products.add(flavor.product); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3385/buggy-version/src.main.java.org.dasein.cloud.openstack.nova.os.compute.NovaServer.java", "BodyUseAPI": ["org.dasein.cloud.compute.VirtualMachineProductFilterOptions.matches(org.dasein.cloud.compute.VirtualMachineProduct)"], "Fixed commit": "78f279165b3315ef15857a8a39b066c6d4ce8370", "Url": "https://api.github.com/repos/greese/dasein-cloud-openstack", "Date": "2014-08-13T10:13:22Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (client != null) { client.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4508/buggy-version/sdks.java.io.hcatalog.src.main.java.org.apache.beam.sdk.io.hcatalog.HCatalogIO.java", "BodyUseAPI": ["org.apache.hadoop.hive.metastore.IMetaStoreClient.close()"], "Fixed commit": "37b586cdff924975507c1b4cc6802f23ee523570", "Url": "https://api.github.com/repos/seshadri-cr/beam", "Date": "2017-06-02T23:47:52Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(members.equals(\"\"))) { java.lang.String[] idString = members.split(\",\"); ids = new java.lang.Long[idString.length]; for (int i = 0; i < (idString.length); i++) ids[i] = java.lang.Long.parseLong(idString[i]); }else ids = new java.lang.Long[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7638/buggy-version/src.main.java.com.github.gherkin.entity.ClubEntity.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "0dc582eb260f32c0e46ce8957301c9d6b6910a63", "Url": "https://api.github.com/repos/Gherkin/Restian", "Date": "2015-10-07T11:44:53Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((existing != null) && (runStatus != (co.cask.cdap.proto.ProgramRunStatus.FAILED))) { throw new java.lang.UnsupportedOperationException(java.lang.String.format(\"Cannot record program %s in status %s\", programId, runStatus)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7649/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.internal.app.store.AppMetadataStore.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,co.cask.cdap.proto.id.ProgramId,co.cask.cdap.proto.ProgramRunStatus)"], "Fixed commit": "186f0d20af2631bd45b54a8888c3fd0f089abf04", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2017-07-20T17:50:15Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gameState.getOwnPlayer()) != null) tilePane.getChildren().add(createItem(chordImpl.getID(), (((GameState.SHIP_COUNT) - (gameState.getOwnPlayer().getRemainingShips())) * ((GameState.SHIP_COUNT) / 100)), gameState.getOwnPlayer().getPlayerStatus().getColor()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4998/buggy-version/src.de.haw.ttv2.main.MainGUI.java", "BodyUseAPI": ["de.haw.ttv2.main.GameState.getOwnPlayer()", "tilePane.getChildren().add(javafx.scene.layout.BorderPane)", "gameState.getOwnPlayer().getPlayerStatus().getColor()", "gameState.getOwnPlayer().getRemainingShips()", "de.haw.ttv2.main.MainGUI.7.createItem(chordImpl.getID(),(((GameState.SHIP_COUNT) - (gameState.getOwnPlayer().getRemainingShips())) * ((GameState.SHIP_COUNT) / 100)),gameState.getOwnPlayer().getPlayerStatus().getColor())", "de.haw.ttv2.main.GameState.getOwnPlayer()", "gameState.getOwnPlayer().getPlayerStatus()"], "Fixed commit": "0a32ac0749d02238a11b595dc70dc2eb066c72f7", "Url": "https://api.github.com/repos/lgmtr/ttv2", "Date": "2016-12-14T12:29:38Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(info.appName)) { info.appName = info.packageName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8683/buggy-version/app.src.main.java.com.zzzmode.appopsx.ui.core.Helper.java", "BodyUseAPI": [], "Fixed commit": "7e90588f5df24267ad2b6a60d89c45f8c99209be", "Url": "https://api.github.com/repos/8enet/AppOpsX", "Date": "2017-08-26T08:56:24Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlock(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((((par7 == 1) && (!flag)) || ((par7 == 0) && flag)) && (block == (singleSlab))) && (j1 == (is.getItemDamage()))) { if ((world.checkNoEntityCollision(doubleSlab.getCollisionBoundingBoxFromPool(world, par4, par5, par6))) && (world.setBlock(par4, par5, par6, doubleSlab, j1, 3))) { world.playSoundEffect(((double) (((float) (par4)) + 0.5F)), ((double) (((float) (par5)) + 0.5F)), ((double) (((float) (par6)) + 0.5F)), doubleSlab.stepSound.func_150496_b(), (((doubleSlab.stepSound.getVolume()) + 1.0F) / 2.0F), ((doubleSlab.stepSound.getPitch()) * 0.8F)); --(is.stackSize); } return true; }else { return this.func_150946_a(is, player, world, par4, par5, par6, par7) ? true : super.onItemUse(is, player, world, par4, par5, par6, par7, par8, par9, par10); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5327/buggy-version/src.main.java.com.nathan.nathanmod.items.ItemNathanSlab.java", "BodyUseAPI": ["net.minecraft.item.ItemSlab.onItemUse(net.minecraft.item.ItemStack,net.minecraft.entity.player.EntityPlayer,net.minecraft.world.World,int,int,int,int,float,float,float)", "com.nathan.nathanmod.items.ItemNathanSlab.func_150946_a(net.minecraft.item.ItemStack,net.minecraft.entity.player.EntityPlayer,net.minecraft.world.World,int,int,int,int)", "net.minecraft.world.World.setBlock(int,int,int,net.minecraft.block.BlockSlab,int,int)"], "Fixed commit": "7ad98e2640a0015b5701e057f85fd387217852d0", "Url": "https://api.github.com/repos/NathanMcGuire30/NathanIndustries", "Date": "2016-04-13T15:53:37Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (xlinkStream == null) { throw new org.jgrapht.ext.ImportException(\"Failed to locate XLink xsd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6869/buggy-version/jgrapht-ext.src.main.java.org.jgrapht.ext.GraphMLImporter.java", "BodyUseAPI": [], "Fixed commit": "62dce10727d80c6ce5e4903280b2f0d7eb2188de", "Url": "https://api.github.com/repos/jgrapht/jgrapht", "Date": "2016-10-03T19:59:02Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getEntity()) instanceof org.bukkit.entity.Player) { org.bukkit.entity.Player player = ((org.bukkit.entity.Player) (event.getEntity())); for (org.bukkit.inventory.ItemStack is : player.getInventory().getArmorContents()) { if ((player.getNoDamageTicks()) > 10) break; if (isLeatherArmor(is)) { if (((java.lang.Math.random()) > 0.999) || ((java.lang.Math.random()) > 0.999)) { continue; } is.setDurability(((short) ((is.getDurability()) - 1))); if ((is.getDurability()) < 0) is.setDurability(((short) (0))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7008/buggy-version/src.me.frodenkvist.armoreditor.PlayerListener.java", "BodyUseAPI": ["Event.PBEntityDamageEntityEvent.getEntity()"], "Fixed commit": "d929594ca4a6570655644bfd3637ea37ca5cf06c", "Url": "https://api.github.com/repos/Frodenkvist/MCPluginMLEpicGear", "Date": "2013-07-23T17:57:32Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line = reader.readLine()) == null) { return gson.fromJson(lines, new com.google.gson.reflect.TypeToken<java.util.ArrayList<sg.edu.nus.cs2103t.omnitask.model.Task>>() {}.getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/475/buggy-version/src.main.java.sg.edu.nus.cs2103t.omnitask.storage.IOJSONImpl.java", "BodyUseAPI": [], "Fixed commit": "d08d9a2f609dc69d604dc4f4efbf35ce30430fc9", "Url": "https://api.github.com/repos/cs2103jan2015-t09-1j/main", "Date": "2015-03-10T06:23:04Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (compat == \"\") return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6288/buggy-version/src.org.zonedabone.magicchest.PluginCompatibility.java", "BodyUseAPI": [], "Fixed commit": "898b2995cf575ac4545169f977376c4d1936fcde", "Url": "https://api.github.com/repos/zonedabone/MagicChest", "Date": "2013-08-14T17:08:56Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.zonedabone.magicchest.PluginCompatibility.printPluginCompatibilty()) != null) { getLogger().info(org.zonedabone.magicchest.PluginCompatibility.printPluginCompatibilty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6288/buggy-version/src.org.zonedabone.magicchest.MagicChest.java", "BodyUseAPI": [], "Fixed commit": "898b2995cf575ac4545169f977376c4d1936fcde", "Url": "https://api.github.com/repos/zonedabone/MagicChest", "Date": "2013-08-14T17:08:56Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["doc.getElementsByClass(\"tvlists\").first()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (tvList == null) { tvList = doc.getElementById(\"playlist_content\"); list = tvList.getElementsByTag(\"li\"); }else { list = tvList.getElementsByAttributeValue(\"name\", \"tvlist\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3983/buggy-version/src.main.java.com.metal.fetcher.task.impl.YoutuTask.java", "BodyUseAPI": ["org.jsoup.nodes.Element.getElementsByAttributeValue(java.lang.String,java.lang.String)"], "Fixed commit": "a9e156258b6c3f4911b07f0c7c2c289eb8b6eeaa", "Url": "https://api.github.com/repos/fountainX/planta", "Date": "2016-06-04T10:01:05Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (idx < 0) { idx = name.indexOf(\"_$$_jvst\"); if (idx < 0) this.clazz = clazz; else { this.clazz = clazz.getSuperclass(); cglib = true; } }else { this.clazz = clazz.getSuperclass(); cglib = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4969/buggy-version/bboss-util.src.org.frameworkset.util.ClassUtil.java", "BodyUseAPI": [], "Fixed commit": "7edb86603d8003809ae4518d441a5abd67bf9486", "Url": "https://api.github.com/repos/bbossgroups/bboss", "Date": "2016-10-24T07:34:26Z"},
{"Line": "=>738", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["services.filesystem.FileSystemGestorDocumentalServiceImpl.getDocumentoByUri(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (br == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2759/buggy-version/fap.app.services.filesystem.FileSystemGestorDocumentalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "eb77b273dc93ed527656782c780abb26266a08af", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2013-03-06T08:05:56Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (num == 0) { return new genetic.Population(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5281/buggy-version/src.genetic.GA.java", "BodyUseAPI": [], "Fixed commit": "beab9f299c76d83cd69e2f19972878e9473b407b", "Url": "https://api.github.com/repos/TigerSun86/MachineLearning", "Date": "2014-04-09T10:51:58Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultValues) != null) { for (java.lang.String currHeader : defaultValues.keySet()) { if (org.apache.commons.beanutils.PropertyUtils.isWriteable(testModel, currHeader)) { usedDwcTerms.add(currHeader); }else { net.canadensys.harvester.occurrence.reader.DwcaItemReader.LOGGER.warn(((\"Property [\" + currHeader) + \"] is not found or writeable in OccurrenceRawModel\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1872/buggy-version/lontra-harvester-lib.src.main.java.net.canadensys.harvester.occurrence.reader.DwcaItemReader.java", "BodyUseAPI": [], "Fixed commit": "691d02b9620763903f8f2e41f107e450fd30add5", "Url": "https://api.github.com/repos/WingLongitude/lontra-harvester", "Date": "2015-06-09T15:57:40Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (s != null) s = s.trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1751/buggy-version/oxalis-as2.src.main.java.eu.peppol.as2.As2Disposition.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "44d43690738aab9213111406ed4abb764800e8f2", "Url": "https://api.github.com/repos/difi/oxalis", "Date": "2014-05-20T13:11:21Z"},
{"Line": "=>1938", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.concurrent.atomic.AtomicLong>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == count) { count = new java.util.concurrent.atomic.AtomicLong(0); totalMessagesAcked.put(destinationQueueName, count); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5379/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.store.rdbms.RDBMSMessageStoreImpl.java", "BodyUseAPI": [], "Fixed commit": "c755cfb4e3b0671f8dd3ada9958647580db7089e", "Url": "https://api.github.com/repos/abeykoon/andes", "Date": "2017-01-23T11:49:58Z"},
{"Line": "=>1923", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.concurrent.atomic.AtomicLong>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == count) { count = new java.util.concurrent.atomic.AtomicLong(0); totalMessagesReceived.put(destinationQueueName, count); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5379/buggy-version/modules.andes-core.broker.src.main.java.org.wso2.andes.store.rdbms.RDBMSMessageStoreImpl.java", "BodyUseAPI": [], "Fixed commit": "c755cfb4e3b0671f8dd3ada9958647580db7089e", "Url": "https://api.github.com/repos/abeykoon/andes", "Date": "2017-01-23T11:49:58Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.fragment_container)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (f instanceof com.radiance.chatstats.ContactsFragment) { finish(); android.content.Intent i = getBaseContext().getPackageManager().getLaunchIntentForPackage(getBaseContext().getPackageName()); i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7778/buggy-version/app.src.main.java.com.radiance.chatstats.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "bc67dff1f9f1c777caa54e8b9bef447df8ae64a1", "Url": "https://api.github.com/repos/neery1218/Chatstats", "Date": "2015-03-14T22:41:31Z"},
{"Line": "=>2394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (haveNonSys != null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8491/buggy-version/services.core.java.com.android.server.pm.Settings.java", "BodyUseAPI": [], "Fixed commit": "4800077a5198a508b4ba0d7c84a6d63a4a4ce49f", "Url": "https://api.github.com/repos/DirtyUnicorns/android_frameworks_base", "Date": "2015-08-17T01:09:50Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (project.getProjectModel().isUnderMaintenance()) { conflicts.add(i18nServer.t(language, \"conflictEditingUnderMaintenanceProject\", project.getName(), project.getFullName())); return conflicts; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1133/buggy-version/src.main.java.org.sigmah.server.handler.UpdateProjectHandler.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(i18nServer.t(language, \"conflictEditingUnderMaintenanceProject\", project.getName(), project.getFullName()))", "org.sigmah.server.domain.Project.getFullName()", "org.sigmah.server.domain.Project.getName()", "org.sigmah.server.i18n.I18nServer.t(org.sigmah.shared.Language,java.lang.String,project.getName(),project.getFullName())"], "Fixed commit": "2105c43ed6650c044263ea249adbd420628f5e7f", "Url": "https://api.github.com/repos/sigmah-dev/sigmah", "Date": "2015-06-12T10:00:40Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentFragment) == null) { mCurrentFragment = mViewerPagerAdapter.getCurrentFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8065/buggy-version/app.src.main.java.com.d.candy.f.awesometimetable.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8c4f6765496b0d7a4418b0dfaafc027319907742", "Url": "https://api.github.com/repos/f-candy-d/awesome-time-table", "Date": "2017-07-22T01:18:10Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getButton()) != (java.awt.event.MouseEvent.BUTTON1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5521/buggy-version/src.ai.seitok.inoue.ScreenCaptureUI.java", "BodyUseAPI": [], "Fixed commit": "b53cf3d9d2bb7986417b735a185248a96459f2f8", "Url": "https://api.github.com/repos/tsunko/Inoue", "Date": "2016-10-07T20:40:24Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getButton()) != (java.awt.event.MouseEvent.BUTTON1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5521/buggy-version/src.ai.seitok.inoue.ScreenCaptureUI.java", "BodyUseAPI": [], "Fixed commit": "b53cf3d9d2bb7986417b735a185248a96459f2f8", "Url": "https://api.github.com/repos/tsunko/Inoue", "Date": "2016-10-07T20:40:24Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.wordList.contains(word))) { this.wordList.add(word); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7815/buggy-version/src.WordRepository.java", "BodyUseAPI": ["java.util.ArrayList<Word>.add(Word)"], "Fixed commit": "70adb7657303fc31bac5acebaddc95e54cdd0996", "Url": "https://api.github.com/repos/Scatchell/WordCounterSentenceGenerator", "Date": "2012-04-02T16:37:52Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.android.vlayout.layout.OnePlusNLayoutHelper.getAllChildren(android.view.View[],RecyclerView.Recycler,com.alibaba.android.vlayout.VirtualLayoutManager.LayoutStateWrapper,com.alibaba.android.vlayout.layout.LayoutChunkResult,com.alibaba.android.vlayout.LayoutManagerHelper)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (count == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1261/buggy-version/vlayout.src.main.java.com.alibaba.android.vlayout.layout.OnePlusNLayoutHelper.java", "BodyUseAPI": [], "Fixed commit": "4ba5c78801b120cbcc955e018ee0cf0491c0f0f8", "Url": "https://api.github.com/repos/alibaba/vlayout", "Date": "2017-12-10T09:24:28Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.blazebit.persistence.impl.LeafOngoingSetOperationCTECriteriaBuilderImpl.isEmpty())) { com.blazebit.persistence.impl.LeafOngoingSetOperationCTECriteriaBuilderImpl.prepareAndCheck(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4971/buggy-version/core.impl.src.main.java.com.blazebit.persistence.impl.LeafOngoingSetOperationCTECriteriaBuilderImpl.java", "BodyUseAPI": [], "Fixed commit": "8635dc92696d009d4ac54453f3fbcc65814d7559", "Url": "https://api.github.com/repos/Blazebit/blaze-persistence", "Date": "2016-12-21T10:19:39Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.blazebit.persistence.impl.LeafOngoingSetOperationCriteriaBuilderImpl.isEmpty())) { com.blazebit.persistence.impl.LeafOngoingSetOperationCriteriaBuilderImpl.prepareAndCheck(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4971/buggy-version/core.impl.src.main.java.com.blazebit.persistence.impl.LeafOngoingSetOperationCriteriaBuilderImpl.java", "BodyUseAPI": [], "Fixed commit": "8635dc92696d009d4ac54453f3fbcc65814d7559", "Url": "https://api.github.com/repos/Blazebit/blaze-persistence", "Date": "2016-12-21T10:19:39Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.blazebit.persistence.impl.LeafOngoingSetOperationSubqueryBuilderImpl.isEmpty())) { com.blazebit.persistence.impl.LeafOngoingSetOperationSubqueryBuilderImpl.prepareAndCheck(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4971/buggy-version/core.impl.src.main.java.com.blazebit.persistence.impl.LeafOngoingSetOperationSubqueryBuilderImpl.java", "BodyUseAPI": [], "Fixed commit": "8635dc92696d009d4ac54453f3fbcc65814d7559", "Url": "https://api.github.com/repos/Blazebit/blaze-persistence", "Date": "2016-12-21T10:19:39Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.StringTokenizer.countTokens()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tokenCount > 2) { connection = st.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6655/buggy-version/src.main.java.com.cloudezz.harmony.management.paasfrontend.haproxy.HAProxyConfiguration.java", "BodyUseAPI": [], "Fixed commit": "4272b843f5f984249be3a614b3f73340123e2b84", "Url": "https://api.github.com/repos/cloudezz/harmony", "Date": "2014-03-11T22:24:59Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.plugins.simplefreeze.managers.PlayerManager.getOriginalLocation(e.getPlayer().getUniqueId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (originalLocation != null) { e.getPlayer().teleport(originalLocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6718/buggy-version/src.org.plugins.simplefreeze.listeners.PlayerQuitListener.java", "BodyUseAPI": ["e.getPlayer().teleport(org.bukkit.Location)"], "Fixed commit": "5fb7fc9b2447d780ccf652cf4d1cfbd4968faaa4", "Url": "https://api.github.com/repos/7rory768/SimpleFreeze", "Date": "2017-01-15T19:56:59Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.glowstone.entity.GlowPlayer.getItemOnCursor()", "net.glowstone.util.InventoryUtil.itemOrEmpty(view.getItem(viewSlot))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((message.getMode()) == 0) && (slotItem.isSimilar(cursor))) { if ((!(net.glowstone.util.InventoryUtil.isEmpty(slotItem))) && ((cursorAmount + (slotItem.getAmount())) <= (slotItem.getMaxStackSize()))) { if ((net.glowstone.net.handler.play.inv.WindowClickLogic.isPickupAction(action)) || (net.glowstone.net.handler.play.inv.WindowClickLogic.isPlaceAction(action))) { action = InventoryAction.PICKUP_ALL; }else if (action == (InventoryAction.DROP_ONE_SLOT)) { action = InventoryAction.DROP_ALL_SLOT; } }else { action = InventoryAction.NOTHING; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6015/buggy-version/src.main.java.net.glowstone.net.handler.play.inv.WindowClickHandler.java", "BodyUseAPI": ["net.glowstone.util.InventoryUtil.isEmpty(net.glowstone.net.handler.play.inv.ItemStack)", "net.glowstone.net.handler.play.inv.ItemStack.getMaxStackSize()", "net.glowstone.net.handler.play.inv.ItemStack.getAmount()"], "Fixed commit": "44f4218a657e0ae2ab6988db6623a6c1c6d51804", "Url": "https://api.github.com/repos/smartboyathome/Glowstone", "Date": "2017-12-02T05:37:12Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cache.add(\"UTC\")) { int index = timeZoneRuleFactory.getTimeZoneRulesIndex(\"UTC\"); if (index != (-1)) { com.questdb.std.time.DateLocale.defineToken(\"UTC\", index, this.zones); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/224/buggy-version/core.src.main.java.com.questdb.std.time.DateLocale.java", "BodyUseAPI": [], "Fixed commit": "6ad795283c655ac249428efe2c2ec8963c7bc249", "Url": "https://api.github.com/repos/bluestreak01/questdb", "Date": "2017-07-10T00:21:17Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getClickCount()) == 2) { javax.swing.tree.TreePath treePath = tree.getPathForLocation(e.getX(), e.getY()); if (treePath != null) { javax.swing.tree.DefaultMutableTreeNode node = ((javax.swing.tree.DefaultMutableTreeNode) (tree.getLastSelectedPathComponent())); if (node != null) { if ((node.getUserObject()) instanceof edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.iterations.Iteration) { edu.wpi.cs.wpisuitetng.modules.requirementmanager.view.ViewEventController.getInstance().editIteration(((edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.iterations.Iteration) (node.getUserObject()))); } if ((node.getUserObject()) instanceof edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.Requirement) { edu.wpi.cs.wpisuitetng.modules.requirementmanager.view.ViewEventController.getInstance().editRequirement(((edu.wpi.cs.wpisuitetng.modules.requirementmanager.models.Requirement) (node.getUserObject()))); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7282/buggy-version/RequirementManager.src.edu.wpi.cs.wpisuitetng.modules.requirementmanager.view.overview.OverviewTreePanel.java", "BodyUseAPI": ["javax.swing.JTree.getPathForLocation(int,int)", "java.awt.event.MouseEvent.getX()", "java.awt.event.MouseEvent.getY()"], "Fixed commit": "3badf6a257c9bbb3e6a4897fa8fad0640f0e8dfe", "Url": "https://api.github.com/repos/djkirby/wpi-suite-tng", "Date": "2013-04-26T15:58:27Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (startTimeTemp == null) { startTimeTemp = com.xuemiao.utils.DateUtils.getNowHourMinuteStr(); signInInfoTimeSegmentTest.setStartTime(startTimeTemp); signInInfoTimeSegments.set((i - 1), signInInfoTimeSegmentTest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4658/buggy-version/src.main.java.com.xuemiao.service.SignInInfoService.java", "BodyUseAPI": [], "Fixed commit": "e36f2f77e37c8ed93a3829f743199b224960b5d1", "Url": "https://api.github.com/repos/zijundeng/signing-in-system", "Date": "2016-10-27T09:34:23Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.plmt.boommall.entity.PreOrder.getPayment()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(payment.getTitle())) { payment.setTitle(\"\u5728\u7ebf\u652f\u4ed8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5883/buggy-version/src.com.plmt.boommall.network.logic.OrderLogic.java", "BodyUseAPI": ["com.plmt.boommall.entity.Payment.setTitle(java.lang.String)"], "Fixed commit": "f8d1f6839d9bdb56f8a8137ca1ba2663e0d1ae96", "Url": "https://api.github.com/repos/xiguofeng/BoomMall", "Date": "2015-11-02T05:16:24Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.plmt.boommall.entity.PreOrder.getShipping()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(shipping.getTitle())) { shipping.setTitle(\"\u6807\u51c6\u5feb\u9012\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5883/buggy-version/src.com.plmt.boommall.network.logic.OrderLogic.java", "BodyUseAPI": ["com.plmt.boommall.entity.Shipping.setTitle(java.lang.String)"], "Fixed commit": "f8d1f6839d9bdb56f8a8137ca1ba2663e0d1ae96", "Url": "https://api.github.com/repos/xiguofeng/BoomMall", "Date": "2015-11-02T05:16:24Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mOnScrollListener)) mOnScrollListener.setLoading(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3103/buggy-version/smoothendlesslibrary.src.main.java.cndroid.com.smoothendlesslibrary.EndLessRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "d242f3a52c55a9428bb4c62967cea051b34fc939", "Url": "https://api.github.com/repos/kimlet/SmoothEndLessRecyclerView", "Date": "2016-09-19T08:38:45Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mAdapter)) mAdapter.setFooterStatus(EndlessAdapter.FooterStatus.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3103/buggy-version/smoothendlesslibrary.src.main.java.cndroid.com.smoothendlesslibrary.EndLessRecyclerView.java", "BodyUseAPI": [], "Fixed commit": "d242f3a52c55a9428bb4c62967cea051b34fc939", "Url": "https://api.github.com/repos/kimlet/SmoothEndLessRecyclerView", "Date": "2016-09-19T08:38:45Z"},
{"Line": "=>659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((codechicken.chunkloader.ChunkLoaderManager.playerOrganisers) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8796/buggy-version/src.codechicken.chunkloader.ChunkLoaderManager.java", "BodyUseAPI": [], "Fixed commit": "5a5a7a67b0bb740bfc6984726ff9fd30c19381da", "Url": "https://api.github.com/repos/Slind14/ChickenChunks", "Date": "2015-04-04T22:51:40Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((where.length()) == 0) { copyA = new de.uni_leipzig.informatik.swp15_sc.nlpmodule.JSONObject(); copyA.put(\"triples\", new de.uni_leipzig.informatik.swp15_sc.nlpmodule.JSONArray()); copyB = new de.uni_leipzig.informatik.swp15_sc.nlpmodule.JSONObject(); copyB.put(\"triples\", new de.uni_leipzig.informatik.swp15_sc.nlpmodule.JSONArray()); }else if ((where.length()) <= 1) { copyA = new de.uni_leipzig.informatik.swp15_sc.nlpmodule.JSONObject(where.getJSONObject(0).toString()); copyB = new de.uni_leipzig.informatik.swp15_sc.nlpmodule.JSONObject(where.getJSONObject(0).toString()); }else { copyA = new de.uni_leipzig.informatik.swp15_sc.nlpmodule.JSONObject(where.getJSONObject(0).toString()); copyB = new de.uni_leipzig.informatik.swp15_sc.nlpmodule.JSONObject(where.getJSONObject(1).toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3484/buggy-version/src.de.uni_leipzig.informatik.swp15_sc.nlpmodule.TemplateFactory.java", "BodyUseAPI": ["de.uni_leipzig.informatik.swp15_sc.nlpmodule.JSONArray.getJSONObject(int)", "where.getJSONObject(0).toString()", "where.getJSONObject(0).toString()", "de.uni_leipzig.informatik.swp15_sc.nlpmodule.JSONArray.getJSONObject(int)", "where.getJSONObject(1).toString()", "de.uni_leipzig.informatik.swp15_sc.nlpmodule.JSONArray.length()", "de.uni_leipzig.informatik.swp15_sc.nlpmodule.JSONArray.getJSONObject(int)", "where.getJSONObject(0).toString()", "de.uni_leipzig.informatik.swp15_sc.nlpmodule.JSONArray.getJSONObject(int)"], "Fixed commit": "37d0dd1f5af35575502f95633d1e743e1b2d2520", "Url": "https://api.github.com/repos/suessmaier/SemanticChess", "Date": "2015-06-16T07:46:07Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ver == 4) { long first_time = java.lang.System.currentTimeMillis(); vg.civcraft.mc.namelayer.NameLayerPlugin.log(java.util.logging.Level.INFO, \"Database updating to Version five.\"); db.execute(\"alter table faction_member add index `faction_member_index` (faction_id);\"); ver = updateVersion(ver, plugin.getName()); vg.civcraft.mc.namelayer.NameLayerPlugin.log(java.util.logging.Level.INFO, ((\"Database update to Version five took \" + (((java.lang.System.currentTimeMillis()) - first_time) / 1000)) + \" seconds.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/671/buggy-version/src.vg.civcraft.mc.namelayer.database.GroupManagerDao.java", "BodyUseAPI": ["vg.civcraft.mc.namelayer.database.GroupManagerDao.updateVersion(int,plugin.getName())"], "Fixed commit": "acaedfa5433016477b240f2bb64681d648ad5644", "Url": "https://api.github.com/repos/Civcraft/NameLayer", "Date": "2015-01-31T23:58:02Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controller.DeliveryController.getAddressForMap()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((addressList.size()) == 0) { address = \"http://maps.googleapis.com/maps/api/staticmap?center=Trondheim&zoom=14&size=380x455&sensor=false\"; }else address = \"http://maps.googleapis.com/maps/api/staticmap?center=Trondheim%20Norge&zoom=12&size=380x455&maptype=roadmap&markers=color:red%7C\" + (model.GoogleMaps.validateAddress(addressList.get(0)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1017/buggy-version/src.model.GoogleMaps.java", "BodyUseAPI": ["model.GoogleMaps.validateAddress(java.lang.String)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "2b72f61b810d5435bf295c2bfb869b29d86a746a", "Url": "https://api.github.com/repos/ombinde/Pizzamart", "Date": "2011-11-14T16:30:56Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiElement.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (parent instanceof com.intellij.psi.PsiErrorElement) { com.intellij.psi.PsiElement parentOfParent = parent.getParent(); if (parentOfParent instanceof org.wso2.siddhi.plugins.idea.psi.DefinitionElementWithExecutionElementNode) { org.wso2.siddhi.plugins.idea.completion.SiddhiCompletionUtils.addInitialTypesAsLookups(result); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8467/buggy-version/src.main.java.org.wso2.siddhi.plugins.idea.completion.SiddhiKeywordsCompletionContributor.java", "BodyUseAPI": ["com.intellij.psi.PsiElement.getParent()"], "Fixed commit": "2619d9f9af56930c9569c512ea31599783041b97", "Url": "https://api.github.com/repos/RAVEENSR/Siddhi-Intellij-Plugin", "Date": "2017-10-23T05:04:39Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastSearchedIndex) != (-1)) { newCommandObj = new logic.CommandObject(INDEX_ADD, taskObjWithRemovedOccurrenceTiming, removedOccurrenceIndex, lastSearchedIndex); }else { newCommandObj = new logic.CommandObject(INDEX_ADD, taskObjWithRemovedOccurrenceTiming, removedOccurrenceIndex, index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1897/buggy-version/src.logic.CommandFacade.java", "BodyUseAPI": [], "Fixed commit": "7c692bc1c07295e67fb9cd8ae659aea549c5d6aa", "Url": "https://api.github.com/repos/cs2103jan2016-t11-3j/main", "Date": "2016-04-10T08:19:00Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.backEndType.equals(\"maxsatbackend.MaxSat\")) { if (useGraph) { if (solveInParallel) { util.StatisticPrinter.record(StatisticKey.SAT_SOLVING_GRAPH_PARALLEL_TIME, ((solvingEnd) - (solvingStart))); }else { util.StatisticPrinter.record(StatisticKey.SAT_SOLVING_GRAPH_SEQUENTIAL_TIME, ((solvingEnd) - (solvingStart))); } }else { util.StatisticPrinter.record(StatisticKey.SAT_SOLVING_WITHOUT_GRAPH_TIME, ((solvingEnd) - (solvingStart))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7288/buggy-version/src.constraintsolver.ConstraintSolver.java", "BodyUseAPI": [], "Fixed commit": "e4a044a3b411b503e2811d1ba77859bcc99721d9", "Url": "https://api.github.com/repos/opprop/generic-type-inference-solver", "Date": "2016-07-12T23:36:35Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(buildScriptFile.getParentFile().exists())) { boolean parentDirCreated = buildScriptFile.getParentFile().mkdirs(); if (!parentDirCreated) { throw new com.orctom.mojo.was.model.WebSphereServiceException((\"Failed to create parent dir for build script: \" + (buildScriptFile.getParentFile()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2168/buggy-version/src.main.java.com.orctom.mojo.was.utils.CommandUtils.java", "BodyUseAPI": ["java.io.File.getParentFile()", "java.io.File.getParentFile()", "java.io.File.mkdirs()"], "Fixed commit": "352ae141968f233943c0a5f39a8c77c87e81c53b", "Url": "https://api.github.com/repos/orctom/was-maven-plugin", "Date": "2014-06-11T03:22:10Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((DialogBox.currentPrime) <= 1) { throw new java.lang.NumberFormatException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2020/buggy-version/src.DialogBox.java", "BodyUseAPI": [], "Fixed commit": "9014d97ea96c183984c56afabc740ee771d0613b", "Url": "https://api.github.com/repos/CarterW06/Prime-List", "Date": "2017-06-14T18:18:30Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mGoogleApiClient) != null) && (mGoogleApiClient.isConnected())) { Plus.AccountApi.clearDefaultAccount(mGoogleApiClient); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6389/buggy-version/app.src.main.java.com.iiitd.esya.app.LoginActivity.java", "BodyUseAPI": ["Plus.AccountApi.clearDefaultAccount(com.google.android.gms.common.api.GoogleApiClient)"], "Fixed commit": "cff36191580811ec9952eb8cd76eb332171fb170", "Url": "https://api.github.com/repos/soummyaah/EsyaAndroidApp2015", "Date": "2015-08-18T21:59:53Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (previous != null) { doAttach = true; for (int j = p; j < (t.getLength()); j++) { if (!(t.getUri(j).equals(previous.getUri(j)))) { doAttach = false; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/994/buggy-version/src.main.java.ch.tkuhn.nanolytics.ProvPlot.java", "BodyUseAPI": ["t.getUri(j).equals(previous.getUri(j))", "ch.tkuhn.nanolytics.ProvTrail.getUri(int)"], "Fixed commit": "aaad60214f8caac1de0dc88a8295be1827ca75a5", "Url": "https://api.github.com/repos/tkuhn/nanolytics", "Date": "2015-03-30T21:28:23Z"},
{"Line": "=>977", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((game.getState().getZone(objectId)) == (Zone.COMMAND)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7676/buggy-version/Mage.src.main.java.mage.game.permanent.PermanentImpl.java", "BodyUseAPI": [], "Fixed commit": "69bb0e51733759f8984376b5f1484c38b5608b95", "Url": "https://api.github.com/repos/ciaccona007/mage", "Date": "2017-07-30T21:32:37Z"},
{"Line": "=>5602", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newRoutingType == (com.net2plan.utils.Constants.RoutingType.HOP_BY_HOP_ROUTING)) for (com.net2plan.interfaces.networkDesign.Demand d : layer.demands) if (d.isServiceChainRequest()) throw new com.net2plan.interfaces.networkDesign.Net2PlanException(\"Cannot perform this operation with service chain demands, since the resource traversing information is lost\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1647/buggy-version/src.main.java.com.net2plan.interfaces.networkDesign.NetPlan.java", "BodyUseAPI": [], "Fixed commit": "e222eb4087f2e6d902da31541efdb5cedde2db45", "Url": "https://api.github.com/repos/girtel/Net2Plan", "Date": "2016-12-14T16:21:34Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cost == shortestPathCost) { shortestRoutes.add(r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1647/buggy-version/src.main.java.com.net2plan.interfaces.networkDesign.Demand.java", "BodyUseAPI": [], "Fixed commit": "e222eb4087f2e6d902da31541efdb5cedde2db45", "Url": "https://api.github.com/repos/girtel/Net2Plan", "Date": "2016-12-14T16:21:34Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (systemClassPath == null) { systemClassPath = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7545/buggy-version/src.main.java.framework.utils.GradingEnvironment.java", "BodyUseAPI": [], "Fixed commit": "03339083a5481c63cd547c1bf412bc089c4dd884", "Url": "https://api.github.com/repos/pdewan/Grader", "Date": "2016-09-12T16:14:44Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pli.getPClasses().containsKey(player))) { if (MinigamesAPI.debug) { com.comze_instancelabs.minigamesapi.ArenaLogger.debug((player + \" didn't select any kit and the auto_add_default_kit option might be turned off, thus he won't get any starting items.\")); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/622/buggy-version/API.src.main.java.com.comze_instancelabs.minigamesapi.Classes.java", "BodyUseAPI": ["com.comze_instancelabs.minigamesapi.ArenaLogger.debug(java.lang.String)"], "Fixed commit": "0bf4536ff29210aa005917b586f03de87cbaa7ed", "Url": "https://api.github.com/repos/instance01/MinigamesAPI", "Date": "2014-12-28T14:30:31Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((A != 0) && (B != 0)) { tempDepth = radiusOfEarth - (java.lang.Math.exp(((1.0 / B) * (java.lang.Math.log((rayParam / A)))))); }else { double linear = ((((getBotDepth()) - (getTopDepth())) / ((getBotP()) - (getTopP()))) * (rayParam - (getTopP()))) + (getTopDepth()); tempDepth = linear; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8862/buggy-version/src.main.java.edu.sc.seis.TauP.SlownessLayer.java", "BodyUseAPI": ["java.lang.Math.log(double)", "java.lang.Math.exp(double)"], "Fixed commit": "3fa5c63fdc4d5df185a29de7616b73419e20a98f", "Url": "https://api.github.com/repos/crotwell/TauP", "Date": "2015-06-30T13:27:12Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDailyBar) != null) { limitBarVisibility = mGlobalLimitFrame.getVisibility(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3073/buggy-version/src.com.ichi2.anki.StudyOptions.java", "BodyUseAPI": [], "Fixed commit": "8d32e7cdecb5632cf1a2dca81abbd80857559643", "Url": "https://api.github.com/repos/iniju/Anki-Android", "Date": "2011-03-03T18:29:40Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDailyBar) != null) { mGlobalLimitFrame.setVisibility(limitBarVisibility); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3073/buggy-version/src.com.ichi2.anki.StudyOptions.java", "BodyUseAPI": [], "Fixed commit": "8d32e7cdecb5632cf1a2dca81abbd80857559643", "Url": "https://api.github.com/repos/iniju/Anki-Android", "Date": "2011-03-03T18:29:40Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.hasSound) e.getSource().delete();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8075/buggy-version/src.world.World.java", "BodyUseAPI": ["entity.Entity.getSource()", "e.getSource().delete()"], "Fixed commit": "b88674be2b98b5659f864739ab32b4282a041047", "Url": "https://api.github.com/repos/pie-tras/LD40", "Date": "2017-12-02T19:45:44Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.json.JSONObject>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (((column != null) && ((column.opt(\"activity\")) != null)) && (column.optBoolean(\"activity\"))) { columnType = \"aint\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5830/buggy-version/sensei-core.src.main.java.com.senseidb.conf.SenseiFacetHandlerBuilder.java", "BodyUseAPI": [], "Fixed commit": "91ea87823cdd48ae403295bf770547373058064e", "Url": "https://api.github.com/repos/linkedin/sensei", "Date": "2012-08-13T18:08:43Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasUniqueTestCaseNames(testCases))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5832/buggy-version/src.main.groovy.betsy.common.model.AbstractProcess.java", "BodyUseAPI": [], "Fixed commit": "c42206f9e299bc083ecc84b38cdf59961b41792d", "Url": "https://api.github.com/repos/uniba-dsg/betsy", "Date": "2015-09-15T08:26:18Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stuff instanceof org.osgl.storage.impl.SObject.FileSObject) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2931/buggy-version/src.main.java.org.osgl.storage.impl.FileSystemService.java", "BodyUseAPI": [], "Fixed commit": "50bc152bc4180f872d8c7a0ae042ca334762019c", "Url": "https://api.github.com/repos/osglworks/java-storage", "Date": "2015-06-06T11:26:07Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonElement.getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((object.has(\"Unrateable\")) && (!((object.get(\"Unrateable\")) instanceof com.google.gson.JsonNull))) beerSearchResult.unrateable = object.get(\"Unrateable\").getAsBoolean();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1674/buggy-version/app.src.main.java.com.ratebeer.android.api.model.BeerSearchResultDeserializer.java", "BodyUseAPI": ["object.get(\"Unrateable\").getAsBoolean()", "com.google.gson.JsonObject.get(java.lang.String)"], "Fixed commit": "20c4810b3968b6d1f032bf61bee56422bad03d7f", "Url": "https://api.github.com/repos/erickok/ratebeer", "Date": "2016-05-24T13:26:01Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonElement.getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((object.has(\"IsAlias\")) && (!((object.get(\"IsAlias\")) instanceof com.google.gson.JsonNull))) breweryBeer.alias = object.get(\"IsAlias\").getAsBoolean();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1674/buggy-version/app.src.main.java.com.ratebeer.android.api.model.BreweryBeerDeserializer.java", "BodyUseAPI": ["com.google.gson.JsonObject.get(java.lang.String)", "object.get(\"IsAlias\").getAsBoolean()"], "Fixed commit": "20c4810b3968b6d1f032bf61bee56422bad03d7f", "Url": "https://api.github.com/repos/erickok/ratebeer", "Date": "2016-05-24T13:26:01Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonElement.getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((object.has(\"Retired\")) && (!((object.get(\"Retired\")) instanceof com.google.gson.JsonNull))) breweryBeer.retired = object.get(\"Retired\").getAsBoolean();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1674/buggy-version/app.src.main.java.com.ratebeer.android.api.model.BreweryBeerDeserializer.java", "BodyUseAPI": ["com.google.gson.JsonObject.get(java.lang.String)", "object.get(\"Retired\").getAsBoolean()"], "Fixed commit": "20c4810b3968b6d1f032bf61bee56422bad03d7f", "Url": "https://api.github.com/repos/erickok/ratebeer", "Date": "2016-05-24T13:26:01Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activePartBeforeChangePerspective) != null) { activePartBeforeChangePerspective.storeState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7467/buggy-version/ide.che-core-ide-app.src.main.java.org.eclipse.che.ide.workspace.perspectives.general.AbstractPerspective.java", "BodyUseAPI": [], "Fixed commit": "0a3f4d5033fb7a38cd6cbf27c90b821da4631221", "Url": "https://api.github.com/repos/codenvy-legacy/che-core", "Date": "2016-02-10T10:54:31Z"},
{"Line": "=>785", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((chartData.getAttribute()) != null) && (!(chartData.getMeasures().isEmpty()))) { constructChart(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3842/buggy-version/src.main.java.org.hpccsystems.dashboard.controller.EditChartController.java", "BodyUseAPI": [], "Fixed commit": "0b721d6804107e84e5c0d02bbef504fd6e80cc32", "Url": "https://api.github.com/repos/senthilkumar2githup/Dashboard", "Date": "2014-11-13T13:31:24Z"},
{"Line": "=>713", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(tweetsList.size(),int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (((((countToWrite == 0) && ((tweetsList.size()) == 0)) && (0 == currentSize)) && (runningHeader == null)) && (writer == null)) { runningHeader = csv.resetClassifiedTweetHeader(ReadWriteCSV.ClassifiedTweetCSVHeader, ReadWriteCSV.FIXED_CLASSIFIED_TWEET_HEADER_SIZE, 0); writer = csv.writeClassifiedTweetsCSV(runningHeader, tweetsList.subList(0, countToWrite), collectionCode, fileName, writer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3918/buggy-version/aidr-persister.src.main.java.qa.qcri.aidr.utils.JsonDeserializer.java", "BodyUseAPI": ["java.util.List<qa.qcri.aidr.utils.ClassifiedTweet>.subList(int,int)", "qa.qcri.aidr.io.ReadWriteCSV<org.supercsv.cellprocessor.ift.CellProcessor>.writeClassifiedTweetsCSV(java.lang.String[],tweetsList.subList(0, countToWrite),java.lang.String,java.lang.String,org.supercsv.io.ICsvMapWriter)"], "Fixed commit": "1d720ec92ee7e32d3225ffa2f0de3daf11f1504b", "Url": "https://api.github.com/repos/qcri-social/AIDR", "Date": "2015-08-04T11:19:29Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((words.length) == 0) || (((words.length) == 1) && (((words[0]) == null) || (words[0].equals(\"\"))))) { android.support.design.widget.Snackbar.make(mRootView, R.string.please_enter_only_ascii_letters, Snackbar.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3835/buggy-version/app.src.main.java.io.github.marcinn.matrixoptimalpath.view.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "638adc66f729c66c1d1b8b032bd6420465e4f9e4", "Url": "https://api.github.com/repos/maszhin/matrix-optimal-path", "Date": "2016-02-12T19:51:01Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((Build.VERSION.SDK_INT) > 11) && ((Build.VERSION.SDK_INT) < 16)) { return builder.getNotification(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5667/buggy-version/src.main.java.com.revonline.pastebin.notification.RecentNotificationAPI.java", "BodyUseAPI": [], "Fixed commit": "7c7ee8cfd1afbb5ac17792079269c8478f94e468", "Url": "https://api.github.com/repos/rrev/Pastebin", "Date": "2014-12-27T01:41:57Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { buildBuf.put(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4895/buggy-version/src.com.afewmoreamps.MiniCask.java", "BodyUseAPI": ["java.nio.ByteBuffer.put(byte[])"], "Fixed commit": "e6a98edea98a108f3d1b8fe6d050130c6ae0f5df", "Url": "https://api.github.com/repos/aweisberg/JitCask", "Date": "2012-04-25T17:48:18Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.lang.model.element.TypeElement.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (annotation.genDbFunc()) { if (primaryKeyCount == 0) { processingEnv.getMessager().printMessage(javax.tools.Diagnostic.Kind.ERROR, \"At least one primary key is required. put @Attribute(primaryKey=true) to field of key\", element); }else if (primaryKeyCount > 1) { processingEnv.getMessager().printMessage(javax.tools.Diagnostic.Kind.ERROR, \"Only single primary key is supported.\", element); }else { if ((annotation.autoincrement()) && (!(primaryKey.isNumber))) { processingEnv.getMessager().printMessage(javax.tools.Diagnostic.Kind.ERROR, \"use autoincrement=false, or use number type.\", element); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8460/buggy-version/cathandsgendroid-apt.src.main.java.net.cattaka.util.cathandsgendroid.apt.DataModelProcessor.java", "BodyUseAPI": ["net.cattaka.util.cathandsgendroid.annotation.DataModel.autoincrement()"], "Fixed commit": "f92dc1a2accf7c7fe599eaccd7704902811d4879", "Url": "https://api.github.com/repos/cattaka/CatHandsGendroid", "Date": "2014-09-03T21:21:37Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Pref.AUTOSWITCH.getBoolean()) { resetAutoswitch(); startAutoswitch(quality); }else { startStream(streamService, quality); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5663/buggy-version/Dopestreamer.src.com.dopelives.dopestreamer.streams.StreamManager.java", "BodyUseAPI": [], "Fixed commit": "64c5121db9727f46edde968ab6b701fe77e6902a", "Url": "https://api.github.com/repos/tvkanters/Dopestreamer", "Date": "2015-01-30T15:31:03Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.level) < 2) { guards.add(node); return; }else { beforeAfterPredicates.add(node); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2718/buggy-version/src.main.java.de.tla2b.analysis.BOperation.java", "BodyUseAPI": ["java.util.ArrayList<tla2sany.semantic.ExprOrOpArgNode>.add(tla2sany.semantic.ExprOrOpArgNode)", "java.util.ArrayList<tla2sany.semantic.ExprOrOpArgNode>.add(tla2sany.semantic.ExprOrOpArgNode)"], "Fixed commit": "4f84c123222ff6f4b43ab97e013b6dc989c11039", "Url": "https://api.github.com/repos/hhu-stups/tla2bAST", "Date": "2014-05-28T12:33:20Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<user>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (u != (this)) { u.write(sentence); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4177/buggy-version/user.java", "BodyUseAPI": ["user.write(java.lang.String)"], "Fixed commit": "948788e6a4e3aefd21fbef3129c209fb8a9a13a2", "Url": "https://api.github.com/repos/Joseph-Burley/IRC_Server", "Date": "2016-01-27T03:03:45Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fosstrak.llrp.client.LLRPMessageItem.getMessageType()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == msg) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7208/buggy-version/llrp-commander.src.main.java.org.fosstrak.llrp.commander.views.MessageboxView.java", "BodyUseAPI": [], "Fixed commit": "90b4c23865c5a60d16f8be53545d311fa609d191", "Url": "https://api.github.com/repos/Fosstrak/fosstrak-llrp", "Date": "2008-12-27T14:52:31Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((table.getOffsetWidth()) >= (scrollForCollectionProgress.getOffsetWidth())) { leftArrow.setVisible(true); rightArrow.setVisible(true); leftArrow.getElement().getStyle().setTop((54 + ((scrollForCollectionProgress.getOffsetHeight()) / 2)), Unit.PX); rightArrow.getElement().getStyle().setBottom((60 + ((scrollForCollectionProgress.getOffsetHeight()) / 2)), Unit.PX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5201/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.analytics.collectionProgress.CollectionProgressWidget.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.HTMLPanel.getOffsetHeight()", "leftArrow.getElement().getStyle().setTop((54 + ((scrollForCollectionProgress.getOffsetHeight()) / 2)),Unit.PX)", "com.google.gwt.user.client.ui.HTMLPanel.getOffsetHeight()", "rightArrow.getElement().getStyle().setBottom((60 + ((scrollForCollectionProgress.getOffsetHeight()) / 2)),Unit.PX)"], "Fixed commit": "ef5703d12ee23729d99b5e6a1b888f6a4559e7cd", "Url": "https://api.github.com/repos/suryanarayanakb/Gooru-Web", "Date": "2014-12-22T11:44:09Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.illinois.library.cantaloupe.image.Scale.getResultingScale(java.awt.Dimension)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (pct != null) { rf = edu.illinois.library.cantaloupe.processor.ReductionFactor.forScale(pct); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1518/buggy-version/src.main.java.edu.illinois.library.cantaloupe.processor.PdfBoxProcessor.java", "BodyUseAPI": ["edu.illinois.library.cantaloupe.processor.ReductionFactor.forScale(java.lang.Float)"], "Fixed commit": "562844f3e69a889d88106791cb317f656f655c3f", "Url": "https://api.github.com/repos/medusa-project/cantaloupe", "Date": "2016-02-17T21:39:35Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mShareMenuItem) != null) mShareMenuItem.setVisible(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2399/buggy-version/app.src.main.java.com.manpdev.androidnanodegree.popularmov.movie.moviedetails.MovieDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "9295f5b6a90937484c9ccf70c8a72028e86e10b6", "Url": "https://api.github.com/repos/novoapro/android-nd-popular-mov", "Date": "2016-03-26T14:04:11Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((holeCards.size()) == 2) { for (java.lang.Object o : holeCards) { java.lang.System.out.println((\"find me \" + o)); com.google.gson.JsonObject js0 = holeCards.get(0).get(\"rank\").getAsJsonObject(); com.google.gson.JsonObject js1 = holeCards.get(1).get(\"rank\").getAsJsonObject(); if ((((js0.equals(js1)) || (js0.equals(\"A\"))) || (js1.equals(\"A\"))) || (((js0.equals(\"K\")) && (js1.equals(\"10\"))) || ((js1.equals(\"K\")) && (js0.equals(\"10\"))))) { return (currentBuyIn - bet) + (json.get(\"minimum_raise\").getAsInt()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1536/buggy-version/src.main.java.org.leanpoker.player.Player.java", "BodyUseAPI": ["java.util.List<com.google.gson.JsonObject>.get(int)", "holeCards.get(0).get(\"rank\").getAsJsonObject()", "holeCards.get(1).get(\"rank\").getAsJsonObject()", "holeCards.get(1).get(java.lang.String)", "holeCards.get(0).get(java.lang.String)", "java.util.List<com.google.gson.JsonObject>.get(int)"], "Fixed commit": "bcaea8a1cee663c3e66d7361d650784a2af63425", "Url": "https://api.github.com/repos/wH47wH0/poker-player-zb-zs", "Date": "2017-01-12T09:54:38Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.exists()) { file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3204/buggy-version/download.src.main.java.com.qw.download.DownloadTask.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "1744490feb733fc10ad37709fcdf9877788aff30", "Url": "https://api.github.com/repos/qinweiforandroid/QDownload", "Date": "2016-04-18T09:07:07Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(moduleName.equals(analysisModulesBox.getSelectedItem()))) { moduleName = ((java.lang.String) (analysisModulesBox.getItemAt(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1139/buggy-version/MicroNuclei.src.org.micromanager.micronuclei.MicroNucleiForm.java", "BodyUseAPI": [], "Fixed commit": "2a8492739db29b14f0b875e1298a120d93f66b97", "Url": "https://api.github.com/repos/nicost/mnfinder", "Date": "2017-03-13T22:11:13Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((activating.isPresent()) && (com.skelril.skree.content.registry.item.zone.ZoneItemUtil.hasSameZoneID(itemStacks[i], activating.get()))) { itemStacks[i] = null; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3654/buggy-version/src.main.java.com.skelril.skree.content.registry.item.zone.ZoneItemUtil.java", "BodyUseAPI": [], "Fixed commit": "aa518676bf67ae343336fc0b3402c838dbabdda2", "Url": "https://api.github.com/repos/Skelril/Skree", "Date": "2016-01-11T00:45:46Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.idTokenObj) == null) { info.kapable.utils.owanotifier.webserver.InternalWebServerTransaction.logger.error(\"Error retriving token\"); info.kapable.utils.owanotifier.OwaNotifier.exit(255); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1137/buggy-version/src.main.java.info.kapable.utils.owanotifier.webserver.InternalWebServerTransaction.java", "BodyUseAPI": [], "Fixed commit": "b307acc7f2f242fce033a44e7b3c9852451dd9dc", "Url": "https://api.github.com/repos/OwaNotifier/owa-notifier", "Date": "2017-09-04T18:12:00Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zanata.dao.TextFlowTargetDAO.findById(((java.lang.Long) (results.get(1))),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((matchingTarget.getId()) == 1292404) || ((matchingTarget.getId()) == 831736)) { log.info((((((\"\\n\\n\\nTargetId: \" + (matchingTarget.getId())) + \" ContentState:\") + copyState) + \" shouldOverwrite:\") + (org.zanata.service.impl.CopyTransServiceImpl.shouldOverwrite(hTarget, copyState)))); log.info((\"shouldOverwrite: \" + (org.zanata.service.impl.CopyTransServiceImpl.shouldOverwrite(hTarget, copyState)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2755/buggy-version/zanata-war.src.main.java.org.zanata.service.impl.CopyTransServiceImpl.java", "BodyUseAPI": ["org.zanata.model.HTextFlowTarget.getId()", "org.jboss.seam.log.Log.info((((((\"\\n\\n\\nTargetId: \" + (matchingTarget.getId())) + \" ContentState:\") + copyState) + \" shouldOverwrite:\") + (org.zanata.service.impl.CopyTransServiceImpl.shouldOverwrite(hTarget, copyState))))"], "Fixed commit": "446f04a0d05037ad8ef0efa5bf015fe903ec89a3", "Url": "https://api.github.com/repos/zanata/zanata", "Date": "2013-01-21T22:35:17Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tb.isClass()) b.setKind(boa.types.Ast.TypeKind.CLASS); else if (tb.isInterface()) b.setKind(boa.types.Ast.TypeKind.INTERFACE); else if (tb.isEnum()) b.setKind(boa.types.Ast.TypeKind.ENUM); else if (tb.isAnnotation()) b.setKind(boa.types.Ast.TypeKind.ANNOTATION); else if (tb.isAnonymous()) b.setKind(boa.types.Ast.TypeKind.ANONYMOUS); else b.setKind(boa.types.Ast.TypeKind.OTHER);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5014/buggy-version/src.java.boa.datagen.util.Java7Visitor.java", "BodyUseAPI": ["boa.datagen.util.ITypeBinding.isInterface()", "boa.datagen.util.ITypeBinding.isEnum()", "boa.datagen.util.ITypeBinding.isAnonymous()", "boa.datagen.util.ITypeBinding.isAnnotation()"], "Fixed commit": "9b2a0b6895451b7aa5a0f78a08d2b630f12a1ed4", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2017-07-18T23:55:07Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (itb.isClass()) tb.setKind(boa.types.Ast.TypeKind.CLASS); else if (itb.isInterface()) tb.setKind(boa.types.Ast.TypeKind.INTERFACE); else if (itb.isEnum()) tb.setKind(boa.types.Ast.TypeKind.ENUM); else if (itb.isAnnotation()) tb.setKind(boa.types.Ast.TypeKind.ANNOTATION); else if (itb.isAnonymous()) tb.setKind(boa.types.Ast.TypeKind.ANONYMOUS); else tb.setKind(boa.types.Ast.TypeKind.OTHER);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5014/buggy-version/src.java.boa.datagen.util.Java7Visitor.java", "BodyUseAPI": ["boa.datagen.util.ITypeBinding.isEnum()", "boa.datagen.util.ITypeBinding.isAnnotation()", "boa.datagen.util.ITypeBinding.isAnonymous()", "boa.datagen.util.ITypeBinding.isInterface()"], "Fixed commit": "9b2a0b6895451b7aa5a0f78a08d2b630f12a1ed4", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2017-07-18T23:55:07Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tb.isClass()) b.setKind(boa.types.Ast.TypeKind.CLASS); else if (tb.isInterface()) b.setKind(boa.types.Ast.TypeKind.INTERFACE); else if (tb.isEnum()) b.setKind(boa.types.Ast.TypeKind.ENUM); else if (tb.isAnnotation()) b.setKind(boa.types.Ast.TypeKind.ANNOTATION); else if (tb.isAnonymous()) b.setKind(boa.types.Ast.TypeKind.ANONYMOUS); else b.setKind(boa.types.Ast.TypeKind.OTHER);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5014/buggy-version/src.java.boa.datagen.util.Java7Visitor.java", "BodyUseAPI": ["boa.datagen.util.ITypeBinding.isAnonymous()", "boa.datagen.util.ITypeBinding.isEnum()", "boa.datagen.util.ITypeBinding.isAnnotation()", "boa.datagen.util.ITypeBinding.isInterface()"], "Fixed commit": "9b2a0b6895451b7aa5a0f78a08d2b630f12a1ed4", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2017-07-18T23:55:07Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getDataAccess().getModules(service.getServiceId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((modules != null) && (!(modules.isEmpty()))) { for (java.lang.Module module : modules) { if (module.getPlatform().equals(oldValue)) { com.northernwall.hadrian.handlers.utility.ConvertHandler.LOGGER.info(\"Found a module with '{}' environment, {} in {}\", oldValue, module.getModuleName(), service.getServiceName()); module.setPlatform(newValue); getDataAccess().updateModule(module); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5921/buggy-version/src.main.java.com.northernwall.hadrian.handlers.utility.ConvertHandler.java", "BodyUseAPI": [], "Fixed commit": "444cd65c64c427c9bbe066faef3cab1622deaa36", "Url": "https://api.github.com/repos/Jukkorsis/Hadrian", "Date": "2017-03-30T15:49:42Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (preferFirstSelected) { java.util.List<org.datavyu.models.db.Variable> vlist = org.datavyu.Datavyu.getProjectController().getDB().getSelectedVariables(); if (!(vlist.isEmpty())) { v = vlist.get(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1584/buggy-version/src.main.java.org.datavyu.controllers.CreateNewCellC.java", "BodyUseAPI": [], "Fixed commit": "a7add7ef0e8fc69c60c989d0776c1272c4124dbd", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2014-07-25T20:51:49Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (oldVersion < 4) { db.execSQL((\"DROP TABLE IF EXISTS \" + (com.vaguehope.onosendai.storage.DbAdapter.TBL_TW))); db.execSQL((\"DROP TABLE IF EXISTS \" + (com.vaguehope.onosendai.storage.DbAdapter.TBL_SC))); onCreate(db); }else { if (oldVersion < 5) db.execSQL(((((\"ALTER TABLE \" + (com.vaguehope.onosendai.storage.DbAdapter.TBL_TW)) + \" ADD COLUMN \") + (com.vaguehope.onosendai.storage.DbAdapter.TBL_TW_AVATAR)) + \" text;\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5408/buggy-version/src.main.java.com.vaguehope.onosendai.storage.DbAdapter.java", "BodyUseAPI": [], "Fixed commit": "e3bbf6a32a0eee4d9c465edae5136654bd9aab57", "Url": "https://api.github.com/repos/haku/Onosendai", "Date": "2013-03-23T15:33:12Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mRecycler.getLayoutManager()) instanceof android.support.v7.widget.LinearLayoutManager) { android.support.v7.widget.LinearLayoutManager linearManager = ((android.support.v7.widget.LinearLayoutManager) (mRecycler.getLayoutManager())); int firstItemPosition = linearManager.findFirstVisibleItemPosition(); if (0 == firstItemPosition) { ((com.gzfgeh.adapter.RecyclerArrayAdapter) (mRecycler.getAdapter())).stopMore(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2804/buggy-version/grecyclerview.src.main.java.com.gzfgeh.GRecyclerView.java", "BodyUseAPI": ["android.support.v7.widget.RecyclerView.getAdapter()", "android.support.v7.widget.RecyclerView.getLayoutManager()", "((com.gzfgeh.adapter.RecyclerArrayAdapter) (mRecycler.getAdapter())).stopMore()"], "Fixed commit": "36a6712ec3c335a918daa38b78ccd73f901cea68", "Url": "https://api.github.com/repos/gzfgeh/GRecyclerView", "Date": "2017-04-20T10:03:46Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["flight.getDiscounts().iterator().next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((discountFromFlight.getId()) != null) { discountFromDatabase = volumeDiscountRepository.find(discountFromFlight.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4613/buggy-version/src.main.java.com.realdolmen.redotravel.service.FlightService.java", "BodyUseAPI": ["com.realdolmen.redotravel.repository.VolumeDiscountRepository.find(discountFromFlight.getId())", "com.realdolmen.redotravel.domain.VolumeDiscount.getId()"], "Fixed commit": "901ac3861cf4a138b6c4408dd8ad49896f44ca4a", "Url": "https://api.github.com/repos/zynne/redo-air", "Date": "2014-10-12T09:14:13Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currClassSize == (SearchAndUpdateDriver.CLASS_SIZE)) { aclClasses.put(classnum, aclClassList); classnum++; currClassSize = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5063/buggy-version/src.edu.umass.cs.privacyExp.UserInitializationACLWithClasses.java", "BodyUseAPI": [], "Fixed commit": "b086b1c91212b56c964b61af9dddc09e3289db14", "Url": "https://api.github.com/repos/ayadavumass/ContextServiceExperimentCode", "Date": "2016-05-05T20:36:20Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.hasChildren()) { int visualDepth = findVisualDepthForNode(node, depthMatrix, minDepth); for (java.util.Iterator<com.toomasr.sgf4j.parser.GameNode> ite = node.getChildren().iterator(); ite.hasNext();) { calculateVisualDepthFor(ite.next(), depthMatrix, (visualDepth + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1953/buggy-version/src.main.java.com.toomasr.sgf4j.parser.VisualDepthHelper.java", "BodyUseAPI": ["node.getChildren().iterator()", "com.toomasr.sgf4j.parser.VisualDepthHelper.findVisualDepthForNode(com.toomasr.sgf4j.parser.GameNode,java.util.List<java.util.List<java.lang.Integer>>,int)", "com.toomasr.sgf4j.parser.GameNode.getChildren()"], "Fixed commit": "70588d6ee2fcf769b03eef5df2d2a19f6f109df8", "Url": "https://api.github.com/repos/toomasr/sgf4j", "Date": "2016-08-13T14:28:07Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(hero.isDying())) { hero.damage(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1007/buggy-version/src.mr.model.state.trap.TrapUp.java", "BodyUseAPI": ["mr.controller.entity.Hero.damage(int)"], "Fixed commit": "f1fbe3f05f18ccc1ac7fbb5e06aea04c7607a8bb", "Url": "https://api.github.com/repos/SimonPiCarter/MarioRewind", "Date": "2016-04-22T18:51:28Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mat == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/482/buggy-version/src.main.java.org.openpnp.util.OpenCvUtils.java", "BodyUseAPI": [], "Fixed commit": "c2cca98aa880f411901347118eee5b856c023e58", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2017-03-22T02:01:13Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (img == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/482/buggy-version/src.main.java.org.openpnp.util.OpenCvUtils.java", "BodyUseAPI": [], "Fixed commit": "c2cca98aa880f411901347118eee5b856c023e58", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2017-03-22T02:01:13Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.NavigableMap<java.lang.Integer, java.util.Set<org.jgll.grammar.slot.BodyGrammarSlot>>.get(((r.getEnd()) + 1))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (s2 == null) { predictionMap.put(((r.getEnd()) + 1), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6242/buggy-version/src.org.jgll.grammar.slot.HeadGrammarSlotWithFirstFollowCheck.java", "BodyUseAPI": [], "Fixed commit": "53474add3cc0c461e329cd34e490797ea3ab8a79", "Url": "https://api.github.com/repos/cwi-swat/iguana", "Date": "2014-02-28T23:17:31Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ref.WeakReference<android.widget.ImageView>.get()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (imageView.getTag().equals(file.getFileId())) { imageView.setImageBitmap(bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2197/buggy-version/src.com.owncloud.android.ui.adapter.FileListListAdapter.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "cbea96e563014a00d7e2f32afe347cd77d2b6a02", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2014-10-09T11:21:50Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.StringUtils.trim(interactions.getValueByLabel(targetTaxonName))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.isNotBlank(valueByLabel)) && (!(org.apache.commons.lang3.StringUtils.equals(\"0\", valueByLabel)))) { final org.eol.globi.domain.Specimen targetSpecimen = nodeFactory.createSpecimen(study, targetTaxonName); targetSpecimen.caughtIn(networkLocation); sourceSpecimen.interactsWith(targetSpecimen, interactType1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7073/buggy-version/eol-globi-data-sources.src.main.java.org.eol.globi.data.StudyImporterForBascompte.java", "BodyUseAPI": [], "Fixed commit": "ec6af9acd8af614cb93d2a810dd75bc10c761c96", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2016-01-16T16:58:52Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status.equals(fetched)) { updateController.reload(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/227/buggy-version/dristhi-app.src.main.java.org.ei.drishti.view.activity.SecuredWebActivity.java", "BodyUseAPI": [], "Fixed commit": "0913d765d6b984008d910bb18f7f2234d704395e", "Url": "https://api.github.com/repos/modilabs/drishti-app", "Date": "2012-08-23T12:56:39Z"},
{"Line": "=>698", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.tokenautocomplete.TokenCompleteTextView.hasFocus())) { com.tokenautocomplete.TokenCompleteTextView.requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8455/buggy-version/library.src.main.java.com.tokenautocomplete.TokenCompleteTextView.java", "BodyUseAPI": [], "Fixed commit": "272211bc1fb3b6655645d7e3a6518ee11dbd258e", "Url": "https://api.github.com/repos/alexcustos/TokenAutoComplete", "Date": "2017-08-15T15:06:38Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kevinmdunne.chess.model.Board.getSpace(java.awt.Point)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((move9 != null) && ((!(move9.isOccupied())) || ((move9.getOccupant().isWhite()) != (this.isWhite())))) { result.add(move9); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4073/buggy-version/chess-model.src.main.java.com.kevinmdunne.chess.model.King.java", "BodyUseAPI": ["java.util.List<com.kevinmdunne.chess.model.Space>.add(com.kevinmdunne.chess.model.Space)"], "Fixed commit": "2c974800aae31ddb25fcae7658c374a6bf763caf", "Url": "https://api.github.com/repos/kevinmdunne/chess", "Date": "2015-11-17T21:00:41Z"},
{"Line": "=>2521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((op.fn) instanceof org.apache.sysml.runtime.functionobjects.Divide) || ((op.fn) instanceof org.apache.sysml.runtime.functionobjects.IntegerDivide)) || ((op.fn) instanceof org.apache.sysml.runtime.functionobjects.Modulus)) { out.getGPUObject(gCtx).allocateAndFillDense(java.lang.Double.NaN); }else if ((op.fn) instanceof org.apache.sysml.runtime.functionobjects.Minus1Multiply) { out.getGPUObject(gCtx).allocateAndFillDense(1.0); }else { out.getGPUObject(gCtx).allocateSparseAndEmpty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8143/buggy-version/src.main.java.org.apache.sysml.runtime.matrix.data.LibMatrixCUDA.java", "BodyUseAPI": [], "Fixed commit": "53e1a760ebaa695e31dc881266bcac13aea9999f", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-06-26T22:51:39Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.msu.nscl.olog.AttachmentManager.findAll(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(ids.isEmpty())) { searchPredicate = cb.or(entry.get(Entry_.id).in(ids), searchPredicate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/367/buggy-version/olog.src.main.java.edu.msu.nscl.olog.LogManager.java", "BodyUseAPI": ["edu.msu.nscl.olog.CriteriaBuilder.or(entry.get(Entry_.id).in(ids),edu.msu.nscl.olog.Predicate)", "entry.get(Entry_.id).in(java.util.List<java.lang.Long>)"], "Fixed commit": "071a8043fac2cd9cf4540de8fcd53a08ab11800c", "Url": "https://api.github.com/repos/Olog/olog-service", "Date": "2013-01-21T17:23:35Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (settings.getPrivateKey().equalsIgnoreCase(\"N/a\")) { settings.setPrivateKey(com.cloudcraftgaming.discal.internal.crypto.KeyGenerator.csRandomAlphaNumericString(16)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5349/buggy-version/src.main.java.com.cloudcraftgaming.discal.database.DatabaseManager.java", "BodyUseAPI": ["com.cloudcraftgaming.discal.internal.data.GuildSettings.setPrivateKey(com.cloudcraftgaming.discal.internal.crypto.KeyGenerator.csRandomAlphaNumericString(16))"], "Fixed commit": "a1a412f06b66cea513395ad6e17426cbe22d2f9c", "Url": "https://api.github.com/repos/NovaFox161/DisCal-Discord-Bot", "Date": "2017-04-02T22:34:29Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(Common.POSTING_METHODS.contains(request.getMethod().toUpperCase()))) { stringBuilder.append(((by.stub.utils.HttpRequestUtils.INDENT_UNIT) + \"PARAMETERS: \")).append(by.stub.utils.HttpRequestUtils.debugStringParameters(request, 1)).append(by.stub.utils.FileUtils.BR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4310/buggy-version/main.java.by.stub.utils.HttpRequestUtils.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "by.stub.utils.HttpRequestUtils.debugStringParameters(javax.servlet.http.HttpServletRequest,int)", "java.lang.StringBuilder.append(by.stub.utils.FileUtils.BR)"], "Fixed commit": "b68945d8a603793c10d8688516fda730fa2dabed", "Url": "https://api.github.com/repos/sohtsuka/stubby4j", "Date": "2016-05-16T13:32:23Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getControlGraph()) != null) { return getControlGraph().getInferedType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/484/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.fml.FlexoBehaviour.java", "BodyUseAPI": [], "Fixed commit": "80582032cdf22d0fa5442f108f395ac19c351773", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2016-04-29T20:17:44Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.bull.javamelody.Parameters.getParameter(Parameter.DISPLAYED_COUNTERS)) == null) { java.lang.System.setProperty(((Parameters.PARAMETER_SYSTEM_PREFIX) + (Parameter.DISPLAYED_COUNTERS)), \"http,sql,error,log\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8492/buggy-version/src.main.java.net.bull.javamelody.LiferayMonitoringFilter.java", "BodyUseAPI": [], "Fixed commit": "dba091dbb9e26edf17f9b1baa711137d28a1e88c", "Url": "https://api.github.com/repos/javamelody/liferay-javamelody", "Date": "2016-03-25T21:20:09Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (found) message = \"Good code\"; else message = \"Sorry code not found\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3809/buggy-version/Chapter8.DebuggingExercises.DebugEight1.java", "BodyUseAPI": [], "Fixed commit": "b704bc0d5771aff8e1def06ce2bd2656d70b71fd", "Url": "https://api.github.com/repos/AlexCSilva/CP2406_Practicals_2016", "Date": "2016-09-05T01:19:29Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (params.isEmpty()) { return new io.crate.protocols.postgres.types.DummyPortal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1579/buggy-version/sql.src.main.java.io.crate.protocols.postgres.SimplePortal.java", "BodyUseAPI": [], "Fixed commit": "b87d6edfdbf02097107702e98530786b4af279a8", "Url": "https://api.github.com/repos/crate/crate", "Date": "2016-07-21T09:37:18Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.jcr.Property.getName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (name.equals(\"exo:labels\")) { java.util.Set<java.lang.String> label = new java.util.HashSet<java.lang.String>(); for (javax.jcr.Value a : p.getValues()) { label.add(a.getString()); } task.setLabels(label); }else if (name.equals(\"exo:createdDate\")) { task.setCreatedDate(p.getLong()); }else if (name.equals(\"exo:modifiedDate\")) { task.setModifedDate(p.getLong()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/9243/buggy-version/lib.src.main.java.org.exoplatform.task.jcr.TaskDAO.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "5e139305ec9e0cb31b0d53e46a72d772c8f570a3", "Url": "https://api.github.com/repos/exo-codefest/2014-team-E", "Date": "2014-06-29T04:03:16Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.uulm.mi.mind.objects.DataList<de.uulm.mi.mind.objects.Area>.indexOf(de.uulm.mi.mind.objects.Area)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (index < 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4901/buggy-version/src.de.uulm.mi.mind.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6553ca9966382fbcc3bed3a19d71d67303019ff3", "Url": "https://api.github.com/repos/Cassio90/mind", "Date": "2014-04-25T18:02:41Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scheduledExecutorService) != null) { scheduledExecutorService.shutdownNow(); scheduledExecutorService = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4127/buggy-version/app.src.main.java.com.ffeichta.runnergy.gui.fragments.ActivityFragment.java", "BodyUseAPI": [], "Fixed commit": "e28490df1d4b9fcda66f8cf81e633720276acbef", "Url": "https://api.github.com/repos/fafeichter/Runnergy", "Date": "2016-03-27T17:58:21Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (fileName)) { throw new java.lang.RuntimeException(\"EOF but no fileName at endWindow\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8630/buggy-version/demos.wordcount.src.main.java.com.datatorrent.demos.wordcount.FileWordCount.java", "BodyUseAPI": [], "Fixed commit": "2649ec9409c2cfe5ee11e04f5a6a0f6898eb9591", "Url": "https://api.github.com/repos/siyuanh/apex-malhar", "Date": "2015-09-27T20:31:34Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.minecraftforge.fluids.FluidContainerRegistry.containsFluid(acquiredStack, new net.minecraftforge.fluids.FluidStack(pneumaticCraft.common.fluid.Fluids.oil, 1))) { pneumaticCraft.common.AchievementHandler.giveAchievement(player, pneumaticCraft.common.fluid.Fluids.getBucket(Fluids.oil).getUnlocalizedName().substring(5)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4550/buggy-version/src.pneumaticCraft.common.AchievementHandler.java", "BodyUseAPI": [], "Fixed commit": "3a9cd102a9052713221918652d9cfa90a97456e4", "Url": "https://api.github.com/repos/AnodeCathode/PneumaticCraft", "Date": "2015-11-27T10:45:48Z"},
{"Line": "=>915", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.bluetooth.btservice.AdapterService.getAdapterService()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((adapterService == null) || (((adapterService.isQuietModeEnabled()) == true) && ((mTargetDevice) == null))) { ret = false; }else if (((android.bluetooth.BluetoothProfile.PRIORITY_OFF) < priority) || (((android.bluetooth.BluetoothProfile.PRIORITY_UNDEFINED) == priority) && ((device.getBondState()) != (android.bluetooth.BluetoothDevice.BOND_NONE)))) { ret = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5897/buggy-version/src.com.android.bluetooth.a2dp.A2dpSinkStateMachine.java", "BodyUseAPI": [], "Fixed commit": "e8d687948cb24a6711a654c63f585c217b965249", "Url": "https://api.github.com/repos/ThirdProject/android_packages_apps_Bluetooth", "Date": "2015-10-27T22:51:48Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tencent.sonic.sdk.SonicServer.getResponseHeaderField(SonicSessionConnection.CUSTOM_HEAD_FILED_CACHE_OFFLINE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(cacheOffline)) { addResponseHeaderFields(SonicSessionConnection.CUSTOM_HEAD_FILED_CACHE_OFFLINE, com.tencent.sonic.sdk.SonicSession.OFFLINE_MODE_TRUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3249/buggy-version/sonic-android.sdk.src.main.java.com.tencent.sonic.sdk.SonicServer.java", "BodyUseAPI": [], "Fixed commit": "504bf519bc4d7edba41d1baa2f1f9715615794f1", "Url": "https://api.github.com/repos/Tencent/VasSonic", "Date": "2017-11-03T04:56:20Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraftforge.oredict.OreDictionary.getOres(\"ingotSteel\").size()) > 0) { micdoodle8.mods.galacticraft.api.recipe.CompressorRecipes.addShapelessRecipe(new net.minecraft.item.ItemStack(micdoodle8.mods.galacticraft.core.items.GCCoreItems.basicItem, 1, 10), \"ingotSteel\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3052/buggy-version/common.micdoodle8.mods.galacticraft.core.GalacticraftCore.java", "BodyUseAPI": [], "Fixed commit": "d20e8aeaf3df76c604ba999a495206be2ebbb1d4", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2013-10-15T04:24:35Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraftforge.oredict.OreDictionary.getOres(\"ingotBronze\").size()) > 0) { micdoodle8.mods.galacticraft.api.recipe.CompressorRecipes.addShapelessRecipe(new net.minecraft.item.ItemStack(micdoodle8.mods.galacticraft.core.items.GCCoreItems.basicItem, 1, 9), \"ingotBronze\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3052/buggy-version/common.micdoodle8.mods.galacticraft.core.GalacticraftCore.java", "BodyUseAPI": [], "Fixed commit": "d20e8aeaf3df76c604ba999a495206be2ebbb1d4", "Url": "https://api.github.com/repos/micdoodle8/Galacticraft", "Date": "2013-10-15T04:24:35Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((calabashTags) != null) && (!(calabashTags.isEmpty()))) { parameters.put(\"tags\", calabashTags); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3509/buggy-version/src.main.java.org.jenkinsci.plugins.awsdevicefarm.AWSDeviceFarmRecorder.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "fff09d62033c304fa2ce13f609a74575e5b44214", "Url": "https://api.github.com/repos/awslabs/aws-device-farm-jenkins-plugin", "Date": "2015-08-10T23:34:05Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (element.getName().equals(attribute)) { return element.getChild(\"VALUE\").getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6800/buggy-version/src.main.java.com.bc.fiduceo.reader.AIRS_L1B_Reader.java", "BodyUseAPI": ["element.getChild(\"VALUE\").getValue()", "org.jdom2.Element.getChild(java.lang.String)"], "Fixed commit": "813ac07f349cba855f922768cbe49f3bc64214f5", "Url": "https://api.github.com/repos/bcdev/fiduceo", "Date": "2015-09-03T11:03:04Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result.rejectIfNull(vCard, net.ripe.rpki.commons.crypto.cms.ghostbuster.VALIDATOR_REPOSITORY_GHOSTBUSTERS_RECORD_EMPTY, getParentCertificateUri().toString())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1843/buggy-version/src.main.java.net.ripe.rpki.commons.crypto.cms.ghostbuster.GhostbustersCms.java", "BodyUseAPI": [], "Fixed commit": "014268117ae33096948becfddda98c259ed6c275", "Url": "https://api.github.com/repos/RIPE-NCC/rpki-commons", "Date": "2016-09-12T15:29:31Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["T.getType()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (type == null) { out.nullValue(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7154/buggy-version/src.main.java.org.arl.fjage.remote.GenericValueAdapterFactory.java", "BodyUseAPI": [], "Fixed commit": "50865479a6e88c292adb8ac5617208e9dda7d61d", "Url": "https://api.github.com/repos/org-arl/fjage", "Date": "2017-10-24T09:24:04Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_heap.size()) < 1) return null; else return _heap.get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5365/buggy-version/ALHeap.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Integer>.get(int)"], "Fixed commit": "876de043a4303a32cec876168c1c2e7fb6165d4c", "Url": "https://api.github.com/repos/wuruochong/OSTRTA_ALHeap", "Date": "2016-05-24T01:32:04Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) instanceof com.example.kalongip.chatapp.SocketActivity) { menu.getItem(1).setVisible(false); menu.getItem(2).setVisible(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3403/buggy-version/app.src.main.java.com.example.kalongip.chatapp.ConversationListFragment.java", "BodyUseAPI": [], "Fixed commit": "ca6641e0718aa8722b2001ac16be18627f2b7a69", "Url": "https://api.github.com/repos/comp4521group16/ChatApp", "Date": "2016-05-19T18:05:34Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shiftsForClasses) != null) { java.lang.Class<?> cl = o.getClass(); while ((cl != (java.lang.Object.class)) && ((sh = shiftsForClasses.get(cl)) == null)) cl = cl.getSuperclass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8808/buggy-version/src.main.java.ru.salauyou.util.concurrent.LockKeeperV2.java", "BodyUseAPI": [], "Fixed commit": "528278aa6c524f65766cc76566ed2821a1b18fc6", "Url": "https://api.github.com/repos/Salauyou/Java-Utils", "Date": "2016-05-23T09:05:35Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remote == null) { filesystem.SDFS.logger.error((\"remote file doesn't exist: \" + SDFSFileName)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2990/buggy-version/src.filesystem.SDFS.java", "BodyUseAPI": [], "Fixed commit": "b030732caa01e653c15de3c1afc4fe0f6b10ac61", "Url": "https://api.github.com/repos/naveed2/MP4", "Date": "2012-12-09T22:51:12Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iX == 0) && (iY == 0)) val = 0; else if (iX == 0) val = sol[iX][(iY - 1)]; else val = sol[(iX - 1)][iY];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7304/buggy-version/pi.LongestCommonSubseqDPPrac.java", "BodyUseAPI": [], "Fixed commit": "b675cbc9cdb27dfdea61efb0e9cad09c9e4ad232", "Url": "https://api.github.com/repos/r3t2/practice_ds_algos", "Date": "2017-10-03T16:06:40Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (contents.trim().equals(\"null\")) { task.setDeadline(null); }else { java.util.Calendar due = parseCalendar(contents); task.setDeadline(due); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/197/buggy-version/src.stream.Stream.java", "BodyUseAPI": ["stream.Stream.parseCalendar(java.lang.String)"], "Fixed commit": "304671d901c9b63ef6b44dfca510732e134e9e4c", "Url": "https://api.github.com/repos/cs2103aug2014-f10-1j/main", "Date": "2014-10-23T09:08:30Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg.equals(\"\\\\\")) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3568/buggy-version/src.script.Script.java", "BodyUseAPI": [], "Fixed commit": "c683ad32db87159c49fc44a0ba7a7f8aa66eb44d", "Url": "https://api.github.com/repos/bounceur/CupCarbon", "Date": "2015-11-14T17:52:25Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (len < 2) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7980/buggy-version/src.main.java.palindrome.PalindromeService.java", "BodyUseAPI": [], "Fixed commit": "cce40a01194a436ee438c6698723eca3a2b2bb99", "Url": "https://api.github.com/repos/LucieFaire/palindrome-app", "Date": "2017-10-10T23:26:11Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hbase.regionserver.compactions.DateTieredCompactionPolicy.partitionFilesToBuckets(java.lang.Iterable<org.apache.hadoop.hbase.regionserver.StoreFile>,comConf.getBaseWindowMillis(),comConf.getWindowsPerTier(),long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((buckets.size()) >= (storeConfigInfo.getBlockingFileCount())) { org.apache.hadoop.hbase.regionserver.compactions.DateTieredCompactionPolicy.LOG.warn((((((\"Number of compaction buckets:\" + (buckets.size())) + \", exceeds blocking file count setting: \") + (storeConfigInfo.getBlockingFileCount())) + \", either increase hbase.hstore.blockingStoreFiles or \") + \"reduce the number of tiered compaction windows\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3098/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.compactions.DateTieredCompactionPolicy.java", "BodyUseAPI": ["org.apache.hadoop.hbase.regionserver.compactions.DateTieredCompactionPolicy.getBlockingFileCount()", "org.apache.commons.logging.Log.warn((((((\"Number of compaction buckets:\" + (buckets.size())) + \", exceeds blocking file count setting: \") + (storeConfigInfo.getBlockingFileCount())) + \", either increase hbase.hstore.blockingStoreFiles or \") + \"reduce the number of tiered compaction windows\"))", "java.util.List<java.util.ArrayList<org.apache.hadoop.hbase.regionserver.StoreFile>>.size()"], "Fixed commit": "41c04ee685b07321efe570fa91416ba90f8eeaa9", "Url": "https://api.github.com/repos/apache/hbase", "Date": "2016-03-02T02:31:59Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (argsList == null) { throw new java.lang.IllegalArgumentException((\"ioc args without Loader ClassName. \" + args)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/943/buggy-version/src.org.nutz.ioc.loader.combo.ComboIocLoader.java", "BodyUseAPI": [], "Fixed commit": "50fd4dd8fa1d91ba2980ee10711b28a521ac36ee", "Url": "https://api.github.com/repos/cxshun/nutz", "Date": "2013-06-19T08:53:12Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((speedY) == 0) { speedY = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7334/buggy-version/src.com.tutorial.main.MenuParticle.java", "BodyUseAPI": [], "Fixed commit": "f716a5a82f7a4673388c1388534444276893bb7a", "Url": "https://api.github.com/repos/TecktoAngel/MyNewGameWithSquares", "Date": "2017-09-21T15:54:32Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((speedX) == 0) { speedX = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7334/buggy-version/src.com.tutorial.main.MenuParticle.java", "BodyUseAPI": [], "Fixed commit": "f716a5a82f7a4673388c1388534444276893bb7a", "Url": "https://api.github.com/repos/TecktoAngel/MyNewGameWithSquares", "Date": "2017-09-21T15:54:32Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((signature != null) && ((method.getParameterTypes().length) != (signature.length))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5204/buggy-version/src.com.udojava.jmx.wrapper.JMXBeanWrapper.java", "BodyUseAPI": [], "Fixed commit": "bbfc2345f7cb3804198c83ffe49e1398c8894989", "Url": "https://api.github.com/repos/uklimaschewski/JMXWrapper", "Date": "2013-06-16T12:44:15Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["col.find().sort(sortobj).limit(1).one()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((doc != null) && ((doc.get(key)) != null)) id = (((java.lang.Number) (doc.get(key))).longValue()) + 1; else { id = 1L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5155/buggy-version/datamanagementapi.src.main.java.org.csi.yucca.storage.datamanagementapi.service.InstallCepService.java", "BodyUseAPI": ["((java.lang.Number) (doc.get(key))).longValue()", "com.mongodb.DBObject.get(java.lang.String)"], "Fixed commit": "a7bf4938c3117220dd767e824a3e1ecac04b2e45", "Url": "https://api.github.com/repos/csipiemonte/yucca-storage", "Date": "2014-11-25T11:23:20Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["col.find().sort(sortobj).limit(1).one()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((doc != null) && ((doc.get(key)) != null)) id = (((java.lang.Number) (doc.get(key))).intValue()) + 1; else { id = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5155/buggy-version/datamanagementapi.src.main.java.org.csi.yucca.storage.datamanagementapi.service.InstallTenantService.java", "BodyUseAPI": ["com.mongodb.DBObject.get(java.lang.String)", "((java.lang.Number) (doc.get(key))).intValue()"], "Fixed commit": "a7bf4938c3117220dd767e824a3e1ecac04b2e45", "Url": "https://api.github.com/repos/csipiemonte/yucca-storage", "Date": "2014-11-25T11:23:20Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((UUID) == null) { return \"\"; }else { return UUID.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/833/buggy-version/src.main.java.uk.ac.dundee.computing.aec.instagrim.stores.Pic.java", "BodyUseAPI": [], "Fixed commit": "2ff5b0d78a7f4e81d8cf697e87c29da0fda1cb54", "Url": "https://api.github.com/repos/campbellre/instagrim", "Date": "2015-10-26T05:48:19Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["melnorme.lang.ide.ui.editor.AbstractLangEditor.getSourceViewerConfiguration_asLang()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (langSVC != null) { langSVC.handlePropertyChangeEvent(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7129/buggy-version/plugin_ide.ui.src-lang.melnorme.lang.ide.ui.editor.AbstractLangEditor.java", "BodyUseAPI": ["melnorme.lang.ide.ui.text.AbstractLangSourceViewerConfiguration.handlePropertyChangeEvent(org.eclipse.jface.util.PropertyChangeEvent)"], "Fixed commit": "37879b82d7cc0aca370a3c3802b47a4c0c3e2267", "Url": "https://api.github.com/repos/bruno-medeiros/MelnormeEclipse", "Date": "2015-03-06T17:04:00Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getUniqueId()", "vg.civcraft.mc.bettershards.BetterShardsPlugin.getTransitManager()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tm.isPlayerInArrivalTransit(uuid)) { vg.civcraft.mc.bettershards.listeners.MercuryListener.stageTeleport(uuid, p.getLocation()); }else { if (!(vg.civcraft.mc.bettershards.BetterShardsPlugin.getTransitManager().isPlayerInTransit(uuid))) { st.save(p, st.getInvIdentifier(uuid), true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4955/buggy-version/BetterShardsBukkit.src.main.java.vg.civcraft.mc.bettershards.listeners.BetterShardsListener.java", "BodyUseAPI": ["vg.civcraft.mc.bettershards.misc.CustomWorldNBTStorage.getInvIdentifier(java.util.UUID)", "vg.civcraft.mc.bettershards.listeners.MercuryListener.stageTeleport(java.util.UUID,p.getLocation())", "vg.civcraft.mc.bettershards.BetterShardsPlugin.getTransitManager().isPlayerInTransit(java.util.UUID)", "vg.civcraft.mc.bettershards.misc.CustomWorldNBTStorage.save(org.bukkit.entity.Player,st.getInvIdentifier(uuid),boolean)"], "Fixed commit": "d2436e7fba681de7526bc039052194c19e6fcabb", "Url": "https://api.github.com/repos/BlackXnt/BetterShards", "Date": "2016-09-10T01:23:20Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.thexfactor117.levels.util.ConfigHandler.LOGIN_MESSAGE) { MinecraftForge.EVENT_BUS.register(new com.thexfactor117.levels.event.EventLogin()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1333/buggy-version/src.main.java.com.thexfactor117.levels.proxies.ClientProxy.java", "BodyUseAPI": [], "Fixed commit": "a1c63b87ac84ce3d1a27910cb6d4f12ef31acc01", "Url": "https://api.github.com/repos/TheXFactor117/Levels", "Date": "2017-02-12T16:01:48Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MULE.controllers.Game.getInstance().currentPlayer().getOil()) >= 2) { MULE.controllers.Game.getInstance().changeState(Game.State.FIX); MULE.controllers.ScreenNavigator.getInstance().loadMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/4406/buggy-version/src.MULE.controllers.MULEMechanicController.java", "BodyUseAPI": [], "Fixed commit": "145911fe6d8688ddd5c7e4f12c6ed380ef71b86b", "Url": "https://api.github.com/repos/aparry3/MULEGame", "Date": "2015-11-30T01:59:21Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.apache.synapse.Mediator>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mediator instanceof org.apache.synapse.mediators.builtin.CallMediator) { isCallMediatorFound = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8416/buggy-version/modules.core.src.main.java.org.apache.synapse.mediators.AbstractListMediator.java", "BodyUseAPI": [], "Fixed commit": "58e6cf691c2304583de1fec2700aefd5cec57858", "Url": "https://api.github.com/repos/NipunaMarcus/wso2-synapse", "Date": "2016-06-24T05:20:33Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mData.userData.size()) > (mData.icon.size())) { mData.icon.clear(); mData.roundIcon.clear(); for (com.marcusjakobsson.gadr.UserData user : result) { getBitmapFromURLAsync = new com.marcusjakobsson.gadr.Tab_Map_Fragment.GetBitmapFromURLAsync(); getBitmapFromURLAsync.execute(user.getImgURLSmall()); } }else { reloadMapMarkers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3646/buggy-version/app.src.main.java.com.marcusjakobsson.gadr.Tab_Map_Fragment.java", "BodyUseAPI": ["mData.roundIcon.clear()", "mData.icon.clear()"], "Fixed commit": "bb2ae595227464725c7c9de6064b372f4d6e8e5c", "Url": "https://api.github.com/repos/smaekit/GadR", "Date": "2017-12-12T13:41:41Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tree.getType()) == (com.pmerienne.eventmonitoring.shared.parser.ProjectionParser.NUMBER)) { impl = tree.getText(); }else if (((tree.getType()) == (com.pmerienne.eventmonitoring.shared.parser.ProjectionParser.ARITHMETIC_OPERATOR)) && ((tree.getChildren()) != null)) { java.lang.String part1 = this.getJSFinalizeValuesImplementation(((org.antlr.runtime.tree.CommonTree) (tree.getChild(0))), functionCount); java.lang.String part2 = this.getJSFinalizeValuesImplementation(((org.antlr.runtime.tree.CommonTree) (tree.getChild(1))), functionCount); impl = (((\"(\" + part1) + (tree.getText())) + part2) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2107/buggy-version/src.main.java.com.pmerienne.eventmonitoring.server.repository.utils.JSImplementationBuilder.java", "BodyUseAPI": ["com.pmerienne.eventmonitoring.server.repository.utils.JSImplementationBuilder.getJSFinalizeValuesImplementation(((org.antlr.runtime.tree.CommonTree) (tree.getChild(0))),java.util.concurrent.atomic.AtomicInteger)", "org.antlr.runtime.tree.CommonTree.getChild(int)", "org.antlr.runtime.tree.CommonTree.getType()", "com.pmerienne.eventmonitoring.server.repository.utils.JSImplementationBuilder.getJSFinalizeValuesImplementation(((org.antlr.runtime.tree.CommonTree) (tree.getChild(1))),java.util.concurrent.atomic.AtomicInteger)", "org.antlr.runtime.tree.CommonTree.getText()", "org.antlr.runtime.tree.CommonTree.getText()", "org.antlr.runtime.tree.CommonTree.getChildren()", "org.antlr.runtime.tree.CommonTree.getChild(int)"], "Fixed commit": "1a387d4c3a8937d025f61945d1c0b6fffbaf3958", "Url": "https://api.github.com/repos/pmerienne/event-monitoring", "Date": "2012-06-19T12:44:24Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.python.util.PythonInterpreter.getLocals()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (_locals instanceof socialite.functions.PyDictionary) { it = ((socialite.functions.PyIterator) (((socialite.functions.PyDictionary) (_locals)).itervalues())); }else { it = ((socialite.functions.PyIterator) (((socialite.functions.PyStringMap) (_locals)).itervalues())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1051/buggy-version/src.socialite.functions.PyInterp.java", "BodyUseAPI": [], "Fixed commit": "3abe264629244c71480c99fb7e72a60c5058a02f", "Url": "https://api.github.com/repos/socialite-lang/socialite", "Date": "2014-09-11T21:22:20Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.wazari.bootstrap.GF.cfg.root_path.endsWith(\"/\"))) { net.wazari.bootstrap.GF.cfg.root_path += \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6571/buggy-version/WebAlbums3-Bootstrap.src.net.wazari.bootstrap.GF.java", "BodyUseAPI": [], "Fixed commit": "6260d5898e2530abe01c8728e10686da23a5d722", "Url": "https://api.github.com/repos/wazari972/WebAlbums-3", "Date": "2012-09-26T17:01:47Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextPipIndex >= (data.size())) || (nextPipIndex < 0)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/785/buggy-version/src.main.java.com.github.TKnudsen.timeseries.operations.preprocessing.univariate.PerceptuallyImportantPoints.java", "BodyUseAPI": [], "Fixed commit": "db2e9e3f05cbcc6a95001f92b53259173b1b33fe", "Url": "https://api.github.com/repos/TKnudsen/timeSeries", "Date": "2017-02-13T20:02:28Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.android.arouter.launcher.ARouter.getInstance().build(\"/pbs_ov_fragment/1\").navigation()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fragment == null) { android.widget.Toast.makeText(this, \"IS NULL\", Toast.LENGTH_SHORT).show(); }else { android.widget.Toast.makeText(this, \"IS NOT NULL\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6337/buggy-version/app.src.main.java.cn.edu.nuc.partybuildingstudies.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "20d385c5b3cb5a8ab50b2288896dc66c1d6571b8", "Url": "https://api.github.com/repos/InnoFang/PartyBuildingStudies", "Date": "2017-08-27T07:19:16Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (adapter instanceof com.youzan.titan.TitanAdapter) { mTitanAdapter = ((com.youzan.titan.TitanAdapter) (adapter)); mItemClickSupport = new com.youzan.titan.internal.ItemClickSupport(this, ((com.youzan.titan.TitanAdapter) (adapter))); mItemClickSupport.setOnItemClickListener(mOnItemClickListener); mItemClickSupport.setOnItemLongClickListener(mOnItemLongClickListener); optimizeGridLayout(getLayoutManager()); setupLoadMore(); setupAdapter(); adapter.registerAdapterDataObserver(new com.youzan.titan.AdapterDataObserver() { @java.lang.Override public void onChanged() { if ((getLayoutManager().getItemCount()) == (mOnEndlessScrollListener.mPreviousTotal)) { mOnEndlessScrollListener.mPreviousTotal = 0; } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8459/buggy-version/titan.src.main.java.com.youzan.titan.TitanRecyclerView.java", "BodyUseAPI": ["com.youzan.titan.Adapter.registerAdapterDataObserver(com.youzan.titan.AdapterDataObserver)"], "Fixed commit": "7280e23845e1913c974a5b303709c6bf0cdde48e", "Url": "https://api.github.com/repos/youzan/TitanRecyclerView", "Date": "2016-08-26T06:33:38Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Module.searchByCriteria(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)", "java.lang.Module.countByCriteria(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((total == 1) && (!(modules.isEmpty()))) { controllers.Repo.versions(modules.get(0).name); }else { int pages = util.Util.pageCount(total); java.lang.String queryPart = util.Util.unpageQuery(page); renderTemplate(\"Repo/search.html\", name, friendlyName, member, license, category, modules, page, pages, total, queryPart); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8376/buggy-version/app.controllers.Repo.java", "BodyUseAPI": ["controllers.Repo.versions(java.lang.String)", "java.util.List<java.lang.Module>.get(int)", "util.Util.pageCount(long)", "controllers.Repo.renderTemplate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List<java.lang.Module>,java.lang.Integer,int,long,java.lang.String)"], "Fixed commit": "0e12518a7c4c911c269af941e2e3bdbafb252706", "Url": "https://api.github.com/repos/eclipse/ceylon-herd", "Date": "2016-02-03T15:05:58Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.smano.app.MainActivity.findViewById(R.id.editTextDay)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (editTextDay != null) { editTextDay.addTextChangedListener(tw); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3956/buggy-version/app.src.main.java.com.example.smano.app.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.addTextChangedListener(android.text.TextWatcher)"], "Fixed commit": "6770498e534cbba18c0b7ca2518bc94e0a85ac21", "Url": "https://api.github.com/repos/smanol/energeiApp", "Date": "2017-03-05T16:41:28Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.smano.app.MainActivity.findViewById(R.id.editTextNight)", "com.example.smano.app.MainActivity.findViewById(R.id.editTextDay)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((editTextDay != null) && (editTextNight != null)) { java.lang.String s1 = editTextDay.getText().toString(); java.lang.String s2 = editTextNight.getText().toString(); b.setEnabled(((!(s1.trim().isEmpty())) && (!(s2.trim().isEmpty())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3956/buggy-version/app.src.main.java.com.example.smano.app.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "editTextDay.getText().toString()", "android.widget.EditText.getText()", "editTextNight.getText().toString()"], "Fixed commit": "6770498e534cbba18c0b7ca2518bc94e0a85ac21", "Url": "https://api.github.com/repos/smanol/energeiApp", "Date": "2017-03-05T16:41:28Z"},
{"Line": "=>643", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.smano.app.MainActivity.findViewById(R.id.editTextNight)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (editTextNight != null) { editTextNight.addTextChangedListener(tw); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3956/buggy-version/app.src.main.java.com.example.smano.app.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.addTextChangedListener(android.text.TextWatcher)"], "Fixed commit": "6770498e534cbba18c0b7ca2518bc94e0a85ac21", "Url": "https://api.github.com/repos/smanol/energeiApp", "Date": "2017-03-05T16:41:28Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (listType == (com.dgaf.happyhour.Model.DealListType.FOOD)) { icon.setImageResource(R.drawable.ic_food_placeholder); }else { icon.setImageResource(R.drawable.ic_drinks_placeholder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2246/buggy-version/app.src.main.java.com.dgaf.happyhour.Adapter.DealListAdapter.java", "BodyUseAPI": [], "Fixed commit": "942a44c5f74da4b91d67c700e7a92bfc9f4ae3f5", "Url": "https://api.github.com/repos/TheBurrd/androidClient", "Date": "2015-08-02T15:40:23Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (repeat) { repeat = false; buttonRepeat.setStyle(\"-fx-background-color: transparent;\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/765/buggy-version/FXplayer.src.com.FXplayer.FXMLDocumentController.java", "BodyUseAPI": [], "Fixed commit": "de8a31caddca2f1caff0886e2e5d15b0df37f4f7", "Url": "https://api.github.com/repos/edgarpf/FXplayer", "Date": "2015-10-27T20:27:15Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (refModel.getRefFormat().equals(RefFormat.INTERNAL)) { ref = refModel.getSimpleRef(); }else { ref = model.getReference(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/21/buggy-version/src.main.java.io.github.robwin.swagger2markup.builder.document.DefinitionsDocument.java", "BodyUseAPI": ["io.swagger.models.RefModel.getSimpleRef()"], "Fixed commit": "9d216e3dc212b22ddbb782a0557c8f58766a547b", "Url": "https://api.github.com/repos/i-fimafeng/swagger2markup", "Date": "2015-11-09T14:49:35Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numberOfEquivalenceClasses - numberOfOutlyingEquivalenceClasses) == 0) { averageEquivalenceClassSize = 0; }else { averageEquivalenceClassSize = ((double) (averageEquivalenceClassSizeCounter)) / ((double) (numberOfEquivalenceClasses - numberOfOutlyingEquivalenceClasses)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/938/buggy-version/src.main.org.deidentifier.arx.framework.check.groupify.HashGroupify.java", "BodyUseAPI": [], "Fixed commit": "74a9f400a6b561509988c81dbccc9a9e5f6a61c8", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-04-11T23:03:35Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (minimalEquivalenceClassSize == (java.lang.Integer.MAX_VALUE)) { minimalEquivalenceClassSize = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/938/buggy-version/src.main.org.deidentifier.arx.framework.check.groupify.HashGroupify.java", "BodyUseAPI": [], "Fixed commit": "74a9f400a6b561509988c81dbccc9a9e5f6a61c8", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-04-11T23:03:35Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maximalEquivalenceClassSize == (java.lang.Integer.MIN_VALUE)) { maximalEquivalenceClassSize = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/938/buggy-version/src.main.org.deidentifier.arx.framework.check.groupify.HashGroupify.java", "BodyUseAPI": [], "Fixed commit": "74a9f400a6b561509988c81dbccc9a9e5f6a61c8", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-04-11T23:03:35Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (line == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5448/buggy-version/main.java.dataset.WashingtonUniversity.java", "BodyUseAPI": [], "Fixed commit": "5d66775ab84267ec521793132f6e5a6870e74d75", "Url": "https://api.github.com/repos/wangkekekexili/ColorWorld", "Date": "2015-01-31T21:17:21Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((configuration.getProxyConfiguration()) != null) { driverHtmlUnit.setProxy(configuration.getProxyConfiguration().getHostname(), configuration.getProxyConfiguration().getPort()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3078/buggy-version/core.src.main.java.com.crawljax.browser.WebDriverBrowserBuilder.java", "BodyUseAPI": ["configuration.getProxyConfiguration().getPort()", "configuration.getProxyConfiguration().getHostname()", "com.crawljax.core.configuration.CrawljaxConfigurationReader.getProxyConfiguration()", "com.crawljax.core.configuration.CrawljaxConfigurationReader.getProxyConfiguration()", "org.openqa.selenium.htmlunit.HtmlUnitDriver.setProxy(configuration.getProxyConfiguration().getHostname(),configuration.getProxyConfiguration().getPort())"], "Fixed commit": "50ac59ab041248b9cb4a5f22b70548fab2bbd28f", "Url": "https://api.github.com/repos/crawljax/crawljax", "Date": "2013-01-16T06:07:58Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((configuration.getProxyConfiguration()) != null) { org.openqa.selenium.chrome.ChromeOptions optionsChrome = new org.openqa.selenium.chrome.ChromeOptions(); optionsChrome.addArguments((((\"--proxy-server=http://\" + (configuration.getProxyConfiguration().getHostname())) + \":\") + (configuration.getProxyConfiguration().getPort()))); driverChrome = new org.openqa.selenium.chrome.ChromeDriver(optionsChrome); }else { driverChrome = new org.openqa.selenium.chrome.ChromeDriver(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3078/buggy-version/core.src.main.java.com.crawljax.browser.WebDriverBrowserBuilder.java", "BodyUseAPI": ["configuration.getProxyConfiguration().getPort()", "org.openqa.selenium.chrome.ChromeOptions.addArguments((((\"--proxy-server=http://\" + (configuration.getProxyConfiguration().getHostname())) + \":\") + (configuration.getProxyConfiguration().getPort())))", "com.crawljax.core.configuration.CrawljaxConfigurationReader.getProxyConfiguration()", "configuration.getProxyConfiguration().getHostname()", "com.crawljax.core.configuration.CrawljaxConfigurationReader.getProxyConfiguration()"], "Fixed commit": "50ac59ab041248b9cb4a5f22b70548fab2bbd28f", "Url": "https://api.github.com/repos/crawljax/crawljax", "Date": "2013-01-16T06:07:58Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (outState.isEmpty()) { outState.putBoolean(\"bug:fix\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/1766/buggy-version/app.src.main.java.com.bhavyakamboj.popularmovies.MoviesFragment.java", "BodyUseAPI": ["android.os.Bundle.putBoolean(java.lang.String,boolean)"], "Fixed commit": "a31c737afde43246769a782880cf2bf1296a0e11", "Url": "https://api.github.com/repos/bkamboj/PopularMovies", "Date": "2016-12-31T13:49:44Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bbox == null) { return obj; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/775/buggy-version/geoserver.webapp.src.main.java.com.boundlessgeo.geoserver.api.controllers.IO.java", "BodyUseAPI": [], "Fixed commit": "c39c2bf9afd3f7ddfeba0345849f595b95b0f2db", "Url": "https://api.github.com/repos/boundlessgeo/suite", "Date": "2015-03-19T18:09:44Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(mLocation)) { mLocation = location; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5716/buggy-version/app.src.main.java.com.xiroid.sunshine.app.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "98411faf5f9c0cefdddfa34da0f5b6212a3341fd", "Url": "https://api.github.com/repos/chowPATHojun/Sunshine", "Date": "2016-05-28T03:02:28Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mListView.getAdapter()) == null) { mAdapter = new com.direv.direv.Utils.MainfeedListAdapter(getActivity(), R.layout.list_item, mPaginatedPhotos); mListView.setAdapter(mAdapter); }else { mAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7199/buggy-version/app.src.main.java.com.direv.direv.FeedNearbyFragment.java", "BodyUseAPI": ["android.widget.ListView.setAdapter(com.direv.direv.Utils.MainfeedListAdapter)"], "Fixed commit": "eedeaafec2812d8374ef7100c0c20627a6d369e6", "Url": "https://api.github.com/repos/mlandavazo/direv", "Date": "2017-12-13T05:03:13Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFinishing()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5452/buggy-version/src.com.android.settings.InstalledAppDetails.java", "BodyUseAPI": [], "Fixed commit": "d49e5e6828876e302f39b4673fa573c3e7395df4", "Url": "https://api.github.com/repos/napodan/android_packages_apps_Settings", "Date": "2010-03-31T18:20:24Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.vanroy.springdata.jest.JestElasticsearchTemplate.execute(getMappingBuilder.build())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(result.getJsonObject().has(indexName))) { com.github.vanroy.springdata.jest.JestElasticsearchTemplate.logger.info(\"Index {} did not exist when retrieving mappings for type {}.\", indexName, type); }else { com.google.gson.JsonObject index = result.getJsonObject().get(indexName).getAsJsonObject(); if (index != null) { com.google.gson.JsonObject mappingElem = index.get(\"mappings\").getAsJsonObject(); if (!(mappingElem.has(type))) { com.github.vanroy.springdata.jest.JestElasticsearchTemplate.logger.info(\"Type {} did not exist in index {} when retrieving mappings.\", type, indexName); }else { mappings = resultsMapper.getEntityMapper().mapToObject(mappingElem.get(type).toString(), java.util.Map.class); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/641/buggy-version/spring-data-jest.src.main.java.com.github.vanroy.springdata.jest.JestElasticsearchTemplate.java", "BodyUseAPI": ["io.searchbox.client.JestResult.getJsonObject()", "org.slf4j.Logger.info(java.lang.String,java.lang.String,java.lang.String)", "result.getJsonObject().get(indexName).getAsJsonObject()", "result.getJsonObject().get(java.lang.String)", "org.slf4j.Logger.info(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "75dce198978b8b9ce620b61898b19af224d97ce0", "Url": "https://api.github.com/repos/VanRoy/spring-data-jest", "Date": "2016-07-19T18:20:43Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.reist.visum.view.BaseFragment<P>.getPresenter()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (presenter != null) { presenter.setView(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/7187/buggy-version/src.main.java.io.reist.visum.view.BaseFragment.java", "BodyUseAPI": ["P.setView(io.reist.visum.view.BaseFragment<P>)"], "Fixed commit": "4fd733148217a9aac7e0c360d8e0ceb7d4def3c0", "Url": "https://api.github.com/repos/dreamindustries/visum", "Date": "2015-12-07T18:56:58Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ent.getEntity().isAlive())) toRemove.add(ent.getEntity()); else ent.getType().showSpecialEffects(((org.bukkit.entity.LivingEntity) (ent.getEntity().getBukkitEntity())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/5435/buggy-version/src.kabbage.customentitylibrary.CustomEntityLibrary.java", "BodyUseAPI": ["java.util.Stack<net.minecraft.server.v1_4_R1.EntityLiving>.add(ent.getEntity())", "kabbage.customentitylibrary.CustomEntityWrapper.getType()", "kabbage.customentitylibrary.CustomEntityWrapper.getEntity()", "kabbage.customentitylibrary.CustomEntityWrapper.getEntity()", "ent.getEntity().getBukkitEntity()", "ent.getType().showSpecialEffects(((org.bukkit.entity.LivingEntity) (ent.getEntity().getBukkitEntity())))"], "Fixed commit": "881ac35769dfcbf3eb1110da574f3fb5574942e4", "Url": "https://api.github.com/repos/smaltby/CustomEntityLibrary", "Date": "2013-02-28T01:45:11Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (workaroundDisappearingBlanks) patch = patch + \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6146/buggy-version/src.main.java.org.fife.ui.autocomplete.AutoCompletion.java", "BodyUseAPI": [], "Fixed commit": "0a0e3dfd835d2b7182f78c97e3ff82a174561152", "Url": "https://api.github.com/repos/curiosag/AutoComplete", "Date": "2016-01-09T19:26:21Z"},
{"Line": "=>609", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (workaroundDisappearingBlanks) caret.setDot((((bounds.lo()) + (patch.length())) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/6146/buggy-version/src.main.java.org.fife.ui.autocomplete.AutoCompletion.java", "BodyUseAPI": [], "Fixed commit": "0a0e3dfd835d2b7182f78c97e3ff82a174561152", "Url": "https://api.github.com/repos/curiosag/AutoComplete", "Date": "2016-01-09T19:26:21Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (na != 1) return false; else return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8266/buggy-version/src.pdfreader.NGramModel.java", "BodyUseAPI": [], "Fixed commit": "de9a9b2e5b8243307b6a10be1f5418e54d3350e2", "Url": "https://api.github.com/repos/pluto204/PDFReader", "Date": "2016-12-04T15:21:10Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m instanceof java.lang.String) { finalMessages.add(new com.TeamNovus.AutoMessage.Models.Message(((java.lang.String) (m)))); }else if (m instanceof java.util.Map) { java.util.Map<java.lang.String, java.util.List<java.lang.String>> message = ((java.util.Map<java.lang.String, java.util.List<java.lang.String>>) (m)); for (java.util.Map.Entry<java.lang.String, java.util.List<java.lang.String>> entry : message.entrySet()) { finalMessages.add(new com.TeamNovus.AutoMessage.Models.Message(entry.getKey())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/8612/buggy-version/src.main.java.com.TeamNovus.AutoMessage.AutoMessage.java", "BodyUseAPI": [], "Fixed commit": "e31fc9e581e6e4d89e88c33e3d558a7dabdf1e1b", "Url": "https://api.github.com/repos/ELCHILEN0/AutoMessage", "Date": "2014-06-19T21:00:11Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((suffixIdx + 1) == (idx + (delimiter.length()))) { suffixIdx = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/2869/buggy-version/impl.src.main.java.org.jboss.weld.bootstrap.BeanDeployments.java", "BodyUseAPI": [], "Fixed commit": "004fd6a8cff6e0b4d9a26f05f90ca8102205aee9", "Url": "https://api.github.com/repos/weld/core", "Date": "2016-08-13T20:22:33Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ListIterator<org.owasp.dependencycheck.dependency.Dependency>.next()", "java.util.ListIterator<org.owasp.dependencycheck.dependency.Dependency>.next()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (isShadedJar(dependency, nextDependency)) { if (dependency.getFileName().toLowerCase().endsWith(\"pom.xml\")) { dependenciesToRemove.add(dependency); }else { dependenciesToRemove.add(nextDependency); } }else if (hashesMatch(dependency, nextDependency)) { if (isCore(dependency, nextDependency)) { mergeDependencies(dependency, nextDependency, dependenciesToRemove); }else { mergeDependencies(nextDependency, dependency, dependenciesToRemove); } }else if (((cpeIdentifiersMatch(dependency, nextDependency)) && (hasSameBasePath(dependency, nextDependency))) && (fileNameMatch(dependency, nextDependency))) { if (isCore(dependency, nextDependency)) { mergeDependencies(dependency, nextDependency, dependenciesToRemove); }else { mergeDependencies(nextDependency, dependency, dependenciesToRemove); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3132/buggy-version/dependency-check-core.src.main.java.org.owasp.dependencycheck.analyzer.DependencyBundlingAnalyzer.java", "BodyUseAPI": ["dependency.getFileName().toLowerCase().endsWith(java.lang.String)", "org.owasp.dependencycheck.analyzer.DependencyBundlingAnalyzer.fileNameMatch(org.owasp.dependencycheck.dependency.Dependency,org.owasp.dependencycheck.dependency.Dependency)", "java.util.Set<org.owasp.dependencycheck.dependency.Dependency>.add(org.owasp.dependencycheck.dependency.Dependency)", "org.owasp.dependencycheck.analyzer.DependencyBundlingAnalyzer.isCore(org.owasp.dependencycheck.dependency.Dependency,org.owasp.dependencycheck.dependency.Dependency)", "org.owasp.dependencycheck.analyzer.DependencyBundlingAnalyzer.mergeDependencies(org.owasp.dependencycheck.dependency.Dependency,org.owasp.dependencycheck.dependency.Dependency,java.util.Set<org.owasp.dependencycheck.dependency.Dependency>)", "org.owasp.dependencycheck.analyzer.DependencyBundlingAnalyzer.mergeDependencies(org.owasp.dependencycheck.dependency.Dependency,org.owasp.dependencycheck.dependency.Dependency,java.util.Set<org.owasp.dependencycheck.dependency.Dependency>)", "org.owasp.dependencycheck.analyzer.DependencyBundlingAnalyzer.mergeDependencies(org.owasp.dependencycheck.dependency.Dependency,org.owasp.dependencycheck.dependency.Dependency,java.util.Set<org.owasp.dependencycheck.dependency.Dependency>)", "dependency.getFileName().toLowerCase()", "org.owasp.dependencycheck.analyzer.DependencyBundlingAnalyzer.hasSameBasePath(org.owasp.dependencycheck.dependency.Dependency,org.owasp.dependencycheck.dependency.Dependency)", "org.owasp.dependencycheck.dependency.Dependency.getFileName()", "org.owasp.dependencycheck.analyzer.DependencyBundlingAnalyzer.hashesMatch(org.owasp.dependencycheck.dependency.Dependency,org.owasp.dependencycheck.dependency.Dependency)", "org.owasp.dependencycheck.analyzer.DependencyBundlingAnalyzer.cpeIdentifiersMatch(org.owasp.dependencycheck.dependency.Dependency,org.owasp.dependencycheck.dependency.Dependency)", "org.owasp.dependencycheck.analyzer.DependencyBundlingAnalyzer.isCore(org.owasp.dependencycheck.dependency.Dependency,org.owasp.dependencycheck.dependency.Dependency)", "java.util.Set<org.owasp.dependencycheck.dependency.Dependency>.add(org.owasp.dependencycheck.dependency.Dependency)", "org.owasp.dependencycheck.analyzer.DependencyBundlingAnalyzer.mergeDependencies(org.owasp.dependencycheck.dependency.Dependency,org.owasp.dependencycheck.dependency.Dependency,java.util.Set<org.owasp.dependencycheck.dependency.Dependency>)"], "Fixed commit": "481d6a2a7d46ad95beb4436567cd0b9581ab740d", "Url": "https://api.github.com/repos/jeremylong/DependencyCheck", "Date": "2014-01-21T00:44:08Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bufLength) > 0) { np = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/946/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONReaderScanner.java", "BodyUseAPI": [], "Fixed commit": "5c6aae4fe8d945c5010b11de6973834220190d5d", "Url": "https://api.github.com/repos/daPATHoming/fastjson", "Date": "2013-10-25T04:01:04Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pageseeder.flint.lucene.facet.StringIntervalFacet.start()", "org.pageseeder.flint.lucene.facet.StringIntervalFacet.next(java.lang.String,java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (from.equals(to)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V9/3899/buggy-version/pso-flint-lucene.src.main.java.org.pageseeder.flint.lucene.facet.StringIntervalFacet.java", "BodyUseAPI": [], "Fixed commit": "6563650d2bf847f14ad660715538f94c0b176f9d", "Url": "https://api.github.com/repos/lawone/flint", "Date": "2017-08-09T05:27:38Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mToneGenerator) != null) { mToneGenerator.startTone(ToneGenerator.TONE_CDMA_ALERT_CALL_GUARD, duration); android.util.Log.v(uk.org.openseizuredetector.SdServer.TAG, \"beep()\"); }else { mUtil.showToast(\"Warming mToneGenerator is null - not beeping!!!\"); android.util.Log.v(uk.org.openseizuredetector.SdServer.TAG, \"beep() - Warming mToneGenerator is null - not beeping!!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3247/buggy-version/app.src.main.java.uk.org.openseizuredetector.SdServer.java", "BodyUseAPI": [], "Fixed commit": "51c277f6910ef069fe1aa7b7da2e4336c9c32f24", "Url": "https://api.github.com/repos/OpenSeizureDetector/Android_Pebble_SD", "Date": "2016-04-23T18:20:06Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (recordable instanceof com.psddev.dari.db.Query) { ((com.psddev.dari.db.Query<?>) (recordable)).format(writer); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5294/buggy-version/db.src.main.java.com.psddev.dari.db.ProfilingDatabaseFilter.java", "BodyUseAPI": [], "Fixed commit": "05ea26f33e1fdcac6a0e66b5ac9d01c067facc4b", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2012-10-25T02:21:45Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == true) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4012/buggy-version/src.com.toycode.pwmemo.ImportActivity.java", "BodyUseAPI": [], "Fixed commit": "476d7b0419bcf722c527ef2616b028556d0cad76", "Url": "https://api.github.com/repos/HiroshiOkada/PwMemo", "Date": "2011-09-25T12:53:48Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { out.nullValue(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/228/buggy-version/gson.src.main.java.com.google.gson.DefaultDateTypeAdapter.java", "BodyUseAPI": [], "Fixed commit": "435cc9f05ad2cd159be22b17ba160a7d2851cdac", "Url": "https://api.github.com/repos/lyubomyr-shaydariv/gson", "Date": "2017-06-08T18:42:17Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((greyhound) != null) && ((greyhound.getDateOfBirth()) != null)) { try { return gpago.view.GreyhoundFormBean.format.format(greyhound.getDateOfBirth()); } catch (java.lang.Throwable e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/9173/buggy-version/GPAGO.src.gpago.view.GreyhoundFormBean.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(greyhound.getDateOfBirth())", "gpago.model.entity.Greyhound.getDateOfBirth()"], "Fixed commit": "7d924c3e71f709f0e90f0ff6827cf01e10c98634", "Url": "https://api.github.com/repos/phillipbess/Greyhound-Rescue", "Date": "2014-03-31T23:50:13Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.gridHints.size()) != (gridHints1.gridHints.size())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2611/buggy-version/src.main.java.com.toinouf.sudoku.GridHints.java", "BodyUseAPI": [], "Fixed commit": "4fdc1adc76d6cd766953e42baa30be16b75f4fd0", "Url": "https://api.github.com/repos/antoinemichaud/sudoku-solver", "Date": "2015-08-12T07:09:59Z"},
{"Line": "=>953", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m.group(1).equals(\"91\")) || (m.group(1).equals(\"93\"))) m.appendReplacement(sb, \"$1\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/937/buggy-version/src.com.wikia.runescape.VisualEditorFailFixer.java", "BodyUseAPI": ["java.util.regex.Matcher.appendReplacement(java.lang.StringBuffer,java.lang.String)"], "Fixed commit": "b44e69e0e669501040509b0bbcf630e5d8ce861c", "Url": "https://api.github.com/repos/Nebuleon/mediawikitools", "Date": "2012-12-05T21:21:06Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null == stateMetadata) { for (net.madz.lifecycle.meta.template.StateMachineMetadata compositeStateMachine : stateMachine.getCompositeStateMachines()) { stateMetadata = findStateMetadata(stateCandidateClass, compositeStateMachine); if (null != stateMetadata) { return stateMetadata; }else { continue; } } }else { return stateMetadata; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3985/buggy-version/Platform.Lifecycle.src.main.java.net.madz.lifecycle.meta.impl.builder.StateMetaBuilderImpl.java", "BodyUseAPI": [], "Fixed commit": "d16f2506e1225f17276d5448b493ce3601fb5d95", "Url": "https://api.github.com/repos/zhongdj/Swordfish", "Date": "2013-11-18T15:33:07Z"},
{"Line": "=>2107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.openhft.chronicle.bytes.Bytes.from(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((in.readByte(((in.readPosition()) - 1))) <= ' ') in.readSkip((-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4965/buggy-version/src.main.java.net.openhft.chronicle.bytes.BytesInternal.java", "BodyUseAPI": ["net.openhft.chronicle.bytes.Bytes.readSkip(int)"], "Fixed commit": "9fc458722914f3a593a657ec87b5f870851da6ad", "Url": "https://api.github.com/repos/OpenHFT/Chronicle-Bytes", "Date": "2016-05-14T14:57:28Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Optional.ofNullable(electionRepository.findOne(id))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(election.isPresent())) { return org.springframework.http.ResponseEntity.badRequest().headers(br.com.jasees.web.rest.util.HeaderUtil.createFailureAlert(br.com.jasees.web.rest.ElectionResource.ENTITY_NAME, \"electioninvalid\", \"Election invalid\")).body(null); }else if (election.get().getEndDate().isAfter(java.time.ZonedDateTime.now())) { return org.springframework.http.ResponseEntity.badRequest().headers(br.com.jasees.web.rest.util.HeaderUtil.createFailureAlert(br.com.jasees.web.rest.ElectionResource.ENTITY_NAME, \"electionnotfinished\", \"Election is not finished\")).body(null); }else { java.util.Optional<br.com.jasees.domain.User> candidate = electionService.verifyVote(election.get(), pNumber); if (candidate.isPresent()) { return org.springframework.http.ResponseEntity.ok().body(candidate.get()); }else { return org.springframework.http.ResponseEntity.badRequest().headers(br.com.jasees.web.rest.util.HeaderUtil.createFailureAlert(br.com.jasees.web.rest.ElectionResource.ENTITY_NAME, \"pNumber\", \"Pnumber not found\")).body(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2607/buggy-version/src.main.java.br.com.jasees.web.rest.ElectionResource.java", "BodyUseAPI": ["election.get().getEndDate().isAfter(java.time.ZonedDateTime)", "br.com.jasees.service.ElectionService.verifyVote(election.get(),java.lang.String)", "java.util.Optional<br.com.jasees.domain.Election>.get()", "election.get().getEndDate()", "java.util.Optional<br.com.jasees.domain.Election>.get()"], "Fixed commit": "ac77126d8e411d7b7a54e776be077c18068ea734", "Url": "https://api.github.com/repos/nivaldojunior/jasees", "Date": "2017-05-13T12:55:09Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == object) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5828/buggy-version/src.channeldebug.ChannelDebug.java", "BodyUseAPI": [], "Fixed commit": "914b81e05210d7a65bf908862ceffca93f3f215b", "Url": "https://api.github.com/repos/squareproton/debugchannel-java-client", "Date": "2013-10-04T16:10:20Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getNextNode().getNextNode()) != null) { setNextNode(getNextNode().getNextNode()); getNextNode().updateNodeIndex((-1)); }else { setNextNode(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8906/buggy-version/src.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "501e1bde5938aa4c150528310f345593d6047704", "Url": "https://api.github.com/repos/BBK-PiJ-2014-01/cw3", "Date": "2014-12-24T16:09:58Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wisc.my.portlets.dmp.dao.MenuDao.getMenu(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == menuItem) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6263/buggy-version/src.main.java.edu.wisc.my.portlets.dmp.dao.filter.FilteringMenuDao.java", "BodyUseAPI": [], "Fixed commit": "cf5484ea28190369d558bfd6c5479e26317526ea", "Url": "https://api.github.com/repos/apetro/DynamicMenuPortlet", "Date": "2015-06-11T18:42:21Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((character.getType()) == (com.dig.www.character.GameCharacter.Types.SPADE)) { ((com.dig.www.start.Spade) (character)).resetDirt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6847/buggy-version/DigIt3.src.com.dig.www.start.Board.java", "BodyUseAPI": [], "Fixed commit": "53090d5dc03ccdd033941450aa0a7036b617c5d2", "Url": "https://api.github.com/repos/Bisharp/AppliedJava", "Date": "2015-10-11T13:59:43Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((friends.get(c).getType()) == (com.dig.www.character.GameCharacter.Types.SPADE)) { ((com.dig.www.start.Spade) (friends.get(c))).resetDirt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6847/buggy-version/DigIt3.src.com.dig.www.start.Board.java", "BodyUseAPI": ["((com.dig.www.start.Spade) (friends.get(c))).resetDirt()", "java.util.ArrayList<com.dig.www.start.GameCharacter>.get(int)"], "Fixed commit": "53090d5dc03ccdd033941450aa0a7036b617c5d2", "Url": "https://api.github.com/repos/Bisharp/AppliedJava", "Date": "2015-10-11T13:59:43Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (word == (words[0])) { word = org.bukkit.ChatColor.stripColor(word); if (word.equals(obj.toString())) message = message.replace(obj.toString(), (((org.bukkit.ChatColor.WHITE) + (EmojiConfig.emoji.getString((\"emoji.\" + (obj.toString()))))) + oldColor)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2541/buggy-version/src.com.pphelix.polargalaxy.emojix.events.ChatEvent.java", "BodyUseAPI": ["org.bukkit.ChatColor.stripColor(java.lang.String)"], "Fixed commit": "927a24e416aee45bc5176b14e490a459fc65629b", "Url": "https://api.github.com/repos/pphelix/emojix-spigot", "Date": "2017-01-05T14:42:49Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (word.equals(obj.toString())) { message = message.replace(obj.toString(), (((org.bukkit.ChatColor.WHITE) + (EmojiConfig.emoji.getString((\"emoji.\" + (obj.toString()))))) + oldColor)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2541/buggy-version/src.com.pphelix.polargalaxy.emojix.events.ChatEvent.java", "BodyUseAPI": ["EmojiConfig.emoji.getString(java.lang.String)", "java.lang.Object.toString()", "java.lang.Object.toString()", "java.lang.String.replace(java.lang.String,(((org.bukkit.ChatColor.WHITE) + (EmojiConfig.emoji.getString((\"emoji.\" + (obj.toString()))))) + oldColor))"], "Fixed commit": "927a24e416aee45bc5176b14e490a459fc65629b", "Url": "https://api.github.com/repos/pphelix/emojix-spigot", "Date": "2017-01-05T14:42:49Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((username) != null) { return this.username; }else { return java.lang.String.valueOf(socket.hashCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1038/buggy-version/TicTacToeServer.src.core.networking.ClientManager.java", "BodyUseAPI": [], "Fixed commit": "0a02c65c8cfc9da300daa4cca90692e1e0ea9dc7", "Url": "https://api.github.com/repos/Sharknoon/TicTacToe", "Date": "2016-07-08T08:39:16Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.exists()) { totalbudget -= java.lang.Double.parseDouble(dataSnapshot.getValue().toString()); }else { myRef.child(\"users\").child(user.getUid()).child(\"current_budget\").setValue(0); totalbudget -= 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/425/buggy-version/app.src.main.java.com.example.ronjc.tiptracker.HomeActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(dataSnapshot.getValue().toString())", "dataSnapshot.getValue().toString()", "com.google.firebase.database.DataSnapshot.getValue()"], "Fixed commit": "84f5f01d9c8b4302fec5d51ea69be778fc849ca0", "Url": "https://api.github.com/repos/tipsytiptracker/tiptracker", "Date": "2017-04-29T02:07:10Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.exists()) { totalbudget += java.lang.Double.parseDouble(dataSnapshot.getValue().toString()); }else { myRef.child(\"periods\").child(periodID).child(\"totalIncome\").setValue(1); totalbudget += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/425/buggy-version/app.src.main.java.com.example.ronjc.tiptracker.HomeActivity.java", "BodyUseAPI": ["dataSnapshot.getValue().toString()", "com.google.firebase.database.DataSnapshot.getValue()", "java.lang.Double.parseDouble(dataSnapshot.getValue().toString())"], "Fixed commit": "84f5f01d9c8b4302fec5d51ea69be778fc849ca0", "Url": "https://api.github.com/repos/tipsytiptracker/tiptracker", "Date": "2017-04-29T02:07:10Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.exists()) { totalbudget -= java.lang.Double.parseDouble(dataSnapshot.getValue().toString()); }else { myRef.child(\"periods\").child(periodID).child(\"totalExpenses\").setValue(1); totalbudget -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/425/buggy-version/app.src.main.java.com.example.ronjc.tiptracker.HomeActivity.java", "BodyUseAPI": ["dataSnapshot.getValue().toString()", "java.lang.Double.parseDouble(dataSnapshot.getValue().toString())", "com.google.firebase.database.DataSnapshot.getValue()"], "Fixed commit": "84f5f01d9c8b4302fec5d51ea69be778fc849ca0", "Url": "https://api.github.com/repos/tipsytiptracker/tiptracker", "Date": "2017-04-29T02:07:10Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((extension) != \"\") return ((name) + \".\") + (extension); else return name;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8232/buggy-version/v1.DSFile.java", "BodyUseAPI": [], "Fixed commit": "73cf94cff5e4a61b7eda1b78f53cb55fa56a8c4b", "Url": "https://api.github.com/repos/josler/DropSync", "Date": "2011-06-24T08:56:51Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.indexOf(\".\")) == (-1)) { this.name = name; this.extension = \"\"; }else if (name.startsWith(\".\")) { java.lang.String tail = name.substring(1); if ((tail.indexOf(\".\")) != (-1)) { java.lang.String[] temp = tail.split(\"\\\\.\"); this.name = \"\"; for (int i = 0; i < ((temp.length) - 1); i++) { this.name += \".\" + (temp[i]); } this.extension = temp[((temp.length) - 1)]; }else { this.name = name; this.extension = \"\"; } }else { java.lang.String[] temp = name.split(\"\\\\.\"); this.name = \"\"; for (int i = 0; i < ((temp.length) - 1); i++) { this.name += \".\" + (temp[i]); } this.name = this.name.substring(1); this.extension = temp[((temp.length) - 1)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8232/buggy-version/v1.DSFile.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "73cf94cff5e4a61b7eda1b78f53cb55fa56a8c4b", "Url": "https://api.github.com/repos/josler/DropSync", "Date": "2011-06-24T08:56:51Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((arg.toString().split(\"=\").length) > 1) { kwargs.put(arg.toString().split(\"=\")[0], arg.toString().split(\"=\")[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4504/buggy-version/jrobot-remote-server.src.main.java.org.robotframework.remoteserver.servlet.ServerMethods.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)", "java.lang.Object.toString()"], "Fixed commit": "4b4b56c78723af6e7165a09a0fdf032a5d042538", "Url": "https://api.github.com/repos/vitalinoazevedo/jrobotremoteserver", "Date": "2017-09-25T10:13:29Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["comment.getUser().getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((nickName == null) || (nickName.equals(\"\"))) { baseViewHolder.setText(R.id.tv_username, comment.getUser().getUsername()); }else { baseViewHolder.setText(R.id.tv_username, nickName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6306/buggy-version/app.src.main.java.com.floatingmuseum.mocloud.ui.comments.CommentsAdapter.java", "BodyUseAPI": ["com.chad.library.adapter.base.BaseViewHolder.setText(R.id.tv_username,java.lang.String)"], "Fixed commit": "81c279e38624c6847b00fcd86261871b87c9d71d", "Url": "https://api.github.com/repos/floatingmuseum/MoCloud", "Date": "2016-09-05T02:09:38Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.java.model.ExpressionUtils.skipParentheses(tree.expression())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((expression.is(Tree.Kind.IDENTIFIER)) && (\"this\".equals(((org.sonar.plugins.java.api.tree.IdentifierTree) (expression)).name()))) { tree.identifier().accept(this); }else { expression.accept(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7830/buggy-version/java-frontend.src.main.java.org.sonar.java.se.checks.SyntaxTreeNameFinder.java", "BodyUseAPI": ["org.sonar.plugins.java.api.tree.ExpressionTree.accept(org.sonar.java.se.checks.SyntaxTreeNameFinder)"], "Fixed commit": "12d3e9aea97413502aa2cd3476da210b8e3e27e4", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2017-05-15T16:01:31Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value >= (their_performance.getMax())) { their_performance.setMax(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7530/buggy-version/PlanePeril.src.rem.MultiplayerServer.java", "BodyUseAPI": ["cls.PerformanceBar.setMax()"], "Fixed commit": "a6f229cd106e4c4494eda3899440fae97ccf009e", "Url": "https://api.github.com/repos/liam-m/PlanePeril", "Date": "2014-04-24T15:32:36Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.suiton2d.components.SpriteRenderer<T>.getSprite()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (sprite != null) { float halfw = (sprite.getWidth()) / 2.0F; float halfh = (sprite.getHeight()) / 2.0F; batch.draw(new com.badlogic.gdx.graphics.g2d.TextureRegion(sprite.getData()), ((transform.getPosition().x) - halfw), ((transform.getPosition().y) - halfh), ((transform.getPosition().x) - halfw), ((transform.getPosition().y) - halfh), sprite.getWidth(), sprite.getHeight(), transform.getScale().x, transform.getScale().y, transform.getRotation()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6158/buggy-version/core.src.main.java.com.suiton2d.components.SpriteRenderer.java", "BodyUseAPI": ["com.suiton2d.assets.Sprite.getHeight()", "com.suiton2d.assets.Sprite.getData()", "com.suiton2d.assets.Sprite.getWidth()", "com.suiton2d.assets.Sprite.getWidth()", "com.badlogic.gdx.graphics.g2d.Batch.draw(com.badlogic.gdx.graphics.g2d.TextureRegion,((transform.getPosition().x) - halfw),((transform.getPosition().y) - halfh),((transform.getPosition().x) - halfw),((transform.getPosition().y) - halfh),sprite.getWidth(),sprite.getHeight(),transform.getScale().x,transform.getScale().y,transform.getRotation())", "com.suiton2d.assets.Sprite.getHeight()"], "Fixed commit": "b2cf23c73caa8f0c1f551e5e46e3d446a440f281", "Url": "https://api.github.com/repos/jonbonazza/suiton", "Date": "2015-08-07T04:52:59Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(movey)) < (java.lang.Math.abs(((_sprite.getY()) - (_dest.y))))) _sprite.setY(((_sprite.getY()) + movey)); else _sprite.setY(_dest.y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5822/buggy-version/gdx-game.src.com.logicalfallacy.shooter00.Actor.java", "BodyUseAPI": ["com.logicalfallacy.shooter00.Sprite.setY(_dest.y)", "com.logicalfallacy.shooter00.Sprite.getY()", "com.logicalfallacy.shooter00.Sprite.setY(((_sprite.getY()) + movey))"], "Fixed commit": "6fa91aaca16aa2dd692088ce0ce35731fd0e2757", "Url": "https://api.github.com/repos/imclerran/turbo-blast", "Date": "2014-04-09T14:16:37Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(movex)) < (java.lang.Math.abs(((_sprite.getX()) - (_dest.x))))) _sprite.setX(((_sprite.getX()) + movex)); else _sprite.setX(_dest.x);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5822/buggy-version/gdx-game.src.com.logicalfallacy.shooter00.Actor.java", "BodyUseAPI": ["com.logicalfallacy.shooter00.Sprite.setX(((_sprite.getX()) + movex))", "com.logicalfallacy.shooter00.Sprite.getX()", "com.logicalfallacy.shooter00.Sprite.setX(_dest.x)"], "Fixed commit": "6fa91aaca16aa2dd692088ce0ce35731fd0e2757", "Url": "https://api.github.com/repos/imclerran/turbo-blast", "Date": "2014-04-09T14:16:37Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params.length) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4258/buggy-version/app.src.main.java.comd7shah.github.www.sunshine.ForecastFragment.java", "BodyUseAPI": [], "Fixed commit": "016d800357dfc964235777a3921873f8e49d6c48", "Url": "https://api.github.com/repos/d7shah/Sunshine", "Date": "2015-03-15T08:04:14Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amountSellObject instanceof java.lang.Long) { amountSell = ((java.lang.Long) (amountSellObject)).doubleValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1188/buggy-version/backend.spark.all-currencies-batch.src.main.java.com.github.currencies.holder.CurrenciesHolder.java", "BodyUseAPI": [], "Fixed commit": "f4b57fd94c047ea3f5a24b747d85eca801719073", "Url": "https://api.github.com/repos/golebier/JF.RealTimeBigData.All", "Date": "2015-02-21T13:34:05Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.formats.in.ZeissTIFFReader.evalFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (new loci.common.CaseInsensitiveLocation(info.origname).exists()) { super.initFile(info.origname); }else { super.initFile(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1691/buggy-version/components.formats-gpl.src.loci.formats.in.ZeissTIFFReader.java", "BodyUseAPI": ["loci.formats.in.BaseZeissReader.initFile(java.lang.String)"], "Fixed commit": "a2ba97ffe2e5bae4f8caacdb3a781097148d4ecf", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-11-19T14:02:42Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (analyticsTableRecord.isPersist()) { org.wso2.carbon.analytics.datasource.commons.ColumnDefinition columnDefinition = getColumnDefinition(analyticsTableRecord); columnDefinitions.add(columnDefinition); if (analyticsTableRecord.isPrimaryKey()) { primaryKeys.add(analyticsTableRecord.getColumnName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5906/buggy-version/components.analytics-io.org.wso2.carbon.analytics.stream.persistence.src.main.java.org.wso2.carbon.analytics.stream.persistence.EventStreamPersistenceAdminService.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(analyticsTableRecord.getColumnName())", "org.wso2.carbon.analytics.stream.persistence.dto.AnalyticsTableRecord.isPrimaryKey()", "org.wso2.carbon.analytics.stream.persistence.EventStreamPersistenceAdminService.getColumnDefinition(org.wso2.carbon.analytics.stream.persistence.dto.AnalyticsTableRecord)", "org.wso2.carbon.analytics.stream.persistence.dto.AnalyticsTableRecord.getColumnName()"], "Fixed commit": "10fb67ee1e4ca8d7cb05ff0bec30f6c35936c9ef", "Url": "https://api.github.com/repos/swsachith/carbon-analytics", "Date": "2015-10-12T11:59:06Z"},
{"Line": "=>2277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.springframework.util.CollectionUtils.isEmpty(exportGroup.getVolumes()))) { exportGroup.removeVolumes(com.emc.storageos.db.client.URIUtil.toURIList(exportGroup.getVolumes().keySet())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5629/buggy-version/controllersvc.src.main.java.com.emc.storageos.util.ExportUtils.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.ExportGroup.removeVolumes(com.emc.storageos.db.client.URIUtil.toURIList(exportGroup.getVolumes().keySet()))", "exportGroup.getVolumes().keySet()", "com.emc.storageos.db.client.model.ExportGroup.getVolumes()", "com.emc.storageos.db.client.URIUtil.toURIList(exportGroup.getVolumes().keySet())"], "Fixed commit": "c912d9b09f0059dc98e27f52227a2011636ecfb8", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-03-09T20:13:32Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.trim().isEmpty()) { s = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6732/buggy-version/app.src.main.java.com.dmisb.gameofthrones.data.storage.DataBaseAdapter.java", "BodyUseAPI": [], "Fixed commit": "fc432ec29f5485f63f6e2c7ca7e040772a6c2463", "Url": "https://api.github.com/repos/DmiSb/GameOfThrones", "Date": "2016-10-19T09:34:17Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.trim().isEmpty()) { s = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6732/buggy-version/app.src.main.java.com.dmisb.gameofthrones.data.storage.DataBaseAdapter.java", "BodyUseAPI": [], "Fixed commit": "fc432ec29f5485f63f6e2c7ca7e040772a6c2463", "Url": "https://api.github.com/repos/DmiSb/GameOfThrones", "Date": "2016-10-19T09:34:17Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (environment.equals(\"local\")) { com.marklogic.hub.Tracing tracing = new com.marklogic.hub.Tracing(envConfig.getStagingClient()); tracing.enable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8277/buggy-version/quick-start.src.main.java.com.marklogic.quickstart.web.ProjectsController.java", "BodyUseAPI": [], "Fixed commit": "e1705d752022020696fd99c81d661f414034af20", "Url": "https://api.github.com/repos/marklogic/marklogic-data-hub", "Date": "2016-08-19T17:43:04Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getPlayer().getItemInHand().getType()) == (org.bukkit.Material.TNT)) { for (org.bukkit.entity.Player p : me.tobi.acmain.ArdaCraft.getACServer().getOnlinePlayers()) { if (p.isOp()) p.sendMessage(((((((((\"\ufffdb[\" + (event.getPlayer().getName())) + \"]\") + \"\ufffd6 placed \ufffdcTNT \ufffd6at \ufffdc\") + x) + \" \") + y) + \" \") + z)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3926/buggy-version/src.me.tobi.acmain.events.EvtHandler.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getPlayer().getName()", "org.bukkit.entity.Player.sendMessage(((((((((\"\ufffdb[\" + (event.getPlayer().getName())) + \"]\") + \"\ufffd6 placed \ufffdcTNT \ufffd6at \ufffdc\") + x) + \" \") + y) + \" \") + z))"], "Fixed commit": "1e08e7cc1c2be69056f7b8f2f69ee673e56f154f", "Url": "https://api.github.com/repos/tobiasnagel/ArdaCraftMain", "Date": "2015-03-27T15:45:45Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(iiMapByIdxNames.containsKey(ii.indexName()))) iiMapByIdxNames.put(ii.indexName(), ii);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/905/buggy-version/src.main.java.org.vanilladb.core.storage.metadata.index.IndexMgr.java", "BodyUseAPI": ["org.vanilladb.core.storage.metadata.index.IndexInfo.indexName()", "java.util.Map<java.lang.String, org.vanilladb.core.storage.metadata.index.IndexInfo>.put(ii.indexName(),org.vanilladb.core.storage.metadata.index.IndexInfo)"], "Fixed commit": "e91a97f5ea0d4b57cd21ae129a2f48e10bb766d6", "Url": "https://api.github.com/repos/vanilladb/vanillacore", "Date": "2017-07-26T02:19:00Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(iiList.contains(ii))) iiList.add(ii);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/905/buggy-version/src.main.java.org.vanilladb.core.storage.metadata.index.IndexMgr.java", "BodyUseAPI": ["java.util.List<org.vanilladb.core.storage.metadata.index.IndexInfo>.add(org.vanilladb.core.storage.metadata.index.IndexInfo)"], "Fixed commit": "e91a97f5ea0d4b57cd21ae129a2f48e10bb766d6", "Url": "https://api.github.com/repos/vanilladb/vanillacore", "Date": "2017-07-26T02:19:00Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(iiList.contains(ii))) iiList.add(ii);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/905/buggy-version/src.main.java.org.vanilladb.core.storage.metadata.index.IndexMgr.java", "BodyUseAPI": ["java.util.List<org.vanilladb.core.storage.metadata.index.IndexInfo>.add(org.vanilladb.core.storage.metadata.index.IndexInfo)"], "Fixed commit": "e91a97f5ea0d4b57cd21ae129a2f48e10bb766d6", "Url": "https://api.github.com/repos/vanilladb/vanillacore", "Date": "2017-07-26T02:19:00Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getAcc()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3840/buggy-version/src.main.java.uk.ac.ebi.fg.core_model.xref.ReferenceSource.java", "BodyUseAPI": [], "Fixed commit": "a9194a9f2098c722add7157cef62db68c98d45b1", "Url": "https://api.github.com/repos/EBIBioSamples/core_model", "Date": "2013-11-28T20:02:13Z"},
{"Line": "=>1564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bento.lang.NamedDefinition.getSuperDefinition()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(nd.equals(context.peek().superdef))) { bento.lang.ParameterList superParams = nd.getParamsForArgs(superArgs, context, false); context.push(instantiatedDef, nd, superParams, superArgs); pushedSuper = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7273/buggy-version/src.bento.lang.NamedDefinition.java", "BodyUseAPI": ["bento.lang.NamedDefinition.getParamsForArgs(bento.lang.ArgumentList,bento.runtime.Context,boolean)", "bento.runtime.Context.push(bento.lang.Definition,bento.lang.NamedDefinition,bento.lang.ParameterList,bento.lang.ArgumentList)"], "Fixed commit": "486883898979b4501fee8c2c99ff5ecb170f16af", "Url": "https://api.github.com/repos/bentodev/bentolang", "Date": "2016-08-17T13:03:06Z"},
{"Line": "=>1575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pushedSuper) { context.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7273/buggy-version/src.bento.lang.NamedDefinition.java", "BodyUseAPI": [], "Fixed commit": "486883898979b4501fee8c2c99ff5ecb170f16af", "Url": "https://api.github.com/repos/bentodev/bentolang", "Date": "2016-08-17T13:03:06Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((def != null) && (this.equals(def.getType()))) { return entry.args; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7273/buggy-version/src.bento.lang.ComplexType.java", "BodyUseAPI": [], "Fixed commit": "486883898979b4501fee8c2c99ff5ecb170f16af", "Url": "https://api.github.com/repos/bentodev/bentolang", "Date": "2016-08-17T13:03:06Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((system) == null) { system = SystemHandler.getSystemHandler(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6161/buggy-version/src.Template.java", "BodyUseAPI": [], "Fixed commit": "2d9f481f82e474676879cc3afcafe42a7b828171", "Url": "https://api.github.com/repos/cs2103jan2015-w14-4j/main", "Date": "2015-03-24T10:02:51Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { result = \"you add a new measure good\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5678/buggy-version/src.isde.sde.soap.BusinessImpl.java", "BodyUseAPI": [], "Fixed commit": "cfb6f87c67c3b7169321e26a5bdc9ffd8d37d6d6", "Url": "https://api.github.com/repos/specter9876/introsde-business", "Date": "2016-03-24T16:34:05Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paintPath) == \"\") { if (!(thepainterDir.exists())) { thepainterDir.mkdir(); } java.util.Date dt = new java.util.Date(java.lang.System.currentTimeMillis()); java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(\"yyyyMMddHHmmss\"); paintName = sdf.format(dt); paintName = (\"painter\" + (paintName)) + \".png\"; paintPath = ((thepainterDir.getPath()) + \"/\") + (paintName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/9096/buggy-version/app.src.main.java.com.milk.thepainter.BasePaintingActivity.java", "BodyUseAPI": [], "Fixed commit": "69cc0b299061dad96dc643511b63dbcc6acef91a", "Url": "https://api.github.com/repos/XXXzp/ThePainter", "Date": "2017-09-13T15:36:36Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.cache.thread.local.ThreadLocalCache<java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value != null) { if (value == (nullResult)) { return null; } return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/981/buggy-version/portal-impl.src.com.liferay.portal.cache.thread.local.ThreadLocalCacheAdvice.java", "BodyUseAPI": [], "Fixed commit": "f37b37f03c9dde6f702e8764828abc6325a54777", "Url": "https://api.github.com/repos/brianchiu/liferay-portal", "Date": "2016-09-17T05:07:27Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (options.has(threadCountOption)) { agentModule.setThreadCount(options.valueOf(threadCountOption)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/672/buggy-version/dev-search-agent.src.main.java.com.cadrlife.devsearch.agent.action.AgentAction.java", "BodyUseAPI": ["joptsimple.OptionSet.valueOf(joptsimple.ArgumentAcceptingOptionSpec<java.lang.Integer>)", "com.cadrlife.devsearch.agent.AgentModule.setThreadCount(options.valueOf(threadCountOption))"], "Fixed commit": "7a5c9b8167df182cc5dcadda69c5d91304d8b2dc", "Url": "https://api.github.com/repos/raymyers/dev-search", "Date": "2014-07-23T19:51:11Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.odlabs.wiquery.ui.autocomplete.Autocomplete<java.lang.String>.getConvertedInput()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.wicket.util.string.Strings.isEmpty(input)) { org.odlabs.wiquery.ui.autocomplete.AbstractAutocompleteComponent.setConvertedInput(null); }else if ((object == null) || ((input.compareTo(((java.lang.String) (renderer.getDisplayValue(object))))) != 0)) { final java.util.List<? extends T> choices = getChoices(); boolean found = false; for (int index = 0; index < (choices.size()); index++) { final T choice = choices.get(index); final java.lang.String idValue = renderer.getIdValue(choice, (index + 1)); if (idValue.equals(valueId)) { org.odlabs.wiquery.ui.autocomplete.AbstractAutocompleteComponent.setConvertedInput(choice); found = true; break; } } if (!found) { if (valueId.equals(org.odlabs.wiquery.ui.autocomplete.AbstractAutocompleteComponent.NOT_ENTERED)) { setConvertedInput(org.odlabs.wiquery.ui.autocomplete.AbstractAutocompleteComponent.getModelObject()); }else { org.odlabs.wiquery.ui.autocomplete.AbstractAutocompleteComponent.setConvertedInput(getValueOnSearchFail(input)); } } }else { org.odlabs.wiquery.ui.autocomplete.AbstractAutocompleteComponent.setConvertedInput(object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3161/buggy-version/src.main.java.org.odlabs.wiquery.ui.autocomplete.AbstractAutocompleteComponent.java", "BodyUseAPI": ["org.odlabs.wiquery.ui.autocomplete.AbstractAutocompleteComponent<T>.getValueOnSearchFail(java.lang.String)", "java.lang.String.compareTo(((java.lang.String) (renderer.getDisplayValue(object))))", "org.odlabs.wiquery.ui.autocomplete.AbstractAutocompleteComponent.setConvertedInput(T)"], "Fixed commit": "9ebcdced8b0559ba950d3957604a676e71f8c914", "Url": "https://api.github.com/repos/WiQuery/wiquery", "Date": "2012-03-29T19:13:19Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hypermurea.hslpushdroid.reittiopas.ReittiopasService.findLinesPassingStop(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(lineCodes.isEmpty())) { java.util.List<com.hypermurea.hslpushdroid.reittiopas.TransportLine> lines = service.findTransportLinesByName(lineCodes.toArray(new java.lang.String[lineCodes.size()])); this.publishProgress(lines); exhaustedLineCodes.addAll(lineCodes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2410/buggy-version/hslpushdroid.src.main.java.com.hypermurea.hslpushdroid.reittiopas.FindLinesByLocationAsyncTask.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.size()", "com.hypermurea.hslpushdroid.reittiopas.ReittiopasService.findTransportLinesByName(java.lang.String[])", "java.util.Set<java.lang.String>.toArray(java.lang.String[])", "java.util.Set<java.lang.String>.addAll(java.util.Set<java.lang.String>)"], "Fixed commit": "bcbca36663613f7b4795ba2e1346c017a4ef6b8a", "Url": "https://api.github.com/repos/jaakkosantala/hslpushdroid", "Date": "2013-01-20T13:38:18Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (rlimits != null) { this.rlimits = rlimits; }else { this.rlimits = new com.mesosphere.sdk.specification.yaml.WriteOnceLinkedHashMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7247/buggy-version/sdk.scheduler.src.main.java.com.mesosphere.sdk.specification.yaml.RawContainer.java", "BodyUseAPI": [], "Fixed commit": "3c910cf1b348ffd0f117641e01c9b3d20874f271", "Url": "https://api.github.com/repos/mesosphere/dcos-commons", "Date": "2017-01-10T19:17:04Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.zhu.cainiao.app.App.getClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (classLoader == null) { cn.alien95.util.Utils.Log(\"classLoader == null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2315/buggy-version/app.src.main.java.cn.zhu.cainiao.app.App.java", "BodyUseAPI": [], "Fixed commit": "06fa97483e54723679ed2f7f70ec44f40834073d", "Url": "https://api.github.com/repos/xinzhazha/Task-Graduation-EnglishGame", "Date": "2016-05-27T11:07:09Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<nl.tudelft.contextproject.script.Shot>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (restoreShot.hasPreset()) { restoreShot.getPreset().applyTo(camera); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1098/buggy-version/src.main.java.nl.tudelft.contextproject.script.Timeline.java", "BodyUseAPI": ["restoreShot.getPreset().applyTo(nl.tudelft.contextproject.camera.Camera)", "nl.tudelft.contextproject.script.Shot.getPreset()"], "Fixed commit": "5985ef4af9cb7542a914614264014c1580e87c5b", "Url": "https://api.github.com/repos/TH3steven/Context-TFP", "Date": "2016-06-23T12:08:19Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(url.equals(\"mdv://\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5413/buggy-version/markdownview.src.main.java.net.dgardiner.mdv.core.MarkdownWebClient.java", "BodyUseAPI": [], "Fixed commit": "71eb57d6db6d53a3964fb543945cad0f37bdaa9e", "Url": "https://api.github.com/repos/fuzeman/MarkdownView", "Date": "2016-05-26T23:50:57Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(url.equals(\"mdv://\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5413/buggy-version/markdownview.src.main.java.net.dgardiner.mdv.core.MarkdownWebClient.java", "BodyUseAPI": [], "Fixed commit": "71eb57d6db6d53a3964fb543945cad0f37bdaa9e", "Url": "https://api.github.com/repos/fuzeman/MarkdownView", "Date": "2016-05-26T23:50:57Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.EntityManager.find(java.lang.Class,ticket.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (delete.isPaid()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7164/buggy-version/src.main.java.pe.rendszerfejlesztes.services.BookService.java", "BodyUseAPI": [], "Fixed commit": "3ebe04df7a8585755d75ccb8d15195930ced7f7b", "Url": "https://api.github.com/repos/bowlingSKC/rendszerfejlesztes_szerver", "Date": "2016-04-04T18:33:07Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pe.rendszerfejlesztes.services.BookingServiceLocal.deleteTicket(pe.rendszerfejlesztes.modell.Ticket)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (state) { return javax.ws.rs.core.Response.ok().build(); }else { return javax.ws.rs.core.Response.serverError().build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7164/buggy-version/src.main.java.pe.rendszerfejlesztes.BookingEndpoint.java", "BodyUseAPI": [], "Fixed commit": "3ebe04df7a8585755d75ccb8d15195930ced7f7b", "Url": "https://api.github.com/repos/bowlingSKC/rendszerfejlesztes_szerver", "Date": "2016-04-04T18:33:07Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((window.getSeqNumber(i)) > (-1)) { if (((java.lang.System.currentTimeMillis()) - (window.getTimeSent(i))) > (Constants.ACK_TIMEOUT)) { int sequence = window.getSeqNumber(i); socket.send(server.constructNextPacket(fileChannel, clientAddr, clientPort, sequence)); window.updateTimeSent(sequence); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6164/buggy-version/server.java", "BodyUseAPI": ["Window.getSeqNumber(int)", "Window.updateTimeSent(int)", "Window.getTimeSent(int)"], "Fixed commit": "fe855976e822ced5cd58be42b56973ebbe8db345", "Url": "https://api.github.com/repos/Mierenga/udp-file-transfer", "Date": "2015-04-06T15:43:04Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mainActivity.isActive) == true) || ((secondActivity.isActive) == true)) { cronometerVariable.setStartTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2509/buggy-version/app.src.main.java.com.george.snow.ConnectionChangeReceiver.java", "BodyUseAPI": [], "Fixed commit": "0824a643a303533b72af0867b00dd1c1a2bbe930", "Url": "https://api.github.com/repos/farmaker47/Snow", "Date": "2017-12-07T16:28:24Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(str))) sb.append((\"-\" + str));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7582/buggy-version/src.main.java.org.zkoss.fiddle.model.Case.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "9064920eb21d8afe14205f6802d3a3054c38a01f", "Url": "https://api.github.com/repos/tony1223/zkfiddle", "Date": "2011-06-17T04:39:54Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sagebionetworks.repo.model.dbo.dao.DBODoiDaoImpl.getDbo(java.lang.String,org.sagebionetworks.repo.model.doi.DoiObjectType,java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dbo == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/499/buggy-version/lib.jdomodels.src.main.java.org.sagebionetworks.repo.model.dbo.dao.DBODoiDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "2acd13eb5913796bf346eee4afbcba5ab1c1c44a", "Url": "https://api.github.com/repos/Sage-Bionetworks/Synapse-Repository-Services", "Date": "2013-03-27T09:11:18Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.senseidb.gateway.jms.JmsDataProviderBuilder.getBeanByName(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (topicFactory == null) topicFactory = pluginRegistry.getBeanByFullPrefix(topicFac, proj.zoie.dataprovider.jms.TopicFactory.class);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3065/buggy-version/sensei-gateways.src.main.java.com.senseidb.gateway.jms.JmsDataProviderBuilder.java", "BodyUseAPI": [], "Fixed commit": "092115121903670eb6e7ce42d55a0bb194ba20e4", "Url": "https://api.github.com/repos/wonlay/sensei", "Date": "2012-03-16T20:23:55Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((org.eclipse.jface.viewers.TreeViewer) (event.getSource())).getControl().isFocusControl())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7336/buggy-version/net.sourceforge.usbdm.deviceDatabase.src.net.sourceforge.usbdm.deviceDatabase.ui.DeviceSelectorPanel.java", "BodyUseAPI": [], "Fixed commit": "226d8000d08d9751d5fabb64b9fddc59f1771500", "Url": "https://api.github.com/repos/podonoghue/usbdm-eclipse-plugins", "Date": "2016-06-27T00:11:40Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["IA.bicing.BicingBoard.getVans()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((vans[i][0]) >= 0) bikesMoved[vans[i][0]] -= (vans[i][3]) + (vans[i][4]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2947/buggy-version/src.IA.bicing.BicingHeuristicFunction1Criterio.java", "BodyUseAPI": [], "Fixed commit": "7e3cd114fadc270dd9ddd11a0b1df434d9e4255e", "Url": "https://api.github.com/repos/Julian4Suarez/IA-Bicing", "Date": "2015-10-18T18:55:50Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["IA.bicing.BicingBoard.getVans()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((vans[i][1]) >= 0) bikesMoved[vans[i][1]] += vans[i][3];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2947/buggy-version/src.IA.bicing.BicingHeuristicFunction1Criterio.java", "BodyUseAPI": [], "Fixed commit": "7e3cd114fadc270dd9ddd11a0b1df434d9e4255e", "Url": "https://api.github.com/repos/Julian4Suarez/IA-Bicing", "Date": "2015-10-18T18:55:50Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["IA.bicing.BicingBoard.getVans()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((vans[i][2]) >= 0) bikesMoved[vans[i][2]] += vans[i][4];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2947/buggy-version/src.IA.bicing.BicingHeuristicFunction1Criterio.java", "BodyUseAPI": [], "Fixed commit": "7e3cd114fadc270dd9ddd11a0b1df434d9e4255e", "Url": "https://api.github.com/repos/Julian4Suarez/IA-Bicing", "Date": "2015-10-18T18:55:50Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fa * fb) > 0) leftInterval = root; else break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2136/buggy-version/src.com.numerical.RegulaFalsiMethod.java", "BodyUseAPI": [], "Fixed commit": "2c9115918857557bd2c313650d3354e29d7841e1", "Url": "https://api.github.com/repos/wedusk101/NumericalAnalysis", "Date": "2017-07-22T14:41:07Z"},
{"Line": "=>665", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.listview) == null) { this.listview = ((android.widget.ListView) (this.findViewById(R.id.listview))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1849/buggy-version/src.dev.ukanth.ufirewall.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "35395fa19f07afd1abde65a6b9a0976e2d5adaee", "Url": "https://api.github.com/repos/ukanth/afwall", "Date": "2014-03-09T15:32:28Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 0) { controler.startup.startGUI(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6788/buggy-version/src.controler.startup.java", "BodyUseAPI": [], "Fixed commit": "7700da306f2f58b51ec011bc1a2cda686adc3de9", "Url": "https://api.github.com/repos/DanielMcCoshen/Codec", "Date": "2017-03-23T19:49:33Z"},
{"Line": "=>925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1520/buggy-version/src.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "ca72db8d004d729c52c9108110af68aadd8e64a8", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOppositeAxis) { int adj = ((((this.structureFacing) + 1) % 4) != facing) ? 2 : 3; meta1 = (meta1 == 11) ? 7 + adj : meta1 == 27 ? 23 + adj : meta1 + adj; meta2 = (meta2 == 3) ? (-1) + adj : meta2 == 19 ? 15 + adj : meta2 + adj; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4501/buggy-version/WorldGenStructure.java", "BodyUseAPI": [], "Fixed commit": "5ccc8112d42ac160a9fa21c45f3621aaf1434406", "Url": "https://api.github.com/repos/coolAlias/StructureGenerationTool", "Date": "2013-09-01T12:25:56Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getServer().getPlayer(sender.getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (senderPlayer != null) { senderPlayer.sendMessage(((\"\u00a7o[MeerChat is being reloaded - \" + (new java.text.SimpleDateFormat(\"HH:mm:ss\").format(java.util.Calendar.getInstance().getTime()))) + \"]\u00a7o\")); restartPlugin(plugin); senderPlayer.sendMessage(((\"\u00a7o[MeerChat has been reloaded - \" + (new java.text.SimpleDateFormat(\"HH:mm:ss\").format(java.util.Calendar.getInstance().getTime()))) + \"]\u00a7o\")); }else { org.bukkit.Bukkit.broadcastMessage(((\"[Server] \u00a7o[MeerChat is being reloaded - \" + (new java.text.SimpleDateFormat(\"HH:mm:ss\").format(java.util.Calendar.getInstance().getTime()))) + \"]\u00a7o\")); restartPlugin(plugin); org.bukkit.Bukkit.broadcastMessage(((\"[Server] \u00a7o[MeerChat has been reloaded - \" + (new java.text.SimpleDateFormat(\"HH:mm:ss\").format(java.util.Calendar.getInstance().getTime()))) + \"]\u00a7o\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1090/buggy-version/src.main.java.net.seasharp.meerchat.PlayerCommandListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(java.lang.String)", "org.bukkit.entity.Player.sendMessage(java.lang.String)"], "Fixed commit": "b636fe99f2d0abef329b6ce1c1b47a972dade212", "Url": "https://api.github.com/repos/maxwenger/MeerChat", "Date": "2017-08-08T01:16:05Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((player.getGameMode()) == (org.bukkit.GameMode.SURVIVAL)) { player.setAllowFlight(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1206/buggy-version/src.main.java.io.github.weruder.lightning.Main.java", "BodyUseAPI": ["org.bukkit.entity.Player.setAllowFlight(boolean)"], "Fixed commit": "76b69ca42b9452c946c65f30cbf71487d389cb7a", "Url": "https://api.github.com/repos/weruder/pico-and-frens-bukkit", "Date": "2014-07-27T06:06:19Z"},
{"Line": "=>824", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.alive) pizzatales.StartingClass.map[e.posx][e.posy] = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8193/buggy-version/src.pizzatales.StartingClass.java", "BodyUseAPI": [], "Fixed commit": "c951ab8acbea263cbb9e43176d4f982dfd84ab98", "Url": "https://api.github.com/repos/QuentinDer/pizzatales", "Date": "2016-03-03T21:34:17Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.alive) pizzatales.StartingClass.map[e.posx][e.posy] = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8193/buggy-version/src.pizzatales.StartingClass.java", "BodyUseAPI": [], "Fixed commit": "c951ab8acbea263cbb9e43176d4f982dfd84ab98", "Url": "https://api.github.com/repos/QuentinDer/pizzatales", "Date": "2016-03-03T21:34:17Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (value != null) { for (java.lang.String v : value) { valueList.add(v); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/9109/buggy-version/src.com.jboby93.markovbot.MarkovDB.java", "BodyUseAPI": [], "Fixed commit": "b40077b5f05d718f9a2a0d6c19fef28d22ca5adb", "Url": "https://api.github.com/repos/Mungrel/MarkovBot98", "Date": "2017-04-03T04:36:54Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.firegodjr.ancientlanguage.api.script.IScriptObject.getSelected(com.firegodjr.ancientlanguage.magic.ScriptInstance,net.minecraft.world.World,net.minecraft.util.Vec3)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (s != null) { s.removeAll(java.util.Collections.singleton(null)); selected.addAll(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4138/buggy-version/src.main.java.com.firegodjr.ancientlanguage.magic.ScriptInstance.java", "BodyUseAPI": ["java.util.List<?>.removeAll(java.util.Set<java.lang.Object>)", "java.util.List<java.lang.Object>.addAll(java.util.List<?>)"], "Fixed commit": "7c9c0dac2e64a4e75d93adb661e83c89b7a42435", "Url": "https://api.github.com/repos/Spartan322/Alagaesias-Ancient-Language", "Date": "2016-04-14T12:28:38Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(plugin.user.containsKey(event.getPlayer().getName()))) { plugin.user.put(event.getPlayer().getName(), new com.pgcraft.spectatorplus.PlayerObject()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4543/buggy-version/SpectatorPlus.src.com.pgcraft.spectatorplus.SpectateListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerJoinEvent.getPlayer()", "event.getPlayer().getName()", "plugin.user.put(event.getPlayer().getName(),com.pgcraft.spectatorplus.PlayerObject)"], "Fixed commit": "ac5a609899b5bf9796038b2403a698b0d19d27a1", "Url": "https://api.github.com/repos/AmauryCarrade/SpectatorPlus", "Date": "2014-09-18T00:36:55Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((imageAnnotationV4.getListTypeCode().get(0).getCodeSystemName()) == null) || (imageAnnotationV4.getListTypeCode().get(0).getCodeSystemName().isEmpty())) { this.templateName = imageAnnotationV4.getListTypeCode().get(0).getCodeSystem(); }else { this.templateName = imageAnnotationV4.getListTypeCode().get(0).getCodeSystemName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7200/buggy-version/src.main.java.edu.stanford.epad.common.plugins.impl.PluginAIMOptions.java", "BodyUseAPI": [], "Fixed commit": "c4586d98d27f29c2f7c5ee6d5b1127057615a771", "Url": "https://api.github.com/repos/RubinLab/epad-common", "Date": "2016-05-11T23:44:34Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((imageAnnotationV4.getListTypeCode().get(0).getCodeSystemName()) == null) || (imageAnnotationV4.getListTypeCode().get(0).getCodeSystemName().isEmpty())) { this.templateName = imageAnnotationV4.getListTypeCode().get(0).getCodeSystem(); }else { this.templateName = imageAnnotationV4.getListTypeCode().get(0).getCodeSystemName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7200/buggy-version/src.main.java.edu.stanford.epad.common.plugins.impl.PluginAIMOptions.java", "BodyUseAPI": [], "Fixed commit": "c4586d98d27f29c2f7c5ee6d5b1127057615a771", "Url": "https://api.github.com/repos/RubinLab/epad-common", "Date": "2016-05-11T23:44:34Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((iac.getImageAnnotations().get(0).getImagingPhysicalEntityCollection().get(0).getListTypeCode().get(0).getDisplayName()) == null) || (iac.getImageAnnotations().get(0).getImagingPhysicalEntityCollection().get(0).getListTypeCode().get(0).getDisplayName().getValue().isEmpty())) { templateOrganValue = iac.getImageAnnotations().get(0).getImagingPhysicalEntityCollection().get(0).getListTypeCode().get(0).getCodeSystem(); }else { templateOrganValue = iac.getImageAnnotations().get(0).getImagingPhysicalEntityCollection().get(0).getListTypeCode().get(0).getDisplayName().getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7200/buggy-version/src.main.java.edu.stanford.epad.common.plugins.PluginAIMContentUtil.java", "BodyUseAPI": ["edu.stanford.hakan.aim4api.base.ImageAnnotationCollection.getImageAnnotations()", "iac.getImageAnnotations().get(0).getImagingPhysicalEntityCollection()", "iac.getImageAnnotations().get(0).getImagingPhysicalEntityCollection()", "iac.getImageAnnotations().get(int)", "edu.stanford.hakan.aim4api.base.ImageAnnotationCollection.getImageAnnotations()", "iac.getImageAnnotations().get(0).getImagingPhysicalEntityCollection().get(0).getListTypeCode().get(int)", "iac.getImageAnnotations().get(0).getImagingPhysicalEntityCollection().get(0).getListTypeCode()", "iac.getImageAnnotations().get(0).getImagingPhysicalEntityCollection().get(int)", "iac.getImageAnnotations().get(0).getImagingPhysicalEntityCollection().get(0).getListTypeCode().get(int)", "iac.getImageAnnotations().get(0).getImagingPhysicalEntityCollection().get(0).getListTypeCode().get(0).getDisplayName().getValue()", "iac.getImageAnnotations().get(0).getImagingPhysicalEntityCollection().get(0).getListTypeCode().get(0).getCodeSystem()", "iac.getImageAnnotations().get(0).getImagingPhysicalEntityCollection().get(int)", "iac.getImageAnnotations().get(0).getImagingPhysicalEntityCollection().get(0).getListTypeCode().get(0).getDisplayName()", "iac.getImageAnnotations().get(int)", "iac.getImageAnnotations().get(0).getImagingPhysicalEntityCollection().get(0).getListTypeCode()"], "Fixed commit": "c4586d98d27f29c2f7c5ee6d5b1127057615a771", "Url": "https://api.github.com/repos/RubinLab/epad-common", "Date": "2016-05-11T23:44:34Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDevices.size()) > 0) { activity.startApp(IRKitDeviceListActivity.MANAGE_VIRTUAL_DEVICE_PAGE, mDevices.get(position).getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1229/buggy-version/dConnectDevicePlugin.dConnectDeviceIRKit.src.org.deviceconnect.android.deviceplugin.irkit.settings.fragment.IRKitDeviceListFragment.java", "BodyUseAPI": ["java.util.List<org.deviceconnect.android.deviceplugin.irkit.IRKitDevice>.get(int)", "org.deviceconnect.android.deviceplugin.irkit.settings.activity.IRKitDeviceListActivity.startApp(IRKitDeviceListActivity.MANAGE_VIRTUAL_DEVICE_PAGE,mDevices.get(position).getName())", "mDevices.get(position).getName()"], "Fixed commit": "8efcf61e41d636b5c17018399bee0f47b8cbe5db", "Url": "https://api.github.com/repos/TakayukiHoshi1984/DeviceConnect-Android", "Date": "2015-08-18T06:51:16Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (page != (abz)) { page.getPages().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3301/buggy-version/src.main.java.de.berlios.vch.parser.zdf.ZDFMediathekParser.java", "BodyUseAPI": ["page.getPages().clear()", "de.berlios.vch.parser.OverviewPage.getPages()"], "Fixed commit": "848f068af03e445b28829eabe0789c699399cacd", "Url": "https://api.github.com/repos/hampelratte/vch-parser-zdf", "Date": "2016-02-28T16:06:12Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.muni.fi.pa165.soccermanager.facade.ManagerFacade.findManagerByEmail(managerForm.getMail())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(found.isAdmin())) { request.getSession().setAttribute(\"usersTeam\", teamFacade.getTeamByManager(found.getId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4018/buggy-version/springmvc.src.main.java.cz.muni.fi.pa165.mvc.controllers.AuthController.java", "BodyUseAPI": ["cz.muni.fi.pa165.soccermanager.dto.ManagerDTO.getId()", "cz.muni.fi.pa165.soccermanager.facade.TeamFacade.getTeamByManager(found.getId())", "request.getSession().setAttribute(java.lang.String,teamFacade.getTeamByManager(found.getId()))"], "Fixed commit": "7bc483e0973659e4bd6962ede635ccbcf0dd187d", "Url": "https://api.github.com/repos/mhamern/soccer-manager", "Date": "2017-12-10T21:58:58Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDeleted()) { co.marcin.novaguilds.util.LoggerUtils.error((\"Trying to refresh deleted hologram: \" + (getName()))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5520/buggy-version/src.main.java.co.marcin.novaguilds.basic.NovaHologram.java", "BodyUseAPI": [], "Fixed commit": "2c1553a290c83cbb74fba40d576971eb97e7609f", "Url": "https://api.github.com/repos/MarcinWieczorek/NovaGuilds", "Date": "2015-10-18T20:05:16Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (smte instanceof com.redhat.ceylon.compiler.typechecker.tree.Tree.BaseMemberExpression) { com.redhat.ceylon.eclipse.code.correct.CreateParameterProposal.addCreateParameterProposal(proposals, project, vfdg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6559/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.correct.CreateProposal.java", "BodyUseAPI": [], "Fixed commit": "c50f7e47c8c7e221b8e12c3a1e5985e8b0b5ac57", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2014-06-03T10:31:56Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.broad.igv.ga4gh.OAuthUtils.isGoogleCloud(indexUrl)) { if ((indexUrl.indexOf(\"alt=media\")) < 0) { indexUrl = (indexUrl + ((indexUrl.indexOf('?')) > 0 ? \"&\" : \"?\")) + \"alt=media\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3000/buggy-version/src.org.broad.igv.ui.action.LoadFromURLMenuAction.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "8e2f3c5cbad3cf0cb967bd46f354aa291280a172", "Url": "https://api.github.com/repos/amwenger/igv", "Date": "2016-07-08T04:10:48Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dlg.getIndexURL().trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (indexUrl.startsWith(\"gs://\")) { enableGoogleMenu(); indexUrl = translateGoogleCloudURL(indexUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3000/buggy-version/src.org.broad.igv.ui.action.LoadFromURLMenuAction.java", "BodyUseAPI": ["org.broad.igv.ui.action.LoadFromURLMenuAction.translateGoogleCloudURL(java.lang.String)"], "Fixed commit": "8e2f3c5cbad3cf0cb967bd46f354aa291280a172", "Url": "https://api.github.com/repos/amwenger/igv", "Date": "2016-07-08T04:10:48Z"},
{"Line": "=>2281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(clock.isStopped())) adjustClock(getCurrentTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5299/buggy-version/src.main.java.org.datavyu.views.DataControllerV.java", "BodyUseAPI": [], "Fixed commit": "5be4088a27be738b71debb3994b4ed20f4e5cf77", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2015-11-03T18:34:49Z"},
{"Line": "=>2270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(clock.isStopped())) adjustClock(getCurrentTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5299/buggy-version/src.main.java.org.datavyu.views.DataControllerV.java", "BodyUseAPI": [], "Fixed commit": "5be4088a27be738b71debb3994b4ed20f4e5cf77", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2015-11-03T18:34:49Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, yahoofinance.Stock>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stock == null) { android.util.Log.e(context.getString(R.string.invalid_symbol_format_error), symbol); invalidSymbols.add(symbol); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6496/buggy-version/app.src.main.java.com.udacity.stockhawk.sync.QuoteSyncJob.java", "BodyUseAPI": [], "Fixed commit": "fc56668c052e9fd160076e62dce9fc46ae2cff1f", "Url": "https://api.github.com/repos/bmic86/StockHawk", "Date": "2017-05-07T22:45:09Z"},
{"Line": "=>3327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sellMetricValue != null) { q += \" AND m.sellmetricvalue = ? \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3232/buggy-version/src.dbio.QueryManager.java", "BodyUseAPI": [], "Fixed commit": "6959e352c4c185d7e50e7b8b7f9f98b26387d509", "Url": "https://api.github.com/repos/MatthewPDingle/CSCSPMonitor", "Date": "2016-06-24T23:37:58Z"},
{"Line": "=>1000", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((modNode.getData().size()) >= 2) { name = modNode.getData().get(0); type = modNode.getData().get(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6422/buggy-version/src.main.java.data.DatabaseController.java", "BodyUseAPI": ["modNode.getData().get(int)", "pathfinding.ConcreteNode.getData()", "modNode.getData().get(int)", "pathfinding.ConcreteNode.getData()"], "Fixed commit": "0effacc0dd142a68eb4e1a0045bfd9711c18d91e", "Url": "https://api.github.com/repos/CS3733-TeamAlpha/Project", "Date": "2017-02-08T01:15:24Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newNode.getData().size()) >= 2) { name = newNode.getData().get(0); type = newNode.getData().get(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6422/buggy-version/src.main.java.data.DatabaseController.java", "BodyUseAPI": ["newNode.getData().get(int)", "pathfinding.ConcreteNode.getData()", "pathfinding.ConcreteNode.getData()", "newNode.getData().get(int)"], "Fixed commit": "0effacc0dd142a68eb4e1a0045bfd9711c18d91e", "Url": "https://api.github.com/repos/CS3733-TeamAlpha/Project", "Date": "2017-02-08T01:15:24Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2862/buggy-version/couch.Couch.java", "BodyUseAPI": [], "Fixed commit": "c91e84851340d8eae8ed7f69ec1710b1b43c040e", "Url": "https://api.github.com/repos/yay-couch/couch-java", "Date": "2016-08-17T01:03:38Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasValue())) { throw new java.lang.IllegalStateException(((\"IniRecord with key \" + (key)) + \" has no value\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/9095/buggy-version/minion.src.main.java.com.tomclaw.minion.IniRecord.java", "BodyUseAPI": [], "Fixed commit": "af94251271052b397d582086d5de723378b85c5a", "Url": "https://api.github.com/repos/solkin/minion-android", "Date": "2017-09-28T09:13:21Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.salesforce.heroku.bean.Request.getAnalysisType()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((analysisType == null) || (\"MM\".equalsIgnoreCase(analysisType))) { return records; }else { return com.salesforce.heroku.service.TrendAnalysisServiceImpl.getAnalyzedTrendData(analysisType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/470/buggy-version/src.main.java.com.salesforce.heroku.api.AnalyticsRestAPI.java", "BodyUseAPI": ["com.salesforce.heroku.service.TrendAnalysisServiceImpl.getAnalyzedTrendData(java.lang.String)"], "Fixed commit": "b09ac2a61e293b067e668535a99849cc9b7d7356", "Url": "https://api.github.com/repos/gaya3naik/DF15Demo", "Date": "2015-08-12T12:31:15Z"},
{"Line": "=>886", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.configuration.MemorySection.get(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (val != null) return val instanceof org.bukkit.configuration.ConfigurationSection ? ((org.bukkit.configuration.ConfigurationSection) (val)) : null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3224/buggy-version/src.main.java.org.bukkit.configuration.MemorySection.java", "BodyUseAPI": [], "Fixed commit": "063414dda63a768ade4c1ae7dfba698e16356b0b", "Url": "https://api.github.com/repos/Bukkit/Bukkit-Bleeding", "Date": "2011-12-16T17:23:53Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["activity.getWindow().getDecorView()", "com.jayway.android.robotium.solo.ViewFetcher.getRecentDecorView(android.view.View[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((activityDecorView.isShown()) && (!(activityDecorView.equals(decorView)))) addChildren(allViews, ((android.view.ViewGroup) (activityDecorView)), onlySufficientlyVisible);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2273/buggy-version/robotium-solo.src.main.java.com.jayway.android.robotium.solo.ViewFetcher.java", "BodyUseAPI": [], "Fixed commit": "6847718ad982be372d56ee7731abccb0df776a09", "Url": "https://api.github.com/repos/RobotiumTech/robotium", "Date": "2011-02-12T14:38:20Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["routeCollectionPointMaps.stream().map(RouteCollectionPointMap::getRoute).collect(java.util.stream.Collector<java.lang.Object, ?, java.util.List<java.lang.Object>>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((routeCodes != null) && (!(routeCodes.isEmpty()))) { params.append(\" or code in (:routecodes) \"); paramValues.put(\"routecodes\", routeCodes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5835/buggy-version/swm.swm-services.src.main.java.org.egov.swm.persistence.repository.RouteJdbcRepository.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "8422d77bc5d41814cea9a123aaccd72c066a22c1", "Url": "https://api.github.com/repos/egovernments/egov-services", "Date": "2017-12-21T13:27:43Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map.size()) == 0) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1441/buggy-version/g5.Player.java", "BodyUseAPI": [], "Fixed commit": "ff3e9f523bae8ab6e5d9eecaa785b68fa40449fc", "Url": "https://api.github.com/repos/amardhingra/Cookie-Cutter", "Date": "2015-11-12T00:41:23Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(_titleString.isEmpty())) { if ((_selectedTemplatePosition) <= (_titleString.size())) { _titleString.remove(_titleString.remove(_selectedTemplatePosition)); _titlesAdapter.notifyDataSetChanged(); } if ((_selectedTemplatePosition) >= (_titleString.size())) { (_selectedTemplatePosition)--; _titlesAdapter.notifyDataSetChanged(); android.widget.ListView templatesListView = ((android.widget.ListView) (findViewById(R.id.messageTemplates))); templatesListView.setSelector(android.R.color.transparent); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6127/buggy-version/app.src.main.java.com.gum.dlt.groupuniquemessaging.MessageTemplateActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.remove(java.lang.String)", "java.util.List<java.lang.String>.remove(int)", "java.util.List<java.lang.String>.size()"], "Fixed commit": "e1356b2817abda569a6984391699ee9bbb0cb037", "Url": "https://api.github.com/repos/squigglemufkinz/GroupUniqueMessaging", "Date": "2017-12-12T01:57:06Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operator == (com.stratio.crossdata.common.statements.structures.Operator.MATCH)) { if (valueType != (com.stratio.crossdata.common.statements.structures.SelectorType.STRING)) { throw new com.stratio.crossdata.common.exceptions.validation.BadFormatException(\"MATCH operator only accepts comparison with string literals.\"); } com.stratio.crossdata.common.metadata.TableMetadata tableMetadata = MetadataManager.MANAGER.getTable(column.getName().getTableName()); java.util.Map<com.stratio.crossdata.common.data.IndexName, com.stratio.crossdata.common.metadata.IndexMetadata> indexes = tableMetadata.getIndexes(); if ((indexes == null) || (indexes.isEmpty())) { throw new com.stratio.crossdata.common.exceptions.validation.BadFormatException(((\"Table \" + (column.getName().getTableName())) + \" doesn't contain any index.\")); } boolean indexFound = false; java.util.Collection<com.stratio.crossdata.common.metadata.IndexMetadata> indexesMetadata = indexes.values(); java.util.Iterator<com.stratio.crossdata.common.metadata.IndexMetadata> iter = indexesMetadata.iterator(); while ((iter.hasNext()) && (!indexFound)) { com.stratio.crossdata.common.metadata.IndexMetadata indexMetadata = iter.next(); if (indexMetadata.getColumns().containsKey(column.getName())) { if ((indexMetadata.getType()) != (com.stratio.crossdata.common.metadata.IndexType.FULL_TEXT)) { throw new com.stratio.crossdata.common.exceptions.validation.BadFormatException(\"MATCH operator can be only applied to FULL_TEXT indexes.\"); }else { indexFound = true; } } } if (!indexFound) { throw new com.stratio.crossdata.common.exceptions.validation.BadFormatException(\"No index was found for the MATCH operator.\"); } }else if ((operator != (com.stratio.crossdata.common.statements.structures.Operator.EQ)) && (operator != (com.stratio.crossdata.common.statements.structures.Operator.DISTINCT))) { throw new com.stratio.crossdata.common.exceptions.validation.BadFormatException(\"String relations only accept equal operator.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2330/buggy-version/crossdata-core.src.main.java.com.stratio.crossdata.core.normalizer.Normalizator.java", "BodyUseAPI": [], "Fixed commit": "05991126212ef06754df1c0b95bc63e49728f3e1", "Url": "https://api.github.com/repos/Stratio/crossdata", "Date": "2014-11-11T11:26:03Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(super.hasTop())) { hasTop = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1967/buggy-version/presto-accumulo-iterators.src.main.java.com.facebook.presto.accumulo.iterators.ValueSummingIterator.java", "BodyUseAPI": [], "Fixed commit": "8f312446d78afee85a5051c1ce07f70779005e45", "Url": "https://api.github.com/repos/bloomberg/presto-accumulo", "Date": "2016-07-08T16:05:00Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loadBalancerPoolMembers) != null) { for (org.opendaylight.neutron.spi.NeutronLoadBalancerPoolMember member : loadBalancerPoolMembers) member.setPoolID(loadBalancerPoolID); return loadBalancerPoolMembers; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7398/buggy-version/neutron-spi.src.main.java.org.opendaylight.neutron.spi.NeutronLoadBalancerPool.java", "BodyUseAPI": [], "Fixed commit": "0237265c19fd8916c3a54310df5024cb74bdd756", "Url": "https://api.github.com/repos/opendaylight/neutron", "Date": "2015-04-17T15:20:09Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opendaylight.neutron.spi.INeutronLoadBalancerPoolCRUD.getNeutronLoadBalancerPool(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((singletonPool.getLoadBalancerPoolMembers()) != null) { java.util.List<org.opendaylight.neutron.spi.NeutronLoadBalancerPoolMember> members = singletonPool.getLoadBalancerPoolMembers(); for (org.opendaylight.neutron.spi.NeutronLoadBalancerPoolMember member : members) { if (member.getPoolMemberID().equals(loadBalancerPoolMemberUUID)) throw new org.opendaylight.neutron.northbound.api.BadRequestException(\"LoadBalancerPoolMember UUID already exists\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7398/buggy-version/northbound-api.src.main.java.org.opendaylight.neutron.northbound.api.NeutronLoadBalancerPoolMembersNorthbound.java", "BodyUseAPI": ["org.opendaylight.neutron.spi.NeutronLoadBalancerPool.getLoadBalancerPoolMembers()"], "Fixed commit": "0237265c19fd8916c3a54310df5024cb74bdd756", "Url": "https://api.github.com/repos/opendaylight/neutron", "Date": "2015-04-17T15:20:09Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (ui)) ui.onPause(this.currentActivity);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2907/buggy-version/src.main.java.au.com.tyo.app.CommonApp.java", "BodyUseAPI": [], "Fixed commit": "9e37f707734a664ac99653690775cacccba8c262", "Url": "https://api.github.com/repos/tyolab/CommonAppLib", "Date": "2017-04-19T04:55:33Z"},
{"Line": "=>868", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((d.getParentsCount()) > 0) { int i = 0; if ((d.getParents(i).getKind()) == (TypeKind.CLASS)) s += \" extends \" + (boa.functions.BoaAstIntrinsics.prettyprint(d.getParents((i++)))); if (i < (d.getParentsCount())) { s += \" implements \"; for (int j = i; i < (d.getParentsCount()); i++) { if (i != j) s += \", \"; s += boa.functions.BoaAstIntrinsics.prettyprint(d.getParents(i)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1651/buggy-version/src.java.boa.functions.BoaAstIntrinsics.java", "BodyUseAPI": ["boa.functions.Declaration.getParents(int)", "boa.functions.Declaration.getParentsCount()", "boa.functions.Declaration.getParents(int)", "boa.functions.BoaAstIntrinsics.prettyprint(d.getParents((i++)))", "boa.functions.Declaration.getParentsCount()", "boa.functions.Declaration.getParents(int)", "boa.functions.BoaAstIntrinsics.prettyprint(d.getParents(i))", "d.getParents(i).getKind()"], "Fixed commit": "7ad5dc15db137d149936f6271c24fca0279bd14c", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2017-11-25T05:01:37Z"},
{"Line": "=>860", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((d.getGenericParametersCount()) > 0) { s += \"<\"; for (int i = 0; i < (d.getGenericParametersCount()); i++) { if (i != 0) s += \", \"; s += boa.functions.BoaAstIntrinsics.prettyprint(d.getGenericParameters(i)); } s += \">\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1651/buggy-version/src.java.boa.functions.BoaAstIntrinsics.java", "BodyUseAPI": ["boa.functions.BoaAstIntrinsics.prettyprint(d.getGenericParameters(i))", "boa.functions.Declaration.getGenericParameters(int)", "boa.functions.Declaration.getGenericParametersCount()"], "Fixed commit": "7ad5dc15db137d149936f6271c24fca0279bd14c", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2017-11-25T05:01:37Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["inv.inv.getStackInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((pass == 0) == (base == null)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4532/buggy-version/src.codechicken.lib.inventory.InventoryUtils.java", "BodyUseAPI": [], "Fixed commit": "47d7c667de3f4ce6f04e404a63ce43916f1f6e9c", "Url": "https://api.github.com/repos/Chicken-Bones/CodeChickenLib", "Date": "2014-04-30T14:24:23Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(stack.empty())) && ((stack.peek().getType()) == (net.objecthunter.exp4j.tokenizer.Token.TOKEN_FUNCTION))) { throw new java.lang.IllegalArgumentException(\"Mismatched parentheses detected. Please check the expression\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/60/buggy-version/src.main.java.net.objecthunter.exp4j.shuntingyard.ShuntingYard.java", "BodyUseAPI": [], "Fixed commit": "197de3797e45462fb88545de375810e06731fca9", "Url": "https://api.github.com/repos/alexandrustana/exp4j", "Date": "2017-08-21T09:02:47Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Double>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (publicApi > 0) { density = ((publicApi - undocApi) * 100.0) / publicApi; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8609/buggy-version/src.main.java.org.sonar.plugins.erlang.sensor.BaseMetricsSensor.java", "BodyUseAPI": [], "Fixed commit": "1f30d2d21aa3b820f9e950883b5fdc2196a9de70", "Url": "https://api.github.com/repos/kalidasya/sonar-erlang-plugin", "Date": "2012-05-24T13:43:38Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (len > ((inp.length()) + 10)) throw new java.lang.Exception(\"Unable to find closing \\\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3856/buggy-version/src.pw.qxczv.TextExcel.AST.Parser.java", "BodyUseAPI": [], "Fixed commit": "8fed42af2c5d3cd02b0474665abbd325230b3577", "Url": "https://api.github.com/repos/andrew-pa/TextExcel", "Date": "2016-03-31T22:08:04Z"},
{"Line": "=>1104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, com.evolved.automata.android.lisp.guibuilder.LispContext.Request>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((request.evaluationEnv) != null) response = request.result.getContinuingFunction().evaluate(request.evaluationEnv, true); else response = request.result.getContinuingFunction().evaluate(mEnv, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6353/buggy-version/projects.android_studio.JavaLisp.AndroidLispGuiBuilder.src.main.java.com.evolved.automata.android.lisp.guibuilder.LispContext.java", "BodyUseAPI": ["request.result.getContinuingFunction().evaluate(com.evolved.automata.lisp.Environment,boolean)", "request.result.getContinuingFunction().evaluate(com.evolved.automata.lisp.Environment,boolean)", "com.evolved.automata.lisp.Value.getContinuingFunction()", "com.evolved.automata.lisp.Value.getContinuingFunction()"], "Fixed commit": "3231e9f9dcc5e7fca05ee755c9d27bc26f3529f0", "Url": "https://api.github.com/repos/hexagonc/Android-Lisp", "Date": "2017-09-07T03:28:02Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (arena == null) { if ((args.size()) == 1) io.github.mdsimmo.bomberman.Bomberman.sendMessage(sender, \"The default arena %b is missing!\", ((java.lang.String) (Config.DEFAULT_ARENA.getValue()))); else io.github.mdsimmo.bomberman.Bomberman.sendMessage(sender, \"Arena %b not found\", args.get(1)); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1088/buggy-version/src.main.java.io.github.mdsimmo.bomberman.commands.game.Create.java", "BodyUseAPI": [], "Fixed commit": "d1a52adeb65f0e44a028f4e5e910df06cdce6416", "Url": "https://api.github.com/repos/mdsimmo/Bomberman", "Date": "2014-09-23T13:03:40Z"},
{"Line": "=>645", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tempPossibleResult.getField().getQualifiedName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tempQualifiedName.endsWith(\"[]\")) { tempQualifiedName = tempQualifiedName.substring(0, ((tempQualifiedName.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5593/buggy-version/de.gebit.integrity.dsl.ui.src.de.gebit.integrity.ui.contentassist.DSLProposalProvider.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "38be90f6ed65b3abc1024e10ce35cbc2aa7ea99c", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2013-04-28T17:09:07Z"},
{"Line": "=>623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tempPossibleParam.getType().getType().getQualifiedName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tempQualifiedName.endsWith(\"[]\")) { tempQualifiedName = tempQualifiedName.substring(0, ((tempQualifiedName.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5593/buggy-version/de.gebit.integrity.dsl.ui.src.de.gebit.integrity.ui.contentassist.DSLProposalProvider.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "38be90f6ed65b3abc1024e10ce35cbc2aa7ea99c", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2013-04-28T17:09:07Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pubbyt.pubthursdayleaderboard.model.PersonStore.getCurrentPerson().getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentStatus.equals(Person.STATUS_EN_ROUTE)) { completeStatusChange(Person.STATUS_EN_ROUTE, Person.STATUS_NOT_IN_PUB); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3536/buggy-version/app.src.main.java.com.pubbyt.pubthursdayleaderboard.CheckInDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "32a152aa4d931a5522f92da95bf7994044d196ef", "Url": "https://api.github.com/repos/CardiffBros/pub-thursday-android", "Date": "2016-04-22T17:27:58Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.pagehelper.dialect.AbstractHelperDialect.getLocalPage()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (page.isOrderByOnly()) { page.setTotal(pageList.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/9245/buggy-version/src.main.java.com.github.pagehelper.dialect.AbstractHelperDialect.java", "BodyUseAPI": ["com.github.pagehelper.Page.setTotal(int)"], "Fixed commit": "2b50dac36f595d61dd9a52457de6a7c2270996e8", "Url": "https://api.github.com/repos/mosoft521/Mybatis-PageHelper", "Date": "2017-08-31T13:11:34Z"},
{"Line": "=>1590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((movedField.getFromClass()) == null) { dropColumn(movedField.getFromTable(), movedField.getFromName(), cw); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5702/buggy-version/conserve.src.org.conserve.tools.TableManager.java", "BodyUseAPI": ["org.conserve.tools.TableManager.dropColumn(movedField.getFromTable(),movedField.getFromName(),org.conserve.connection.ConnectionWrapper)", "org.conserve.tools.metadata.FieldChangeDescription.getFromName()", "org.conserve.tools.metadata.FieldChangeDescription.getFromTable()"], "Fixed commit": "11ed33e04994e707f237a86c6c6f6faea826e507", "Url": "https://api.github.com/repos/ConserveORM/main", "Date": "2016-05-27T18:20:56Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firstNode) == node) { throw new java.lang.Exception(\"Cannot relate this\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3566/buggy-version/src.main.java.GUI.TabExtension.java", "BodyUseAPI": [], "Fixed commit": "298414837216ffcf0d3bdd802da87c778fc51614", "Url": "https://api.github.com/repos/acerolla/PetriNetsEditor", "Date": "2017-04-13T20:57:13Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (option.isMultiSample()) job.setMultipleSample();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1451/buggy-version/src.main.java.org.bgi.flexlab.gaea.tools.mapreduce.realigner.Realigner.java", "BodyUseAPI": [], "Fixed commit": "671c63fd3809e6af8f5eca1fc31946cc75719cf9", "Url": "https://api.github.com/repos/BGI-flexlab/SOAPgaea", "Date": "2017-08-08T06:48:14Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getRecord()) != null) id = getRecord().getIdentity(); else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3062/buggy-version/graphdb.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientElement.java", "BodyUseAPI": [], "Fixed commit": "e18f573bfd5305135c70b5425fb2df09606df60f", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-05-07T12:11:07Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["inputs[1].getField()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cb.getItems().size) > 0) cb.setSelectedIndex(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3413/buggy-version/adventure-composer.src.main.java.com.bladecoder.engineeditor.ui.EditAnimationDialog.java", "BodyUseAPI": ["com.badlogic.gdx.scenes.scene2d.ui.SelectBox<java.lang.String>.setSelectedIndex(int)"], "Fixed commit": "2764498c340998de9b6af1c933ff2b37654410f3", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2015-01-19T13:32:20Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.createQuery(\"from Result\").getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((results.size()) > 0) { session.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7799/buggy-version/db_hackaton.src.main.java.ru.atom.dbhackaton.dao.ResultDao.java", "BodyUseAPI": [], "Fixed commit": "9762a3346df1b3cf950e9bf82233958de16184ed", "Url": "https://api.github.com/repos/SaenkoDmitry/atom", "Date": "2017-04-18T22:53:52Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (dateFormat == null) { value = me.excel.tools.ExcelConstants.ERROR_PATTERN; }else { java.text.SimpleDateFormat simpleDateFormat = new java.text.SimpleDateFormat(dateFormat); value = simpleDateFormat.format(cell.getDateCellValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3395/buggy-version/src.main.java.me.excel.tools.model.excel.ExcelCellBean.java", "BodyUseAPI": [], "Fixed commit": "4a546d13796bda20585206c8afb5ff801488ca30", "Url": "https://api.github.com/repos/xfslove/spreadsheet-mapper", "Date": "2016-05-10T12:42:02Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cursor.isClosed()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5997/buggy-version/src.main.java.org.baobab.foodcoapp.fragments.AccountListFragment.java", "BodyUseAPI": [], "Fixed commit": "4a8e981d951a5078fd5a166a9e582e2c0032803e", "Url": "https://api.github.com/repos/Kornkammer/foodcoapp", "Date": "2016-05-05T16:53:54Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((loader.getId()) < 0) { adapter.changeCursor(null); }else { adapter.setChildrenCursor(loader.getId(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5997/buggy-version/src.main.java.org.baobab.foodcoapp.fragments.AccountListFragment.java", "BodyUseAPI": ["android.support.v4.content.Loader<android.database.Cursor>.getId()", "android.widget.CursorTreeAdapter.setChildrenCursor(loader.getId(),<nulltype>)"], "Fixed commit": "4a8e981d951a5078fd5a166a9e582e2c0032803e", "Url": "https://api.github.com/repos/Kornkammer/foodcoapp", "Date": "2016-05-05T16:53:54Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.agiletec.aps.system.common.entity.model.attribute.AbstractTextAttribute.getValidationRules()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((null != validationRule) && (null != (validationRule.getMaxLength()))) { return validationRule.getMaxLength(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5491/buggy-version/src.main.java.com.agiletec.aps.system.common.entity.model.attribute.AbstractTextAttribute.java", "BodyUseAPI": ["com.agiletec.aps.system.common.entity.model.attribute.util.TextAttributeValidationRules.getMaxLength()"], "Fixed commit": "b56d2ad2d60451d3bc76cd7cff4b1644d93a30b9", "Url": "https://api.github.com/repos/entando/entando-core-engine", "Date": "2013-02-19T23:28:46Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.isProcessable()) { notifyListenersOfRequestProgress(request, listRequestListener, request.getProgress()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8550/buggy-version/robospice.src.com.octo.android.robospice.request.RequestProcessor.java", "BodyUseAPI": ["com.octo.android.robospice.request.CachedSpiceRequest<?>.getProgress()", "com.octo.android.robospice.request.RequestProcessor.notifyListenersOfRequestProgress(com.octo.android.robospice.request.CachedSpiceRequest<?>,java.util.Set<com.octo.android.robospice.request.listener.RequestListener<?>>,request.getProgress())"], "Fixed commit": "ecdd9c4b11b401b11d1610766dcdaf86020e82f9", "Url": "https://api.github.com/repos/octo-online/robospice", "Date": "2012-12-04T22:36:53Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hostMenu) != null) hostMenu.repaintPlayerList(playerIDs, playerNames, playerColors);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5138/buggy-version/SnakeOnLan.src.ch.hf.snakeonlan.client.gui.menue.GUIMenuEvents.java", "BodyUseAPI": [], "Fixed commit": "181bb2eacfe8008aaffc09c7108818458b96a939", "Url": "https://api.github.com/repos/ryru/SnakeOnLan", "Date": "2014-05-23T20:18:23Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((joinMenu) != null) joinMenu.repaintPlayerList(playerIDs, playerNames, playerColors);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5138/buggy-version/SnakeOnLan.src.ch.hf.snakeonlan.client.gui.menue.GUIMenuEvents.java", "BodyUseAPI": [], "Fixed commit": "181bb2eacfe8008aaffc09c7108818458b96a939", "Url": "https://api.github.com/repos/ryru/SnakeOnLan", "Date": "2014-05-23T20:18:23Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position != 4) setTitle(titles[position]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8293/buggy-version/VITacademics.src.main.java.com.collegecode.VITacademics.Home.java", "BodyUseAPI": ["com.collegecode.VITacademics.Home.DrawerItemClickListener.setTitle(java.lang.String)"], "Fixed commit": "2329e2643f0104b57157cdcc17a454c4ce4b5103", "Url": "https://api.github.com/repos/battlex2010/VITacademics-for-Android", "Date": "2014-04-30T10:08:45Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((scores[0]) + (scores[1])) == 0) { return 0.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4490/buggy-version/TIPars.java", "BodyUseAPI": [], "Fixed commit": "6e095d4cf172783889791032d29f9f9bbb365a46", "Url": "https://api.github.com/repos/id-bioinfo/TIPars", "Date": "2016-12-12T06:13:37Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.abiquo.abiserver.persistence.hibernate.HibernateDAOFactory.instance().pingDB())) { com.abiquo.abiserver.pojo.result.DataResult<com.abiquo.abiserver.pojo.authentication.LoginResult> result = new com.abiquo.abiserver.pojo.result.DataResult<com.abiquo.abiserver.pojo.authentication.LoginResult>(); result.setSuccess(false); result.setMessage((\"Could not connect to database. \" + \"Please contact the cloud administrator.\")); return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6505/buggy-version/server.src.main.java.com.abiquo.abiserver.commands.impl.LoginCommandImpl.java", "BodyUseAPI": [], "Fixed commit": "04f4481131160096c3a17a3a51e6a65eef08c379", "Url": "https://api.github.com/repos/abiquo/abiquo", "Date": "2011-10-26T16:24:50Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStarAlphaAnim) != null) { mStarAlphaAnim.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3780/buggy-version/rocketpulltorefresh.src.main.java.com.lixplor.rocketpulltorefresh.header.rocket.RocketFrameLayout.java", "BodyUseAPI": [], "Fixed commit": "2b777486b3614722f1836fd05e84c6283003f9ba", "Url": "https://api.github.com/repos/lixplor/RocketPullToRefresh", "Date": "2016-11-02T05:00:11Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mControlYAnim) != null) { mControlYAnim.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3780/buggy-version/rocketpulltorefresh.src.main.java.com.lixplor.rocketpulltorefresh.header.rocket.RocketFrameLayout.java", "BodyUseAPI": [], "Fixed commit": "2b777486b3614722f1836fd05e84c6283003f9ba", "Url": "https://api.github.com/repos/lixplor/RocketPullToRefresh", "Date": "2016-11-02T05:00:11Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mIndicatorYAnim) != null) { mIndicatorYAnim.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3780/buggy-version/rocketpulltorefresh.src.main.java.com.lixplor.rocketpulltorefresh.header.rocket.RocketFrameLayout.java", "BodyUseAPI": [], "Fixed commit": "2b777486b3614722f1836fd05e84c6283003f9ba", "Url": "https://api.github.com/repos/lixplor/RocketPullToRefresh", "Date": "2016-11-02T05:00:11Z"},
{"Line": "=>1024", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(modelName.equals(Quad.defaultGraphIRI))) { org.apache.jena.sparql.syntax.ElementNamedGraph eng = new org.apache.jena.sparql.syntax.ElementNamedGraph(modelName, q.getQueryPattern()); q.setQueryPattern(eng); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8945/buggy-version/src.main.java.org.xenei.jena.entities.impl.EntityManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "17abf37a584d3d4e2eb798ba13b48ade97b4273b", "Url": "https://api.github.com/repos/Claudenw/PA4RDF", "Date": "2017-12-03T21:16:05Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activity.getProgress()) != null) { progressBar.setValue(activity.getProgress().intValue()); progressBar.setText(((activity.getProgress().intValue()) + \"%\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4744/buggy-version/src.com.wira.pmgt.client.ui.programs.ProgramsTableRow.java", "BodyUseAPI": ["activity.getProgress().intValue()", "com.wira.pmgt.client.ui.component.ProgressBar.setValue(activity.getProgress().intValue())", "com.wira.pmgt.client.ui.component.ProgressBar.setText(((activity.getProgress().intValue()) + \"%\"))", "com.wira.pmgt.shared.model.program.IsProgramDetail.getProgress()", "com.wira.pmgt.shared.model.program.IsProgramDetail.getProgress()", "activity.getProgress().intValue()"], "Fixed commit": "2bf9159f734be8e62f554237409d0c8159c9c9b9", "Url": "https://api.github.com/repos/duggankimani/IConserv", "Date": "2014-06-19T19:15:53Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((b.getLocation().getBlockY()) == 71) { p.teleport(new com.oresomecraft.maps.battles.maps.Location(w, (-42), 53, (-36), (-90), 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3540/buggy-version/src.com.oresomecraft.maps.battles.maps.SnowyRidge.java", "BodyUseAPI": [], "Fixed commit": "d1494b42aab7ebb12a0b51126084a6e84789a75a", "Url": "https://api.github.com/repos/OresomeCraft/MapsPlugin", "Date": "2014-02-23T03:24:13Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((b.getLocation().getBlockY()) == 71) { p.teleport(new com.oresomecraft.maps.arcade.maps.Location(w, (-42), 53, (-36), (-90), 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3540/buggy-version/src.com.oresomecraft.maps.arcade.maps.Paintball_Delta.java", "BodyUseAPI": [], "Fixed commit": "d1494b42aab7ebb12a0b51126084a6e84789a75a", "Url": "https://api.github.com/repos/OresomeCraft/MapsPlugin", "Date": "2014-02-23T03:24:13Z"},
{"Line": "=>1872", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((Config.channel.equalsIgnoreCase(\"thebrohman\")) || (Config.channel.equalsIgnoreCase(\"herocoder\"))) || (Config.channel.equalsIgnoreCase(\"bloodybowser\")))) { sendMessage(Config.channel, ((\"/w thebrohman Help! I am being used illegally in \" + (Config.channel)) + \"'s channel!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7135/buggy-version/BrohBot.src.me.TheBrohman.TwitchBot.TwitchBot.java", "BodyUseAPI": [], "Fixed commit": "d8a1caa22cc4d93bcb8c558fb4b1a7a0ad79596b", "Url": "https://api.github.com/repos/TheBrohman/BrohBot", "Date": "2017-12-14T14:37:38Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (after == null) { android.util.Log.i(\"SubredditListRequester\", ((\"Got \" + (output.size())) + \" subreddits in 1 request\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2477/buggy-version/src.main.java.org.quantumbadger.redreader.reddit.api.RedditAPIIndividualSubredditListRequester.java", "BodyUseAPI": [], "Fixed commit": "228df3b0b7e6948bd9b73b2dae094ae1e5500550", "Url": "https://api.github.com/repos/QuantumBadger/RedReader", "Date": "2014-11-15T17:22:08Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (after == null) { android.util.Log.i(\"SubredditListRequester\", ((\"Got \" + (output.size())) + \" subreddits in multiple requests\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2477/buggy-version/src.main.java.org.quantumbadger.redreader.reddit.api.RedditAPIIndividualSubredditListRequester.java", "BodyUseAPI": [], "Fixed commit": "228df3b0b7e6948bd9b73b2dae094ae1e5500550", "Url": "https://api.github.com/repos/QuantumBadger/RedReader", "Date": "2014-11-15T17:22:08Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (sourceCodeResource == null) { _localizedDirectory = localizedDirectory; automaticSaving = false; }else { _localizedDirectory = sourceCodeResource; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4987/buggy-version/flexolocalization.src.main.java.org.openflexo.localization.LocalizedDelegateImpl.java", "BodyUseAPI": [], "Fixed commit": "440bb344231efaeb2fb71d33eec9ff5c8e258861", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2014-10-01T14:44:29Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"\\\\\".equals(java.io.File.separator)) { pathSepForRegExp = \"\\\\\\\\\"; }else { pathSepForRegExp = java.io.File.separator; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5351/buggy-version/proctor-codegen.src.main.java.com.indeed.proctor.consumer.gen.FreeMarkerCodeGenerator.java", "BodyUseAPI": [], "Fixed commit": "dc8b6de79573ef991f2f690d8519007f8f13c865", "Url": "https://api.github.com/repos/indeedeng/proctor", "Date": "2014-06-09T15:36:35Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["em.createQuery(cq).getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { return new java.util.ArrayList<T>(); }else { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3696/buggy-version/src.main.java.com.digdeep.infog.dao.GenericDao.java", "BodyUseAPI": [], "Fixed commit": "0c7750383b60fc9151ceb89f059849b9ca73ad47", "Url": "https://api.github.com/repos/infogdigdeep/infog", "Date": "2012-05-02T01:27:28Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mon4h.agent.log.LogSender.LOGGER) != null) { mon4h.agent.log.LogSender.LOGGER.info((\"Going to stop sender thread, tid: \" + (java.lang.Thread.currentThread().getId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7971/buggy-version/mon4h-agent.src.main.java.mon4h.agent.log.LogSender.java", "BodyUseAPI": [], "Fixed commit": "e360255fa6a430f6264c23b351ca727fba17be18", "Url": "https://api.github.com/repos/bruceleePATHokan/mon4h", "Date": "2013-07-08T04:37:33Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((entry != null) && ((entry.getKey()) != null)) && ((entry.getValue()) != null)) { upgrades.put(entry.getKey(), java.lang.Math.min(entry.getKey().getMax(), ((upgrades.get(entry.getKey())) + (entry.getValue())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6355/buggy-version/src.main.java.mekanism.common.recipe.MekanismRecipe.java", "BodyUseAPI": ["java.util.Map.Entry<mekanism.common.Upgrade, java.lang.Integer>.getValue()", "java.lang.Math.min(entry.getKey().getMax(),((upgrades.get(entry.getKey())) + (entry.getValue())))", "java.util.Map<mekanism.common.Upgrade, java.lang.Integer>.get(entry.getKey())", "java.util.Map.Entry<mekanism.common.Upgrade, java.lang.Integer>.getKey()", "java.util.Map.Entry<mekanism.common.Upgrade, java.lang.Integer>.getKey()", "entry.getKey().getMax()", "java.util.Map.Entry<mekanism.common.Upgrade, java.lang.Integer>.getKey()", "java.util.Map<mekanism.common.Upgrade, java.lang.Integer>.put(entry.getKey(),int)"], "Fixed commit": "c7d3b7711255b58620da9205b77fd2e48a6240cf", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2015-03-22T20:16:01Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rt.contains(\"?\")) { get = rt.substring(rt.indexOf(\"?\")); rt = rt.substring(0, rt.indexOf(\"?\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5797/buggy-version/src.com.javaprophet.javawebserver.plugins.base.PatchGetPostHead.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "478abb5206e0630a772611c6dbc84659e676226f", "Url": "https://api.github.com/repos/Protryon/AvunaHTTPD-Java", "Date": "2015-02-01T02:38:18Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rt.contains(\"#\")) { rt = rt.substring(0, rt.indexOf(\"#\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5797/buggy-version/src.com.javaprophet.javawebserver.plugins.base.PatchGetPostHead.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "478abb5206e0630a772611c6dbc84659e676226f", "Url": "https://api.github.com/repos/Protryon/AvunaHTTPD-Java", "Date": "2015-02-01T02:38:18Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isUnpicked(listPos))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3223/buggy-version/app.src.main.java.com.sap.i047525.mineinbox.MineFieldFragment.java", "BodyUseAPI": [], "Fixed commit": "c74a319f7aca3f95e8ecf946a5e6cdfd1838d237", "Url": "https://api.github.com/repos/zhajnal/MineInbox", "Date": "2015-03-09T15:00:23Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(item.isVisible())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7179/buggy-version/src.main.java.org.reactome.web.diagram.renderers.interactor.abs.InteractorEntityAbstractRenderer.java", "BodyUseAPI": [], "Fixed commit": "a3af11d88e1815d76607309cad5eea45e5326a1e", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2016-03-14T15:44:58Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(item.isVisible())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7179/buggy-version/src.main.java.org.reactome.web.diagram.renderers.interactor.abs.InteractorEntityAbstractRenderer.java", "BodyUseAPI": [], "Fixed commit": "a3af11d88e1815d76607309cad5eea45e5326a1e", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2016-03-14T15:44:58Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sabayrean.hangman.Guess.getIndexes(char)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (indexes != null) for (java.lang.Integer index : indexes) { char c = guess.getResult().getText().charAt(index); android.util.Log.e(com.sabayrean.hangman.MainActivity.TAG, (\"char\" + c)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3635/buggy-version/src.com.sabayrean.hangman.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "680344040c8330e3bdb1f40b34e5d2eb17c1c6e3", "Url": "https://api.github.com/repos/reaksmey/Hangman", "Date": "2013-08-03T05:33:13Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.isFinished()) android.widget.Toast.makeText(getActivity(), getActivity().getString(R.string.delete_success), Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8955/buggy-version/app.src.main.java.neeedo.imimaprx.htw.de.neeedo.fragments.SingleOfferFragment.java", "BodyUseAPI": [], "Fixed commit": "597040deb0abb7aad6d1db7dc0d1e35c8890b0f9", "Url": "https://api.github.com/repos/neeedo/neeedo-android", "Date": "2015-07-14T08:53:40Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((req.getSession().getAttribute(\"user\")) != null) { java.util.List<de.szut.ProjectZer0.model.Lieferant> lieferant = lieferantService.getAllLieferant(); model.addAttribute(\"Lieferant\", lieferant); return \"lieferantList\"; }else { return \"error\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8334/buggy-version/src.de.szut.ProjectZer0.web.LieferantController.java", "BodyUseAPI": [], "Fixed commit": "5c63ec53f81a88f3a63598b85a413071153bd557", "Url": "https://api.github.com/repos/SvNawesome/Project-Zero", "Date": "2016-05-11T08:02:44Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pattern.unbounded) { myOut(level, ((((\"if(r\" + source) + \".size() < \") + ((pattern.elements.length) - 1)) + \") { return null; }\")); }else { myOut(level, ((((\"if(r\" + source) + \".size() != \") + (pattern.elements.length)) + \") { return null; }\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6565/buggy-version/modules.wyrl.src.wyrl.io.NewJavaFileWriter.java", "BodyUseAPI": ["wyrl.io.NewJavaFileWriter.myOut(int,((((\"if(r\" + source) + \".size() < \") + ((pattern.elements.length) - 1)) + \") { return null; }\"))", "wyrl.io.NewJavaFileWriter.myOut(int,((((\"if(r\" + source) + \".size() != \") + (pattern.elements.length)) + \") { return null; }\"))"], "Fixed commit": "ff0e53e39ff3816ee493d2a56e3e9fa3de4fb30a", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2013-07-03T15:08:48Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.block.Block.getBlockFromItem(stack.getItem())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (block != null) list.add(new zmaster587.libVulpes.block.BlockMeta(block, stack.getItem().getMetadata(stack.getItemDamage())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5252/buggy-version/src.main.java.zmaster587.libVulpes.tile.multiblock.TileMultiBlock.java", "BodyUseAPI": ["java.util.List<zmaster587.libVulpes.block.BlockMeta>.add(zmaster587.libVulpes.block.BlockMeta)"], "Fixed commit": "6d9ef391a3bda11e3103a521823ba663f34947ec", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2016-11-11T21:29:03Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subQuery == null) { org.araqne.logdb.impl.QueryHelper.logger.warn(\"araqne logdb: null sub query found at query [{}:{}]\", q.getId(), q.getQueryString()); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7292/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.impl.QueryHelper.java", "BodyUseAPI": [], "Fixed commit": "c48eecaaf000fd4320bd52e0b62d8338808c0ac6", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-08-12T17:15:39Z"},
{"Line": "=>462", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (screenReps) { repMask = new org.seqcode.gsebricks.verbs.location.RepeatMaskedGenerator<org.seqcode.genome.location.Region>(gcon.getGenome()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4231/buggy-version/src.org.seqcode.projects.sequnwinder.framework.SeqUnwinderConfig.java", "BodyUseAPI": [], "Fixed commit": "f99b258f90329ffe7b802c21695e0f090f886212", "Url": "https://api.github.com/repos/seqcode/sequnwinder", "Date": "2017-02-24T21:40:01Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((ele.getElementsByTagName(edu.hit.mlg.individual.XML_TAG_DIRECTION).getLength()) > 0) this.direction = ele.getElementsByTagName(edu.hit.mlg.individual.XML_TAG_DIRECTION).item(0).getTextContent().equals(\"+\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4988/buggy-version/edu.hit.mlg.individual.EctypalElement.java", "BodyUseAPI": [], "Fixed commit": "b2f869ffb38b32c06ed79a8a3217e91df7421952", "Url": "https://api.github.com/repos/ljuan/gbhit", "Date": "2013-05-15T06:17:00Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((objectExpr) instanceof wyvern.target.corewyvernIL.expression.Variable)) resultType = resultType.avoid(receiverType.getSelfName(), newCtx);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4837/buggy-version/tools.src.wyvern.target.corewyvernIL.expression.MethodCall.java", "BodyUseAPI": [], "Fixed commit": "94d7a8d5696ec1eb2dd88ac62c12b353c98df689", "Url": "https://api.github.com/repos/wyvernlang/wyvern", "Date": "2017-04-07T21:33:29Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((objectExpr) instanceof wyvern.target.corewyvernIL.expression.Variable)) formalArgType = formalArgType.avoid(receiverType.getSelfName(), thisCtx);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4837/buggy-version/tools.src.wyvern.target.corewyvernIL.expression.MethodCall.java", "BodyUseAPI": [], "Fixed commit": "94d7a8d5696ec1eb2dd88ac62c12b353c98df689", "Url": "https://api.github.com/repos/wyvernlang/wyvern", "Date": "2017-04-07T21:33:29Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dateofbirth) != null) { try { return org.patientview.model.Patient.UK_DATE_FORMAT.format(org.patientview.model.Patient.DATE_FORMAT.parse(dateofbirth)); } catch (java.text.ParseException e) { return dateofbirth; } }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4485/buggy-version/patientview-parent.common.src.main.java.org.patientview.model.Patient.java", "BodyUseAPI": [], "Fixed commit": "c240db7fb40706908c82a95fa6fe39a748b3346b", "Url": "https://api.github.com/repos/robworth/patientview", "Date": "2013-11-28T16:37:22Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.collection.PersistentCollection.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (value == null) { provider.defaultSerializeNull(jgen); }else { _serializer.serializeWithType(value, jgen, provider, typeSer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4836/buggy-version/src.main.java.com.fasterxml.jackson.module.hibernate.PersistentCollectionSerializer.java", "BodyUseAPI": ["org.codehaus.jackson.map.JsonSerializer<java.lang.Object>.serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)"], "Fixed commit": "b09592565ea73686a3f60674931ea28e6b577ca5", "Url": "https://api.github.com/repos/FasterXML/jackson-datatype-hibernate", "Date": "2011-07-30T17:34:44Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<java.lang.String>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (it.hasNext()) { buf.append(com.icegreen.greenmail.store.SimpleMessageAttributes.SP); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/38/buggy-version/src.main.java.com.icegreen.greenmail.store.SimpleMessageAttributes.java", "BodyUseAPI": [], "Fixed commit": "e2c044414a0f3a180d42b65fadeb80405597ce69", "Url": "https://api.github.com/repos/linagora/Greenmail", "Date": "2012-03-30T12:34:51Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hudson.maven.AbstractMavenProcessFactory.mavenRemoteUseInet) { envVars.put(hudson.maven.AbstractMavenProcessFactory.MAVEN_REMOTE_USEINET_ENV_VAR_NAME, \"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6195/buggy-version/maven-plugin.src.main.java.hudson.maven.AbstractMavenProcessFactory.java", "BodyUseAPI": [], "Fixed commit": "2a36ccc7ee1b81bc4d19d5b09e4c1b946e52d92b", "Url": "https://api.github.com/repos/jenkinsci/jenkins", "Date": "2011-04-18T21:20:25Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((testResult) != null) return (testResult.getNumberOfFailedTests()) == 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4114/buggy-version/src.main.java.Compiler.java", "BodyUseAPI": [], "Fixed commit": "27a8023bc45e4a1d352ccaf84498dfbff0486f42", "Url": "https://api.github.com/repos/ProPra16/programmierpraktikum-abschlussprojekt-gg-ez", "Date": "2016-07-14T23:35:11Z"},
{"Line": "=>589", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["img.attr(\"src\").trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(src)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1826/buggy-version/src.tv.acfun.a63.ArticleActivity.java", "BodyUseAPI": [], "Fixed commit": "853102b84ea9b52ac78b85aa47361d9880560904", "Url": "https://api.github.com/repos/yrom/AcFun-Area63", "Date": "2014-09-21T03:07:19Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (path == null) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1826/buggy-version/src.tv.acfun.a63.ArticleActivity.java", "BodyUseAPI": [], "Fixed commit": "853102b84ea9b52ac78b85aa47361d9880560904", "Url": "https://api.github.com/repos/yrom/AcFun-Area63", "Date": "2014-09-21T03:07:19Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.puzzlejigsaw.Play.done) != null) { com.example.puzzlejigsaw.Play.done.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4755/buggy-version/PuzzleJigsaw.src.com.example.puzzlejigsaw.Play.java", "BodyUseAPI": [], "Fixed commit": "1636137a831b1c99a37c961537d606ac15da0d1e", "Url": "https://api.github.com/repos/mlshon/PuzzleJigsaw", "Date": "2014-12-08T01:18:19Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mOrigHeaderView) != null) { mOrigHeaderView.onFinishRefreshing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6586/buggy-version/OverScrollListViewLib.src.net.neevek.android.lib.ptr.OverScrollListView.java", "BodyUseAPI": [], "Fixed commit": "f26bac5f650f5bbf62feca2c1dc6e3ebe5d15526", "Url": "https://api.github.com/repos/neevek/Easy-PullToRefresh-Android", "Date": "2015-05-29T04:22:43Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bitmap) != null) holder.album_cover.setImageBitmap(bitmap); else holder.album_cover.setImageResource(R.drawable.ic_album_art);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2961/buggy-version/src.com.akshay.protocol10.asplayer.adapters.AlbumSampleAdapter.java", "BodyUseAPI": [], "Fixed commit": "ee408dd63abf8be29c058a605152dc3eb973bf1d", "Url": "https://api.github.com/repos/protocol10/ASplayer", "Date": "2014-10-17T16:42:21Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(s.isEmpty())) { friendName = s.get(0); friendNum = s.get(1); if (!(friendName.equals(\"No Cheers\"))) { cheersText.setText((((\"Friend Name: \\n\" + (friendName)) + \"\\nFriend Number =\") + (friendNum))); }else { cheersText.setText(\"No match found!\\nPress the button below to try again!\"); } }else { cheersText.setText(\"Cheers pairing currently unavailable!\\nPress the button below to try again!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/680/buggy-version/app.src.main.java.com.example.android.com220finalapp.Cheers.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "fbe6ab9d4b3a5d40ff956572c45828be763af79e", "Url": "https://api.github.com/repos/SiggiVG/COM220-Final-App", "Date": "2017-05-09T05:57:42Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((finishListener) != null) { finishListener.handleEvent(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8928/buggy-version/core.src.main.java.io.undertow.server.protocol.ajp.AjpServerRequestConduit.java", "BodyUseAPI": [], "Fixed commit": "5f2199ed5ceb90f003595a7f6bfa116cda9a6689", "Url": "https://api.github.com/repos/ctomc/undertow", "Date": "2014-05-14T19:46:30Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (debugCacheFiles) java.lang.System.out.println((\"Caching project history file: \" + f)); else f.deleteOnExit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4222/buggy-version/teamdash.src.teamdash.hist.ProjectHistoryBridged.java", "BodyUseAPI": [], "Fixed commit": "f07d3de3bf5f1f4a14b111d767f387e06119b6f4", "Url": "https://api.github.com/repos/dtuma/processdash", "Date": "2015-06-30T05:18:58Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nonzeroIndivs != null) { for (java.lang.String oneIndiv : nonzeroIndivs) { java.lang.String zeroAttr = memberZeroAttrs.get(oneIndiv); content.remove(zeroAttr); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4222/buggy-version/teamdash.src.teamdash.hist.ProjectDiff.java", "BodyUseAPI": [], "Fixed commit": "f07d3de3bf5f1f4a14b111d767f387e06119b6f4", "Url": "https://api.github.com/repos/dtuma/processdash", "Date": "2015-06-30T05:18:58Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (spec != null) { java.util.List<org.json.simple.JSONObject> b = ((java.util.List) (spec.get(\"pve\"))); for (org.json.simple.JSONObject g : b) { pve_spec.add(new GW2APIV2.Account.GW2Specialization(g)); } b = ((java.util.List) (spec.get(\"pvp\"))); for (org.json.simple.JSONObject g : b) { pvp_spec.add(new GW2APIV2.Account.GW2Specialization(g)); } b = ((java.util.List) (spec.get(\"wvw\"))); for (org.json.simple.JSONObject g : b) { wvw_spec.add(new GW2APIV2.Account.GW2Specialization(g)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4565/buggy-version/src.GW2APIV2.Account.GW2Character.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)", "org.json.simple.JSONObject.get(java.lang.String)", "org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "e34ce4d20c48cdd68db756ee1f7f074b5b82e939", "Url": "https://api.github.com/repos/ZacharyMcNulty1992/GuildWars2-API-Wrapper-V2", "Date": "2015-10-18T16:58:51Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.document.getLength()) == location) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7116/buggy-version/com.laboki.eclipse.plugin.jcolon.src.com.laboki.eclipse.plugin.jcolon.main.Inserter.java", "BodyUseAPI": [], "Fixed commit": "daaef4067793f0a75a3e4cc941993ea8fb9a59e9", "Url": "https://api.github.com/repos/mystilleef/eclipse4-jcolon", "Date": "2015-04-17T07:52:29Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((builder.length()) > 0) { builder.append(' '); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/947/buggy-version/src.main.java.org.kitteh.irc.client.library.util.Cutter.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)"], "Fixed commit": "732c576df0b8b654d5a84d7b42aed04d74d13537", "Url": "https://api.github.com/repos/lol768/KittehIRCClientLib", "Date": "2016-02-28T16:48:57Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ch.tkuhn.nanopub.server.CollectNanopubs.ourPattern.matchesUri(np.getUri().stringValue()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5440/buggy-version/src.main.java.ch.tkuhn.nanopub.server.CollectNanopubs.java", "BodyUseAPI": [], "Fixed commit": "e6997fadebcafca66e97acc5bd2e527989a80cb8", "Url": "https://api.github.com/repos/tkuhn/nanopub-server", "Date": "2015-11-30T16:52:23Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displayName == null) || ((displayName.length()) == 0)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5749/buggy-version/library.src.main.java.com.pchmn.materialchips.util.LetterTileProvider.java", "BodyUseAPI": [], "Fixed commit": "6136d85a06b74d12c7c81f9d259b60bab2c2d97d", "Url": "https://api.github.com/repos/pchmn/MaterialChipsInput", "Date": "2017-04-20T17:49:56Z"},
{"Line": "=>497", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ids.isEmpty()) throw new org.dcm4chee.xds2.common.exception.XDSException(org.dcm4chee.xds2.common.exception.XDSException.XDS_ERR_REGISTRY_ERROR, \"The list of submitted objects for registering is empty\", null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5528/buggy-version/dcm4chee-xds2-registry-ws.src.main.java.org.dcm4chee.xds2.registry.ws.XDSRegistryBean.java", "BodyUseAPI": [], "Fixed commit": "ed355f6a577981297d774aef67fc2691c39045f7", "Url": "https://api.github.com/repos/dcm4che/dcm4chee-xds", "Date": "2014-06-11T08:47:27Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startdateday.getValue()) == 31) { if ((((startdatemonth.getValue()) % 2) == 0) && ((startdatemonth.getValue()) < 8)) { calculatedDays.setText(\"Not a valid date\"); isValid = false; }else if ((((startdatemonth.getValue()) % 2) != 0) && ((startdatemonth.getValue()) >= 8)) { calculatedDays.setText(\"Not a valid date\"); isValid = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4421/buggy-version/app.src.main.java.com.ravindra.dayscalculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8c2c5f91d4e6512e56f869ef3e98243b40b6fa3b", "Url": "https://api.github.com/repos/ravindrakw/DateCalculator", "Date": "2017-06-13T02:11:50Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((indexByFieldName.get(field.getName())) != null) { throw new java.lang.IllegalArgumentException(\"More than one field with the same name in the provided Field list, can't create a Schema.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4194/buggy-version/core.src.main.java.com.datasalt.pangool.io.Schema.java", "BodyUseAPI": [], "Fixed commit": "b66cea68e853d82aa490c43cf6da6d436ea7b6e4", "Url": "https://api.github.com/repos/datasalt/pangool", "Date": "2013-11-27T17:59:36Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((split.length) != 2) { throw new java.lang.IllegalArgumentException(((\"Incorrect Locale: '\" + (id)) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3857/buggy-version/src.service.src.main.java.com.mascot.service.controller.user.LocaleRecord.java", "BodyUseAPI": [], "Fixed commit": "951a4b29a59c04d169bb2a9a200c7eb2ab9b0488", "Url": "https://api.github.com/repos/nikolaypro/template", "Date": "2016-09-23T14:49:16Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((treeItem.getItems()) != null) && ((treeItem.getItemCount()) != 0)) { org.eclipse.swt.widgets.TreeItem[] attributes = treeItem.getItems()[0].getItems(); org.eclipse.swt.widgets.TreeItem[] methods = treeItem.getItems()[1].getItems(); items = new org.eclipse.swt.widgets.TreeItem[((attributes.length) + (methods.length)) + 1]; items = ((org.eclipse.swt.widgets.TreeItem[]) (org.apache.commons.lang.ArrayUtils.addAll(attributes, methods))); items[((items.length) - 1)] = treeItem; items[((items.length) - 1)] = treeItem; }else { items = new org.eclipse.swt.widgets.TreeItem[1]; items[0] = treeItem; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2650/buggy-version/sat.src.main.java.com.project.traceability.manager.EditManager.java", "BodyUseAPI": ["org.eclipse.swt.widgets.TreeItem.getItems()", "treeItem.getItems()[0].getItems()", "org.eclipse.swt.widgets.TreeItem.getItems()", "treeItem.getItems()[1].getItems()"], "Fixed commit": "3d546afdff68a93e57218644934656e69486fc48", "Url": "https://api.github.com/repos/Thanu/SAT", "Date": "2015-02-12T06:24:05Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!test) { sa.getHostCard().setColorsPaid(cost.getColorsPaid()); sa.getHostCard().setSunburstValue(cost.getSunburst()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/531/buggy-version/forge.src.forge.ai.ComputerUtilMana.java", "BodyUseAPI": [], "Fixed commit": "043a9b4e38c7562ed9357b4b9902475ce2bd47f4", "Url": "https://api.github.com/repos/lzybluee/Reforge", "Date": "2016-06-25T14:04:13Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outf.isDirectory()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5419/buggy-version/src.com.ds.avare.network.Download.java", "BodyUseAPI": [], "Fixed commit": "dc97258472e1abcb8d521fadc3b5a4181736880c", "Url": "https://api.github.com/repos/rasii/avare", "Date": "2014-07-03T17:39:36Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (response == \"\") android.util.Log.i(\"Response\", \"Got no response\"); else android.util.Log.i(\"Response\", response);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6419/buggy-version/Cows-Mobile-Client.src.com.zennenga.cows_mobile_client.EventCreation.java", "BodyUseAPI": ["android.util.Log.i(java.lang.String,java.lang.String)"], "Fixed commit": "440212beb578494901b5f5d52be813c285996b2e", "Url": "https://api.github.com/repos/zsennenga/Cows-Mobile-Client", "Date": "2013-08-26T16:56:31Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (depth == 0) Algorithm.lastOptimalChoice = valids.get(n);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7445/buggy-version/ReversiRandom_Java.Algorithm.java", "BodyUseAPI": [], "Fixed commit": "8c794591bd766a40a0225a856eac9a0323ae09df", "Url": "https://api.github.com/repos/CaptBoscho/Reversi", "Date": "2016-10-30T07:55:15Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["filesystem.FileRecord.isDirectory()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isDirectory) { integrity = integrityProvider.checkFileIntegrity(fileRecord, password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8390/buggy-version/src.main.java.basic.EncryptionService.java", "BodyUseAPI": [], "Fixed commit": "b9d1bc3a0994e079d905a6f116f96e677cdf26fe", "Url": "https://api.github.com/repos/Jenyk/Cifrado", "Date": "2016-05-22T20:36:31Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JFileChooser.showOpenDialog(javax.swing.JPanel)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (returnVal == (javax.swing.JFileChooser.APPROVE_OPTION)) model.setMessageFile(retFile);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2929/buggy-version/src.view.View.java", "BodyUseAPI": [], "Fixed commit": "9ef16656c04d9800fb8d76b5ee78813b646a3ac6", "Url": "https://api.github.com/repos/jdvp/TextMessageViewer", "Date": "2015-01-13T18:37:21Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((null != (msgCtx.getAxis2MessageContext())) && (null != (msgCtx.getAxis2MessageContext().getOperationContext()))) { msgCtx.getAxis2MessageContext().getOperationContext().setProperty(org.apache.axis2.Constants.RESPONSE_WRITTEN, \"SKIP\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5960/buggy-version/modules.core.src.main.java.org.apache.synapse.mediators.store.MessageStoreMediator.java", "BodyUseAPI": ["msgCtx.getAxis2MessageContext().getOperationContext().setProperty(org.apache.axis2.Constants.RESPONSE_WRITTEN,java.lang.String)", "msgCtx.getAxis2MessageContext().getOperationContext()", "org.apache.synapse.core.axis2.Axis2MessageContext.getAxis2MessageContext()"], "Fixed commit": "84cf9e24eab6e95f48919b5218769d15e08dc3c6", "Url": "https://api.github.com/repos/Buddhima/wso2-synapse", "Date": "2016-03-12T16:43:50Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (true) { control.connect(\"/dev/tty.uart-A7FF4A1BBE0D0922\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/285/buggy-version/src.main.java.org.funtimecoding.light.control.LightControlMainFrame.java", "BodyUseAPI": [], "Fixed commit": "b97a283e3180b0c54d7d9e8f684d9b80a67a4b59", "Url": "https://api.github.com/repos/FunTimeCoding/light-control", "Date": "2015-04-23T08:53:24Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (true) { java.io.InputStream in = control.getIn(); if (in != null) { new java.lang.Thread(new org.funtimecoding.light.control.SerialReader(in, redSlider, greenSlider, blueSlider)).start(); }else { java.lang.System.err.println(\"Device not be found.\"); java.lang.System.exit(1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/285/buggy-version/src.main.java.org.funtimecoding.light.control.LightControlMainFrame.java", "BodyUseAPI": [], "Fixed commit": "b97a283e3180b0c54d7d9e8f684d9b80a67a4b59", "Url": "https://api.github.com/repos/FunTimeCoding/light-control", "Date": "2015-04-23T08:53:24Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (varName.equals(\"product\")) { value = product; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8479/buggy-version/src.main.java.com.liferay.faces.util.el.internal.UtilELResolver.java", "BodyUseAPI": [], "Fixed commit": "af8e0b6e3f6a9ea287bcddae8291e79b9a3ac125", "Url": "https://api.github.com/repos/liferay/liferay-faces-util", "Date": "2016-07-13T18:20:44Z"},
{"Line": "=>694", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(repetition)) { currentToken.incrementIndex(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/347/buggy-version/edireader.src.main.java.com.berryworks.edireader.tokenizer.AbstractTokenizer.java", "BodyUseAPI": [], "Fixed commit": "ae7e9512f2b47a623a01e92ff4642c12e34a1d98", "Url": "https://api.github.com/repos/BerryWorksSoftware/edireader", "Date": "2016-12-16T02:12:59Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getType()) == (((mekhq.campaign.parts.equipment.AmmoBin) (replacement)).getType())) { actualReplacement = replacement.clone(); }else { actualReplacement = new mekhq.campaign.parts.equipment.AmmoBin(getUnitTonnage(), getType(), getEquipmentNum(), getFullShots(), isOneShot(), isOmniPodded(), campaign); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4492/buggy-version/MekHQ.src.mekhq.campaign.parts.equipment.MissingAmmoBin.java", "BodyUseAPI": [], "Fixed commit": "4bf6b8aeb13d7a42b65a5aac9f20a0bc79b20a9a", "Url": "https://api.github.com/repos/MegaMek/mekhq", "Date": "2017-09-29T15:31:37Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.teamSuperior.guiApp.controller.LogInPopupController.validateUser(txt_empID.getText(),txt_empPassw.getText())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isValid) { com.teamSuperior.guiApp.GUI.AlertBox.display(\"Operation succeeded\", java.lang.String.format(\"Welcome %1$s\", loggedUser.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4685/buggy-version/src.com.teamSuperior.guiApp.controller.LogInPopupController.java", "BodyUseAPI": [], "Fixed commit": "780544fb15ff66c640ee7fa19c94492e79a09a7a", "Url": "https://api.github.com/repos/BlackThunderStudio/VestbjergApp", "Date": "2016-12-02T21:06:34Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Classes.Funcionario.buscaCliente(java.lang.String,java.util.ArrayList<Classes.Cliente>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (c1 == null) { javax.swing.JOptionPane.showMessageDialog(null, (\"Cliente n\\u00e3o encontrado, verifique se o CPF \\n\" + \"foi digitado corretamente\")); }else { javax.swing.JOptionPane.showMessageDialog(null, ((((((((((((((\"Cliente:\\n\" + \"Nome: \") + (c1.getNome())) + \"\\nCPF: \") + (c1.getCpf())) + \"\\nIdentidade: \") + (c1.getIdentidade())) + \"\\n:Data de nascimento: \") + (c1.getBorn())) + \"\\n:Email \") + (c1.getEmail())) + \"\\nTelefone: \") + (c1.getTelefone())) + \"\\nCelular: \") + (c1.getCelular()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5037/buggy-version/src.Interface.FuncPanel.java", "BodyUseAPI": ["Classes.Cliente.getCpf()", "Classes.Cliente.getIdentidade()", "Classes.Cliente.getTelefone()", "Classes.Cliente.getBorn()", "Classes.Cliente.getEmail()", "javax.swing.JOptionPane.showMessageDialog(<nulltype>,((((((((((((((\"Cliente:\\n\" + \"Nome: \") + (c1.getNome())) + \"\\nCPF: \") + (c1.getCpf())) + \"\\nIdentidade: \") + (c1.getIdentidade())) + \"\\n:Data de nascimento: \") + (c1.getBorn())) + \"\\n:Email \") + (c1.getEmail())) + \"\\nTelefone: \") + (c1.getTelefone())) + \"\\nCelular: \") + (c1.getCelular())))", "Classes.Cliente.getNome()", "Classes.Cliente.getCelular()"], "Fixed commit": "2232199ec7676adc92480f23ca492189943d1eca", "Url": "https://api.github.com/repos/luizhenriquefbb/AluguelDeQuartos", "Date": "2016-06-04T20:21:52Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Classes.Administrador.buscaFuncionario(java.lang.String,java.util.ArrayList<Classes.Funcionario>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (f1 == null) { javax.swing.JOptionPane.showMessageDialog(null, (\"Funcion\\u00e1rio n\\u00e3o encontrado, \\n\" + \"verifique se o login foi digitado corretamente\")); }else { javax.swing.JOptionPane.showMessageDialog(null, (((((((((((((((\"Funcionario: \" + (f1.getNome())) + \"\\nCadastro de usu\\u00e1rio: \") + (f1.getUsuario())) + \"\\nData de nascimento: \") + (f1.getBorn())) + \"\\nCPF: \") + (f1.getCpf())) + \"\\nRG: \") + (f1.getIdentidade())) + \"\\nEmail: \") + (f1.getEmail())) + \"\\nCelular: \") + (f1.getCelular())) + \"\\nTelefone: \") + (f1.getTelefone()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5037/buggy-version/src.Interface.AdmPanel.java", "BodyUseAPI": ["Classes.Funcionario.getNome()", "Classes.Funcionario.getCpf()", "Classes.Funcionario.getIdentidade()", "javax.swing.JOptionPane.showMessageDialog(<nulltype>,(((((((((((((((\"Funcionario: \" + (f1.getNome())) + \"\\nCadastro de usu\\u00e1rio: \") + (f1.getUsuario())) + \"\\nData de nascimento: \") + (f1.getBorn())) + \"\\nCPF: \") + (f1.getCpf())) + \"\\nRG: \") + (f1.getIdentidade())) + \"\\nEmail: \") + (f1.getEmail())) + \"\\nCelular: \") + (f1.getCelular())) + \"\\nTelefone: \") + (f1.getTelefone())))", "Classes.Funcionario.getUsuario()", "Classes.Funcionario.getCelular()", "Classes.Funcionario.getBorn()", "Classes.Funcionario.getEmail()", "Classes.Funcionario.getTelefone()"], "Fixed commit": "2232199ec7676adc92480f23ca492189943d1eca", "Url": "https://api.github.com/repos/luizhenriquefbb/AluguelDeQuartos", "Date": "2016-06-04T20:21:52Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (jval != null) review.setDate(jval.asString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5741/buggy-version/src.com.koepf.richey.metis.ScrapinghubParser.java", "BodyUseAPI": ["com.koepf.richey.metis.Review.setDate(jval.asString())", "com.eclipsesource.json.JsonValue.asString()"], "Fixed commit": "44d804e9a4921cf293fe4b000a657f49550b2687", "Url": "https://api.github.com/repos/koepfw/metis", "Date": "2014-10-17T08:11:45Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (jval != null) review.setURL(jval.asString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5741/buggy-version/src.com.koepf.richey.metis.ScrapinghubParser.java", "BodyUseAPI": ["com.eclipsesource.json.JsonValue.asString()", "com.koepf.richey.metis.Review.setURL(jval.asString())"], "Fixed commit": "44d804e9a4921cf293fe4b000a657f49550b2687", "Url": "https://api.github.com/repos/koepfw/metis", "Date": "2014-10-17T08:11:45Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (jval != null) review.setScore(java.lang.Double.parseDouble(jval.asString()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5741/buggy-version/src.com.koepf.richey.metis.ScrapinghubParser.java", "BodyUseAPI": ["com.koepf.richey.metis.Review.setScore(double)", "java.lang.Double.parseDouble(jval.asString())", "com.eclipsesource.json.JsonValue.asString()"], "Fixed commit": "44d804e9a4921cf293fe4b000a657f49550b2687", "Url": "https://api.github.com/repos/koepfw/metis", "Date": "2014-10-17T08:11:45Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (jval != null) { java.lang.String text = jval.asString(); if (text != null) { text = text.replaceAll(\"'\", \"\"); review.setText(text); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5741/buggy-version/src.com.koepf.richey.metis.ScrapinghubParser.java", "BodyUseAPI": ["com.eclipsesource.json.JsonValue.asString()"], "Fixed commit": "44d804e9a4921cf293fe4b000a657f49550b2687", "Url": "https://api.github.com/repos/koepfw/metis", "Date": "2014-10-17T08:11:45Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (jval != null) { java.lang.String title = jval.asString(); if (title != null) { title = title.replaceAll(\"'\", \"\"); review.setText(title); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5741/buggy-version/src.com.koepf.richey.metis.ScrapinghubParser.java", "BodyUseAPI": ["com.eclipsesource.json.JsonValue.asString()"], "Fixed commit": "44d804e9a4921cf293fe4b000a657f49550b2687", "Url": "https://api.github.com/repos/koepfw/metis", "Date": "2014-10-17T08:11:45Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPlanSelectionCodelet()) != null) { spCreatedPlans.setEnabled(true); br.unicamp.cst.util.TreeViewerUtil.createTreeModelGUI(spCreatedPlans, java.util.Arrays.asList(planSelectionCodelet), \"Plan Selection Codelet\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5946/buggy-version/src.br.unicamp.cst.bindings.soar.PlansSubsystemViewer.java", "BodyUseAPI": [], "Fixed commit": "6388a254e739fb235ae5db3ac0263c2e3bad5270", "Url": "https://api.github.com/repos/CST-Group/cst", "Date": "2017-10-25T21:11:14Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (utilisateurs.isEmpty()) { utilisateurs = utilisateurService.findAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3734/buggy-version/src.main.java.fr.treeptik.amazoneejb.managedbean.UtilisateurManagedBean.java", "BodyUseAPI": [], "Fixed commit": "ce0ec3a2f9bf0b3988cef6948a2cda020f2f6c3f", "Url": "https://api.github.com/repos/Rosane-0/AmazoneEJB", "Date": "2016-06-24T16:34:53Z"},
{"Line": "=>838", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pos) == null) { gui.cubic.CubicSketchState.log.warn(\"Actor {} has no position\", name); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3763/buggy-version/src.gui.cubic.CubicSketchState.java", "BodyUseAPI": [], "Fixed commit": "6df221fd5d9c5779812a7ce52be27cac95aa906f", "Url": "https://api.github.com/repos/krokicki/derecho", "Date": "2016-09-26T16:22:26Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.fume.salesman.utils.Utils.getText(workshopPhone).length()) < 5) { workshopPhone.setError(getString(R.string.cantLessThan7)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2058/buggy-version/app.src.main.java.com.fume.salesman.activity.MainWorkshopInfoActivity.java", "BodyUseAPI": ["android.widget.EditText.setError(getString(R.string.cantLessThan7))"], "Fixed commit": "5550b4fc3491983a912bfdeb1163572aefe8443e", "Url": "https://api.github.com/repos/AhmedKaram2/FumeSalesMan", "Date": "2017-01-09T15:50:07Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.fume.salesman.utils.Utils.isEmpty(address)) { address.setError(getString(R.string.val_isNull)); address.requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2058/buggy-version/app.src.main.java.com.fume.salesman.activity.MainWorkshopInfoActivity.java", "BodyUseAPI": ["android.widget.EditText.setError(getString(R.string.val_isNull))", "android.widget.EditText.requestFocus()"], "Fixed commit": "5550b4fc3491983a912bfdeb1163572aefe8443e", "Url": "https://api.github.com/repos/AhmedKaram2/FumeSalesMan", "Date": "2017-01-09T15:50:07Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.fume.salesman.utils.Utils.isEmpty(nameInCharge)) { nameInCharge.setError(getString(R.string.val_isNull)); nameInCharge.requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2058/buggy-version/app.src.main.java.com.fume.salesman.activity.MainWorkshopInfoActivity.java", "BodyUseAPI": ["android.widget.EditText.setError(getString(R.string.val_isNull))", "android.widget.EditText.requestFocus()"], "Fixed commit": "5550b4fc3491983a912bfdeb1163572aefe8443e", "Url": "https://api.github.com/repos/AhmedKaram2/FumeSalesMan", "Date": "2017-01-09T15:50:07Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.fume.salesman.utils.Utils.isEmpty(workshopName)) { workshopName.setError(getString(R.string.val_isNull)); workshopName.requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2058/buggy-version/app.src.main.java.com.fume.salesman.activity.MainWorkshopInfoActivity.java", "BodyUseAPI": ["android.widget.EditText.setError(getString(R.string.val_isNull))", "android.widget.EditText.requestFocus()"], "Fixed commit": "5550b4fc3491983a912bfdeb1163572aefe8443e", "Url": "https://api.github.com/repos/AhmedKaram2/FumeSalesMan", "Date": "2017-01-09T15:50:07Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.fume.salesman.utils.Utils.isEmpty(ownerNumber)) { ownerNumber.setError(getString(R.string.val_isNull)); ownerNumber.requestFocus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2058/buggy-version/app.src.main.java.com.fume.salesman.activity.MainWorkshopInfoActivity.java", "BodyUseAPI": ["android.widget.EditText.requestFocus()", "android.widget.EditText.setError(getString(R.string.val_isNull))"], "Fixed commit": "5550b4fc3491983a912bfdeb1163572aefe8443e", "Url": "https://api.github.com/repos/AhmedKaram2/FumeSalesMan", "Date": "2017-01-09T15:50:07Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((workingDays.size()) == 0) { com.fume.salesman.utils.Utils.showShortToast(this, getString(R.string.you_should_select_one_day)); }else if (((((((fridayEmpty) | (saturdayEmpty)) | (sundayEmpty)) | (mondayEmpty)) | (tuesdayEmpty)) | (wednesdayEmpty)) | (thursdayEmpty)) { }else if (((((((!(fridayEmpty)) & (!(saturdayEmpty))) & (!(sundayEmpty))) & (!(mondayEmpty))) & (!(tuesdayEmpty))) & (!(wednesdayEmpty))) & (!(thursdayEmpty))) { addCenterBody.setWorkingDays(workingDays); android.content.Intent goIntent = new android.content.Intent(this, com.fume.salesman.activity.AddCategoryActivity.class); goIntent.putExtra(Const.ADD_CENTER_OBJECT, addCenterBody); goIntent.putExtra(\"added\", \"\"); startActivity(goIntent); overridePendingTransition(R.anim.fadein, R.anim.fadeout); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2058/buggy-version/app.src.main.java.com.fume.salesman.activity.WorkingDaysActivity.java", "BodyUseAPI": ["com.fume.salesman.model.AddCenter.setWorkingDays(java.util.ArrayList<com.fume.salesman.model.WorkingDay>)"], "Fixed commit": "5550b4fc3491983a912bfdeb1163572aefe8443e", "Url": "https://api.github.com/repos/AhmedKaram2/FumeSalesMan", "Date": "2017-01-09T15:50:07Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFinished()) { return 1.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4618/buggy-version/smart-actions.src.main.java.org.smartdata.actions.hdfs.move.MoverStatus.java", "BodyUseAPI": [], "Fixed commit": "332688b617b341cf38d709a9bf44e8e7e27026f4", "Url": "https://api.github.com/repos/yanpingyou/SSM", "Date": "2017-06-27T01:34:12Z"},
{"Line": "=>891", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.client.DbClient.queryObject(java.lang.Class,java.net.URI)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (storage.getSystemType().equals(Type.unity.toString())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7635/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.placement.FileStorageScheduler.java", "BodyUseAPI": [], "Fixed commit": "a294a8b7dae726a613214a6b29c7cb1c0360f648", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-07-28T13:54:20Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (masterBlock == null) ((zmaster587.libVulpes.tile.IMultiblock) (tile)).setMasterBlock(this.pos);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/744/buggy-version/src.main.java.zmaster587.libVulpes.tile.multiblock.TileMultiBlock.java", "BodyUseAPI": [], "Fixed commit": "71c50b01e031c58e83390436f2878621e1fb67f6", "Url": "https://api.github.com/repos/zmaster587/libVulpes", "Date": "2017-12-21T05:17:55Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canRefresh()) { mLoadMoreLayout.getLoadingLayout().setVisibility(jqyzyh.iee.cusomwidget.pullrefreshlistview.VISIBLE); int firstPosition = getFirstVisiblePosition(); if (firstPosition > 2) { return; } android.view.View firstView = getChildAt((2 - firstPosition)); android.view.View view = getChildAt((((getAdapter().getCount()) - firstPosition) - 3)); if ((firstView == null) || (view == null)) { if ((lp.height) != 0) { stanceHeight = 0; } }else { int height = (view.getBottom()) - (firstView == null ? 0 : firstView.getTop()); if (height < (getHeight())) { stanceHeight = ((getHeight()) - height) - 40; } } }else { mLoadMoreLayout.getLoadingLayout().setVisibility(jqyzyh.iee.cusomwidget.pullrefreshlistview.GONE); stanceHeight = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4563/buggy-version/cusomwidget.src.main.java.jqyzyh.iee.cusomwidget.pullrefreshlistview.PullRefreshListView.java", "BodyUseAPI": [], "Fixed commit": "1e46c2111989b0938e5826f61703949468b02e39", "Url": "https://api.github.com/repos/jqyzyh/learn", "Date": "2016-10-25T06:06:56Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.ServletContext.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(reviews.containsKey(productId))) { reviews.put(productId, new java.util.TreeSet<com.emag.model.ReviewPojo>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2602/buggy-version/src.main.java.com.emag.controller.ReviewController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.TreeSet<com.emag.model.ReviewPojo>>.put(java.lang.String,java.util.TreeSet<com.emag.model.ReviewPojo>)"], "Fixed commit": "989964bed2cc257078681372d49bb2f3cb127f6d", "Url": "https://api.github.com/repos/pechorinn/EmagSpring", "Date": "2017-11-06T19:21:12Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.modID.equals(Constants.MOD_ID)) { de.eydamos.backpack.misc.ConfigurationBackpack.loadConfiguration(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5329/buggy-version/src.main.java.de.eydamos.backpack.handler.EventHandlerClientOnly.java", "BodyUseAPI": [], "Fixed commit": "1bc0d4836e14c044f6551e80d13618ca0ef94cfd", "Url": "https://api.github.com/repos/Eydamos/Minecraft-Backpack-Mod", "Date": "2014-09-26T14:06:06Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDetached()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7313/buggy-version/app.src.main.java.com.handy.portal.clients.ui.fragment.ClientDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "396a76685db377f5a9f39c093a2384560f394efa", "Url": "https://api.github.com/repos/vleung-handy/fastlane-test", "Date": "2017-07-26T15:39:07Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDetached()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7313/buggy-version/app.src.main.java.com.handy.portal.clients.ui.fragment.ClientDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "396a76685db377f5a9f39c093a2384560f394efa", "Url": "https://api.github.com/repos/vleung-handy/fastlane-test", "Date": "2017-07-26T15:39:07Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((people) != null) updateMsgFlag(people.getName(), com.neo.neoandroidlib.NeoSocketMessageCacheUtil.getIntance().getMessageCount(people.getName()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4838/buggy-version/neoapp.src.com.neo.neoapp.fragments.RefreshListFragment.java", "BodyUseAPI": [], "Fixed commit": "9f54ae292665a32df734f6c75a9665778c4ae404", "Url": "https://api.github.com/repos/neoguojing/NeoAndroid", "Date": "2016-07-13T10:40:58Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.artofsolving.jodconverter.StandardConversionTask.cast(java.lang.Class,com.sun.star.lang.XComponent)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (xRefreshable != null) { xRefreshable.refresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4616/buggy-version/jodconverter-core.src.main.java.org.artofsolving.jodconverter.StandardConversionTask.java", "BodyUseAPI": ["com.sun.star.util.XRefreshable.refresh()"], "Fixed commit": "c4ce8caf5d0083fff9877abed2b50c30390036aa", "Url": "https://api.github.com/repos/nuxeo/jodconverter", "Date": "2013-03-13T13:59:42Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((altoCache) != null) { com.frs.alto.security.ClusterSecurityContext context = ((com.frs.alto.security.ClusterSecurityContext) (altoCache.get(region, clusterSessionId))); return context; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7453/buggy-version/src.main.java.com.frs.alto.security.CacheBasedSecurityContextRepository.java", "BodyUseAPI": [], "Fixed commit": "e61f91b649c5c5ddeb5b8ef37b7cf8de726bdc59", "Url": "https://api.github.com/repos/alto-project/alto", "Date": "2013-11-19T14:58:19Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((altoCache) == null) { return context.getLastUpdateTimestamp(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7453/buggy-version/src.main.java.com.frs.alto.security.CacheBasedSecurityContextRepository.java", "BodyUseAPI": [], "Fixed commit": "e61f91b649c5c5ddeb5b8ef37b7cf8de726bdc59", "Url": "https://api.github.com/repos/alto-project/alto", "Date": "2013-11-19T14:58:19Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (objects == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8300/buggy-version/src.main.java.io.github.varoso.core.JSKCore.java", "BodyUseAPI": [], "Fixed commit": "7308ffebeca69ffa0e7f67d99fcb074a3d598ef0", "Url": "https://api.github.com/repos/Varoso/JSK", "Date": "2017-11-02T11:21:39Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNull(strings)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8300/buggy-version/src.main.java.io.github.varoso.string.JSKString.java", "BodyUseAPI": [], "Fixed commit": "7308ffebeca69ffa0e7f67d99fcb074a3d598ef0", "Url": "https://api.github.com/repos/Varoso/JSK", "Date": "2017-11-02T11:21:39Z"},
{"Line": "=>717", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<java.util.Map<java.lang.String, java.lang.Object>>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((list != null) && (!(list.isEmpty()))) { for (java.util.Map<java.lang.String, java.lang.Object> doc : list) { if (((doc != null) && (!(doc.isEmpty()))) && ((doc.get(field)) != null)) { distinctValues.add(doc.get(field)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5462/buggy-version/src.de.caluga.morphium.driver.inmem.InMemoryDriver.java", "BodyUseAPI": [], "Fixed commit": "6d753a58e26792241966e1a33c3c211d7801c809", "Url": "https://api.github.com/repos/sboesebeck/morphium", "Date": "2016-09-14T00:06:43Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.console()) != null) { this.isColoredOuput = !(cli.hasOption(com.github.rafasantos.cli.AppCliHandler.CliOptions.NO_COLOR.getShortText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4903/buggy-version/src.main.java.com.github.rafasantos.cli.AppCliHandler.java", "BodyUseAPI": [], "Fixed commit": "e6323835ef0527da04c022aad008db556c8d0626", "Url": "https://api.github.com/repos/rafasantos/difffilter", "Date": "2017-07-03T03:18:48Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (line.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4596/buggy-version/src.cz.adammar.cat.Maze.java", "BodyUseAPI": [], "Fixed commit": "099cc455879804cac6ff02754a107b1ac85e3ef8", "Url": "https://api.github.com/repos/piratte/catGame", "Date": "2015-05-12T09:17:13Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pass == 0) { data = new byte[length]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4133/buggy-version/src.main.java.ch.spacebase.mc.util.NetUtil.java", "BodyUseAPI": [], "Fixed commit": "4764d3a7ee266a0566745c433c8b08b964a8ad06", "Url": "https://api.github.com/repos/Steveice10/MCProtocolLib", "Date": "2014-01-08T02:33:02Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageIds == null) || ((imageIds.size()) == 0)) return new java.util.ArrayList<ca.cmput301f13t03.adventure_datetime.model.Image>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4547/buggy-version/adventure.datetime.src.ca.cmput301f13t03.adventure_datetime.model.WebStorage.java", "BodyUseAPI": [], "Fixed commit": "c3de27d762c26df011b5d62e49dc79798bb5838f", "Url": "https://api.github.com/repos/CMPUT301F13T03/adventure.datetime", "Date": "2013-12-03T04:53:59Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["msi.gama.util.IList.get(((list.size()) - 1))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((pt.getX()) == 0) && ((pt.getY()) == 0)) && ((pt.getZ()) == 0)) { list.remove(pt); if ((list.size()) < 2) return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1987/buggy-version/msi.gama.core.src.msi.gama.util.file.GamaDXFFile.java", "BodyUseAPI": ["msi.gama.util.IList.remove(msi.gama.metamodel.shape.GamaPoint)"], "Fixed commit": "6be35c7a554d42c57560cd7813fcb18faa0c5be7", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2016-02-19T07:13:47Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (super.onOptionsItemSelected(item)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3837/buggy-version/nsu-connect.src.main.java.ru.tulupov.nsuconnect.activity.BaseSlidingMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "c13b915c88f0e2cc13dede91abbf2251f331dfa0", "Url": "https://api.github.com/repos/etulupov/nsu-connect-android", "Date": "2013-11-16T06:48:34Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (newFieldValue != null) this.colorPicker.setColor(new com.vaadin.shared.ui.colorpicker.Color(newFieldValue.getRed(), newFieldValue.getGreen(), newFieldValue.getBlue(), newFieldValue.getAlpha()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8936/buggy-version/src.main.java.au.com.vaadinutils.fields.ColorPickerField.java", "BodyUseAPI": ["au.com.vaadinutils.fields.Color.getBlue()", "au.com.vaadinutils.fields.Color.getRed()", "au.com.vaadinutils.fields.Color.getGreen()", "com.vaadin.ui.ColorPicker.setColor(com.vaadin.shared.ui.colorpicker.Color)", "au.com.vaadinutils.fields.Color.getAlpha()"], "Fixed commit": "716c74ca23791d0954477ecbf29ddec13d0cb11b", "Url": "https://api.github.com/repos/rlsutton1/VaadinUtils", "Date": "2014-02-02T09:49:01Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bt.net.PeerConnectionFactory.createConnection(bt.net.Peer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(initConnection(newConnection, handshakeHandler, false))) { throw new bt.BtException((\"Failed to initialize new connection for peer: \" + peer)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2148/buggy-version/src.main.java.bt.net.PeerConnectionPool.java", "BodyUseAPI": [], "Fixed commit": "3593a9151f3d0adf9eed72598ebf1fd04620020e", "Url": "https://api.github.com/repos/atomashpolskiy/bt", "Date": "2016-06-15T21:02:40Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getSession().getAttribute(\"loginError\")) != null) { error = ((java.lang.String) (request.getSession().getAttribute(\"loginError\"))); request.removeAttribute(\"loginError\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2670/buggy-version/src.main.java.lv.javaguru.java2.servlet.LoginController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getSession()", "javax.servlet.http.HttpServletRequest.removeAttribute(java.lang.String)", "request.getSession().getAttribute(java.lang.String)"], "Fixed commit": "5bae266b94c75db415473cc87234a87d16b4ac7b", "Url": "https://api.github.com/repos/alex-vit/java2", "Date": "2016-08-15T07:20:28Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getSession().getAttribute(\"registrationError\")) != null) { error = ((java.lang.String) (request.getSession().getAttribute(\"registrationError\"))); request.removeAttribute(\"registrationError\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2670/buggy-version/src.main.java.lv.javaguru.java2.servlet.RegistrationController.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.removeAttribute(java.lang.String)", "request.getSession().getAttribute(java.lang.String)", "javax.servlet.http.HttpServletRequest.getSession()"], "Fixed commit": "5bae266b94c75db415473cc87234a87d16b4ac7b", "Url": "https://api.github.com/repos/alex-vit/java2", "Date": "2016-08-15T07:20:28Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentQuestNumber) > 4) { finishExploration(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/752/buggy-version/src.jp.knct.di.c6t.ui.exploration.ExplorationMainActivity.java", "BodyUseAPI": [], "Fixed commit": "87264d07ab5de1e1ec9909b9a2c819b7b42f37ac", "Url": "https://api.github.com/repos/i09158knct/c6t-proto", "Date": "2013-07-29T05:47:19Z"},
{"Line": "=>562", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (context instanceof org.osate.aadl2.FeatureGroup) { name = ((context.getName()) + (com.rockwellcollins.atc.agree.analysis.ast.AgreeASTBuilder.dotChar)) + name; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1290/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.analysis.src.com.rockwellcollins.atc.agree.analysis.ast.AgreeASTBuilder.java", "BodyUseAPI": ["org.osate.aadl2.Context.getName()"], "Fixed commit": "6364daa7d42fbee0e72c032cdd58fc6639b30b5a", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2016-11-07T14:56:51Z"},
{"Line": "=>790", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.getModelElement()) != null) { newNode = nodeFactory.textNode(generateExampleValue(context.getModelElement())); }else { newNode = getSimpleTypeNode(elementType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5134/buggy-version/schema-compiler.src.main.java.org.opentravel.schemacompiler.codegen.example.JSONExampleVisitor.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.node.JsonNodeFactory.textNode(generateExampleValue(context.getModelElement()))", "org.opentravel.schemacompiler.codegen.example.JSONExampleVisitor.getModelElement()", "org.opentravel.schemacompiler.codegen.example.JSONExampleVisitor.generateExampleValue(context.getModelElement())"], "Fixed commit": "8d8c958efa5bd54cdccd02105f84c54740a9437d", "Url": "https://api.github.com/repos/OpenTravel/OTM-DE-Compiler", "Date": "2016-07-29T22:05:23Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nuxeo.ecm.platform.rendition.lazy.AbstractLazyCachableRenditionProvider.buildRenditionKey(org.nuxeo.ecm.core.api.DocumentModel,org.nuxeo.ecm.platform.rendition.service.RenditionDefinition)", "org.nuxeo.ecm.core.transientstore.api.TransientStoreService.getStore(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (ts.isCompleted(key)) { ts.release(key); }else { org.nuxeo.ecm.core.work.api.Work work = getRenditionWork(key, doc, def); java.lang.String workId = work.getId(); org.nuxeo.ecm.core.work.api.WorkManager wm = org.nuxeo.runtime.api.Framework.getService(org.nuxeo.ecm.core.work.api.WorkManager.class); if ((wm.find(workId, null)) == null) { wm.schedule(work, Scheduling.IF_NOT_SCHEDULED); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/141/buggy-version/nuxeo-features.nuxeo-platform-rendition.nuxeo-platform-rendition-core.src.main.java.org.nuxeo.ecm.platform.rendition.lazy.AbstractLazyCachableRenditionProvider.java", "BodyUseAPI": ["org.nuxeo.ecm.platform.rendition.lazy.AbstractLazyCachableRenditionProvider.getRenditionWork(java.lang.String,org.nuxeo.ecm.core.api.DocumentModel,org.nuxeo.ecm.platform.rendition.service.RenditionDefinition)", "org.nuxeo.ecm.core.transientstore.api.TransientStore.release(java.lang.String)"], "Fixed commit": "e67cf15d06257a90df1bd78aaaa2ed5761cae9db", "Url": "https://api.github.com/repos/ron1/nuxeo", "Date": "2016-10-30T21:28:26Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((bankAccessList) == null) || ((bankAccesses.size()) == 0)) && ((getActivity()) instanceof de.fau.amos.virtualledger.android.menu.MainMenu)) { android.app.Fragment fragment = new de.fau.amos.virtualledger.android.bankingOverview.expandableList.Fragment.NoBankingAccessesFragment(); openFragment(fragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1256/buggy-version/app.src.main.java.de.fau.amos.virtualledger.android.bankingOverview.expandableList.Fragment.ExpandableBankFragment.java", "BodyUseAPI": [], "Fixed commit": "2c91ccdc2620ddb375c45aa07d7351aed26b4c87", "Url": "https://api.github.com/repos/BankingBoys/amos-ss17-proj7", "Date": "2017-06-06T20:04:21Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(mCurrentPercentage)) { mCurrentPercentage = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6906/buggy-version/app.src.main.java.cmput301f17t26.smores.all_models.Habit.java", "BodyUseAPI": [], "Fixed commit": "3028ee8e52186d946164be096753f55a2dd02e40", "Url": "https://api.github.com/repos/CMPUT301F17T26/Smores", "Date": "2017-11-18T20:57:46Z"},
{"Line": "=>1479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (lhsMetric == null) { metrics[i] = rhsMetric; }else if (rhsMetric == null) { metrics[i] = lhsMetric; }else { metrics[i] = metricAggs[i].combine(lhsMetric, rhsMetric); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6719/buggy-version/processing.src.main.java.io.druid.segment.IndexMerger.java", "BodyUseAPI": ["metricAggs[i].combine(java.lang.Object,java.lang.Object)"], "Fixed commit": "db35dd7508ee8db816fee49d49be970e35211153", "Url": "https://api.github.com/repos/navis/druid", "Date": "2016-04-12T21:46:31Z"},
{"Line": "=>953", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.connectsdk.discovery.DiscoveryManager.getInstance().getConnectableDeviceStore()) != null) com.connectsdk.discovery.DiscoveryManager.getInstance().getConnectableDeviceStore().addDevice(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8546/buggy-version/src.com.connectsdk.device.ConnectableDevice.java", "BodyUseAPI": [], "Fixed commit": "a2bff2d0f22bd01dd028c427453c059fc8663635", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android", "Date": "2014-05-02T22:51:34Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ekulf.spotifystreamer.TrackListActivity.getSupportActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (actionBar != null) { actionBar.setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1555/buggy-version/app.src.main.java.com.github.ekulf.spotifystreamer.TrackListActivity.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.setDisplayHomeAsUpEnabled(boolean)"], "Fixed commit": "37aa3b22c3cf9c3bb2317ddf642d79df00fcfbee", "Url": "https://api.github.com/repos/Ekulf/SpotifyStreamer", "Date": "2015-06-01T21:40:42Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { if (savedInstanceState.containsKey(com.squirrel.justrread.fragments.FeedFragment.SELECTED_KEY)) { mPosition = savedInstanceState.getInt(com.squirrel.justrread.fragments.FeedFragment.SELECTED_KEY); } if ((!(mTwoPane)) && (savedInstanceState.containsKey(com.squirrel.justrread.fragments.FeedFragment.Y_OFFSET_KEY))) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5962/buggy-version/app.src.main.java.com.squirrel.justrread.fragments.FeedFragment.java", "BodyUseAPI": ["android.os.Bundle.containsKey(java.lang.String)", "android.os.Bundle.getInt(java.lang.String)", "android.os.Bundle.containsKey(java.lang.String)"], "Fixed commit": "f055d3a82a3f15d820156afce3219960837a1c1b", "Url": "https://api.github.com/repos/tisqui/JustRRead", "Date": "2016-06-27T02:07:21Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((xJump == 0) || (zJump == 0)) { writer.print(java.lang.String.format(\"%d %d %d %d\\n\", torchID, (x - 2), 0, (z - 2))); writer.print(java.lang.String.format(\"%d %d %d %d\\n\", railID, (x - 1), 0, (z - 1))); writer.print(java.lang.String.format(\"%d %d %d %d\\n\", torchID, x, 0, z)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4242/buggy-version/com.sourcecraft.gen.planner.RailwayPlanner.java", "BodyUseAPI": [], "Fixed commit": "721ab53461ee3c01cfd43afaefcadd3a713dc4ad", "Url": "https://api.github.com/repos/faddison/sourcecraft-gen", "Date": "2013-11-19T08:50:19Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.onyx.android.sdk.data.cms.OnyxScribble.getPoints()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((tempPoints.get(i).getSize()) == 0) { paint.setStrokeWidth(20); paint.setColor(Color.WHITE); }else { paint.setStrokeWidth(tempPoints.get(i).getSize()); paint.setColor(Color.BLACK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/174/buggy-version/PenDemo.src.com.example.pendemo.BrushManager.java", "BodyUseAPI": ["tempPoints.get(i).getSize()", "java.util.ArrayList<com.onyx.android.sdk.data.cms.OnyxScribblePoint>.get(int)", "com.example.pendemo.Paint.setStrokeWidth(tempPoints.get(i).getSize())"], "Fixed commit": "c5b57c542f10aede990c0e4dee05762027e0484c", "Url": "https://api.github.com/repos/onyx-intl/android-public", "Date": "2014-08-23T08:42:11Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(invalidConfiguration)) { configurationReader.signalForStop(); try { configurationReader.join(); } catch (java.lang.InterruptedException e) { com.telefonica.iot.cygnus.interceptors.NGSIGroupingInterceptor.LOGGER.error((\"There was a problem while joining the ConfigurationReader. Details: \" + (e.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4083/buggy-version/cygnus-ngsi.src.main.java.com.telefonica.iot.cygnus.interceptors.NGSIGroupingInterceptor.java", "BodyUseAPI": [], "Fixed commit": "c9eeebd9b6c4d4673ccc94ab935c8ee62535b40e", "Url": "https://api.github.com/repos/frbattid/fiware-cygnus", "Date": "2016-05-26T07:50:45Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { control.setBackgroundResource(R.drawable.ic_media_play); player.setPlayWhenReady(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3563/buggy-version/app.src.main.java.com.sparshik.yogicapple.ui.player.ExoPlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "7588f4d0871d15a2070d20a50451d2f1f3326b23", "Url": "https://api.github.com/repos/navenduagarwal/capstone2", "Date": "2017-07-12T10:54:54Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.broadleafcommerce.cms.url.domain.URLHandler.getIncomingURL()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(incomingUrl.startsWith(\"^\"))) { if (incomingUrl.startsWith(\"/\")) { incomingUrl = \"^\" + incomingUrl; }else { incomingUrl = \"^/\" + incomingUrl; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4559/buggy-version/admin.broadleaf-contentmanagement-module.src.main.java.org.broadleafcommerce.cms.url.service.URLHandlerServiceImpl.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "92f838fec854916d27987666c06e2b0549f36e7d", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2014-02-11T05:55:14Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (url != null) { com.google.firebase.storage.FirebaseStorage.getInstance().getReference(url).getFile(localFile).addOnSuccessListener(new com.google.android.gms.tasks.OnSuccessListener<com.google.firebase.storage.FileDownloadTask.TaskSnapshot>() { @java.lang.Override public void onSuccess(com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot) { android.graphics.Bitmap image = android.graphics.BitmapFactory.decodeFile(java.lang.String.valueOf(finalLocalFile)); mImage.setImageBitmap(image); } }).addOnFailureListener(new com.google.android.gms.tasks.OnFailureListener() { @java.lang.Override public void onFailure(@android.support.annotation.NonNull java.lang.Exception exception) { } }); }else { mImage.setImageResource(R.drawable.default_image); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5023/buggy-version/app.src.main.java.me.lensevents.lensevents.RequestForImageTask.java", "BodyUseAPI": ["com.google.firebase.storage.FirebaseStorage.getInstance().getReference(java.lang.String)", "com.google.firebase.storage.FirebaseStorage.getInstance().getReference(url).getFile(localFile).addOnSuccessListener(com.google.android.gms.tasks.OnSuccessListener<com.google.firebase.storage.FileDownloadTask.TaskSnapshot>)", "com.google.firebase.storage.FirebaseStorage.getInstance().getReference(url).getFile(java.io.File)", "com.google.firebase.storage.FirebaseStorage.getInstance().getReference(url).getFile(localFile).addOnSuccessListener(new com.google.android.gms.tasks.OnSuccessListener<com.google.firebase.storage.FileDownloadTask.TaskSnapshot>() {\n    @java.lang.Override\n    public void onSuccess(com.google.firebase.storage.FileDownloadTask.TaskSnapshot taskSnapshot) {\n        android.graphics.Bitmap image = android.graphics.BitmapFactory.decodeFile(java.lang.String.valueOf(finalLocalFile));\n        mImage.setImageBitmap(image);\n    }\n}).addOnFailureListener(com.google.android.gms.tasks.OnFailureListener)"], "Fixed commit": "2cea99bf377c79a86fdd0265264af22587b20cd6", "Url": "https://api.github.com/repos/LensEvents/LensEvents", "Date": "2017-05-06T17:43:56Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!startedTest) && ((actionType) == 2)) { startlevelTest(textCountdown); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8822/buggy-version/app.src.main.java.edu.umd.cmsc436.Level.LevelActivity.java", "BodyUseAPI": [], "Fixed commit": "76c787c790b2f4c10d39b84e857dd8c884f5198d", "Url": "https://api.github.com/repos/cmsc436/LevelTest", "Date": "2017-05-02T15:35:43Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.toLowerCase().endsWith(\",jar\")) input = owner.getClass().getResourceAsStream(source); else input = owner.getClass().getResourceAsStream((path + source));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3317/buggy-version/de.hcl.synchronize.src.de.hcl.synchronize.client.HCLClient.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.getResourceAsStream(java.lang.String)"], "Fixed commit": "5fd011ca409b13a5ceb2e0b8b332d929f9695a55", "Url": "https://api.github.com/repos/dabastynator/RemoteControlSystem", "Date": "2012-10-05T22:59:51Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.habzy.image.models.ViewParams.ShownStyle.ViewAndDelete) != (mParams.getShownStyle())) { result = true; mImgNoMedia.setVisibility(View.VISIBLE); mImgNoMedia.setImageResource(R.drawable.no_media); mImgNoMedia.setClickable(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8368/buggy-version/source.src.com.habzy.image.picker.GridViewPicker.java", "BodyUseAPI": [], "Fixed commit": "4922ec3f9a86a34fb506682f775661181ffc6b77", "Url": "https://api.github.com/repos/habzy/GridImagePicker", "Date": "2014-10-14T07:53:00Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ContentProviderClient.query(InvoiceProvider.URI,java.lang.String[],java.lang.String,java.lang.String[],<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (feeds.moveToFirst()) { if (where != null) { do { getInvoices(feeds.getString(0), feeds.getString(1), provider, syncResult); } while (feeds.moveToNext() ); }else { getInvoices(null, null, provider, syncResult); } }else { getInvoices(null, null, provider, syncResult); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2965/buggy-version/app.src.main.java.ru.sibek.parus.sync.SyncAdapter.java", "BodyUseAPI": ["android.database.Cursor.getString(int)", "android.database.Cursor.moveToNext()", "android.database.Cursor.getString(int)", "ru.sibek.parus.sync.SyncAdapter.getInvoices(feeds.getString(0),feeds.getString(1),android.content.ContentProviderClient,android.content.SyncResult)"], "Fixed commit": "f6b31e1f95ec48028100b5339010feb5121dc4b2", "Url": "https://api.github.com/repos/argen666/SibekParus", "Date": "2014-11-28T08:33:40Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((packet.getAction()) == (TIME)) { if ((lastTimeSync) > 0) { long timePassed = (java.lang.System.currentTimeMillis()) - (lastTimeSync); clock.synchronizeTime((timePassed / 2)); }else { clock.synchronizeTime(); mClient.sendAll(packet); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2671/buggy-version/app.src.main.java.com.qualcomm.vuforia.samples.VuforiaSamples.app.ImageTargets.GameLobby.java", "BodyUseAPI": ["com.qualcomm.vuforia.samples.VuforiaSamples.app.ImageTargets.Client.sendAll(com.qualcomm.vuforia.samples.VuforiaSamples.app.ImageTargets.ClientPacket)"], "Fixed commit": "e40fe6baa92ac2f54cab47c77fad91ba9914d6b6", "Url": "https://api.github.com/repos/hessenh/RaceAR", "Date": "2015-03-11T00:07:41Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.vicky.android.baselib.utils.MMCQ.medianCutApply(int[],com.vicky.android.baselib.utils.MMCQ.VBox)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (vboxes == null) return new java.lang.Object[]{ lh, nColors, niters };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3028/buggy-version/baselib.src.main.java.com.vicky.android.baselib.utils.MMCQ.java", "BodyUseAPI": [], "Fixed commit": "5b81e8a2bd41092b998b85879812cfd772dbd18e", "Url": "https://api.github.com/repos/wkigen/AndroidBaseLib", "Date": "2017-09-10T07:46:54Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Double.isNaN(d[i])) == false) total += d[i];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3964/buggy-version/Java.OpenmlApiConnector.src.openml.algorithms.InstancesHelper.java", "BodyUseAPI": [], "Fixed commit": "262f59601b51ca010149c08d97d015d9336df07f", "Url": "https://api.github.com/repos/openml/OpenML", "Date": "2014-03-20T05:09:19Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(d[i])) result[i] = 0.0; else if (total > 0.0) result[i] = (d[i]) / total; else result[i] = d[i];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3964/buggy-version/Java.OpenmlApiConnector.src.openml.algorithms.InstancesHelper.java", "BodyUseAPI": [], "Fixed commit": "262f59601b51ca010149c08d97d015d9336df07f", "Url": "https://api.github.com/repos/openml/OpenML", "Date": "2014-03-20T05:09:19Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) { result.append(\"<\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/9085/buggy-version/surefire-providers.common-java5.src.main.java.org.apache.maven.surefire.report.SmartStackTraceParser.java", "BodyUseAPI": [], "Fixed commit": "e7a18cb2c5ff7031da26d4387e87583bcc765462", "Url": "https://api.github.com/repos/krosenvold/maven-surefire", "Date": "2012-12-20T03:04:45Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (userOptions.containsKey(\"cloud\")) { java.lang.Object cloudOption = userOptions.get(\"cloud\"); if ((cloudOption != null) && (cloudOption instanceof io.iron.ironmq.Cloud)) { cloud = ((io.iron.ironmq.Cloud) (cloudOption)); } }else { cloud = new io.iron.ironmq.Cloud(((java.lang.String) (getOption(\"scheme\"))), ((java.lang.String) (getOption(\"host\"))), ((java.lang.Number) (getOption(\"port\"))).intValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8611/buggy-version/src.main.java.io.iron.ironmq.Client.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "12bd54a505bf89999925e3539f269556a75ffc6e", "Url": "https://api.github.com/repos/iron-io/iron_mq_java", "Date": "2014-01-22T02:00:11Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cloud != null) { userOptions.put(\"cloud\", cloud); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8611/buggy-version/src.main.java.io.iron.ironmq.Client.java", "BodyUseAPI": [], "Fixed commit": "12bd54a505bf89999925e3539f269556a75ffc6e", "Url": "https://api.github.com/repos/iron-io/iron_mq_java", "Date": "2014-01-22T02:00:11Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pointsText.getText().toString().length()) > (textCount)) { pointsText.setX((((((com.codephillip.game.fastswitch.MainActivity.WIDTH) / 2) - ((livesText.getWidth()) / 2)) + 230) + (pointsTextYIncrement))); pointsTextYIncrement += 35; textCount += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1502/buggy-version/app.src.main.java.com.codephillip.game.fastswitch.MainActivity.java", "BodyUseAPI": ["org.andengine.entity.text.Text.setX((((((com.codephillip.game.fastswitch.MainActivity.WIDTH) / 2) - ((livesText.getWidth()) / 2)) + 230) + (pointsTextYIncrement)))"], "Fixed commit": "ddef5210c41cb840a10b429f5f5c1c28296b046a", "Url": "https://api.github.com/repos/codephillip/FastSwitch", "Date": "2016-07-11T13:46:17Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((LocalData.budget.getBudget()) < 0.0) { mBudgetDisplay.setTextColor(android.support.v4.content.ContextCompat.getColor(getContext(), R.color.red)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8730/buggy-version/app.src.main.java.com.papramaki.papramaki.ui.BudgetFragment.java", "BodyUseAPI": [], "Fixed commit": "3007ce887b91ddf586038d608bc9c5f2a7be1243", "Url": "https://api.github.com/repos/MarcioPorto/papramaki", "Date": "2016-03-04T02:38:43Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((LocalData.budget.getBudget()) < 0.0) { mBudgetDisplay.setTextColor(android.support.v4.content.ContextCompat.getColor(getContext(), R.color.red)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8730/buggy-version/app.src.main.java.com.papramaki.papramaki.ui.BudgetFragment.java", "BodyUseAPI": [], "Fixed commit": "3007ce887b91ddf586038d608bc9c5f2a7be1243", "Url": "https://api.github.com/repos/MarcioPorto/papramaki", "Date": "2016-03-04T02:38:43Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.http.util.EntityUtils.toString(httpResponse.getEntity())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (com.intalker.borrow.cloud.CloudAPI.setAccessToken(strResult)) { return com.intalker.borrow.cloud.CloudAPI.Return_OK; }else if ((strResult.compareTo(com.intalker.borrow.cloud.CloudAPI.ServerReturnCode_WrongUserNameOrPwd)) == 0) { return com.intalker.borrow.cloud.CloudAPI.Return_WrongUserNameOrPassword; }else { return com.intalker.borrow.cloud.CloudAPI.Return_NetworkError; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3997/buggy-version/src.com.intalker.borrow.cloud.CloudApi.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)"], "Fixed commit": "9e8eaea3da7e34e0cb15c96c801fba1b471efcc2", "Url": "https://api.github.com/repos/tomdong/borrow", "Date": "2013-01-30T01:36:19Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getId()) > (nextId)) { nextId = (item.getId()) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7395/buggy-version/src.data.AbstractDataList.java", "BodyUseAPI": ["T.getId()"], "Fixed commit": "11e2dd187bd744c60df55ac8b7da1aa83b8f8d7c", "Url": "https://api.github.com/repos/redjen/IST261v2", "Date": "2017-07-11T00:39:44Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (polyObjectManager.hasActiveObject()) { editorStateContext.setState(State.EDIT); }else { editorStateContext.setState(State.VIEW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5133/buggy-version/app.src.main.java.android.ohdm.de.editor.activities.EditorState.EditorStateSelect.java", "BodyUseAPI": [], "Fixed commit": "009248181c83d8dd306096d818044600c4ff2b0a", "Url": "https://api.github.com/repos/OpenHistoricalDataMap/OHDMAndroidEditor", "Date": "2015-05-19T10:52:29Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParent()) instanceof com.bluepowermod.part.gate.ic.FakeMultipartTileIC) ((com.bluepowermod.part.gate.ic.FakeMultipartTileIC) (getParent())).getIC().loadWorld();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4809/buggy-version/src.main.java.com.bluepowermod.part.wire.redstone.PartRedwireFace.java", "BodyUseAPI": [], "Fixed commit": "9998af791a7e72f9f2c072ab68e5ebdc4f2757e2", "Url": "https://api.github.com/repos/Qmunity/BluePower", "Date": "2015-01-30T13:31:06Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParent()) instanceof com.bluepowermod.part.gate.ic.FakeMultipartTileIC) ((com.bluepowermod.part.gate.ic.FakeMultipartTileIC) (getParent())).getIC().loadWorld();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4809/buggy-version/src.main.java.com.bluepowermod.part.wire.redstone.PartRedwireFace.java", "BodyUseAPI": [], "Fixed commit": "9998af791a7e72f9f2c072ab68e5ebdc4f2757e2", "Url": "https://api.github.com/repos/Qmunity/BluePower", "Date": "2015-01-30T13:31:06Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.FilterConfig.getInitParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotBlank(cFile)) { com.github.foxty.topaz.common.Config.init(new java.io.File(cFile)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/453/buggy-version/src.main.java.com.github.foxty.topaz.controller.CoreFilter.java", "BodyUseAPI": ["com.github.foxty.topaz.common.Config.init(java.io.File)"], "Fixed commit": "1a4b39a509565cb957127a786df0a11e556fde91", "Url": "https://api.github.com/repos/foxty/topaz", "Date": "2017-07-26T02:15:09Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsAutoChangeMonthRow) { mCurrentRowsIsSix = (com.jeek.calendar.widget.calendar.CalendarUtils.getMonthRows(year, month)) == 6; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/864/buggy-version/calendar.src.main.java.com.jeek.calendar.widget.calendar.schedule.ScheduleLayout.java", "BodyUseAPI": [], "Fixed commit": "937bf4856e8daa9ac14ee4faf104b760920c9ac7", "Url": "https://api.github.com/repos/PATHojianglaile/Calendar", "Date": "2017-06-20T09:45:49Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!alreadyRegistered) { mRenderers.add(renderer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6937/buggy-version/rajawali.src.main.java.org.rajawali3d.materials.AResourceManager.java", "BodyUseAPI": [], "Fixed commit": "268d0d90fb074f64c483c2c8e291b8cfe4ca5e19", "Url": "https://api.github.com/repos/conflictpredictor/Rajawali", "Date": "2015-04-02T01:56:41Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.enabled) { return this.clusters; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3004/buggy-version/src.data.impl.UMLModifier.java", "BodyUseAPI": [], "Fixed commit": "d3e20a251888e55b368cbce429a16df5b1789814", "Url": "https://api.github.com/repos/mpersing/CSSE374-Final-Project", "Date": "2016-02-19T04:01:58Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["data.api.IUMLModifier.getClusters()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (temp != null) { toReturn.addAll(m.getClusters()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3004/buggy-version/src.data.impl.UMLModifierComposite.java", "BodyUseAPI": [], "Fixed commit": "d3e20a251888e55b368cbce429a16df5b1789814", "Url": "https://api.github.com/repos/mpersing/CSSE374-Final-Project", "Date": "2016-02-19T04:01:58Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["petablox.program.RTA.loadClass(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (r != null) { petablox.program.ArrayType arr = petablox.program.ArrayType.v(r.getType(), dim); if (arr != null) processResolvedAryNewInstSite(u, arr, r.getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7185/buggy-version/src.petablox.program.RTA.java", "BodyUseAPI": ["petablox.program.SootClass.getType()", "petablox.program.RTA.processResolvedAryNewInstSite(petablox.program.Unit,petablox.program.ArrayType,r.getType())", "petablox.program.SootClass.getType()", "petablox.program.ArrayType.v(r.getType(),int)"], "Fixed commit": "70081dc457d0fc74ace8e3bbfa079c3055463552", "Url": "https://api.github.com/repos/petablox-project/petablox", "Date": "2016-01-11T18:20:34Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (scale != (lastScale)) { generateBrushCursorScaled(scale); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3322/buggy-version/src.cz.mgn.collabdesktop.room.model.paintengine.tool.tools.brushable.BrushToolCursor.java", "BodyUseAPI": ["cz.mgn.collabdesktop.room.model.paintengine.tool.tools.brushable.BrushToolCursor.generateBrushCursorScaled(float)"], "Fixed commit": "67c8bf89d2bf5ad36e8398e01f2ebb7451f983b1", "Url": "https://api.github.com/repos/MoonGames/collab-desktop", "Date": "2012-09-08T19:52:34Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getTargetBlock(<nulltype>,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((block.getType()) != (org.bukkit.Material.CHEST)) { player.sendMessage(\"Block must be a chest!\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2071/buggy-version/ShutterPvP.src.org.shutterspiny.plugin.ShutterPvP.SGPlugin.java", "BodyUseAPI": [], "Fixed commit": "dde9287ce931242f8953ab27c36012ab3e5f759b", "Url": "https://api.github.com/repos/SpinyCucumber/ShutterPvP", "Date": "2015-07-12T02:54:44Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.joe.holi.data.model.AccuDaily.getDailyForecasts()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((futureWeathers.get(i).getSun().getRise()) != null) && ((futureWeathers.get(i).getSun().getSet()) != null)) { sunRiseTimeToday = futureWeathers.get(i).getSun().getRise().split(\"T\")[1].split(\"\\'\\'+\")[0].substring(0, 5); sunDownTimeToday = futureWeathers.get(i).getSun().getSet().split(\"T\")[1].split(\"\\'\\'+\")[0].substring(0, 5); }else { sunRiseTimeToday = \"00:00\"; sunDownTimeToday = \"23:59\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5501/buggy-version/app.src.main.java.com.joe.holi.ui.fragment.WeatherInfoFragment.java", "BodyUseAPI": ["futureWeathers.get(i).getSun().getRise()", "futureWeathers.get(i).getSun().getSet().split(\"T\")[1].split(java.lang.String)", "java.util.List<AccuDaily.DailyForecastsEntity>.get(int)", "futureWeathers.get(i).getSun()", "futureWeathers.get(i).getSun().getSet().split(java.lang.String)", "java.util.List<AccuDaily.DailyForecastsEntity>.get(int)", "futureWeathers.get(i).getSun().getSet().split(\"T\")[1].split(\"\\'\\'+\")[0].substring(int,int)", "futureWeathers.get(i).getSun().getRise().split(\"T\")[1].split(\"\\'\\'+\")[0].substring(int,int)", "futureWeathers.get(i).getSun().getSet()", "futureWeathers.get(i).getSun()", "futureWeathers.get(i).getSun().getRise().split(\"T\")[1].split(java.lang.String)", "futureWeathers.get(i).getSun().getRise().split(java.lang.String)"], "Fixed commit": "59b503c9b5c6d661ab2a485abc803f3c0b4f0fe2", "Url": "https://api.github.com/repos/joj1989/Holiday", "Date": "2017-04-18T03:49:29Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lvFilterByJob.getVisibility()) == (android.view.View.VISIBLE)) lvFilterByJob.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8485/buggy-version/Leumi.src.com.pictureit.leumi.main.fragments.ResultsFragment.java", "BodyUseAPI": ["android.widget.ListView.setVisibility(View.GONE)"], "Fixed commit": "5ef465ecf839f635da7c69f01fa435abe5b9b986", "Url": "https://api.github.com/repos/NoamBO/Pictureit", "Date": "2014-08-13T10:48:03Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lvFilterByUnit.getVisibility()) == (android.view.View.VISIBLE)) lvFilterByUnit.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8485/buggy-version/Leumi.src.com.pictureit.leumi.main.fragments.ResultsFragment.java", "BodyUseAPI": ["android.widget.ListView.setVisibility(View.GONE)"], "Fixed commit": "5ef465ecf839f635da7c69f01fa435abe5b9b986", "Url": "https://api.github.com/repos/NoamBO/Pictureit", "Date": "2014-08-13T10:48:03Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((object.eGet(reference)) != null) { if ((reference.getUpperBound()) == 1) { if ((ontology.getConverter().getIndividuals().get(object.eGet(reference))) != null) { result = java.util.Collections.singletonList(((org.openflexo.technologyadapter.emf.model.EMFObjectIndividual) (ontology.getConverter().getIndividuals().get(object.eGet(reference))))); }else { result = java.util.Collections.emptyList(); } }else { result = new java.util.ArrayList<org.openflexo.technologyadapter.emf.model.EMFObjectIndividual>(); java.util.List<?> valueList = ((java.util.List<?>) (object.eGet(reference))); for (java.lang.Object value : valueList) { if ((ontology.getConverter().getIndividuals().get(value)) != null) { result.add(((org.openflexo.technologyadapter.emf.model.EMFObjectIndividual) (ontology.getConverter().getIndividuals().get(value)))); } } } }else { result = java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2086/buggy-version/emfconnector.src.main.java.org.openflexo.technologyadapter.emf.model.EMFObjectIndividualReferenceObjectPropertyValueAsList.java", "BodyUseAPI": ["ontology.getConverter().getIndividuals().get(object.eGet(reference))", "java.util.Collections.singletonList(((org.openflexo.technologyadapter.emf.model.EMFObjectIndividual) (ontology.getConverter().getIndividuals().get(object.eGet(reference)))))", "org.openflexo.technologyadapter.emf.model.EMFObjectIndividualReferenceObjectPropertyValueAsList.getUpperBound()", "org.openflexo.technologyadapter.emf.model.EMFObjectIndividualReferenceObjectPropertyValueAsList.eGet(org.openflexo.technologyadapter.emf.model.EMFObjectIndividualReferenceObjectPropertyValueAsList)", "org.openflexo.technologyadapter.emf.model.EMFObjectIndividualReferenceObjectPropertyValueAsList.eGet(org.openflexo.technologyadapter.emf.model.EMFObjectIndividualReferenceObjectPropertyValueAsList)", "ontology.getConverter().getIndividuals().get(object.eGet(reference))", "org.openflexo.technologyadapter.emf.model.EMFObjectIndividualReferenceObjectPropertyValueAsList.eGet(org.openflexo.technologyadapter.emf.model.EMFObjectIndividualReferenceObjectPropertyValueAsList)"], "Fixed commit": "4b60f8a14544508bace25a13f80ef3c298988673", "Url": "https://api.github.com/repos/openflexo-team/openflexo-technology-adapters", "Date": "2014-02-25T10:41:43Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((words.length) >= 1) && (!(words[0].isEmpty()))) { _numberOfWords += words.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3965/buggy-version/src.ContentAnalyzer.java", "BodyUseAPI": [], "Fixed commit": "6f8b2fd6fc286e23933ad8bc0979322ea9b18921", "Url": "https://api.github.com/repos/flickan/FileParser", "Date": "2014-09-19T09:01:07Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.andrejs.json.Json.at(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (serverConfig.containsKey(\"port\")) { proxyBuilder.addHttpListener(port, host); backflow.ProxyServer.log.info((((\"Started proxy on \" + host) + \":\") + port)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8821/buggy-version/src.main.java.backflow.ProxyServer.java", "BodyUseAPI": [], "Fixed commit": "0c5e1b8da5664824af956f4bb0cfb4d29c6c78e3", "Url": "https://api.github.com/repos/ajermakovics/backflow", "Date": "2017-02-04T12:11:20Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((info.getFoodList().length) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8288/buggy-version/chatbot.src.chatbot.ChatbotBen.java", "BodyUseAPI": [], "Fixed commit": "95630c00cba528e4188691e6e63f055589c21f68", "Url": "https://api.github.com/repos/deltaalpha33/Apcompsci_chatbot", "Date": "2017-10-12T18:15:43Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getConfig().getConfigurationSection(\"games\")) != null) { for (java.lang.String name : getConfig().getConfigurationSection(\"games\").getKeys(false)) { games.put(name, new com.chaseoes.mobninja.MobNinjaGame(name)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6454/buggy-version/src.main.java.com.chaseoes.mobninja.MobNinja.java", "BodyUseAPI": [], "Fixed commit": "f3ed5885b25043a29404809b7a49ad36633cd761", "Url": "https://api.github.com/repos/chaseoes/MobNinja", "Date": "2013-12-08T04:40:53Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((FirstMonth) > month) { FirstMonth = month; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7367/buggy-version/app.src.main.java.com.examples.ankit.breakpoint.reports.MonthlyExpenseFragment.java", "BodyUseAPI": [], "Fixed commit": "0f074b195fc481e93c7b1964fb11180c09efd516", "Url": "https://api.github.com/repos/ankitgoyal1009/Bounty-Android-Personal-Finance", "Date": "2017-06-15T03:47:22Z"},
{"Line": "=>671", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(assignedName)) { assignedName = assignee.optString(\"email\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6334/buggy-version/astrid.plugin-src.com.todoroo.astrid.actfm.EditPeopleControlSet.java", "BodyUseAPI": [], "Fixed commit": "78b5bb31c20b9ca750e9c251f85527c2929d7aa8", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2011-12-22T18:04:28Z"},
{"Line": "=>555", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.inria.astor.core.loop.AstorCoreEngine.createModificationForPoint(fr.inria.astor.core.entities.ModificationPoint)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((modificationInstance.getOperationApplied()) != null) { mutationContent = (modificationInstance.getOperationApplied().getClass().toString()) + \":\"; }else mutationContent = \"operator:null:\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7598/buggy-version/src.main.java.fr.inria.astor.core.loop.AstorCoreEngine.java", "BodyUseAPI": ["fr.inria.astor.core.entities.ModificationInstance.getOperationApplied()", "modificationInstance.getOperationApplied().getClass()", "modificationInstance.getOperationApplied().getClass().toString()"], "Fixed commit": "8df0ec63ed669faf0d8d9878464101cd2da0b5db", "Url": "https://api.github.com/repos/justinwm/astor", "Date": "2017-06-09T12:21:21Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.inria.astor.core.loop.AstorCoreEngine.createModificationForPoint(fr.inria.astor.core.entities.ModificationPoint)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((modificationInstance.getModified()) != null) { mutationContent += modificationInstance.getModified().toString(); }else { mutationContent += \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7598/buggy-version/src.main.java.fr.inria.astor.core.loop.AstorCoreEngine.java", "BodyUseAPI": ["modificationInstance.getModified().toString()", "fr.inria.astor.core.entities.ModificationInstance.getModified()"], "Fixed commit": "8df0ec63ed669faf0d8d9878464101cd2da0b5db", "Url": "https://api.github.com/repos/justinwm/astor", "Date": "2017-06-09T12:21:21Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["httpRequest.getSession().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) return javax.ws.rs.core.Response.status(Response.Status.UNAUTHORIZED).entity(\"Session expired\").build();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7422/buggy-version/software.cananolab-webapp.src.gov.nih.nci.cananolab.restful.PublicationServices.java", "BodyUseAPI": [], "Fixed commit": "5f6af5e5b40355839b48ff79367dda0992dff14f", "Url": "https://api.github.com/repos/CBIIT/cananolab", "Date": "2014-09-16T15:21:45Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.neo4j.graphdb.GraphDatabaseService.getRelationshipById(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (relationship.getType().name().equals(\"RELATIONSHIP\")) { relationship.delete(); tx.success(); }else { return javax.ws.rs.core.Response.status(Status.FORBIDDEN).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7373/buggy-version/stemmarest.src.main.java.net.stemmaweb.rest.Relation.java", "BodyUseAPI": ["org.neo4j.graphdb.Relationship.delete()"], "Fixed commit": "d2d099a1746f5f415fd59a0392c2e05250de2a03", "Url": "https://api.github.com/repos/tohotforice/PSE2_DH", "Date": "2015-05-03T16:19:14Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dir[i]) == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/618/buggy-version/src.controller.SystemCore.java", "BodyUseAPI": [], "Fixed commit": "3313ddf02bbcc29f15ccfce45969b01743bfb396", "Url": "https://api.github.com/repos/h1994st/OS_File_Managment", "Date": "2014-06-22T03:09:00Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((whiteMessage.newMove) != null) java.lang.System.out.println((((\"The move in the new message says: \" + (whiteMessage.newMove.oldPoint)) + \" to \") + (whiteMessage.newMove.newPoint)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4863/buggy-version/src.Game.GameServer.java", "BodyUseAPI": [], "Fixed commit": "c3b60c224c46673509e8dcf96064e79850589f3d", "Url": "https://api.github.com/repos/zlmonroe/SER216Chess", "Date": "2017-04-26T01:15:25Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reasoner) == null) { reasoner = getConfigurationMgr().getReasoner(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6584/buggy-version/com.ge.research.sadl.server.com.ge.research.sadl.server.server-impl.src.main.java.com.ge.research.sadl.server.server.SadlServerImpl.java", "BodyUseAPI": [], "Fixed commit": "7d8a227463582c02f6a2bb1e990917bde3e39066", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2016-02-25T14:22:11Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((preferences != null) && ((preferences.size()) > 0)) { for (int i = 0; i < (preferences.size()); i++) { com.ge.research.sadl.reasoner.ConfigurationItem ci = preferences.get(i); if (ci.getLeafCategory().equals(\"http://com.ge.research.sadl.configuration#ReasonerSpec\")) { ci.getNamedValue(\"reasonerClassName\"); reasoner = getConfigurationMgr().getOtherReasoner(((java.lang.String) (ci.getNamedValue(\"reasonerClassName\")))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6584/buggy-version/com.ge.research.sadl.server.com.ge.research.sadl.server.server-impl.src.main.java.com.ge.research.sadl.server.server.SadlServerImpl.java", "BodyUseAPI": ["java.util.List<com.ge.research.sadl.reasoner.ConfigurationItem>.size()", "java.util.List<com.ge.research.sadl.reasoner.ConfigurationItem>.get(int)"], "Fixed commit": "7d8a227463582c02f6a2bb1e990917bde3e39066", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2016-02-25T14:22:11Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentPlayer.getClass()) == (de.htw_berlin.HoboOthello.KI.KI.class)) { setTurn(currentPlayer.setMove(gameBoard)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5148/buggy-version/src.main.java.de.htw_berlin.HoboOthello.Core.Game.java", "BodyUseAPI": ["de.htw_berlin.HoboOthello.Core.Game.setTurn(currentPlayer.setMove(gameBoard))", "de.htw_berlin.HoboOthello.Core.Player.setMove(de.htw_berlin.HoboOthello.Core.Board)"], "Fixed commit": "39b6d297104f30181c5d1d119b79096e370358eb", "Url": "https://api.github.com/repos/HoboOthello/HoboOthello", "Date": "2016-12-11T23:35:15Z"},
{"Line": "=>550", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numEglConfigs[0]) <= 0) { android.util.Slog.e(com.android.server.display.ColorFade.TAG, \"no valid config found\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8629/buggy-version/services.core.java.com.android.server.display.ColorFade.java", "BodyUseAPI": [], "Fixed commit": "175621f51734a1880186e48cc74a48119bcd708f", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-frameworks-base", "Date": "2016-08-25T18:01:05Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.siddhihive.core.headerprocessor.JoinStreamHandler.processSubStream(joinStream.getRightStream(),java.util.Map<java.lang.String, org.wso2.carbon.siddhihive.core.configurations.StreamDefinitionExt>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((mapRightStream.get(Constants.LENGTH_BATCH_WIND_FROM_QUERY)) != null) { appendingRightSelectPhrase = mapRightStream.get(Constants.FUNCTION_JOIN_RIGHT_CALL_PARAM); int count = 0; for (int i = 0; i < (sRightString.length()); i++) { if ((sRightString.charAt(i)) != '*') count++; else break; } java.lang.String s1 = sRightString.substring(0, (count + 1)); java.lang.String s2 = sRightString.substring((count + 1), sRightString.length()); sRightString = ((((s1 + \" , \") + appendingRightSelectPhrase) + \" \") + \" as ABC \") + s2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/471/buggy-version/siddhi-hive-component.org.wso2.carbon.siddhihive.core.src.main.java.org.wso2.carbon.siddhihive.core.headerprocessor.JoinStreamHandler.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(Constants.FUNCTION_JOIN_RIGHT_CALL_PARAM)"], "Fixed commit": "fad35d21dc23adc5bb84c2a372939c9ba3929e16", "Url": "https://api.github.com/repos/tishan89/siddhi-hive", "Date": "2014-06-25T11:29:34Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FragmentManager.BackStackEntry.getName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fragmentTag == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6796/buggy-version/app.src.main.java.edu.rutgers.css.Rutgers.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c0e7b724d8ec97feb0ec7f29f511b7e9ec69ce4d", "Url": "https://api.github.com/repos/rutgersmobile/android-client", "Date": "2015-07-01T14:16:01Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((pickup_name) == null) || ((dropoff_name) == null)) { runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { android.widget.Toast.makeText(com.wareproz.mac.gravy.ScheduleRide.this, \"Please fill in both pickup and dropoff locations\", Toast.LENGTH_LONG).show(); } }); }else { new com.wareproz.mac.gravy.ScheduleRide.RequestRide().execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6915/buggy-version/app.src.main.java.com.wareproz.mac.gravy.ScheduleRide.java", "BodyUseAPI": [], "Fixed commit": "f73bc99b486923e727b55047afadfd9383267b80", "Url": "https://api.github.com/repos/chumylee/gravy_rider", "Date": "2017-09-13T14:50:08Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((text.indexOf(prefix)) > (-1)) { java.lang.String id = text.substring(((text.indexOf(prefix)) + (prefix.length())), text.indexOf(postfix, ((text.indexOf(prefix)) + (prefix.length())))); de.janrufmonitor.ui.jface.application.rendering.ITableCellRenderer r = de.janrufmonitor.ui.jface.application.RendererRegistry.getInstance().getRenderer(id.toLowerCase()); if (r != null) { r.updateData(call); text = de.janrufmonitor.util.string.StringUtils.replaceString(text, ((prefix + id) + postfix), r.renderAsText()); }else { text = de.janrufmonitor.util.string.StringUtils.replaceString(text, ((prefix + id) + postfix), \"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/388/buggy-version/modules.htmlcallmanager.src.de.janrufmonitor.repository.JournalBuilder.java", "BodyUseAPI": ["java.lang.String.length()", "de.janrufmonitor.util.string.StringUtils.replaceString(java.lang.String,java.lang.String,r.renderAsText())", "java.lang.String.indexOf(java.lang.String)", "de.janrufmonitor.util.string.StringUtils.replaceString(java.lang.String,java.lang.String,java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.length()"], "Fixed commit": "91d2eab8f550f0acae62cd9922d054fda1c96b07", "Url": "https://api.github.com/repos/tbrandt77/janrufmonitor", "Date": "2011-03-08T06:54:53Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((getServer()) != null) && ((getServer().getInfo()) == target)) { sendMessage(((net.md_5.bungee.api.ChatColor.RED) + \"Cannot connect to server you are already on!\")); }else { connect(target, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5620/buggy-version/proxy.src.main.java.net.md_5.bungee.UserConnection.java", "BodyUseAPI": ["net.md_5.bungee.UserConnection.connect(net.md_5.bungee.api.config.ServerInfo,boolean)"], "Fixed commit": "6813b82b840e851180d932de34a8f6fad57ee39f", "Url": "https://api.github.com/repos/roblabla/BungeeCord", "Date": "2013-03-20T09:25:42Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value > 8388607) { value = value - 16777216; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2760/buggy-version/src.tv.porst.splib.binaryparser.BinaryParser.java", "BodyUseAPI": [], "Fixed commit": "57f57e546268f032120af1cd14f33b298bddf0cb", "Url": "https://api.github.com/repos/sporst/splib", "Date": "2011-05-07T20:50:42Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.creativemd.littletiles.common.blocks.BlockTile.loadingTileEntityFromWorld) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1356/buggy-version/src.main.java.com.creativemd.littletiles.common.blocks.BlockTile.java", "BodyUseAPI": [], "Fixed commit": "9d985ee0a71dfbcdddba9e579048cb54ff3ca0e8", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-02-09T16:02:58Z"},
{"Line": "=>729", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.creativemd.littletiles.common.blocks.BlockTile.loadingTileEntityFromWorld) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1356/buggy-version/src.main.java.com.creativemd.littletiles.common.blocks.BlockTile.java", "BodyUseAPI": [], "Fixed commit": "9d985ee0a71dfbcdddba9e579048cb54ff3ca0e8", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-02-09T16:02:58Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.isRemote) structure.isWaitingForApprove = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1356/buggy-version/src.main.java.com.creativemd.littletiles.common.entity.EntityAnimation.java", "BodyUseAPI": [], "Fixed commit": "9d985ee0a71dfbcdddba9e579048cb54ff3ca0e8", "Url": "https://api.github.com/repos/CreativeMD/LittleTiles", "Date": "2017-02-09T16:02:58Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"\".equals(formIssue.getDescription())) formIssue.setDescription(target.getDescription());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4267/buggy-version/src.main.java.com.unicorn.service.impl.IssueServiceImpl.java", "BodyUseAPI": ["com.unicorn.bean.FormIssue.setDescription(target.getDescription())"], "Fixed commit": "bcd63f06d7e814ed7d50db322aef8dc4d23f49c3", "Url": "https://api.github.com/repos/framlog/jredmine", "Date": "2015-07-04T09:43:13Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (streamURL.equals(\"\")) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3173/buggy-version/src.StreamManager.Streammanager.java", "BodyUseAPI": [], "Fixed commit": "e6bb7ad9ce703678843335a9a0a79365ecd30722", "Url": "https://api.github.com/repos/Fozruk/StreamCheck0r2", "Date": "2014-11-23T19:05:03Z"},
{"Line": "=>688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"\".equals(getElement().getStyle().getHeight()))) { container.getStyle().setHeight(((height - (getTimelineHeight())) - (getHorizontalScrollbarSpacerHeight())), Unit.PX); }else { container.getStyle().setHeight((-1), Unit.PX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7786/buggy-version/gantt-addon.src.main.java.org.tltv.gantt.client.GanttWidget.java", "BodyUseAPI": [], "Fixed commit": "efd0b6651ed921be12e939d899382507c459be03", "Url": "https://api.github.com/repos/tistvan/gantt", "Date": "2016-11-29T13:33:41Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.jensjakupgaardbo.medialogy212.Alarm.getNextAlarmTimes()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (times != null) { wakeUptime.setText(times.get(0)); }else { wakeUptime.setText(\"no alarm coming up\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1614/buggy-version/app.src.main.java.com.example.jensjakupgaardbo.medialogy212.CardsAdapter.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "a94145d1795cf09fe54b771f8f29dbb719179858", "Url": "https://api.github.com/repos/jj-gaardbo/Medialogy212", "Date": "2017-05-03T13:45:47Z"},
{"Line": "=>788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.getDataType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((type.compare(lowerSnap.max, upperSnap.min)) >= 0) { lowerSnap = new org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.Interval<T>(this, org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.getDataType(), lowerSnap.min, upperSnap.max, lowerSnap.function); upperSnap = lowerSnap; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7050/buggy-version/src.main.org.deidentifier.arx.aggregates.HierarchyBuilderIntervalBased.java", "BodyUseAPI": [], "Fixed commit": "500a636826a1e0501be5089b91d2456ad6015792", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-04-16T15:42:44Z"},
{"Line": "=>1207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (transparent_color >= 0) { transparent_index = (1 << bitsPerPixel) - 1; colorPalette[transparent_index] = transparent_color; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2104/buggy-version/src.com.icafe4j.image.util.IMGUtils.java", "BodyUseAPI": [], "Fixed commit": "aca21253988585083ed4cf43cc66472575520b1f", "Url": "https://api.github.com/repos/dragon66/icafe", "Date": "2015-11-03T23:24:30Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (player != null) { gameContext.getAllPlayers().remove(player.getId()); notifyDisconnectPlayerListeners(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6091/buggy-version/AndroidMain.AndroidMainApp.src.net.thiagoalz.hermeto.panel.GameManager.java", "BodyUseAPI": ["net.thiagoalz.hermeto.panel.GameManager.notifyDisconnectPlayerListeners(net.thiagoalz.hermeto.player.Player)", "gameContext.getAllPlayers().remove(player.getId())", "net.thiagoalz.hermeto.player.Player.getId()"], "Fixed commit": "8720e647b1aea7c377fb509a185a48f9c4f4491a", "Url": "https://api.github.com/repos/thiagoalz/Hermeto", "Date": "2011-09-09T17:00:39Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"\".equals(property))) { builder.addLocal(new jkind.lustre.VarDecl(property, jkind.lustre.NamedType.BOOL)); builder.addProperty(property); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8347/buggy-version/src.coverage.LustreCoverage.java", "BodyUseAPI": ["jkind.lustre.builders.NodeBuilder.addLocal(jkind.lustre.VarDecl)", "jkind.lustre.builders.NodeBuilder.addProperty(java.lang.String)"], "Fixed commit": "e3dc56a284a3bf44fc7928e5109668613951057c", "Url": "https://api.github.com/repos/MENG2010/lustre", "Date": "2016-07-20T17:18:22Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((backpackSpaces.size()) >= place) { backpackSpaces.get(place).showItem(term, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2746/buggy-version/src.rogue.creature.util.Inventory.java", "BodyUseAPI": ["backpackSpaces.get(place).showItem(jade.ui.Terminal,rogue.creature.util.Inventory)", "java.util.ArrayList<rogue.creature.util.Item>.get(int)"], "Fixed commit": "94167f612f8d674924807aaa68ac7b4486652671", "Url": "https://api.github.com/repos/26thmeusoc/adventure-of-umalu", "Date": "2013-03-20T22:05:52Z"},
{"Line": "=>710", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((triangles[t][0]) == (-1.0F)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3693/buggy-version/src.org.nschmidt.ldparteditor.data.GDataCSG.java", "BodyUseAPI": [], "Fixed commit": "28e2117c6ace5a1efbbe6373653501c03327fb78", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-07-08T08:02:15Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MainActivity.mTwoPane) ((com.example.android.popularmovies.MoviesFragment.Callback) (getActivity())).onItemSelected(com.example.android.popularmovies.MoviesFragment.moviesList.get(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7016/buggy-version/app.src.main.java.com.example.android.popularmovies.MoviesFragment.java", "BodyUseAPI": [], "Fixed commit": "0e5155f9ae33e8fd3367e6ddf247cd0b778a8ec9", "Url": "https://api.github.com/repos/imadistack/Popular-Movies", "Date": "2016-03-06T21:34:39Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((up.template.size()) > 1) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3787/buggy-version/src.com.lastcalc.parsers.amounts.UnitParser.java", "BodyUseAPI": [], "Fixed commit": "ba72d4509d2384717ab46118114d4a5277037efd", "Url": "https://api.github.com/repos/sanity/LastCalc", "Date": "2013-03-10T19:07:41Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Profile.Section.get(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (debug) { java.lang.System.out.println(\"[NameBlacklister] SEVERE: Caught error where the name varriable is blank CONSIDER FIXING\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/805/buggy-version/src.tech.stealthgus.NameBlacklister.Main.java", "BodyUseAPI": [], "Fixed commit": "df6ce7dd0e9864fd748b0b153b5ebc432a67e73c", "Url": "https://api.github.com/repos/GabeHirakawa/NameBlacklister", "Date": "2016-07-13T09:54:44Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerMoveEvent.getTo()", "org.bukkit.event.player.PlayerMoveEvent.getFrom()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((((from.getX()) == (to.getX())) && ((from.getY()) == (to.getY()))) && ((from.getY()) == (to.getY()))) { }else { player.teleport(from); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3516/buggy-version/src.main.java.io.github.gustyyhd.minisg.player.listeners.PlayerListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.teleport(org.bukkit.Location)"], "Fixed commit": "992bdcdb3a209d05bfb0957ba5b1641f2012fe3b", "Url": "https://api.github.com/repos/DeprezGust/MiniSG", "Date": "2017-04-17T20:50:33Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((java.util.regex.Pattern.matches(integer, hour)) && (java.util.regex.Pattern.matches(integer, minute)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4970/buggy-version/src.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "33f58ccea7b7d84f962d451b497a2e6fcabb1ad0", "Url": "https://api.github.com/repos/cs2103aug2015-w14-2j/main", "Date": "2015-10-18T10:41:57Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((strParts.length) != 2) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4970/buggy-version/src.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "33f58ccea7b7d84f962d451b497a2e6fcabb1ad0", "Url": "https://api.github.com/repos/cs2103aug2015-w14-2j/main", "Date": "2015-10-18T10:41:57Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.util.regex.Pattern.matches(tf12first, str)) || (java.util.regex.Pattern.matches(tf12second, str))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4970/buggy-version/src.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "33f58ccea7b7d84f962d451b497a2e6fcabb1ad0", "Url": "https://api.github.com/repos/cs2103aug2015-w14-2j/main", "Date": "2015-10-18T10:41:57Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj instanceof com.graphhopper.util.shapes.GHPoint3D) { @java.lang.SuppressWarnings(\"unchecked\") final com.graphhopper.util.shapes.GHPoint3D other = ((com.graphhopper.util.shapes.GHPoint3D) (obj)); if (java.lang.Double.isNaN(ele)) return (com.graphhopper.util.NumHelper.equalsEps(lat, other.lat)) && (com.graphhopper.util.NumHelper.equalsEps(lon, other.lon)); else return ((com.graphhopper.util.NumHelper.equalsEps(lat, other.lat)) && (com.graphhopper.util.NumHelper.equalsEps(lon, other.lon))) && (com.graphhopper.util.NumHelper.equalsEps(ele, other.ele)); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4729/buggy-version/core.src.main.java.com.graphhopper.util.shapes.GHPoint3D.java", "BodyUseAPI": [], "Fixed commit": "e064bc868a7f5d419cec5616ad8a60d7d5d05a08", "Url": "https://api.github.com/repos/andreaswolf/graphhopper", "Date": "2015-08-30T14:23:48Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opensource.clearpool.datasource.proxy.PoolConnectionImpl.getStatementEventListeners()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (statementEventListeners != null) { javax.sql.StatementEvent event = new javax.sql.StatementEvent(this.pooledConnection, ((java.sql.PreparedStatement) (this.statement))); for (javax.sql.StatementEventListener listener : statementEventListeners) { listener.statementClosed(event); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3811/buggy-version/src.main.java.org.opensource.clearpool.datasource.proxy.dynamic.StatementHandler.java", "BodyUseAPI": [], "Fixed commit": "5a55c12b1cb087a596c3b6de05150acf92fbbfa0", "Url": "https://api.github.com/repos/xionghuiCoder/clearpool", "Date": "2016-09-15T10:14:58Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opensource.clearpool.datasource.proxy.PoolConnectionImpl.getStatementEventListeners()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (statementEventListeners != null) { javax.sql.StatementEvent event = new javax.sql.StatementEvent(this.pooledConnection, ((java.sql.PreparedStatement) (this.statement))); for (javax.sql.StatementEventListener listener : statementEventListeners) { listener.statementErrorOccurred(event); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3811/buggy-version/src.main.java.org.opensource.clearpool.datasource.proxy.dynamic.StatementHandler.java", "BodyUseAPI": [], "Fixed commit": "5a55c12b1cb087a596c3b6de05150acf92fbbfa0", "Url": "https://api.github.com/repos/xionghuiCoder/clearpool", "Date": "2016-09-15T10:14:58Z"},
{"Line": "=>538", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fullBeta == null) { fullBeta = hex.glm.MemoryManager.malloc8d(((_dinfo.fullN()) + 1)); fullBeta[((fullBeta.length) - 1)] = _glm.linkInv(_ymu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7391/buggy-version/src.main.java.hex.glm.GLM2.java", "BodyUseAPI": [], "Fixed commit": "f6238f2ba11e9b9fbb44d3252895b5092bd72743", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-08-22T22:20:25Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.awaker.data.MediaManager.isReady()) { trackQueue = com.awaker.audio.TrackQueue.getInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4814/buggy-version/src.com.awaker.audio.PlayerMaster.java", "BodyUseAPI": [], "Fixed commit": "64aab1bdf9f184c69ccacf90b6efabaca21238bd", "Url": "https://api.github.com/repos/caleron/awaker", "Date": "2017-04-16T09:55:17Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lonelymc.ri4.bukkit.listeners.IRareItems4API.getEssence(org.bukkit.inventory.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((essence.getStatus().equals(EssenceStatus.USED)) || (essence.getStatus().equals(EssenceStatus.REVOKED))) { e.getWhoClicked().sendMessage(RI4Strings.CRAFTING_ESSENCE_ALREADY_USED.replace(\"!property\", essence.getProperty().getDisplayName())); return; }else if (!(essence.getStatus().equals(EssenceStatus.FILLED))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3515/buggy-version/src.com.lonelymc.ri4.bukkit.listeners.CraftingListener.java", "BodyUseAPI": ["essence.getProperty().getDisplayName()", "RI4Strings.CRAFTING_ESSENCE_ALREADY_USED.replace(java.lang.String,essence.getProperty().getDisplayName())", "essence.getStatus().equals(EssenceStatus.FILLED)", "com.lonelymc.ri4.bukkit.listeners.IEssence.getProperty()", "com.lonelymc.ri4.bukkit.listeners.IEssence.getStatus()", "e.getWhoClicked().sendMessage(RI4Strings.CRAFTING_ESSENCE_ALREADY_USED.replace(\"!property\", essence.getProperty().getDisplayName()))"], "Fixed commit": "113fb86eedc6a79842d53c99aed33c38b2cf65fe", "Url": "https://api.github.com/repos/Ne0nx3r0/RareItems4", "Date": "2015-03-08T20:15:49Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (value == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2494/buggy-version/questionnaires-backend.src.main.java.net.sf.gazpachoquest.questionnair.support.AnswersPopulatorImpl.java", "BodyUseAPI": [], "Fixed commit": "a1cff1fc71899484438ef3d71e69bb41bf15ac65", "Url": "https://api.github.com/repos/antoniomaria/gazpachoquest", "Date": "2014-04-23T07:47:28Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, java.lang.Integer>.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jumps == null) { net.nikr.eve.jeveasset.data.SolarSystem from = systemCache.get(systemID); net.nikr.eve.jeveasset.data.SolarSystem to = systemCache.get(jumpSystemID); if ((from != null) && (to != null)) { jumps = graph.distanceBetween(from, to); }else { jumps = -1; } distances.put(systemID, jumps); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/858/buggy-version/src.main.java.net.nikr.eve.jeveasset.data.ProfileData.java", "BodyUseAPI": [], "Fixed commit": "112bed2d4fc8d475acf83dd406d3d200f307fb1e", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2016-07-31T16:35:03Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null == tz) { if (!(org.nutz.lang.Strings.isBlank(m.group(17)))) { tzOffset = ((java.lang.Long.parseLong(m.group(19))) * 3600000L) * ((m.group(18).charAt(0)) == '-' ? -1 : 1); }else { tzOffset = java.util.TimeZone.getDefault().getRawOffset(); } }else { tzOffset = tz.getRawOffset(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2977/buggy-version/src.org.nutz.lang.Times.java", "BodyUseAPI": ["java.util.TimeZone.getRawOffset()"], "Fixed commit": "bccb01a5b8126e2516af498764d8f53d126d597b", "Url": "https://api.github.com/repos/cxshun/nutz", "Date": "2013-09-17T09:25:08Z"},
{"Line": "=>720", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (needsRestructure) { restructureTree(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7611/buggy-version/src.main.java.macrobase.analysis.summary.itemset.StreamingFPGrowth.java", "BodyUseAPI": [], "Fixed commit": "427eb240b45dd35ae48595ff783528268068b195", "Url": "https://api.github.com/repos/stanford-futuredata/macrobase", "Date": "2016-02-23T05:01:54Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (sics == null) { throw new java.lang.reflect.InvocationTargetException(exp, exp.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8610/buggy-version/framework.sics.org.gumtree.gumnix.sics.ui.src.org.gumtree.gumnix.sics.internal.ui.login.LoginProgressMonitorDialog.java", "BodyUseAPI": [], "Fixed commit": "cbc19d693bda126e42b45dd86ea5601b233397d5", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2013-03-01T03:39:09Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<com.salesforce.phoenix.util.ImmutableBytesPtr, java.util.Map<com.salesforce.phoenix.execute.PColumn, byte[]>>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (newRow != null) { for (java.util.Map.Entry<com.salesforce.phoenix.execute.PColumn, byte[]> valueEntry : newRow.entrySet()) { existingValues.put(valueEntry.getKey(), valueEntry.getValue()); } existingRows.put(rowEntry.getKey(), existingValues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/475/buggy-version/src.main.java.com.salesforce.phoenix.execute.MutationState.java", "BodyUseAPI": ["java.util.Map<com.salesforce.phoenix.execute.PColumn, byte[]>.entrySet()"], "Fixed commit": "bf0686195b96bfc53298969517b5dff8da3b1f61", "Url": "https://api.github.com/repos/colorant/phoenix", "Date": "2013-05-14T07:41:57Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.BlockingQueue<kg.dtg.smssender.Operation>.poll(int,java.util.concurrent.TimeUnit)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (currentOperation instanceof kg.dtg.smssender.CancelMessageOperation) { if ((currentOperation.getState()) == (OperationState.SUBMITTED)) { cancelMessage(currentOperation); cancelSMTimeCounter.setValue(((kg.dtg.smssender.statistic.SoftTime.getTimestamp()) - startTime)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3983/buggy-version/SMSSender.src.main.java.kg.dtg.smssender.SMQueueDispatcher.java", "BodyUseAPI": ["kg.dtg.smssender.SMQueueDispatcher.cancelMessage(kg.dtg.smssender.Operation)", "kg.dtg.smssender.Operation.getState()"], "Fixed commit": "0d7741dae5914217627d19b6c37a347c0beb877d", "Url": "https://api.github.com/repos/omeshechkov/smssender", "Date": "2014-09-09T11:46:16Z"},
{"Line": "=>1493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (workflowedBaseModel instanceof com.liferay.portal.model.WorkflowedModel) { com.liferay.portal.model.WorkflowedModel workflowedModel = ((com.liferay.portal.model.WorkflowedModel) (workflowedBaseModel)); document.addKeyword(Field.STATUS, workflowedModel.getStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2033/buggy-version/portal-service.src.com.liferay.portal.kernel.search.BaseIndexer.java", "BodyUseAPI": [], "Fixed commit": "46880c784657618b54a0451e5bc0201bd62986c4", "Url": "https://api.github.com/repos/ealonso/liferay-portal", "Date": "2013-09-09T09:26:49Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((in.readString()) != null) { try { this.data = new org.json.JSONObject(in.readString()); } catch (org.json.JSONException ex) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4427/buggy-version/thingif.src.main.java.com.kii.thingif.command.ActionResult.java", "BodyUseAPI": [], "Fixed commit": "878a9178d1b498ea50caad76e44aabd4ae7cc93e", "Url": "https://api.github.com/repos/KiiPlatform/thing-if-AndroidSDK", "Date": "2017-02-09T10:09:55Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((mySession.getAttribute(\"listapp\")) != null) { r = getServletContext().getRequestDispatcher(\"/WEB-INF/jsps/listapplications.jsp\"); r.forward(request, response); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6914/buggy-version/FoundIT.src.ListApplicantsServlet.java", "BodyUseAPI": [], "Fixed commit": "12a3b40de5a76c0ff433968e231a560ebb7a6f28", "Url": "https://api.github.com/repos/wasuremono/cs9322", "Date": "2016-05-30T11:42:05Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((maze[nextx][nexty]) == ' ') { maze[nextx][nexty] = 'x'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8366/buggy-version/11BFS.Maze.java", "BodyUseAPI": [], "Fixed commit": "63c15816b7d5b5edf6d0f762463879f5b26b40da", "Url": "https://api.github.com/repos/igerstein/APCSHW2", "Date": "2015-04-15T17:14:32Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (state == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/204/buggy-version/plugins.org.eclipse.emf.eson.ui.src.org.eclipse.emf.eson.ui.editor.tree.URIBasedPropertySource.java", "BodyUseAPI": [], "Fixed commit": "08eae4812e89c4160b8c3ce08caea37ac0748506", "Url": "https://api.github.com/repos/vorburger/ESON", "Date": "2015-05-14T12:36:47Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ahuazhu.soy.cache.MessageCache.get(com.ahuazhu.soy.modal.QuestionKey)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (message != null) { message = ((org.xbill.DNS.Message) (message.clone())); message.getHeader().setID(key.getQuestionId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4217/buggy-version/Soy-Core.src.main.java.com.ahuazhu.soy.cache.MessageCache.java", "BodyUseAPI": ["org.xbill.DNS.Message.clone()"], "Fixed commit": "567e1a6c418503d7d452cf2b073a2d999519847a", "Url": "https://api.github.com/repos/ahuazhu/SoyDNS", "Date": "2017-04-06T07:29:32Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (indicatorDefinition == null) { indicatorDefinition = indicator.getIndicatorDefinition(); if (indicatorDefinition.eIsProxy()) { indicatorDefinition = ((org.talend.dataquality.indicators.definition.IndicatorDefinition) (org.talend.dq.helper.EObjectHelper.resolveObject(indicatorDefinition))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1596/buggy-version/main.plugins.org.talend.cwm.management.src.main.java.org.talend.dq.analysis.ColumnAnalysisSqlExecutor.java", "BodyUseAPI": [], "Fixed commit": "fe1623f97e999d914e0878cc177176c55f7a1c72", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2015-07-08T06:52:15Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temp == null) { temp = processImages.get(i); }else if ((processImages.get(j).cyclesSinceLastReference) >= (processImages.get(cacheIndex).cyclesSinceLastReference)) { cacheIndex = i; processImageIndex = j; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8296/buggy-version/PageFaultSolutionSIM.src.SIM.java", "BodyUseAPI": [], "Fixed commit": "c143ac61f1c8fb73ce68492fecaa5b1af2482229", "Url": "https://api.github.com/repos/AustinCullar/PageFaultSIMSolution", "Date": "2015-11-16T20:37:54Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (ench != null) { org.bukkit.inventory.meta.ItemMeta im = is.getItemMeta(); im.addEnchant(ench, level, true); is.setItemMeta(im); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5464/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.Item.ItemBuilder.java", "BodyUseAPI": ["org.bukkit.inventory.meta.ItemMeta.addEnchant(org.bukkit.enchantments.Enchantment,int,boolean)"], "Fixed commit": "3bc85c088f084137556c477861b04e762192c190", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2017-01-31T14:37:22Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["odoo.controls.OSelectionField.getPos()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (position != (-1)) row = items.get(position);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1154/buggy-version/app.src.main.java.odoo.controls.OSelectionField.java", "BodyUseAPI": ["java.util.List<com.odoo.core.orm.ODataRow>.get(int)"], "Fixed commit": "6aa86cd2f93b5ad450778483c8f013d31525a0c3", "Url": "https://api.github.com/repos/mikedream89/framework", "Date": "2016-04-26T05:27:56Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mainActionView.getContext()) instanceof android.support.v7.widget.TintContextWrapper) { return ((android.app.Activity) (((android.support.v7.widget.TintContextWrapper) (mainActionView.getContext())).getBaseContext())).getWindow().getDecorView().findViewById(android.R.id.content); }else { return ((android.app.Activity) (mainActionView.getContext())).getWindow().getDecorView().findViewById(android.R.id.content); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/265/buggy-version/library.src.main.java.com.oguzdev.circularfloatingactionmenu.library.FloatingActionMenu.java", "BodyUseAPI": ["((android.app.Activity) (mainActionView.getContext())).getWindow()", "((android.app.Activity) (((android.support.v7.widget.TintContextWrapper) (mainActionView.getContext())).getBaseContext())).getWindow().getDecorView().findViewById(android.R.id.content)", "((android.app.Activity) (((android.support.v7.widget.TintContextWrapper) (mainActionView.getContext())).getBaseContext())).getWindow().getDecorView()", "((android.app.Activity) (mainActionView.getContext())).getWindow().getDecorView()", "android.view.View.getContext()", "android.view.View.getContext()", "((android.app.Activity) (((android.support.v7.widget.TintContextWrapper) (mainActionView.getContext())).getBaseContext())).getWindow()", "((android.app.Activity) (mainActionView.getContext())).getWindow().getDecorView().findViewById(android.R.id.content)", "((android.support.v7.widget.TintContextWrapper) (mainActionView.getContext())).getBaseContext()"], "Fixed commit": "c9ba1097fc3bf02930fbd0e04ef0d9749e4cdb1b", "Url": "https://api.github.com/repos/burhanrashid52/CircularFloatingActionMenu", "Date": "2016-07-29T09:40:59Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPractice) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1298/buggy-version/src.nstuff.juggerfall.extension.gamerule.PVPGameRule.java", "BodyUseAPI": [], "Fixed commit": "ff0e4bea7693381369718e8a9a32e508e8067abf", "Url": "https://api.github.com/repos/JazzyJohn/fox-server-side", "Date": "2014-11-21T09:11:30Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, Territory>.getKey()", "java.util.Map.Entry<java.lang.String, Territory>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((from.equals(\"Alaska\")) && (to.equals(\"Kamchatka\"))) { g.drawLine(fromX, fromY, 0, fromY); g.drawLine(toX, toY, 1250, toY); }else { if ((from.equals(\"Kamchatka\")) && (to.equals(\"Alaska\"))) { g.drawLine(fromX, fromY, 1250, fromY); g.drawLine(toX, toY, 0, toY); }else { g.drawLine(fromX, fromY, toX, toY); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6280/buggy-version/src.GameMap.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "67d3ded1755f1e9982b54a29dbd34c79da38a911", "Url": "https://api.github.com/repos/Agx-1/Abschlussaufgabe_PK", "Date": "2016-02-13T19:45:58Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xk.xact.inventory.InventoryUtils.simulateCraftingInventory(net.minecraft.item.ItemStack[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((matrix == null) || ((device.getWorld()) == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6507/buggy-version/src.main.java.xk.xact.api.CraftingHandler.java", "BodyUseAPI": [], "Fixed commit": "a6fb0b2256fb10d716d8c82afba92d342236238d", "Url": "https://api.github.com/repos/univrsal/XACT", "Date": "2015-09-26T18:48:06Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xk.xact.api.CraftingHandler.findAndGetRecipeIngredients(xk.xact.recipes.CraftRecipe,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (foundItemStacks == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6507/buggy-version/src.main.java.xk.xact.api.CraftingHandler.java", "BodyUseAPI": [], "Fixed commit": "a6fb0b2256fb10d716d8c82afba92d342236238d", "Url": "https://api.github.com/repos/univrsal/XACT", "Date": "2015-09-26T18:48:06Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerJoinEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((p.getInventory().getHelmet().getType()) == (org.bukkit.Material.JACK_O_LANTERN)) { java.lang.System.out.println((((bl4ckscor3.plugin.allhalloween.util.Utilities.getPrefix()) + (p.getName())) + \" already has a Jack o' Lantern on their head.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8429/buggy-version/src.bl4ckscor3.plugin.allhalloween.listener.PlayerJoinListener.java", "BodyUseAPI": ["java.io.PrintStream.println((((bl4ckscor3.plugin.allhalloween.util.Utilities.getPrefix()) + (p.getName())) + \" already has a Jack o' Lantern on their head.\"))", "org.bukkit.entity.Player.getName()"], "Fixed commit": "775e7b0a9d5a3063be5d830958bb949a7254aaee", "Url": "https://api.github.com/repos/bl4ckscor3/AllHalloween", "Date": "2015-09-08T01:00:27Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mainSearchEdit.getText().toString().equals(userQuery))) { mainSearchEdit.clearFocus(); mainSearchUser.setVisibility(View.GONE); loadingLayout.setVisibility(View.VISIBLE); searchUser(mainSearchEdit.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7296/buggy-version/app.src.main.java.io.arfirman1402.dev.githubsearchquery.view.MainActivity.java", "BodyUseAPI": ["io.arfirman1402.dev.githubsearchquery.view.MainActivity.searchUser(mainSearchEdit.getText().toString())", "android.widget.EditText.getText()", "mainSearchEdit.getText().toString()", "android.widget.EditText.clearFocus()"], "Fixed commit": "22f29f32378008b7f557a4c39f201823f6343872", "Url": "https://api.github.com/repos/arfirman1402/GithubSearchQuery", "Date": "2017-09-05T03:23:47Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getRoot().getKey().equals(key)) { return getRoot(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3464/buggy-version/freeplane_plugin_workspace.src.org.freeplane.plugin.workspace.model.WorkspaceModel.java", "BodyUseAPI": [], "Fixed commit": "4a07417b7719074e0de63f7ef5ab49e67f68a6c9", "Url": "https://api.github.com/repos/Docear/Desktop", "Date": "2013-05-13T11:24:44Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((response.code()) == 200) { showToast(\"Updated Successfully\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8788/buggy-version/app.src.main.java.com.assign.registration.RegistrationActivity.java", "BodyUseAPI": [], "Fixed commit": "19b35963d0feda5ebaa834637cab64e181103ebe", "Url": "https://api.github.com/repos/basavarajbj17/Registration", "Date": "2017-05-29T13:35:50Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["OWLDataFactory.getOWLClass(IRI.create(modStr))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (modCls.getIRI().getNamespace().equals(((OntologyConstants.CONTEXT_BASE_URI) + \"#\"))) { OWLAxiom subAx = factory.getOWLSubClassOfAxiom(domainSubCls, modCls); manager.addAxiom(domain, subAx); }else { java.lang.String modName = modCls.getIRI().getShortForm(); OWLClass modDomainCls = factory.getOWLClass(IRI.create(((domainIRI + \"#\") + modName))); OWLAxiom subAx = factory.getOWLSubClassOfAxiom(domainSubCls, modDomainCls); manager.addAxiom(domain, subAx); java.util.Set<OWLClassExpression> parentClasses = modCls.getSuperClasses(modifier); for (OWLClassExpression exp : parentClasses) { if (exp.getClassExpressionType().equals(ClassExpressionType.OWL_CLASS)) { if (exp.asOWLClass().getIRI().getNamespace().equals(((OntologyConstants.CONTEXT_BASE_URI) + \"#\"))) { OWLAxiom parentSubAxiom = factory.getOWLSubClassOfAxiom(modDomainCls, exp.asOWLClass()); manager.addAxiom(domain, parentSubAxiom); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7266/buggy-version/src.main.java.copyModifierClasses.java", "BodyUseAPI": ["modCls.getIRI().getShortForm()", "OWLDataFactory.getOWLSubClassOfAxiom(OWLClass,OWLClass)", "OWLClass.getIRI()", "OWLClass.getSuperClasses(OWLOntology)", "exp.asOWLClass().getIRI().getNamespace().equals(((OntologyConstants.CONTEXT_BASE_URI) + \"#\"))"], "Fixed commit": "be5efe3e73ab186bebf828658cd8fe54abfbd75c", "Url": "https://api.github.com/repos/Blulab-Utah/knowledgeAuthor", "Date": "2016-10-10T21:19:08Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((readVirtualMemory((argv + (4 * i)), addr)) == 4) { int t = 0; for (int j = 0; j < 4; ++j) { t += ((int) (addr[j])) << ((3 - j) * 8); } args[i] = readVirtualMemoryString(t, nachos.userprog.UserProcess.maxlen); }else { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6303/buggy-version/proj2.src.nachos.userprog.UserProcess.java", "BodyUseAPI": [], "Fixed commit": "611e4c11e98ac87abdce3056a526de0bb24d7d8a", "Url": "https://api.github.com/repos/apwan06/OSProject", "Date": "2015-05-05T12:41:32Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mWord.getAudioSamples().size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (audioCount == 1) { mSoundPool = com.waverunner.wordrunner.Tools.getSoundPool(1); mSoundId = mSoundPool.load(mWord.getAudioSamples().get(0).getFile().getAbsolutePath(), 1); }else mSoundId = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/396/buggy-version/app.src.main.java.com.waverunner.wordrunner.ShowDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "74b46f0cf58cb8441f77070696370d24105c555f", "Url": "https://api.github.com/repos/MichaelKazarian/WordRunner", "Date": "2017-11-06T18:44:34Z"},
{"Line": "=>2861", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["colortextile_form.Add_new_design.add_this_colorway(java.lang.String,float,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (colorway_id6 != (-1)) { add_this_colorway_screen(name24.getSelectedItem().toString(), percentage24.getText(), colorway_id6); add_this_colorway_screen(name25.getSelectedItem().toString(), percentage25.getText(), colorway_id6); add_this_colorway_screen(name26.getSelectedItem().toString(), percentage26.getText(), colorway_id6); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3473/buggy-version/src.colortextile_form.Add_new_design.java", "BodyUseAPI": ["colortextile_form.Add_new_design.add_this_colorway_screen(java.lang.String,java.lang.String,int)", "colortextile_form.Add_new_design.add_this_colorway_screen(java.lang.String,java.lang.String,int)", "colortextile_form.Add_new_design.add_this_colorway_screen(java.lang.String,java.lang.String,int)"], "Fixed commit": "aa6b8e6ab9e5e793a7af91419fd3c51e1743b041", "Url": "https://api.github.com/repos/dridge737/Color-Textile", "Date": "2015-04-21T08:27:06Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((jenkinsNamespace) != null) && (!(jenkinsNamespace.isEmpty()))) { jenkinsNS = jenkinsNamespace; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5998/buggy-version/src.main.java.io.fabric8.jenkins.openshiftsync.BuildDecisionHandler.java", "BodyUseAPI": [], "Fixed commit": "89d5f8d94722fbbcd7b31a06ed37d9c4dece34ea", "Url": "https://api.github.com/repos/fabric8io/jenkins-sync-plugin", "Date": "2017-08-15T08:27:37Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (railo.commons.lang.StringUtil.isEmpty(charset)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6326/buggy-version/railo-java.railo-core.src.railo.runtime.tag.FileTag.java", "BodyUseAPI": [], "Fixed commit": "93527c075e7848ec51942dbe3dcec6a64156d2d9", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-11-29T15:20:54Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showNotification) { menu.findItem(R.id.pause).setTitle(R.string.pause); }else { menu.findItem(R.id.pause).setTitle(R.string.unpause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5572/buggy-version/app.src.main.java.arbitraryturtle.whattodo.MyActivity.java", "BodyUseAPI": [], "Fixed commit": "c65efa7205b89e1d97e774b52e6d024277929e0a", "Url": "https://api.github.com/repos/PatrickDuncan/what_to_do", "Date": "2015-09-14T23:11:48Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (overlap > 0) sizeToAllocate -= overlap;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6813/buggy-version/src.main.java.org.ethereum.vm.Program.java", "BodyUseAPI": [], "Fixed commit": "8e79216d38ebd2004e2c14eeb5273d22eabac0d9", "Url": "https://api.github.com/repos/ethereum/ethereumj", "Date": "2014-07-11T18:59:38Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (boundary != null) { this.multipartBoundary = boundary; setMultipart(true); }else { this.multipartBoundary = org.restlet.ext.html.FormDataSet.DEFAULT_BOUNDARY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/460/buggy-version/modules.org.restlet.ext.html.src.org.restlet.ext.html.FormDataSet.java", "BodyUseAPI": [], "Fixed commit": "3255e2a40ecfd89356ea60765eca4424daab63be", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2014-01-07T16:32:48Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.multipart) && ((getMultipartBoundary()) == null)) { this.multipartBoundary = org.restlet.ext.html.FormDataSet.DEFAULT_BOUNDARY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/460/buggy-version/modules.org.restlet.ext.html.src.org.restlet.ext.html.FormDataSet.java", "BodyUseAPI": [], "Fixed commit": "3255e2a40ecfd89356ea60765eca4424daab63be", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2014-01-07T16:32:48Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mSession)) { if (null != (getActivity())) { im.vector.activity.CommonActivityUtils.logout(getActivity()); } return defaultView; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7657/buggy-version/vector.src.main.java.im.vector.fragments.VectorRecentsListFragment.java", "BodyUseAPI": [], "Fixed commit": "801d79c23bc8ab22bc87e6a1a413ef5651cfded7", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-07-18T16:04:10Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.wso2.iot.agent.services.location.LocationService.location) == null) { java.util.List<java.lang.String> providers = locationManager.getProviders(true); for (java.lang.String p : providers) { org.wso2.iot.agent.services.location.LocationService.location = locationManager.getLastKnownLocation(p); if ((org.wso2.iot.agent.services.location.LocationService.location) != null) { break; }else if (org.wso2.iot.agent.utils.Constants.DEBUG_MODE_ENABLED) { android.util.Log.d(org.wso2.iot.agent.services.location.LocationService.TAG, (\"No last known location for provider \" + p)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6058/buggy-version/client.client.src.main.java.org.wso2.iot.agent.services.location.LocationService.java", "BodyUseAPI": [], "Fixed commit": "5c31e6f5dd37c724c64744d010cb5f4394b56010", "Url": "https://api.github.com/repos/pasindujw/cdmf-agent-android", "Date": "2017-04-20T05:44:45Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (last.project.javaforeveryone.utility.Utils.isValidEmail(currentUserModel.getEmail())) { emailNavDrawer.setText(getResources().getString(R.string.unverified_mail)); }else { emailNavDrawer.setText(currentUserModel.getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5320/buggy-version/JavaForEveryone.app.src.main.java.last.project.javaforeveryone.controller.HomeActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(currentUserModel.getEmail())", "last.project.javaforeveryone.model.UserModel.getEmail()"], "Fixed commit": "38cca96a7930432a3e64373b9b0d78c4205c1ca3", "Url": "https://api.github.com/repos/ValeriJordanov/JavaForEveryone2", "Date": "2017-11-05T18:39:24Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mWaitingToPick)) { com.mobilesolutionworks.android.cropkit.HighlightView hv = createDefaultHighlight(); _add(hv); }else { for (com.mobilesolutionworks.android.cropkit.HighlightView hv : views) { _add(hv); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8534/buggy-version/library.src.cropkit.java.com.mobilesolutionworks.android.cropkit.CropImageView.java", "BodyUseAPI": [], "Fixed commit": "14e71fd5ef186a4d56e1eedd52090f822fe9c5dd", "Url": "https://api.github.com/repos/yunarta/works-cropkit-android", "Date": "2015-12-21T03:57:57Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((builder) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4791/buggy-version/src.main.java.org.elasticsearch.river.arangodb.es.EsBulk.java", "BodyUseAPI": [], "Fixed commit": "070da0d01d25e055924e7946a8b2606e9c56844c", "Url": "https://api.github.com/repos/arangodb/elasticsearch-river-arangodb", "Date": "2015-02-03T14:09:27Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((line.length()) > 0) line.append(\"\\\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3858/buggy-version/src.main.java.townofwinchester.CLO.java", "BodyUseAPI": [], "Fixed commit": "4dbc8f45bd65d6f167eff691527c1e510595fd66", "Url": "https://api.github.com/repos/2016-2017-wps-apcs-f/townofwinchester", "Date": "2017-06-07T12:13:36Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((word.equals(\".\")) || (word.equals(\",\"))) { type = CheckedWord.Type.PUNCTUATION; }else if (hasNumber(word)) { type = CheckedWord.Type.NUMBER; }else { type = CheckedWord.Type.WORD; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3407/buggy-version/app.models.Spellcheck.java", "BodyUseAPI": ["models.Spellcheck.hasNumber(java.lang.String)"], "Fixed commit": "279d38165efbbb33b869e4f4793d1a0df6be438e", "Url": "https://api.github.com/repos/olafurw/Icelandic-Spellchecker", "Date": "2011-04-13T17:16:06Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resourceName.endsWith(\".class\")) { resourceName = resourceName.substring(0, ((resourceName.length()) - (\".class\".length()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/170/buggy-version/src.main.java.org.phidias.compile.BundleJavaManager.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "37cb2515046a1c8d8476180028a6951dad627fd9", "Url": "https://api.github.com/repos/rotty3000/phidias", "Date": "2015-12-04T17:50:41Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input) instanceof java.lang.Boolean) { serializer.writeBooleanValue(input); }else if ((input) instanceof java.lang.Number) { serializer.writeNumberValue(input); }else { serializer.writeStringValue(input); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6038/buggy-version/src.main.java.com.marklogic.client.impl.DocumentPatchBuilderImpl.java", "BodyUseAPI": [], "Fixed commit": "34e537d1a69393757a2f5f537e8215b2a655704a", "Url": "https://api.github.com/repos/marklogic/java-client-api", "Date": "2015-04-29T23:59:04Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (input != null) { inputAsString = (input instanceof java.lang.String) ? ((java.lang.String) (input)) : input.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6038/buggy-version/src.main.java.com.marklogic.client.impl.DocumentPatchBuilderImpl.java", "BodyUseAPI": [], "Fixed commit": "34e537d1a69393757a2f5f537e8215b2a655704a", "Url": "https://api.github.com/repos/marklogic/java-client-api", "Date": "2015-04-29T23:59:04Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (winner[1].equals(\"DEALER\")) { winnername = \"The winner is Dealer\"; }else { winnername = (((\"The winner is \" + (winner[1])) + \" \") + (winner[2])) + \"!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6974/buggy-version/src.com.company.client.Client.java", "BodyUseAPI": [], "Fixed commit": "493e5e507ab2cf366d88e0fd292da5063441eb5e", "Url": "https://api.github.com/repos/Johca/BlackJack", "Date": "2016-03-30T19:02:12Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((betterTitle.length()) > 0) { return (betterTitle.substring(0, 1).toUpperCase()) + (betterTitle.substring(1)); }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1996/buggy-version/src.main.java.fr.dudie.keolis.model.LineAlert.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "b83825bc8f8ebe262ce53511c49077e689300d4e", "Url": "https://api.github.com/repos/kops/rennes-data-api", "Date": "2012-05-25T17:58:59Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.mcgill.cs.crown.procedure.GroupExtractor.getMostSimilar(java.util.Set<ca.mcgill.cs.crown.procedure.ISynset>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bestAndScore == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8820/buggy-version/src.main.java.ca.mcgill.cs.crown.procedure.GroupExtractor.java", "BodyUseAPI": [], "Fixed commit": "bfaceba2f79a79e841f7902643c3ac81259765c5", "Url": "https://api.github.com/repos/davidjurgens/crown", "Date": "2015-06-01T15:28:40Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tblSysUser.getValue()) != null) { if (((int) (tblSysUser.getValue())) > 0) dbIdOfItemsToDelete.add(((int) (tblSysUser.getValue()))); tblSysUser.removeItem(((int) (tblSysUser.getValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5051/buggy-version/src.main.java.com.bringit.experiment.ui.form.SysUserConfigForm.java", "BodyUseAPI": ["com.bringit.experiment.ui.form.SysUserConfigForm.getValue()", "com.bringit.experiment.ui.form.SysUserConfigForm.getValue()", "com.bringit.experiment.ui.form.SysUserConfigForm.removeItem(((int) (tblSysUser.getValue())))", "java.util.List<java.lang.Integer>.add(((int) (tblSysUser.getValue())))", "com.bringit.experiment.ui.form.SysUserConfigForm.getValue()"], "Fixed commit": "d63f994d59561a7e379aa01290c999d120e040ba", "Url": "https://api.github.com/repos/bringitps/ExperimentDesigner", "Date": "2017-04-07T15:48:53Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.pepsoft.worldpainter.layers.exporters.WPObjectExporter.logger.isTraceEnabled()) { org.pepsoft.worldpainter.layers.exporters.WPObjectExporter.logger.trace(((((((((((\"No room for object \" + (object.getName())) + \" @ \") + x) + \",\") + y) + \",\") + z) + \" with placement \") + placement) + \" because it is entirely below the bedrock\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7825/buggy-version/WorldPainter.WPCore.src.main.java.org.pepsoft.worldpainter.layers.exporters.WPObjectExporter.java", "BodyUseAPI": ["org.slf4j.Logger.trace(((((((((((\"No room for object \" + (object.getName())) + \" @ \") + x) + \",\") + y) + \",\") + z) + \" with placement \") + placement) + \" because it is entirely below the bedrock\"))"], "Fixed commit": "f492cdf5180df862ed313a181c8f0eb9e6e8a576", "Url": "https://api.github.com/repos/frogocomics/WorldPainter", "Date": "2015-09-02T17:05:44Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getChatCount()) == 0) { myUser.setUserName(currentInput); result = (\"Good name \" + (myUser.getUserName())) + \" how old are you?\"; }else if ((getChatCount()) == 1) { int userAge = java.lang.Integer.parseInt(currentInput); myUser.setAge(userAge); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4776/buggy-version/src.chatbot.model.Chatbot.java", "BodyUseAPI": [], "Fixed commit": "08982a272120dcba3a82d5994302390e1c554972", "Url": "https://api.github.com/repos/zaconder/ChatBot", "Date": "2014-11-11T20:07:41Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.Qball.Wild.Wild.retries) != 0) { me.Qball.Wild.Wild.Random(target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4089/buggy-version/src.me.Qball.Wild.Utils.TeleportTar.java", "BodyUseAPI": [], "Fixed commit": "0e2f1c1863fd24ab9b3fe074b5dc894e07ecffe8", "Url": "https://api.github.com/repos/Qballl/WildernessTp", "Date": "2016-05-02T14:24:15Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.massivecraft.factions.entity.BoardColl.get().getFactionAt(me.Qball.Wild.Utils.PS.valueOf(loc))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(faction.isNone())) { if ((me.Qball.Wild.Wild.retries) != 0) { me.Qball.Wild.Wild.Random(target); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4089/buggy-version/src.me.Qball.Wild.Utils.TeleportTar.java", "BodyUseAPI": [], "Fixed commit": "0e2f1c1863fd24ab9b3fe074b5dc894e07ecffe8", "Url": "https://api.github.com/repos/Qballl/WildernessTp", "Date": "2016-05-02T14:24:15Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isUsingMoney()) sender.sendMessage((((org.bukkit.ChatColor.GOLD) + \" * \") + (net.mysticrealms.fireworks.scavengerhunt.ScavengerHunt.economy.format(money))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/952/buggy-version/src.net.mysticrealms.fireworks.scavengerhunt.ScavengerHunt.java", "BodyUseAPI": [], "Fixed commit": "b00eaa79fa124620adad257a777d1ceeff2e4f19", "Url": "https://api.github.com/repos/Fireworks/ScavengerHunt", "Date": "2012-04-02T03:42:53Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (to == (subs.size())) { to -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1472/buggy-version/app.src.main.java.me.ccrama.redditslide.DragSort.ReorderSubreddits.java", "BodyUseAPI": [], "Fixed commit": "bb9cf38c8c1d17c062e51aef67cca86769f5445a", "Url": "https://api.github.com/repos/ccrama/Slide", "Date": "2016-10-03T18:47:45Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ingot) == null) { net.minecraft.item.ItemStack ingot = new net.minecraft.item.ItemStack(getPoorOre().getBaseBlock().getItemDropped(getPoorOre().getBaseBlockMeta(), new java.util.Random(), 0), 1, getMeta()); net.minecraft.item.ItemStack block = new net.minecraft.item.ItemStack(getPoorOre().getBaseBlock(), 1, getMeta()); if (ingot.isItemEqual(block)) { this.ingot = net.minecraft.item.crafting.FurnaceRecipes.smelting().getSmeltingResult(block); }else { this.ingot = ingot; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1374/buggy-version/src.main.java.net.xexanos.poorores.Nugget.java", "BodyUseAPI": [], "Fixed commit": "f9b75bacdf3b1b67616118b4e41bbb95a60dc351", "Url": "https://api.github.com/repos/Xexanos/PoorOres", "Date": "2015-02-13T01:22:21Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((yy_playing_msg_dlg) != null) { yy_playing_msg_dlg.hide(); yy_playing_msg_dlg = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8904/buggy-version/src.com.yy2039.answermachine.AnswerMachineActivity.java", "BodyUseAPI": [], "Fixed commit": "a875c58dbdac7cc4fc549fb10f626bc82b6127c4", "Url": "https://api.github.com/repos/PATHouC/AM", "Date": "2016-07-05T14:29:10Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (containsIgnoreCase(contentType, \"json\")) return s;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7255/buggy-version/src.main.java.com.github.bingoohuang.springrestclient.utils.RestLog.java", "BodyUseAPI": [], "Fixed commit": "b0a49789a742c6221f4170a3e9631716e16a698d", "Url": "https://api.github.com/repos/bingoohuang/spring-rest-client", "Date": "2015-11-24T08:21:11Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.appwidget.AppWidgetManager.getAppWidgetInfo(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((context == null) || (widgetProviderInfo == null)) { android.widget.Toast.makeText(context, ((context.getResources().getString(R.string.invalid_provider_info)) + widgetProviderInfo), Toast.LENGTH_LONG); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3654/buggy-version/ContactsWidgetICS.src.com.gmail.yuyang226.contactswidget.ContactsWidgetProvider.java", "BodyUseAPI": ["android.content.Context.getResources()", "android.widget.Toast.makeText(android.content.Context,((context.getResources().getString(R.string.invalid_provider_info)) + widgetProviderInfo),Toast.LENGTH_LONG)", "context.getResources().getString(R.string.invalid_provider_info)"], "Fixed commit": "d40a2fd21624e1375c9d9bd61b3abbeb19baaff0", "Url": "https://api.github.com/repos/yuyang226/ContactsWidgetICS", "Date": "2012-03-06T11:47:34Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((posX + i) >= (WIDTH)) { maxX = i - 1; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4876/buggy-version/MyGame.core.src.com.buzbuz.mygame.maps.MapGenerator.java", "BodyUseAPI": [], "Fixed commit": "f535c168ef7dcd03e08c8a9e296605e3431e5730", "Url": "https://api.github.com/repos/Nain57/FirstGame", "Date": "2014-09-28T20:20:25Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((x + roomSize) > (WIDTH)) || ((y + roomSize) > (HEIGHT))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4876/buggy-version/MyGame.core.src.com.buzbuz.mygame.maps.MapGenerator.java", "BodyUseAPI": [], "Fixed commit": "f535c168ef7dcd03e08c8a9e296605e3431e5730", "Url": "https://api.github.com/repos/Nain57/FirstGame", "Date": "2014-09-28T20:20:25Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((posY + i) >= (HEIGHT)) { maxY = i - 1; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4876/buggy-version/MyGame.core.src.com.buzbuz.mygame.maps.MapGenerator.java", "BodyUseAPI": [], "Fixed commit": "f535c168ef7dcd03e08c8a9e296605e3431e5730", "Url": "https://api.github.com/repos/Nain57/FirstGame", "Date": "2014-09-28T20:20:25Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.compiler.java.runtime.metamodel.Reflection.getDeclaredGetter(java.lang.Class<?>,com.redhat.ceylon.compiler.java.codegen.Naming.getGetterName(declaration))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (declaredGetter != null) { return declaredGetter.getAnnotations(); }else { return new java.lang.annotation.Annotation[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1137/buggy-version/runtime.com.redhat.ceylon.compiler.java.runtime.metamodel.FreeValue.java", "BodyUseAPI": ["java.lang.reflect.Method.getAnnotations()"], "Fixed commit": "8eeac4053a6e47f65ba7f957fc01fcc46917167a", "Url": "https://api.github.com/repos/ceylon/ceylon.language", "Date": "2015-01-06T11:57:34Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.azvk.mvp_1.Fragments.RecycleViewFragment.isGetButtonClicked) { com.example.azvk.mvp_1.Fragments.RecycleViewFragment.presenter = new com.example.azvk.mvp_1.MyPresenter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3647/buggy-version/app.src.main.java.com.example.azvk.mvp_1.Fragments.RecycleViewFragment.java", "BodyUseAPI": [], "Fixed commit": "77ab2bcc37363f5d72fd5e2d3cdfce5aeeca45e2", "Url": "https://api.github.com/repos/AlexRedchets/MVP_1", "Date": "2016-07-22T15:09:30Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getDefaultImplementationOf(defaultImplementation).equals(interfaceTypeElement))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5014/buggy-version/src.main.java.org.rapla.inject.generator.internal.DaggerModuleCreator.java", "BodyUseAPI": [], "Fixed commit": "14ac4258a33f3382c912ceb1ae3fd2a50113cc61", "Url": "https://api.github.com/repos/rapla/restinject", "Date": "2015-11-06T09:19:36Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.client) != null) this.client.afficher(texte);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3941/buggy-version/Hanhu.src.utilisateur.Utilisateur.java", "BodyUseAPI": [], "Fixed commit": "b8add9cd5a5389e22ace6dc6fee5c1a4bece5181", "Url": "https://api.github.com/repos/PierrickBrun/Hanhu", "Date": "2015-05-05T11:39:01Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.World.getBlockAt(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((b.getType()) == (org.bukkit.Material.WOOL)) { org.bukkit.material.Wool wool = ((org.bukkit.material.Wool) (b.getState().getData())); if ((wool.getColor()) != color) { blocks.add(b); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3909/buggy-version/src.colormatch.arena.structure.GameLevel.java", "BodyUseAPI": ["org.bukkit.block.Block.getState()", "java.util.LinkedList<org.bukkit.block.Block>.add(org.bukkit.block.Block)", "b.getState().getData()"], "Fixed commit": "8a100b7bb29d50441a073487be66cc54f5da3f19", "Url": "https://api.github.com/repos/Shevchik/ColorMatch", "Date": "2014-05-12T21:28:10Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(children[1].hasNext())) { if (children[0].hasNext()) { children[1].rewind(); t1 = children[0].next(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2101/buggy-version/mysimpledb.src.java.simpledb.Join.java", "BodyUseAPI": ["children[1].rewind()", "children[0].hasNext()", "children[0].next()"], "Fixed commit": "fc114007972d82726ef4ecd03a79022bde1bfefa", "Url": "https://api.github.com/repos/mikelese/cosc460", "Date": "2014-09-29T05:40:25Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (connClassName.equalsIgnoreCase(DBConnector_MySQL.class.getName())) return DBConnector_MySQL.class;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5290/buggy-version/InfoCrawlers.src.CrawlerConfig.java", "BodyUseAPI": [], "Fixed commit": "57c127acfd9cca356523685427d53259f93304bf", "Url": "https://api.github.com/repos/clembanas/EventViz-15", "Date": "2015-06-05T07:29:59Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (connClassName.equalsIgnoreCase(DBConnector_Impala.class.getName())) return DBConnector_Impala.class;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5290/buggy-version/InfoCrawlers.src.CrawlerConfig.java", "BodyUseAPI": [], "Fixed commit": "57c127acfd9cca356523685427d53259f93304bf", "Url": "https://api.github.com/repos/clembanas/EventViz-15", "Date": "2015-06-05T07:29:59Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(contains(prefix))) return new java.util.ArrayList<java.lang.String>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3255/buggy-version/main.src.main.java.trie.TrieImpl.java", "BodyUseAPI": [], "Fixed commit": "27ced8d4dc5ab732ae6868a6c30356ae77fde990", "Url": "https://api.github.com/repos/ysrbdlgn/Trie-Example", "Date": "2017-07-04T20:16:09Z"},
{"Line": "=>1055", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2943/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "01615268499238ae0fd23f0b1bdd1457bb4779cb", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(isSelfCheckout)) { if ((circForm.getPatronDocument()) != null) { circForm.getPatronDocument().setCheckoutForSelf(java.lang.Boolean.valueOf(isSelfCheckout)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5612/buggy-version/ole-app.olefs.src.main.java.org.kuali.ole.deliver.controller.checkout.CheckoutPatronController.java", "BodyUseAPI": ["circForm.getPatronDocument().setCheckoutForSelf(java.lang.Boolean)", "java.lang.Boolean.valueOf(java.lang.String)"], "Fixed commit": "ab3980092d39e9dac82267ffff5cc6148e00f641", "Url": "https://api.github.com/repos/hemalathaselvaraj/ole", "Date": "2016-02-23T11:17:52Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang.ArrayUtils.isEmpty(spec.getNodeGroups()))) { spec.setSpecFile(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6698/buggy-version/server.cluster-mgmt.src.main.java.com.vmware.bdd.specpolicy.ClusterSpecFactory.java", "BodyUseAPI": ["com.vmware.bdd.apitypes.ClusterCreate.setSpecFile(boolean)"], "Fixed commit": "f9cd3686e3c91812a12706753bb94a1e7f64b048", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2015-04-01T10:39:54Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((methodRequestMapping.value().length) > 0) { requestURL = methodRequestMapping.value()[0]; }else if ((methodRequestMapping.path().length) > 0) { requestURL = methodRequestMapping.path()[0]; }else { requestURL = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5654/buggy-version/apm-sniffer.apm-sdk-plugin.spring-plugins.mvc-annotation-4.x-plugin.src.main.java.org.skywalking.apm.plugin.spring.mvc.ControllerServiceMethodInterceptor.java", "BodyUseAPI": ["org.springframework.web.bind.annotation.RequestMapping.value()", "org.springframework.web.bind.annotation.RequestMapping.path()", "org.springframework.web.bind.annotation.RequestMapping.path()"], "Fixed commit": "8968db0346fe1194a7f2286652a3dd3cc68ae89a", "Url": "https://api.github.com/repos/nutzam/sky-walking", "Date": "2017-09-25T07:45:11Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.redpois0n.gscrot.Config.CONFIG.size()) == 0) { com.redpois0n.gscrot.Config.loadDefaults(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7543/buggy-version/src.com.redpois0n.gscrot.Config.java", "BodyUseAPI": [], "Fixed commit": "1deb149821237811cfba9711bfa9a6823ccb8068", "Url": "https://api.github.com/repos/gscrot/gscrot", "Date": "2015-05-05T19:28:08Z"},
{"Line": "=>801", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4869/buggy-version/wifi.java.android.net.wifi.WifiConfigStore.java", "BodyUseAPI": [], "Fixed commit": "6763aa2cb2a84285a8438b28e5ba38dcba9950c2", "Url": "https://api.github.com/repos/CyanogenMod/android_frameworks_base", "Date": "2012-06-10T09:48:07Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(path.exists())) { createDirAction = org.controlsfx.dialog.Dialogs.create().title(\"Directory does not exist.\").message(\"Create this directory?\").showConfirm(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6350/buggy-version/peerbox.src.main.java.org.peerbox.presenter.SelectRootPathController.java", "BodyUseAPI": [], "Fixed commit": "52171e164f42ddc3de596f38079f943f77bad5c9", "Url": "https://api.github.com/repos/Hive2Hive/PeerBox", "Date": "2014-07-16T13:19:36Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isServer()) { setupApplicationInstanceId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/539/buggy-version/astrix-spring.src.main.java.com.avanza.astrix.spring.AstrixFrameworkBean.java", "BodyUseAPI": [], "Fixed commit": "aed748aaf65633232ece425efc010172f9e8a649", "Url": "https://api.github.com/repos/AvanzaBank/astrix", "Date": "2015-08-06T09:06:51Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((trashDoc.hash) == null) { trashDoc.hash = net.xngo.fileshub.Utils.getHash(file); }else { if (trashDoc.hash.isEmpty()) trashDoc.hash = net.xngo.fileshub.Utils.getHash(file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2748/buggy-version/FilesHub.src.net.xngo.fileshub.upgrade.Version0002.java", "BodyUseAPI": ["trashDoc.hash.isEmpty()"], "Fixed commit": "dd1a1949c4498ba2de7ae7532f05a52b2173e982", "Url": "https://api.github.com/repos/xuanngo/FilesHub", "Date": "2014-11-17T14:09:17Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((shelfDoc.hash) == null) { shelfDoc.hash = net.xngo.fileshub.Utils.getHash(file); }else { if (shelfDoc.hash.isEmpty()) shelfDoc.hash = net.xngo.fileshub.Utils.getHash(file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2748/buggy-version/FilesHub.src.net.xngo.fileshub.upgrade.Version0002.java", "BodyUseAPI": ["shelfDoc.hash.isEmpty()"], "Fixed commit": "dd1a1949c4498ba2de7ae7532f05a52b2173e982", "Url": "https://api.github.com/repos/xuanngo/FilesHub", "Date": "2014-11-17T14:09:17Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["no.priv.garshol.duke.genetic.GeneticAlgorithm.Filter.getNext()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (pair == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1542/buggy-version/src.main.java.no.priv.garshol.duke.genetic.GeneticAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "d3468521055fa55f16b7dc91bcb19128b3f8edee", "Url": "https://api.github.com/repos/larsga/Duke", "Date": "2014-05-22T20:23:49Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exemplars.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1542/buggy-version/src.main.java.no.priv.garshol.duke.genetic.GeneticAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "d3468521055fa55f16b7dc91bcb19128b3f8edee", "Url": "https://api.github.com/repos/larsga/Duke", "Date": "2014-05-22T20:23:49Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((drtRequest.getFromLink()) == (drtRequest.getToLink())) { throw new java.lang.IllegalArgumentException(\"fromLink and toLink must be different\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8223/buggy-version/playgrounds.michalm.src.main.java.playground.michalm.drt.optimizer.AbstractDrtOptimizer.java", "BodyUseAPI": [], "Fixed commit": "7a4606dac7193d07dfa2fbc9e84d640262dbefdd", "Url": "https://api.github.com/repos/matsim-org/matsim", "Date": "2017-03-24T14:04:07Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").toLowerCase().contains(\"mac\")) { java.lang.System.setProperty(\"java.awt.headless\", \"true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2293/buggy-version/src.silvertiger.tutorial.lwjgl.Main.java", "BodyUseAPI": [], "Fixed commit": "4dc6b92853884c49c545189c9b4a1cbed781513e", "Url": "https://api.github.com/repos/defconx/lwjgl3-tutorial", "Date": "2016-06-06T21:06:07Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((javassist.Modifier.isStatic(field.getModifiers())) == false) && ((javassist.Modifier.isFinal(field.getModifiers())) == false)) { fields.add(field); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2752/buggy-version/src.main.java.de.terrestris.shogun.dao.DatabaseDao.java", "BodyUseAPI": ["java.util.List<java.lang.reflect.Field>.add(java.lang.reflect.Field)"], "Fixed commit": "e13a66f54be513acd7c811bbd754363cfc2780b7", "Url": "https://api.github.com/repos/marcjansen/shogun", "Date": "2013-08-05T06:56:39Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cards.size()) > 0) { for (java.util.Iterator iterator = cards.iterator(); iterator.hasNext();) { CreditCard creditCard = ((CreditCard) (iterator.next())); if (creditCard.getCardNumber().equals(cardNumber)) { return creditCard; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/137/buggy-version/src.CardList.java", "BodyUseAPI": ["java.util.List.iterator()"], "Fixed commit": "741c668fd9407101a8cfd994f3cd9223e7a6ad75", "Url": "https://api.github.com/repos/neemashakya/ICS372", "Date": "2017-06-25T08:38:24Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((addresses.size()) > 1) connectionFactoryBuilder.setFailureMode(FailureMode.Redistribute); else connectionFactoryBuilder.setFailureMode(FailureMode.Retry);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/732/buggy-version/core.src.main.java.nl.nn.adapterframework.http.RestEtagMemcached.java", "BodyUseAPI": [], "Fixed commit": "6227b1562430ed669d7085cf33b441fee3d4da19", "Url": "https://api.github.com/repos/gvanbrakel/iaf", "Date": "2017-08-09T10:12:50Z"},
{"Line": "=>1275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mightContainUpdates) { removeBeansFromAddedData(new java.util.HashSet<org.jowidgets.cap.ui.api.bean.IBeanProxy<BEAN_TYPE>>(selectedBeans), newSelection, beans); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8224/buggy-version/modules.core.org.jowidgets.cap.ui.src.main.java.org.jowidgets.cap.ui.impl.BeanTableModelImpl.java", "BodyUseAPI": [], "Fixed commit": "78516c1b875b5947ca3b271f4d5a42875df27189", "Url": "https://api.github.com/repos/jo-source/jo-client-platform", "Date": "2016-09-20T15:43:01Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDeframerScheduledToCloseImmediately()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2512/buggy-version/core.src.main.java.io.grpc.internal.AbstractStream2.java", "BodyUseAPI": [], "Fixed commit": "615946d678a5e5d8b8146fb435b8be42597dd100", "Url": "https://api.github.com/repos/ericgribkoff/grpc-java", "Date": "2017-04-30T01:06:14Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastLocation) != null) { float zoomLevel = ((float) (16.0)); googleMap.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(lastLocation, zoomLevel)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3363/buggy-version/app.src.main.java.com.example.matant.gpsportclient.Controllers.Fragments.GoogleMapFragmentController.java", "BodyUseAPI": [], "Fixed commit": "dc782ef89b0c5380d1a73bc211733ff790ef7449", "Url": "https://api.github.com/repos/MatanTubul/GPSportClient", "Date": "2015-12-26T14:43:33Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (formatFile.isEmpty()) { try { com.stealthyone.mcb.stbukkitlib.lib.utils.FileUtils.copyFileFromJar(plugin, \"chatFormats.yml\"); } catch (java.io.IOException ex) { ex.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8647/buggy-version/src.main.java.com.stealthyone.mcb.chatomizer.backend.formats.FormatManager.java", "BodyUseAPI": [], "Fixed commit": "29015622ead365021084bdb5f9a88a73addddeb9", "Url": "https://api.github.com/repos/Stealth2800/Chatomizer", "Date": "2013-12-15T07:54:30Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestCode == (org.catrobat.catroid.stage.PreStageActivity.REQUEST_RESOURCES_INIT)) && (resultCode == (RESULT_OK))) { if ((org.catrobat.catroid.ProjectManager.getInstance().getCurrentProject().isCastProject()) && (!(org.catrobat.catroid.cast.CastManager.getInstance().isConnected()))) { org.catrobat.catroid.cast.CastManager.getInstance().openCastSelectDeviceDialog(this); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2276/buggy-version/catroid.src.org.catrobat.catroid.ui.ScriptActivity.java", "BodyUseAPI": [], "Fixed commit": "508243b77c7cc1d3f5634a9392166ccfc7d34846", "Url": "https://api.github.com/repos/catroid-chromecast/Catroid", "Date": "2015-09-25T10:08:33Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.viktorsandstrom.myvicinity.database.model.Location>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((location.title) == null) || (location.title.equals(\"\"))) { holder.title.setVisibility(View.GONE); }else { holder.title.setText(location.title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7326/buggy-version/app.src.main.java.com.viktorsandstrom.myvicinity.adapter.ListLocationsAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(location.title)"], "Fixed commit": "424d1f3ca303bc42999457f54402a15c1e09cff4", "Url": "https://api.github.com/repos/viktorsandstrom/myvicinity", "Date": "2016-09-06T21:51:56Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((apiLevel) >= 21) { try { android.content.pm.PackageManager packageManager = context.getPackageManager(); android.content.pm.ApplicationInfo applicationInfo = packageManager.getApplicationInfo(context.getPackageName(), 0); android.app.AppOpsManager appOpsManager = ((android.app.AppOpsManager) (context.getSystemService(Context.APP_OPS_SERVICE))); int mode = appOpsManager.checkOpNoThrow(AppOpsManager.OPSTR_GET_USAGE_STATS, applicationInfo.uid, applicationInfo.packageName); return mode == (android.app.AppOpsManager.MODE_ALLOWED); } catch (android.content.pm.PackageManager e) { return false; } }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/9161/buggy-version/sensorlisteners.src.main.java.edu.umd.fcmd.sensorlisteners.listener.applications.TimedApplicationTask.java", "BodyUseAPI": [], "Fixed commit": "5082fc35eb61809456d2c9d0c79bbef037749ff2", "Url": "https://api.github.com/repos/FraunhoferCESE/madcap", "Date": "2016-11-23T20:46:38Z"},
{"Line": "=>444", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isCreateMode)) isEditMode = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/730/buggy-version/src.convoy.gui.AddVehiclePopUp.java", "BodyUseAPI": [], "Fixed commit": "550b4bb4e5f3c91dae858a6ac226760353fb08f9", "Url": "https://api.github.com/repos/oakes121/ConvoyQuick", "Date": "2014-04-07T15:29:11Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.va.isaac.interfaces.config.IsaacAppConfigI.getUuidForString(getWorkflowPromotionPathUuid())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (temp == null) { return IsaacMetadataAuxiliaryBinding.MASTER.getPrimodialUuid(); }else { return temp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2720/buggy-version/app.src.main.java.gov.va.isaac.config.IsaacAppConfigWrapper.java", "BodyUseAPI": [], "Fixed commit": "07323f9c93387ec2a53ed089e72a3b239fa8f4ff", "Url": "https://api.github.com/repos/Apelon-VA/va-isaac-gui", "Date": "2015-05-08T16:43:49Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isEmpty(role))) { users_with_role = new java.util.ArrayList<java.lang.String>(); my_roles.add(role); if (role_list.containsKey(role)) users_with_role = role_list.get(role); users_with_role.add(user); role_list.put(role, users_with_role); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7569/buggy-version/src.main.java.com.googlecode.fascinator.roles.internal.InternalRoles.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.List<java.lang.String>>.put(java.lang.String,java.util.List<java.lang.String>)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.Map<java.lang.String, java.util.List<java.lang.String>>.containsKey(java.lang.String)"], "Fixed commit": "5f75f802a92ef907acf030692d462aec4b4d3aae", "Url": "https://api.github.com/repos/the-fascinator/plugin-roles-internal", "Date": "2017-08-17T01:35:02Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((my_roles.size()) > 0) { user_list.put(user, my_roles); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7569/buggy-version/src.main.java.com.googlecode.fascinator.roles.internal.InternalRoles.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.List<java.lang.String>>.put(java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "5f75f802a92ef907acf030692d462aec4b4d3aae", "Url": "https://api.github.com/repos/the-fascinator/plugin-roles-internal", "Date": "2017-08-17T01:35:02Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nonAsciiCount == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5361/buggy-version/src.main.java.com.searchcode.app.util.SearchcodeLib.java", "BodyUseAPI": [], "Fixed commit": "90c45ad3aea8b4b0e8efdb70c78463449b40b9a5", "Url": "https://api.github.com/repos/boyter/searchcode-server", "Date": "2016-10-03T21:22:07Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (asciiCount == 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5361/buggy-version/src.main.java.com.searchcode.app.util.SearchcodeLib.java", "BodyUseAPI": [], "Fixed commit": "90c45ad3aea8b4b0e8efdb70c78463449b40b9a5", "Url": "https://api.github.com/repos/boyter/searchcode-server", "Date": "2016-10-03T21:22:07Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uri.charAt(0)) != '/') { uri = '/' + uri; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2155/buggy-version/src.main.java.org.exist.xquery.xproc.xmlcalabash.ProcessFunction.java", "BodyUseAPI": [], "Fixed commit": "0b885c611b91bb00abc3e85900bb4a4501ad582f", "Url": "https://api.github.com/repos/eXist-db/xquery-xproc-xmlcalabash-module", "Date": "2017-03-05T17:24:55Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (player != null) player.sendMessage(strings.getString(\"reloadedok\", plugin.getDescription().getVersion()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5186/buggy-version/src.main.java.net.tgxn.bukkit.backup.events.CommandHandler.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(strings.getString(\"reloadedok\", plugin.getDescription().getVersion()))"], "Fixed commit": "66ebfc387a452ec4e909367acb4145a8e7d74e8e", "Url": "https://api.github.com/repos/gamerx/Backup", "Date": "2012-03-15T02:04:12Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useEmailAddressAsUsername) { java.lang.String email = ((java.lang.String) (ctx.getObjectAttribute(\"mail\"))); if (email != null) { userDetails = super.mapUserFromContext(ctx, email, newAuthorities); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2283/buggy-version/core.broadleaf-profile.src.main.java.org.broadleafcommerce.profile.core.security.ldap.BroadleafActiveDirectoryUserDetailsMapper.java", "BodyUseAPI": [], "Fixed commit": "24ee2485a551c9b5d74dd6be07f615f930e856d8", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2012-06-18T15:47:48Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (userDetails == null) { userDetails = super.mapUserFromContext(ctx, username, newAuthorities); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2283/buggy-version/core.broadleaf-profile.src.main.java.org.broadleafcommerce.profile.core.security.ldap.BroadleafActiveDirectoryUserDetailsMapper.java", "BodyUseAPI": [], "Fixed commit": "24ee2485a551c9b5d74dd6be07f615f930e856d8", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2012-06-18T15:47:48Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { mIsCheater = savedInstanceState.getBoolean(com.bignerdranch.android.geoquiz.QuizActivity.CHEATER, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1501/buggy-version/app.src.main.java.com.bignerdranch.android.geoquiz.QuizActivity.java", "BodyUseAPI": ["android.os.Bundle.getBoolean(java.lang.String,boolean)"], "Fixed commit": "fc20fd0d439a841d611099e001a545a11765fc35", "Url": "https://api.github.com/repos/TimPaczynski/GeoQuiz", "Date": "2016-02-21T19:35:40Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((items.size()) > 0) && ((getSelectedPosition()) >= 0)) && ((getSelectedPosition()) < (items.size()))) { return items.get(getSelectedPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7206/buggy-version/robobinding-helpers-api.src.main.java.com.dellkan.robobinding.helpers.model.ListContainer.java", "BodyUseAPI": ["java.util.List<T>.get(int)"], "Fixed commit": "adb5e89f0355a7a39443106c0659e79af6d1db50", "Url": "https://api.github.com/repos/Dellkan/Robobinding-helpers", "Date": "2016-09-12T14:50:31Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (annotation == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8222/buggy-version/src.main.java.com.sun.tools.xjc.addon.xew.CommonUtils.java", "BodyUseAPI": [], "Fixed commit": "6ec7f7ce37130b50e15b5e63efb2a96cf269ca77", "Url": "https://api.github.com/repos/diorcety/jaxb-xew-plugin", "Date": "2014-07-30T07:20:28Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mil.nga.giat.mage.sdk.utils.MediaUtility.getMimeType(attachment.getLocalPath())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (mimeType == null) { throw new java.lang.Exception((\"Attachment mimeType is \" + (java.lang.String.valueOf(mimeType)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7847/buggy-version/sdk.src.main.java.mil.nga.giat.mage.sdk.http.post.MageServerPostRequests.java", "BodyUseAPI": ["java.lang.String.valueOf(java.lang.String)"], "Fixed commit": "d075fd029c38d24485400029f6c7f3d8411da4fc", "Url": "https://api.github.com/repos/ngageoint/mage-android-sdk", "Date": "2015-03-27T20:47:17Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(extension)) { int i = url.lastIndexOf('.'); if ((i > 0) && ((url.length()) >= (i + 1))) { extension = url.substring((i + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7847/buggy-version/sdk.src.main.java.mil.nga.giat.mage.sdk.utils.MediaUtility.java", "BodyUseAPI": [], "Fixed commit": "d075fd029c38d24485400029f6c7f3d8411da4fc", "Url": "https://api.github.com/repos/ngageoint/mage-android-sdk", "Date": "2015-03-27T20:47:17Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isBlank(extension))) { android.webkit.MimeTypeMap mime = android.webkit.MimeTypeMap.getSingleton(); type = mime.getMimeTypeFromExtension(extension); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7847/buggy-version/sdk.src.main.java.mil.nga.giat.mage.sdk.utils.MediaUtility.java", "BodyUseAPI": ["android.webkit.MimeTypeMap.getMimeTypeFromExtension(java.lang.String)"], "Fixed commit": "d075fd029c38d24485400029f6c7f3d8411da4fc", "Url": "https://api.github.com/repos/ngageoint/mage-android-sdk", "Date": "2015-03-27T20:47:17Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (firstName.equals(\"\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8791/buggy-version/GroupBuilder.src.com.kn.groupBuilder.Gui.Popups.Listener.CreateMemberFrameListener.java", "BodyUseAPI": [], "Fixed commit": "8d303532dd59643c67474bc9b6f5d19fa5e70f4a", "Url": "https://api.github.com/repos/DennisMarkmann/GroupBuilder", "Date": "2013-07-12T06:54:25Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lastName.equals(\"\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8791/buggy-version/GroupBuilder.src.com.kn.groupBuilder.Gui.Popups.Listener.CreateMemberFrameListener.java", "BodyUseAPI": [], "Fixed commit": "8d303532dd59643c67474bc9b6f5d19fa5e70f4a", "Url": "https://api.github.com/repos/DennisMarkmann/GroupBuilder", "Date": "2013-07-12T06:54:25Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (groupName.equals(\"\")) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8791/buggy-version/GroupBuilder.src.com.kn.groupBuilder.Gui.Popups.Listener.CreateGroupFrameListener.java", "BodyUseAPI": [], "Fixed commit": "8d303532dd59643c67474bc9b6f5d19fa5e70f4a", "Url": "https://api.github.com/repos/DennisMarkmann/GroupBuilder", "Date": "2013-07-12T06:54:25Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dx) > (0.3 * (GUI.MainChar.TIMER))) { dx -= 0.01 * (GUI.MainChar.TIMER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1189/buggy-version/src.GUI.MainChar.java", "BodyUseAPI": [], "Fixed commit": "e595655356c57452f9893d1e387e3709f350714a", "Url": "https://api.github.com/repos/holard/platformer", "Date": "2015-03-09T23:07:19Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dx) < ((-0.3) * (GUI.MainChar.TIMER))) { dx += 0.01 * (GUI.MainChar.TIMER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1189/buggy-version/src.GUI.MainChar.java", "BodyUseAPI": [], "Fixed commit": "e595655356c57452f9893d1e387e3709f350714a", "Url": "https://api.github.com/repos/holard/platformer", "Date": "2015-03-09T23:07:19Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((observation != null) && (obs != null)) { obs.setConcept(getConceptByUuid(observation.getConceptUuid())); obs.setValueAsString(((java.lang.String) (observation.getValue()))); if (observation.isVoided()) { obs.setVoided(observation.isVoided()); obs.setVoidReason(observation.getVoidReason()); } obs.setComment(observation.getComment()); obs.setObsDatetime(observationDateTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5365/buggy-version/api.src.main.java.org.openmrs.module.emrapi.encounter.EncounterDispositionServiceHelper.java", "BodyUseAPI": ["org.openmrs.module.emrapi.encounter.EncounterDispositionServiceHelper.getConceptByUuid(observation.getConceptUuid())", "EncounterTransaction.Observation.getVoidReason()", "EncounterTransaction.Observation.getValue()", "EncounterTransaction.Observation.getComment()", "org.openmrs.Obs.setVoided(observation.isVoided())", "org.openmrs.Obs.setValueAsString(((java.lang.String) (observation.getValue())))", "org.openmrs.Obs.setVoidReason(observation.getVoidReason())", "org.openmrs.Obs.setObsDatetime(java.util.Date)", "org.openmrs.Obs.setConcept(org.openmrs.Concept)", "EncounterTransaction.Observation.getConceptUuid()", "EncounterTransaction.Observation.isVoided()", "EncounterTransaction.Observation.isVoided()", "org.openmrs.Obs.setComment(observation.getComment())"], "Fixed commit": "404a7f0c571c72291fd2bc3a281cec73e7c93e2d", "Url": "https://api.github.com/repos/mogoodrich/openmrs-module-emrapi", "Date": "2013-10-28T08:33:24Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.nocompany.jason.calculator.MainActivity.expression.getLast().equals(\"!\")) { com.nocompany.jason.calculator.MainActivity.expression.add(operator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2505/buggy-version/app.src.main.java.com.nocompany.jason.calculator.MainActivity.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "7ba81bdb4f99612b5fcc7e5d663b35948ad04187", "Url": "https://api.github.com/repos/TrySickle/Calculator", "Date": "2017-09-09T02:08:34Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.getContextClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cl == null) { cl = org.pentaho.di.ui.util.SwtSvgImageUtil.class.getClassLoader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5272/buggy-version/ui.src.org.pentaho.di.ui.util.SwtSvgImageUtil.java", "BodyUseAPI": [], "Fixed commit": "3be17b49fa2877f5a1b76584b8dcd5b0282a28e9", "Url": "https://api.github.com/repos/mdamour1976/pentaho-kettle", "Date": "2015-05-12T19:20:09Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((keywords.length) > 0) { return currentState.updateMatchedLabels(repoLabels, keywords[((keywords.length) - 1)]); }else { return currentState.updateMatchedLabels(repoLabels, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7858/buggy-version/src.main.java.ui.components.pickers.LabelPickerUILogic.java", "BodyUseAPI": ["ui.components.pickers.LabelPickerState.updateMatchedLabels(java.util.Set<java.lang.String>,java.lang.String)"], "Fixed commit": "836d31d78c69abd3996f512eaf227607abead005", "Url": "https://api.github.com/repos/nus-fboa2016-ht/HubTurbo", "Date": "2016-01-31T07:02:22Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.structr.web.entity.AbstractFile.validatePathUniqueness) { valid = validatePath(securityContext, errorBuffer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/814/buggy-version/structr-ui.src.main.java.org.structr.web.entity.AbstractFile.java", "BodyUseAPI": [], "Fixed commit": "26ea7484ee8203e3f2985d3496980404d42435ae", "Url": "https://api.github.com/repos/ckramp/structr", "Date": "2017-02-28T16:28:25Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_header.specified()) setup.setHeader(_header.value());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8808/buggy-version/src.main.java.water.api.Parse.java", "BodyUseAPI": ["CustomParser.ParserSetup.setHeader(_header.value())", "water.api.Bool.value()"], "Fixed commit": "33db6e8df03466138b5225f655c8214eee424c64", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2013-08-13T20:39:51Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.darkcraft.darkcore.mod.DarkcoreMod.proxy) instanceof io.darkcraft.darkcore.mod.proxy.ClientProxy) if ((getRenderer()) != null) registerIcons = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7198/buggy-version/src.main.java.io.darkcraft.darkcore.mod.abstracts.AbstractItem.java", "BodyUseAPI": [], "Fixed commit": "26b6478819faf07d34d6f9e93f9e51e9bfac94a4", "Url": "https://api.github.com/repos/DarkholmeTenk/Darkcore", "Date": "2016-06-22T00:41:01Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["BinaryTree.findParent(TreeNode,TreeNode)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((successorParent.getLeft()) != null) { successorParent.setLeft(successor.getRight()); }else if (successor == nodeToRemoveDataFrom) { if ((successorParent.getData()) > (successor.getData())) { successorParent.setLeft(null); }else { successorParent.setRight(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7884/buggy-version/src.BinaryTree.java", "BodyUseAPI": ["TreeNode.setLeft(<nulltype>)", "TreeNode.setRight(<nulltype>)", "TreeNode.setLeft(successor.getRight())", "TreeNode.getData()"], "Fixed commit": "187a816b5cda7880457fbfbc9c6df735be0c3efe", "Url": "https://api.github.com/repos/FilipHarald/BinaryTree", "Date": "2015-10-17T14:17:59Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.liglab.adele.cilia.knowledge.TopologyImpl.getModel(node.chainId(),node.nodeId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(mc.uuid().equals(node.uuid()))) throw new fr.liglab.adele.cilia.exceptions.CiliaIllegalStateException(((\"node \" + (node.toString())) + \" has disappeared\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2187/buggy-version/src.runtime.src.main.java.fr.liglab.adele.cilia.knowledge.TopologyImpl.java", "BodyUseAPI": ["fr.liglab.adele.cilia.Node.toString()"], "Fixed commit": "04db3df6d29a7a9c01f2866e775958a43d24e9cb", "Url": "https://api.github.com/repos/torito/Cilia", "Date": "2012-07-03T12:59:48Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (uri.startsWith(\"/\")) { return (getHeader(\"host\")) + (uri); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2451/buggy-version/protos.src.main.java.it.itba.edu.ar.protos.model.Request.java", "BodyUseAPI": [], "Fixed commit": "fd8a48d1bc43ce158196da1456a44827c8f096f3", "Url": "https://api.github.com/repos/63RM4N90/Protos", "Date": "2013-11-07T03:35:06Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((key.contains(\"Idle\")) || (key.contains(\".app_enabled\"))) { org.metawatch.manager.Idle.reset(this); org.metawatch.manager.Idle.updateIdle(this, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7151/buggy-version/src.org.metawatch.manager.Settings.java", "BodyUseAPI": [], "Fixed commit": "b2192ccec29386a8d727c1d97fddefa223ea84be", "Url": "https://api.github.com/repos/grueni75/MWM-for-Android", "Date": "2014-11-16T17:39:45Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commandArgs.length) > 2) { channelName += \" \"; for (int I = 2; I < (commandArgs.length); I++) { channelName += (I == ((commandArgs.length) - 1)) ? commandArgs[I] : commandArgs + \" \"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3278/buggy-version/src.main.java.com.caved_in.ChatManager.Commands.Chat.ChannelCommands.java", "BodyUseAPI": [], "Fixed commit": "29142748b7900021d2d760dbccf1dba4e8e2a1ab", "Url": "https://api.github.com/repos/TheGamersCave/ChatManager", "Date": "2013-10-23T00:44:53Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((commandArgs.length) > 3) { pChannelName += \" \"; for (int I = 3; I < (commandArgs.length); I++) { channelName += (I == ((commandArgs.length) - 1)) ? commandArgs[I] : commandArgs + \" \"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3278/buggy-version/src.main.java.com.caved_in.ChatManager.Commands.Chat.ChannelCommands.java", "BodyUseAPI": [], "Fixed commit": "29142748b7900021d2d760dbccf1dba4e8e2a1ab", "Url": "https://api.github.com/repos/TheGamersCave/ChatManager", "Date": "2013-10-23T00:44:53Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.funcxy.oj.utils.UserUtil.isSignedIn(httpSession))) { return new org.springframework.http.ResponseEntity(new com.funcxy.oj.errors.ForbiddenError(), org.springframework.http.HttpStatus.FORBIDDEN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4724/buggy-version/src.main.java.com.funcxy.oj.controllers.users.SignOutController.java", "BodyUseAPI": [], "Fixed commit": "d2dee060c9d0bb7e04a49cbcbfd8d354c7e5d219", "Url": "https://api.github.com/repos/Mixresque/Orange-Juice-Java", "Date": "2017-03-15T11:13:53Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list) != null) { list.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6332/buggy-version/app.src.main.java.com.example.mike.myapplication.GetWeather.java", "BodyUseAPI": [], "Fixed commit": "2e0bd79341e9c843eb618c72a8eba1161c3228a9", "Url": "https://api.github.com/repos/minaevmike/MyApplication", "Date": "2014-10-04T22:17:18Z"},
{"Line": "=>906", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pvPathway.getGroupElements(pvElem.getGroupId()).size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numChildren == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3303/buggy-version/src.main.java.org.wikipathways.cytoscapeapp.internal.io.GpmlToPathway.java", "BodyUseAPI": [], "Fixed commit": "4f62eae5cc08b7a17a8f6a0d2949371755518150", "Url": "https://api.github.com/repos/wikipathways/cytoscape-wikipathways-app", "Date": "2014-05-09T18:56:26Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.jetbrains.generate.tostring.util.StringUtil.isEmpty(charsetName)) { charsetName = \"utf-8\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6515/buggy-version/src.main.java.org.mvnsearch.intellij.plugin.zookeeper.vfs.ZkVirtualFileSystem.java", "BodyUseAPI": [], "Fixed commit": "de0be473954076675a2b05446577978c1ffc3791", "Url": "https://api.github.com/repos/linux-china/zookeeper-intellij", "Date": "2013-12-20T04:15:28Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.lang.Integer>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (cnt != null) { line.put(key, java.lang.Math.max(cnt, value)); }else line.put(key, value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6781/buggy-version/src.CodeGenerator.CoverageInfo.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.Integer>.put(java.lang.Integer,int)", "java.lang.Math.max(java.lang.Integer,java.lang.Integer)"], "Fixed commit": "645f392bd51170a00a210ed131b69b75fed432f9", "Url": "https://api.github.com/repos/KaitoHH/CustomizeCompiler", "Date": "2017-01-09T09:10:24Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(pageDirFile.isDirectory())) && (!(pageDirFile.mkdir()))) { throw new java.io.IOException((\"Could not create page dir at: \" + pageDir)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/2237/buggy-version/src.main.java.eu.transkribus.core.io.GoobiMetsImporter.java", "BodyUseAPI": [], "Fixed commit": "d287761647fe44a54019ea3132041d10342d4a54", "Url": "https://api.github.com/repos/Transkribus/TranskribusCore", "Date": "2017-05-04T14:23:47Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mAdapter.getCount()) > 0) mActivity.setMenuResourceID(mAdapter.getTab(position).getMenuResourceID());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3343/buggy-version/src.poisondog.android.view.tab.DefaultPageListener.java", "BodyUseAPI": ["poisondog.android.view.tab.TabActivity.setMenuResourceID(mAdapter.getTab(position).getMenuResourceID())", "mAdapter.getTab(position).getMenuResourceID()", "poisondog.android.view.tab.TabAdapter.getTab(int)"], "Fixed commit": "9a7dccd6db02af517929614d6b6b6dab7ce0964c", "Url": "https://api.github.com/repos/poisondog/android.view.tab", "Date": "2014-12-24T08:24:17Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.noname.mrch.CharacterManager.getCharacterArray()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (characterArray.peek().isMurderer()) { characterArray.swap(((characterArray.size) - 1), ((characterArray.size) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7203/buggy-version/core.src.main.java.com.noname.mrch.helper.Randomizer.java", "BodyUseAPI": ["com.badlogic.gdx.utils.Array<com.noname.mrch.gameobject.GameCharacter>.swap(((characterArray.size) - 1),((characterArray.size) - 2))"], "Fixed commit": "54227c1047709fd8880ff278eaa1c3e86bc35ab1", "Url": "https://api.github.com/repos/jsy501/A_Murder_Most_Silent", "Date": "2017-01-20T19:51:23Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tag.isInTable()) { boolean inList = false; for (com.team3637.model.Tag tagInTable : tableTags) if ((tag.compareTo(tagInTable)) == 0) inList = true; if (!inList) tableTags.add(tag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5064/buggy-version/src.com.team3637.controller.analytics.AnalyticsController.java", "BodyUseAPI": ["java.util.List<com.team3637.model.Tag>.add(com.team3637.model.Tag)", "com.team3637.model.Tag.compareTo(com.team3637.model.Tag)"], "Fixed commit": "ca6ed5e5233096ac0bda88c11a8daf6916edaf47", "Url": "https://api.github.com/repos/FRC-3637-Daleks/ScoutingApp", "Date": "2016-04-08T03:54:53Z"},
{"Line": "=>4001", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lb.isArg) lb.idx -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7978/buggy-version/src.jvm.clojure.lang.Compiler.java", "BodyUseAPI": [], "Fixed commit": "ccd9cff0cd63454bfe4b54eba962c255506d8d3a", "Url": "https://api.github.com/repos/MichaelBlume/clojure", "Date": "2015-09-21T15:41:27Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bLongClickMode) onLongClickFinish(mDragView, mCurrentX, mCurrentY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7049/buggy-version/app.src.main.java.com.infinite.dragsortlayout.DragSortLayout.java", "BodyUseAPI": [], "Fixed commit": "454575be77b8069a4f36f69a676845cfd531ac1c", "Url": "https://api.github.com/repos/infinite-Zh/Drag-sort-layout", "Date": "2016-12-14T07:26:04Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((srp.getAugmentation(org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.pcep.crabbe.initiated.rev131126.Srp1.class)) != null) && (srp.getAugmentation(org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.pcep.crabbe.initiated.rev131126.Srp1.class).isRemove())) { flags.set(org.opendaylight.protocol.pcep.ietf.initiated00.CInitiated00SrpObjectParser.REMOVE_FLAG, srp.getAugmentation(org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.pcep.crabbe.initiated.rev131126.Srp1.class).isRemove()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7709/buggy-version/pcep.ietf-stateful07.src.main.java.org.opendaylight.protocol.pcep.ietf.initiated00.CInitiated00SrpObjectParser.java", "BodyUseAPI": ["org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.pcep.ietf.stateful.rev131222.srp.object.Srp.getAugmentation(java.lang.Class)", "java.util.BitSet.set(int,srp.getAugmentation(org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.pcep.crabbe.initiated.rev131126.Srp1.class).isRemove())", "srp.getAugmentation(org.opendaylight.yang.gen.v1.urn.opendaylight.params.xml.ns.yang.pcep.crabbe.initiated.rev131126.Srp1.class).isRemove()"], "Fixed commit": "a771febac61f332fb5b113760a743a705bb95346", "Url": "https://api.github.com/repos/opendaylight/bgpcep", "Date": "2014-06-06T11:13:30Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.jemos.podam.common.Size.max()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (maxValue == (java.lang.Integer.MAX_VALUE)) { maxValue = PodamConstants.STR_DEFAULT_LENGTH; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5622/buggy-version/src.main.java.uk.co.jemos.podam.common.BeanValidationStrategy.java", "BodyUseAPI": [], "Fixed commit": "0b007eb861f2c531f64e5070915ebc0a81a2bc53", "Url": "https://api.github.com/repos/mtedone/podam", "Date": "2015-06-27T07:20:01Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((groups) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6224/buggy-version/app.src.main.java.de.fau.cs.mad.kwikshop.android.view.ItemDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "afa38f753e870544541f84c151fd95c36818a520", "Url": "https://api.github.com/repos/FAU-Inf2/kwikshop-android", "Date": "2015-07-07T17:21:04Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.dbdeploy.AntTarget.createUndoOutputPrintStream(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (undoOutputPrintStream != null) { undoOutputPrintStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6846/buggy-version/dbdeploy.src.java.net.sf.dbdeploy.AntTarget.java", "BodyUseAPI": ["java.io.PrintStream.close()"], "Fixed commit": "dc5dbec3f2a93b6dd5391b29d9ed8070584de2d5", "Url": "https://api.github.com/repos/sudr/dbdeploy", "Date": "2007-01-09T15:28:45Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ofClass.getClassLoader()) == null) is = java.lang.ClassLoader.getSystemClassLoader().getResourceAsStream(ofClassName); else is = ofClass.getClassLoader().getResourceAsStream(ofClassName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6778/buggy-version/src.main.java.com.owlike.genson.reflect.ASMCreatorParameterNameResolver.java", "BodyUseAPI": ["java.lang.ClassLoader.getResourceAsStream(java.lang.String)", "java.lang.Class<?>.getClassLoader()"], "Fixed commit": "ed006505dd97a09017071677ba63ad8b62ae4be3", "Url": "https://api.github.com/repos/owlike/genson", "Date": "2014-06-05T09:26:07Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mDataProfile.apn) != null) { return mDataProfile.apn.equals(provisioningApn); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7285/buggy-version/src.java.com.android.internal.telephony.dataconnection.ApnContext.java", "BodyUseAPI": ["mDataProfile.apn.equals(java.lang.String)"], "Fixed commit": "37efdd40bcefef5d88856cbedfa46fb3092072b3", "Url": "https://api.github.com/repos/LOSP/frameworks_opt_telephony", "Date": "2013-09-21T01:13:40Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["agents.TransformerAgent.1.receive()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (map.containsKey(msg.getSender().getLocalName().toString())) { inMap = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7230/buggy-version/src.agents.TransformerAgent.java", "BodyUseAPI": [], "Fixed commit": "7c8d59be1503e916ed6ef65ac0e02f5e1c72829b", "Url": "https://api.github.com/repos/6963099/Electric_Car_Charge_Scheduling_System", "Date": "2013-10-26T18:56:25Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((solver.isFeasible()) == (java.lang.Boolean.FALSE)) return java.lang.Boolean.FALSE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8727/buggy-version/pisco-single.src.main.java.pisco.single.SingleMachineLmax.java", "BodyUseAPI": [], "Fixed commit": "04df1c69ab03b098ea321b815b2174a511f0228b", "Url": "https://api.github.com/repos/arnaud-m/pisco", "Date": "2012-04-22T13:21:22Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((worldserver0.getBlockState(pos).getBlock()) != (net.minecraft.init.Blocks.BEDROCK)) { if ((isEdge || (blockY == minY)) || (blockY == (maxY - 1))) { worldserver0.setBlockState(pos, Blocks.AIR.getDefaultState(), 3); }else { worldserver0.setBlockState(pos, Blocks.AIR.getDefaultState(), 2); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/718/buggy-version/src.com.mraof.minestuck.item.ItemCruxiteArtifact.java", "BodyUseAPI": ["net.minecraft.world.WorldServer.setBlockState(net.minecraft.util.math.BlockPos,Blocks.AIR.getDefaultState(),int)", "net.minecraft.world.WorldServer.setBlockState(net.minecraft.util.math.BlockPos,Blocks.AIR.getDefaultState(),int)"], "Fixed commit": "8b4dffc4aa998768553014defd93420d976665b9", "Url": "https://api.github.com/repos/BenjaminKirksey/Minestuck", "Date": "2017-05-07T20:05:35Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ConsoleUI.endCurrentGame) { ConsoleUI.restartGame(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/18/buggy-version/src.ConsoleUI.java", "BodyUseAPI": [], "Fixed commit": "06d5cc1519d6f72ee93f8c8d1b16ffeeb463a81d", "Url": "https://api.github.com/repos/avivAlfa/Numberiada", "Date": "2016-12-17T13:38:17Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.getInventory().size()) >= 8) { return \"Cant hold anymore items!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/194/buggy-version/src.evidence.gameworld.actions.RemoveItem.java", "BodyUseAPI": [], "Fixed commit": "40ce8a75a0273f5a190780903a620f80546713ac", "Url": "https://api.github.com/repos/georginamurphy/Evidence", "Date": "2016-10-11T06:51:10Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((products.size()) > 0) return products.get(random.nextInt(products.size())); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6139/buggy-version/src.main.java.lv.javaguru.java2.businesslogic.RandomSaleOffer.java", "BodyUseAPI": ["java.util.Random.nextInt(products.size())", "java.util.List<lv.javaguru.java2.domain.Product>.get(int)", "java.util.List<lv.javaguru.java2.domain.Product>.size()"], "Fixed commit": "9d7a5235e2226dd68c7fb8dcc440d2b583baa3c4", "Url": "https://api.github.com/repos/alex-vit/java2", "Date": "2016-08-25T23:15:28Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((w == null) || (is == null)) || ((is.stackSize) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3593/buggy-version/src.main.java.latmod.core.LMUtils.java", "BodyUseAPI": [], "Fixed commit": "7131717db637c9d924fb69af274c00f66f42d3ad", "Url": "https://api.github.com/repos/LatvianModder/LatCoreMC", "Date": "2014-06-19T08:18:05Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getAction()", "org.bukkit.event.player.PlayerInteractEvent.getClickedBlock()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (((b != null) && ((b.getType()) == (org.bukkit.Material.BED_BLOCK))) && (a == (org.bukkit.event.block.Action.RIGHT_CLICK_BLOCK))) { org.bukkit.Location l = b.getLocation(); org.bukkit.Location bl = p.getBedSpawnLocation(); org.bukkit.Location spawn = org.bukkit.Bukkit.getWorlds().get(0).getSpawnLocation(); if ((p.getWorld()) == (spawn.getWorld())) { if (bl == null) bl = spawn; if ((p.getWorld().getTime()) < 12500) { p.setBedSpawnLocation(setBedSpawn(bl, l, p), true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1766/buggy-version/erespawn.src.main.java.net.year4000.erespawn.ERespawn.java", "BodyUseAPI": ["org.bukkit.block.Block.getLocation()"], "Fixed commit": "e8a2f81e96518ea227a8da1f4d0a8c2f6e16827e", "Url": "https://api.github.com/repos/ewized/eSuite", "Date": "2013-06-26T22:59:18Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item.type) == (net.osmand.plus.configuremap.ConfigureSettingsMenu.BACK_HEADER)) { app.getMapActivity().getMapActions().createOptionsMenuAsDrawer(false); }else if ((item.type) == (net.osmand.plus.configuremap.ConfigureSettingsMenu.LAYER)) { if (ch != null) { ch.setChecked((!(ch.isChecked()))); } if ((item.nameId) == (R.string.layer_poi)) { final net.osmand.plus.configuremap.OsmandSettings.OsmandPreference<java.lang.Boolean> pref = ((net.osmand.plus.configuremap.OsmandSettings.OsmandPreference<java.lang.Boolean>) (item.preference)); boolean value = !(pref.get()); if (value) { selectPOIFilterLayer(null); } }else { showGPXFileDialog(getAlreadySelectedGpx()); } }else { final net.osmand.plus.configuremap.OsmandSettings.OsmandPreference<java.lang.Boolean> pref = ((net.osmand.plus.configuremap.OsmandSettings.OsmandPreference<java.lang.Boolean>) (item.preference)); pref.set((!(pref.get()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6417/buggy-version/OsmAnd.src.net.osmand.plus.configuremap.ConfigureSettingsMenu.java", "BodyUseAPI": [], "Fixed commit": "bfdbb6ec100ac8358c624b7d74b0bc68639fbe48", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2014-10-20T15:43:34Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getInt(java.lang.String,int)", "android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((recipeName.equals(\"none\")) || (recipe_Id == (-1))) { views.setTextViewText(R.id.widget_header_text_view, context.getResources().getString(R.string.widget_message_no_recipe_selected)); }else { views.setTextViewText(R.id.widget_header_text_view, recipeName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4536/buggy-version/app.src.main.java.com.example.android.mbejaranoe.bakingapp.RecipeWidget.java", "BodyUseAPI": ["android.widget.RemoteViews.setTextViewText(R.id.widget_header_text_view,java.lang.String)"], "Fixed commit": "ed6408afb37ba574fee4b842cfb1f58d67e1b1cc", "Url": "https://api.github.com/repos/mbejaranoe/baking_app", "Date": "2017-11-15T00:14:59Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextSegement instanceof com.alibaba.fastjson.JSONPath.PropertySegement) { java.lang.Class<?> parentClass = parentObject.getClass(); com.alibaba.fastjson.serializer.JavaBeanSerializer beanSerializer = getJavaBeanSerializer(parentClass); if (beanSerializer != null) { return false; } newObj = new com.alibaba.fastjson.JSONObject(); }else if (nextSegement instanceof com.alibaba.fastjson.JSONPath.ArrayAccessSegement) { newObj = new com.alibaba.fastjson.JSONArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3334/buggy-version/src.main.java.com.alibaba.fastjson.JSONPath.java", "BodyUseAPI": [], "Fixed commit": "2f7626e2c9fde86858cace66d9f1b57b0a64e029", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-01-15T02:02:26Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldObj.isRemote)) tool.addEnchantment(net.minecraft.enchantment.Enchantment.enchantmentsList[enchant], level);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/5929/buggy-version/MODSRC.vazkii.tinkerer.common.block.tile.TileEnchanter.java", "BodyUseAPI": [], "Fixed commit": "f154aa2576de5be7dee005a2cee4b33911351e0f", "Url": "https://api.github.com/repos/Vazkii/ThaumicTinkerer", "Date": "2013-10-24T17:38:29Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/1982/buggy-version/src.main.java.org.naturn.java8.pattern.PatternDemo.java", "BodyUseAPI": [], "Fixed commit": "f2835828bbf513e3da41cf01f6f4c60a909e9cb4", "Url": "https://api.github.com/repos/naturn/java8", "Date": "2017-07-14T06:22:56Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (act.areTasksSelected()) { instrView.setText(\"Currently Listening for:\"); }else { instrView.setText(\"Tap to listen for events:\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/191/buggy-version/CookEase.src.edu.berkeley.cs160.DeansOfDesign.cookease.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1bd731145a45f12c9453d2e4a72f575ce2e4cce1", "Url": "https://api.github.com/repos/thisisdhaas/CookEase", "Date": "2014-05-06T23:14:29Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (list1_it.hasNext()) val1 = list1_it.next(); else val1 = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/984/buggy-version/java.MergeSort.java", "BodyUseAPI": ["java.util.Iterator<java.lang.Integer>.next()"], "Fixed commit": "732b9290dec94b852409d5f7085fd6a217a78733", "Url": "https://api.github.com/repos/MS-DDOS/divideAndConquer", "Date": "2016-11-30T02:57:23Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (list2_it.hasNext()) val2 = list2_it.next(); else val2 = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/984/buggy-version/java.MergeSort.java", "BodyUseAPI": ["java.util.Iterator<java.lang.Integer>.next()"], "Fixed commit": "732b9290dec94b852409d5f7085fd6a217a78733", "Url": "https://api.github.com/repos/MS-DDOS/divideAndConquer", "Date": "2016-11-30T02:57:23Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((state.getTestSet().getPlan()) != null) { if (((currentPlan.getInitialTestNumber()) != 1) || ((currentPlan.getLastTestNumber()) != 0)) { throw new org.tap4j.parser.ParserException(\"Duplicated TAP Plan found.\"); } }else { state.getTestSet().setPlan(currentPlan); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/8841/buggy-version/tap4j.src.main.java.org.tap4j.parser.Tap13Parser.java", "BodyUseAPI": ["org.tap4j.parser.StreamStatus.getTestSet()", "state.getTestSet().setPlan(org.tap4j.model.Plan)"], "Fixed commit": "a92f632ef12ce92b77f2dd9cda291edf1767351d", "Url": "https://api.github.com/repos/japod/tap4j", "Date": "2016-10-19T08:55:03Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources().getConfiguration().orientation) == (android.content.res.Configuration.ORIENTATION_PORTRAIT)) { java.lang.String info = intent.getStringExtra(getString(R.string.service_intent_info)); headerRunningString.setText(info); startStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/3053/buggy-version/src.com.dsvoronin.grindfm.activity.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "4ba195da8693bbbfad2b898bff72d48b7024de2f", "Url": "https://api.github.com/repos/dsvoronin/grind-fm-android", "Date": "2012-04-04T19:57:48Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pastMeeting.getNotes().equals(\"\"))) { meetingNote = ((pastMeeting.getNotes()) + space) + text; }else { meetingNote = text; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/4046/buggy-version/src.Implementations.ContactManagerImpl.java", "BodyUseAPI": ["Implementations.PastMeeting.getNotes()"], "Fixed commit": "0b9482042010f49326d87c5302ea712092ac3a84", "Url": "https://api.github.com/repos/BBK-PiJ-2014-11/cw4", "Date": "2015-03-11T23:26:51Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/7591/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "48bb7651a64002b13226b183e54607eea3d0e0aa", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-26T03:54:17Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.xml.xsom.XSElementDecl.getType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((type.getName()) == null) && (type.asSimpleType().isRestriction())) { com.sun.xml.xsom.XSRestrictionSimpleType restriction = type.asSimpleType().asRestriction(); checkType(restriction.getBaseType()); jolieType.putSubType(createSimpleType(restriction.getBaseType(), currElementDecl, Constants.RANGE_ONE_TO_ONE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V10/6101/buggy-version/lib.jolie-xml.src.jolie.xml.xsd.impl.XsdToJolieConverterImpl.java", "BodyUseAPI": ["type.asSimpleType().asRestriction()", "com.sun.xml.xsom.XSType.asSimpleType()"], "Fixed commit": "3fad5c740686b3cd6fdfc54800216ace79206001", "Url": "https://api.github.com/repos/klag/jolie", "Date": "2016-12-15T16:35:24Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((N % 2) == 0) { n = N / 2; }else { n = (++N) / 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/9111/buggy-version/src.Prometheus_week1.Karatsuba.java", "BodyUseAPI": [], "Fixed commit": "fb349b84aacf4d5b1fcaf15e3a399a344bd6518b", "Url": "https://api.github.com/repos/aywengo/Prometheus", "Date": "2015-02-14T13:24:43Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.mikrobestie.idea.vaadin.declarative.psi.VDComponent.getComponentClassName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (className != null) { java.lang.String setterName = cz.mikrobestie.idea.vaadin.declarative.VaadinUtils.capitalizeSetter(name); return cz.mikrobestie.idea.vaadin.declarative.PluginUtils.findClassSetter(getProject(), className, setterName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/980/buggy-version/src.cz.mikrobestie.idea.vaadin.declarative.psi.impl.VDAttrHelperImpl.java", "BodyUseAPI": ["cz.mikrobestie.idea.vaadin.declarative.PluginUtils.findClassSetter(getProject(),java.lang.String,java.lang.String)"], "Fixed commit": "0753997813e9dc3074de10928d5bb387c243e396", "Url": "https://api.github.com/repos/mikrobestie/vaadin-declarative-plugin", "Date": "2015-12-28T11:43:23Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (contextPath != null) { contextPathStack.push(contextPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5424/buggy-version/src.main.java.net.mindengine.galen.javascript.ScriptExecutor.java", "BodyUseAPI": ["java.util.Stack<java.lang.String>.push(java.lang.String)"], "Fixed commit": "07f2274816cdf8892a6aa31492192eba3e95fdab", "Url": "https://api.github.com/repos/galenframework/galen", "Date": "2014-04-16T20:41:32Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parentPath != null) { contextPathStack.push(file.getParent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5424/buggy-version/src.main.java.net.mindengine.galen.javascript.ScriptExecutor.java", "BodyUseAPI": [], "Fixed commit": "07f2274816cdf8892a6aa31492192eba3e95fdab", "Url": "https://api.github.com/repos/galenframework/galen", "Date": "2014-04-16T20:41:32Z"},
{"Line": "=>1546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.hops.OptimizerUtils.estimateSize(long,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.sysml.hops.OptimizerUtils.checkFlinkBroadcastMemoryBudget(size)) { return org.apache.sysml.hops.BinaryOp.MMBinaryMethod.MR_BINARY_M; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7138/buggy-version/src.main.java.org.apache.sysml.hops.BinaryOp.java", "BodyUseAPI": [], "Fixed commit": "45845ef75c3b96ebffc3554473578a9c9ce798fe", "Url": "https://api.github.com/repos/stratosphere/incubator-systemml", "Date": "2016-05-02T13:38:35Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((url.getQuery()) != null) path += \"?\" + (url.getQuery());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6043/buggy-version/src.ar.edu.it.itba.pdc.v2.implementations.utils.DecoderImpl.java", "BodyUseAPI": ["java.net.URL.getQuery()"], "Fixed commit": "cf8bed1af0af3c1ccb699baba04c59c6457884b9", "Url": "https://api.github.com/repos/mdesanti/TPE-Protos", "Date": "2012-06-03T18:14:06Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (files != null) { for (int i = 0; i < (files.length); i++) { if (files[i].equals(akt)) { java.lang.System.err.println(\"Das Sub-Directory war das Directory selbst. Das darf nicht passieren!\"); continue; } if (files[i].isDirectory()) { ea.Text.fontsEinbauen(liste, files[i]); } if (files[i].getName().endsWith(\".ttf\")) { liste.add(files[i]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6523/buggy-version/src.ea.Text.java", "BodyUseAPI": ["java.io.File.isDirectory()", "java.util.ArrayList<java.io.File>.add(java.io.File)", "ea.Text.fontsEinbauen(java.util.ArrayList<java.io.File>,java.io.File)", "java.io.File.equals(java.io.File)", "java.io.File.getName()", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "5d010a3d7e17f56b045a1608507d57f29f841124", "Url": "https://api.github.com/repos/andonie/engine-alpha", "Date": "2013-11-03T12:25:15Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graphics.scenery.spirvcrossj.Loader.getPlatform()) == (graphics.scenery.spirvcrossj.Loader.Platform.WINDOWS)) { pathOffset = 6; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1458/buggy-version/src.main.java.graphics.scenery.spirvcrossj.Loader.java", "BodyUseAPI": [], "Fixed commit": "8d97ed6d688dfc72b89623b94a1347f6263d16db", "Url": "https://api.github.com/repos/scenerygraphics/spirvcrossj", "Date": "2017-12-11T10:02:23Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((npcText) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6014/buggy-version/core.src.com.imperiled.game.NPC.java", "BodyUseAPI": [], "Fixed commit": "5eddd4fea2882e184edb776b2b7510f81aec1e6a", "Url": "https://api.github.com/repos/ztime/imperiled", "Date": "2015-05-19T13:50:52Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(Gdx.files.internal(fileName).exists())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6014/buggy-version/core.src.com.imperiled.game.FileParser.java", "BodyUseAPI": [], "Fixed commit": "5eddd4fea2882e184edb776b2b7510f81aec1e6a", "Url": "https://api.github.com/repos/ztime/imperiled", "Date": "2015-05-19T13:50:52Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tablet) { updateView(index); listener.setStep(index, steps); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8030/buggy-version/app.src.main.java.pharaoh.com.bakingapp.ui.Fragments.StepFragment.java", "BodyUseAPI": [], "Fixed commit": "0a1b6878be6655b81a43aef20108b595ef7ce85d", "Url": "https://api.github.com/repos/mahmoud-elshahat/BakingApp", "Date": "2017-10-14T13:25:52Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == 2) score -= 3; else if ((score) > 0) score -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6001/buggy-version/src.com.company.Word.java", "BodyUseAPI": [], "Fixed commit": "a40933434eb7f68bf46663773f6edce978b3dd62", "Url": "https://api.github.com/repos/oussamabonnor1/find_the_letter_material_design", "Date": "2017-01-24T13:46:18Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == 2) score += 5; else score += 3;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6001/buggy-version/src.com.company.Word.java", "BodyUseAPI": [], "Fixed commit": "a40933434eb7f68bf46663773f6edce978b3dd62", "Url": "https://api.github.com/repos/oussamabonnor1/find_the_letter_material_design", "Date": "2017-01-24T13:46:18Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.util.List<com.gluonhq.strange.simulator.Gate>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((row.size()) > i) { target = row.get(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2893/buggy-version/src.main.java.com.gluonhq.strange.Model.java", "BodyUseAPI": ["java.util.List<com.gluonhq.strange.simulator.Gate>.get(int)"], "Fixed commit": "65688c468cb47cc49315ceb30cad335873ffdece", "Url": "https://api.github.com/repos/gluonhq/strangefx", "Date": "2017-11-30T14:41:14Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.advertisement) != null) { throw new aibo.extensions.other.advertisement.errors.AdvertisementError(\"Advertisement is already set\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3342/buggy-version/src.main.java.aibo.extensions.other.advertisement.Object.java", "BodyUseAPI": [], "Fixed commit": "53c91da76f26175c3b4922a7b4904ed8b4174e56", "Url": "https://api.github.com/repos/vityafx/jaibo", "Date": "2014-03-16T20:24:44Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.has(\"name\")) && (item.getString(\"name\").equalsIgnoreCase(\"end\"))) { try { java.text.Format formatter = new java.text.SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"); java.util.Date date = new java.util.Date(); java.lang.String formatedDate = formatter.format(date); item.put(\"value\", formatedDate); } catch (java.lang.Exception e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3914/buggy-version/opensrp-app.src.main.java.org.ei.opensrp.util.FormUtils.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,java.lang.String)"], "Fixed commit": "6d6563a646ed6f3b1b9a36431af075feae50d6b5", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client", "Date": "2016-01-18T14:17:21Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Matcher.group(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (inlinedJavascript != null) { combinedResources.append(inlinedJavascript); }else { throw new java.lang.IllegalStateException((\"Found match without matched groups for content:\\n\" + (content))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/9020/buggy-version/src.main.java.no.get.cms.plugin.resourcecompressor.content.JsCompressedContent.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "b348f81d7adc0729210dc4aa30ae5d1570c08930", "Url": "https://api.github.com/repos/getas/enonic-resourcepacker-plugin", "Date": "2012-09-20T10:22:18Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (wifiMacAddress != null) { wifiMacAddressPref.setSummary((!(android.text.TextUtils.isEmpty(wifiMacAddress)) ? wifiMacAddress : getString(R.string.status_unavailable))); }else { android.util.Log.e(com.android.settings.deviceinfo.Status.TAG, \"Wi-fi Mac address is null\"); wifiMacAddressPref.setSummary(R.string.status_unavailable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/9149/buggy-version/src.com.android.settings.deviceinfo.Status.java", "BodyUseAPI": ["android.preference.Preference.setSummary((!(android.text.TextUtils.isEmpty(wifiMacAddress)) ? wifiMacAddress : getString(R.string.status_unavailable)))", "android.text.TextUtils.isEmpty(java.lang.String)"], "Fixed commit": "40d64ca724f96baebd805fc7d2cbf07c38f0b71e", "Url": "https://api.github.com/repos/PDi-Communication-Systems-Inc/lollipop-packages-apps-Settings", "Date": "2016-07-13T14:17:24Z"},
{"Line": "=>1026", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ldbc.socialnet.dbgen.generator.DateGenerator.getNumberOfMonths(java.util.GregorianCalendar,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bucket < (factorTable.get(user.getAccountId()).numberOfPostsPerMonth.length)) { (factorTable.get(user.getAccountId()).numberOfPostsPerMonth[bucket])++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1038/buggy-version/ldbc_socialnet_dbgen.src.main.java.ldbc.socialnet.dbgen.generator.ScalableGenerator.java", "BodyUseAPI": ["ldbc.socialnet.dbgen.generator.ReducedUserProfile.getAccountId()", "java.util.HashMap<java.lang.Long, ReducedUserProfile.Counts>.get(user.getAccountId())"], "Fixed commit": "ab3c2a58c4a746a31e76251f86bffc17305dcad7", "Url": "https://api.github.com/repos/ldbc/ldbc_socialnet_bm", "Date": "2014-05-22T16:40:33Z"},
{"Line": "=>1127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ldbc.socialnet.dbgen.generator.PhotoGenerator.generatePhoto(ldbc.socialnet.dbgen.generator.ReducedUserProfile,ldbc.socialnet.dbgen.generator.Group,int,long)", "ldbc.socialnet.dbgen.generator.DateGenerator.getNumberOfMonths(java.util.GregorianCalendar,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bucket < (factorTable.get(photo.getAuthorId()).numberOfPostsPerMonth.length)) { (factorTable.get(photo.getAuthorId()).numberOfPostsPerMonth[bucket])++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1038/buggy-version/ldbc_socialnet_dbgen.src.main.java.ldbc.socialnet.dbgen.generator.ScalableGenerator.java", "BodyUseAPI": ["ldbc.socialnet.dbgen.generator.Photo.getAuthorId()", "java.util.HashMap<java.lang.Long, ReducedUserProfile.Counts>.get(photo.getAuthorId())"], "Fixed commit": "ab3c2a58c4a746a31e76251f86bffc17305dcad7", "Url": "https://api.github.com/repos/ldbc/ldbc_socialnet_bm", "Date": "2014-05-22T16:40:33Z"},
{"Line": "=>1064", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ldbc.socialnet.dbgen.generator.CommentGenerator.createComment(ldbc.socialnet.dbgen.util.RandomGeneratorFarm,long,ldbc.socialnet.dbgen.generator.Post,replyCandidates.get(replyIndex),ldbc.socialnet.dbgen.generator.ReducedUserProfile)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bucket < (factorTable.get(comment.getAuthorId()).numberOfPostsPerMonth.length)) { (factorTable.get(comment.getAuthorId()).numberOfPostsPerMonth[bucket])++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1038/buggy-version/ldbc_socialnet_dbgen.src.main.java.ldbc.socialnet.dbgen.generator.ScalableGenerator.java", "BodyUseAPI": ["ldbc.socialnet.dbgen.generator.Comment.getAuthorId()", "java.util.HashMap<java.lang.Long, ReducedUserProfile.Counts>.get(comment.getAuthorId())"], "Fixed commit": "ab3c2a58c4a746a31e76251f86bffc17305dcad7", "Url": "https://api.github.com/repos/ldbc/ldbc_socialnet_bm", "Date": "2014-05-22T16:40:33Z"},
{"Line": "=>1252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ldbc.socialnet.dbgen.generator.DateGenerator.getNumberOfMonths(java.util.GregorianCalendar,int,int)", "java.util.Iterator<ldbc.socialnet.dbgen.generator.Post>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bucket < (factorTable.get(groupPost.getAuthorId()).numberOfPostsPerMonth.length)) { (factorTable.get(groupPost.getAuthorId()).numberOfPostsPerMonth[bucket])++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1038/buggy-version/ldbc_socialnet_dbgen.src.main.java.ldbc.socialnet.dbgen.generator.ScalableGenerator.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Long, ReducedUserProfile.Counts>.get(groupPost.getAuthorId())", "ldbc.socialnet.dbgen.generator.Post.getAuthorId()"], "Fixed commit": "ab3c2a58c4a746a31e76251f86bffc17305dcad7", "Url": "https://api.github.com/repos/ldbc/ldbc_socialnet_bm", "Date": "2014-05-22T16:40:33Z"},
{"Line": "=>1286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ldbc.socialnet.dbgen.generator.CommentGenerator.createComment(ldbc.socialnet.dbgen.util.RandomGeneratorFarm,long,ldbc.socialnet.dbgen.generator.Post,replyCandidates.get(replyIndex),ldbc.socialnet.dbgen.generator.Group)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bucket < (factorTable.get(comment.getAuthorId()).numberOfPostsPerMonth.length)) { (factorTable.get(comment.getAuthorId()).numberOfPostsPerMonth[bucket])++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1038/buggy-version/ldbc_socialnet_dbgen.src.main.java.ldbc.socialnet.dbgen.generator.ScalableGenerator.java", "BodyUseAPI": ["ldbc.socialnet.dbgen.generator.Comment.getAuthorId()", "java.util.HashMap<java.lang.Long, ReducedUserProfile.Counts>.get(comment.getAuthorId())"], "Fixed commit": "ab3c2a58c4a746a31e76251f86bffc17305dcad7", "Url": "https://api.github.com/repos/ldbc/ldbc_socialnet_bm", "Date": "2014-05-22T16:40:33Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (id != null) { return eventIdToClientId.get(id); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7830/buggy-version/src.main.java.com.pryv.api.EventsSupervisor.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "9c196b4cb41116476824a4b6faaa9f47b0cfba89", "Url": "https://api.github.com/repos/pryv/lib-java", "Date": "2016-04-13T12:20:31Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (valueAsString != null) { java.lang.StringBuffer newDate = new java.lang.StringBuffer(\"new Date(\").append(org.dojoserverfaces.util.Helper.makeStringVar(valueAsString.replaceAll(\"-\", \"/\"))).append(')'); return newDate.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1582/buggy-version/dojoserverfaces-libraries.dojoserverfaces-library-standard.src.main.java.org.dojoserverfaces.component.html.form.DateTextBox.java", "BodyUseAPI": ["java.lang.StringBuffer.append(org.dojoserverfaces.util.Helper.makeStringVar(valueAsString.replaceAll(\"-\", \"/\")))", "java.lang.StringBuffer.append(char)", "org.dojoserverfaces.util.Helper.makeStringVar(java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "d999eec1f2a1d8adabe708c0733ad3131698e2ac", "Url": "https://api.github.com/repos/kennas/DojoServerFaces", "Date": "2011-07-28T05:32:23Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentBufferSize) == (bufferSize)) { currentBufferSize = 2 * (bufferSize); }else { copy(buffer, bufferSize, bufferSize, 0); offsetBuffer = bufferSize; currentBufferSize = 2 * (bufferSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5212/buggy-version/spring-batch-regexfileitemreader.src.main.java.org.springframework.batch.item.file.RegexFileItemReader.java", "BodyUseAPI": [], "Fixed commit": "9c7e4743c075e0d4119f9b904846571cd5733bdf", "Url": "https://api.github.com/repos/daprog/spring-batch-extensions", "Date": "2014-07-26T20:50:49Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resultExercise.getFailCount()) == 0) { android.widget.TextView reviewTextView = ((android.widget.TextView) (findViewById(R.id.review))); reviewTextView.setText(R.string.resulNoErrors); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3616/buggy-version/app.src.main.java.com.comoelagua.android.braille.ResultsExercisesActivity.java", "BodyUseAPI": [], "Fixed commit": "078bc517fa9242e1ed7b8f5baf71ace6b0cd4fdb", "Url": "https://api.github.com/repos/mariouged/com.comoelagua.android.braille", "Date": "2016-02-05T20:12:48Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gh4a.widget.VerticalTextView.getLayout()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (layout == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3690/buggy-version/src.com.gh4a.widget.VerticalTextView.java", "BodyUseAPI": [], "Fixed commit": "133a1f32d4e761bca6920889a50932a945f54ef5", "Url": "https://api.github.com/repos/maniac103/gh4a", "Date": "2014-09-13T10:23:18Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obj1 instanceof java.lang.String) || (obj2 instanceof java.lang.String)) { return org.eclipse.birt.data.engine.script.ScriptEvalUtil.compareAsString(obj1, obj2, compareHints); }else throw new org.eclipse.birt.data.engine.core.DataException(org.eclipse.birt.data.engine.i18n.ResourceConstants.BAD_COMPARE_EXPR, new java.lang.Object[]{ obj1, obj2 });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2658/buggy-version/data.org.eclipse.birt.data.src.org.eclipse.birt.data.engine.script.ScriptEvalUtil.java", "BodyUseAPI": ["org.eclipse.birt.data.engine.script.ScriptEvalUtil.compareAsString(java.lang.Object,java.lang.Object,org.eclipse.birt.data.engine.expression.CompareHints)"], "Fixed commit": "fa5e7cac2809c2aee2a7dd63db0bb1308e4fb536", "Url": "https://api.github.com/repos/sguan-actuate/birt", "Date": "2013-10-09T07:45:07Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Looper.myLooper()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (looper == null) looper = android.os.Looper.getMainLooper();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4513/buggy-version/lib.src.main.java.net.ypresto.androidtranscoder.MediaTranscoder.java", "BodyUseAPI": [], "Fixed commit": "beeb5c428bec0366e85c40a956f00bf1868a33fa", "Url": "https://api.github.com/repos/ypresto/android-transcoder", "Date": "2014-11-11T04:46:58Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.go2.daemon.PhishTankInterface.create(pt.go2.fileio.Configuration,pt.go2.storage.BannedUrlList)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (pi != null) watchdog.register(pi, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8369/buggy-version/src.main.java.pt.go2.application.Server.java", "BodyUseAPI": ["pt.go2.daemon.WatchDog.register(pt.go2.daemon.PhishTankInterface,boolean)"], "Fixed commit": "fb40e5db68d9b534bf9a01c1520dc7e79cf81ca6", "Url": "https://api.github.com/repos/vilaca/UrlShortener", "Date": "2014-10-29T23:31:45Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (set != null) { java.util.Iterator it = set.iterator(); while (it.hasNext()) { android.util.Log.i(\"1234567\", it.next().toString()); } android.preference.MultiSelectListPreference prefer = ((android.preference.MultiSelectListPreference) (preference)); prefer.setValues(set); return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7895/buggy-version/app.src.main.java.com.PATHnwei.news.SettingActivity.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.iterator()", "android.preference.MultiSelectListPreference.setValues(java.util.Set<java.lang.String>)"], "Fixed commit": "3efa3df0b98bb8a7467c306925cb8ddeb1a1fcfc", "Url": "https://api.github.com/repos/lixw1021/News", "Date": "2017-08-17T03:17:51Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<P>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (numPeaks == 0) return allRefinedPeaks;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2392/buggy-version/algorithms.core.src.main.java.net.imglib2.algorithm.localextrema.SubpixelLocalization.java", "BodyUseAPI": [], "Fixed commit": "35171621ba9694b0a22730484b5ccdd7ad24d3b5", "Url": "https://api.github.com/repos/imglib/imglib", "Date": "2014-10-06T08:10:00Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((conn.getResponseCode()) == 200) { response = org.mule.util.IOUtils.toString(conn.getInputStream()); }else { response = org.mule.util.IOUtils.toString(conn.getErrorStream()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5994/buggy-version/modules.devkit-support.src.main.java.org.mule.security.oauth.util.HttpUtilImpl.java", "BodyUseAPI": ["java.net.HttpURLConnection.getErrorStream()", "java.net.HttpURLConnection.getInputStream()", "org.mule.util.IOUtils.toString(java.io.InputStream)", "org.mule.util.IOUtils.toString(java.io.InputStream)"], "Fixed commit": "b3c8b1919ee4c7de2e1bd556102703bae773efa8", "Url": "https://api.github.com/repos/mcoaker/mule", "Date": "2014-04-14T16:19:47Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.mule.security.oauth.util.HttpUtilImpl.logger.isDebugEnabled()) { org.mule.security.oauth.util.HttpUtilImpl.logger.debug(java.lang.String.format(\"Received [%d] for body [%s]\", conn.getResponseCode(), response)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5994/buggy-version/modules.devkit-support.src.main.java.org.mule.security.oauth.util.HttpUtilImpl.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "b3c8b1919ee4c7de2e1bd556102703bae773efa8", "Url": "https://api.github.com/repos/mcoaker/mule", "Date": "2014-04-14T16:19:47Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == 0) if ((tableIdx.get(i).fromReset) == reset) { loadnow = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5817/buggy-version/src.telemetry.SatPayloadTable.java", "BodyUseAPI": ["telemetry.SortedArrayList<telemetry.TableSeg>.get(int)"], "Fixed commit": "ccc876d5112355df8e541049d297c8256b66dbe6", "Url": "https://api.github.com/repos/ac2cz/FoxTelem", "Date": "2016-05-08T00:10:08Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (routePoints) { paint.setStrokeCap(Cap.BUTT); }else { paint.setStrokeCap(Cap.ROUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2964/buggy-version/OsmAnd.src.net.osmand.plus.views.GPXLayer.java", "BodyUseAPI": [], "Fixed commit": "82104f76700ece436df43140c9e6a4f3a535e6c6", "Url": "https://api.github.com/repos/Bars107/Osmand", "Date": "2014-06-26T12:57:02Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((factors.size()) > 0) { double firstFactor = factors.get(0); for (java.lang.Double factor : factors) if (firstFactor != factor) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6388/buggy-version/src.nl.tudelft.otsim.Utilities.TimeScaleFunction.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Double>.get(int)"], "Fixed commit": "c3e1394c89d035a22cb652ed126235ab8cc4468b", "Url": "https://api.github.com/repos/OTSim/OTSim", "Date": "2014-01-15T11:30:51Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firmwareVersion) > 4) buf.put(((byte) (jitterLevel)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2167/buggy-version/AppCode.RSMControl.app.src.main.java.org.kemerelab.rsmcontrol.RSMDevice.java", "BodyUseAPI": [], "Fixed commit": "7290fb568ef9b1fc04a1028b7844043085d2d0f5", "Url": "https://api.github.com/repos/kemerelab/RodentDBS", "Date": "2015-10-05T18:39:56Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflexo.foundation.viewpoint.EditionSchemeParameter.getDependancies()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dependancies != null) { for (org.openflexo.foundation.viewpoint.EditionSchemeParameter dep : dependancies) { org.openflexo.fib.model.FIBComponent dependingComponent = widgets.get(dep); uriPanel.tf.addToExplicitDependancies(new org.openflexo.fib.model.FIBDependancy(dependingComponent)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1351/buggy-version/flexodesktop.modules.flexovieweditor.src.main.java.org.openflexo.ve.controller.action.ParametersRetriever.java", "BodyUseAPI": [], "Fixed commit": "7d3f5ad32514fb5d635e62a33cb0f9fd62500f5b", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2012-04-03T14:16:12Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(javassist.Modifier.isAbstract(m.getModifiers()))) { m.insertBefore(((((((sk.anivit.stacktracegen.recording.DiagramRecorder.class.getName()) + \".methodCalled(\\\"\") + (ct.getName())) + \":\") + (m.getName())) + \"\\\");\")); m.insertAfter(((sk.anivit.stacktracegen.recording.DiagramRecorder.class.getName()) + \".methodReturned();\")); log.fine((((\"Method listener \" + (m.getDeclaringClass())) + \":\") + (m.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/606/buggy-version/src.main.java.sk.anivit.stacktracegen.SDInjector.java", "BodyUseAPI": ["javassist.CtMethod.getName()", "javassist.CtMethod.insertAfter(java.lang.String)", "java.util.logging.Logger.fine((((\"Method listener \" + (m.getDeclaringClass())) + \":\") + (m.getName())))", "javassist.CtMethod.getName()", "javassist.CtMethod.insertBefore(((((((sk.anivit.stacktracegen.recording.DiagramRecorder.class.getName()) + \".methodCalled(\\\"\") + (ct.getName())) + \":\") + (m.getName())) + \"\\\");\"))", "javassist.CtMethod.getDeclaringClass()"], "Fixed commit": "678ff03a6c7923788579bd8df5ced401675dd876", "Url": "https://api.github.com/repos/sherif181/java-sequence-diagram-generator", "Date": "2015-01-05T12:23:00Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stanfy.enroscar.beans.BeansManager.get(context).getContainer().getBean(SDKDependentUtilsFactory.BEAN_NAME,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (factory == null) { throw new java.lang.IllegalStateException((\"SDKDependentUtilsFactory is not defined. \" + \"Either try DefaultBeansManager from Enroscar Assist or set your put(SDKDependentUtilsFactory.class) call to be the first in beans definitions\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/438/buggy-version/sdk-dep.src.main.java.com.stanfy.enroscar.sdkdep.SdkDepUtils.java", "BodyUseAPI": [], "Fixed commit": "786f545dceb571b5c6e147ecbc81fa542be92cbf", "Url": "https://api.github.com/repos/stanfy/enroscar", "Date": "2013-04-22T15:11:28Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<bwyap.familyfeud.render.component.RenderableString>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((a.getText().length()) > 11) a.setSize(((int) (100 * (9.0 / ((a.getText().length()) * 0.9))))); else if ((a.getText().length()) > 7) a.setSize(((int) (100 * (9.0 / (a.getText().length())))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/861/buggy-version/src.bwyap.familyfeud.render.state.play.RenderQuestionSet.java", "BodyUseAPI": ["bwyap.familyfeud.render.component.RenderableString.getText()", "a.getText().length()", "a.getText().length()", "a.getText().length()", "bwyap.familyfeud.render.component.RenderableString.getText()", "bwyap.familyfeud.render.component.RenderableString.setSize(((int) (100 * (9.0 / (a.getText().length())))))", "bwyap.familyfeud.render.component.RenderableString.setSize(((int) (100 * (9.0 / ((a.getText().length()) * 0.9)))))", "bwyap.familyfeud.render.component.RenderableString.getText()"], "Fixed commit": "c19ade7f1925aabf1fff2f892c3ab4520f0b8c3c", "Url": "https://api.github.com/repos/bwyap/java-familyfeud", "Date": "2017-06-29T05:13:38Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<bwyap.familyfeud.render.component.RenderableString>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((a.getText().length()) > 11) a.setSize(((int) (100 * (8.0 / ((a.getText().length()) * 0.9))))); else if ((a.getText().length()) > 7) a.setSize(((int) (100 * (8.0 / (a.getText().length())))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/861/buggy-version/src.bwyap.familyfeud.render.state.play.RenderQuestionSet.java", "BodyUseAPI": ["bwyap.familyfeud.render.component.RenderableString.setSize(((int) (100 * (8.0 / ((a.getText().length()) * 0.9)))))", "bwyap.familyfeud.render.component.RenderableString.getText()", "bwyap.familyfeud.render.component.RenderableString.getText()", "bwyap.familyfeud.render.component.RenderableString.setSize(((int) (100 * (8.0 / (a.getText().length())))))", "a.getText().length()", "bwyap.familyfeud.render.component.RenderableString.getText()", "a.getText().length()", "a.getText().length()"], "Fixed commit": "c19ade7f1925aabf1fff2f892c3ab4520f0b8c3c", "Url": "https://api.github.com/repos/bwyap/java-familyfeud", "Date": "2017-06-29T05:13:38Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((evilKeyHoldoff) > 0) { --(evilKeyHoldoff); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7800/buggy-version/src.eip_game.EIP_Game.java", "BodyUseAPI": [], "Fixed commit": "e3a78e25c9899aa90d5f966d1e75ce43eafcb8d3", "Url": "https://api.github.com/repos/Fret24/EIP_Game", "Date": "2016-02-22T04:52:06Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListener) != null) { mListener.stopDownLoadAnimation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5633/buggy-version/app.src.main.java.com.rocdev.guardianreader.fragments.ArticleFragment.java", "BodyUseAPI": [], "Fixed commit": "b4d257a2a9bab51d2cf6163ec9065a6c98125b74", "Url": "https://api.github.com/repos/pieeet/GuardianReader", "Date": "2017-06-24T06:21:03Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.Executors.newFixedThreadPool(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(writerService.isTerminated())) { writerService.shutdownNow(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5583/buggy-version/V2.kafka.src.main.java.com.neverwinterdp.kafka.tool.StabilityCheckTool.java", "BodyUseAPI": ["java.util.concurrent.ExecutorService.shutdownNow()"], "Fixed commit": "0dcd793bc9a69e910829b1ca5a8ac3ca464dd37e", "Url": "https://api.github.com/repos/DemandCube/Scribengin", "Date": "2015-03-03T12:52:01Z"},
{"Line": "=>1299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nameIdEntry.getValue()) >= 0) { final com.orientechnologies.orient.core.storage.fs.OFileClassic fileClassic = files.get(externalFileId(nameIdEntry.getValue())); final java.lang.String fileSystemName = fileClassic.getName(); final com.orientechnologies.orient.core.storage.cache.local.OWOWCache.NameFileIdEntry nameFileIdEntry = new com.orientechnologies.orient.core.storage.cache.local.OWOWCache.NameFileIdEntry(nameIdEntry.getKey(), nameIdEntry.getValue(), fileSystemName); writeNameIdEntry(v2NameIdMapHolder, nameFileIdEntry, false); }else { final com.orientechnologies.orient.core.storage.cache.local.OWOWCache.NameFileIdEntry nameFileIdEntry = new com.orientechnologies.orient.core.storage.cache.local.OWOWCache.NameFileIdEntry(nameIdEntry.getKey(), nameIdEntry.getValue(), \"\"); writeNameIdEntry(v2NameIdMapHolder, nameFileIdEntry, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3840/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.cache.local.OWOWCache.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Integer>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getKey()", "com.orientechnologies.orient.core.storage.cache.local.OWOWCache.externalFileId(java.lang.Integer)", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getValue()", "com.orientechnologies.common.collection.closabledictionary.OClosableLinkedContainer<java.lang.Long, com.orientechnologies.orient.core.storage.fs.OFileClassic>.get(long)"], "Fixed commit": "7c71678317192a4273e4ee26c2ef17db1330276d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-05-22T12:38:45Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getChildCount()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8017/buggy-version/flexiblelistview.src.main.java.cn.appleye.flexiblelistview.FlexibleListView.java", "BodyUseAPI": [], "Fixed commit": "ed3547cb00dda3af7fd62942c6bff40dec8c5938", "Url": "https://api.github.com/repos/newhope1106/flexibleListView", "Date": "2016-12-20T09:05:16Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((player.attributes) != null) && (!(player.attributes.isEmpty()))) { energy.value = ((java.lang.Integer) (player.attributes.get(\"energy\"))); mana.value = ((java.lang.Integer) (player.attributes.get(\"mana\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6161/buggy-version/src.main.java.com.snapgames.gdj.gdj105.PlayState.java", "BodyUseAPI": ["player.attributes.get(java.lang.String)", "player.attributes.get(java.lang.String)"], "Fixed commit": "be64b51933cd71bed5e8e9630f1a2cbd0514e315", "Url": "https://api.github.com/repos/SnapGames/GDJ105", "Date": "2017-10-02T08:51:30Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tableMatcher.getMatch().group(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(tableString)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6621/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.inbound.mysql.dbsync.SimpleDdlParser.java", "BodyUseAPI": [], "Fixed commit": "eeaf5ce910a2d209670479534be387e1fe7c544f", "Url": "https://api.github.com/repos/gewanbo/canalKafka", "Date": "2015-04-30T03:06:10Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang.StringUtils.split(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((names.length) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6621/buggy-version/parse.src.main.java.com.alibaba.otter.canal.parse.inbound.mysql.dbsync.SimpleDdlParser.java", "BodyUseAPI": [], "Fixed commit": "eeaf5ce910a2d209670479534be387e1fe7c544f", "Url": "https://api.github.com/repos/gewanbo/canalKafka", "Date": "2015-04-30T03:06:10Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["currentNote.getTime().minusSeconds(((int) (distanceMatrix.getDuration())))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (now.isAfter(departTime)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4539/buggy-version/core.src.main.java.net.notifly.core.service.BackgroundService.java", "BodyUseAPI": [], "Fixed commit": "4f83f282180b816776c89741caa0020b9208972e", "Url": "https://api.github.com/repos/oryanm/Notifly", "Date": "2014-04-06T20:37:29Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (nextColonIndex >= 0) { java.lang.String possibleStatus = path.substring(0, nextColonIndex); if (possibleStatus.equalsIgnoreCase(\"p\")) { status = java.net.HttpURLConnection.HTTP_MOVED_PERM; }else if (possibleStatus.equalsIgnoreCase(\"t\")) { status = java.net.HttpURLConnection.HTTP_MOVED_TEMP; }else { try { status = java.lang.Integer.parseInt(possibleStatus); path = path.substring(possibleStatus.length()); } catch (java.lang.NumberFormatException nfe) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8627/buggy-version/asta4d-web.src.main.java.com.astamuse.asta4d.web.dispatch.request.transformer.DefaultStringTransformer.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "c579ef99278105ae185af9122531437c644cf405", "Url": "https://api.github.com/repos/astamuse/asta4d", "Date": "2013-08-01T09:49:02Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["conv.getNode1().getParent()", "acg.getConversions().get(beast.util.Randomizer.nextInt(acg.getConvCount()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((conv.getNode2()) == parent) conv.setNode2(sister);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/786/buggy-version/src.bacter.operators.unrestricted.ClonalFrameConversionSwap.java", "BodyUseAPI": ["bacter.Conversion.setNode2(beast.evolution.tree.Node)"], "Fixed commit": "33f6fcceb4bf27baf0a0bcf45e4565a41c1feb07", "Url": "https://api.github.com/repos/tgvaughan/bacter", "Date": "2015-03-09T01:20:39Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bacter.operators.unrestricted.ClonalFrameConversionSwap.getSibling(newConv.getNode1())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((newConv.getNode2()) == sister) newConv.setNode2(parent); else newConv.setNode2(sister);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/786/buggy-version/src.bacter.operators.unrestricted.ClonalFrameConversionSwap.java", "BodyUseAPI": ["bacter.Conversion.setNode2(beast.evolution.tree.Node)", "bacter.Conversion.setNode2(beast.evolution.tree.Node)"], "Fixed commit": "33f6fcceb4bf27baf0a0bcf45e4565a41c1feb07", "Url": "https://api.github.com/repos/tgvaughan/bacter", "Date": "2015-03-09T01:20:39Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exists == false) { list.add(new DatabaseElement(rs.getLong(\"id\"), rs.getString(\"name\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6386/buggy-version/src.DatabaseCon.java", "BodyUseAPI": [], "Fixed commit": "7e81c67a4d8cc35adc6a47bcbdbbcd7fdf13d2ee", "Url": "https://api.github.com/repos/therealstan/SE_PROJECT", "Date": "2015-05-04T08:59:19Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2955/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "af2797745ef6f8c1d84e565205d7a3822f88d67a", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>1196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.st_ddt.crazylogin.CrazyLogin.getTempBanned(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (date == null) return de.st_ddt.crazylogin.DateFormat.format(new java.util.Date(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7490/buggy-version/CrazyLogin.src.de.st_ddt.crazylogin.CrazyLogin.java", "BodyUseAPI": [], "Fixed commit": "385a399eee1ec1ecd172eb0dcbfef1ae5d919962", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-06-03T13:57:30Z"},
{"Line": "=>1181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.util.Date>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (date == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7490/buggy-version/CrazyLogin.src.de.st_ddt.crazylogin.CrazyLogin.java", "BodyUseAPI": [], "Fixed commit": "385a399eee1ec1ecd172eb0dcbfef1ae5d919962", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-06-03T13:57:30Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((nextTaskType.equals(PingTask.TYPE)) || (nextTaskType.equals(DnsLookupTask.TYPE))) || (nextTaskType.equals(TracerouteTask.TYPE))) || (nextTaskType.equals(UDPBurstTask.TYPE))) { return false; }else if ((getDataLimit()) == 0) { return true; }else if (((getDataLimit()) == ((50 * 1024) * 1024)) && (nextTaskType.equals(TCPThroughputTask.TYPE))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2962/buggy-version/android.src.com.mobiperf.BatteryCapPowerManager.java", "BodyUseAPI": ["java.lang.String.equals(TCPThroughputTask.TYPE)"], "Fixed commit": "76177f1c8850d715d295c9c92c3c28ac86f26b45", "Url": "https://api.github.com/repos/sanaerosen/MobiPerf", "Date": "2014-01-28T04:12:28Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.aliyun.fs.oss.blk.JetOssFileSystemStore.pathToKey(com.aliyun.fs.oss.blk.Path)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((key.length()) == 0) { return new com.aliyun.fs.oss.blk.OssFileSystem.OssFileStatus(f.makeQualified(this), INode.DIRECTORY_INODE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6943/buggy-version/core.src.main.java.com.aliyun.fs.oss.blk.OssFileSystem.java", "BodyUseAPI": [], "Fixed commit": "7d0e6fafa0f66269fb5543aba82ed507cf67ed00", "Url": "https://api.github.com/repos/aliyun/aliyun-emapreduce-sdk", "Date": "2015-09-26T07:12:01Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.getHand().visibleHand().isThreeOfAKind()) { has3 = p.getHand().visibleHand().isThreeOfAKind(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3538/buggy-version/src.main.java.ca.carleton.poker.strategy.AIStrategy.java", "BodyUseAPI": ["p.getHand().visibleHand().isThreeOfAKind()", "p.getHand().visibleHand()", "ca.carleton.poker.game.Player.AIPlayer.getHand()"], "Fixed commit": "1ffd7ec3ee7df51e2440249d32eebf3094cbec14", "Url": "https://api.github.com/repos/CD11/SeleniumPoker", "Date": "2017-12-09T16:49:31Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.knime.knip.core.ui.imgviewer.events.PlaneSelectionEvent.getPlanePos()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sel[i]) <= (m_currentLabeling.realMax(i))) seld[i] = sel[i]; else seld[i] = ((long) (m_currentLabeling.realMax(i)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4356/buggy-version/org.knime.knip.io.src.org.knime.knip.io.nodes.annotation.edit.control.LabelingEditorManager.java", "BodyUseAPI": ["net.imglib2.labeling.Labeling<java.lang.String>.realMax(int)"], "Fixed commit": "239356d358d61dff0b249b13b16ffe9bcec3a522", "Url": "https://api.github.com/repos/knime-ip/knip", "Date": "2015-01-26T14:08:17Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.hasProperty(VdbLexicon.DataRole.MAPPED_ROLE_NAMES)) { javax.jcr.Property property = node.getProperty(VdbLexicon.DataRole.MAPPED_ROLE_NAMES); javax.jcr.Value[] mappedRoleValues = property.getValues(); for (javax.jcr.Value value : mappedRoleValues) { writeTab(org.komodo.modeshape.visitor.VdbNodeVisitor.ElementTabValue.MAPPED_ROLE_NAME); writeElementWithText(VdbLexicon.ManifestIds.MAPPED_ROLE_NAME, value.getString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3462/buggy-version/komodo-modeshape-vdb.src.main.java.org.komodo.modeshape.visitor.VdbNodeVisitor.java", "BodyUseAPI": ["javax.jcr.Node.getProperty(VdbLexicon.DataRole.MAPPED_ROLE_NAMES)"], "Fixed commit": "3463ba60c4fd1cff8df156f2e8ee3143dd248dc0", "Url": "https://api.github.com/repos/mdrillin/komodo", "Date": "2017-07-21T17:13:25Z"},
{"Line": "=>802", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((idx.equals(ucar.unidata.idv.ui.DataSelectionWidget.USE_SELECTEDTIMES)) && ((lastDataChoice.getProperty(DataSelection.PROP_TIMESUBSET)) == null)) lastDataChoice.setProperty(DataSelection.PROP_TIMESUBSET, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3110/buggy-version/src.ucar.unidata.idv.ui.DataSelectionWidget.java", "BodyUseAPI": ["ucar.unidata.idv.ui.DataChoice.setProperty(DataSelection.PROP_TIMESUBSET,boolean)"], "Fixed commit": "d81fc59b21f62de064a8452574a0e26e56b2add4", "Url": "https://api.github.com/repos/jon4than/IDV", "Date": "2014-11-18T03:36:08Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8039/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "f2041ca57f21fbfdffb164cf66b1f90e66253b92", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-19T19:37:13Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((voices.getValue()) != null ? !(voices.getValue().equals(vote.voices.getValue())) : (vote.voices.getValue()) != null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6138/buggy-version/src.main.java.com.alphatrader.rest.Vote.java", "BodyUseAPI": [], "Fixed commit": "17d4cd3677b11a11383699f9f60781353fa7b11e", "Url": "https://api.github.com/repos/Alpha-Trader/AlphaTraderJavaRestApiLib", "Date": "2016-10-26T23:00:10Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (researchProductionRate == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3373/buggy-version/src.main.game.entities.structures.University.java", "BodyUseAPI": [], "Fixed commit": "e83f4ed0a9b0edfd0fc5abdf41d876a2df1a20ab", "Url": "https://api.github.com/repos/COP4331-OOP-Project/Pandamonium", "Date": "2017-03-14T20:59:56Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.Point.distance(marker.getLocation())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (distToThisPoint < 200.0) { shortestDistanceSoFar = distToThisPoint; nearestMarker = marker; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1020/buggy-version/StreamGUI.src.streamoutlining.ImageUtils.java", "BodyUseAPI": [], "Fixed commit": "467ecb71609661cc26031856069fa1170706a5b9", "Url": "https://api.github.com/repos/Kyle0Stream/StreamOutlineGUI", "Date": "2013-07-17T15:56:51Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (nation1.isNeutral()) { p.sendMessage(((org.bukkit.ChatColor.RED) + \"Your nation is neutral!\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3960/buggy-version/src.net.urbanmc.kingdomwars.command.subs.Start.java", "BodyUseAPI": [], "Fixed commit": "3da00715271b4bbddc4af0c1fe398e06756bc704", "Url": "https://api.github.com/repos/silverwolfg11/KingdomWars", "Date": "2016-09-09T21:48:09Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (log.hasError()) viewer.sendMessage(((Skript.SKRIPT_PREFIX) + (ch.njol.skript.util.Utils.replaceEnglishChatStyles(log.getError().getMessage()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3707/buggy-version/src.main.java.ch.njol.skript.ScriptLoader.java", "BodyUseAPI": ["ch.njol.skript.util.Utils.replaceEnglishChatStyles(log.getError().getMessage())", "org.bukkit.command.CommandSender.sendMessage(((Skript.SKRIPT_PREFIX) + (ch.njol.skript.util.Utils.replaceEnglishChatStyles(log.getError().getMessage()))))", "ch.njol.skript.log.ParseLogHandler.getError()", "log.getError().getMessage()"], "Fixed commit": "904efaa2e29f7509387b06f5279d3baf4f8170f8", "Url": "https://api.github.com/repos/SkriptLang/Skript", "Date": "2016-11-01T14:24:20Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (experience > 0) { this.experience = experience; }else { this.experience = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1520/buggy-version/project.project.src.game.Enemy.java", "BodyUseAPI": [], "Fixed commit": "49bbebe04c9210dd77a6fd426046983ce1f9eae7", "Url": "https://api.github.com/repos/eddyxq/233", "Date": "2017-11-20T05:12:40Z"},
{"Line": "=>781", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.tsIndexes) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8392/buggy-version/src.de.uka.ipd.idaho.im.imagine.plugins.basic.NavigationActionProvider.java", "BodyUseAPI": [], "Fixed commit": "7a2ee66b67fffa1f485b8c00ade2420fb7d868f8", "Url": "https://api.github.com/repos/gsautter/goldengate-imagine-plugins", "Date": "2015-09-10T19:09:52Z"},
{"Line": "=>984", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((imws.length) == 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8392/buggy-version/src.de.uka.ipd.idaho.im.imagine.plugins.basic.RegionActionProvider.java", "BodyUseAPI": [], "Fixed commit": "7a2ee66b67fffa1f485b8c00ade2420fb7d868f8", "Url": "https://api.github.com/repos/gsautter/goldengate-imagine-plugins", "Date": "2015-09-10T19:09:52Z"},
{"Line": "=>986", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList.get(int)", "blockWords[0].getPreviousWord()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((blockPrevWord != null) && (!(blockPrevWord.getTextStreamType().endsWith(imws[0].getTextStreamType())))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8392/buggy-version/src.de.uka.ipd.idaho.im.imagine.plugins.basic.RegionActionProvider.java", "BodyUseAPI": [], "Fixed commit": "7a2ee66b67fffa1f485b8c00ade2420fb7d868f8", "Url": "https://api.github.com/repos/gsautter/goldengate-imagine-plugins", "Date": "2015-09-10T19:09:52Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(org.apache.commons.lang.StringUtils.isBlank(r))) { ranges.add(new org.iplantc.de.server.IpRange(r)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3929/buggy-version/de-webapp.src.main.java.org.iplantc.de.server.IpRanges.java", "BodyUseAPI": [], "Fixed commit": "4b40541824940d43e75cdf8c92624575a4143522", "Url": "https://api.github.com/repos/sri2k1us/ui", "Date": "2016-07-06T01:21:03Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(profileCache.restoreUnlessInitialized())) { org.mozilla.gecko.background.common.log.Logger.warn(org.mozilla.gecko.background.healthreport.upload.AndroidSubmissionClient.LOG_TAG, \"Not enough profile information to compute current environment.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3264/buggy-version/src.main.java.org.mozilla.gecko.background.healthreport.upload.AndroidSubmissionClient.java", "BodyUseAPI": [], "Fixed commit": "f01126322c023b52b4cb655a9cf4ef927ec38131", "Url": "https://api.github.com/repos/mcomella/android-sync", "Date": "2013-09-26T22:14:34Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (params != null) { params = com.tikal.jenkins.plugins.multijob.PhaseJobsConfig.mergeParameters(params, new hudson.model.ParametersAction(new hudson.model.StringParameterValue(\"Multi-Job-Id\", createRandomString(12)))); }else { params = new hudson.model.ParametersAction(new hudson.model.StringParameterValue(\"Multi-Job-Id\", createRandomString(12))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6751/buggy-version/src.main.java.com.tikal.jenkins.plugins.multijob.PhaseJobsConfig.java", "BodyUseAPI": ["com.tikal.jenkins.plugins.multijob.PhaseJobsConfig.mergeParameters(hudson.model.ParametersAction,hudson.model.ParametersAction)"], "Fixed commit": "05abcd74f88d88a95113728858753f4bbb78ae66", "Url": "https://api.github.com/repos/harcher81/tikal-multijob-plugin", "Date": "2015-03-27T17:44:47Z"},
{"Line": "=>1586", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.comze_instancelabs.dragonescape.Main.dragons.get(arena)) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6956/buggy-version/src.com.comze_instancelabs.dragonescape.Main.java", "BodyUseAPI": [], "Fixed commit": "f842090b76b147fe920a9e7f50db06f793e0557b", "Url": "https://api.github.com/repos/instance01/Dragon-Escape", "Date": "2014-02-25T18:42:03Z"},
{"Line": "=>1493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.comze_instancelabs.dragonescape.Main.dragons.get(arena)) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6956/buggy-version/src.com.comze_instancelabs.dragonescape.Main.java", "BodyUseAPI": [], "Fixed commit": "f842090b76b147fe920a9e7f50db06f793e0557b", "Url": "https://api.github.com/repos/instance01/Dragon-Escape", "Date": "2014-02-25T18:42:03Z"},
{"Line": "=>1633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.comze_instancelabs.dragonescape.Main.dragons.get(arena)) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6956/buggy-version/src.com.comze_instancelabs.dragonescape.Main.java", "BodyUseAPI": [], "Fixed commit": "f842090b76b147fe920a9e7f50db06f793e0557b", "Url": "https://api.github.com/repos/instance01/Dragon-Escape", "Date": "2014-02-25T18:42:03Z"},
{"Line": "=>1539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.comze_instancelabs.dragonescape.Main.dragons.get(arena)) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6956/buggy-version/src.com.comze_instancelabs.dragonescape.Main.java", "BodyUseAPI": [], "Fixed commit": "f842090b76b147fe920a9e7f50db06f793e0557b", "Url": "https://api.github.com/repos/instance01/Dragon-Escape", "Date": "2014-02-25T18:42:03Z"},
{"Line": "=>688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.sadun.util.polling.DirectoryPoller.logger.isWarnEnabled()) { org.sadun.util.polling.DirectoryPoller.logger.warn(\"Unable to move file\", e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8571/buggy-version/src.main.java.org.sadun.util.polling.DirectoryPoller.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,java.io.FileNotFoundException)"], "Fixed commit": "457d7ac576024fcf7f97060ab2c4767eef9dcb7d", "Url": "https://api.github.com/repos/levelsbeyond/jpoller", "Date": "2013-09-05T00:22:47Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thewalletlist.addressbook.AddressEntry.getKind()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (kind == (AddressEntry.KIND_BITCOIN)) { prefix = \"bitcoin:\"; }else if (kind == (AddressEntry.KIND_LITECOIN)) { prefix = \"litecoin:\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4464/buggy-version/src.com.thewalletlist.addressbook.AddressDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "64e7a50e329143971559ccee28a2789e844fd02e", "Url": "https://api.github.com/repos/ogunden/bitcoin-address-book", "Date": "2013-04-02T02:29:57Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mContext.getContentResolver().query(ContactsContract.CommonDataKinds.Email.CONTENT_URI,<nulltype>,java.lang.String,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (contactsCursor != null) { while (contactsCursor.moveToNext()) { java.lang.String name = contactsCursor.getString(contactsCursor.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME)); java.lang.String email = contactsCursor.getString(contactsCursor.getColumnIndex(ContactsContract.CommonDataKinds.Email.DATA)); if ((name.contains(constraint)) || (email.contains(constraint))) { com.eclipsesource.json.JsonObject object = new com.eclipsesource.json.JsonObject(); object.add(BoxInvitee.FIELD_NAME, name); object.add(BoxInvitee.FIELD_EMAIL, email); filteredList.add(new com.box.androidsdk.share.internal.models.BoxInvitee(object)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1469/buggy-version/box-share-sdk.src.main.java.com.box.androidsdk.share.adapters.InviteeAdapter.java", "BodyUseAPI": ["android.database.Cursor.getColumnIndex(ContactsContract.CommonDataKinds.Email.DATA)", "android.database.Cursor.moveToNext()", "android.database.Cursor.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME)", "android.database.Cursor.getString(contactsCursor.getColumnIndex(ContactsContract.CommonDataKinds.Email.DATA))", "android.database.Cursor.getString(contactsCursor.getColumnIndex(ContactsContract.Contacts.DISPLAY_NAME))"], "Fixed commit": "aeadafe65b4286b844b3a902eaa3bc7dd79751a4", "Url": "https://api.github.com/repos/boxmoji/box-android-share-sdk", "Date": "2017-07-29T00:40:35Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ret == null) { android.view.LayoutInflater inflater = ((android.view.LayoutInflater) (getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE))); ret = inflater.inflate(R.layout.app_item, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7505/buggy-version/src.de.onyxbits.listmyapps.AppAdapter.java", "BodyUseAPI": [], "Fixed commit": "5065990868de934c2c9aa5dfce01b69b362eb94e", "Url": "https://api.github.com/repos/onyxbits/listmyaps", "Date": "2013-08-31T21:22:37Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.manuelpeinado.multichoiceadapter.extras.actionbarsherlock.MultiChoiceAdapterHelper.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (context instanceof com.actionbarsherlock.app.SherlockFragmentActivity) { actionMode = ((com.actionbarsherlock.app.SherlockFragmentActivity) (context)).startActionMode(((com.actionbarsherlock.view.ActionMode.Callback) (owner))); }else { throw new java.lang.IllegalStateException(\"List view must belong to a SherlockActivity or a SherlockFragmentActivity\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8403/buggy-version/extras.actionbarsherlock.src.com.manuelpeinado.multichoiceadapter.extras.actionbarsherlock.MultiChoiceAdapterHelper.java", "BodyUseAPI": [], "Fixed commit": "bfdea281bc290ec10d8e7f337f6bd8b5ccdac932", "Url": "https://api.github.com/repos/grodin/MultiChoiceAdapter", "Date": "2014-02-17T18:28:19Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(m_processes.isEmpty())) { m_processes.remove(((m_processes.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7874/buggy-version/src.fakescript.running.java", "BodyUseAPI": ["java.util.ArrayList<fakescript.processor>.remove(((m_processes.size()) - 1))", "java.util.ArrayList<fakescript.processor>.size()"], "Fixed commit": "ee5e8eb36d0c7aa93bcdc8451f65424c8c385dfb", "Url": "https://api.github.com/repos/esrrhs/fakescript-java", "Date": "2017-06-08T07:29:11Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mDrawerLayout.isDrawerOpen(mRightLinearDrawer)) { mDrawerLayout.closeDrawer(mRightLinearDrawer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7424/buggy-version/src.com.jiahaoliuliu.android.myexpenses.MainActivity.java", "BodyUseAPI": ["android.support.v4.widget.DrawerLayout.closeDrawer(android.widget.LinearLayout)"], "Fixed commit": "f1a114855fb474f7beb735ef116c0bab97faad53", "Url": "https://api.github.com/repos/jiahaoliuliu/MyExpenses", "Date": "2013-09-15T11:00:13Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mindinformatics.gwt.domeo.client.ui.annotation.forms.IFormGenerator.getForm(org.mindinformatics.gwt.domeo.client.ui.annotation.forms.multipletargets.MultipleTargetsAnnotationFormsPanel,org.mindinformatics.gwt.domeo.model.MAnnotation)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (form instanceof org.mindinformatics.gwt.framework.src.IResizable) forms.add(form);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4515/buggy-version/src.org.mindinformatics.gwt.domeo.client.ui.annotation.forms.multipletargets.MultipleTargetsAnnotationFormsPanel.java", "BodyUseAPI": ["java.util.List<org.mindinformatics.gwt.domeo.client.ui.annotation.forms.AFormComponent>.add(org.mindinformatics.gwt.domeo.client.ui.annotation.forms.AFormComponent)"], "Fixed commit": "c7d3975e985cfafaf522b996c522eaca45e30164", "Url": "https://api.github.com/repos/domeo/DomeoClient", "Date": "2013-10-17T01:22:36Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.xbmc.kore.utils.Utils.isLollipopOrLater()) { android.support.v4.app.Fragment fragment = getSupportFragmentManager().findFragmentById(R.id.fragment_container); if (fragment != null) { sharedElementTransition = new org.xbmc.kore.utils.SharedElementTransition(); sharedElementTransition.setupExitTransition(this, fragment); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8625/buggy-version/app.src.main.java.org.xbmc.kore.ui.sections.video.TVShowsActivity.java", "BodyUseAPI": [], "Fixed commit": "e052c0a688afefe10fbcd25d10097c7bc24a213e", "Url": "https://api.github.com/repos/poisdeux/Kore", "Date": "2017-02-23T12:07:38Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listModel) == null) { updateListModelWhenRequired(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5075/buggy-version/flexodesktop.GUI.flexointerfacebuilder.src.main.java.org.openflexo.fib.view.widget.FIBMultipleValueWidget.java", "BodyUseAPI": [], "Fixed commit": "6537f2fcb816bdee11a4fbc0b979a824539ef94f", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-01-30T14:02:23Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (info.getChannel().isOpen()) { if (context != null) { context.fireChannelRead(idlePacket); info.get(us.myles.ViaVersion.protocols.protocol1_9to1_8.storage.MovementTracker.class).incrementIdlePacket(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2771/buggy-version/src.main.java.us.myles.ViaVersion.ViaIdleThread.java", "BodyUseAPI": ["info.get(us.myles.ViaVersion.protocols.protocol1_9to1_8.storage.MovementTracker.class).incrementIdlePacket()", "us.myles.ViaVersion.api.data.UserConnection.get(java.lang.Class)"], "Fixed commit": "8760b53a0a4cbcab9ed0135088548c2d3e1245bd", "Url": "https://api.github.com/repos/Matsv/ViaVersion", "Date": "2016-03-30T16:45:24Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.CALL_PHONE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4449/buggy-version/RuntimePermissions.app.src.main.java.sample.github.nisrulz.runtimepermissions.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "51cbe3136295e2d3060bdc2a6a248d3cacb50b9a", "Url": "https://api.github.com/repos/way2jatin/android-examples", "Date": "2017-06-08T08:25:45Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fileUpload.isInMemory()) { if (!(fileUpload.renameTo(tmpfile))) { throw new java.lang.RuntimeException((\"failed to place the upload file under the directory: \" + tmpDirectoryPath)); } }else { if (!(fileUpload.getFile().renameTo(tmpfile))) { decoder.removeHttpDataFromClean(fileUpload); throw new java.lang.RuntimeException((\"failed to place the upload file under the directory: \" + tmpDirectoryPath)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6722/buggy-version/src.netty.com.syncobjects.as.netty.RequestHandler.java", "BodyUseAPI": ["io.netty.handler.codec.http.multipart.HttpPostRequestDecoder.removeHttpDataFromClean(io.netty.handler.codec.http.multipart.FileUpload)", "fileUpload.getFile().renameTo(java.io.File)", "io.netty.handler.codec.http.multipart.FileUpload.getFile()", "io.netty.handler.codec.http.multipart.FileUpload.renameTo(java.io.File)"], "Fixed commit": "cdfc88ad86e5b18d68d74ab41378669edbd2fa9f", "Url": "https://api.github.com/repos/syncobjects/sync", "Date": "2016-03-15T05:33:47Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blockHeight < (nxt.Constants.AT_FIX_BLOCK_4)) { totalAmount = amount; }else { totalAmount += amount; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2249/buggy-version/src.java.nxt.at.AT_Controller.java", "BodyUseAPI": [], "Fixed commit": "52e5aa1bed29b44b1c8476ea3c6691b0c3a63cec", "Url": "https://api.github.com/repos/burst-team/burstcoin", "Date": "2016-03-06T05:02:34Z"},
{"Line": "=>407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blockHeight < (nxt.Constants.AT_FIX_BLOCK_4)) { totalAmount = nxt.at.AT_Controller.makeTransactions(at); }else { totalAmount += nxt.at.AT_Controller.makeTransactions(at); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2249/buggy-version/src.java.nxt.at.AT_Controller.java", "BodyUseAPI": [], "Fixed commit": "52e5aa1bed29b44b1c8476ea3c6691b0c3a63cec", "Url": "https://api.github.com/repos/burst-team/burstcoin", "Date": "2016-03-06T05:02:34Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getLineItemKey().equals(uk.ac.ebi.pride.gui.data.mztab.parser.MzTabSoftwareLineItemParsingHandler.MZTAB_SOFTWARE_ITEM_KEY)) { if ((getIndex()) == (uk.ac.ebi.pride.gui.data.mztab.parser.MzTabSoftwareLineItemParsingHandler.DEFAULT_INDEX)) { throw new uk.ac.ebi.pride.gui.data.mztab.parser.exceptions.LineItemParsingHandlerException(((((\"MISSING INDEX for '\" + (uk.ac.ebi.pride.gui.data.mztab.parser.MzTabSoftwareLineItemParsingHandler.MZTAB_SOFTWARE_ITEM_KEY)) + \"' at line '\") + lineNumber) + \"'\")); } return processEntry(context, lineNumber, offset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3735/buggy-version/src.main.java.uk.ac.ebi.pride.gui.data.mztab.parser.MzTabSoftwareLineItemParsingHandler.java", "BodyUseAPI": [], "Fixed commit": "6e5090d6cb9af4c7fa0591a35b067d5384568383", "Url": "https://api.github.com/repos/proteomexchange/px-submission-tool", "Date": "2016-07-12T08:33:39Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (conf == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7357/buggy-version/deduplication-document.deduplication-document-impl.src.main.java.pl.edu.icm.coansys.deduplication.document.DuplicateWorkDetectReduceService.java", "BodyUseAPI": [], "Fixed commit": "89f216677df77880cc1036e8605558518e258989", "Url": "https://api.github.com/repos/pdendek/CoAnSys", "Date": "2014-02-03T16:09:42Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.duke.cs.osprey.confspace.ConfSearch.nextConf()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (conf == null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4534/buggy-version/src.edu.duke.cs.osprey.control.GMECFinder.java", "BodyUseAPI": [], "Fixed commit": "47fdfc26130be00ba66ac9f697a041869a6cce33", "Url": "https://api.github.com/repos/donaldlab/OSPREY3", "Date": "2017-03-19T04:02:54Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.reqData.get(\"net\")) == null) || (this.reqData.get(\"net\").isEmpty())) { throw new app.kit.exception.RequestParamException(\"There is no net parameter.\"); }else if (((this.reqData.get(\"sta\")) == null) || (this.reqData.get(\"sta\").isEmpty())) { throw new app.kit.exception.RequestParamException(\"There is no sta parameter.\"); }else if (((this.reqData.get(\"cha\")) == null) || (this.reqData.get(\"cha\").isEmpty())) { throw new app.kit.exception.RequestParamException(\"There is no cha parameter.\"); }else if (((this.reqData.get(\"st\")) == null) || (this.reqData.get(\"st\").isEmpty())) { throw new app.kit.exception.RequestParamException(\"There is no st parameter.\"); }else if (((this.reqData.get(\"et\")) == null) || (this.reqData.get(\"et\").isEmpty())) { throw new app.kit.exception.RequestParamException(\"There is no et parameter.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3786/buggy-version/src.app.kit.service.http.seismic.TraceIssue.java", "BodyUseAPI": ["this.reqData.get(java.lang.String)", "this.reqData.get(\"sta\").isEmpty()", "this.reqData.get(java.lang.String)", "this.reqData.get(java.lang.String)", "this.reqData.get(java.lang.String)", "this.reqData.get(\"st\").isEmpty()", "this.reqData.get(\"et\").isEmpty()", "this.reqData.get(java.lang.String)", "this.reqData.get(java.lang.String)", "this.reqData.get(java.lang.String)", "this.reqData.get(\"cha\").isEmpty()", "this.reqData.get(java.lang.String)"], "Fixed commit": "4f2d1836da1d9f33ab4593611e229f59fb252636", "Url": "https://api.github.com/repos/jinguman/mangoJ", "Date": "2016-03-03T07:41:52Z"},
{"Line": "=>991", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((g.getFont().getSize()) != fSize) { g.setFont(new java.awt.Font(\"arial\", java.awt.Font.PLAIN, fSize)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3467/buggy-version/src.br.com.mvbos.ame.Window.java", "BodyUseAPI": ["java.awt.Graphics2D.setFont(java.awt.Font)"], "Fixed commit": "3bf5c08ba1936368c2804381cce18f206505b2f3", "Url": "https://api.github.com/repos/marcusbecker/AME-Array-Map-Editor", "Date": "2016-01-30T21:59:18Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { throw new java.io.IOException((\"Cannot find \" + jarUri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1967/buggy-version/product.java-agent.src.main.java.io.codekvast.javaagent.appversion.ManifestAppVersionStrategy.java", "BodyUseAPI": [], "Fixed commit": "57abf446982c64bade6a03ca68db78510c269c9f", "Url": "https://api.github.com/repos/crispab/codekvast", "Date": "2017-07-04T14:47:25Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(randomFile.createNewFile())) { java.lang.System.out.println(\"ERREUR CREATE TMPFILE\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3815/buggy-version/src.plm.universe.Entity.java", "BodyUseAPI": [], "Fixed commit": "5e79d72ca5673f19f05f7169dd856b5f8ce6ef13", "Url": "https://api.github.com/repos/oster/PLM", "Date": "2014-07-10T11:12:42Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isInChallenge) { java.lang.String ids = playerService.getAvailablePlayerIds(id); modelAndView.addObject(\"availables\", ids); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3496/buggy-version/src.main.java.eu.speedbadminton.pyramid.controller.PyramidController.java", "BodyUseAPI": [], "Fixed commit": "cf3e86f11ef2f9b7029f30a8bb00b1c40b1797dd", "Url": "https://api.github.com/repos/yoannmoranville/speed-pyramid", "Date": "2013-11-18T08:08:26Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (term instanceof it.unibz.krdb.obda.model.Variable) { it.unibz.krdb.obda.model.Variable v = ((it.unibz.krdb.obda.model.Variable) (term)); varlist.add(v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/198/buggy-version/vig-mappings-analyzer-2.src.main.java.it.unibz.inf.vig_mappings_analyzer.core.JoinableColumnsFinder.java", "BodyUseAPI": [], "Fixed commit": "45e62c3bfc63136f3f48b8664de74c168fcab6f2", "Url": "https://api.github.com/repos/ontop/vig", "Date": "2016-06-28T15:16:26Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((exFuncs) != null) { for (com.xmlcalabash.functions.XProcExtensionFunctionDefinition xf : exFuncs) { xf.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2633/buggy-version/src.main.java.com.xmlcalabash.core.XProcRuntime.java", "BodyUseAPI": [], "Fixed commit": "f79faac70804259e7329e97908f9c42fd4604173", "Url": "https://api.github.com/repos/fgeorges/xmlcalabash1", "Date": "2016-08-14T15:00:40Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTemplateEngineOption()) { optionsBuilder.templateEngine(this.templateEngine); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2042/buggy-version/src.main.java.org.asciidoctor.cli.AsciidoctorCliOptions.java", "BodyUseAPI": [], "Fixed commit": "bdcbda45132ee3f20a522fa7503b36edd4105edd", "Url": "https://api.github.com/repos/mojavelinux/asciidoctor-java-integration", "Date": "2013-07-01T17:24:51Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((((text != null) && (!(text.isEmpty()))) && (anchor != null)) && (!(anchor.isEmpty()))) { bag.add(tuples.newTupleNoCopy(java.util.Arrays.asList(text, anchor))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8409/buggy-version/snapshots.cloud9-contrib.src.main.org.wikipedia.pig.ExtractTemplate.java", "BodyUseAPI": ["org.apache.pig.data.DataBag.add(tuples.newTupleNoCopy(java.util.Arrays.asList(text, anchor)))", "org.apache.pig.data.TupleFactory.newTupleNoCopy(java.util.List<java.lang.String>)", "java.util.Arrays.asList(java.lang.String,java.lang.String)"], "Fixed commit": "2d8406685f6345df05223244ee22fbaa1597a379", "Url": "https://api.github.com/repos/antoine-tran/maven-repo", "Date": "2014-04-05T21:19:57Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.github.triploit.parser.Parser.tags.size()) == 0) io.github.triploit.parser.Parser.error(\"Syntax Error! Missing Tag!?\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7541/buggy-version/src.io.github.triploit.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "7bc77e3cb4b7129f0093ca70afc33e955f23d005", "Url": "https://api.github.com/repos/triploit/aml", "Date": "2017-04-14T19:39:23Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (fileSystem != null) { fileSystem.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4532/buggy-version/rakam-ui.src.main.java.org.rakam.ui.ScheduledTaskUIHttpService.java", "BodyUseAPI": ["java.nio.file.FileSystem.close()"], "Fixed commit": "a62d89cb26dd8a81629222c5df6f6be522c6b607", "Url": "https://api.github.com/repos/rakam-io/rakam", "Date": "2017-01-04T05:26:48Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.opengamma.util.rest.RestUtils.decodeQueryParams(javax.ws.rs.core.UriInfo,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(request.getObjectId().equals(getUrlId()))) { throw new java.lang.IllegalArgumentException((((\"Document objectId \" + (request.getObjectId())) + \" does not match URI \") + (getUrlId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7471/buggy-version/projects.OG-Master.src.main.java.com.opengamma.master.marketdatasnapshot.impl.DataMarketDataSnapshotResource.java", "BodyUseAPI": ["com.opengamma.master.marketdatasnapshot.MarketDataSnapshotHistoryRequest.getObjectId()"], "Fixed commit": "877308b7e0c26d2ece7737acd986427961e60500", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2013-03-06T14:56:21Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.updatecenter.common.Plugin.getLastRelease()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (pluginRelease != null) { removablePlugins.add(plugin.getKey()); for (org.sonar.updatecenter.common.Release child : pluginRelease.getChildren()) { removablePlugins.add(child.getKey()); } for (org.sonar.updatecenter.common.Release incomingDependencies : pluginRelease.getIncomingDependencies()) { removablePlugins.addAll(findLastReleasesWithDependencies(incomingDependencies.getArtifact().getKey())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3897/buggy-version/sonar-update-center-common.src.main.java.org.sonar.updatecenter.common.PluginReferential.java", "BodyUseAPI": ["org.sonar.updatecenter.common.Release.getChildren()", "org.sonar.updatecenter.common.Release.getIncomingDependencies()"], "Fixed commit": "3c1c33e132a21c6a02ec20a14aadd7a3e09aec0c", "Url": "https://api.github.com/repos/SonarSource/sonar-update-center", "Date": "2015-03-27T13:12:00Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (section == null) section = new me.eddiep.ChunkSection(chunkY, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7695/buggy-version/classicphysics.src.main.java.me.eddiep.ChunkEdit.java", "BodyUseAPI": [], "Fixed commit": "510ec83fb0bb7c6eac8f8653a392fb44dea4a90d", "Url": "https://api.github.com/repos/pupnewfster/Lavasurvival", "Date": "2016-01-10T21:04:38Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (extension != null) { name.append(\".\").append(extension); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3773/buggy-version/src.com.redhat.ceylon.compiler.typechecker.io.VFSArtifactProvider.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "4d55ac22901b85963fad6b6f5687507a521cdca5", "Url": "https://api.github.com/repos/ceylon/ceylon-spec", "Date": "2012-03-07T00:27:44Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.Integer, Student>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!((stud.advisingCourse.getID().charAt(0)) == 'S')) { java.lang.System.out.println((((\"!!!!!!!!!! Student \" + (stud.id)) + \" has \") + (stud.advisingCourse.getID()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7721/buggy-version/src.ResultsWriter.java", "BodyUseAPI": ["stud.advisingCourse.getID()", "java.io.PrintStream.println((((\"!!!!!!!!!! Student \" + (stud.id)) + \" has \") + (stud.advisingCourse.getID())))"], "Fixed commit": "519cc194d555cec44fd4072281337d4ff4adbf74", "Url": "https://api.github.com/repos/johngillett/Capstone", "Date": "2016-04-25T23:30:44Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.jmstudios.redmoon.service.ScreenFilterService.DEBUG) android.util.Log.i(com.jmstudios.redmoon.service.ScreenFilterService.TAG, \"Sending update broadcast\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8052/buggy-version/app.src.main.java.com.jmstudios.redmoon.service.ScreenFilterService.java", "BodyUseAPI": [], "Fixed commit": "005388a0df1c7256a49be5ef27abb7122f046e3b", "Url": "https://api.github.com/repos/Zoraver/red-moon", "Date": "2016-03-23T23:15:49Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getHttpRequest().isSecure()) { entity.setEmbedHtml(entity.getEmbedHtml().replaceAll(\"http://\", \"https://\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2255/buggy-version/gallery.gallery-war.src.main.java.com.silverpeas.gallery.web.GalleryResource.java", "BodyUseAPI": [], "Fixed commit": "fccd01cbfa98b5b1dbeee41adaa0add7e2103f56", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Components", "Date": "2014-10-09T21:24:14Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == other) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3851/buggy-version/src.main.java.org.aksw.sessa.helper.graph.Node.java", "BodyUseAPI": [], "Fixed commit": "17b8befba59c96215f161bfdf225367a4e9ef568", "Url": "https://api.github.com/repos/dice-group/SESSA", "Date": "2017-10-11T14:26:23Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (viewManager.isActiveView(\"tutorial\")) mode = -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1775/buggy-version/src.LeapController.java", "BodyUseAPI": [], "Fixed commit": "236cf9fc682d7b4562e717dbc2ad2393a1e59f0c", "Url": "https://api.github.com/repos/mattbroussard/polydrop-game", "Date": "2014-05-07T19:34:05Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((preThreadCount) <= 0) { preThreadCount = super.getThreads(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7610/buggy-version/perfcake.src.main.java.org.perfcake.message.generator.RampUpDownGenerator.java", "BodyUseAPI": [], "Fixed commit": "43aa3f24f5e766675633fa1e2671893f94dcc068", "Url": "https://api.github.com/repos/PerfCake/PerfCake", "Date": "2015-09-17T08:49:46Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((postThreadCount) <= 0) { postThreadCount = super.getThreads(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7610/buggy-version/perfcake.src.main.java.org.perfcake.message.generator.RampUpDownGenerator.java", "BodyUseAPI": [], "Fixed commit": "43aa3f24f5e766675633fa1e2671893f94dcc068", "Url": "https://api.github.com/repos/PerfCake/PerfCake", "Date": "2015-09-17T08:49:46Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mainThreadCount) <= 0) { mainThreadCount = super.getThreads(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7610/buggy-version/perfcake.src.main.java.org.perfcake.message.generator.RampUpDownGenerator.java", "BodyUseAPI": [], "Fixed commit": "43aa3f24f5e766675633fa1e2671893f94dcc068", "Url": "https://api.github.com/repos/PerfCake/PerfCake", "Date": "2015-09-17T08:49:46Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.lang.PsiBuilder.getCurrentOffset()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (startOffset == (builder.getCurrentOffset())) { start.rollbackTo(); }else { start.drop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7039/buggy-version/src.mkolaczek.elm.parsers.core.Try.java", "BodyUseAPI": [], "Fixed commit": "4f95065d6f9f1dd70f839b4af915d09ed5f421e6", "Url": "https://api.github.com/repos/PLkolek/intellij-elm", "Date": "2017-03-20T15:16:41Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (current == num) { hand.add(t); if (hand.tileAt(i).equals(hand.tileAt((i + 1)))) { hand.functionedTiles(i, (i + 1)); hand.functionedTiles((i + 1), (i + 1)); }else if (hand.tileAt((i + 1)).equals(hand.tileAt((i + 2)))) { hand.functionedTiles(i, (i + 1)); hand.functionedTiles((i + 1), (i + 1)); }else hand.functionedTiles(i, (i + 2)); }else current++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6643/buggy-version/src.com.example.mahdroid.Function.java", "BodyUseAPI": [], "Fixed commit": "650f42d225d6fc4e7ffd493f0cc2581a9c17bf84", "Url": "https://api.github.com/repos/cashgl/Mahdroid", "Date": "2014-04-30T02:38:48Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(deck.isEmpty())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3780/buggy-version/RandomDeck.java", "BodyUseAPI": [], "Fixed commit": "378650c2fee1d4eb180be92a1191da7ae8401fd0", "Url": "https://api.github.com/repos/fjricci/monopoly", "Date": "2015-05-06T20:24:17Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((result) - (java.lang.Math.floor(result))) == 0) { int result1 = ((int) (java.lang.Math.floor(result))); textView.setText(java.lang.String.valueOf(result1)); }else { textView.setText(java.lang.String.valueOf(result)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/215/buggy-version/app.src.main.java.com.example.dong.calculator.MainActivity.java", "BodyUseAPI": ["java.lang.Math.floor(java.lang.Double)", "java.lang.String.valueOf(java.lang.Double)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "a60390c71bde336c01b90909ff381826db82787b", "Url": "https://api.github.com/repos/Artyhacker/Calculator", "Date": "2016-07-26T06:41:53Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg instanceof org.linqs.psl.model.rule.arithmetic.expression.SummationVariable) { summationVariables.add(((org.linqs.psl.model.rule.arithmetic.expression.SummationVariable) (arg))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7974/buggy-version/psl-core.src.main.java.org.linqs.psl.model.rule.arithmetic.AbstractArithmeticRule.java", "BodyUseAPI": [], "Fixed commit": "85875a62da4040f19b2757bf89bb341c252e890d", "Url": "https://api.github.com/repos/eriq-augustine/psl", "Date": "2016-12-18T19:43:04Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getSecurityManager()) != null) { try { is = java.security.AccessController.doPrivileged(new java.security.PrivilegedExceptionAction<java.io.InputStream>() { @java.lang.Override public java.io.InputStream run() throws java.lang.Exception { return resourceURL.openStream(); } }); } catch (java.security.PrivilegedActionException pae) { throw ((java.io.IOException) (pae.getException())); } }else { is = resourceURL.openStream(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4429/buggy-version/src.main.java.javax.xml.bind.ContextFinder.java", "BodyUseAPI": [], "Fixed commit": "23b0001c8c08b3745109d3748df8f3e389c302a4", "Url": "https://api.github.com/repos/asoldano/jboss-jaxb-api_spec", "Date": "2016-03-30T13:21:59Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentlySelectedAnswerString) != (blank)) { selectedAnswerText.setText((\"Selected: \" + (currentlySelectedAnswerString))); }else { selectedAnswerText.setText((\"Selected: \" + (blank))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5188/buggy-version/FinalProject.app.src.main.java.com.chaotichippos.finalproject.app.view.CreateMultipleChoiceView.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "b3910aa25e4a15dbbe4a07d5343455b07c3bf609", "Url": "https://api.github.com/repos/ajk1311/ChaoticHippos", "Date": "2014-04-15T21:47:18Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNew) { event = dataAccessor.createOrUpdateEvent(event, auditLog); dataAccessor.createOrUpdatePage(com.pratilipi.data.util.EventDataUtil._updateEventPageUrl(event)); }else { event = dataAccessor.createOrUpdateEvent(event, com.pratilipi.data.util.EventDataUtil._updateEventPageUrl(event), auditLog); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6683/buggy-version/src.main.java.com.pratilipi.data.util.EventDataUtil.java", "BodyUseAPI": [], "Fixed commit": "f5072f07aa4006c6a9180709da756959b445d342", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-04-18T11:08:40Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNew) { pratilipi = dataAccessor.createOrUpdatePratilipi(pratilipi, auditLog); dataAccessor.createOrUpdatePage(com.pratilipi.data.util.PratilipiDataUtil._updatePratilipiPageUrl(pratilipi)); }else { pratilipi = dataAccessor.createOrUpdatePratilipi(pratilipi, com.pratilipi.data.util.PratilipiDataUtil._updatePratilipiPageUrl(pratilipi), auditLog); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6683/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDataUtil.java", "BodyUseAPI": [], "Fixed commit": "f5072f07aa4006c6a9180709da756959b445d342", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-04-18T11:08:40Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((attr.getValue()) != null) && (!(attr.getValue().isEmpty()))) { for (final java.lang.Object object : attr.getValue()) { stringAttributes.add(object.toString()); } attribute = new com.unboundid.ldap.sdk.Attribute(attr.getKey(), stringAttributes); addRequest.addAttribute(attribute); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3904/buggy-version/src.main.java.org.connid.bundles.freeipa.beans.server.FreeIPAUserAccount.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.util.List<java.lang.Object>>.getKey()", "java.util.Map.Entry<java.lang.String, java.util.List<java.lang.Object>>.getValue()"], "Fixed commit": "5a250d37021bcf0658218ba01f16fa3eadd01551", "Url": "https://api.github.com/repos/Tirasa/ConnIdFreeIPABundle", "Date": "2014-04-14T13:14:58Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cs311.battleship.player.AiPlayer.getValidDirections(previousHits.get(0))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((adjDirections.size()) == 0) { previousHits.clear(); handleRandomGuess(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5386/buggy-version/src.com.cs311.battleship.player.AiPlayer.java", "BodyUseAPI": [], "Fixed commit": "dd10fae8956c72f9fb442be9ea16401dc1726c68", "Url": "https://api.github.com/repos/jjacobson/Battleship", "Date": "2017-02-26T06:06:41Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user.getHostname()) == null) { net.blay09.mods.eirairc.util.Utils.sendLocalizedMessage(sender, \"irc.commands.ignore.notKnown\", target.getName()); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/491/buggy-version/src.main.java.net.blay09.mods.eirairc.command.extension.CommandIgnore.java", "BodyUseAPI": [], "Fixed commit": "6584a7e99c27303761e003e302f7e19d6487156a", "Url": "https://api.github.com/repos/blay09/EiraIRC", "Date": "2015-07-17T18:46:31Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c >= 'A') && (c <= 'Z')) { up = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3307/buggy-version/src.exercise2.Mapping.java", "BodyUseAPI": [], "Fixed commit": "a7007c3b32424f4454c81e0461638885c8adaff7", "Url": "https://api.github.com/repos/KingInktvis/Information_security_exercises", "Date": "2017-09-13T15:03:10Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element.endsWith(\"}]\")) { isEnded = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8737/buggy-version/src.io.recom.howabout.category.music.net.YoutubeMp4StreamUrlGetter.java", "BodyUseAPI": [], "Fixed commit": "0f8169d3ad0fb24f1c90872535ea8b3f9886aa6a", "Url": "https://api.github.com/repos/recomio/howabout-android", "Date": "2013-07-14T04:20:44Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.endsWith(\"}\")) { value = value.substring(0, ((value.length()) - 1)); }else if (value.endsWith(\"}]\")) { value = value.substring(0, ((value.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8737/buggy-version/src.io.recom.howabout.category.music.net.YoutubeMp4StreamUrlGetter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.length()", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "0f8169d3ad0fb24f1c90872535ea8b3f9886aa6a", "Url": "https://api.github.com/repos/recomio/howabout-android", "Date": "2013-07-14T04:20:44Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEnded) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8737/buggy-version/src.io.recom.howabout.category.music.net.YoutubeMp4StreamUrlGetter.java", "BodyUseAPI": [], "Fixed commit": "0f8169d3ad0fb24f1c90872535ea8b3f9886aa6a", "Url": "https://api.github.com/repos/recomio/howabout-android", "Date": "2013-07-14T04:20:44Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.getEntity().getContentType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (contentType == null) { uk.ac.ebi.biostudy.submission.bsclient.BioStudiesClient.logger.warn((\"Server responded with NULL content-type: \" + (req.getURI()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8717/buggy-version/src.main.java.uk.ac.ebi.biostudy.submission.bsclient.BioStudiesClient.java", "BodyUseAPI": [], "Fixed commit": "059898497fe14f1a6daa50aa1ac621b039c6f68c", "Url": "https://api.github.com/repos/EBIBioStudies/BioStudySubmProxy", "Date": "2016-05-10T11:22:08Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag == (-1)) { solutionSet.remove(i); }else { if ((equalsComparator.compare(aux, solution)) == 0) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5797/buggy-version/jmetal-core.src.main.java.org.uma.jmetal3.util.archive.impl.CrowdingDistanceArchive.java", "BodyUseAPI": [], "Fixed commit": "5f2ed7f6a38b6376a5878d13a3885a652a688896", "Url": "https://api.github.com/repos/jMetal/jMetal", "Date": "2014-09-26T23:18:59Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((state) != 1) && ((state) != 2)) { state = 1; nextState = 2; com.hurryup.game.network.GameClient.sendMessage(serialize()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6002/buggy-version/core.src.com.hurryup.objects.tiles.Door.java", "BodyUseAPI": [], "Fixed commit": "3f3b07595e7394efb01c00b2f7861c3d968d673d", "Url": "https://api.github.com/repos/Frans-Lukas/HurryUpGame", "Date": "2016-09-28T19:42:41Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userName.isEmpty()) || ((userName) == null)) { java.lang.String errormsg = \"Please enter an username\"; userName = javax.swing.JOptionPane.showInputDialog(errormsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6207/buggy-version/chatClient.GuiDriver.java", "BodyUseAPI": [], "Fixed commit": "5e9d422216a11df7cedd59e2322a32472d5915b8", "Url": "https://api.github.com/repos/NickWilsonDev/chatprogram", "Date": "2014-12-30T07:22:40Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["arc.getSimilarityIndex().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((index.length()) > 5) index = index.substring(0, 5);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/910/buggy-version/src.h4202.Similarity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "ef01ff700decbd02f6d51c12a37d5f75e69479a8", "Url": "https://api.github.com/repos/Hexanome4202/SemanticWeb", "Date": "2014-11-26T07:40:09Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getChild()) != null) { node.getChild().accept(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6658/buggy-version/3-implementierung.src.lambda.model.lambdaterm.visitor.IsValidVisitor.java", "BodyUseAPI": ["node.getChild().accept(lambda.model.lambdaterm.visitor.IsValidVisitor)", "lambda.model.lambdaterm.LambdaRoot.getChild()"], "Fixed commit": "746622ef95276c7295209ca0e7183dd0c9f8c8ef", "Url": "https://api.github.com/repos/Pse-Lambda-das-Spiel/LambdaDasSpiel", "Date": "2015-03-20T18:46:41Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (it.d4nguard.rgrpg.Context.isDebug()) java.lang.System.out.println(it.d4nguard.rgrpg.Context.Singleton.Current.getCurrent());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2402/buggy-version/src.it.d4nguard.rgrpg.Context.java", "BodyUseAPI": [], "Fixed commit": "8b7d965d908383ba4edbadf7f876c0133e2f667b", "Url": "https://api.github.com/repos/kLeZ/RG-RPG", "Date": "2013-06-03T19:55:37Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((gameState) != (com.runrmby.runner.MainActivity.PLAYING_GAME)) && ((gameState) != (com.runrmby.runner.MainActivity.LOSE))) && ((gameState) != (com.runrmby.runner.MainActivity.WIN))) { gameScreen.setBackgroundSizePos(windowSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1129/buggy-version/app.src.main.java.com.runrmby.runner.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a11884629799ce3069f0ae169a84a64bb24a82b2", "Url": "https://api.github.com/repos/Nomadjackalope/Runner", "Date": "2017-02-13T19:55:55Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((((blocked.equalsIgnoreCase(\"furnace\")) || (blocked.replaceAll(\" \", \"\").replaceAll(\"_\", \"\").equalsIgnoreCase(\"litfurnace\"))) || (blocked.equalsIgnoreCase(\"oven\"))) || (blocked.equalsIgnoreCase(java.lang.String.valueOf(Material.FURNACE.getId())))) || (blocked.equalsIgnoreCase(java.lang.String.valueOf(Material.BURNING_FURNACE.getId())))) { if (!negate) { this.blocked.add(com.turt2live.antishare.ASUtils.materialToString(Material.FURNACE, false)); this.blocked.add(com.turt2live.antishare.ASUtils.materialToString(Material.BURNING_FURNACE, false)); }else { this.blocked.remove(com.turt2live.antishare.ASUtils.materialToString(Material.FURNACE, false)); this.blocked.remove(com.turt2live.antishare.ASUtils.materialToString(Material.BURNING_FURNACE, false)); } continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7337/buggy-version/src.com.turt2live.antishare.storage.EventList.java", "BodyUseAPI": [], "Fixed commit": "e20be7a4855df35833754b53859a67079fd33555", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2012-08-14T01:10:54Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getDataFolder().exists())) { getDataFolder().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7337/buggy-version/src.com.turt2live.antishare.AntiShare.java", "BodyUseAPI": [], "Fixed commit": "e20be7a4855df35833754b53859a67079fd33555", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2012-08-14T01:10:54Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((anItem == (lisong_mechlab.model.item.ItemDB.CASE)) && (items.contains(ItemDB.CASE))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7183/buggy-version/src.lisong_mechlab.model.loadout.part.LoadoutPart.java", "BodyUseAPI": [], "Fixed commit": "da24ee36d914a2875a80bfd029b745a85762adad", "Url": "https://api.github.com/repos/EmilyBjoerk/lsml", "Date": "2014-04-03T14:45:47Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg instanceof org.zstack.compute.vm.APIGetInterdependentL3NetworksImagesMsg) { validate(((org.zstack.compute.vm.APIGetInterdependentL3NetworksImagesMsg) (msg))); }else if (msg instanceof org.zstack.compute.vm.APIUpdateVmInstanceMsg) { validate(((org.zstack.compute.vm.APIUpdateVmInstanceMsg) (msg))); }else if (msg instanceof org.zstack.compute.vm.APISetVmConsolePasswordMsg) { validate(((org.zstack.compute.vm.APISetVmConsolePasswordMsg) (msg))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2744/buggy-version/compute.src.main.java.org.zstack.compute.vm.VmInstanceApiInterceptor.java", "BodyUseAPI": [], "Fixed commit": "6def695d7656e4f429c313acf94e2d694509baf4", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-03-13T06:33:38Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getQueryString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((qs != null) && (!(qs.equals(\"\")))) rs += \"?\" + qs;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1392/buggy-version/src.main.java.com.salesforce.saml.SAMLFilter.java", "BodyUseAPI": [], "Fixed commit": "f9b117e5ae5dc6d6183dfd91362c9c0ec8d35727", "Url": "https://api.github.com/repos/cmortimore/samlsp", "Date": "2012-10-08T19:39:24Z"},
{"Line": "=>635", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, com.weaverplatform.postgresql.database.query.model.ConditionMap>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(\"id\".equals(conditionName))) { if ((condition.size()) != 1) { throw new com.weaverplatform.postgresql.util.WeaverError((-1), \"Unsupported operation, the contains does not stand alone\"); } java.lang.String clause = (\"SELECT source FROM live_attributes WHERE key = (SELECT ak.id FROM attribute_keys ak WHERE ak.label = '\" + conditionName) + \"') AND LOWER(string_value) LIKE LOWER('%\"; java.lang.String val = ((java.lang.String) (condition.get(\"$contains\"))); clause += val + \"%')\"; result.add(clause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8/buggy-version/src.main.java.com.weaverplatform.postgresql.database.query.model.WeaverQuery.java", "BodyUseAPI": [], "Fixed commit": "6110d21808ae233ee845445395154f40c96971aa", "Url": "https://api.github.com/repos/weaverplatform/weaver-database-postgresql", "Date": "2017-10-27T18:45:28Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getPlaceToken().equals(PlaceTokens.RUSD_LIBRARY)) { elementaryCoursePanel.add(courseTitle); }else { if (((courseDo.getGrade()) == null) || ((courseDo.getGrade()) <= 5)) { elementaryCoursePanel.add(courseTitle); }else if (((courseDo.getGrade()) > 5) && ((courseDo.getGrade()) < 9)) { middleSchoolCoursePanel.add(courseTitle); }else { highSchoolCoursePanel.add(courseTitle); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2776/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.home.library.LibraryMenuNav.java", "BodyUseAPI": [], "Fixed commit": "a967a9f41f1d4833611466d37900ed57de93570d", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2014-07-01T12:05:21Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nih.nci.cananolab.dto.common.PublicationBean.getDomainFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pub.getYear()) != null) this.setYear(pub.getYear().longValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8739/buggy-version/software.cananolab-webapp.src.gov.nih.nci.cananolab.restful.view.SimplePublicationWithSamplesBean.java", "BodyUseAPI": ["gov.nih.nci.cananolab.restful.view.SimplePublicationWithSamplesBean.setYear(pub.getYear().longValue())", "gov.nih.nci.cananolab.domain.common.Publication.getYear()", "pub.getYear().longValue()"], "Fixed commit": "e01999e242a07e24938f44585274dfb72e4ce492", "Url": "https://api.github.com/repos/CBIIT/cananolab", "Date": "2014-08-28T20:16:52Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((checker == false) && ((start > 0) && (start < 53))) && ((end > 0) && (end < 53))) && (budgetTime > 0)) { activities.add(activity); }else if (((start < 0) || (start > 53)) || ((end < 0) || (end > 53))) { throw new OperationNotAllowedException(\"The start and end weeks have to be between 1 and 52.\", \"add activity\"); }else if (budgetTime < 0) { throw new OperationNotAllowedException(\"BudgetTime has to be positive\", \"add activity\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8824/buggy-version/Softwarehuset.src.Project.java", "BodyUseAPI": [], "Fixed commit": "2e42ed6a47bde266f2da8d3275653cb3d93d244f", "Url": "https://api.github.com/repos/Mathiasbjensen/Softwarehuset", "Date": "2017-05-06T18:40:49Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.betterform.xml.xforms.ui.state.UIElementStateUtil.getModelItem(de.betterform.xml.xforms.ui.BindingElement)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((modelItem != null) && ((modelItem.getNode()) != null)) { if ((modelItem.getNode()) instanceof org.w3c.dom.Element) { de.betterform.xml.xforms.ui.state.UIElementStateUtil.setStateAttribute(this.state, de.betterform.xml.xforms.ui.state.BASE_TYPE, de.betterform.xml.xforms.ui.state.UIElementStateUtil.getBaseType(modelItem.getModel().getSchemas(), this.currentType, ((org.w3c.dom.Element) (modelItem.getNode())).getNamespaceURI())); }else { de.betterform.xml.xforms.ui.state.UIElementStateUtil.setStateAttribute(this.state, de.betterform.xml.xforms.ui.state.BASE_TYPE, de.betterform.xml.xforms.ui.state.UIElementStateUtil.getBaseType(modelItem.getModel().getSchemas(), this.currentType, ((org.w3c.dom.Node) (modelItem.getNode())).getNamespaceURI())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5532/buggy-version/core.src.main.java.de.betterform.xml.xforms.ui.state.BoundElementState.java", "BodyUseAPI": ["de.betterform.xml.xforms.ui.state.UIElementStateUtil.getBaseType(modelItem.getModel().getSchemas(),java.lang.String,java.lang.String)", "modelItem.getModel().getSchemas()", "((org.w3c.dom.Element) (modelItem.getNode())).getNamespaceURI()", "de.betterform.xml.xforms.model.ModelItem.getNode()", "de.betterform.xml.xforms.model.ModelItem.getModel()", "de.betterform.xml.xforms.model.ModelItem.getModel()", "de.betterform.xml.xforms.ui.state.UIElementStateUtil.setStateAttribute(org.w3c.dom.Element,de.betterform.xml.xforms.ui.state.BASE_TYPE,de.betterform.xml.xforms.ui.state.UIElementStateUtil.getBaseType(modelItem.getModel().getSchemas(), this.currentType, ((org.w3c.dom.Node) (modelItem.getNode())).getNamespaceURI()))", "de.betterform.xml.xforms.ui.state.UIElementStateUtil.getBaseType(modelItem.getModel().getSchemas(),java.lang.String,java.lang.String)", "de.betterform.xml.xforms.model.ModelItem.getNode()", "de.betterform.xml.xforms.ui.state.UIElementStateUtil.setStateAttribute(org.w3c.dom.Element,de.betterform.xml.xforms.ui.state.BASE_TYPE,de.betterform.xml.xforms.ui.state.UIElementStateUtil.getBaseType(modelItem.getModel().getSchemas(), this.currentType, ((org.w3c.dom.Element) (modelItem.getNode())).getNamespaceURI()))", "de.betterform.xml.xforms.model.ModelItem.getNode()", "((org.w3c.dom.Node) (modelItem.getNode())).getNamespaceURI()", "modelItem.getModel().getSchemas()"], "Fixed commit": "8f32982126593469a8e103c3abb275295f848614", "Url": "https://api.github.com/repos/betterFORM/betterFORM", "Date": "2013-02-25T23:08:10Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((unprefixedGrammarFileName.getParent()) == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1413/buggy-version/antlr4-maven-plugin.src.main.java.org.antlr.mojo.antlr4.Antlr4Mojo.java", "BodyUseAPI": [], "Fixed commit": "38739cec5e18a3f9cab9a408b3d9f8fa8c01029e", "Url": "https://api.github.com/repos/parrt/antlr4", "Date": "2012-12-02T22:57:42Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.io.FileUtils.sizeOf(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((filesize.intValue()) == 0) { if (log.isErrorEnabled()) log.error(\"raw html file is empty\"); content.setStatus(ContentStatus.PARSE_ERROR); updateContent(content); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8981/buggy-version/fauxwerd-war.src.main.java.com.fauxwerd.service.ContentServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "82b82c856aa6c175fb616b6163918bdb501deca1", "Url": "https://api.github.com/repos/robruffler/Milwaukee-Meat-Grinder", "Date": "2011-02-13T23:34:33Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.core.resource.ResourceDao.findByKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (component == null) { throw new java.lang.IllegalStateException((\"Unable to find component with key \" + componentKey)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3972/buggy-version/sonar-server.src.main.java.org.sonar.server.permission.InternalPermissionService.java", "BodyUseAPI": [], "Fixed commit": "b9dd1505c80e7acf40a415b995eed30fe23d1e1d", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2013-12-02T16:53:32Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numBits == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/680/buggy-version/hollow.src.main.java.com.netflix.hollow.core.memory.encoding.FixedLengthElementArray.java", "BodyUseAPI": [], "Fixed commit": "db291888b5f0441263a9ecd10e1b19fe78a86451", "Url": "https://api.github.com/repos/Netflix/hollow", "Date": "2017-03-16T20:26:44Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/472/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "39541d930bbf60a0c296811de09351993bc1632e", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-24T19:35:43Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(world.isRemote)) { if (player.isSneaking()) { player.openGui(tucs.instance, tucs.guiIDUpgradeTools, world, ((int) (player.posX)), ((int) (player.posY)), ((int) (player.posZ))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6845/buggy-version/src.main.java.com.black_dog20.tucs.item.tool.ItemTLSOC.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.openGui(tucs.instance,tucs.guiIDUpgradeTools,net.minecraft.world.World,((int) (player.posX)),((int) (player.posY)),((int) (player.posZ)))"], "Fixed commit": "6347bc5b5bcfb5bb1a5b9a1a5a4e33fc518e3893", "Url": "https://api.github.com/repos/Crimix/TheUnusualCobblestoneMod", "Date": "2014-10-27T11:30:59Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ro.mihai.tpt.FormattedTextReader.readString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"&gt;&gt;\".equals(stopEst.trim())) stopEst = \">>\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4335/buggy-version/tpt.corelib.src.main.java.ro.mihai.tpt.RATT.java", "BodyUseAPI": [], "Fixed commit": "1873ae9f3a996a707ac9c3648123115cd5b9d27b", "Url": "https://api.github.com/repos/MihaiBalint/TimisoaraPublicTransport", "Date": "2016-08-09T06:54:09Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (rowView != null) className = rowView.getTag().getClass().getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6692/buggy-version/src.com.sharpcart.android.adapter.StoreSharpListExpandableAdapter.java", "BodyUseAPI": ["rowView.getTag().getClass().getName()", "android.view.View.getTag()", "rowView.getTag().getClass()"], "Fixed commit": "d34e7027fcb76d9d9ec671b1e5f2583afbabf496", "Url": "https://api.github.com/repos/yoyogiv/SharpCartMobile", "Date": "2014-02-18T20:17:16Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mListChildData.get(shoppingItem.getCategory())) != null) mListChildData.get(shoppingItem.getCategory()).add(shoppingItem); else { java.util.List<com.sharpcart.android.model.ShoppingItem> itemCategory = new java.util.ArrayList<com.sharpcart.android.model.ShoppingItem>(); itemCategory.add(shoppingItem); mListChildData.put(org.apache.commons.lang3.text.WordUtils.capitalizeFully(shoppingItem.getCategory()), itemCategory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6692/buggy-version/src.com.sharpcart.android.adapter.StoreSharpListExpandableAdapter.java", "BodyUseAPI": ["mListChildData.get(shoppingItem.getCategory()).add(com.sharpcart.android.model.ShoppingItem)", "com.sharpcart.android.model.ShoppingItem.getCategory()", "java.util.HashMap<java.lang.String, java.util.List<com.sharpcart.android.model.ShoppingItem>>.get(shoppingItem.getCategory())", "java.util.HashMap<java.lang.String, java.util.List<com.sharpcart.android.model.ShoppingItem>>.put(org.apache.commons.lang3.text.WordUtils.capitalizeFully(shoppingItem.getCategory()),java.util.List<com.sharpcart.android.model.ShoppingItem>)", "java.util.List<com.sharpcart.android.model.ShoppingItem>.add(com.sharpcart.android.model.ShoppingItem)", "org.apache.commons.lang3.text.WordUtils.capitalizeFully(shoppingItem.getCategory())", "com.sharpcart.android.model.ShoppingItem.getCategory()"], "Fixed commit": "d34e7027fcb76d9d9ec671b1e5f2583afbabf496", "Url": "https://api.github.com/repos/yoyogiv/SharpCartMobile", "Date": "2014-02-18T20:17:16Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (child instanceof edu.lmu.cs.xlg.yoda.entities.Entity) { edu.lmu.cs.xlg.yoda.entities.Entity.class.cast(child).traverse(v, visited); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7792/buggy-version/src.main.java.edu.lmu.cs.xlg.yoda.entities.Entity.java", "BodyUseAPI": ["java.lang.Class.cast(java.lang.Object)", "edu.lmu.cs.xlg.yoda.entities.Entity.traverse(edu.lmu.cs.xlg.yoda.entities.Entity.Visitor,java.util.Set<edu.lmu.cs.xlg.yoda.entities.Entity>)"], "Fixed commit": "570bd91daa3a3642faee3080bc684f9b8a309fe5", "Url": "https://api.github.com/repos/andyjwon/yoda-lang", "Date": "2013-05-02T19:02:51Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (processedLines == 0) { setChanged(); notifyObservers(new de.ibm.issw.requestmetrics.engine.events.UnsupportedFileEvent(this, file.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/989/buggy-version/src.main.java.de.ibm.issw.requestmetrics.engine.FileHandler.java", "BodyUseAPI": [], "Fixed commit": "66b05402a9a7c8b122160ceacff4b3ef710ebaf2", "Url": "https://api.github.com/repos/Florian-W/request-metrics-analyzer-next", "Date": "2016-01-26T14:14:38Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiElement.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parent instanceof com.kalessil.phpStorm.phpInspectionsEA.utils.TernaryExpression) && (expression == (((com.kalessil.phpStorm.phpInspectionsEA.utils.TernaryExpression) (parent)).getCondition()))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3202/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.utils.ExpressionSemanticUtil.java", "BodyUseAPI": [], "Fixed commit": "d3f7c86e5ad7511ac807e7943065a38fccba596e", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2017-04-16T20:05:27Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["opendap.bes.dap2Responders.BesApi.getBesDataSourceID(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dataSource == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3206/buggy-version/src.opendap.bes.BesDapResponder.java", "BodyUseAPI": [], "Fixed commit": "9ba2b093cdc014ec26baa52d0e314ff37f685c6a", "Url": "https://api.github.com/repos/OPENDAP/olfs", "Date": "2016-05-02T21:36:11Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((2 * i) + 1) < (cards.length)) { cards[((2 * i) + 1)] = ((byte) (((content[(offset + i)]) >> 4) & 15)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6548/buggy-version/src.com.blueraja.magicduelsimporter.magicduels.Profile.java", "BodyUseAPI": [], "Fixed commit": "ba6f18537935a5b84ea5c89008c3b7f1b909d9fc", "Url": "https://api.github.com/repos/BlueRaja/Magic-Duels-Deck-Exporter", "Date": "2017-01-29T11:47:29Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mShareListener) == null) { activity.finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3507/buggy-version/las.src.main.java.com.qingsongchou.library.las.ShareUtil.java", "BodyUseAPI": [], "Fixed commit": "536fb256814f7fc244608698306af2a1dc0707c2", "Url": "https://api.github.com/repos/lvmaomao/las", "Date": "2017-01-16T08:28:44Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mLoginInstance.isInstall(activity))) { mLoginListener.loginFailure(new java.lang.Exception(com.qingsongchou.library.las.ShareLogger.INFO.NOT_INSTALL)); activity.finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3507/buggy-version/las.src.main.java.com.qingsongchou.library.las.LoginUtil.java", "BodyUseAPI": ["android.app.Activity.finish()"], "Fixed commit": "536fb256814f7fc244608698306af2a1dc0707c2", "Url": "https://api.github.com/repos/lvmaomao/las", "Date": "2017-01-16T08:28:44Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (charge != 0) { applyCharges(charge, u.getPersonalDetails(), u.getCardDetails()); u.clearTrips(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4857/buggy-version/BikeScheme.src.bikescheme.Hub.java", "BodyUseAPI": ["bikescheme.Hub.2.applyCharges(int,u.getPersonalDetails(),u.getCardDetails())"], "Fixed commit": "b9b8679aff94867d9a71e39a411dd4d8a11716a7", "Url": "https://api.github.com/repos/IGGeorgiev/BikeScheme", "Date": "2015-12-01T11:51:42Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["blindrobot.UserInput.makeUserInput()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tmp != null) { br.makeMove(tmp, m); }else { java.lang.System.out.println(\"\u041d\u0435\u0432\u0435\u0440\u043d\u0430\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u0430, \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u0432\u0432\u043e\u0434.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1308/buggy-version/src.blindrobot.GameBust.java", "BodyUseAPI": ["blindrobot.BlindRobot.makeMove(java.lang.String,blindrobot.Maze)"], "Fixed commit": "f794dc750499f5b959d903e90336935cbe17a883", "Url": "https://api.github.com/repos/nikolaevd/blind-robot", "Date": "2015-08-14T14:15:11Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((md.getTypeConstraintList()) != null) { offset = md.getTypeConstraintList().getEndIndex(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8135/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.correct.ConvertToBlockProposal.java", "BodyUseAPI": ["Tree.MethodDeclaration.getTypeConstraintList()", "md.getTypeConstraintList().getEndIndex()"], "Fixed commit": "a96e56a4d10e493c8ac994015798bb790b326492", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2015-10-05T12:10:00Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fun.getTypeConstraintList()) != null) { offset = fun.getTypeConstraintList().getEndIndex(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8135/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.correct.ConvertToBlockProposal.java", "BodyUseAPI": ["fun.getTypeConstraintList().getEndIndex()", "Tree.FunctionArgument.getTypeConstraintList()"], "Fixed commit": "a96e56a4d10e493c8ac994015798bb790b326492", "Url": "https://api.github.com/repos/eclipse/ceylon-ide-eclipse", "Date": "2015-10-05T12:10:00Z"},
{"Line": "=>837", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (railo.commons.lang.StringUtil.isEmpty(prefix)) prefix = \"call\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/285/buggy-version/railo-java.railo-core.src.railo.transformer.bytecode.util.ASMUtil.java", "BodyUseAPI": [], "Fixed commit": "bc437aca202df5f713095eb2ab4631ed67bf2020", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-11-13T12:17:00Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((f.getPkg()) != null) { f.getPkg().getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7442/buggy-version/cloudconductor.src.main.java.de.cinovo.cloudconductor.server.web.impl.FilesImpl.java", "BodyUseAPI": ["f.getPkg().getName()", "de.cinovo.cloudconductor.server.model.EFile.getPkg()"], "Fixed commit": "f142b86faa4c4c15cb4e2ed6ab50c8c6bad4ccaa", "Url": "https://api.github.com/repos/cinovo/cloudconductor-server", "Date": "2014-05-20T10:30:29Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((main.game.terrain.Tiles.tiles[id]) != null) return main.game.terrain.Tiles.tiles[id]; else return main.game.terrain.Tiles.tiles[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5811/buggy-version/src.main.game.terrain.Tiles.java", "BodyUseAPI": [], "Fixed commit": "a0a7bb69f647f69eb3f62510e1d6b45a557ec47e", "Url": "https://api.github.com/repos/Cubiccl/RPGProject", "Date": "2015-05-29T22:11:08Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(branch.isValid())) || (!(finalStatement.isValid()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5582/buggy-version/src.org.gridgain.inspection.GridBracketInspection.java", "BodyUseAPI": [], "Fixed commit": "5bffca8309f7c1c21cf8e5896fd59256f25e6484", "Url": "https://api.github.com/repos/sevdokimov-gg/gg-abbrev-plugin", "Date": "2014-11-10T14:04:08Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (defaultLog.isDebugEnabled()) { defaultLog.debug(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7727/buggy-version/modules.core.src.main.java.org.apache.synapse.mediators.MediatorLog.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.Object)"], "Fixed commit": "1dad34a475c7fa0a6d0067e90055885af345bbae", "Url": "https://api.github.com/repos/VijithaEkanayake/wso2-synapse", "Date": "2017-01-19T20:44:17Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (defaultLog.isDebugEnabled()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7727/buggy-version/modules.core.src.main.java.org.apache.synapse.mediators.MediatorLog.java", "BodyUseAPI": [], "Fixed commit": "1dad34a475c7fa0a6d0067e90055885af345bbae", "Url": "https://api.github.com/repos/VijithaEkanayake/wso2-synapse", "Date": "2017-01-19T20:44:17Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((assignedList.getCheckedItemPosition()) == position) { ctv.setChecked(true); }else { ctv.setChecked(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5741/buggy-version/astrid.plugin-src.com.todoroo.astrid.actfm.EditPeopleControlSet.java", "BodyUseAPI": [], "Fixed commit": "4289827e1f48b78cd41c7490cb561604eb904f14", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2011-12-15T19:55:13Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((\"2`\u4e28\".equals(word)) || (\"2`\u4e85\".equals(word)))) addToBihuaMap(word, bihua);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5946/buggy-version/jlab.namerank.src.main.java.ltf.namerank.rank.dictrank.support.dict.HanziBihuaxuCd.java", "BodyUseAPI": ["ltf.namerank.rank.dictrank.support.dict.HanziBihuaxuCd.BihuxuItem.addToBihuaMap(java.lang.String,java.lang.String)"], "Fixed commit": "7f493c37344bf9897b66e2f7bffe6ea7a7f2fdfa", "Url": "https://api.github.com/repos/ltf/lab", "Date": "2016-07-11T02:19:23Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((word.length()) > 1) throw new java.lang.IllegalStateException((((getKey()) + \" = len>1 = \") + word));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5946/buggy-version/jlab.namerank.src.main.java.ltf.namerank.rank.dictrank.support.dict.HanziBihuaxuCd.java", "BodyUseAPI": [], "Fixed commit": "7f493c37344bf9897b66e2f7bffe6ea7a7f2fdfa", "Url": "https://api.github.com/repos/ltf/lab", "Date": "2016-07-11T02:19:23Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Number.doubleValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n2v == 0.0F) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1583/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.command.NumberUtil.java", "BodyUseAPI": [], "Fixed commit": "f5143b2f4cec15ad6026ed23aeb44957ac6b0bed", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-04-19T15:24:12Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Settings.newNether) && (Settings.createNether)) { if (world.equals(com.wasteofplastic.acidisland.ASkyBlock.getIslandWorld())) { com.wasteofplastic.acidisland.ASkyBlock.getNetherWorld().regenerateChunk(x, z); } if (world.equals(com.wasteofplastic.acidisland.ASkyBlock.getNetherWorld())) { com.wasteofplastic.acidisland.ASkyBlock.getIslandWorld().regenerateChunk(x, z); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7542/buggy-version/src.com.wasteofplastic.acidisland.DeleteIslandChunk.java", "BodyUseAPI": [], "Fixed commit": "92d261fc0145d7204b53132fb8781fcf7b75084f", "Url": "https://api.github.com/repos/tastybento/acidisland", "Date": "2015-09-14T02:08:27Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.random()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (chance < 0.05) { tiles[i][j].addItem(model.item.ItemFactory.getRandomItem()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8874/buggy-version/src.model.map.MapBuilder.java", "BodyUseAPI": [], "Fixed commit": "deac867bfc1d02cb076c679cdcddc76344f48fc3", "Url": "https://api.github.com/repos/amstewart/LastRun", "Date": "2015-04-18T19:48:24Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.fodev.tools.frm.model.FofrmHeader.getTotalFrames()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (totalFrames < 6) { header.setFramesPerDirection(((short) (1))); }else { header.setFramesPerDirection(((short) ((header.getTotalFrames()) / 6))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7784/buggy-version/src.net.fodev.tools.frm.control.FofrmFileReader.java", "BodyUseAPI": [], "Fixed commit": "a336014ca7b4ec53457eb1fd8848292112129094", "Url": "https://api.github.com/repos/SlowhandFastfeet/FEV", "Date": "2016-08-18T20:24:17Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((otherPanel) != null) remove(otherPanel);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5940/buggy-version/src.gui.Driver.java", "BodyUseAPI": [], "Fixed commit": "ab67f8c575888b7c54efdba86941d9f940847673", "Url": "https://api.github.com/repos/drewhannay/chess", "Date": "2011-04-20T22:41:05Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entriesPerPageForm.getSize()) == null) { entriesPerPageForm.setSize(java.lang.Integer.toString(pagesData.getPagedListHolder().getPageSize())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3522/buggy-version/src.main.java.pl.arczynskiadam.web.controller.note.NoteController.java", "BodyUseAPI": ["pl.arczynskiadam.web.form.EntriesPerPageForm.setSize(java.lang.String)"], "Fixed commit": "22d3b2f58afa6ce9c3599835022e3e1d845ad8a1", "Url": "https://api.github.com/repos/Karister/NotesManager", "Date": "2014-10-26T18:38:22Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!died) { dieSceneLaunched = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4447/buggy-version/zildo.src.main.java.zildo.monde.sprites.persos.Perso.java", "BodyUseAPI": [], "Fixed commit": "d11fd583d0de1a6c7d163c469fbee1bc34f4b33b", "Url": "https://api.github.com/repos/tchegito/zildo", "Date": "2017-07-25T14:16:14Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ednovo.gooru.client.uc.BrowserAgent.isDevice()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (device) { getUsedInResourcesPanel().add(simpleReosurceView); }else { getUsedInResourcesPanel().addDraggable(simpleReosurceView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/629/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.search.collection.CollectionMoreInfoVc.java", "BodyUseAPI": [], "Fixed commit": "4bf7ce30ebc16f601469b76eea09a11ee0375a94", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2015-01-21T09:56:28Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ednovo.gooru.client.uc.BrowserAgent.isDevice()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (device) { getUsedInResourcesPanel().add(new org.ednovo.gooru.client.mvp.search.SimpleCollectionVc(childResource)); }else { getUsedInResourcesPanel().addDraggable(new org.ednovo.gooru.client.mvp.search.SimpleCollectionVc(childResource)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/629/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.search.resource.ResourceMoreInfoVc.java", "BodyUseAPI": [], "Fixed commit": "4bf7ce30ebc16f601469b76eea09a11ee0375a94", "Url": "https://api.github.com/repos/mitraj/Gooru-Web", "Date": "2015-01-21T09:56:28Z"},
{"Line": "=>1400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((time < 0) || (time > 2359)) { data = \"0\"; model.setValueAt(\"0\", row, column); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1259/buggy-version/src.GUI.java", "BodyUseAPI": [], "Fixed commit": "7a3c62469135daf5e2836c6885d67a6c07bdd2ea", "Url": "https://api.github.com/repos/seugienem/ManageItRightRepo", "Date": "2012-03-24T15:10:44Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((smartConfig) != null) smartConfig.stopTransmitting();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/426/buggy-version/library.src.main.java.batuypn.android.smartconfiglibrary.SmartConfigLibrary.java", "BodyUseAPI": [], "Fixed commit": "1f6976bd6f633db1c01b1c877e67228f2ddf368e", "Url": "https://api.github.com/repos/batuypn/SmartConfigLibrary", "Date": "2015-06-05T13:35:54Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((methodData.getPhpDoc()) != null) { buffer.append(methodData.getPhpDoc().getText()); buffer.append('\\n'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4829/buggy-version/src.com.ruslanpolutsygan.adderremover.handler.ActionHandler.java", "BodyUseAPI": ["methodData.getPhpDoc().getText()", "java.lang.StringBuffer.append(methodData.getPhpDoc().getText())", "com.ruslanpolutsygan.adderremover.handler.PhpMethodData.getPhpDoc()"], "Fixed commit": "eda243c72e779fa3f1db4b4649aa7c54cd816b85", "Url": "https://api.github.com/repos/ruslan-polutsygan/phpstorm-adder-remover-generator-plugin", "Date": "2017-11-19T11:29:12Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((methodData.getMethod()) != null) { buffer.append(methodData.getMethod().getText()); buffer.append('\\n'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4829/buggy-version/src.com.ruslanpolutsygan.adderremover.handler.ActionHandler.java", "BodyUseAPI": ["methodData.getMethod().getText()", "com.ruslanpolutsygan.adderremover.handler.PhpMethodData.getMethod()", "java.lang.StringBuffer.append(methodData.getMethod().getText())"], "Fixed commit": "eda243c72e779fa3f1db4b4649aa7c54cd816b85", "Url": "https://api.github.com/repos/ruslan-polutsygan/phpstorm-adder-remover-generator-plugin", "Date": "2017-11-19T11:29:12Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((speed) > 1) { (speed)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1619/buggy-version/MainWindow.java", "BodyUseAPI": [], "Fixed commit": "1899d10191dcfc36c166612a7c2c0e3b77bee3db", "Url": "https://api.github.com/repos/darshu8/SnakeGame", "Date": "2017-12-01T08:23:45Z"},
{"Line": "=>613", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"boolean\".equalsIgnoreCase(typeName)) { defaultVal = defaultVal.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7647/buggy-version/swagger-doclet.src.main.java.com.carma.swagger.doclet.parser.ApiMethodParser.java", "BodyUseAPI": [], "Fixed commit": "72982e1833a5e1580b221bae68e3c9dcfe18d8b2", "Url": "https://api.github.com/repos/umbrew/swagger-jaxrs-doclet", "Date": "2015-05-14T08:11:47Z"},
{"Line": "=>731", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((val != null) && (fieldType.simpleTypeName().equalsIgnoreCase(\"boolean\"))) { val = val.toLowerCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7647/buggy-version/swagger-doclet.src.main.java.com.carma.swagger.doclet.parser.ApiModelParser.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "72982e1833a5e1580b221bae68e3c9dcfe18d8b2", "Url": "https://api.github.com/repos/umbrew/swagger-jaxrs-doclet", "Date": "2015-05-14T08:11:47Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.minio.client.ErrorResponse.getCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"BucketAlreadyOwnedByYou\".equals(code)) e = new io.minio.client.BucketExistsException(); else e = new io.minio.client.InternalClientException(errorResponse.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3431/buggy-version/src.main.java.io.minio.client.Client.java", "BodyUseAPI": [], "Fixed commit": "dee3e497e57e30d180259d5ea668607d9cbe0dc4", "Url": "https://api.github.com/repos/minio/minio-java", "Date": "2015-07-13T03:26:22Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (output != null) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4342/buggy-version/src.main.java.at.mukprojects.countdown.CountdownTimer.java", "BodyUseAPI": [], "Fixed commit": "4fc035a97e301300d3b205b4587d04a9e3aac4c9", "Url": "https://api.github.com/repos/keshrath/Countdown", "Date": "2016-01-06T16:39:33Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.getName().endsWith(\".json\")) zipExport.putNextEntry(new java.util.zip.ZipEntry(file.getName())); else zipExport.putNextEntry(new java.util.zip.ZipEntry((((Utils.IMAGES_SUBFOLDER) + (java.io.File.separator)) + (file.getName()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2482/buggy-version/src.main.java.fetcher.model.Pad.java", "BodyUseAPI": ["java.io.File.getName()", "java.util.zip.ZipOutputStream.putNextEntry(java.util.zip.ZipEntry)", "java.util.zip.ZipOutputStream.putNextEntry(java.util.zip.ZipEntry)", "java.io.File.getName()"], "Fixed commit": "aceb4eb6818c311300f7b02b47fcf4e5544385fa", "Url": "https://api.github.com/repos/arocketman/URL-pad", "Date": "2014-12-21T11:13:26Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3636/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "000c12bb0f9d7e0b12d8a9f2a33f6fcd7324104d", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newBegin == null) { begin = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3769/buggy-version/src.jm.tex.lib.equationeditor.editorboard.objects.MathLine.java", "BodyUseAPI": [], "Fixed commit": "4d46ca9e6eca89856e7b07a71b44303c6b2b0df0", "Url": "https://api.github.com/repos/BJMg/EquationEditor", "Date": "2014-02-21T10:32:26Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jm.tex.lib.equationeditor.LaTeXMenu.DataObject.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (type != null) { if (type.equals(\"power\")) { setPower(); return -1; }else if (type.equals(\"index\")) { setIndex(); return -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3769/buggy-version/src.jm.tex.lib.equationeditor.editorboard.objects.MathObject.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "4d46ca9e6eca89856e7b07a71b44303c6b2b0df0", "Url": "https://api.github.com/repos/BJMg/EquationEditor", "Date": "2014-02-21T10:32:26Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jm.tex.lib.equationeditor.editorboard.objects.MathObject.getParent()", "jm.tex.lib.equationeditor.editorboard.objects.MathObject.getLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parent == line) && ((line.getBegin()) == (this))) { line.setBegin(null); jm.tex.lib.equationeditor.editorboard.objects.MathObject next = getNext(); if (next != null) line.setBegin(next); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3769/buggy-version/src.jm.tex.lib.equationeditor.editorboard.objects.MathObject.java", "BodyUseAPI": ["jm.tex.lib.equationeditor.editorboard.objects.MathLine.setBegin(<nulltype>)", "jm.tex.lib.equationeditor.editorboard.objects.MathLine.setBegin(jm.tex.lib.equationeditor.editorboard.objects.MathObject)"], "Fixed commit": "4d46ca9e6eca89856e7b07a71b44303c6b2b0df0", "Url": "https://api.github.com/repos/BJMg/EquationEditor", "Date": "2014-02-21T10:32:26Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.ballerinalang.repository.fs.JARPackageRepository.JAR_URI_SCHEME.equals(uri.getScheme())) { java.util.Map<java.lang.String, java.lang.String> env = new java.util.HashMap<>(); env.put(\"create\", \"true\"); try { java.nio.file.FileSystems.newFileSystem(uri, env); } catch (java.nio.file.FileSystemAlreadyExistsException ignore) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3002/buggy-version/modules.ballerina-lang.src.main.java.org.ballerinalang.repository.fs.JARPackageRepository.java", "BodyUseAPI": ["java.nio.file.FileSystems.newFileSystem(java.net.URI,java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "258b5d7cba712acde84aff0ba28dda7692a649df", "Url": "https://api.github.com/repos/maheeka/ballerina", "Date": "2017-09-19T08:09:55Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (shouldCheckForRedundantSeparator && ((prefix.charAt(((prefix.length()) - 1))) == (suffix.charAt(0)))) { suffix = suffix.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2882/buggy-version/java.org.apache.juli.FileHandler.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "6261ac2c6f7858920350816f05fa3e0f79981c24", "Url": "https://api.github.com/repos/katya-stoycheva/tomcat", "Date": "2017-07-11T14:34:35Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((index > (dims.length)) || ((dims[index]) != null)) { throw new com.metamx.common.ISE(\"Dimension[%s] occurred more than once in InputRow\", dimension); }else { dims[index] = getDimVals(dimValues.get(dimension), dimensionValues); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4706/buggy-version/processing.src.main.java.io.druid.segment.incremental.IncrementalIndex.java", "BodyUseAPI": [], "Fixed commit": "ba572febe8069c90fdc6b960f36fb67b29e20958", "Url": "https://api.github.com/repos/tubemogul/druid", "Date": "2015-11-22T09:53:33Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new org.compiere.model.Query(m_ctx, org.fcaq.model.X_CA_MatterAssignment.Table_Name, whereClause, null).setOnlyActiveRecords(true).setParameters(course.get_ID(), currentBPartner.get_ID()).setOrderBy(X_CA_MatterAssignment.COLUMNNAME_Created).list()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((assignments.size()) > 0) { fMatterAssignment.setValue(assignments.get(0).get_ID()); if (\"ES\".equals(assignments.get(0).getAD_Language())) lclassroom.setText(\"Espa\\u00f1ol\"); else if (\"EN\".equals(assignments.get(0).getAD_Language())) lclassroom.setText(\"English\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2139/buggy-version/CustomZKLookAndFeel37.WEB-INF.src.org.eevolution.form.WDisciplineNotes.java", "BodyUseAPI": ["assignments.get(0).getAD_Language()", "org.adempiere.webui.editor.WTableDirEditor.setValue(assignments.get(0).get_ID())", "java.util.List<org.fcaq.model.X_CA_MatterAssignment>.get(int)", "java.util.List<org.fcaq.model.X_CA_MatterAssignment>.get(int)", "java.util.List<org.fcaq.model.X_CA_MatterAssignment>.get(int)", "java.lang.String.equals(assignments.get(0).getAD_Language())", "assignments.get(0).get_ID()", "assignments.get(0).getAD_Language()", "java.lang.String.equals(assignments.get(0).getAD_Language())"], "Fixed commit": "d98a3fcee2880eefb8f77d2999fd9c55b4bfeec1", "Url": "https://api.github.com/repos/albertojuarez/FCAQCustomZK", "Date": "2012-10-17T19:45:56Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isdiscipline) { disciplineNotes.refreshDisciplineNote(student, trxName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2139/buggy-version/CustomZKLookAndFeel37.WEB-INF.src.org.fcaq.components.WNoteEditor.java", "BodyUseAPI": [], "Fixed commit": "d98a3fcee2880eefb8f77d2999fd9c55b4bfeec1", "Url": "https://api.github.com/repos/albertojuarez/FCAQCustomZK", "Date": "2012-10-17T19:45:56Z"},
{"Line": "=>894", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iLockingStrategy == (OStorage.LOCKING_STRATEGY.KEEP_SHARED_LOCK)) ((com.orientechnologies.orient.core.storage.OStorageEmbedded) (getStorage())).acquireReadLock(iRid); else if (iLockingStrategy == (OStorage.LOCKING_STRATEGY.KEEP_EXCLUSIVE_LOCK)) ((com.orientechnologies.orient.core.storage.OStorageEmbedded) (getStorage())).acquireWriteLock(iRid);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8694/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ODatabaseRecordAbstract.java", "BodyUseAPI": [], "Fixed commit": "ba283ae5f971125b2194d78bfb9b215cc774915c", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-03-24T13:51:42Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (query == null) return gene;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7071/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.GeneUtils.java", "BodyUseAPI": [], "Fixed commit": "9b2c7a5a74e1bf45e8b64925d3f1a33eadac53a8", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2017-04-14T23:13:59Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mediaPlayer.isLooping()) == true) { mediaPlayer.seekTo(0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3377/buggy-version/app.src.main.java.com.example.cmq.musicapp.PlayMusicActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.seekTo(int)"], "Fixed commit": "52bf4ec3acb5f27ebcefafbb7d4b7a3abe89810e", "Url": "https://api.github.com/repos/manhquynh-github/MusicApp", "Date": "2017-12-25T16:27:22Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mediaPlayer.isLooping()) == true) { mediaPlayer.seekTo(0); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3377/buggy-version/app.src.main.java.com.example.cmq.musicapp.PlayMusicActivity.java", "BodyUseAPI": ["android.media.MediaPlayer.seekTo(int)"], "Fixed commit": "52bf4ec3acb5f27ebcefafbb7d4b7a3abe89810e", "Url": "https://api.github.com/repos/manhquynh-github/MusicApp", "Date": "2017-12-25T16:27:22Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((typeSpaMetadataArray.length) > 0) && ((typeSpaMetadataArray[0]) != null)) { typeLink = (\"<span class=\\\"icesiicon dc-type-link\\\">\" + (org.dspace.core.Utils.addEntities(typeSpaMetadataArray[0].value))) + \"</span>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1342/buggy-version/dspace.modules.jspui.src.main.java.org.dspace.app.webui.jsptag.BrowseListTag.java", "BodyUseAPI": ["org.dspace.core.Utils.addEntities(typeSpaMetadataArray[0].value)"], "Fixed commit": "f6908f5a305f3764f7d7053dfa0e77da4d3af10a", "Url": "https://api.github.com/repos/DesarrolloWebIcesi/DSpace", "Date": "2014-05-22T14:44:19Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((typeMetadataArray.length) > 0) && ((typeMetadataArray[0]) != null)) { typeIcon = (\"<span class=\\\"icesiicon dc-type-icon icesiicon-\" + (org.dspace.core.Utils.addEntities(typeMetadataArray[0].value))) + \"\\\"></span>\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1342/buggy-version/dspace.modules.jspui.src.main.java.org.dspace.app.webui.jsptag.BrowseListTag.java", "BodyUseAPI": ["org.dspace.core.Utils.addEntities(typeMetadataArray[0].value)"], "Fixed commit": "f6908f5a305f3764f7d7053dfa0e77da4d3af10a", "Url": "https://api.github.com/repos/DesarrolloWebIcesi/DSpace", "Date": "2014-05-22T14:44:19Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastDownloadedReport) != null) { this.mySession.sendNotification(new com.ubcsolar.notification.NewForecastReport(lastDownloadedReport)); }else { this.mySession.getGUIMain().clearWeather(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/133/buggy-version/src.com.ubcsolar.weather.WeatherController.java", "BodyUseAPI": [], "Fixed commit": "31534be46de99e59da00fbba68432f19ea504b7f", "Url": "https://api.github.com/repos/UBC-Solar/Simulator", "Date": "2016-06-05T23:41:48Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((component.getCanonicalName()) != null) && (!(component.getCanonicalName().startsWith(\"org.rapidoid.log.\")))) { org.rapidoid.log.Log.debug(\"Processing POJO\", \"class\", component); java.util.List<java.lang.String> componentPaths = getComponentNames(component); for (java.lang.String componentPath : componentPaths) { for (java.lang.reflect.Method method : component.getMethods()) { if (shouldExpose(method)) { java.util.List<org.rapidoid.dispatch.impl.DispatchReq> actions = getMethodActions(componentPath, method); for (org.rapidoid.dispatch.impl.DispatchReq action : actions) { mappings.put(action, new org.rapidoid.dispatch.impl.DispatchTarget(component, method, action.config)); org.rapidoid.log.Log.info(\"Registered web handler\", \"kind\", action.kind, \"command\", action.command, \"path\", action.path, \"method\", method); } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5385/buggy-version/rapidoid-dispatch.src.main.java.org.rapidoid.dispatch.impl.PojoDispatcherImpl.java", "BodyUseAPI": ["org.rapidoid.log.Log.debug(java.lang.String,java.lang.String,java.lang.Class<?>)", "java.lang.Class<?>.getMethods()", "java.util.Map<org.rapidoid.dispatch.impl.DispatchReq, org.rapidoid.dispatch.impl.DispatchTarget>.put(org.rapidoid.dispatch.impl.DispatchReq,org.rapidoid.dispatch.impl.DispatchTarget)", "org.rapidoid.dispatch.impl.PojoDispatcherImpl.getComponentNames(java.lang.Class<?>)"], "Fixed commit": "28cf3ca85bea3e600748275e75aebf3f556a7687", "Url": "https://api.github.com/repos/zhangwei5095/rapidoid", "Date": "2015-12-15T23:11:31Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cache.containsKey(userUuid)) { org.sakaiproject.profile2.logic.ProfileConnectionsLogicImpl.log.debug((\"Fetching connections from cache for: \" + userUuid)); userUuids = ((java.util.List<java.lang.String>) (cache.get(userUuid))); if (userUuids == null) { org.sakaiproject.profile2.logic.ProfileConnectionsLogicImpl.log.debug((\"Cache appears to have expired for \" + userUuid)); evictFromCache(userUuid); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/46/buggy-version/profile2.impl.src.java.org.sakaiproject.profile2.logic.ProfileConnectionsLogicImpl.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)", "org.apache.log4j.Logger.debug(java.lang.String)", "org.sakaiproject.profile2.logic.ProfileConnectionsLogicImpl.evictFromCache(java.lang.String)", "org.sakaiproject.memory.api.Cache.get(java.lang.String)"], "Fixed commit": "c4ec43eb1bced91899ca01e7d43df4166d759ee7", "Url": "https://api.github.com/repos/NoodlePartners/sakai_work", "Date": "2016-08-04T18:50:05Z"},
{"Line": "=>411", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.stage.FileChooser.showOpenDialog(javafx.stage.Stage)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (filePath != null) { browserPath.setText(filePath.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6269/buggy-version/SWP2015.src.gui.GUI.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "javafx.scene.control.TextField.setText(java.lang.String)"], "Fixed commit": "d45452aaca536f0b87d52b78c30cba3b2ee6ac64", "Url": "https://api.github.com/repos/135Shadowsoul/SWP2015", "Date": "2015-06-29T13:38:03Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (estimatedFractionOfReturn < 0) estimatedFractionOfReturn = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7184/buggy-version/src.investmentGame.actor.game.player.strategy.TitForNWeightedTatsStrategy.java", "BodyUseAPI": [], "Fixed commit": "6bd148ea62c3f622c1a575c67a85530750ae4ec3", "Url": "https://api.github.com/repos/jirko-martin/InvestmentGame", "Date": "2014-03-31T17:14:06Z"},
{"Line": "=>3973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((toHit.getValue()) == (megamek.common.ToHitData.IMPOSSIBLE)) { return toHit.getDesc(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1985/buggy-version/megamek.src.megamek.common.actions.WeaponAttackAction.java", "BodyUseAPI": ["megamek.common.ToHitData.getDesc()"], "Fixed commit": "034dbc722f3a7af51baaa120d1f1797bb0ce3fba", "Url": "https://api.github.com/repos/MegaMek/megamek", "Date": "2016-11-11T17:53:49Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.EditText.getSelectionStart()", "edtSummAvalue.getText().length()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (pos >= len) pos = len;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1163/buggy-version/app.src.main.java.com.by.alex.depositcalcupd.CurrencyOneFragment.java", "BodyUseAPI": [], "Fixed commit": "4d2cea3286f38740a3e4351f61a3253e4f2fc342", "Url": "https://api.github.com/repos/Alexandrfromminsk/DepositCalcUpd", "Date": "2015-07-01T16:20:19Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(enchantments.isEmpty())) { builder.add(Keys.ITEM_ENCHANTMENTS, enchantments); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8936/buggy-version/src.main.java.io.badgeup.sponge.award.ItemAward.java", "BodyUseAPI": ["ItemStack.Builder.add(Keys.ITEM_ENCHANTMENTS,java.util.List<org.spongepowered.api.data.meta.ItemEnchantment>)"], "Fixed commit": "4a5e3744726e0eba5368ed2cd71450186f32cfc9", "Url": "https://api.github.com/repos/BadgeUp/badgeup-sponge-client", "Date": "2016-08-16T21:35:02Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof org.jboss.resteasy.spi.InternalServerErrorException) { code = \"500\"; }else if (e instanceof javax.ws.rs.WebApplicationException) { code = \"500\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5705/buggy-version/rest-service.src.main.java.org.teiid.jboss.rest.TeiidRSExceptionHandler.java", "BodyUseAPI": [], "Fixed commit": "5672f495441278e81d2883e950a381362145d969", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2016-06-25T19:24:49Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((valueString.length()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2670/buggy-version/library.src.com.androidformenhancer.internal.ValidationManager.java", "BodyUseAPI": [], "Fixed commit": "ce4a4a12f4ad8c2a249c7480c47bc7a24f7f862d", "Url": "https://api.github.com/repos/ksoichiro/AndroidFormEnhancer", "Date": "2013-01-11T21:27:11Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (lastBuffer != null) { addChildToBuffer(buffer, lastBuffer, monitorCount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2891/buggy-version/erma-lib.src.java.com.orbitz.monitoring.lib.renderer.EventPatternMonitorRenderer.java", "BodyUseAPI": ["com.orbitz.monitoring.lib.renderer.EventPatternMonitorRenderer.addChildToBuffer(java.lang.StringBuffer,java.lang.StringBuffer,int)"], "Fixed commit": "841959948684398fdc0ccb789d78d7a7ab4febb1", "Url": "https://api.github.com/repos/erma/erma", "Date": "2013-11-18T16:42:18Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (key.contains(\".\")) criteria.add(org.hibernate.criterion.Restrictions.eq(key, java.lang.Long.parseLong(filterMap.get(key)))); else criteria.add(org.hibernate.criterion.Restrictions.eq(key, filterMap.get(key)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2905/buggy-version/src.main.java.com.MobyRx.java.dao.impl.PatientDaoImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.eq(key, java.lang.Long.parseLong(filterMap.get(key))))", "org.hibernate.criterion.Restrictions.eq(java.lang.String,long)", "java.lang.Long.parseLong(java.lang.String)", "org.hibernate.criterion.Restrictions.eq(java.lang.String,java.lang.String)", "org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.eq(key, filterMap.get(key)))", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "78574b0b08fafd3152a63d88e2ff5963963f1157", "Url": "https://api.github.com/repos/MobyRx/MobyRx-web", "Date": "2017-01-01T16:33:43Z"},
{"Line": "=>6", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value < 0) throw new java.lang.IllegalArgumentException(\"negative value\"); else if (value < (1 << 15)) os.writeShort(((short) (value))); else if (value < (1 << 30)) os.writeInt((((int) (value)) | (2 << 30))); else if (value < (1 << 62)) os.writeLong((value | (3 << 62))); else throw new java.lang.IllegalArgumentException(\"value greater than 2**62-1\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8672/buggy-version/sources.de.cygx.crow.Varint.java", "BodyUseAPI": ["java.io.DataOutputStream.writeLong(long)"], "Fixed commit": "d578f01ef38a021dd7e82efd8ec5bfd7449d988b", "Url": "https://api.github.com/repos/cygx/crow", "Date": "2016-11-11T18:47:45Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((boundingBoxVertices.size()) < 3) { java.lang.System.out.println(((\"Invalid bounding box! Only \" + (boundingBoxVertices.size())) + \" vertices set.\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6768/buggy-version/src.main.java.org.fogbowcloud.sebal.SEBAL.java", "BodyUseAPI": ["java.io.PrintStream.println(((\"Invalid bounding box! Only \" + (boundingBoxVertices.size())) + \" vertices set.\"))", "java.util.List<org.fogbowcloud.sebal.BoundingBoxVertice>.size()"], "Fixed commit": "27e228a9179797907f000501e8d06b55aab1e1ad", "Url": "https://api.github.com/repos/fogbow/SEBAL", "Date": "2015-05-13T13:04:44Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.code.yanf4j.core.Session.getRemoteSocketAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((serverAddress.getPort()) != (net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator.DEFAULT_PORT)) { sockStr = (sockStr + \":\") + (serverAddress.getPort()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5085/buggy-version/src.main.java.net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator.java", "BodyUseAPI": ["java.net.InetSocketAddress.getPort()"], "Fixed commit": "75aa8c7128329be19f37fc0abd977ec191c500ff", "Url": "https://api.github.com/repos/killme2008/xmemcached", "Date": "2012-03-29T05:20:48Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getMessage()) != null) { actionErrors.add(\"error\", new org.apache.struts.action.ActionMessage(e.getMessage())); }else { actionErrors.add(\"error\", new org.apache.struts.action.ActionMessage(\"label.invalid.student.number\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6860/buggy-version/src.main.java.org.fenixedu.academic.ui.struts.action.teacher.ManageExecutionCourseDA.java", "BodyUseAPI": ["org.fenixedu.academic.service.services.exceptions.FenixServiceException.getMessage()", "org.apache.struts.action.ActionErrors.add(java.lang.String,org.apache.struts.action.ActionMessage)"], "Fixed commit": "a8fad7774ae49cdc2fef50aa342ae707841bfb79", "Url": "https://api.github.com/repos/andre-nunes/fenixedu-academic", "Date": "2015-03-30T11:28:19Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ist.fenixframework.FenixFramework.getDomainObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((selectedShift.getLotacao().intValue()) <= (selectedShift.getStudentsSet().size())) { throw new org.fenixedu.academic.service.services.exceptions.FenixServiceException(\"error.exception.shift.full\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6860/buggy-version/src.main.java.org.fenixedu.academic.service.services.enrollment.shift.EnrollStudentInShifts.java", "BodyUseAPI": [], "Fixed commit": "a8fad7774ae49cdc2fef50aa342ae707841bfb79", "Url": "https://api.github.com/repos/andre-nunes/fenixedu-academic", "Date": "2015-03-30T11:28:19Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.LinkedList<com.vk.tottenham.footballapi.model.Fixture>>.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (notScheduled != null) { monthToFixture.put(com.vk.tottenham.scheduler.CalendarPageUpdater.UNKNOWN_DATE, notScheduled); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6107/buggy-version/src.main.java.com.vk.tottenham.scheduler.CalendarPageUpdater.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.LinkedList<com.vk.tottenham.footballapi.model.Fixture>>.put(java.lang.String,java.util.LinkedList<com.vk.tottenham.footballapi.model.Fixture>)"], "Fixed commit": "a036ca93d2e5c424f08f015f199cdd539be8f71e", "Url": "https://api.github.com/repos/GoranDrazic/VKWebProject", "Date": "2017-04-25T00:04:15Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cc.easyandroid.flexiblelistviewadapter.EasyFlexibleListViewAdapter<T>.getViewTypeInstance(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (flexible == null) { flexible = mItems.get(position); mapViewTypeFrom(flexible); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8014/buggy-version/flexiblelistviewadapter.src.main.java.cc.easyandroid.flexiblelistviewadapter.EasyFlexibleListViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "110439c27729c0cedae033334a12e596f7aa7ad0", "Url": "https://api.github.com/repos/cgpllx/FlexibleListViewAdatpter", "Date": "2016-10-17T10:28:42Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (json == null) return new java.util.ArrayList<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5537/buggy-version/app.src.main.java.cat.udl.menufinder.ws.WebServiceUtils.java", "BodyUseAPI": [], "Fixed commit": "760d6f9ea0ecca4c26ff46d17b4be30df8e4a8c3", "Url": "https://api.github.com/repos/MenuFinder/AndroidClient", "Date": "2016-12-19T01:55:03Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.itransformers.snmp2xml4j.snmptoolkit.MibValueSymbol.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((symbolType.getDescription()) != null) { description = symbolType.getDescription().replaceAll(\"\\\\n\", \" \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3212/buggy-version/snmptoolkit.src.main.java.net.itransformers.snmp2xml4j.snmptoolkit.SnmpXmlPrinter.java", "BodyUseAPI": ["symbolType.getDescription().replaceAll(java.lang.String,java.lang.String)", "net.percederberg.mibble.snmp.SnmpObjectType.getDescription()"], "Fixed commit": "c7da1520b870e31df5e4965eb887843f906375c8", "Url": "https://api.github.com/repos/iTransformers/snmp2xml4j", "Date": "2016-09-16T13:37:23Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (prev != null) { boolean mSkipNextMoveEvent = (prev.getPointerCount()) != (curr.getPointerCount()); mFocusDeltaExternal = (mSkipNextMoveEvent) ? com.almeros.android.multitouch.MoveGestureDetector.FOCUS_DELTA_ZERO : new android.graphics.PointF(((mCurrFocusInternal.x) - (mPrevFocusInternal.x)), ((mCurrFocusInternal.y) - (mPrevFocusInternal.y))); mFocusExternal.x += mFocusDeltaExternal.x; mFocusExternal.y += mFocusDeltaExternal.y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6055/buggy-version/library.src.main.java.com.almeros.android.multitouch.MoveGestureDetector.java", "BodyUseAPI": ["android.view.MotionEvent.getPointerCount()"], "Fixed commit": "87605e064a398fbbff3493892a468efff1969795", "Url": "https://api.github.com/repos/skonb/android-gesture-detectors", "Date": "2016-06-20T09:48:36Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.workload) < 100) (this.workload)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2314/buggy-version/visp-loadsimulator.src.main.java.simulation.cpu.AbstractCpuSimulator.java", "BodyUseAPI": [], "Fixed commit": "183cb5fbf0c3a6999dcffc21b467c3a4175c5eff", "Url": "https://api.github.com/repos/msigwart/fakeload-app", "Date": "2017-06-17T17:02:53Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.workload) > 0) (this.workload)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2314/buggy-version/visp-loadsimulator.src.main.java.simulation.cpu.AbstractCpuSimulator.java", "BodyUseAPI": [], "Fixed commit": "183cb5fbf0c3a6999dcffc21b467c3a4175c5eff", "Url": "https://api.github.com/repos/msigwart/fakeload-app", "Date": "2017-06-17T17:02:53Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opentripplanner.routing.graph.Edge.weightLowerBound(org.opentripplanner.routing.core.RoutingRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Double.isInfinite(ew)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1355/buggy-version/otp-core.src.main.java.org.opentripplanner.routing.algorithm.strategies.InterleavedBidirectionalHeuristic.java", "BodyUseAPI": [], "Fixed commit": "a8f1487f13768223a64ae58b416f66347811125c", "Url": "https://api.github.com/repos/goabout/OpenTripPlanner", "Date": "2013-09-19T10:41:47Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (slingshot) { slingshot = false; control.specialMoveSlingshot(this, slingshotStrength); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2464/buggy-version/Platformer.src.com.gravity.fauna.Player.java", "BodyUseAPI": [], "Fixed commit": "1c8dc191d7bebf3f0d2267b2e778a84b229f8626", "Url": "https://api.github.com/repos/dPATHo/PPBunnies", "Date": "2012-12-05T01:46:49Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (bw != null) { bw.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5867/buggy-version/app.src.main.java.com.pokescanner.multiboxing.MultiboxingActivity.java", "BodyUseAPI": ["java.io.BufferedReader.close()"], "Fixed commit": "a79f37b510a74d87b6fee4aef1f34a19b5dee156", "Url": "https://api.github.com/repos/ecl1ps/PSC", "Date": "2016-09-09T05:39:14Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (method instanceof IC.AST.LibraryMethod) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1026/buggy-version/PA2.src.IC.SemanticChecks.methodReturnPaths.java", "BodyUseAPI": [], "Fixed commit": "a4825a9af13e10e8b83a0319eff27f14998c4597", "Url": "https://api.github.com/repos/DLif/Compiler_IC", "Date": "2014-12-16T11:26:00Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pathBuilderFactory.supportsPathReconstruction()) erasureMode = soot.jimple.infoflow.data.FlowDroidMemoryManager.PathDataErasureMode.EraseNothing;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4242/buggy-version/src.soot.jimple.infoflow.Infoflow.java", "BodyUseAPI": [], "Fixed commit": "94478483bde5b966c8abcf152f1c2b6cdf8656c2", "Url": "https://api.github.com/repos/Xiejiayun/soot-infoflow", "Date": "2015-12-20T01:33:56Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pathBuilderFactory.isContextSensitive()) erasureMode = soot.jimple.infoflow.data.FlowDroidMemoryManager.PathDataErasureMode.KeepOnlyContextData;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4242/buggy-version/src.soot.jimple.infoflow.Infoflow.java", "BodyUseAPI": [], "Fixed commit": "94478483bde5b966c8abcf152f1c2b6cdf8656c2", "Url": "https://api.github.com/repos/Xiejiayun/soot-infoflow", "Date": "2015-12-20T01:33:56Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((erasePathData) == (soot.jimple.infoflow.data.FlowDroidMemoryManager.PathDataErasureMode.KeepOnlyContextData)) && ((output.getCorrespondingCallSite()) == null)) { if (((output.getCurrentStmt()) != null) && (!(output.getCurrentStmt().containsInvokeExpr()))) doErase = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4242/buggy-version/src.soot.jimple.infoflow.data.FlowDroidMemoryManager.java", "BodyUseAPI": ["soot.jimple.infoflow.data.Abstraction.getCurrentStmt()", "soot.jimple.infoflow.data.Abstraction.getCurrentStmt()", "output.getCurrentStmt().containsInvokeExpr()"], "Fixed commit": "94478483bde5b966c8abcf152f1c2b6cdf8656c2", "Url": "https://api.github.com/repos/Xiejiayun/soot-infoflow", "Date": "2015-12-20T01:33:56Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(canMove())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6198/buggy-version/stage2.Part2.src.ZBug.java", "BodyUseAPI": [], "Fixed commit": "f7f3581d9a3c8cd37abcc8ad90db88cabe1b6392", "Url": "https://api.github.com/repos/daix6/GridWorld", "Date": "2015-08-20T03:18:29Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Arrays.equals(collection, copiedArray)) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4324/buggy-version/opensort-core.src.main.java.com.code2bits.opensort.utils.ArrayUtils.java", "BodyUseAPI": [], "Fixed commit": "0f82f65bc4ccb8c008754ad81d5fa4c14bbc5b59", "Url": "https://api.github.com/repos/Code2Bits/OpenSort", "Date": "2017-11-02T07:30:53Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.badlogic.gdx.utils.reflect.Field.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ret == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/6215/buggy-version/editor.core.src.main.java.es.eucm.ead.editor.search.Index.java", "BodyUseAPI": [], "Fixed commit": "0eda8ab0160a18d86943def17e808733602fe713", "Url": "https://api.github.com/repos/jtorrente/ead", "Date": "2014-03-20T22:37:49Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (data != null) onPickActivityResult(data);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7465/buggy-version/app.src.main.java.kagy.com.calldaemon.MainActivity.java", "BodyUseAPI": ["kagy.com.calldaemon.MainActivity.onPickActivityResult(android.content.Intent)"], "Fixed commit": "73fbda0ce38edd75f66ffe3d031262c16f0067e3", "Url": "https://api.github.com/repos/kagy8585/call-daemon", "Date": "2016-12-01T10:47:51Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.apache.pdfbox.pdmodel.font.PDType0Font) (this.pdFontLike)).getDescendantFont()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (descendantFont != null) { org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo cidSystemInfo = descendantFont.getCIDSystemInfo(); org.apache.fontbox.cmap.CMap currentCMap = ((org.apache.pdfbox.pdmodel.font.PDType0Font) (this.pdFontLike)).getCMap(); if ((cidSystemInfo != null) && (currentCMap != null)) { return java.lang.Boolean.valueOf(((cidSystemInfo.getSupplement()) >= (currentCMap.getSupplement()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3302/buggy-version/pdfbox-validation-model.src.main.java.org.verapdf.model.impl.pb.pd.font.PBoxPDType0Font.java", "BodyUseAPI": ["org.verapdf.model.pdlayer.PDCIDFont.getCIDSystemInfo()"], "Fixed commit": "3ee0c9c369e39d380be1ebfea7878ee427585139", "Url": "https://api.github.com/repos/shem-sergey/veraPDF-pdfbox-validation", "Date": "2016-05-14T09:15:09Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"/7fff7669/4050/Messenger\".equals(path)) { try { org.videolan.IxcRegistryImpl.logger.error((\"Enabling Ixc delay hack for \" + path)); java.lang.Thread.sleep(200L); } catch (java.lang.InterruptedException ie) { ie.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3740/buggy-version/src.libbluray.bdj.java.org.videolan.IxcRegistryImpl.java", "BodyUseAPI": ["org.videolan.Logger.error(java.lang.String)"], "Fixed commit": "afb6d9af4753a620902fbaa5272fe10cab86e86d", "Url": "https://api.github.com/repos/tourettes/libbluray", "Date": "2015-09-17T15:34:12Z"},
{"Line": "=>4109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null != (this.selectedCrsName)) && (!(this.selectedCrsName.isEmpty()))) { if (null != oper) { initialVersion = ((java.lang.Boolean) (oper.execute())); com.novartis.ecrs.ui.bean.ManageCRSBean.logger.info((\"isCRSVersionInitial...\" + (initialVersion.booleanValue()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4457/buggy-version/ECRS.ECRSViewController.src.com.novartis.ecrs.ui.bean.ManageCRSBean.java", "BodyUseAPI": [], "Fixed commit": "5351a81ecaca9d04381468aff6b8cdeaecc32c82", "Url": "https://api.github.com/repos/hpothuri/ecrs", "Date": "2015-11-24T14:55:43Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (requestTimeout > 0) { delegate.setRequestTimeout(requestTimeout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5179/buggy-version/src.main.java.argelbargel.jenkins.plugins.gitlab_branch_source.api.GitLabAPI.java", "BodyUseAPI": ["org.gitlab.api.GitlabAPI.setRequestTimeout(int)"], "Fixed commit": "9a0ec6c549cf3ee12738f2038be67672da60a072", "Url": "https://api.github.com/repos/Argelbargel/gitlab-branch-source-plugin", "Date": "2017-11-21T17:05:05Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (startTime == 0) { startTime = java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7065/buggy-version/src.main.java.me.cmath.streamingestor.MainIngestor.java", "BodyUseAPI": [], "Fixed commit": "3457b5cf4b09c7f03b71ec787b7ee1d368d37c6b", "Url": "https://api.github.com/repos/christianmat/streamingestor", "Date": "2016-03-02T16:50:21Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mRecyclerView)) { mRecyclerView.clearOnScrollListeners(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/9085/buggy-version/app.src.main.java.com.example.android.sunshine.app.ForecastFragment.java", "BodyUseAPI": [], "Fixed commit": "4b2c31e4d7759a6ac203969103c93c3f0a8188f6", "Url": "https://api.github.com/repos/eliamyro/sunshine", "Date": "2015-08-25T14:53:08Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (modelHandlerMap.containsKey(modelObject)) modelHandlerMap.get(modelObject).getModelOntologyManager().saveOntology();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1708/buggy-version/oida.bridge.src.oida.bridge.service.OIDABridge.java", "BodyUseAPI": ["modelHandlerMap.get(modelObject).getModelOntologyManager().saveOntology()", "modelHandlerMap.get(modelObject).getModelOntologyManager()", "java.util.Map<org.eclipse.emf.ecore.EObject, oida.bridge.model.IModelChangeHandler>.get(org.eclipse.emf.ecore.EObject)"], "Fixed commit": "4a91cbc808e96ab32e36b8d40a76f02f6d5e815d", "Url": "https://api.github.com/repos/martinglas/oida", "Date": "2017-03-09T10:54:50Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.pratilipi.commons.server.PratilipiHelper.get(request).hasUserAccess(com.pratilipi.pagecontent.pratilipi.PratilipiContentHelper.ACCESS_TO_ADD_PRATILIPI_DATA)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4641/buggy-version/src.com.pratilipi.pagecontent.pratilipi.PratilipiContentHelper.java", "BodyUseAPI": [], "Fixed commit": "d348398c0947cc70da9a27eac0d9d483db6367e8", "Url": "https://api.github.com/repos/antshpra/pratilipi", "Date": "2014-10-17T09:41:16Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.pratilipi.commons.server.PratilipiHelper.get(request).hasUserAccess(com.pratilipi.pagecontent.pratilipi.PratilipiContentHelper.ACCESS_TO_UPDATE_PRATILIPI_DATA)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4641/buggy-version/src.com.pratilipi.pagecontent.pratilipi.PratilipiContentHelper.java", "BodyUseAPI": [], "Fixed commit": "d348398c0947cc70da9a27eac0d9d483db6367e8", "Url": "https://api.github.com/repos/antshpra/pratilipi", "Date": "2014-10-17T09:41:16Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i != 0) { maze[i][j].upOpen = maze[(i - 1)][j].downOpen; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/959/buggy-version/src.MazePuzzle.java", "BodyUseAPI": [], "Fixed commit": "e8dcc507fb67879aaddb08ed0b24d3c08232429b", "Url": "https://api.github.com/repos/rgma/GroupProject", "Date": "2016-05-09T05:53:59Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j != 0) { maze[i][j].leftOpen = maze[i][(j - 1)].rightOpen; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/959/buggy-version/src.MazePuzzle.java", "BodyUseAPI": [], "Fixed commit": "e8dcc507fb67879aaddb08ed0b24d3c08232429b", "Url": "https://api.github.com/repos/rgma/GroupProject", "Date": "2016-05-09T05:53:59Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.extensions.webscripts.WebScriptRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (sites != null) { java.lang.String[] sitesToken = sites.split(\",\"); for (java.lang.String siteId : sitesToken) { params.setSite(siteId); } }else { java.util.List<org.alfresco.service.cmr.site.SiteInfo> sitesInfo = siteService.listSites(\"\", \"\"); if ((sitesInfo.size()) > 0) { for (org.alfresco.service.cmr.site.SiteInfo siteInfo : sitesInfo) { params.setSite(siteInfo.getShortName()); } }else { params.setGroupNames(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3772/buggy-version/module_alfresco.src.java.com.atolcd.alfresco.web.scripts.shareStats.SelectUsersGet.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "55d466b4c344b8cc1020ae979a4280e6b278c315", "Url": "https://api.github.com/repos/atolcd/alfresco-audit-share", "Date": "2013-07-23T12:50:17Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.cards.contains(slidingCard))) { io.github.zachohara.percussionpacker.cardtype.SpaceCard spacer = this.spacerMap.remove(slidingCard); int insertIndex = this.cards.indexOf(spacer); this.set(insertIndex, slidingCard); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3997/buggy-version/src.io.github.zachohara.percussionpacker.column.CardList.java", "BodyUseAPI": ["java.util.List<io.github.zachohara.percussionpacker.cardentity.CardEntity>.indexOf(io.github.zachohara.percussionpacker.cardtype.SpaceCard)", "io.github.zachohara.percussionpacker.column.CardList.set(int,io.github.zachohara.percussionpacker.cardentity.CardEntity)", "java.util.Map<io.github.zachohara.percussionpacker.cardentity.CardEntity, io.github.zachohara.percussionpacker.cardtype.SpaceCard>.remove(io.github.zachohara.percussionpacker.cardentity.CardEntity)"], "Fixed commit": "a75485604666d28621ebe2ac9859dbca8809431c", "Url": "https://api.github.com/repos/ZachOhara/Percussion-Packer", "Date": "2016-05-23T04:01:44Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((graphValues) != null) { bufferYmax = findHighestValue(); bufferYmin = findLowestValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5107/buggy-version/rtcharts-swing.src.main.java.org.thingml.rtcharts.swing.GraphPanel.java", "BodyUseAPI": [], "Fixed commit": "bd26db7f0a9a64990e47255579b73257f6466712", "Url": "https://api.github.com/repos/SINTEF-9012/rtcharts", "Date": "2015-06-24T11:56:10Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (1 == (rows)) isX = true; else if (1 == (cols)) isX = false; else isX = core.Utils.getRand().nextBoolean();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1276/buggy-version/src.main.java.core.Grid.java", "BodyUseAPI": [], "Fixed commit": "9b1042b9057039aded7963bfdd049699227d3694", "Url": "https://api.github.com/repos/skfarhat/oop-assign", "Date": "2017-04-18T06:12:17Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((1 == (cols)) && (1 == (rows))) return new core.Point2D(p);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1276/buggy-version/src.main.java.core.Grid.java", "BodyUseAPI": [], "Fixed commit": "9b1042b9057039aded7963bfdd049699227d3694", "Url": "https://api.github.com/repos/skfarhat/oop-assign", "Date": "2017-04-18T06:12:17Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (k != 0) { for (int step = 0; step <= k; step++) { writerImplementation.println((\"//Base \" + step)); writerImplementation.println(\"//read_inputs;\"); writerImplementation.println(base.get(step).getSkolemRelation()); writerImplementation.println(\"//update array history \\n\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7433/buggy-version/jkind.src.jkind.realizability.engines.RealizabilityDirector.java", "BodyUseAPI": [], "Fixed commit": "86f93d76a733b546a50b928fffa8929903655b87", "Url": "https://api.github.com/repos/andrewkatis/jkind-1", "Date": "2016-10-12T14:02:48Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Document.getElementsByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((headerEles.size()) > 0) { doc.getElementsByTag(\"header\").append(css); }else { org.jsoup.nodes.Element headerEle = doc.children().get(0).child(0); headerEle.append(css); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5133/buggy-version/src.MocGithub.ParseHtml.java", "BodyUseAPI": [], "Fixed commit": "f7e5b13e1c5793bb528958c9ffa586160a813ced", "Url": "https://api.github.com/repos/shuiblue/INFOX", "Date": "2017-08-02T03:25:51Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dragType == 1) mouseStackSize = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3404/buggy-version/src.Common.com.bioxx.tfc2.containers.ContainerPlayerTFC.java", "BodyUseAPI": [], "Fixed commit": "9d10f4d5209671ad8f861df5da35e8b610378173", "Url": "https://api.github.com/repos/Deadrik/TFC2", "Date": "2017-06-01T07:08:30Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((Build.VERSION.SDK_INT) <= (Build.VERSION_CODES.JELLY_BEAN)) && (indicatorTypeface.equals(\"sans-serif-thin\"))) { indicatorTypeface = \"sans-serif-light\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/864/buggy-version/app.src.main.java.me.kfang.levelly.app.LevelView.java", "BodyUseAPI": [], "Fixed commit": "9b4db21e6e93cc284ad111952a433c77fc5a41e7", "Url": "https://api.github.com/repos/kxfang/Level", "Date": "2014-06-06T16:07:37Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasEmptyLineAfter(ast))) { log(nextToken.getLineNo(), com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck.MSG_SHOULD_BE_SEPARATED, nextToken.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2379/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck.java", "BodyUseAPI": [], "Fixed commit": "a0acabc125d3398e13655302500423c01e10dcb0", "Url": "https://api.github.com/repos/checkstyle/checkstyle", "Date": "2015-05-02T13:27:07Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((numMerged % 100) == 0) java.lang.System.out.println((((((\"Merged \" + x) + \" with \") + y) + \" as merge # \") + numMerged));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7867/buggy-version/src.reduceOTU.Cluster.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "8baed08134a78037f1a934868a019b4879aebd76", "Url": "https://api.github.com/repos/afodor/metagenomicsTools", "Date": "2013-07-28T14:44:29Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (db.isPooled()) { org.segrada.service.repository.orientdb.base.AbstractOrientDbRepository.logger.warn(\"Cannot reopen closed remote db - fix this in code!\"); }else { db.open(repositoryFactory.getApplicationSettings().getSetting(\"orientDB.login\"), repositoryFactory.getApplicationSettings().getSetting(\"orientDB.password\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/651/buggy-version/src.main.java.org.segrada.service.repository.orientdb.base.AbstractOrientDbRepository.java", "BodyUseAPI": ["org.segrada.service.repository.orientdb.base.AbstractOrientDbRepository.open(repositoryFactory.getApplicationSettings().getSetting(\"orientDB.login\"),repositoryFactory.getApplicationSettings().getSetting(\"orientDB.password\"))"], "Fixed commit": "39a8fee11ba2f4110ed8b90d5b72c9fa719c97cc", "Url": "https://api.github.com/repos/mkalus/segrada", "Date": "2016-12-09T12:42:14Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.edgebox.eacds.net.CDPostResponse.build(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pr.success) { java.lang.String school_jason = pr.data.toString(); return gson.fromJson(school_jason, com.edgebox.eacds.data.CDSchool.class); }else { java.util.logging.Logger.getLogger(this.getClass().getName()).log(java.util.logging.Level.FINE, pr.log()); throw new java.lang.Exception(pr.message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4376/buggy-version/src.com.edgebox.eacds.SSchool.java", "BodyUseAPI": ["pr.data.toString()", "java.util.logging.Logger.log(java.util.logging.Level,pr.log())", "com.edgebox.eacds.net.CDPostResponse.log()"], "Fixed commit": "80211681f0e6a7dc4390733f65821c2a763e336f", "Url": "https://api.github.com/repos/augcampos/eacds-cj", "Date": "2014-01-07T21:57:21Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (previousGraph != null) ((android.view.ViewGroup) (convertView)).removeView(previousGraph);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8797/buggy-version/Oscilloscope.src.com.jangonera.oscilloscope.GraphsFragment.java", "BodyUseAPI": ["android.view.View.removeView(android.view.View)"], "Fixed commit": "d488b82fc6bb121e44c45958c76e54b306dfcc02", "Url": "https://api.github.com/repos/rainqer/oscilloscope", "Date": "2014-04-14T15:52:03Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.microsoftopentechnologies.tooling.msservices.model.storage.StorageAccount.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((((type.equals(StorageAccountTypes.STANDARD_GRS)) || (type.equals(StorageAccountTypes.STANDARD_LRS))) || (type.equals(StorageAccountTypes.STANDARD_RAGRS))) || (type.equals(StorageAccountTypes.STANDARD_ZRS))) { addChildNode(new com.microsoftopentechnologies.tooling.msservices.serviceexplorer.azure.storage.StorageNode(this, sm)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1994/buggy-version/src.common.src.com.microsoftopentechnologies.tooling.msservices.serviceexplorer.azure.storage.StorageModule.java", "BodyUseAPI": [], "Fixed commit": "2d5f1f30f08617f8dfdaf2596a991af4a8cd2227", "Url": "https://api.github.com/repos/leotilli/msopentech-tools-for-intellij", "Date": "2015-07-08T20:55:52Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (kilim.timerservice.TimerService.debugStats) java.lang.System.out.format(\"timerservice: %d %d %d\\n\", kilim.timerservice.TimerService.c1, kilim.timerservice.TimerService.c2, kilim.timerservice.TimerService.c3);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2558/buggy-version/src.kilim.timerservice.TimerService.java", "BodyUseAPI": [], "Fixed commit": "92d285865dcc0bb60f62096a179cc91d8b0b2c04", "Url": "https://api.github.com/repos/nqzero/kilim", "Date": "2016-09-05T23:06:12Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jembi.rhea.RestfulHttpRequest.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (path.contains(\"/encounters\")) { path = (((\"ws/rest/v1/patient/\" + enterpriseIdType) + \"-\") + ecid) + \"/encounters\"; }else if (path.contains(\"/encounter/\")) { path = (((\"ws/rest/v1/patient/\" + enterpriseIdType) + \"-\") + ecid) + (path.substring(path.indexOf(\"/encounter\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3306/buggy-version/src.main.java.org.jembi.rhea.transformers.QueryEncounterInjectECIDTransformer.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "e0c1405cd7c2790d4c984cee8f4e3127a931020d", "Url": "https://api.github.com/repos/jembi/openhim", "Date": "2013-03-20T11:30:42Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entityLivingBase.getRidingEntity()) != null) { if ((entityLivingBase.getRidingEntity()) instanceof net.minecraft.entity.passive.EntityHorse) { org.lwjgl.opengl.GL11.glTranslated(0.0, 0.55, 0.1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1019/buggy-version/src.main.java.mca.client.render.RenderHuman.java", "BodyUseAPI": ["mca.entity.EntityHuman.getRidingEntity()"], "Fixed commit": "f1594a4a875cb7c8258a403b8c4b2d17f93e981c", "Url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive", "Date": "2016-04-16T22:55:56Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(message.equals(\"\"))) { java.lang.System.out.println(\"Invalid command\"); message = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3154/buggy-version/client.java", "BodyUseAPI": [], "Fixed commit": "274ff09db8e43a8fd990ce75682e54951e842114", "Url": "https://api.github.com/repos/xStaticVoid/JavaChat", "Date": "2017-11-17T21:24:41Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.activityinfo.legacy.shared.adapter.bindings.SiteBinding.toChangePropertyMap(org.activityinfo.core.shared.form.FormInstance)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((siteProperties.get(\"reportingPeriodId\")) == null) { siteProperties.put(\"reportingPeriodId\", new org.activityinfo.legacy.client.KeyGenerator().generateInt()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4669/buggy-version/server.src.main.java.org.activityinfo.legacy.shared.adapter.SitePersister.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,new org.activityinfo.legacy.client.KeyGenerator().generateInt())"], "Fixed commit": "b3201c1985f7b30cef5b2ceea9206d84dafe97eb", "Url": "https://api.github.com/repos/bedatadriven/activityinfo", "Date": "2014-05-23T15:47:39Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((armorOwner.equals(\"william\")) && (entity.isSprinting())) { return \"/mods/lyoko/textures/armor/blank.png\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7158/buggy-version/matt.lyoko.items.ArmorLyoko.java", "BodyUseAPI": [], "Fixed commit": "c8962694705315ad0391d5f0fca4d1aa983d3280", "Url": "https://api.github.com/repos/code-lyoko-modding/CodeLyokoMod", "Date": "2013-05-20T01:21:58Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ij.gui.Roi.getMask()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((mask.getWidth()) != (stack.getWidth())) || ((mask.getHeight()) != (stack.getHeight()))) { image.ImageByte i = ((image.ImageByte) (image.IJImageWrapper.wrap(new ij.ImagePlus(\"\", mask)))); image.ImageByte iOut = new image.ImageByte(\"\", bounds.getSizeX(), bounds.getSizeY(), 1); image.ImageOperations.pasteImage(i, iOut, new image.BoundingBox(((bds.x) - (bounds.getxMin())), ((bds.y) - (bounds.getyMin())), 0)); mask = image.IJImageWrapper.getImagePlus(iOut).getProcessor(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/2590/buggy-version/src.main.java.dataStructure.containers.ObjectContainerIjRoi.java", "BodyUseAPI": ["image.IJImageWrapper.wrap(ij.ImagePlus)"], "Fixed commit": "9bdf6efa2c6714584fa2da8ebc859a146fd8f4b1", "Url": "https://api.github.com/repos/jeanollion/bacmman", "Date": "2015-12-21T13:29:52Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cut_count > 0) { item_stack.damageItem(1, player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/3596/buggy-version/mindpin.items.ItemWheatCutter.java", "BodyUseAPI": [], "Fixed commit": "605930e0a2710900c1a2c9c22ee6320e136a671b", "Url": "https://api.github.com/repos/ben7th/minecraft_mod", "Date": "2013-01-02T15:14:34Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getReportTime()", "java.lang.Object.getReportTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (time1 < time2) { return 1; }else if (time1 == time2) { return 0; }else { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/9055/buggy-version/app.src.main.java.net.rofael.uabparkingfinder.ReportComparator.java", "BodyUseAPI": [], "Fixed commit": "2087e320674109e00e3051091aa368febb27f81d", "Url": "https://api.github.com/repos/rkalz/UABParkingFinderAndroid", "Date": "2017-02-26T22:39:33Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) && ((imgView) != null)) { imgView.setImageResource(defaultImg); scheduleStartPostponedTransition(imgView, ((android.app.Activity) (this.ctx))); }else { com.bumptech.glide.Glide.with(ctx).load(defaultImg).fitCenter().into(target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/4461/buggy-version/xyzreader.XYZReader.src.main.java.com.example.xyzreader.ui.GlideLoaderListener.java", "BodyUseAPI": [], "Fixed commit": "5f8bf56ddb538308f2d6957570ec6aca1c8604cd", "Url": "https://api.github.com/repos/theeheng/MakeYourAppMaterial", "Date": "2016-01-20T14:32:02Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((line.startsWith(\"/nick\")) || (line.startsWith(\"/q\"))) { message = \"C=\" + (line.trim()); }else if (chatter.ChatClient.layout.clientList.isSelectionEmpty()) { message = \"M=\" + (line.trim()); }else if ((chatter.ChatClient.layout.clientList.getSelectedIndex()) == 0) { message = \"M=\" + (line.trim()); }else { java.lang.Object recipient = chatter.ChatClient.layout.clientList.getSelectedValue(); message = ((\"P=\" + recipient) + \"=\") + (line.trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/7651/buggy-version/src.chatter.ChatClient.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.trim()", "java.lang.String.trim()", "java.lang.String.trim()"], "Fixed commit": "987263b326db23944b16bfef3d68682293303b7b", "Url": "https://api.github.com/repos/daissatou/adv-prog-chatter", "Date": "2017-11-07T00:17:56Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((whichMonth) < 11) { whichMonth += 1; monthSetter += 1; }else { whichMonth = 0; monthSetter = 0; whichYear += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/873/buggy-version/app.src.main.java.lar.com.lookaround.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "dde97d49b2a91dcf48060e6828ab33bb59a20ddb", "Url": "https://api.github.com/repos/itechline/Lookaround", "Date": "2016-05-26T22:25:54Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((whichMonth) > 0) { whichMonth -= 1; monthSetter -= 1; }else { whichMonth = 11; monthSetter = 11; whichYear -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/873/buggy-version/app.src.main.java.lar.com.lookaround.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "dde97d49b2a91dcf48060e6828ab33bb59a20ddb", "Url": "https://api.github.com/repos/itechline/Lookaround", "Date": "2016-05-26T22:25:54Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((card.getSupertypes().get(0).length()) > 0) { this.supertype = card.getSupertypes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1834/buggy-version/Mage.src.mage.cards.mock.MockSplitCard.java", "BodyUseAPI": [], "Fixed commit": "9d4746c31829fc92f7a4bad919d5b4953b6725c1", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-07-07T09:17:16Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((card.getSubTypes().get(0).length()) > 0) { this.subtype = card.getSubTypes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1834/buggy-version/Mage.src.mage.cards.mock.MockSplitCard.java", "BodyUseAPI": [], "Fixed commit": "9d4746c31829fc92f7a4bad919d5b4953b6725c1", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-07-07T09:17:16Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((card.getSupertypes().get(0).length()) > 0) { this.supertype = card.getSupertypes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1834/buggy-version/Mage.src.mage.cards.mock.MockCard.java", "BodyUseAPI": [], "Fixed commit": "9d4746c31829fc92f7a4bad919d5b4953b6725c1", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-07-07T09:17:16Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((card.getSubTypes().get(0).length()) > 0) { this.subtype = card.getSubTypes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/1834/buggy-version/Mage.src.mage.cards.mock.MockCard.java", "BodyUseAPI": [], "Fixed commit": "9d4746c31829fc92f7a4bad919d5b4953b6725c1", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-07-07T09:17:16Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.Slot) > (chestCapacity - 1)) { me.taylorkelly.bigbrother.BBLogging.debug(((\"Skipping slot #\" + (e.Slot)) + \", not enough room in chest.\")); }else { de[e.Slot] = e; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/330/buggy-version/src.main.java.me.taylorkelly.bigbrother.datablock.DeltaChest.java", "BodyUseAPI": ["me.taylorkelly.bigbrother.BBLogging.debug(java.lang.String)"], "Fixed commit": "f03ec58a0620872a5618e8a74fd6d93f8cc403e5", "Url": "https://api.github.com/repos/N3X15/BigBrother", "Date": "2011-04-22T17:03:09Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((contextNode.getPages().size()) == 0) || ((contextNode.getPages().get(0)) == null)) { logger.warn(\"page is empty\"); statistic.addErrorNodeCount(1); }else { statistic.addDoneNodeCount(1); page.putField(com.seveniu.spider.pageProcessor.CONTEXT_NODE, contextNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/274/buggy-version/src.main.java.com.seveniu.spider.pageProcessor.MultiListContentProcessor.java", "BodyUseAPI": ["us.codecraft.webmagic.Page.putField(com.seveniu.spider.pageProcessor.CONTEXT_NODE,com.seveniu.node.Node)"], "Fixed commit": "da8ee6e3104b9ee1ed0a79ea7d959721c0232b84", "Url": "https://api.github.com/repos/seveniu/OneCrawl", "Date": "2016-11-02T10:35:26Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((liveFollowList.get(i).getChannel().getGame()) == null) game = \"N/A\"; else game = liveFollowList.get(i).getChannel().getGame();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/8509/buggy-version/src.dev.cameron2134.twitchapp.gui.GUI.java", "BodyUseAPI": ["java.util.List<com.mb3364.twitch.api.models.Stream>.get(int)", "liveFollowList.get(i).getChannel()", "liveFollowList.get(i).getChannel().getGame()"], "Fixed commit": "83c1f58e00961d50bc3a2c1e21d6dc89fe230143", "Url": "https://api.github.com/repos/cameron2134/TwitchDesk", "Date": "2016-09-08T13:25:10Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (element.getKind().isField()) { return isUnderModulePackage(((com.sun.tools.javac.code.Symbol.VarSymbol) (element)).owner); }else if ((element.getKind().equals(javax.lang.model.element.ElementKind.METHOD)) || (element.getKind().equals(javax.lang.model.element.ElementKind.CONSTRUCTOR))) { return isUnderModulePackage(((com.sun.tools.javac.code.Symbol) (element)).getEnclosingElement()); }else if (element.getKind().equals(javax.lang.model.element.ElementKind.PARAMETER)) { return isUnderModulePackage(((com.sun.tools.javac.code.Symbol) (element)).getEnclosingElement().getEnclosingElement()); }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/5347/buggy-version/errai-common-apt.src.main.java.org.jboss.errai.common.apt.module.ErraiModule.java", "BodyUseAPI": ["javax.lang.model.element.Element.getKind()", "javax.lang.model.element.ElementKind.equals(javax.lang.model.element.ElementKind)", "javax.lang.model.element.Element.getKind()", "javax.lang.model.element.ElementKind.equals(javax.lang.model.element.ElementKind)", "javax.lang.model.element.ElementKind.equals(javax.lang.model.element.ElementKind)", "javax.lang.model.element.Element.getKind()"], "Fixed commit": "84582104da88da4d69598f228372a384bb3f4295", "Url": "https://api.github.com/repos/tiagobento/errai", "Date": "2017-10-25T22:57:32Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entries.length) > 0) { android.preference.ListPreference camFocus = createListPreference(p.AV_CAMERA_FOCUS_TYPE, entries, intValues, R.string.av_camera_focus, R.string.av_camera_focus_descr); grp.addPreference(camFocus); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/676/buggy-version/OsmAnd.src.net.osmand.plus.audionotes.SettingsAudioVideoActivity.java", "BodyUseAPI": ["net.osmand.plus.audionotes.SettingsAudioVideoActivity.createListPreference(p.AV_CAMERA_FOCUS_TYPE,java.lang.String[],java.lang.Integer[],R.string.av_camera_focus,R.string.av_camera_focus_descr)"], "Fixed commit": "2f2c79ea5a4bacb30ab55a8abd27c6d470e9f6a2", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2013-07-25T19:54:34Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (null == ep) { throw new esa.mo.mal.impl.consumer.MALException((\"Unable to create transport endpoint for URI: \" + uriTo)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V11/77/buggy-version/src.main.java.esa.mo.mal.impl.consumer.MALConsumerImpl.java", "BodyUseAPI": [], "Fixed commit": "2b743d362eb18036b441172732f110e4e6cf7c23", "Url": "https://api.github.com/repos/esa/CCSDS_MO_MAL_IMPL", "Date": "2015-06-22T12:38:30Z"}]}
