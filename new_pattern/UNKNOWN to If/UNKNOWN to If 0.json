{"UNKNOWN to If":[{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((blocks.size()) > 1) { face = blocks.get(1).getFace(blocks.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3793/buggy-version/src.com.gmail.zariust.otherdrops.event.OccurredEvent.java", "BodyUseAPI": [], "Fixed commit": "68c5b28f39c6a9bbfa650d7b86eb8ac88d365b74", "Url": "https://api.github.com/repos/Zarius/Bukkit-OtherBlocks", "Date": "2013-04-16T21:46:40Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.hops.transaction.EntityManager.findList(Replica.Finder.ByBlockIdAndINodeId,lastBlock.getBlockId(),iNodeFile.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (replicas != null) { java.util.Collections.sort(replicas, new java.util.Comparator<io.hops.metadata.hdfs.entity.Replica>() { @java.lang.Override public int compare(io.hops.metadata.hdfs.entity.Replica o1, io.hops.metadata.hdfs.entity.Replica o2) { return new java.lang.Integer(o1.getBucketId()).compareTo(o2.getBucketId()); } }); for (io.hops.metadata.hdfs.entity.Replica replica : replicas) { io.hops.transaction.EntityManager.find(HashBucket.Finder.ByStorageIdAndBucketId, replica.getStorageId(), replica.getBucketId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1713/buggy-version/hadoop-hdfs-project.hadoop-hdfs.src.main.java.io.hops.transaction.lock.LastBlockReplicasHashBucketLock.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<io.hops.metadata.hdfs.entity.Replica>,java.util.Comparator<io.hops.metadata.hdfs.entity.Replica>)"], "Fixed commit": "4912679b4baa63f91538c609be4b782abe3da50b", "Url": "https://api.github.com/repos/augustbonds/hops", "Date": "2017-08-09T08:23:56Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (A < B) { result.add((((java.lang.String.valueOf(A)) + \"->\") + (java.lang.String.valueOf(B)))); }else { result.add(java.lang.String.valueOf(A)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7088/buggy-version/src.main.java.SummaryRanges228.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "java.lang.String.valueOf(int)", "java.lang.String.valueOf(int)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "d5206b55d23bdf00c4366b91f641ae0e61d0f2a1", "Url": "https://api.github.com/repos/happyYolanda/happyhacking", "Date": "2017-02-11T01:07:42Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (A < B) { result.add((((java.lang.String.valueOf(A)) + \"->\") + (java.lang.String.valueOf(B)))); }else { result.add(java.lang.String.valueOf(A)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7088/buggy-version/src.main.java.SummaryRanges228.java", "BodyUseAPI": ["java.lang.String.valueOf(int)", "java.lang.String.valueOf(int)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.valueOf(int)"], "Fixed commit": "d5206b55d23bdf00c4366b91f641ae0e61d0f2a1", "Url": "https://api.github.com/repos/happyYolanda/happyhacking", "Date": "2017-02-11T01:07:42Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (appGroupBackupManager.canUpdateBackupPath()) { backupAppGroupsPathPreference.setEnabled(true); }else { backupAppGroupsPathPreference.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1761/buggy-version/app.src.main.java.com.mysticwind.disabledappmanager.ui.activity.settings.BackupRestorePreferenceFragment.java", "BodyUseAPI": [], "Fixed commit": "137daf72dce606178d2972d83b0d2bba850f8dc1", "Url": "https://api.github.com/repos/rickwangtw/AppFridge", "Date": "2017-05-22T01:50:56Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 17) { connected = connected || (plugged == (android.os.BatteryManager.BATTERY_PLUGGED_WIRELESS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7743/buggy-version/SafeCharge.src.com.sash.safecharge.SafeChargeService.java", "BodyUseAPI": [], "Fixed commit": "f6a55530f8751e1ac4f36b576283c713b312b0b0", "Url": "https://api.github.com/repos/tkolev/SafeCharge", "Date": "2013-09-15T06:56:13Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((preferences.getLastPlayed()) != null) { try { com.bedrock.padder.activity.MainActivity.currentPreset = gson.fromJson(file.getStringFromFile(((getCurrentPresetLocation()) + \"/about/json\")), com.bedrock.padder.model.preset.PresetSchema.class).getPreset(); if (!(file.isPresetAvailable(com.bedrock.padder.activity.MainActivity.currentPreset))) { com.bedrock.padder.activity.MainActivity.currentPreset = null; } } catch (java.lang.Exception e) { e.printStackTrace(); com.bedrock.padder.activity.MainActivity.currentPreset = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3320/buggy-version/app.src.main.java.com.bedrock.padder.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7c66a82ef63e44e72d8cf6b5744022abc22c6c33", "Url": "https://api.github.com/repos/berict/Tapad", "Date": "2017-10-07T16:29:36Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((spawnLocation) != null) { stat.setFloat(6, ((float) (spawnLocation.getX()))); stat.setFloat(7, ((float) (spawnLocation.getY()))); stat.setFloat(8, ((float) (spawnLocation.getZ()))); }else { stat.setString(6, \"NULL\"); stat.setString(7, \"NULL\"); stat.setString(8, \"NULL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3384/buggy-version/me.MnC.MnC_SERVER_MOD.manor.Manor.java", "BodyUseAPI": [], "Fixed commit": "5d157da2c5a303a96f4dec8368d14325defc2e9c", "Url": "https://api.github.com/repos/MineAndCraft/MnC_SERVER_MOD", "Date": "2013-07-08T15:11:32Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_fileChooser.isShowing()) this._fileChooser.paint(_fileChooser.getGraphics());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8676/buggy-version/client.src.sw.client.gui.LoginPanel.java", "BodyUseAPI": ["javax.swing.JFileChooser.getGraphics()", "javax.swing.JFileChooser.paint(java.awt.Graphics)"], "Fixed commit": "574f5338ad03ebaa7a6099cb7ce2d9c748ebcc32", "Url": "https://api.github.com/repos/stes/Space-Warrior", "Date": "2011-12-26T10:35:52Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dir == null) || (dir.trim().isEmpty())) { throw new java.lang.IllegalArgumentException(\"s invalid\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5436/buggy-version/src.ru.fizteh.fivt.students.piakovenko.filemap.DataBasesFactory.java", "BodyUseAPI": [], "Fixed commit": "b10a59c4fc258e21901786cdc8037a759361001e", "Url": "https://api.github.com/repos/kamiltalipov/fizteh-java-2013", "Date": "2013-11-01T15:38:00Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(axis.isDefined())) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3476/buggy-version/src.main.java.org.biojava3.structure.align.symm.order.RotationOrderDetector.java", "BodyUseAPI": [], "Fixed commit": "95fb38c7b8b4552981efd3d87788af87693cf39b", "Url": "https://api.github.com/repos/epeisach/symmetry", "Date": "2013-11-23T02:38:40Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getParcelableExtra(RoutingService.ARG_LOCATION)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((location) == null) || ((newLocation.distanceTo(location)) > (org.fruct.oss.socialnavigator.content.RemoteContentService.LOCATION_UPDATE_DIST))) { location = newLocation; newLocation(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1045/buggy-version/app.src.main.java.org.fruct.oss.socialnavigator.content.RemoteContentService.java", "BodyUseAPI": [], "Fixed commit": "d302e8404fac92bfad9caa62c8b516034cbc5a31", "Url": "https://api.github.com/repos/oss-fruct-org/social-navigator", "Date": "2014-10-17T12:58:07Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof org.jboss.aerogear.android.pipe.http.HttpException) { switch (((org.jboss.aerogear.android.pipe.http.HttpException) (e)).getStatusCode()) { case 404 : activity.showError(R.string.error_not_found); break; case 401 : activity.showError(R.string.error_unauth); break; default : activity.showError(R.string.error_general); } }else if (e instanceof java.lang.RuntimeException) { activity.showError(R.string.error_internet_connection); }else { activity.showError(R.string.error_general); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2038/buggy-version/src.main.java.org.hawkular.client.android.activity.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "7eb4095e4e13496902ef8c84413514ebc03a6044", "Url": "https://api.github.com/repos/hawkular/hawkular-android-client", "Date": "2016-07-28T09:19:25Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (writeConcern.isAcknowledged()) { throw e; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1630/buggy-version/driver-core.src.main.com.mongodb.connection.WriteProtocol.java", "BodyUseAPI": [], "Fixed commit": "16e0142ca01e51d7f8573af03084fcd8618ae884", "Url": "https://api.github.com/repos/jyemin/mongo-java-driver", "Date": "2015-09-16T15:10:37Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState == null) { setSelectedDrawerItem(lastPosition); }else { if (savedInstanceState.containsKey(\"toolbar_title\")) { toolbar.setTitle(savedInstanceState.getString(\"toolbar_title\")); }else { toolbar.setTitle(navigationView.getMenu().getItem(lastPosition).getTitle()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4107/buggy-version/app.src.main.java.com.ronakmanglani.watchlist.fragment.MainFragment.java", "BodyUseAPI": ["android.support.v7.widget.Toolbar.setTitle(savedInstanceState.getString(\"toolbar_title\"))", "android.os.Bundle.getString(java.lang.String)", "android.os.Bundle.containsKey(java.lang.String)"], "Fixed commit": "edaca6abee5c056bf0c13e1ed5ca55c98b5fa5ce", "Url": "https://api.github.com/repos/Ronak-LM/watchlist", "Date": "2016-01-11T15:34:58Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof com.dexels.navajo.article.APIException) { throw ((com.dexels.navajo.article.APIException) (e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8687/buggy-version/server.com.dexels.navajo.article.src.com.dexels.navajo.article.impl.OAuthArticleServlet.java", "BodyUseAPI": [], "Fixed commit": "3d8126c64a66330810d83fe8a0234925619ee096", "Url": "https://api.github.com/repos/Dexels/navajo", "Date": "2016-07-22T06:44:02Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (onResultsAvailable != null) info.addResultsAvailableHandler(onResultsAvailable);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1955/buggy-version/src.soot.jimple.infoflow.android.SetupApplication.java", "BodyUseAPI": ["soot.jimple.infoflow.Infoflow.addResultsAvailableHandler(soot.jimple.infoflow.handlers.ResultsAvailableHandler)"], "Fixed commit": "c0a2a79ca18a6207f5f79fe2c133944badee4aff", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow-android", "Date": "2013-08-21T23:59:33Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.eclipse.che.api.core.util.SystemInfo.isWindows()) && (m2HomeEnv.contains(\" \"))) { m2HomeEnv = (\"\\\"\" + m2HomeEnv) + \"\\\"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3650/buggy-version/plugin-java.che-plugin-java-maven-tools.src.main.java.org.eclipse.che.ide.maven.tools.MavenUtils.java", "BodyUseAPI": [], "Fixed commit": "2308642adfe638837c894e56b6ff638ad46bff2c", "Url": "https://api.github.com/repos/sunix/che-plugins", "Date": "2015-05-27T14:51:10Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (plist = ((com.zeapo.pwdstore.PasswordFragment) (getFragmentManager().findFragmentByTag(\"PasswordsList\"))))) { return plist.getCurrentDir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2541/buggy-version/app.src.main.java.com.zeapo.pwdstore.PasswordStore.java", "BodyUseAPI": [], "Fixed commit": "64481bcb45892adac0786eab0674db7261dccf21", "Url": "https://api.github.com/repos/zeapo/Android-Password-Store", "Date": "2014-10-30T21:32:19Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ansorgit.plugins.bash.lang.psi.api.arithmetic.IncrementExpression.subexpressions()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (subexpressions.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2093/buggy-version/bashsupport.src.com.ansorgit.plugins.bash.editor.annotator.BashAnnotator.java", "BodyUseAPI": [], "Fixed commit": "4abeb555aff065609786c032b8658eacf3fe3582", "Url": "https://api.github.com/repos/jansorg/BashSupport", "Date": "2015-02-27T17:26:36Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getFirstChild()) == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2093/buggy-version/bashsupport.src.com.ansorgit.plugins.bash.lang.psi.impl.arithmetic.AbstractExpression.java", "BodyUseAPI": [], "Fixed commit": "4abeb555aff065609786c032b8658eacf3fe3582", "Url": "https://api.github.com/repos/jansorg/BashSupport", "Date": "2015-02-27T17:26:36Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args.Helper.cmd.hasOption(args.Helper.SCHEDULING_OPTION)) args.Helper.SCHED_POLICY = args.Helper.cmd.getOptionValue(args.Helper.SCHEDULING_OPTION);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5543/buggy-version/src.main.java.args.Helper.java", "BodyUseAPI": ["org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)"], "Fixed commit": "b1d1144adff24f1b0b64c710b97a6e8e11cbd2a1", "Url": "https://api.github.com/repos/hjparker/hmpsoc", "Date": "2016-05-25T04:40:51Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (toDistance > 0) { if (((page_number) % 100) == 45) { getAListPage(toDistance, CacheWolf.imp.SpiderGC.gotoPreviousBlock); getAListPage(toDistance, CacheWolf.imp.SpiderGC.gotoNextBlock); } if (getAListPage(toDistance, CacheWolf.imp.SpiderGC.gotoNextPage)) { (page_number)++; found_on_page = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7554/buggy-version/src.CacheWolf.imp.SpiderGC.java", "BodyUseAPI": ["CacheWolf.imp.SpiderGC.getAListPage(int,java.lang.String)", "CacheWolf.imp.SpiderGC.getAListPage(int,java.lang.String)", "CacheWolf.imp.SpiderGC.getAListPage(int,java.lang.String)"], "Fixed commit": "62ff3031a0e4d0368352da73191c7a261b9bf8c0", "Url": "https://api.github.com/repos/cachewolf/cachewolf", "Date": "2012-03-08T17:51:26Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.be4.classicalb.core.parser.node.AConjunctPredicate.parent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parentParent instanceof de.be4.classicalb.core.parser.node.APropertiesMachineClause) { ((de.be4.classicalb.core.parser.node.APropertiesMachineClause) (parentParent)).setPredicates(other); }else if (parentParent instanceof de.be4.classicalb.core.parser.node.AConjunctPredicate) { if ((((de.be4.classicalb.core.parser.node.AConjunctPredicate) (parentParent)).getLeft()) == parent) { ((de.be4.classicalb.core.parser.node.AConjunctPredicate) (parentParent)).setLeft(other); }else { ((de.be4.classicalb.core.parser.node.AConjunctPredicate) (parentParent)).setRight(other); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/549/buggy-version/src.main.java.de.b2tla.analysis.ConstantsEliminator.java", "BodyUseAPI": [], "Fixed commit": "b375a66d72944abca25d41dfb51e4d631156d863", "Url": "https://api.github.com/repos/hhu-stups/b2tla", "Date": "2013-06-24T12:53:45Z"},
{"Line": "=>763", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<android.content.pm.ResolveInfo>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (target == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2392/buggy-version/src.at.tomtasche.reader.ui.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fa09594c2286f1f60d1f820838c5db2336eef104", "Url": "https://api.github.com/repos/TomTasche/OpenDocument.droid", "Date": "2013-09-24T15:47:31Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((physicalObject.getPerspective().getCompass()) == null) { throw new rea.toyrobot.exceptions.RobotInitialisationException(\"could not find cardinal compass direction\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6210/buggy-version/src.main.java.rea.toyrobot.actions.world.PlaceAction.java", "BodyUseAPI": [], "Fixed commit": "59a60a45ad99ba3b039150379611d4c81db39371", "Url": "https://api.github.com/repos/azzmosphere/rearobotproblem", "Date": "2017-08-08T22:26:53Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_self instanceof videoGen.aspects.videoGen.Alternatives) { videoGen.aspects.videoGen.aspects.AlternativesAspect.process(((videoGen.aspects.videoGen.Alternatives) (_self))); }else if (_self instanceof videoGen.videoGen.Sequence) { videoGen.aspects.SequenceAspect._privk3_process(_self_, ((videoGen.videoGen.Sequence) (_self))); }else { throw new java.lang.IllegalArgumentException((\"Unhandled parameter types: \" + (java.util.Arrays.<java.lang.Object>asList(_self).toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/49/buggy-version/language_Workbench.org.irisa.diverse.videogen.k3dsa.xtend-gen.videoGen.aspects.SequenceAspect.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.toString()", "java.util.Arrays.asList(videoGen.Sequence)"], "Fixed commit": "babce07249dc8fb5c9e389b9bf6b92fe43b81965", "Url": "https://api.github.com/repos/StephaneMangin/VideoGen-xDsml", "Date": "2016-03-29T09:43:40Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((l10nParams) == null) { return null; }else { return java.util.Arrays.copyOf(l10nParams, l10nParams.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8268/buggy-version/sonar-server.src.main.java.org.sonar.server.exceptions.BadRequestException.java", "BodyUseAPI": [], "Fixed commit": "f69cb0b210aafe5bb9a5738920774261b5c0e000", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2014-03-04T10:14:49Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (times == 1) { finishedResult = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8061/buggy-version/app.src.main.java.com.miniprojekt.danielmathiasdaniel.yatzy2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "512cb51b3dca1a934e443644c6fbc31f16b14aad", "Url": "https://api.github.com/repos/stonecompass/Yatzy", "Date": "2015-02-27T08:00:43Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (convertView != null) { android.util.Log.d(\"getView\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8061/buggy-version/app.src.main.java.com.miniprojekt.danielmathiasdaniel.yatzy2.ResultAdapter.java", "BodyUseAPI": [], "Fixed commit": "512cb51b3dca1a934e443644c6fbc31f16b14aad", "Url": "https://api.github.com/repos/stonecompass/Yatzy", "Date": "2015-02-27T08:00:43Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (user != null) { if (userLikes.remove(user)) { (likes)--; return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3892/buggy-version/assignments.Asgn2-VideoLike.src.main.java.org.magnum.mobilecloud.video.repository.Video.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.remove(java.lang.String)"], "Fixed commit": "390570804ed02823585ae78258e2fe79fc939150", "Url": "https://api.github.com/repos/archee/mobilecloud", "Date": "2014-08-21T14:03:27Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ImageLoader.ImageContainer.getBitmap()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bitmap == null) { callbacks.onUseDefaultImage(); }else { android.graphics.drawable.BitmapDrawable bitmapDrawable = new android.graphics.drawable.BitmapDrawable(context.getResources(), response.getBitmap()); callbacks.onImageLoaded(bitmapDrawable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/584/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.posts.services.AztecImageLoader.java", "BodyUseAPI": [], "Fixed commit": "ffeadd6a81cc0e1814d6b0c16664d8f90634ceb9", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2017-02-02T10:29:45Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getErrorCode()) == (com.neverwinterdp.registry.ErrorCode.NoNode)) { discardResult = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3915/buggy-version/V2.vm.src.main.java.com.neverwinterdp.vm.client.VMClient.java", "BodyUseAPI": [], "Fixed commit": "d01159a7ca936fbfbec465dc6f27d25bb864a306", "Url": "https://api.github.com/repos/DemandCube/Scribengin", "Date": "2015-04-28T07:00:01Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(gestationalage.equalsIgnoreCase(\"\"))) { ga.setText(((\"GA :\" + gestationalage) + \" weeks\")); }else { ga.setText(\"GA : Unavailabe\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3980/buggy-version/opensrp-dghs.src.main.java.org.ei.opensrp.dghs.HH_woman.HH_woman_member_SmartClientsProvider.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "bb0f9862f498dea69f664915898853c6b417a942", "Url": "https://api.github.com/repos/raihan-mpower/opensrp-client-dghs-demo", "Date": "2016-04-20T14:46:42Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.parse.ParseUser.getCurrentUser()) != null) { com.parse.ParseUser.getCurrentUser().logOut(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4762/buggy-version/app.src.main.java.tag.zombie.contagion.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "604966ae002e4bedfc10ed68342ccdd9ff845da9", "Url": "https://api.github.com/repos/thesultanster/Contagion", "Date": "2016-03-02T05:04:32Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.isArrayUsedAsTypeForGenericBoundedWildcard(arrayDeclarator)) { typeOrIdent = arrayDeclarator.getParent(); }else { typeOrIdent = arrayDeclarator.getFirstChild(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4667/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()", "com.puppycrawl.tools.checkstyle.api.DetailAST.getParent()"], "Fixed commit": "1ece7ba09ecd79ba8519637932c037b412128f19", "Url": "https://api.github.com/repos/mkordas/checkstyle", "Date": "2015-04-18T00:21:47Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((teamMentorMapping.TM_GUID.equals(\"\")) == false) mappings.add(teamMentorMapping);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1738/buggy-version/TeamMentor.Eclipse.PlugIn.Fortify.src.tm.teammentor.TeamMentorMappings.java", "BodyUseAPI": ["java.util.List<tm.teammentor.TeamMentorMapping>.add(tm.teammentor.TeamMentorMapping)"], "Fixed commit": "bb7ceb6ad842f2f3004ef089d0279cb9da1fef65", "Url": "https://api.github.com/repos/DinisCruz-Dev/TeamMentor_Eclipse_Plugin", "Date": "2014-02-26T17:17:16Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { mFooterHeight = getResources().getDimensionPixelSize(R.dimen.view_footer_height); mboundedLoadMore = getResources().getDimensionPixelSize(R.dimen.bounded_load_more); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3123/buggy-version/library.src.main.java.com.nukc.loadmorelayout.LoadMoreLayout.java", "BodyUseAPI": [], "Fixed commit": "38e2e4ad8b56ec921e3f96332628cac9aae24aa9", "Url": "https://api.github.com/repos/nukc/LoadMoreLayout", "Date": "2015-10-18T16:51:03Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { mHeight = getResources().getDimensionPixelSize(R.dimen.view_footer_height); rainViewHeight = getResources().getDimensionPixelSize(R.dimen.bounded_load_more); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3123/buggy-version/library.src.main.java.com.nukc.loadmorelayout.view.FooterView.java", "BodyUseAPI": [], "Fixed commit": "38e2e4ad8b56ec921e3f96332628cac9aae24aa9", "Url": "https://api.github.com/repos/nukc/LoadMoreLayout", "Date": "2015-10-18T16:51:03Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getShop()) != null) { android.widget.EditText textShop = ((android.widget.EditText) (findViewById(R.id.editTextShop))); textShop.setText(item.getShop().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6036/buggy-version/Code.ShoppingList.src.ch.unibe.ese.shoppinglist.CreateItemActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(item.getShop().toString())", "ch.unibe.ese.core.Item.getShop()", "item.getShop().toString()"], "Fixed commit": "69ce9b44058938f9a81baab62e1ee1e86ddfad81", "Url": "https://api.github.com/repos/ese-unibe-ch/ese2013-team8", "Date": "2013-10-23T13:01:22Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bottomSheetDialog.isShowing()) { bottomSheetDialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8907/buggy-version/collect_app.src.main.java.org.odk.collect.android.activities.AppListActivity.java", "BodyUseAPI": ["android.support.design.widget.BottomSheetDialog.dismiss()"], "Fixed commit": "948d3714fd6b3df3e043598ba4b553c1c16ad0ec", "Url": "https://api.github.com/repos/shobhitagarwal1612/collect", "Date": "2017-07-25T13:35:02Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMenuItemId) == (R.id.nav_schedule)) addShadowToAppBar(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1860/buggy-version/android.app.src.main.java.org.fossasia.openevent.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "68b55cfafdce56725c772471c435d898610950fc", "Url": "https://api.github.com/repos/mananwason/open-event-android", "Date": "2016-08-23T16:43:35Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aStar.City.startCity) != null) aStar.City.startCity.setPaintMode(aStar.City.PaintMode.DEFAULT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4671/buggy-version/src.aStar.City.java", "BodyUseAPI": [], "Fixed commit": "cbbc3b47c45c346bfcaa1276e4edc9ff3065133f", "Url": "https://api.github.com/repos/JJ-ZP/optimierungs-algorithmen", "Date": "2017-11-07T14:18:47Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aStar.City.targetCity) != null) aStar.City.targetCity.setPaintMode(aStar.City.PaintMode.DEFAULT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4671/buggy-version/src.aStar.City.java", "BodyUseAPI": [], "Fixed commit": "cbbc3b47c45c346bfcaa1276e4edc9ff3065133f", "Url": "https://api.github.com/repos/JJ-ZP/optimierungs-algorithmen", "Date": "2017-11-07T14:18:47Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (extras != null) qorder.clientprototype.activities.CategoriesActivity.categoriesUrl = extras.getString(\"categoriesUrl\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1044/buggy-version/ClientAlphaPrototype.src.qorder.clientprototype.activities.CategoriesActivity.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "4ac9d6ce3df95ab7741d4955ac08f4f4b54ce304", "Url": "https://api.github.com/repos/Qorder/QorderAndroid", "Date": "2013-12-29T01:30:25Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (model == null) { final int width = product.getSceneRasterWidth(); final int height = product.getSceneRasterHeight(); model = new com.bc.ceres.glevel.support.DefaultMultiLevelModel(i2mTransform, width, height); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1839/buggy-version/snap-core.src.main.java.org.esa.snap.core.image.ColoredMaskImageMultiLevelSource.java", "BodyUseAPI": [], "Fixed commit": "c6c7109b804e828de9316d2378c88ec374d16021", "Url": "https://api.github.com/repos/senbox-org/snap-engine", "Date": "2015-11-12T15:55:13Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dir.startsWith(\"/\")) { dir = dir.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8532/buggy-version/src.main.java.com.ryanberg.alfresco.s3.S3ContentStore.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "64658baae3d813fe6d3cd2580cd32a547c25800f", "Url": "https://api.github.com/repos/rmberg/alfresco-s3-adapter", "Date": "2015-06-07T00:04:41Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getIntent().getBooleanExtra(\"EXIT\", false)) { finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5566/buggy-version/src.com.example.mauini.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a4d2b2bed012dbdce01de63c8214f0296704a493", "Url": "https://api.github.com/repos/Opportunity-Hack-San-Jose-2014/Mauini", "Date": "2014-10-12T22:25:01Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPlayer) != null) { mPlayer.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4656/buggy-version/app.src.main.java.sinolight.cn.qgapp.presenter.VideoInfoActivityPresenter.java", "BodyUseAPI": [], "Fixed commit": "d86950b225cdde19733e0641c62c59f9b029b473", "Url": "https://api.github.com/repos/xunuosi/QGApp", "Date": "2017-10-27T03:07:03Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((myConveyor.getRampType()) == (uni.oldenburg.shared.model.ConveyorRamp.RAMP_ENTRANCE)) { msgAuctionStart.addUserDefinedParameter(\"srcRampID\", (\"\" + (myConveyor.getID()))); msgAuctionStart.addUserDefinedParameter(\"dstRampID\", (\"\" + selectedConveyorID)); }else { msgAuctionStart.addUserDefinedParameter(\"srcRampID\", (\"\" + selectedConveyorID)); msgAuctionStart.addUserDefinedParameter(\"dstRampID\", (\"\" + (myConveyor.getID()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7247/buggy-version/simulation.src.main.java.uni.oldenburg.server.agent.RampOrderAgent.java", "BodyUseAPI": ["jade.lang.acl.ACLMessage.addUserDefinedParameter(java.lang.String,(\"\" + (myConveyor.getID())))", "uni.oldenburg.shared.model.ConveyorRamp.getID()", "jade.lang.acl.ACLMessage.addUserDefinedParameter(java.lang.String,(\"\" + (myConveyor.getID())))", "uni.oldenburg.shared.model.ConveyorRamp.getID()"], "Fixed commit": "e25f0b976e7e4b4a7ae1a01194f670d38cb8e99a", "Url": "https://api.github.com/repos/sijakubo/pg-faise", "Date": "2014-06-17T14:58:04Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hbSession.createQuery(((\"from User u where u.email = '\" + email) + \"'\")).list()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (u.isEmpty()) { loginCounter = loginCounter + 1; }else { Bridgeport.User user = ((Bridgeport.User) (hbSession.get(Bridgeport.User.class, u.get(0).getId()))); if (request.getParameter(\"password\").equals(user.getPassword())) { session.setAttribute(\"user\", user); loginCounter = 0; if (user.getIsSuper()) { url = \"admin.jsp\"; }else { url = \"user.jsp\"; } }else { loginCounter = loginCounter + 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2994/buggy-version/java.UserServlet.java", "BodyUseAPI": ["org.hibernate.Session.get(java.lang.Class,u.get(0).getId())", "u.get(0).getId()", "java.util.ArrayList<Bridgeport.User>.get(int)"], "Fixed commit": "93961403bfb6511050aefbf1b77c22401f61834d", "Url": "https://api.github.com/repos/bruno-azenha/ProjWeb_SCC0219_Part2", "Date": "2015-07-01T20:27:07Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (user != null) { details.put(\"name\", user.getUsername()); details.put(\"roles\", user.getAuthorities()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6413/buggy-version/src.main.java.co.utb.softeng.moviesapp.controllers.AuthController.java", "BodyUseAPI": ["org.springframework.security.core.userdetails.UserDetails.getUsername()", "org.springframework.security.core.userdetails.UserDetails.getAuthorities()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,user.getAuthorities())", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,user.getUsername())"], "Fixed commit": "6168df03af090f398a3bcd996d2fb28060aff722", "Url": "https://api.github.com/repos/williamcaicedo/SpringMoviesApp", "Date": "2015-11-27T17:23:23Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4980/buggy-version/redpen-core.src.main.java.cc.redpen.parser.review.ReVIEWParser.java", "BodyUseAPI": [], "Fixed commit": "2c9100c5d292d439ff3922b37ae26e4d10243cca", "Url": "https://api.github.com/repos/takahi-i/redpen", "Date": "2016-04-25T07:05:59Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAttached()) updateAutoUpdateWidget();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/104/buggy-version/src.main.java.ilarkesto.gwt.client.AViewEditWidget.java", "BodyUseAPI": [], "Fixed commit": "1f5e4928fc2eeffa2852a1cfdb62ae7d9fb12941", "Url": "https://api.github.com/repos/Kunagi/ilarkesto", "Date": "2012-04-10T22:48:25Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ferg.awful.thread.AwfulThread.getLastPage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (oldLastPage < (getLastPage())) { setTotalCount(((((getLastPage()) - 1) * postPerPage) + 1), postPerPage); setUnreadCount(((getTotalCount()) - ((aPage - 1) * postPerPage))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3213/buggy-version/src.com.ferg.awful.thread.AwfulThread.java", "BodyUseAPI": [], "Fixed commit": "2f0dbfc91393ad958024eca988eca8b9dba4e2e4", "Url": "https://api.github.com/repos/Awful/Awful.apk", "Date": "2011-10-21T01:55:22Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Token.StartTag.name()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (name.equals(\"head\")) { tb.error(this); return false; }else if ((tb instanceof org.zkoss.zsoup.parser.XHtmlTreeBuilder) && ((name.contains(\":\")) || (name.contains(\"zk\")))) { return insertAnythingElse(t, ((org.zkoss.zsoup.parser.XHtmlTreeBuilder) (tb))); }else { return anythingElse(t, tb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3538/buggy-version/src.main.java.org.zkoss.zsoup.parser.HtmlTreeBuilderState.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "d119d42636d8990de83d8654ef2bd83f6f4ac9b9", "Url": "https://api.github.com/repos/zkoss/zsoup", "Date": "2014-11-11T07:32:19Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBluetoothAdapter.getScanMode()) == (android.bluetooth.BluetoothAdapter.SCAN_MODE_CONNECTABLE_DISCOVERABLE)) mDiscoverableWheel.spin(); else mDiscoverableWheel.stopSpinning();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6164/buggy-version/app.src.main.java.com.yckir.bluetoothchat.PairingActivity.java", "BodyUseAPI": [], "Fixed commit": "fd1b2f9d889ec1f474250864c02712ac2917a159", "Url": "https://api.github.com/repos/rmm01/BluetoothChat", "Date": "2016-05-28T22:21:05Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dependency.getDependencyFile().contains(\"-instance\")) { referencedFiles.add(dependency.getDependencyFile()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3744/buggy-version/lib.src.main.java.scal.io.liger.model.StoryPathLibrary.java", "BodyUseAPI": ["scal.io.liger.model.Dependency.getDependencyFile()", "java.util.ArrayList<java.lang.String>.add(dependency.getDependencyFile())"], "Fixed commit": "82f1905bfcfa023387c7c638595c5fbc68b8de21", "Url": "https://api.github.com/repos/scalio/liger-prototype", "Date": "2014-12-05T23:48:58Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((-120) < (mCurrentDegree)) && ((mCurrentDegree) < (-60))) { if (!isReverse) { cv.prev(); }else { cv.next(); } }else if (((mCurrentDegree) < (-150)) || ((mCurrentDegree) > 150)) { if (!isReverse) { cv.back(); }else { cv.front(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3981/buggy-version/KyoroTextViewer.src.info.kyorohiro.helloworld.textviewer.manager.MyCircleControllerEvent.java", "BodyUseAPI": [], "Fixed commit": "43bdcbd79f06dc0e25347657a6a25b973aa38b22", "Url": "https://api.github.com/repos/kyorohiro/KyoroHelloAndroid", "Date": "2012-11-08T16:01:49Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.ItemStack.getItemMeta()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (eggmeta.getDisplayName().contains(\": \")) { java.lang.String[] name = eggmeta.getDisplayName().split(\": \"); if ((name.length) == 2) { if (com.runetooncraft.plugins.EasyMobArmory.egghandler.EggHandler.GetEggList().contains(name[1])) { org.bukkit.entity.Entity entity = com.runetooncraft.plugins.EasyMobArmory.egghandler.EggHandler.Loadentity(name[1]); org.bukkit.Location loc = event.getClickedBlock().getLocation(); com.bergerkiller.bukkit.common.entity.CommonEntity Spawnentity = com.bergerkiller.bukkit.common.entity.CommonEntity.get(entity); Spawnentity.spawn(loc); }else { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8252/buggy-version/EasyMobArmory.src.main.java.com.runetooncraft.plugins.EasyMobArmory.EMAListener.java", "BodyUseAPI": ["eggmeta.getDisplayName().split(java.lang.String)", "org.bukkit.inventory.meta.ItemMeta.getDisplayName()"], "Fixed commit": "ae230cba482f60593171f2cce57a6bb79db04dc4", "Url": "https://api.github.com/repos/Deery50/EasyMobArmory", "Date": "2013-08-01T21:59:43Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((btnMv.getCategory()) == (Move.NO)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3196/buggy-version/src.Act.java", "BodyUseAPI": [], "Fixed commit": "426ca84789e16118ec488da0e8ceb5a1c8d5ce7d", "Url": "https://api.github.com/repos/1j4k7/WallopsGame", "Date": "2014-06-01T21:50:42Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(polygon.isValid())) { throw new java.lang.Exception(\"Invalid Polygon\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2701/buggy-version/DroidPlanner.src.com.droidplanner.dialogs.survey.SurveyDialog.java", "BodyUseAPI": [], "Fixed commit": "6f64926ac608e27fd49fa432430e5892ac61d3ad", "Url": "https://api.github.com/repos/arthurbenemann/droidplanner", "Date": "2013-08-29T21:43:53Z"},
{"Line": "=>436", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSpriteId()) != 0) { com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion texture = com.bombinggames.wurfelengine.core.gameobjects.AbstractGameObject.getSprite(getSpriteCategory(), getSpriteId(), getSpriteValue()); if (texture == null) { Gdx.app.error(\"ago\", (((((\"could not init sprite:\" + (getSpriteCategory())) + \",\") + (getSpriteId())) + \",\") + (getSpriteValue()))); }else { sprite = new com.bombinggames.wurfelengine.core.map.rendering.GameSpaceSprite(texture); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7265/buggy-version/core.src.main.java.com.bombinggames.wurfelengine.core.gameobjects.AbstractGameObject.java", "BodyUseAPI": [], "Fixed commit": "3da05ab33656c0094ee9e21ff3c9fbb6c018cd78", "Url": "https://api.github.com/repos/BSVogler/WurfelEngineSDK", "Date": "2017-08-20T20:25:27Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(\"\".equals(userName))) && (!(\"\".equals(password)))) executeSQL(\"Insert\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/333/buggy-version/UberStockApp.src.uberstockapp.Login.java", "BodyUseAPI": [], "Fixed commit": "e08453f362fd9b3335bf92dfac04892c073b10e7", "Url": "https://api.github.com/repos/KyKlersy/uberstock", "Date": "2017-10-15T21:07:57Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context instanceof com.fasterxml.jackson.databind.JsonNode) { value = com.github.jknack.handlebars.JsonNodeValueResolver.resolve(((com.fasterxml.jackson.databind.JsonNode) (context)).get(name)); }else if (context instanceof java.util.AbstractMap) { value = ((java.util.AbstractMap) (context)).get(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6435/buggy-version/handlebars-jackson2.src.main.java.com.github.jknack.handlebars.JsonNodeValueResolver.java", "BodyUseAPI": [], "Fixed commit": "c982a262b6a093b79043788d57a07bb14e459bba", "Url": "https://api.github.com/repos/h2oloopan/handlebars.java", "Date": "2016-11-14T21:22:15Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((val.length) < (start.val.length)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3960/buggy-version/com.ibm.wala.core.src.com.ibm.wala.util.strings.Atom.java", "BodyUseAPI": [], "Fixed commit": "fc62c16d9b2d10211c1961ab734d6285121a932c", "Url": "https://api.github.com/repos/wala/WALA", "Date": "2017-12-19T20:42:27Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (modes.getSelectedModes().isEmpty()) { this.currentMode = values().iterator().next(); }else { this.currentMode = get(selectedModes.get(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/652/buggy-version/Mage.src.main.java.mage.abilities.Modes.java", "BodyUseAPI": [], "Fixed commit": "1066472491905824108b94ad89d419562d40fcf9", "Url": "https://api.github.com/repos/Eirkei/mage", "Date": "2016-09-28T21:31:52Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dataTypes.contains(dataType)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3434/buggy-version/src.main.java.com.github.kongchen.swagger.docgen.mustache.OutputTemplate.java", "BodyUseAPI": [], "Fixed commit": "a5a1ad970fcabfb76b656de1b3c7d152482ed2c6", "Url": "https://api.github.com/repos/kongchen/swagger-maven-plugin", "Date": "2013-07-31T13:30:55Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { log.info(\"il valore \u00e8 null\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1849/buggy-version/model-based-configurable-nat.src.main.java.org.onosproject.model.based.configurable.nat.StateListenerNew.java", "BodyUseAPI": [], "Fixed commit": "5eed25454a48cc230215072b0405ac215dfe0a83", "Url": "https://api.github.com/repos/netgroup-polito/onos-applications", "Date": "2017-05-18T15:19:53Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((db) != null) { db.beginTransaction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5401/buggy-version/modules.mobile-agents.android.client.client.src.main.java.org.wso2.emm.agent.dao.NotificationDAO.java", "BodyUseAPI": [], "Fixed commit": "87c920d6832a90bc3fa312c891593d30a1abd2c4", "Url": "https://api.github.com/repos/saadsahibjan/product-emm", "Date": "2016-08-23T07:39:14Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((zZXingScannerView) != null) zZXingScannerView.stopCamera();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6788/buggy-version/app.src.main.java.com.example.luizh.vidamemoria_android.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fe7fc99be2427d9661a3613e6d6af2be51ea2dd2", "Url": "https://api.github.com/repos/lucasvegi/VidaMemoria-Android", "Date": "2017-08-20T22:15:52Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bluesky.visualprogramming.vm.ProcedureExecutionContext.getObject(instruction.rightVar)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (rightObject == null) { oldFieldObject = leftObject.getChild(fieldName); if (oldFieldObject != null) leftObject.removeChild(oldFieldObject); }else { leftObject.setField(fieldName, rightObject, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8635/buggy-version/src.main.java.com.bluesky.visualprogramming.vm.InstructionExecutorImpl.java", "BodyUseAPI": ["com.bluesky.visualprogramming.core._Object.setField(java.lang.String,com.bluesky.visualprogramming.core._Object,boolean)"], "Fixed commit": "4c00795fbd9f0a2880c4f80ea3732b0a9f583528", "Url": "https://api.github.com/repos/jackhatedance/visual-programming", "Date": "2014-04-27T04:04:07Z"},
{"Line": "=>758", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((f.getStore_status()) == (MetaStoreConst.MFileStoreStatus.CLOSED)) || ((f.getStore_status()) == (MetaStoreConst.MFileStoreStatus.REPLICATED))) { LOG.warn((((\"FID \" + (f.getFid())) + \" will be deleted(reason: no locations), however it's status is \") + (f.getStore_status()))); synchronized(trs) { try { trs.delSFile(f.getFid()); } catch (org.apache.hadoop.hive.metastore.api.MetaException e) { LOG.error(e, e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1520/buggy-version/src.metastore.src.java.org.apache.hadoop.hive.metastore.DiskManager.java", "BodyUseAPI": ["org.apache.commons.logging.Log.warn((((\"FID \" + (f.getFid())) + \" will be deleted(reason: no locations), however it's status is \") + (f.getStore_status())))", "org.apache.hadoop.hive.metastore.api.SFile.getFid()", "org.apache.hadoop.hive.metastore.RawStore.delSFile(f.getFid())", "org.apache.hadoop.hive.metastore.api.SFile.getFid()", "org.apache.hadoop.hive.metastore.api.SFile.getStore_status()"], "Fixed commit": "b818e63fbda4eb3366f3574a13bcac6d6f88919b", "Url": "https://api.github.com/repos/bd-group/metastore", "Date": "2013-11-15T09:51:17Z"},
{"Line": "=>800", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((f.getStore_status()) == (MetaStoreConst.MFileStoreStatus.CLOSED)) || ((f.getStore_status()) == (MetaStoreConst.MFileStoreStatus.REPLICATED))) { LOG.warn((((\"FID \" + (f.getFid())) + \" will be deleted(reason: no locations), however it's status is \") + (f.getStore_status()))); synchronized(trs) { try { trs.delSFile(f.getFid()); } catch (org.apache.hadoop.hive.metastore.api.MetaException e) { LOG.error(e, e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1520/buggy-version/src.metastore.src.java.org.apache.hadoop.hive.metastore.DiskManager.java", "BodyUseAPI": ["org.apache.hadoop.hive.metastore.api.SFile.getFid()", "org.apache.hadoop.hive.metastore.RawStore.delSFile(f.getFid())", "org.apache.hadoop.hive.metastore.api.SFile.getStore_status()", "org.apache.commons.logging.Log.warn((((\"FID \" + (f.getFid())) + \" will be deleted(reason: no locations), however it's status is \") + (f.getStore_status())))", "org.apache.hadoop.hive.metastore.api.SFile.getFid()"], "Fixed commit": "b818e63fbda4eb3366f3574a13bcac6d6f88919b", "Url": "https://api.github.com/repos/bd-group/metastore", "Date": "2013-11-15T09:51:17Z"},
{"Line": "=>1380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dec.getTy().getMathTypeValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mathTypeValue instanceof edu.clemson.cs.rsrg.typeandpopulate.MTFunctionApplication) { mathTypeValue = ((edu.clemson.cs.rsrg.typeandpopulate.MTFunctionApplication) (mathTypeValue)).getFunction(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1011/buggy-version/src.main.java.edu.clemson.cs.rsrg.typeandpopulate.Populator.java", "BodyUseAPI": [], "Fixed commit": "ded808b364f3f7a8a9e3f2516bfaf26506ab0e28", "Url": "https://api.github.com/repos/yushan87/RESOLVE", "Date": "2017-04-02T04:15:45Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bkg == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3580/buggy-version/app.src.main.java.co.lujun.shuzhi.util.BlurUtils.java", "BodyUseAPI": [], "Fixed commit": "b246898ba051d6a0e883e166edd09421e067e613", "Url": "https://api.github.com/repos/whilu/HnistBook", "Date": "2015-07-12T14:23:32Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (row.isNull(field.getName())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2799/buggy-version/src.main.java.com.pardot.rhombus.ObjectMapper.java", "BodyUseAPI": [], "Fixed commit": "9c2a23cc848a22f958b31ba2f7013a62ec6d20ad", "Url": "https://api.github.com/repos/Pardot/Rhombus", "Date": "2013-11-06T03:29:10Z"},
{"Line": "=>1328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mClipboard) != null) { mClipboard.setText(text); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3374/buggy-version/src.com.ichi2.anki.Reviewer.java", "BodyUseAPI": [], "Fixed commit": "35c5ef1d8d5dce17f9e93a566812cf626babafee", "Url": "https://api.github.com/repos/nobnago/Anki-Android", "Date": "2012-07-31T07:48:46Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1735/buggy-version/src.main.java.org.dbtools.android.domain.DBToolsDateFormatter.java", "BodyUseAPI": [], "Fixed commit": "14b7d57c7f7b33f0c43cf25388367f64f2f22d6f", "Url": "https://api.github.com/repos/jeffdcamp/dbtools-android", "Date": "2016-02-17T17:28:43Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1735/buggy-version/src.main.java.org.dbtools.android.domain.DBToolsDateFormatter.java", "BodyUseAPI": [], "Fixed commit": "14b7d57c7f7b33f0c43cf25388367f64f2f22d6f", "Url": "https://api.github.com/repos/jeffdcamp/dbtools-android", "Date": "2016-02-17T17:28:43Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1735/buggy-version/src.main.java.org.dbtools.android.domain.DBToolsDateFormatter.java", "BodyUseAPI": [], "Fixed commit": "14b7d57c7f7b33f0c43cf25388367f64f2f22d6f", "Url": "https://api.github.com/repos/jeffdcamp/dbtools-android", "Date": "2016-02-17T17:28:43Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1735/buggy-version/src.main.java.org.dbtools.android.domain.DBToolsDateFormatter.java", "BodyUseAPI": [], "Fixed commit": "14b7d57c7f7b33f0c43cf25388367f64f2f22d6f", "Url": "https://api.github.com/repos/jeffdcamp/dbtools-android", "Date": "2016-02-17T17:28:43Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1735/buggy-version/src.main.java.org.dbtools.android.domain.DBToolsDateFormatter.java", "BodyUseAPI": [], "Fixed commit": "14b7d57c7f7b33f0c43cf25388367f64f2f22d6f", "Url": "https://api.github.com/repos/jeffdcamp/dbtools-android", "Date": "2016-02-17T17:28:43Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1735/buggy-version/src.main.java.org.dbtools.android.domain.DBToolsDateFormatter.java", "BodyUseAPI": [], "Fixed commit": "14b7d57c7f7b33f0c43cf25388367f64f2f22d6f", "Url": "https://api.github.com/repos/jeffdcamp/dbtools-android", "Date": "2016-02-17T17:28:43Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1735/buggy-version/src.main.java.org.dbtools.android.domain.DBToolsDateFormatter.java", "BodyUseAPI": [], "Fixed commit": "14b7d57c7f7b33f0c43cf25388367f64f2f22d6f", "Url": "https://api.github.com/repos/jeffdcamp/dbtools-android", "Date": "2016-02-17T17:28:43Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (d == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1735/buggy-version/src.main.java.org.dbtools.android.domain.DBToolsDateFormatter.java", "BodyUseAPI": [], "Fixed commit": "14b7d57c7f7b33f0c43cf25388367f64f2f22d6f", "Url": "https://api.github.com/repos/jeffdcamp/dbtools-android", "Date": "2016-02-17T17:28:43Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1735/buggy-version/src.main.java.org.dbtools.android.domain.DBToolsDateFormatter.java", "BodyUseAPI": [], "Fixed commit": "14b7d57c7f7b33f0c43cf25388367f64f2f22d6f", "Url": "https://api.github.com/repos/jeffdcamp/dbtools-android", "Date": "2016-02-17T17:28:43Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1735/buggy-version/src.main.java.org.dbtools.android.domain.DBToolsDateFormatter.java", "BodyUseAPI": [], "Fixed commit": "14b7d57c7f7b33f0c43cf25388367f64f2f22d6f", "Url": "https://api.github.com/repos/jeffdcamp/dbtools-android", "Date": "2016-02-17T17:28:43Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.netflix.metacat.common.dto.TableDto.getFields()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fields != null) { int index = 0; for (final com.netflix.metacat.common.dto.FieldDto field : fields) { field.setPos((index++)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5441/buggy-version/metacat-common-server.src.main.java.com.netflix.metacat.common.server.converter.ConverterUtil.java", "BodyUseAPI": [], "Fixed commit": "014e78c8bf1a442471ff65ce8ce8427fd1e77091", "Url": "https://api.github.com/repos/ajoymajumdar/metacat", "Date": "2017-03-23T17:28:10Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (filterFact <= 0) { throw new java.lang.IllegalArgumentException(\"Should filterFact > 0.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8562/buggy-version/src.main.java.net.ben.calculator.SigmaAverageCalculator.java", "BodyUseAPI": [], "Fixed commit": "ea623ce3a94368a65f4a26007fe9c1b6bab930e1", "Url": "https://api.github.com/repos/benhuang-zh/Ben-s-Playground", "Date": "2013-02-07T02:35:48Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isInCreativeTab(tab))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4354/buggy-version/src.main.java.subaraki.beastmaster.item.ItemCrystal.java", "BodyUseAPI": [], "Fixed commit": "b68bc0f1ad8d3a88af21907226c793294980f42e", "Url": "https://api.github.com/repos/ArtixAllMighty/Rpg-Addon-Beastmaster", "Date": "2017-08-29T23:15:56Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collision) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/9199/buggy-version/Tetris.src.Shape.java", "BodyUseAPI": [], "Fixed commit": "0b810c735379dee6817640581d73add2f02bfd4b", "Url": "https://api.github.com/repos/beginner1986/Tetris", "Date": "2017-07-13T21:49:50Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (part instanceof org.eclipse.ui.IEditorPart) { de.ovgu.featureide.ui.UIPlugin.getDefault().logInfo(\"Team2: FeatureStatistics -> partActivated\"); org.eclipse.ui.ide.ResourceUtil.getResource(((org.eclipse.ui.IEditorPart) (part)).getEditorInput()); setEditor(((org.eclipse.ui.IEditorPart) (part))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4823/buggy-version/plugins.de.ovgu.featureide.ui.src.de.ovgu.featureide.ui.statistics.ui.FeatureStatisticsView.java", "BodyUseAPI": [], "Fixed commit": "9e519bfd06314a83d250fbcba138343dfff63b96", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-10-05T11:38:57Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((json) != null) { riskyken.armourersWorkshop.common.library.global.SkinDownloader.downloadSkins(skinCompletion, json); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2639/buggy-version/src.main.java.riskyken.armourersWorkshop.client.gui.globallibrary.panels.GuiGlobalLibraryPanelSearchResults.java", "BodyUseAPI": [], "Fixed commit": "7dc22cdd4fe93f9fce5e4a79f209582fdab73393", "Url": "https://api.github.com/repos/RiskyKen/Armourers-Workshop", "Date": "2016-10-11T13:01:34Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((json) != null) { riskyken.armourersWorkshop.common.library.global.SkinDownloader.downloadSkins(skinCompletion, json); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2639/buggy-version/src.main.java.riskyken.armourersWorkshop.client.gui.globallibrary.panels.GuiGlobalLibraryPanelRecentlyUploaded.java", "BodyUseAPI": [], "Fixed commit": "7dc22cdd4fe93f9fce5e4a79f209582fdab73393", "Url": "https://api.github.com/repos/RiskyKen/Armourers-Workshop", "Date": "2016-10-11T13:01:34Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((name.length()) != 0) { if ((player) == 1) FirstPlayer(name, opponent); else SecondPlayer(character, player1name, name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3337/buggy-version/src.edu.ucsb.cs56.projects.games.rock_paper_scissors.RunGame.java", "BodyUseAPI": ["edu.ucsb.cs56.projects.games.rock_paper_scissors.RunGame.TextFieldListener.SecondPlayer(int,java.lang.String,java.lang.String)", "edu.ucsb.cs56.projects.games.rock_paper_scissors.RunGame.TextFieldListener.FirstPlayer(java.lang.String,char)"], "Fixed commit": "defc3d6b852faba9c5e0bd39f1232f7ae5f1ab73", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-rock-paper-scissors", "Date": "2017-11-09T05:41:18Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (read == (-1)) { return Binpack_.CLOSE_MARK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1532/buggy-version/java.src.Binpack_.java", "BodyUseAPI": [], "Fixed commit": "24a9f467b62caa9904e6ea0d8718e6ea402f4eab", "Url": "https://api.github.com/repos/teaey/binpack-java", "Date": "2014-04-13T15:32:09Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Gdx.input.isKeyPressed(Keys.O)) { gajm.setScreen(new com.yox89.ld32.screens.TiledLevelScreen(gajm, 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8844/buggy-version/Game.core.src.com.yox89.ld32.screens.StartScreen.java", "BodyUseAPI": [], "Fixed commit": "99b28463064ed187c16a8bbf481b549cb553e4a6", "Url": "https://api.github.com/repos/YoX89/LD32", "Date": "2015-04-18T20:15:19Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (markFailed) { throw new liquibase.exception.CustomPreconditionFailedException(((this.constraintName) + \" doesn't exist\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4902/buggy-version/migrator.src.main.java.org.jboss.aerogear.unifiedpush.migrator.UniqueConstraintExistsCheck.java", "BodyUseAPI": [], "Fixed commit": "4bcb83ae697a78ac605c7868074d9367cc20fa83", "Url": "https://api.github.com/repos/qmx/aerogear-unifiedpush-server", "Date": "2015-03-03T14:10:25Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nalUnitLengthFieldLength) == 0) { nalUnitLengthFieldLength = 4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3357/buggy-version/library.core.src.main.java.com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.java", "BodyUseAPI": [], "Fixed commit": "9ac61019fb9ec4339273628a4be941089f7a434d", "Url": "https://api.github.com/repos/tylerjroach/ExoPlayer", "Date": "2017-04-13T19:33:33Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loanRecurrenceTypeId == 1) { if (meetingDto.getMeetingDetailsDto().getRecurrenceDetails().getWeekOfMonth().equals(0)) { recurringSchedule = new org.mifos.clientportfolio.loan.service.MonthlyOnDayOfMonthSchedule(meetingEvery, meetingDto.getMeetingDetailsDto().getRecurrenceDetails().getDayOfWeek()); }else { recurringSchedule = new org.mifos.clientportfolio.loan.service.MonthlyOnWeekOfMonthSchedule(meetingEvery, meetingDto.getMeetingDetailsDto().getRecurrenceDetails().getWeekOfMonth(), meetingDto.getMeetingDetailsDto().getRecurrenceDetails().getDayOfWeek()); } }else if (loanRecurrenceTypeId == 2) { recurringSchedule = new org.mifos.clientportfolio.loan.service.WeeklySchedule(meetingEvery, meetingDto.getMeetingDetailsDto().getRecurrenceDetails().getDayOfWeek()); }else if (loanRecurrenceTypeId == 3) { recurringSchedule = new org.mifos.clientportfolio.loan.service.DailySchedule(meetingEvery); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5477/buggy-version/appdomain.src.main.java.org.mifos.application.importexport.servicefacade.ImportLoansSavingsFacadeWebTier.java", "BodyUseAPI": [], "Fixed commit": "ccba0bfe05047aa235ace744dc2ba8ba7b9902b9", "Url": "https://api.github.com/repos/lrozanski/head", "Date": "2013-03-25T16:37:30Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (missingFields != null) { play.Logger.info((((\"form errors size: \" + (targetForm.errors().size())) + \", \") + missingFields)); flash(\"message\", ((\"Please fill out all the required fields, marked with a red star. There are required fields in more than one tab. \" + \"Missing fields are: \") + missingFields)); return controllers.TargetController.info(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1246/buggy-version/app.controllers.TargetController.java", "BodyUseAPI": ["controllers.TargetController.flash(java.lang.String,java.lang.String)", "play.Logger.info((((\"form errors size: \" + (targetForm.errors().size())) + \", \") + missingFields))"], "Fixed commit": "91521365db8cb90711c0fecee39108393bf90649", "Url": "https://api.github.com/repos/ukwa/w3act", "Date": "2014-06-04T10:43:50Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isChecked)) { checkCallLogPermission(); checkContactPermission(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5120/buggy-version/app.src.main.java.com.mahendran_sakkarai.contacts_dashboard.contacts.ContactsActivity.java", "BodyUseAPI": [], "Fixed commit": "2991467f4d8928dedac862af2122214f2805c2d1", "Url": "https://api.github.com/repos/Mahendran-Sakkarai/contacts-dashboard", "Date": "2016-12-02T18:09:45Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((singleLine.length()) != 0) { rtn.add(singleLine.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4474/buggy-version/src.main.java.org.reactome.web.diagram.renderers.layout.abs.TextRenderer.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.StringBuilder.toString()"], "Fixed commit": "0119f238db2775d8a498d004b7b89684c12e6847", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2016-02-15T13:18:01Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data.getType().equals(\"update\")) { fireTableRowsUpdated(pos, pos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1799/buggy-version/src.main.java.pl.GadgetTableModel.java", "BodyUseAPI": [], "Fixed commit": "771063c3fd841420738e0d4244c19e760899e1f1", "Url": "https://api.github.com/repos/manuelroth/gadgetothek-desktop", "Date": "2014-10-27T14:49:03Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(data.getTarget().equals(\"gadget\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1799/buggy-version/src.main.java.pl.GadgetTableModel.java", "BodyUseAPI": [], "Fixed commit": "771063c3fd841420738e0d4244c19e760899e1f1", "Url": "https://api.github.com/repos/manuelroth/gadgetothek-desktop", "Date": "2014-10-27T14:49:03Z"},
{"Line": "=>1466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSystemOrRestrictedSystemAdmin()) { return queryBulkResourceReps(ids); }else { java.util.Iterator<com.emc.storageos.api.service.impl.resource.ComputeVirtualPool> _dbIterator = _dbClient.queryIterativeObjects(getResourceClass(), ids); com.emc.storageos.api.service.impl.response.BulkList.ResourceFilter filter = new com.emc.storageos.api.service.impl.response.BulkList.ComputeVirtualPoolFilter(getUserFromContext(), _permissionsHelper); return new com.emc.storageos.model.vpool.ComputeVirtualPoolBulkRep(com.emc.storageos.api.service.impl.response.BulkList.wrapping(_dbIterator, COMPUTE_VPOOL_MAPPER, filter)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3781/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.ComputeVirtualPoolService.java", "BodyUseAPI": [], "Fixed commit": "5237b061037279fed081b6cec21bffb26bac7f90", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-08-10T08:01:55Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1445/buggy-version/core.src.main.java.ma.glasnost.orika.converter.builtin.CloneableConverter.java", "BodyUseAPI": [], "Fixed commit": "5098c0e20dd6f2b77c357c867fa044b3239f307c", "Url": "https://api.github.com/repos/brabenetz/orika", "Date": "2016-04-06T20:42:57Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cursor != null) cursor.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3112/buggy-version/sensappdroid-main.src.main.java.org.sensapp.android.sensappdroid.activities.GraphDisplayerActivity.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "176538cd7458522e64f3d832a91f2ca1b887d65d", "Url": "https://api.github.com/repos/SINTEF-9012/sensapp-android", "Date": "2013-07-04T08:10:26Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"null\".equals(str)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8097/buggy-version/webmos.src.com.cattsoft.pub.util.StringUtil.java", "BodyUseAPI": [], "Fixed commit": "477ee8cc3e939bed80440bfb4d8935aef886fe12", "Url": "https://api.github.com/repos/xieyunchaobest/ctxd", "Date": "2015-03-23T15:27:43Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i.getCharacteristic()) != null) { if ((value = calculatedCaracteristics.get(i.getCharacteristic().getName())) != null) { calculatedCaracteristics.put(i.getCharacteristic().getName(), (value + (i.getValue()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3530/buggy-version/app.src.main.java.kei.mobilehero.classes.general.Character.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Double>.put(i.getCharacteristic().getName(),(value + (i.getValue())))", "kei.mobilehero.classes.attributes.Effect.getCharacteristic()", "i.getCharacteristic().getName()", "kei.mobilehero.classes.attributes.Effect.getCharacteristic()", "java.util.HashMap<java.lang.String, java.lang.Double>.get(i.getCharacteristic().getName())", "i.getCharacteristic().getName()", "kei.mobilehero.classes.attributes.Effect.getValue()"], "Fixed commit": "1edcb141e051b656ba6e8c9fa4a779e7ed644785", "Url": "https://api.github.com/repos/dbuhon/MobileHero", "Date": "2015-07-19T01:41:32Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getCharacteristic()) != null) { if ((value = calculatedCaracteristics.get(e.getCharacteristic().getName())) != null) { calculatedCaracteristics.put(e.getCharacteristic().getName(), (value + (e.getValue()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3530/buggy-version/app.src.main.java.kei.mobilehero.classes.general.Character.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Double>.put(e.getCharacteristic().getName(),(value + (e.getValue())))", "e.getCharacteristic().getName()", "kei.mobilehero.classes.attributes.Effect.getCharacteristic()", "kei.mobilehero.classes.attributes.Effect.getCharacteristic()", "kei.mobilehero.classes.attributes.Effect.getValue()", "e.getCharacteristic().getName()", "java.util.HashMap<java.lang.String, java.lang.Double>.get(e.getCharacteristic().getName())"], "Fixed commit": "1edcb141e051b656ba6e8c9fa4a779e7ed644785", "Url": "https://api.github.com/repos/dbuhon/MobileHero", "Date": "2015-07-19T01:41:32Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileList().length) == 0) { byku.traindroid.DataFacade.Init(); updateTimeTable(true); byku.traindroid.UIUtils.ShowToast(this, getString(R.string.settings_not_found)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3735/buggy-version/src.byku.traindroid.MainView.java", "BodyUseAPI": [], "Fixed commit": "e4e7c5760a94eb02c6155ec7b44e930344fb7d96", "Url": "https://api.github.com/repos/4ybaka/TrainDroid", "Date": "2011-08-19T18:34:00Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3439/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "1b2bd944ac3dccc45efd4d22350335064bf09771", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3439/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "1b2bd944ac3dccc45efd4d22350335064bf09771", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRequests) == null) mRequests = new java.util.HashMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5191/buggy-version/sdk.src.main.java.com.playseeds.android.sdk.inappmessaging.InAppMessageManager.java", "BodyUseAPI": [], "Fixed commit": "e39483c7e17825f2034c1842513c120275e239dd", "Url": "https://api.github.com/repos/therealseeds/seeds-sdk-android", "Date": "2016-09-10T00:55:53Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRequestThreads) == null) mRequestThreads = new java.util.HashMap<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5191/buggy-version/sdk.src.main.java.com.playseeds.android.sdk.inappmessaging.InAppMessageManager.java", "BodyUseAPI": [], "Fixed commit": "e39483c7e17825f2034c1842513c120275e239dd", "Url": "https://api.github.com/repos/therealseeds/seeds-sdk-android", "Date": "2016-09-10T00:55:53Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.playseeds.android.sdk.Seeds.sharedInstance().getMessageContext()) != null) { segmentation.put(\"context\", com.playseeds.android.sdk.Seeds.sharedInstance().getMessageContext()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5191/buggy-version/sdk.src.main.java.com.playseeds.android.sdk.inappmessaging.InAppMessageManager.java", "BodyUseAPI": [], "Fixed commit": "e39483c7e17825f2034c1842513c120275e239dd", "Url": "https://api.github.com/repos/therealseeds/seeds-sdk-android", "Date": "2016-09-10T00:55:53Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mResponses) == null) mResponses = new java.util.HashMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5191/buggy-version/sdk.src.main.java.com.playseeds.android.sdk.inappmessaging.InAppMessageManager.java", "BodyUseAPI": [], "Fixed commit": "e39483c7e17825f2034c1842513c120275e239dd", "Url": "https://api.github.com/repos/therealseeds/seeds-sdk-android", "Date": "2016-09-10T00:55:53Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (retrievedUsername != null) { profile.setId(retrievedUsername); }else { profile.setId(username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8176/buggy-version/pac4j-core.src.main.java.org.pac4j.core.profile.service.AbstractProfileService.java", "BodyUseAPI": ["U.setId(java.lang.Object)"], "Fixed commit": "ad91f992ba36bee8484ba37f0c6c011f624214f7", "Url": "https://api.github.com/repos/vidma/pac4j", "Date": "2017-05-19T17:21:32Z"},
{"Line": "=>1178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedStack.getSeds().isEmpty()) { cfa.vo.iris.gui.NarrowOptionPane.showMessageDialog(null, \"Stack is empty. Please add SEDs to the stack first.\", \"Empty Stack\", NarrowOptionPane.ERROR_MESSAGE); throw new cfa.vo.sedlib.common.SedNoDataException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5707/buggy-version/sed-builder.src.main.java.cfa.vo.sed.science.stacker.SedStackerFrame.java", "BodyUseAPI": [], "Fixed commit": "f2295dcae314237576f8fa1dab82dd595651ea04", "Url": "https://api.github.com/repos/ChandraCXC/iris", "Date": "2015-05-08T17:06:27Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((segt.count) != (matcher.count)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1851/buggy-version/src.main.java.com.github.aiderpmsi.pims.parser.linestypes.PmsiFixedElement.java", "BodyUseAPI": [], "Fixed commit": "4f7ff32dea22b659e897564a37089a9605edd89c", "Url": "https://api.github.com/repos/aiderpmsi/pims", "Date": "2014-05-28T16:57:24Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(memCachedClient.stats().isEmpty())) { @java.lang.SuppressWarnings(\"unchecked\") java.util.List<java.lang.String> list = ((java.util.List<java.lang.String>) (memCachedClient.get(packageName))); for (java.lang.String key : list) { memCachedClient.delete(key); } }else { com.netease.course.aop.CacheInterceptor.logger.error(\"memcached\u8fde\u63a5\u5931\u8d25\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/755/buggy-version/src.main.java.com.netease.course.aop.CacheInterceptor.java", "BodyUseAPI": ["com.whalin.MemCached.MemCachedClient.get(java.lang.String)", "com.whalin.MemCached.MemCachedClient.delete(java.lang.String)"], "Fixed commit": "20c453c57b5408c2db6f2d501425b10d21d081fe", "Url": "https://api.github.com/repos/liusyuan/javaweb", "Date": "2016-07-10T06:53:14Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (matrixName == null) { dialog.setTitle(matrix.getName()); dialog.setHeaderText((\"Showing the data associated with \" + (matrix.getName()))); }else { dialog.setTitle(matrixName); dialog.setHeaderText((\"Showing the data associated with \" + matrixName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5645/buggy-version/src.ijordan.matrixonator.view.MatrixAlerts.java", "BodyUseAPI": ["javafx.scene.control.Dialog<java.lang.Object>.setHeaderText(java.lang.String)", "javafx.scene.control.Dialog<java.lang.Object>.setTitle(java.lang.String)"], "Fixed commit": "4d740999070ba6aa9c4d65dd56037a5ee343a956", "Url": "https://api.github.com/repos/Sheepzez/Matrixonator-Java", "Date": "2015-02-02T21:32:43Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsprit.core.problem.solution.route.state.RouteAndActivityStateGetter.getRouteState(insertionContext.getRoute(),StateFactory.MAXLOAD,java.lang.Class)", "insertionContext.getNewVehicle().getType().getCapacityDimensions()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(maxLoadAtRoute.isLessOrEqual(capacityDimensions))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/9221/buggy-version/jsprit-core.src.main.java.jsprit.core.problem.constraint.ServiceLoadRouteLevelConstraint.java", "BodyUseAPI": [], "Fixed commit": "40b75eae9208d6d6846fceaa850ac470c1c065ca", "Url": "https://api.github.com/repos/jsprit/jsprit", "Date": "2014-06-10T18:13:26Z"},
{"Line": "=>652", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((renderer) == null) setupRendererAuto();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2907/buggy-version/src.main.java.org.cds06.speleograph.data.Series.java", "BodyUseAPI": [], "Fixed commit": "b21ffe26dc8f173af63beb41d35112f5e316841c", "Url": "https://api.github.com/repos/CDS06/SpeleoGraph", "Date": "2013-07-30T12:22:14Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ffx.algorithms.Barostat.logger.isLoggable(java.util.logging.Level.FINE)) { ffx.algorithms.Barostat.logger.fine(java.lang.String.format(\" MC Density %10.6f is outside the range %10.6f - %10.6f.\", den, minDensity, maxDensity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6514/buggy-version/modules.algorithms.src.main.java.ffx.algorithms.Barostat.java", "BodyUseAPI": ["java.util.logging.Logger.fine(java.lang.String)"], "Fixed commit": "5ed3f8db366d9cb548ba63caa96eb3cf67b3cb38", "Url": "https://api.github.com/repos/mjschnie/ffx", "Date": "2017-01-27T17:28:10Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ffx.algorithms.Barostat.logger.isLoggable(java.util.logging.Level.FINE)) { ffx.algorithms.Barostat.logger.fine(java.lang.String.format(\" MC An axis (%10.6f,%10.6f,%10.6f) is below the minimium %10.6f\", unitCell.a, unitCell.b, unitCell.c, minAxisLength)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6514/buggy-version/modules.algorithms.src.main.java.ffx.algorithms.Barostat.java", "BodyUseAPI": ["java.util.logging.Logger.fine(java.lang.String)"], "Fixed commit": "5ed3f8db366d9cb548ba63caa96eb3cf67b3cb38", "Url": "https://api.github.com/repos/mjschnie/ffx", "Date": "2017-01-27T17:28:10Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ffx.algorithms.Barostat.logger.isLoggable(java.util.logging.Level.FINE)) { ffx.algorithms.Barostat.logger.fine(java.lang.String.format(\" MC An ange (%10.6f,%10.6f,%10.6f) is outside the range %10.6f - %10.6f\", unitCell.alpha, unitCell.beta, unitCell.gamma, minAngle, maxAngle)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6514/buggy-version/modules.algorithms.src.main.java.ffx.algorithms.Barostat.java", "BodyUseAPI": ["java.util.logging.Logger.fine(java.lang.String)"], "Fixed commit": "5ed3f8db366d9cb548ba63caa96eb3cf67b3cb38", "Url": "https://api.github.com/repos/mjschnie/ffx", "Date": "2017-01-27T17:28:10Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.FoodLevelChangeEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((event.getFoodLevel()) < (player.getFoodLevel())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5302/buggy-version/src.com.wolvencraft.prison.mines.events.FlagListener.java", "BodyUseAPI": [], "Fixed commit": "34a1d3090a339bd2222ede6837dd3bbf8e1517a8", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2013-02-03T01:43:30Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wallride.core.domain.PageTree.getPageByCode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (page == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2571/buggy-version/src.main.java.org.wallride.core.domain.PageTree.java", "BodyUseAPI": [], "Fixed commit": "24f6b741d76eec3ff71c944eb02f7ded1ffd80af", "Url": "https://api.github.com/repos/tagbangers/wallride", "Date": "2015-03-03T13:27:19Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDialog) != null) mDialog.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5625/buggy-version/src.main.java.usbong.android.builder.UploadUtree.java", "BodyUseAPI": [], "Fixed commit": "b70244c29c67c8e945b33082fe3f1ba30e2b022a", "Url": "https://api.github.com/repos/linusmotu/usbong-builder", "Date": "2015-07-26T15:00:11Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((uploaderET.getText().toString().matches(\"\")) || (descriptionET.getText().toString().matches(\"\"))) || (youtubeET.getText().toString().matches(\"\"))) || (treeNameTV.getText().toString().matches(\"\"))) { usbong.android.builder.fragments.screens.Toast.makeText(getActivity(), \"Please complete all required fields\", Toast.LENGTH_SHORT).show(); }else { uploadUtree(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5625/buggy-version/src.main.java.usbong.android.builder.fragments.screens.UtreeDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "b70244c29c67c8e945b33082fe3f1ba30e2b022a", "Url": "https://api.github.com/repos/linusmotu/usbong-builder", "Date": "2015-07-26T15:00:11Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (difHour < 0) { difHour = 24 + difHour; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2904/buggy-version/SelfMonitoringGamblingApplication.app.src.main.java.com.example.sebastiena.selfmonitoringgamblingapplication.GamblingSessionFragment.java", "BodyUseAPI": [], "Fixed commit": "294190d3bb68da100e9665c77e89dd129a28d33e", "Url": "https://api.github.com/repos/andk123/Self-MonitoringGamblingApp", "Date": "2017-10-23T05:36:23Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(readInProgress.compareAndSet(false, true))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8510/buggy-version/transport.src.main.java.io.netty.channel.socket.aio.AioSocketChannel.java", "BodyUseAPI": [], "Fixed commit": "ed7613e1830a69da5370916dc8e9086b3cc231e4", "Url": "https://api.github.com/repos/jfallows/netty", "Date": "2012-08-05T22:11:12Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.psu.sweng500.team8.solver.CommonSolverMethods.getMostConstrainedCell(edu.psu.sweng500.team8.coreDataStructures.Board)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mostConstrainedCell == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8051/buggy-version/src.edu.psu.sweng500.team8.solver.ConstraintSolver.java", "BodyUseAPI": [], "Fixed commit": "aebd667b9dfe3b8e1e99a622c24ad234da3c86d1", "Url": "https://api.github.com/repos/garnryang/Team8", "Date": "2015-07-14T22:50:40Z"},
{"Line": "=>3980", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateContent) { newRecordVersion = ppos.recordVersion; }else { newRecordVersion = version; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2417/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.OAbstractPaginatedStorage.java", "BodyUseAPI": [], "Fixed commit": "e8f68b6eeffdaba3b10a40d4624ba21d9e379536", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-10-04T12:31:08Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((previousValue == false) || (newValue == true)) { mouseExited(new java.awt.event.MouseEvent(this, 0, 0, 0, 0, 0, 0, 0, 0, false, 0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3440/buggy-version/2COMMONPROJECTS.audio-services.src.uk.co.modularaudio.mads.subrack.ui.SubRackEditPatchButtonUiJComponent.java", "BodyUseAPI": [], "Fixed commit": "b32733238d8f9951c7c492530f583fae2432fb47", "Url": "https://api.github.com/repos/danielhams/mad-java", "Date": "2015-04-22T19:03:08Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((delegate) != null) { delegate.didAddNewAction(undoredoableAction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8925/buggy-version/src.actions.edit.undoredo.SharedUndoRedoActionManager.java", "BodyUseAPI": [], "Fixed commit": "d2a985c08e3f4f775247355c05fdf34aa012d757", "Url": "https://api.github.com/repos/UCSDOalads/JavaSketchPad", "Date": "2017-05-20T19:26:20Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.sentry.provider.db.service.persistent.SentryStore.isNULL(parent.getTableName()))) { filters.append(((\" && tableName == \\\"\" + (parent.getTableName())) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3798/buggy-version/sentry-provider.sentry-provider-db.src.main.java.org.apache.sentry.provider.db.service.persistent.SentryStore.java", "BodyUseAPI": ["java.lang.StringBuilder.append(((\" && tableName == \\\"\" + (parent.getTableName())) + \"\\\"\"))", "org.apache.sentry.provider.db.service.model.MSentryPrivilege.getTableName()"], "Fixed commit": "2f1ca8fac2ac0abf2959ef9e92181f97f9f2553a", "Url": "https://api.github.com/repos/intel-hadoop/incubator-sentry", "Date": "2014-07-31T07:25:17Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isConnected())) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5015/buggy-version/com.stargatemc.score.utils.DBUtils.java", "BodyUseAPI": [], "Fixed commit": "a0b6dfd53385243ae7b09aafd1c11d0f5102b195", "Url": "https://api.github.com/repos/StargateMC/SCore", "Date": "2017-07-06T10:25:12Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isConnected()) getConnection().close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5015/buggy-version/com.stargatemc.score.utils.DBUtils.java", "BodyUseAPI": [], "Fixed commit": "a0b6dfd53385243ae7b09aafd1c11d0f5102b195", "Url": "https://api.github.com/repos/StargateMC/SCore", "Date": "2017-07-06T10:25:12Z"},
{"Line": "=>2432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((58 == (mMbBuf[j])) && ((j + 1) < (mMbBufLen))) && (isNumber(mMbBuf[(j - 1)]))) && (isNumber(mMbBuf[(j + 1)]))) { }else { for (int k = 0; k < (com.sunteam.ebook.view.TextReaderView.EN_SEPARATOR.length); k++) { if ((com.sunteam.ebook.view.TextReaderView.EN_SEPARATOR[k]) == (mMbBuf[j])) { return ri; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8195/buggy-version/ebook.src.com.sunteam.ebook.view.TextReaderView.java", "BodyUseAPI": [], "Fixed commit": "36c44f1040ccddac47e786f3af9af8837f2ae1f1", "Url": "https://api.github.com/repos/weizhiping/ebook", "Date": "2016-09-26T08:51:39Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.motiani.jlisp.Parser.tokanize(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((tokens.size()) > 0) { throw new java.lang.IllegalArgumentException((\"Invalid token \" + (tokens.get(0)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1937/buggy-version/src.main.java.com.motiani.jlisp.Parser.java", "BodyUseAPI": ["java.util.LinkedList<java.lang.String>.get(int)"], "Fixed commit": "dd5b17d641a18d1924e79366c22c10b0f78ddb06", "Url": "https://api.github.com/repos/nitin-motiani/jlisp", "Date": "2017-07-12T17:38:57Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sender) == null) { senderMessage += \", see below:\"; }else { senderMessage += \", see console.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2533/buggy-version/src.haveric.recipeManager.RecipeProcessor.java", "BodyUseAPI": [], "Fixed commit": "3f7b9e4a6b5290874992318964627b1eb45b465e", "Url": "https://api.github.com/repos/haveric/RecipeManager2", "Date": "2014-11-02T01:26:41Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!edited) { s = ((ip) + \" \") + url; edited = true; }else { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3884/buggy-version/src.Util.EditHosts.java", "BodyUseAPI": [], "Fixed commit": "10a47c35e4f5f040976888821eb78f7107bf8ed9", "Url": "https://api.github.com/repos/StevensNJD4/LazyMan", "Date": "2017-10-29T16:23:50Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!aborted) && (errors == 0)) { org.twodividedbyzero.idea.findbugs.core.FindBugsCompileAfterHook.initWorker(compileContext); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3253/buggy-version/src.src.impl.org.twodividedbyzero.idea.findbugs.core.FindBugsCompileAfterHook.java", "BodyUseAPI": [], "Fixed commit": "f2a8dcfd5cd52cdc9806639708d40722b1460bc0", "Url": "https://api.github.com/repos/andrepdo/findbugs-idea", "Date": "2015-09-20T18:06:51Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (inData.containsKey(\"pathfindingRange\")) this.pathfindingRange = ((java.lang.Integer) (inData.get(\"pathfindingRange\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/831/buggy-version/src.main.java.de.kumpelblase2.remoteentities.persistence.EntityData.java", "BodyUseAPI": [], "Fixed commit": "92ff426e0684b3520d45ef1144ea611bd4e3d77a", "Url": "https://api.github.com/repos/kumpelblase2/Remote-Entities", "Date": "2013-06-20T11:40:45Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.cxf.service.model.FaultInfo.getProperty(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (exClass == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7548/buggy-version/api.src.main.java.org.apache.cxf.interceptor.ClientFaultConverter.java", "BodyUseAPI": [], "Fixed commit": "1da5667b895bcd94d115506921c504c97966af7f", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2014-07-11T16:43:21Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasValueInAnnotation) { java.util.regex.Matcher m = com.googlecode.androidannotations.helper.RestAnnotationHelper.NAMES_PATTERN.matcher(uriTemplate); while (m.find()) { variableNames.add(m.group(1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7774/buggy-version/AndroidAnnotations.androidannotations.src.main.java.com.googlecode.androidannotations.helper.RestAnnotationHelper.java", "BodyUseAPI": [], "Fixed commit": "77ea453c6a19683ddeb68b7b8f50a9d0a9985c23", "Url": "https://api.github.com/repos/ealden/androidannotations", "Date": "2011-12-01T14:37:41Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fields.size()) == 1) { setScheme(getTaps()[0].getScheme()); return super.getScheme(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5138/buggy-version/cascading-core.src.main.java.cascading.tap.MultiSinkTap.java", "BodyUseAPI": [], "Fixed commit": "8a5a224a7fd30a32296e9be1853b35deb647941b", "Url": "https://api.github.com/repos/mapr/cascading", "Date": "2013-10-30T19:24:16Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity().getSupportFragmentManager().findFragmentByTag(\"DateTimePicker\")) == null) { dateFragment = new com.workout.log.fragment.ActionBarDatePickerFragment(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7485/buggy-version/WorkoutLog.src.com.workout.log.ExerciseSpecific.java", "BodyUseAPI": [], "Fixed commit": "f22734c531cbd3c0a7750a46296e9533ea5f96fe", "Url": "https://api.github.com/repos/es059/Mobile-Anwendungen", "Date": "2014-09-07T11:40:18Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.workout.log.fragment.ActionBarDatePickerFragment.calendar) == null) { com.workout.log.fragment.ActionBarDatePickerFragment.calendar = java.util.Calendar.getInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7485/buggy-version/WorkoutLog.src.com.workout.log.fragment.ActionBarDatePickerFragment.java", "BodyUseAPI": [], "Fixed commit": "f22734c531cbd3c0a7750a46296e9533ea5f96fe", "Url": "https://api.github.com/repos/es059/Mobile-Anwendungen", "Date": "2014-09-07T11:40:18Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rangeCheck(infoLineFieldLoc)) == true) return mFieldLines[infoLineFieldLoc.mRowIdx][infoLineFieldLoc.mFieldIdx];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3638/buggy-version/src.com.ds.avare.utils.InfoLines.java", "BodyUseAPI": [], "Fixed commit": "6cafb46c370462d9c25f3496b8dd0e8a85ed4713", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2014-01-04T02:33:17Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rangeCheck(infoLineFieldLoc)) == true) mFieldLines[infoLineFieldLoc.mRowIdx][infoLineFieldLoc.mFieldIdx] = nType;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3638/buggy-version/src.com.ds.avare.utils.InfoLines.java", "BodyUseAPI": [], "Fixed commit": "6cafb46c370462d9c25f3496b8dd0e8a85ed4713", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2014-01-04T02:33:17Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.lastUpdate) == null) { this.lastUpdate = hiways.util.Factory.parseTimestamp(this.string); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2567/buggy-version/src.hiways.util.EntryHandler.java", "BodyUseAPI": [], "Fixed commit": "5bee0a8acd929eb79227f8beae27c08f74c2057a", "Url": "https://api.github.com/repos/cavoirom/Hiways", "Date": "2011-05-25T04:28:17Z"},
{"Line": "=>607", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (privateData.containsKey(\"subaccount\")) subAccount = ((int) (privateData.get(\"subaccount\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3188/buggy-version/app.src.main.java.com.greenaddress.greenbits.GaService.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "ae5413eef328ac24ed4e706784ac09aa6f076a37", "Url": "https://api.github.com/repos/greenaddress/GreenBits", "Date": "2016-11-14T07:04:57Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.AbsListView.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (childZero != null) { y = ((int) (childZero.getY())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/409/buggy-version/app.src.main.java.org.leopub.mat.controller.MessageListActivity.java", "BodyUseAPI": ["android.view.View.getY()"], "Fixed commit": "1a4cb037df0078999e135566e5d91ad66de07ddd", "Url": "https://api.github.com/repos/leoport/MaT-Android", "Date": "2015-07-22T13:20:56Z"},
{"Line": "=>1238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.storage.impl.local.paginated.OClusterPositionMap.get(com.orientechnologies.orient.core.id.OClusterPosition)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (positionEntry == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7662/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.paginated.OPaginatedCluster.java", "BodyUseAPI": [], "Fixed commit": "9ec5905718955e31138b40508793b93203d8507b", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-10-10T09:19:50Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(double,double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (minSide < (MIN_SIDE_LENGTH)) { factor = (MIN_SIDE_LENGTH) / (java.lang.Math.min(rec.getWidth(), rec.getHeight())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5422/buggy-version/src.main.java.de.cismet.cismap.commons.gui.piccolo.SelectionAwareTexturePaint.java", "BodyUseAPI": [], "Fixed commit": "f06c674ebe4520c5ffa64134bf2116df5aaff4ec", "Url": "https://api.github.com/repos/cismet/cismap-commons", "Date": "2017-01-19T19:02:55Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["crea.wallet.lite.ui.main.SettingsFragment.findPreference(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((feepreference.getValue()) == null) { feepreference.setValueIndex(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4066/buggy-version/app.src.main.java.crea.wallet.lite.ui.main.SettingsFragment.java", "BodyUseAPI": ["android.support.v7.preference.ListPreference.setValueIndex(int)"], "Fixed commit": "593d7dbcbc443d3c7a3e1e14df64d2969d84918a", "Url": "https://api.github.com/repos/creativechain/android-wallet", "Date": "2017-03-15T22:51:21Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tokens.isEmpty()) { enableSubmitTasks(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4957/buggy-version/jtrim-gui.src.main.java.org.jtrim.access.ScheduledAccessToken.java", "BodyUseAPI": [], "Fixed commit": "b7f915c82ecfdaa0e13c6ef8a5ddf38118661d9e", "Url": "https://api.github.com/repos/kelemen/JTrim", "Date": "2012-06-28T16:30:45Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((projects.size()) > 0) { activeProject = projects.get(0); active_project_string = projects.get(0).getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2855/buggy-version/RPMS.src.beans.ProjectManagerBean.java", "BodyUseAPI": ["java.util.List<model.RPMSProject>.get(int)", "projects.get(0).getName()", "java.util.List<model.RPMSProject>.get(int)"], "Fixed commit": "a9f3f3ffa9e66b65c3a0dc4d56986446d1069e4f", "Url": "https://api.github.com/repos/serlachner/sw14_free_12", "Date": "2014-06-14T14:44:17Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["joptsimple.OptionParser.parse(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (options.has(\"help\")) { parser.printHelpOn(java.lang.System.out); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/28/buggy-version/src.main.java.Main.java", "BodyUseAPI": [], "Fixed commit": "411075228bc889120dea40efa11ef1fdc7993d63", "Url": "https://api.github.com/repos/gsdlab/ClaferChocoIG", "Date": "2014-04-14T19:59:21Z"},
{"Line": "=>660", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cursorStr != null) query = query.startAt(com.google.appengine.api.datastore.Cursor.fromWebSafeString(cursorStr));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7135/buggy-version/src.main.java.com.pratilipi.data.DataAccessorGaeImpl.java", "BodyUseAPI": ["com.google.appengine.api.datastore.Cursor.fromWebSafeString(java.lang.String)", "query.startAt(com.google.appengine.api.datastore.Cursor.fromWebSafeString(cursorStr))"], "Fixed commit": "4131e3181078351399d220b61824b0a8c9dd6b05", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-04-19T08:55:59Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.UUID.fromString(signYAML.getString((signName + \".creator\")))", "net.minebot.fasttravel.data.FastTravelSignDB.plugin.getServer().getWorld(signYAML.getString((signName + \".tploc.world\")))", "net.minebot.fasttravel.data.FastTravelSignDB.plugin.getServer().getWorld(signYAML.getString((signName + \".signloc.world\")))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(net.minebot.fasttravel.data.FastTravelSignDB.checkMissing(signName, creator, locWorld, tpLocWorld))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1025/buggy-version/src.main.java.net.minebot.fasttravel.data.FastTravelSignDB.java", "BodyUseAPI": [], "Fixed commit": "ba437f2640b14459d7de3fb3b6050e9c66944de7", "Url": "https://api.github.com/repos/oneill011990/FastTravel", "Date": "2014-12-14T21:02:38Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldExitOnChange()) { android.util.Log.i(com.bottlerocketstudios.configuration.ApplicationConfigurationController.TAG, \"Shutting down VM to affect staging switch.\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/9089/buggy-version/ApplicationConfiguration.applicationconfiguration.src.main.java.com.bottlerocketstudios.configuration.ApplicationConfigurationController.java", "BodyUseAPI": [], "Fixed commit": "11732a4f63866bb61c93af393cf9f565f8aa1f1d", "Url": "https://api.github.com/repos/BottleRocketStudios/Android-ApplicationConfiguration", "Date": "2016-02-17T23:29:47Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.foxweave.json.JSONUtil.getValue(org.json.JSONObject,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rowsInObj instanceof org.json.JSONObject) { rowsIn = new org.json.JSONArray(); rowsIn.put(rowsInObj); }else if (rowsInObj instanceof org.json.JSONArray) { rowsIn = ((org.json.JSONArray) (rowsInObj)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5415/buggy-version/zohocrm.src.main.java.com.foxweave.zohocrm.ZohoInboundTransformer.java", "BodyUseAPI": ["org.json.JSONArray.put(java.lang.Object)"], "Fixed commit": "92ccb5e4eb310f84ba5737069d8c88bad3a26b74", "Url": "https://api.github.com/repos/FoxWeave/components", "Date": "2013-08-28T12:16:15Z"},
{"Line": "=>2370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.nukkit.level.Level.getChunk(int,int,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (oldChunk != null) { oldChunk.removeEntity(entity); entity.chunk = chunk; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6355/buggy-version/src.main.java.cn.nukkit.level.Level.java", "BodyUseAPI": ["cn.nukkit.level.format.FullChunk.removeEntity(cn.nukkit.entity.Entity)"], "Fixed commit": "39de211241f464ecb257b6609a7c355052d805d2", "Url": "https://api.github.com/repos/larryTheCoder/Nukkit-1", "Date": "2017-09-17T00:57:18Z"},
{"Line": "=>2378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.nukkit.level.Level.getChunk(int,int,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (oldChunk != null) { oldChunk.removeBlockEntity(blockEntity); blockEntity.chunk = chunk; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6355/buggy-version/src.main.java.cn.nukkit.level.Level.java", "BodyUseAPI": ["cn.nukkit.level.format.FullChunk.removeBlockEntity(cn.nukkit.blockentity.BlockEntity)"], "Fixed commit": "39de211241f464ecb257b6609a7c355052d805d2", "Url": "https://api.github.com/repos/larryTheCoder/Nukkit-1", "Date": "2017-09-17T00:57:18Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Float.parseFloat(price)) < 0.009) { this.showMessage(\"\u5e94\u4ed8\u91d1\u989d\u4e3a0\u4e0d\u80fd\u4f7f\u7528\u652f\u4ed8\u5b9d\u652f\u4ed8\u3002\", null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4798/buggy-version/src.cn.count.easydrive366.order.PayActivity.java", "BodyUseAPI": [], "Fixed commit": "5c813c2460aa9bbad79ee8bc3e1cb53ba26920d7", "Url": "https://api.github.com/repos/ddssssdd/EasyDrive366_android", "Date": "2014-03-26T14:30:11Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cs2103_w09_1j.esther.DateParser.find24HTime(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((twentyFourTime[0]) != null) { dateTime[1] = twentyFourTime[0]; input = twentyFourTime[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/9046/buggy-version/src.cs2103_w09_1j.esther.DateParser.java", "BodyUseAPI": [], "Fixed commit": "b0927549bd955ce3b27116d6019109c8272e14a2", "Url": "https://api.github.com/repos/cs2103jan2016-w09-1j/main", "Date": "2016-03-29T06:46:28Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"cmap\".equals(reader.getNodeName()))) throw new com.thoughtworks.xstream.converters.ConversionException(\"should be under 'cmap' node\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7058/buggy-version/src.main.java.net.openhft.xstreem.converters.AbstractChronicleMapConverter.java", "BodyUseAPI": [], "Fixed commit": "64ba0c04bec87670619768df30f832b45e1fdaf0", "Url": "https://api.github.com/repos/OpenHFT/Chronicle-Map", "Date": "2014-12-29T18:06:30Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.filreas.gosthlm.StationViewPagerAdapter.getCurrentView()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (currentView != null) { android.view.View viewPagerHeader = currentView.findViewById(R.id.viewPager_header); if (viewPagerHeader != null) { viewPagerHeader.setBackgroundColor(black); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/327/buggy-version/wear.src.main.java.com.filreas.gosthlm.WearMainActivity.java", "BodyUseAPI": ["android.view.View.findViewById(R.id.viewPager_header)"], "Fixed commit": "efa10fa7e9a8ce44c0824008a730411e0834fb7e", "Url": "https://api.github.com/repos/SnigL/GoSthlm", "Date": "2016-01-27T21:58:56Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DEBUG) jelly.getEventLog().alarm(\"Block saved, doing UTXO\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8944/buggy-version/src.jelectrum.Importer.java", "BodyUseAPI": [], "Fixed commit": "d92d2779d9110ae151ce09f6cd9e23bc0397beac", "Url": "https://api.github.com/repos/fireduck64/jelectrum", "Date": "2015-08-26T23:50:01Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Long, io.cattle.platform.core.model.Instance>.get(target.getInstanceId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (targetInstance == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4480/buggy-version/code.iaas.config-item.server.src.main.java.io.cattle.platform.configitem.context.impl.LoadBalancerInfoFactory.java", "BodyUseAPI": [], "Fixed commit": "425064380eebc0b347176f2db1610731c57d0aa4", "Url": "https://api.github.com/repos/rancher/cattle", "Date": "2016-03-28T17:02:45Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(str.startsWith(packagee))) { str = (packagee + \".\") + str; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1392/buggy-version/src.main.java.me.kieranwallbanks.jmodules.util.ReflectionsUtilities.java", "BodyUseAPI": [], "Fixed commit": "69d3ac8c64270bf388720b90f43d3d094d9bc577", "Url": "https://api.github.com/repos/Kezz101/JModules", "Date": "2017-01-17T16:48:13Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((l == ((minicraft.Game.minLevelDepth) + 1)) && (tilename.equalsIgnoreCase(\"LAPIS\"))) && ((worldVer.compareTo(new minicraft.saveload.Load.Version(\"2.0.3-dev6\"))) < 0)) { if ((java.lang.Math.random()) < 0.8) tilename = \"Gem Ore\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5200/buggy-version/src.minicraft.saveload.Load.java", "BodyUseAPI": [], "Fixed commit": "939b0fc41705177975ff4ff6a4a767da31116845", "Url": "https://api.github.com/repos/chrisj42/minicraft-plus-revived", "Date": "2017-09-17T23:47:40Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (item == null) { success = false; }else if (user == null) { if ((item.getPermission()) == (Permission.PUBLIC)) { success = !(_items.isBorrowed(item, duration)); }else { success = false; } }else { if (user.getPermission().enough(item.getPermission())) { success &= !(_items.isBorrowed(item, duration)); }else { success = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2652/buggy-version/src.server.ConnectionHandler.java", "BodyUseAPI": ["user.getPermission().enough(item.getPermission())", "server.Item.getPermission()", "server.Item.getPermission()", "server.ItemDatabase.isBorrowed(server.Item,server.Duration)", "server.ItemDatabase.isBorrowed(server.Item,server.Duration)"], "Fixed commit": "03c08754e6687350da525a8844733bea724e847f", "Url": "https://api.github.com/repos/Malthael/Simple-Borrow-System", "Date": "2014-06-16T15:06:28Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success) { updateMsg = ((\"User \" + (session.getName())) + \" borrow \") + item; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2652/buggy-version/src.server.ConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "03c08754e6687350da525a8844733bea724e847f", "Url": "https://api.github.com/repos/Malthael/Simple-Borrow-System", "Date": "2014-06-16T15:06:28Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.TreeUtil.getVpFromWord(edu.stanford.nlp.trees.Tree,edu.stanford.nlp.trees.Tree)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (participialPhrase == null) { java.lang.System.out.println(\"Participial phrase not contained in VP\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4485/buggy-version/src.main.java.simplification.ParticipialModifiersExtractor.java", "BodyUseAPI": [], "Fixed commit": "8de14036a4e5afd08dd5449dc19c1b75e1df1458", "Url": "https://api.github.com/repos/Tyler-Yates/TuringThesis", "Date": "2016-02-25T21:48:57Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != result) org.mokey.mapping.Mapper.log.debug(java.lang.String.format(\"Final value of mapped tuple[%s] is : %s\", org.apache.commons.lang3.StringUtils.join(result, \",\"), minValue)); else org.mokey.mapping.Mapper.log.debug(\"Final value of mapped tuple[%s] is : null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2776/buggy-version/src.main.java.org.mokey.mapping.Mapper.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.join(org.mokey.mapping.tuples.Tuple<?>[],java.lang.String)", "java.lang.String.format(java.lang.String,org.apache.commons.lang3.StringUtils.join(result, \",\"),double)", "org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "562183ac1134a6d65d0228bcca36391078be85eb", "Url": "https://api.github.com/repos/shenhuarj/fuzzymapping", "Date": "2014-08-15T10:40:59Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.antlr.codegen.ErrorManager.getErrorState().errors) > 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8529/buggy-version/tool.src.main.java.org.antlr.codegen.CodeGenerator.java", "BodyUseAPI": [], "Fixed commit": "71dc1d9b5d22a65a04a83047b5be12b6788f912b", "Url": "https://api.github.com/repos/Zannick/antlr3", "Date": "2013-01-04T02:12:53Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.droidupnp.Main.upnpServiceController) == null) org.droidupnp.Main.upnpServiceController = org.droidupnp.Main.factory.createUpnpServiceController(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3757/buggy-version/src.org.droidupnp.Main.java", "BodyUseAPI": [], "Fixed commit": "1786fe6468a55e17f49e9fa26135dbd7c7cd48f8", "Url": "https://api.github.com/repos/trishika/DroidUPnP", "Date": "2013-04-09T18:58:06Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.sdklib.IAndroidTarget.getSystemImages()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((abiTypes.length) == 0) { throw new com.wuntee.oter.exception.GenericException(\"There are no images associated with the target.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/9125/buggy-version/src.main.java.com.wuntee.oter.avd.AvdWorkshop.java", "BodyUseAPI": [], "Fixed commit": "6006de97f0db8eb8751d9641bdaf05f1995b4fdc", "Url": "https://api.github.com/repos/wuntee/otertool", "Date": "2012-08-02T16:38:29Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((checkId) == (R.id.list_selectedwork)) { return R.layout.project_list_row; }else if ((checkId) == (R.id.list_project)) { return R.layout.project_img_row; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7999/buggy-version/src.com.example.zonedhobbitsportfolio.CustomAdapter.java", "BodyUseAPI": [], "Fixed commit": "c13f955b24284b8450a116c2e637dde794e1b415", "Url": "https://api.github.com/repos/zonedHobbits/andPortfolio", "Date": "2013-10-14T14:36:04Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((checkId) == (R.id.list_selectedwork)) { android.util.Log.i(\"***PROFILE GRIDVIEW\", \"THIS WURKZ!\"); }else if ((checkId) == (R.id.list_project)) { android.widget.ImageView projectImage = ((android.widget.ImageView) (rowView.findViewById(R.id.projectImageView))); projectImage.setImageBitmap(((android.graphics.Bitmap) (rowItem))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7999/buggy-version/src.com.example.zonedhobbitsportfolio.CustomAdapter.java", "BodyUseAPI": [], "Fixed commit": "c13f955b24284b8450a116c2e637dde794e1b415", "Url": "https://api.github.com/repos/zonedHobbits/andPortfolio", "Date": "2013-10-14T14:36:04Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (com.liferay.portlet.expando.model.ExpandoColumnConstants.STRING_ARRAY)) { return com.liferay.portal.kernel.util.StringUtil.split(attribute); }else if (type == (com.liferay.portlet.expando.model.ExpandoColumnConstants.STRING_LOCALIZED)) { return ((java.io.Serializable) (com.liferay.portal.kernel.util.LocalizationUtil.getLocalizationMap(attribute))); }else { return attribute; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7671/buggy-version/portal-service.src.com.liferay.portlet.expando.util.ExpandoConverterUtil.java", "BodyUseAPI": [], "Fixed commit": "1add6edbdd696c11aa5346b5bc744496cf9497d7", "Url": "https://api.github.com/repos/philipjones03/liferay-portal", "Date": "2015-10-20T08:39:30Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (data == null) { throw new java.lang.IllegalArgumentException((\"Not a family: \" + (familyDocument.getDocumentReference()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4590/buggy-version/components.family-studies.api.src.main.java.org.phenotips.studies.family.internal.PhenotipsFamily.java", "BodyUseAPI": [], "Fixed commit": "c3f28875c4ecdd6254a8c8a295ef325cc44fea8e", "Url": "https://api.github.com/repos/phenotips/phenotips", "Date": "2017-09-21T18:19:47Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.qii.weiciyuan.bean.UserBean.getGender()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(s))) { if (s.equals(\"m\")) sex.setText(getString(R.string.m)); else if (s.equals(\"f\")) sex.setText(getString(R.string.f)); else sex.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7907/buggy-version/src.org.qii.weiciyuan.ui.userinfo.UserInfoFragment.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "cb7146fde59cf73005aa7e06641c6b1baf018a1e", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-05T16:12:00Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_facetCountCollector) != null) { collectTotalGrous(); _facetCountCollector = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3365/buggy-version/bobo-browse.src.com.browseengine.bobo.sort.SortCollectorImpl.java", "BodyUseAPI": [], "Fixed commit": "a311826939268c1e778418cc78fb3c024d3297af", "Url": "https://api.github.com/repos/wonlay/bobo", "Date": "2011-08-29T17:18:17Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x >= (getField().getWidth())) { x = (getField().getWidth()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7761/buggy-version/chainreaction.src.main.java.de.maikmerten.chainreaction.swing.UIField.java", "BodyUseAPI": [], "Fixed commit": "93334abdf318295073c5d577dbcf70e367b9e887", "Url": "https://api.github.com/repos/maikmerten/chainreaction", "Date": "2012-12-09T21:22:45Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (y >= (getField().getHeight())) { y = (getField().getHeight()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7761/buggy-version/chainreaction.src.main.java.de.maikmerten.chainreaction.swing.UIField.java", "BodyUseAPI": [], "Fixed commit": "93334abdf318295073c5d577dbcf70e367b9e887", "Url": "https://api.github.com/repos/maikmerten/chainreaction", "Date": "2012-12-09T21:22:45Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sortBy == null) { return issuesRepository.findAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7698/buggy-version/src.main.java.com.thoersch.seeds.resources.issues.IssuesResource.java", "BodyUseAPI": [], "Fixed commit": "c2d9bdddede8bf9fea4d0ff2d75a2315d510a850", "Url": "https://api.github.com/repos/brittanywalker/754TDD", "Date": "2017-10-23T22:11:13Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.smodel.ModelAccessHelper.runReadAction(jetbrains.mps.util.Computable<java.lang.Boolean>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (duplicateName) { return \"Module namespace already exists\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/680/buggy-version/workbench.mps-workbench.jetbrains.mps.ide.source_gen.jetbrains.mps.ide.newSolutionDialog.NewModuleUtil.java", "BodyUseAPI": [], "Fixed commit": "94880b9b2a486ab91229c4319eff24b7960a5b31", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2017-04-07T16:10:49Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.richluick.nowyoudrink.utils.Utilities.context) != null) { int dividerId = dialog.getContext().getResources().getIdentifier(\"android:id/titleDivider\", null, null); android.view.View divider = dialog.findViewById(dividerId); divider.setBackgroundColor(com.richluick.nowyoudrink.utils.Utilities.context.getResources().getColor(R.color.main_color)); int textViewId = dialog.getContext().getResources().getIdentifier(\"android:id/alertTitle\", null, null); android.widget.TextView tv = ((android.widget.TextView) (dialog.findViewById(textViewId))); tv.setTextColor(com.richluick.nowyoudrink.utils.Utilities.context.getResources().getColor(R.color.main_color)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3382/buggy-version/app.src.main.java.com.richluick.nowyoudrink.utils.Utilities.java", "BodyUseAPI": [], "Fixed commit": "f2564800f10d6717a3ce7a943cb27b948c78c239", "Url": "https://api.github.com/repos/rluick15/Now-You-Drink", "Date": "2014-10-17T17:29:59Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.linkFirstOpen.isDone())) { this.setClosed(); com.microsoft.azure.servicebus.ExceptionUtil.completeExceptionally(this.linkFirstOpen, completionException, this); if ((this.openTimer) != null) this.openTimer.cancel(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/264/buggy-version/azure-eventhubs.src.main.java.com.microsoft.azure.servicebus.MessageSender.java", "BodyUseAPI": ["com.microsoft.azure.servicebus.ExceptionUtil.completeExceptionally(java.util.concurrent.CompletableFuture<com.microsoft.azure.servicebus.MessageSender>,java.lang.Exception,com.microsoft.azure.servicebus.MessageSender)"], "Fixed commit": "5c35891695a4ecc5c7c6fcaa0b809564069b2b7c", "Url": "https://api.github.com/repos/Azure/azure-event-hubs-java", "Date": "2017-03-30T19:54:09Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.openTimer) != null) this.openTimer.cancel(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/264/buggy-version/azure-eventhubs.src.main.java.com.microsoft.azure.servicebus.MessageReceiver.java", "BodyUseAPI": [], "Fixed commit": "5c35891695a4ecc5c7c6fcaa0b809564069b2b7c", "Url": "https://api.github.com/repos/Azure/azure-event-hubs-java", "Date": "2017-03-30T19:54:09Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ws) != null) && (ws.getReadyState().equals(WebSocket.READYSTATE.OPEN))) { ws.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3444/buggy-version/RDClient.src.main.java.net.slintes.raspidroid.RaspiDroidClient.java", "BodyUseAPI": ["net.slintes.raspidroid.WSClient.close()"], "Fixed commit": "07a62186af49fd2736e3b42b355cdad7b833a5d5", "Url": "https://api.github.com/repos/slintes/RaspiDroid", "Date": "2014-01-08T13:21:46Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ws) != null) { ws.close(); ws = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3444/buggy-version/RDClient.src.main.java.net.slintes.raspidroid.RaspiDroidClient.java", "BodyUseAPI": [], "Fixed commit": "07a62186af49fd2736e3b42b355cdad7b833a5d5", "Url": "https://api.github.com/repos/slintes/RaspiDroid", "Date": "2014-01-08T13:21:46Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.acls.mongodb.service.AclClassService.getObjectClassId(oid.getType())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (objectClassId == null) { oidCondition = aclObjectIdentity.objectIdIdentity.eq(((java.lang.String) (oid.getIdentifier()))).and(aclObjectIdentity.objectIdClass.isNull()); }else { oidCondition = aclObjectIdentity.objectIdIdentity.eq(((java.lang.String) (oid.getIdentifier()))).and(aclObjectIdentity.objectIdClass.eq(objectClassId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4842/buggy-version/src.main.java.org.springframework.security.acls.mongodb.service.MongodbAclService.java", "BodyUseAPI": ["aclObjectIdentity.objectIdClass.eq(java.lang.String)", "aclObjectIdentity.objectIdIdentity.eq(((java.lang.String) (oid.getIdentifier()))).and(aclObjectIdentity.objectIdClass.eq(objectClassId))"], "Fixed commit": "c91f662e9a80bfb950c86f4920e4e7dcb4b36de6", "Url": "https://api.github.com/repos/greyfairer/spring-security-acl-mongodb", "Date": "2015-10-09T15:07:56Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.api.rules.RuleFinder.findById(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rule == null) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"Rule with id '%s' do not exists.\", ruleId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3849/buggy-version/sonar-core.src.main.java.org.sonar.core.technicaldebt.DefaultTechnicalDebtManager.java", "BodyUseAPI": [], "Fixed commit": "611806426d43e22650878b5f50148e01d475a9b2", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2014-02-10T07:35:43Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size()) == 0) { front = new com.mdorst.container.list.Node(obj); (size)++; }else { insert(new com.mdorst.container.list.Node(obj), ((size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1068/buggy-version/src.com.mdorst.container.list.ListBase.java", "BodyUseAPI": [], "Fixed commit": "de16ccc059388c15c5f8e5579f5bee4083e4caf8", "Url": "https://api.github.com/repos/anthropomorphic/CISP430-A2", "Date": "2016-02-05T08:13:18Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temp != null) { temp.prev = newNode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1068/buggy-version/src.com.mdorst.container.list.Node.java", "BodyUseAPI": [], "Fixed commit": "de16ccc059388c15c5f8e5579f5bee4083e4caf8", "Url": "https://api.github.com/repos/anthropomorphic/CISP430-A2", "Date": "2016-02-05T08:13:18Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temp != null) { temp.next = newNode; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1068/buggy-version/src.com.mdorst.container.list.Node.java", "BodyUseAPI": [], "Fixed commit": "de16ccc059388c15c5f8e5579f5bee4083e4caf8", "Url": "https://api.github.com/repos/anthropomorphic/CISP430-A2", "Date": "2016-02-05T08:13:18Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isActive(piece))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/760/buggy-version/src.main.java.cz.dusanrychnovsky.chessendgames.core.Situation.java", "BodyUseAPI": [], "Fixed commit": "59f188167019b565f1cbcf546c26704fb861e738", "Url": "https://api.github.com/repos/dusan-rychnovsky/chess-endgames", "Date": "2014-05-11T15:40:04Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isActive(piece))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/760/buggy-version/src.main.java.cz.dusanrychnovsky.chessendgames.core.Situation.java", "BodyUseAPI": [], "Fixed commit": "59f188167019b565f1cbcf546c26704fb861e738", "Url": "https://api.github.com/repos/dusan-rychnovsky/chess-endgames", "Date": "2014-05-11T15:40:04Z"},
{"Line": "=>736", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getPermanent(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(creatureForcedToBlock.getControllerId().equals(player.getId()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1629/buggy-version/Mage.src.mage.game.combat.Combat.java", "BodyUseAPI": [], "Fixed commit": "707358f875c6e8d64b4118dc02d3f767ad3fad7d", "Url": "https://api.github.com/repos/LoneFox78/mage", "Date": "2015-09-28T22:36:08Z"},
{"Line": "=>528", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["requirementEntry.getKey().mustBlockAttacker(mage.abilities.Ability,mage.game.Game)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(getDefendingPlayerId(attackingCreatureId, game).equals(possibleBlocker.getControllerId()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1629/buggy-version/Mage.src.mage.game.combat.Combat.java", "BodyUseAPI": [], "Fixed commit": "707358f875c6e8d64b4118dc02d3f767ad3fad7d", "Url": "https://api.github.com/repos/LoneFox78/mage", "Date": "2015-09-28T22:36:08Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((B != null) && (!(B.isSpouseOf(C)))) B.addSibling(C);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2555/buggy-version/src.com.isys315.familytree.cli.FamilyGenerator.java", "BodyUseAPI": ["com.isys315.familytree.family.Person.addSibling(com.isys315.familytree.family.Person)"], "Fixed commit": "4b606bcea4935ca5d31f07f739d684f57e030d63", "Url": "https://api.github.com/repos/sjtipton/family-tree", "Date": "2015-04-27T03:37:59Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curTokenParsing.getTokenType()) == (TokenType.EOF)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1266/buggy-version/Parser.java", "BodyUseAPI": [], "Fixed commit": "9eb4f6ae632c9f7fd22b0d4dbe3243513f6d9290", "Url": "https://api.github.com/repos/davidLif/IC-Compiler", "Date": "2014-11-02T17:01:34Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getPropertyById(last)) != null) { getPropertyById(last).disable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1218/buggy-version/src.client.olddays.core.OldDaysModule.java", "BodyUseAPI": ["net.minecraft.src.OldDaysModule.getPropertyById(int)", "net.minecraft.src.OldDaysProperty.disable()"], "Fixed commit": "8696e8ff58d24d832d17c050ddaad00c4b0707ee", "Url": "https://api.github.com/repos/Exalm/Minecraft-mods", "Date": "2012-09-07T15:49:04Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new java.lang.StringBuilder(\"USA-\").append(config.getNetworkId()).append(\"-\").append(java.math.BigInteger)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(customerWallet.containsKey(profileKeyBuilder.toString()))) { customerWallet.put(profileKeyBuilder.toString(), walletList); }else { java.util.List<com.catalinamarketing.omni.dmp.setup.Wallet> wallet = customerWallet.get(profileKeyBuilder.toString()); wallet.addAll(walletList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2716/buggy-version/src.main.java.com.catalinamarketing.omni.server.DataSetupHandler.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.util.Map<java.lang.String, java.util.List<com.catalinamarketing.omni.dmp.setup.Wallet>>.put(java.lang.String,java.util.List<com.catalinamarketing.omni.dmp.setup.Wallet>)", "java.util.Map<java.lang.String, java.util.List<com.catalinamarketing.omni.dmp.setup.Wallet>>.get(java.lang.String)", "java.lang.StringBuilder.toString()"], "Fixed commit": "dfc47109d72c490fb1ad027b1abb1096f926481b", "Url": "https://api.github.com/repos/amitvc/perftool", "Date": "2015-08-07T19:22:38Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(kmelia.getPublicationAccessController().isUserAuthorized(kmelia.getUserId(), kmeliaPublication.getPk()))) { return \"/admin/jsp/accessForbidden.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/181/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": [], "Fixed commit": "79fa98da679a99e462369f4c7dd6efb3ca94d005", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Components", "Date": "2015-07-07T11:45:50Z"},
{"Line": "=>1194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(ClientUI.userAccepts())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8413/buggy-version/ClientUI.java", "BodyUseAPI": [], "Fixed commit": "0b799f2fda69cdfd1d5000ea3c850fdf99c26cd4", "Url": "https://api.github.com/repos/ABaptista/meeto", "Date": "2014-10-26T13:16:38Z"},
{"Line": "=>616", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rs.next())) { st.executeUpdate(((((\"INSERT INTO user_meeting (user, meeting) VALUES (\" + iduser) + \", \") + idmeeting) + \");\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8413/buggy-version/RMIServer.java", "BodyUseAPI": [], "Fixed commit": "0b799f2fda69cdfd1d5000ea3c850fdf99c26cd4", "Url": "https://api.github.com/repos/ABaptista/meeto", "Date": "2014-10-26T13:16:38Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (me.isConnected()) { printMessage(\"S/Chat connected\"); while ((me.isConnected()) && (!(stop))) java.lang.Thread.sleep(1000); printMessage(\"S/Chat disconnected!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8487/buggy-version/androidapp.src.com.services.MessageService.java", "BodyUseAPI": ["com.data.ApplicationUser.isConnected()"], "Fixed commit": "627ed78d5ace19218f59da4b232b65fe0bf6a9b1", "Url": "https://api.github.com/repos/gye-tgm/schat", "Date": "2013-12-18T09:22:04Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getAbsolutePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(name.substring(((name.length()) - 4), name.length()).equalsIgnoreCase(\".pdf\"))) { name = name.concat(\".pdf\"); file = new java.io.File(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3554/buggy-version/src.edu.umn.genomics.component.SavePDF.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)"], "Fixed commit": "ec8bde039c5751d3eda1386e79f4ac3341168781", "Url": "https://api.github.com/repos/lorainelab/TableView", "Date": "2012-08-01T20:32:24Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.round(double)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (doubleNumber < 0) throw new java.lang.NumberFormatException(\"El numero debe ser positivo\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3705/buggy-version/java.NumberToLetterConverter.java", "BodyUseAPI": [], "Fixed commit": "f6d0131e5ebff1131d6a08e23c0b13a73a8d4726", "Url": "https://api.github.com/repos/DavidToca/numero-a-letras", "Date": "2012-08-09T19:54:21Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.papao.books.controller.DBObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (refObjectProperties.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/919/buggy-version/src.main.java.com.papao.books.controller.BookController.java", "BodyUseAPI": [], "Fixed commit": "481696c160dd3c80fe511731b1d2ca468d84dc49", "Url": "https://api.github.com/repos/brontozaur/books_manager_swt", "Date": "2017-04-15T17:45:38Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) return java.util.Collections.emptyMap();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3379/buggy-version/bootstrap.src.org.looplang.ribbon.bootstrap.Bootstrap.java", "BodyUseAPI": [], "Fixed commit": "36d3e07df3539452ac58aacca40c119948e2b07f", "Url": "https://api.github.com/repos/dhanji/ribbon", "Date": "2012-08-27T04:59:26Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.security.core.Authentication.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (ldao.isUserExists(username)) { ldao.updateFailAttempts(username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8479/buggy-version/CSE545Group10F17-kevin3.BankingApp.src.main.java.com.group10.controllers.security.MyAuthentication.java", "BodyUseAPI": ["com.group10.dao.loginAttempts.LoginAttemptsDaoImpl.updateFailAttempts(java.lang.String)"], "Fixed commit": "c86b564d5dd5f286ce73ad53600df7eb185768e8", "Url": "https://api.github.com/repos/elanmarkov/CSE545Group10F17", "Date": "2017-11-02T15:15:22Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<edu.usc.cssl.tacit.common.ui.corpusmanagement.internal.ICorpusClass>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(currClass.getKeyTextFields().isEmpty())) classObj.put(\"data_key\", currClass.getKeyTextFields());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2684/buggy-version/edu.usc.cssl.tacit.common.ui.src.edu.usc.cssl.tacit.common.ui.corpusmanagement.services.ManageCorpora.java", "BodyUseAPI": ["org.json.simple.JSONObject.put(java.lang.String,currClass.getKeyTextFields())", "edu.usc.cssl.tacit.common.ui.corpusmanagement.services.CorpusClass.getKeyTextFields()"], "Fixed commit": "1f9ddd7947ceedda01bf5418b26ce5bccb1512a7", "Url": "https://api.github.com/repos/USC-CSSL/TACIT", "Date": "2015-12-22T03:37:09Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<edu.usc.cssl.tacit.common.ui.corpusmanagement.internal.ICorpusClass>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(currClass.getKeyTextFields().isEmpty())) classObj.put(\"data_key\", currClass.getKeyTextFields());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2684/buggy-version/edu.usc.cssl.tacit.common.ui.src.edu.usc.cssl.tacit.common.ui.corpusmanagement.services.ManageCorpora.java", "BodyUseAPI": ["org.json.simple.JSONObject.put(java.lang.String,currClass.getKeyTextFields())", "edu.usc.cssl.tacit.common.ui.corpusmanagement.services.CorpusClass.getKeyTextFields()"], "Fixed commit": "1f9ddd7947ceedda01bf5418b26ce5bccb1512a7", "Url": "https://api.github.com/repos/USC-CSSL/TACIT", "Date": "2015-12-22T03:37:09Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<edu.usc.cssl.tacit.common.ui.corpusmanagement.internal.ICorpusClass>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(currClass.getKeyTextFields().isEmpty())) classObj.put(\"data_key\", currClass.getKeyTextFields());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2684/buggy-version/edu.usc.cssl.tacit.common.ui.src.edu.usc.cssl.tacit.common.ui.corpusmanagement.services.ManageCorpora.java", "BodyUseAPI": ["org.json.simple.JSONObject.put(java.lang.String,currClass.getKeyTextFields())", "edu.usc.cssl.tacit.common.ui.corpusmanagement.services.CorpusClass.getKeyTextFields()"], "Fixed commit": "1f9ddd7947ceedda01bf5418b26ce5bccb1512a7", "Url": "https://api.github.com/repos/USC-CSSL/TACIT", "Date": "2015-12-22T03:37:09Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.fourthline.cling.transport.impl.apache.StreamClientImpl.log.isLoggable(java.util.logging.Level.FINEST)) org.fourthline.cling.transport.impl.apache.StreamClientImpl.log.finest((((\"Sent HTTP request, got response (\" + elapsed) + \"ms) :\") + (httpRequest.getURI())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6267/buggy-version/core.src.main.java.org.fourthline.cling.transport.impl.apache.StreamClientImpl.java", "BodyUseAPI": ["java.util.logging.Logger.finest((((\"Sent HTTP request, got response (\" + elapsed) + \"ms) :\") + (httpRequest.getURI())))"], "Fixed commit": "50e2f37558ba995a910adf90eaca23ea64bf55d1", "Url": "https://api.github.com/repos/4thline/cling", "Date": "2012-12-13T14:40:39Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (elapsed > 5000) { org.fourthline.cling.transport.impl.apache.StreamClientImpl.log.warning((((\"HTTP request took a long time: \" + elapsed) + \"ms: \") + (httpRequest.getURI()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6267/buggy-version/core.src.main.java.org.fourthline.cling.transport.impl.apache.StreamClientImpl.java", "BodyUseAPI": ["java.util.logging.Logger.warning((((\"HTTP request took a long time: \" + elapsed) + \"ms: \") + (httpRequest.getURI())))"], "Fixed commit": "50e2f37558ba995a910adf90eaca23ea64bf55d1", "Url": "https://api.github.com/repos/4thline/cling", "Date": "2012-12-13T14:40:39Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isOne) { t = Sig.UNIV.type().join(f.type()); t = s.type().product(t); }else { t = f.type(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6933/buggy-version/src.edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer.java", "BodyUseAPI": [], "Fixed commit": "210d0d73e665735f550a482f743bc8c9379742cf", "Url": "https://api.github.com/repos/drayside/bordeaux", "Date": "2016-12-01T22:45:52Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map.size()) == 1) { result += counter; }else { result += counter - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4259/buggy-version/src.LongestPalindrome.java", "BodyUseAPI": [], "Fixed commit": "0976fa1ed48a29aab88f21ed51b7e49fe4ecf838", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-07-11T06:13:02Z"},
{"Line": "=>656", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cd.frame.isDefined(pkgName)) { type = cd.frame.getVarType(pkgName); if (type == null) { type = new com.iconmaster.source.compile.DataType(true); } }else if (cd.frame.isInlined(pkgName)) { type = cd.frame.getVarType(pkgName); if (type == null) { type = com.iconmaster.source.compile.SourceCompiler.compileExpr(cd, \"\", cd.frame.getInline(pkgName)).type; if (type == null) { type = new com.iconmaster.source.compile.DataType(true); } } }else { type = cd.pkg.getField(pkgName).getType(); if (type == null) { type = new com.iconmaster.source.compile.DataType(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2027/buggy-version/src.com.iconmaster.source.compile.SourceCompiler.java", "BodyUseAPI": ["cd.pkg.getField(java.lang.String)", "cd.pkg.getField(pkgName).getType()", "cd.frame.isInlined(java.lang.String)", "cd.frame.getInline(java.lang.String)", "cd.frame.getVarType(java.lang.String)", "com.iconmaster.source.compile.SourceCompiler.compileExpr(com.iconmaster.source.compile.CompileData,java.lang.String,cd.frame.getInline(pkgName))", "cd.frame.getVarType(java.lang.String)"], "Fixed commit": "34e9f39455402a9cf9a7d5ba00e72046237b63aa", "Url": "https://api.github.com/repos/iconmaster5326/Source", "Date": "2014-11-08T00:37:41Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.length()) > 0) { result.deleteCharAt(((result.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5102/buggy-version/app.src.main.java.com.levenko.myequilator.AllCards.java", "BodyUseAPI": ["java.lang.StringBuilder.length()", "java.lang.StringBuilder.deleteCharAt(int)"], "Fixed commit": "dece4acab21b0986b9423c5b5d775542bb5b83a6", "Url": "https://api.github.com/repos/Vilagra/Equilator", "Date": "2017-10-03T17:58:10Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputImage.getColorModel()) instanceof java.awt.image.IndexColorModel) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1346/buggy-version/modules.library.render.src.main.java.org.geotools.renderer.lite.gridcoverage2d.RasterSymbolizerHelper.java", "BodyUseAPI": [], "Fixed commit": "93796dafe288d7394e91c129406f33abd34dab15", "Url": "https://api.github.com/repos/n-lagomarsini/geotools", "Date": "2014-03-18T12:23:42Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["form(datastructures.overview.week.Week.class).bindFromRequest()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (filledForm.hasErrors()) { datastructures.overview.week.Week week = new datastructures.overview.week.Week(controllers.Application.getCurrentUser(), weekyear, weekOfWeekyear); return badRequest(createHourEntriesForWeek.render(week)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4644/buggy-version/app.controllers.HourEntries.java", "BodyUseAPI": [], "Fixed commit": "e0650e1654dee8dcc535d54669de1decaa370f6a", "Url": "https://api.github.com/repos/lunatech-labs/lunatech-notime", "Date": "2012-05-15T12:16:09Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((type.getSuperclass()) != null) && (type.getSuperclass().isEnum())) return com.t3.xstreamversioned.VersionGenerator.generateVersion(type.getSuperclass(), list, strict, ignoredPackages);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/361/buggy-version/xstream-versioned.src.main.java.com.t3.xstreamversioned.VersionGenerator.java", "BodyUseAPI": ["com.t3.xstreamversioned.VersionGenerator.generateVersion(java.lang.Class<? super ?>,java.util.LinkedList<java.lang.Integer>,boolean,java.util.Set<java.lang.String>)", "java.lang.Class<?>.getSuperclass()"], "Fixed commit": "b33510fb38aeb17214e9654b3f480e5fd8c41c3f", "Url": "https://api.github.com/repos/virenerus/tabletoptool", "Date": "2014-07-11T19:44:49Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.StringUtils.split(ser.getVersion(),char)", "com.t3.xstreamversioned.VersionGenerator.generateVersion(java.lang.Class<?>,strategy.isStrict(),strategy.getIgnoredPackages())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((versionStrings != null) && ((targetVersions.length) < (versionStrings.length))) java.lang.System.out.println(\"WTF\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/361/buggy-version/xstream-versioned.src.main.java.com.t3.xstreamversioned.VersionedConverter.java", "BodyUseAPI": [], "Fixed commit": "b33510fb38aeb17214e9654b3f480e5fd8c41c3f", "Url": "https://api.github.com/repos/virenerus/tabletoptool", "Date": "2014-07-11T19:44:49Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<java.util.Map.Entry<java.lang.String, java.lang.String>>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (entries.hasNext()) { builder.append(\",\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/9208/buggy-version/siberi-processor.src.main.java.com.mercari.processor.ExperimentListWriter.java", "BodyUseAPI": [], "Fixed commit": "5b97ec69d80c91a1f3ed4e012c654dcf7359ae56", "Url": "https://api.github.com/repos/mercari/siberi-android", "Date": "2016-06-30T22:42:59Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasFocus) { java.util.Set<net.thiagoalz.hermeto.player.Player> players = playersName.keySet(); for (net.thiagoalz.hermeto.player.Player player : players) { net.thiagoalz.hermeto.PlayerNameView playerNameView = playersName.get(player); playerNameView.setLocation(getLocation(player.getPosition())); } android.widget.RelativeLayout namesLayout = ((android.widget.RelativeLayout) (findViewById(R.id.namesLayout))); namesLayout.invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1927/buggy-version/AndroidMain.AndroidMainApp.src.net.thiagoalz.hermeto.PadPanelActivity.java", "BodyUseAPI": [], "Fixed commit": "87c59deb8976d7527fa8cc66943db2b74137bccd", "Url": "https://api.github.com/repos/thiagoalz/Hermeto", "Date": "2011-09-09T16:49:11Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.facebook.Profile.getCurrentProfile()) == null) { profileTracker = new com.facebook.ProfileTracker() { @java.lang.Override protected void onCurrentProfileChanged(com.facebook.Profile profile, com.facebook.Profile profile2) { userId = profile2.getId(); checkIfUserExists(); loginButton.setVisibility(View.INVISIBLE); android.content.Intent intent = new android.content.Intent(getApplicationContext(), com.victoryroad.cheers.MainActivity.class); startActivity(intent); finish(); } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1905/buggy-version/app.src.main.java.com.victoryroad.cheers.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "a688dee87a43bc1ba007c28b0b8016ca66ccadbc", "Url": "https://api.github.com/repos/kyl1394/Cheers", "Date": "2016-11-01T17:53:52Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.uu.ub.cora.storage.RecordStorageInMemory.extractLinkedRecordTypeValue(se.uu.ub.cora.bookkeeper.data.DataGroup)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (linksForToPart.containsKey(fromType)) { linksForToPart.get(fromType).remove(fromId); if (linksForToPart.get(fromType).isEmpty()) { linksForToPart.remove(fromType); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3118/buggy-version/src.main.java.se.uu.ub.cora.storage.RecordStorageInMemory.java", "BodyUseAPI": ["linksForToPart.get(fromType).isEmpty()", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<se.uu.ub.cora.bookkeeper.data.DataGroup>>>.get(java.lang.String)", "linksForToPart.get(fromType).remove(java.lang.String)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<se.uu.ub.cora.bookkeeper.data.DataGroup>>>.get(java.lang.String)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<se.uu.ub.cora.bookkeeper.data.DataGroup>>>.remove(java.lang.String)"], "Fixed commit": "7e5d4f2003625db9419450679479c6376dbcaa87", "Url": "https://api.github.com/repos/maddekenn/cora-basicstorage", "Date": "2016-12-09T12:30:21Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c1 == null) ^ (c2 == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1397/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.colourpicker.ColourPickerUtil.java", "BodyUseAPI": [], "Fixed commit": "4e9a6e23c157602da5fc895d28df3d6f83fdbbae", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2017-06-30T01:31:42Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openmicroscopy.shoola.util.CommonsLangUtils.isNotEmpty(model.getLUT())) fireChangeEvent(PaintPotUI.LUT_PROPERTY); else fireChangeEvent(PaintPotUI.COLOUR_CHANGED_PROPERTY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1397/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.colourpicker.RGBControl.java", "BodyUseAPI": [], "Fixed commit": "4e9a6e23c157602da5fc895d28df3d6f83fdbbae", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2017-06-30T01:31:42Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOpened()) port.enableReceiveTimeout(readTimeout);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6918/buggy-version/src.com.invertor.modbus.serial.SerialPortJavaComm.java", "BodyUseAPI": [], "Fixed commit": "a94803b3645db62d5e49bb15c4a191542d82311f", "Url": "https://api.github.com/repos/kochedykov/jlibmodbus", "Date": "2017-04-04T14:34:56Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOpened()) port.enableReceiveTimeout(readTimeout);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6918/buggy-version/src.com.invertor.modbus.serial.SerialPortRXTX.java", "BodyUseAPI": [], "Fixed commit": "a94803b3645db62d5e49bb15c4a191542d82311f", "Url": "https://api.github.com/repos/kochedykov/jlibmodbus", "Date": "2017-04-04T14:34:56Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOpened()) port.enableReceiveTimeout(readTimeout);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6918/buggy-version/src.com.invertor.modbus.serial.SerialPortPJC.java", "BodyUseAPI": [], "Fixed commit": "a94803b3645db62d5e49bb15c4a191542d82311f", "Url": "https://api.github.com/repos/kochedykov/jlibmodbus", "Date": "2017-04-04T14:34:56Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mit.edu.stemplusplus.helper.ParseDatabase.makeCommentArray(project.getComments())) != null) projectObject.put(StemPlusPlus.COMMENT_PARSE, mit.edu.stemplusplus.helper.ParseDatabase.makeCommentArray(project.getComments()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4650/buggy-version/src.mit.edu.stemplusplus.helper.ParseDatabase.java", "BodyUseAPI": ["mit.edu.stemplusplus.helper.Project.getComments()", "mit.edu.stemplusplus.helper.ParseDatabase.makeCommentArray(project.getComments())", "com.parse.ParseObject.put(StemPlusPlus.COMMENT_PARSE,org.json.JSONArray)"], "Fixed commit": "4099278aab23e3eb422bd47d75b610c7bb291f88", "Url": "https://api.github.com/repos/nhvtgd/STEMPLUSPLUS", "Date": "2013-04-22T02:30:09Z"},
{"Line": "=>1631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mContext) != null) { android.telephony.CarrierConfigManager configLoader = ((android.telephony.CarrierConfigManager) (mContext.getSystemService(Context.CARRIER_CONFIG_SERVICE))); if ((((configLoader != null) && (configLoader.getConfig().getBoolean(\"config_spn_override_enabled\"))) && (!(android.text.TextUtils.isEmpty(mSpn)))) && ((mSpnDisplayCondition) == (-1))) { if (DBG) log(\"Set mSpnDisplayCondition to 0 for SPN override\"); mSpnDisplayCondition = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8435/buggy-version/src.java.com.android.internal.telephony.uicc.SIMRecords.java", "BodyUseAPI": [], "Fixed commit": "746d3fbf33d216cb92d7b0e7be1ad5c029e66489", "Url": "https://api.github.com/repos/TeslaRom-N/frameworks_opt_telephony", "Date": "2016-08-26T03:23:42Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sections) != null) && ((sections.size()) > 0)) { if (!(isBaselineCompleted())) { showBaselineMessage(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7584/buggy-version/app.src.main.java.org.digitalcampus.oppia.activity.CourseIndexActivity.java", "BodyUseAPI": [], "Fixed commit": "b279ecc48559ab34449ceeda24be6ffac681a1d5", "Url": "https://api.github.com/repos/jjoseba/oppia-mobile-android", "Date": "2015-11-02T05:28:17Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((stack == null) || (\"null\".equals(stack))) { stack = net.conjur.api.Endpoints.DEFAULT_STACK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7447/buggy-version/src.main.java.net.conjur.api.Endpoints.java", "BodyUseAPI": [], "Fixed commit": "200003b5a58ea8da97cfd10ca181df1ff2b7a413", "Url": "https://api.github.com/repos/conjurinc/api-java", "Date": "2013-10-28T17:15:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((account == null) || (\"null\".equals(account))) { account = \"sandbox\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7447/buggy-version/src.main.java.net.conjur.api.Endpoints.java", "BodyUseAPI": [], "Fixed commit": "200003b5a58ea8da97cfd10ca181df1ff2b7a413", "Url": "https://api.github.com/repos/conjurinc/api-java", "Date": "2013-10-28T17:15:26Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((visualImage.getValue()) != null) element.setAttribute(\"src\", visualImage.getValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5454/buggy-version/dragome-core.src.main.java.com.dragome.render.html.components.HTMLImageRenderer.java", "BodyUseAPI": ["com.dragome.model.interfaces.VisualImage.getValue()", "org.w3c.dom.Element.setAttribute(java.lang.String,visualImage.getValue())"], "Fixed commit": "a33e98c5d22a892e4b599141d1a0289505b56b0a", "Url": "https://api.github.com/repos/dragome/dragome-sdk", "Date": "2014-08-03T04:02:04Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (selected == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2895/buggy-version/filter2-impl.src.main.java.org.cytoscape.filter.internal.attribute.AttributeFilterViewFactory.java", "BodyUseAPI": [], "Fixed commit": "678d2f62acfe315ec91dd8e5f5d62b6a1f1b331b", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2013-12-03T20:09:31Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<org.apache.cassandra.utils.memory.BufferPool.Chunk>.poll()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (chunk == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/877/buggy-version/src.java.org.apache.cassandra.utils.memory.BufferPool.java", "BodyUseAPI": [], "Fixed commit": "0d80194a26ecdc00eae4d8136d5a858ad432e3ba", "Url": "https://api.github.com/repos/stef1927/cassandra", "Date": "2015-05-13T04:37:22Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ndragons <= 0) || (ndragons > (size))) { javax.swing.JOptionPane.showMessageDialog(MazeDimension, \"Invalid number of enemies!\\nInsert a valid integer or 1 will be used as default.\"); ndragons = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7181/buggy-version/src.gui.Window.java", "BodyUseAPI": [], "Fixed commit": "a93fd9165910a3ef293fdd307ce05943a29e66a6", "Url": "https://api.github.com/repos/Antonio-Melo/Maze", "Date": "2016-04-03T18:07:24Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selectedAnswer.nextbuttontext) != null) bottomButton.setText(selectedAnswer.nextbuttontext); else bottomButton.setText(getString(R.string.question_repeat_button));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/561/buggy-version/GQ_Android.src.edu.bonn.mobilegaming.geoquest.mission.MultipleChoiceQuestion.java", "BodyUseAPI": ["android.widget.Button.setText(java.lang.String)"], "Fixed commit": "d3d377d448e122b8afc378ed923e4e123b84d4d2", "Url": "https://api.github.com/repos/geoquest/android", "Date": "2013-05-05T22:16:35Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p.isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6660/buggy-version/dao-gen-core.src.main.java.com.ctrip.platform.dal.daogen.utils.DbUtils.java", "BodyUseAPI": [], "Fixed commit": "541d9d4da700b8616bda91860811968a77925c26", "Url": "https://api.github.com/repos/ctripcorp/dal", "Date": "2017-03-30T08:09:33Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uri.getPathSegments().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Integer.valueOf(rowId)) == 1) { throw new java.lang.RuntimeException(\"Can\\'t delete category \\\"No category\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7184/buggy-version/src.ru.nstudio.android.Storage.MoneyProvider.java", "BodyUseAPI": [], "Fixed commit": "ce33cc04920cca0ef0ceb3f1a9674bd0532403b9", "Url": "https://api.github.com/repos/noktigula/CalcMyMoney", "Date": "2014-04-10T21:15:37Z"},
{"Line": "=>608", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(android.text.TextUtils.isEmpty(where))) { whereBuilder.append(\" AND \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7184/buggy-version/src.ru.nstudio.android.Storage.MoneyProvider.java", "BodyUseAPI": [], "Fixed commit": "ce33cc04920cca0ef0ceb3f1a9674bd0532403b9", "Url": "https://api.github.com/repos/noktigula/CalcMyMoney", "Date": "2014-04-10T21:15:37Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.ItemStack.getItemDamage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (damage >= (metaNames.length)) { damage -= 8; stack.setItemDamage(damage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2915/buggy-version/src.Common.com.bioxx.tfc.Items.ItemFruitTreeSapling.java", "BodyUseAPI": [], "Fixed commit": "8eaccfe5416ebde1a6d955649c8dd9da0cf57757", "Url": "https://api.github.com/repos/CHeuberger/TFCraft", "Date": "2015-09-11T02:46:50Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["userInput.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (input.equalsIgnoreCase(\"palindrome\")) userOutput.setText(\"Did you just try to check if palindrome is a palindrome? To answer your question, no it is not a palindrome.\"); else userOutput.setText(\"It is not a palindrome\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4055/buggy-version/app.src.main.java.com.bresia.textmachina.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ce73fdbef47b2cbe7017c44fd37dfcd922323e8b", "Url": "https://api.github.com/repos/macanrox/TextMachina", "Date": "2016-09-10T18:39:06Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isMockableType()) { boolean shouldCascade = ((mocked) == null) || (mocked.cascading()); if (shouldCascade && (!((declaredType) instanceof java.lang.reflect.TypeVariable))) { mockit.internal.expectations.mocking.TestRun.getExecutingTest().getCascadingTypes().add(fieldFromTestClass, declaredType, null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8185/buggy-version/main.src.mockit.internal.expectations.mocking.MockedType.java", "BodyUseAPI": [], "Fixed commit": "d7f56c6d5da0cf446e32b0b43ad5187fb4f178d3", "Url": "https://api.github.com/repos/jmockit/jmockit1", "Date": "2014-10-17T01:28:56Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.key4dream.sun.utils.CacheMapNeverDel.instance().get(Constants.KEY_WORD_WYCL)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (existList == null) { existList = new java.util.HashMap<java.lang.String, java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/141/buggy-version/src.main.java.com.key4dream.sun.crawler.CrawlerListener.java", "BodyUseAPI": [], "Fixed commit": "cd0d9c882a0dcba3b450922029cb8904f498c0ba", "Url": "https://api.github.com/repos/lionbo/sun", "Date": "2016-03-14T08:09:16Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((searchViewBaseAnimator) != null) && (searchViewBaseAnimator.isRunning())) || (((searchViewAnimator) != null) && (searchViewAnimator.isRunning()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/772/buggy-version/library.src.main.java.com.github.onlynight.library.lsearchview.LSearchView.java", "BodyUseAPI": [], "Fixed commit": "878fa43d44b15bde3bc1f8e46afa152fa08aa984", "Url": "https://api.github.com/repos/onlynight/LSearchView", "Date": "2016-11-09T03:54:09Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["selling.sunshine.dao.impl.CustomerDaoImpl.selectOne(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (currentPhone != null) { sqlSession.update(\"selling.customer.phone.block\", currentPhone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3179/buggy-version/src.main.java.selling.sunshine.dao.impl.CustomerDaoImpl.java", "BodyUseAPI": ["selling.sunshine.dao.impl.CustomerDaoImpl.update(java.lang.String,selling.sunshine.model.CustomerPhone)"], "Fixed commit": "e765d55aef5ad1283f4a71a58246e35c2d61c76c", "Url": "https://api.github.com/repos/sunshinezxf/Selling", "Date": "2016-06-03T05:18:17Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["selling.sunshine.dao.impl.CustomerDaoImpl.selectOne(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (currentAddress != null) { sqlSession.update(\"selling.customer.address.block\", currentAddress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3179/buggy-version/src.main.java.selling.sunshine.dao.impl.CustomerDaoImpl.java", "BodyUseAPI": ["selling.sunshine.dao.impl.CustomerDaoImpl.update(java.lang.String,selling.sunshine.model.CustomerAddress)"], "Fixed commit": "e765d55aef5ad1283f4a71a58246e35c2d61c76c", "Url": "https://api.github.com/repos/sunshinezxf/Selling", "Date": "2016-06-03T05:18:17Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (block != null) for (java.lang.Object o : block.statements()) this._statements.add(new edu.rice.cs.caper.bayou.application.dom_driver.DOMStatement(((org.eclipse.jdt.core.dom.Statement) (o))).handleAML());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6173/buggy-version/src.main.java.edu.rice.cs.caper.bayou.application.dom_driver.DOMBlock.java", "BodyUseAPI": [], "Fixed commit": "3209eadce18b9e53bb66149edb883a0b834c6b22", "Url": "https://api.github.com/repos/capergroup/bayou", "Date": "2017-10-17T22:59:45Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lib.size()) > 0) { playlist = lib.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8875/buggy-version/contextproject-ms3.src.main.java.contextproject.controllers.LibraryController.java", "BodyUseAPI": ["contextproject.models.Library.get(int)"], "Fixed commit": "69cc28dd4878f290d827b29efb14c81fb6e8bbf7", "Url": "https://api.github.com/repos/daveystruijk/contextproject-ms3", "Date": "2015-06-19T18:57:07Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sku.isAvaliable(now))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7839/buggy-version/course.service-course.src.main.java.cn.momia.service.course.web.ctrl.CourseController.java", "BodyUseAPI": [], "Fixed commit": "ba865fe4bb33d9741b34c7fa072a01a637bf88fa", "Url": "https://api.github.com/repos/lovemomia/service", "Date": "2015-11-18T11:05:40Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) != null) { this.key(entry.getKey()).value(entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1057/buggy-version/src.main.java.com.github.openjson.JSONStringer.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "com.github.openjson.JSONStringer.value(java.lang.Object)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "com.github.openjson.JSONStringer.key(java.lang.String)"], "Fixed commit": "53a98b1485fccb66f9674af205946421bef6a25e", "Url": "https://api.github.com/repos/openjson/openjson", "Date": "2017-04-04T11:11:02Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getSource().getPacketSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (packetsize > 0) this.initQueues(packetsize);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4726/buggy-version/app.src.main.java.de.tu.darmstadt.seemoo.ansian.control.DataHandler.java", "BodyUseAPI": ["de.tu.darmstadt.seemoo.ansian.control.DataHandler.initQueues(int)"], "Fixed commit": "8c41e610eaeb5eef26c0647f876918885c93722c", "Url": "https://api.github.com/repos/demantz/AnSiAn", "Date": "2016-06-09T17:15:59Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, org.icgc.dcc.dev.server.jenkins.JenkinsBuild>.get(lombok.val)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.icgc.dcc.dev.server.portal.candidate.PortalCandidateListener.isBuildReady(latestBuild))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6595/buggy-version/dcc-dev-server.src.main.java.org.icgc.dcc.dev.server.portal.candidate.PortalCandidateListener.java", "BodyUseAPI": [], "Fixed commit": "82f5a540d32306d76bcbb3637e362f6f57952644", "Url": "https://api.github.com/repos/icgc-dcc/dcc-dev", "Date": "2016-09-14T20:38:35Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tie) return new int[]{ 0, -1 };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5033/buggy-version/Connect4.src.com.kenjih.connectfour.main.players.SmartMinMaxPlayer.java", "BodyUseAPI": [], "Fixed commit": "e46e84cf4b8558e8f5f25e67a9fef362ae9a00c9", "Url": "https://api.github.com/repos/Kenji-H/Connect4", "Date": "2013-07-15T15:43:11Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((appDelegate.accounts) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8731/buggy-version/app.src.main.java.com.arcbit.arcbit.ui.SelectAccountFragment.java", "BodyUseAPI": [], "Fixed commit": "5068b5a350ab9515dfee4a9b79f2facd7454dd33", "Url": "https://api.github.com/repos/arcbit/arcbit-android", "Date": "2017-06-25T21:15:35Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y) <= ((UPBOUND) + (2 * (height)))) { y = (UPBOUND) + (2 * (height)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6005/buggy-version/src.Player.java", "BodyUseAPI": [], "Fixed commit": "b70f7679bc95bf573a015f0235496846642c114a", "Url": "https://api.github.com/repos/C0deZLee/SpaceJet", "Date": "2015-11-29T06:56:04Z"},
{"Line": "=>1432", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ip > nl4) ip = ip - nl4;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3160/buggy-version/gov.fnal.eag.healpix.PixTools.java", "BodyUseAPI": [], "Fixed commit": "447a7be073876dba32d1c6be811eebc48255c844", "Url": "https://api.github.com/repos/kuropat/eag-HEALPix", "Date": "2017-09-06T14:55:38Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(dst.exists())) && (!(dst.mkdir()))) { throw new java.io.IOException(((\"Unable to create directory: [\" + dst) + \"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3028/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-common.src.main.java.org.apache.hadoop.yarn.util.FSDownload.java", "BodyUseAPI": [], "Fixed commit": "abed1646c7e3d27fccf6516e5595fb9991861fde", "Url": "https://api.github.com/repos/griddynamics/yhadoop-common", "Date": "2013-01-31T10:53:54Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ini4j.Profile.Section.getAll(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (keysWithConfig != null) { keysWithConfig.forEach(( keyWithConfig) -> { java.lang.String[] items = keyWithConfig.split(net.parostroj.timetable.gui.views.TrainViewColumns.DELIMITER); if ((items.length) == 2) { columnConfigurations.put(items[0], items[1]); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3824/buggy-version/grafikon-gui.src.main.java.net.parostroj.timetable.gui.views.TrainViewColumns.java", "BodyUseAPI": ["java.util.List<java.lang.String>.forEach(java.util.function.Consumer<? super java.lang.String>)"], "Fixed commit": "fe683e1df01b762ada516a174ea285a0c8b7d40d", "Url": "https://api.github.com/repos/jub77/grafikon", "Date": "2017-10-16T10:28:49Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(AnalyticsConstants.SPARK_LOCAL_IP_PROP)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (localIP != null) { if (org.wso2.carbon.analytics.spark.core.internal.AnalyticsComponent.log.isDebugEnabled()) { org.wso2.carbon.analytics.spark.core.internal.AnalyticsComponent.log.debug((\"Spark host is set from the SPARK_LOCAL_IP property : \" + localIP)); } return localIP; }else { return org.apache.axis2.util.Utils.getIpAddress(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3042/buggy-version/components.analytics-processors.org.wso2.carbon.analytics.spark.core.src.main.java.org.wso2.carbon.analytics.spark.core.internal.AnalyticsComponent.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "805b938708010dc5918fea87e6be7f66a45e128a", "Url": "https://api.github.com/repos/swsachith/carbon-analytics", "Date": "2016-02-18T10:09:31Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lookAheadType == (Token.END)) { break; }else break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6589/buggy-version/hm4.setTranslator.java", "BodyUseAPI": [], "Fixed commit": "267c89f27de1dba2c3736b3a4f9496fc11e0e9ce", "Url": "https://api.github.com/repos/cliffanderson/COS360", "Date": "2017-12-05T17:44:53Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (la == (Token.SEMICOLON)) setTranslator.sc.consume();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6589/buggy-version/hm4.setTranslator.java", "BodyUseAPI": [], "Fixed commit": "267c89f27de1dba2c3736b3a4f9496fc11e0e9ce", "Url": "https://api.github.com/repos/cliffanderson/COS360", "Date": "2017-12-05T17:44:53Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cutIndex == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8209/buggy-version/src.main.java.rst.pdfbox.layout.util.WordBreakers.java", "BodyUseAPI": [], "Fixed commit": "a6ce22e5b1131d12626097742d36662275d9982f", "Url": "https://api.github.com/repos/ripdajacker/pdfbox-layout", "Date": "2017-07-13T09:24:04Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result instanceof alexclin.httplite.Response) { alexclin.httplite.util.Util.closeQuietly(((alexclin.httplite.Response) (result)).body()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/453/buggy-version/httplite.src.main.java.alexclin.httplite.ResponseHandler.java", "BodyUseAPI": [], "Fixed commit": "c9bf4ed6b04e84f758b52920cbd768bfea4ac060", "Url": "https://api.github.com/repos/alexclin0188/httplite", "Date": "2016-05-07T16:17:18Z"},
{"Line": "=>661", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.HONEYCOMB)) { lvMain.addHeaderView(lvHeaderEmptyCategory); lvMain.removeFooterView(footer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/748/buggy-version/app.src.main.java.com.example.dimonn445.museum.ExhibitsListActivity.java", "BodyUseAPI": [], "Fixed commit": "d42d38e27ed4e5d6124f94ac6b83c77c99a12812", "Url": "https://api.github.com/repos/Dimonn445/Museum", "Date": "2016-05-21T09:40:32Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.HONEYCOMB)) { lvMain.addHeaderView(lvHeader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/748/buggy-version/app.src.main.java.com.example.dimonn445.museum.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d42d38e27ed4e5d6124f94ac6b83c77c99a12812", "Url": "https://api.github.com/repos/Dimonn445/Museum", "Date": "2016-05-21T09:40:32Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= (android.os.Build.VERSION_CODES.HONEYCOMB)) { lvMain.removeHeaderView(lvHeader); lvMain.addHeaderView(lvHeader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/748/buggy-version/app.src.main.java.com.example.dimonn445.museum.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d42d38e27ed4e5d6124f94ac6b83c77c99a12812", "Url": "https://api.github.com/repos/Dimonn445/Museum", "Date": "2016-05-21T09:40:32Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ctx.inputVars.contains(caseNT.computeTerm(null)))) { edu.cmu.cs.sasylf.util.ErrorHandler.report(((\"Undeclared syntax: \" + caseNT) + (ctx.inputVars.isEmpty() ? \"\" : \", perhaps you meant one of \" + (ctx.inputVars))), targetDerivation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2270/buggy-version/src.edu.cmu.cs.sasylf.ast.DerivationByAnalysis.java", "BodyUseAPI": ["ctx.inputVars.isEmpty()", "edu.cmu.cs.sasylf.util.ErrorHandler.report(((\"Undeclared syntax: \" + caseNT) + (ctx.inputVars.isEmpty() ? \"\" : \", perhaps you meant one of \" + (ctx.inputVars))),edu.cmu.cs.sasylf.ast.Fact)"], "Fixed commit": "dae1cbca3b30308362c0f13616a08d1ef730580b", "Url": "https://api.github.com/repos/boyland/sasylf", "Date": "2016-09-26T21:25:22Z"},
{"Line": "=>3764", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (effectiveTotalVisits == 0) { effectiveTotalVisits = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6771/buggy-version/src.org.ggp.base.player.gamer.statemachine.sancho.TreeNode.java", "BodyUseAPI": [], "Fixed commit": "cef82d8bc6fc01b16a1801015b38b5c2a68ad655", "Url": "https://api.github.com/repos/SanchoGGP/ggp-base", "Date": "2015-04-29T00:33:24Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == null) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4423/buggy-version/src.main.java.org.buptdavid.datastructure.array.CompressStr.java", "BodyUseAPI": [], "Fixed commit": "fa3daad0d82c574a490d0309edd8fc560fab0aac", "Url": "https://api.github.com/repos/FrankerSun/datastructure", "Date": "2017-10-17T03:17:50Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (last >= 5) res = CalculateExactly.add(res, CalculateExactly.shiftRight(CalculateExactly.shiftRight(power)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6344/buggy-version/CalculateExactly.java", "BodyUseAPI": [], "Fixed commit": "b1135e68b3995beadefb21748cfeb70066c9aea0", "Url": "https://api.github.com/repos/Overv/CalculateExactly", "Date": "2012-09-17T17:24:11Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.ItemStack.getItemMeta()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (itemMeta.hasLore()) { itemLore.addAll(itemMeta.getLore()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3322/buggy-version/src.com.me.tft_02.soulbound.ItemUtils.java", "BodyUseAPI": ["org.bukkit.inventory.meta.ItemMeta.getLore()", "java.util.List<java.lang.String>.addAll(itemMeta.getLore())"], "Fixed commit": "abb8250962c7a3a44c716a174365930a1a18831a", "Url": "https://api.github.com/repos/TfT-02/Soulbound", "Date": "2013-03-10T11:21:36Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((neuron.getNumberOfWeights()) != 2) throw new java.lang.IllegalArgumentException(((com.neuralnetwork.convolutional.FeatureMap.SubSamplingFunction.class.getSimpleName()) + \" needs exactly 2 weights\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2601/buggy-version/src.com.neuralnetwork.convolutional.FeatureMap.java", "BodyUseAPI": [], "Fixed commit": "4b81cd0af3aad56e809d6f45d9ad61fed2708aa4", "Url": "https://api.github.com/repos/frankandrobot/mustached-octo-neuralnetwork", "Date": "2013-12-16T18:08:16Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gmail.nossr50.util.Users.getProfile(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (profile == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1500/buggy-version/src.main.java.com.gmail.nossr50.listeners.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "64f31f2b5a4129d81e4634ac154f99fe3c0665fa", "Url": "https://api.github.com/repos/mcMMO-Dev/mcMMO", "Date": "2012-07-05T15:25:36Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((year) + 2000) > (java.util.Calendar.getInstance().get(java.util.Calendar.YEAR))) || (((year) + 2000) < 2010)) { throw new java.lang.UnsupportedOperationException(\"\u0412 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u0441\u0434\u0435\u043b\u043a\u0430 \u043d\u0435 \u043c\u043e\u0433\u043b\u0430 \u0431\u044b\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0430\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3667/buggy-version/app.src.main.java.com.example.maxim.myinvesting.AddDealActivity.java", "BodyUseAPI": [], "Fixed commit": "6746e59b29e47a2846eb81cceec99efaa712f089", "Url": "https://api.github.com/repos/taikonavt/MyInvesting", "Date": "2017-04-19T19:26:02Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((uploadWarningDataList.size()) > 0) { com.crtb.tunnelmonitor.task.WarningDataManager.UploadWarningData warningData = uploadWarningDataList.get(0); if (com.crtb.tunnelmonitor.utils.AlertUtils.mergedAlertCanBeUploaded(warningData.getMergedAlert())) { showProgressOverlay(); dataManager.uploadData(uploadWarningDataList, new com.crtb.tunnelmonitor.task.WarningDataManager.WarningUploadListener() { @java.lang.Override public void done(final boolean success) { runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { updateStatus(success); } }); } }); }else { android.widget.Toast.makeText(this, R.string.alert_upload_promote, Toast.LENGTH_LONG).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6179/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.activity.WarningUploadActivity.java", "BodyUseAPI": ["java.util.List<com.crtb.tunnelmonitor.task.WarningDataManager.UploadWarningData>.get(int)", "com.crtb.tunnelmonitor.task.WarningDataManager.uploadData(java.util.List<com.crtb.tunnelmonitor.task.WarningDataManager.UploadWarningData>,com.crtb.tunnelmonitor.task.WarningDataManager.WarningUploadListener)"], "Fixed commit": "770061a8f4291bd2decccd7cfde3d07742d70c2f", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-06-08T09:02:15Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.camel.util.ObjectHelper.isEmpty(name)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3945/buggy-version/components.camel-core-osgi.src.main.java.org.apache.camel.core.osgi.OsgiClassResolver.java", "BodyUseAPI": [], "Fixed commit": "1a43769257f84fbb56ab9fbc04dfcb6ad778c83a", "Url": "https://api.github.com/repos/janmaterne/camel", "Date": "2014-03-04T05:59:03Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(module.isCodeModule())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6257/buggy-version/engine.src.main.java.org.terasology.engine.module.ModuleManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "d6af222b7ee0a0be26243cc3d9b63262b691b943", "Url": "https://api.github.com/repos/JoeClacks/Terasology", "Date": "2014-01-31T00:28:43Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (picName.substring(i, (i + 1)).matches(\"\\\\d+\")) { zeroString += \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2440/buggy-version/src.main.java.jcomicdownloader.module.ParseFumanhua.java", "BodyUseAPI": [], "Fixed commit": "64aae4986d36265308badfa13c265ca552108382", "Url": "https://api.github.com/repos/Kennyl/JComicDownloader", "Date": "2015-09-25T14:47:09Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getPracticeBase()) != null) this.practiceBases.add(p.getPracticeBase());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3569/buggy-version/src.action.function.StudentArrangeIntoPracticeBase.java", "BodyUseAPI": ["ListOfPracticeBaseAndStudents.Pair.getPracticeBase()", "java.util.List<obj.staticObject.PracticeBase>.add(p.getPracticeBase())"], "Fixed commit": "48100750c5ccf9a8b7c9fdf679c3c29b15be5a93", "Url": "https://api.github.com/repos/LionCherry/EPMS", "Date": "2017-11-23T02:24:25Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tableRef.getNamespace().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((namespace.length()) <= (com.palantir.atlasdb.keyvalue.dbkvs.OracleTableNameMapper.TRUNCATED_NAMESPACE_LENGTH)) { return namespace; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4333/buggy-version/atlasdb-dbkvs.src.main.java.com.palantir.atlasdb.keyvalue.dbkvs.OracleTableNameMapper.java", "BodyUseAPI": [], "Fixed commit": "f9495b0d612e06f9292753ac2f4ab7828148a6f9", "Url": "https://api.github.com/repos/palantir/atlasdb", "Date": "2016-11-01T21:37:02Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (_sslManager.isHandShakeComplete(socket)) { }else { _sslManager.shakeHands(socket); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6561/buggy-version/src.prj.jSSL.SecureAgent.java", "BodyUseAPI": ["prj.jSSL.SecureAgent.shakeHands(java.net.Socket)"], "Fixed commit": "f43065cb5e555fca0732603775892b6d9b027f62", "Url": "https://api.github.com/repos/ssumit/jSSL", "Date": "2013-09-11T11:31:01Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (legacyFQANEncoding) return new org.italiangrid.voms.aa.impl.AAImpl(new org.italiangrid.voms.aa.impl.LegacyVOMSAttributeResolver(), maxAttrsValidityInSecs);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/330/buggy-version/src.main.java.org.italiangrid.voms.aa.AttributeAuthorityFactory.java", "BodyUseAPI": [], "Fixed commit": "48d62b34f2d298e4219616b00e6cce3fe023b4d5", "Url": "https://api.github.com/repos/AlbertoPeon/voms-admin-server", "Date": "2013-09-23T14:39:38Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isDeadLock(\"?\", tid)) { handleDeadLock(_transactions.get(tid)); if (!(_abortList.contains(tid))) read(tid, vid); }else { _waitingList.add(tid); _dbs.printVerbose((tid + \" waits\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2999/buggy-version/src.TransactionManager.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.contains(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)", "DBSystem.printVerbose(java.lang.String)", "java.util.Map<java.lang.String, Transaction>.get(java.lang.String)", "TransactionManager.handleDeadLock(_transactions.get(tid))", "TransactionManager.read(java.lang.String,java.lang.String)"], "Fixed commit": "b46a7d0747316bd6b9bbcf195d97bd416f50f032", "Url": "https://api.github.com/repos/wangshuangkc/RepCRec", "Date": "2016-12-06T19:48:56Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(_abortList.contains(tid))) write(tid, vid, val);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2999/buggy-version/src.TransactionManager.java", "BodyUseAPI": ["TransactionManager.write(java.lang.String,java.lang.String,int)"], "Fixed commit": "b46a7d0747316bd6b9bbcf195d97bd416f50f032", "Url": "https://api.github.com/repos/wangshuangkc/RepCRec", "Date": "2016-12-06T19:48:56Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((me.annenkov.translator.model.HistoryElement.last(me.annenkov.translator.model.HistoryElement.class)) != null) { return me.annenkov.translator.model.HistoryElement.last(me.annenkov.translator.model.HistoryElement.class); }else { return new me.annenkov.translator.model.HistoryElement(\"\", \"\", \"\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8078/buggy-version/app.src.main.java.me.annenkov.translator.manager.HistoryManager.java", "BodyUseAPI": ["me.annenkov.translator.model.HistoryElement.last(java.lang.Class)"], "Fixed commit": "fc23c9c9059d24682961d0e9493fbbe7c4b38576", "Url": "https://api.github.com/repos/Vakosta/Translator", "Date": "2017-04-10T23:13:00Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (n != null) { blockParents.add(n); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3681/buggy-version/app.cfgextractor.src.cfgextractor.CFGConstructor.java", "BodyUseAPI": ["java.util.List<cfgextractor.CFGNode>.add(cfgextractor.CFGNode)"], "Fixed commit": "e75bb33aec79dfb95aa83744b2e8041e7263361e", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2017-11-03T18:58:53Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (n != null) { blockParents.add(n); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3681/buggy-version/app.cfgextractor.src.cfgextractor.CFGConstructor.java", "BodyUseAPI": ["java.util.List<cfgextractor.CFGNode>.add(cfgextractor.CFGNode)"], "Fixed commit": "e75bb33aec79dfb95aa83744b2e8041e7263361e", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2017-11-03T18:58:53Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adURL.length()) < 1) { driver.switchTo().defaultContent(); try { adURL = driver.findElement(org.openqa.selenium.By.id(\"bottomleaderboard\")).findElement(org.openqa.selenium.By.tagName(\"a\")).getAttribute(\"href\"); } catch (java.lang.Exception e) { } if ((adURL.length()) < 1) { driver.switchTo().defaultContent(); try { adURL = driver.findElement(org.openqa.selenium.By.id(\"bottomleaderboard\")).findElement(org.openqa.selenium.By.tagName(\"iframe\")).getAttribute(\"name\"); } catch (java.lang.Exception e) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6584/buggy-version/src.com.iheart.selenium.localSanity.ArticlePage.java", "BodyUseAPI": [], "Fixed commit": "3ba07eb2537a1da96f0694af13ff8745ef24e556", "Url": "https://api.github.com/repos/iHeartYuPATHng/LocalSanity", "Date": "2015-06-10T14:37:07Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adURL.length()) < 1) { try { adURL = driver.findElement(org.openqa.selenium.By.id(\"bottomleaderboard\")).findElement(org.openqa.selenium.By.tagName(\"iframe\")).getAttribute(\"name\"); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6584/buggy-version/src.com.iheart.selenium.localSanity.ArticlePage.java", "BodyUseAPI": [], "Fixed commit": "3ba07eb2537a1da96f0694af13ff8745ef24e556", "Url": "https://api.github.com/repos/iHeartYuPATHng/LocalSanity", "Date": "2015-06-10T14:37:07Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Distributor.slope) == (-1)) { Distributor.reverseArray(Distributor.distributedTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/173/buggy-version/app.Distributor.java", "BodyUseAPI": [], "Fixed commit": "5226d4dc914b4b193e7ee3088af2b8e172fbe548", "Url": "https://api.github.com/repos/jmaeda/Aliveline", "Date": "2015-06-30T21:23:14Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((newPrice) > 9999.99) { newPrice = 9999.99; javax.swing.JOptionPane.showMessageDialog(null, \"\u4ef7\u683c\u6ea2\u51fa\uff0c\u81ea\u52a8\u5b9a\u4ef7\u4e3a9999.99\", \"\u63d0\u793a\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1059/buggy-version/client.Client.src.NewPriceFrame.java", "BodyUseAPI": [], "Fixed commit": "66c9d71a8f310e1962df08f12518429b3c6b813c", "Url": "https://api.github.com/repos/CyanoHao/SEProject-Mart", "Date": "2016-05-29T08:27:04Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.Visit.getStopDatetime()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((stopDate != null) && (stopDate.before(new java.util.Date()))) { throw new org.bahmni.module.bahmnicore.web.v1_0.VisitClosedException(errorMessage); }else { org.openmrs.module.bahmniemrapi.encountertransaction.contract.BahmniEncounterTransaction bahmniEncounterTransaction = get(uuid, false); bahmniEncounterTransaction.setReason(reason); bahmniEncounterTransactionService.delete(bahmniEncounterTransaction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2351/buggy-version/bahmnicore-omod.src.main.java.org.bahmni.module.bahmnicore.web.v1_0.controller.BahmniEncounterController.java", "BodyUseAPI": [], "Fixed commit": "c36209933c8f50f9ca89d5980619870f23830fdd", "Url": "https://api.github.com/repos/Bahmni/bahmni-core", "Date": "2016-03-08T10:54:52Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.cattle.platform.object.util.DataAccessor.fields(account).withKey(SecurityConstants.HAS_LOGGED_IN).get()", "io.cattle.platform.iaas.api.auth.dao.AuthDao.hasAccessToAnyProject(java.util.Set<io.cattle.platform.api.auth.Identity>,boolean,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((!hasAccessToAProject) && (hasLoggedIn != null)) && (!((java.lang.Boolean) (hasLoggedIn)))) { projectResourceManager.createProjectForUser(account); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8113/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.TokenUtils.java", "BodyUseAPI": [], "Fixed commit": "f15097e7b357a5b3e482f041f7bbd575bdc96804", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-09-03T18:02:11Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((savedDate.get(java.util.Calendar.HOUR)) == 0) { clockHour = (savedDate.get(java.util.Calendar.HOUR)) + 12; }else { clockHour = savedDate.get(java.util.Calendar.HOUR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/9071/buggy-version/app.src.main.java.com.example.david.hciprototype.AddNewEvent.java", "BodyUseAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Fixed commit": "bbe27ccb87df24018e5eb723d5bde8f2037b6d5f", "Url": "https://api.github.com/repos/DavidPagels/HCIPrototype", "Date": "2015-04-08T06:00:31Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (eu.seaclouds.platform.planner.optimizer.heuristics.AbstractHeuristic.log.isDebugEnabled()) { eu.seaclouds.platform.planner.optimizer.heuristics.AbstractHeuristic.log.debug((((((((\"Candidate Solution \" + (bestSol.toString())) + \" evaluated gave a response time of \") + computedPerformance) + \" while the requirements were \") + (requirements.getResponseTime())) + \" and the workload was \") + (requirements.getWorkload()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2638/buggy-version/planner.optimizer.optimizer-core.src.main.java.eu.seaclouds.platform.planner.optimizer.heuristics.AbstractHeuristic.java", "BodyUseAPI": ["org.slf4j.Logger.debug((((((((\"Candidate Solution \" + (bestSol.toString())) + \" evaluated gave a response time of \") + computedPerformance) + \" while the requirements were \") + (requirements.getResponseTime())) + \" and the workload was \") + (requirements.getWorkload())))"], "Fixed commit": "ee31d5fd8ae9d09c9a040eeab8daf839ad26783d", "Url": "https://api.github.com/repos/perezp/SeaCloudsPlatform", "Date": "2015-12-01T14:48:56Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dayOfMonth < 10) { dateStr = ((((month + 1) + \" 0\") + dayOfMonth) + \" \") + year; }else { dateStr = ((((month + 1) + \" \") + dayOfMonth) + \" \") + year; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4063/buggy-version/app.src.main.java.com.example.ssteffanus.feelingsdiary.CalendarActivity.java", "BodyUseAPI": [], "Fixed commit": "d8aa07e278e5ba19ddb73c015ea0dd629523c994", "Url": "https://api.github.com/repos/Truckle12/FeelingsDiary", "Date": "2015-12-02T23:48:47Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.subutai.core.security.api.crypto.KeyManager.getPublicKey(responseWrapper.getHostId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (hostKeyForVerifying == null) { throw new org.bouncycastle.openpgp.PGPException(java.lang.String.format(\"Public key not found by host id %s\", responseWrapper.getHostId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3878/buggy-version/management.server.core.security-manager.security-manager-impl.src.main.java.io.subutai.core.security.impl.SecurityManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "c44705b3af30fe9799e6d1335bfcc93fe296006b", "Url": "https://api.github.com/repos/subutai-io/peer-os", "Date": "2016-04-05T07:31:52Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.subutai.core.security.api.crypto.KeyManager.getPublicKey(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (hostKeyForEncrypting == null) { throw new org.bouncycastle.openpgp.PGPException(java.lang.String.format(\"Public key not found by host id %s\", hostId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3878/buggy-version/management.server.core.security-manager.security-manager-impl.src.main.java.io.subutai.core.security.impl.SecurityManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "c44705b3af30fe9799e6d1335bfcc93fe296006b", "Url": "https://api.github.com/repos/subutai-io/peer-os", "Date": "2016-04-05T07:31:52Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.prefs.Preferences.get(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (filePath == null) { return new java.io.File(address.preferences.PreferencesManager.DEFAULT_FILE_PATH); }else { return new java.io.File(filePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3173/buggy-version/src.main.java.address.preferences.PreferencesManager.java", "BodyUseAPI": [], "Fixed commit": "c1ec46d5ae3d992a4a1dbb2a64e46252846d2612", "Url": "https://api.github.com/repos/HubTurbo/addressbook", "Date": "2016-05-12T08:14:30Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arguments[((arguments.length) - 1)].equals(\"-a\")) { java.lang.System.out.println(\"Unable to add: no task provided\"); }else { for (int i = 0; i < ((arguments.length) - 1); i++) { if (arguments[i].equals(\"-a\")) { lines.add(arguments[(i + 1)]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6211/buggy-version/ToDoApp.src.ToDoList.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "f6b85896598b1c4667681e3a067f3be62adefe08", "Url": "https://api.github.com/repos/green-fox-academy/nokecskes-todo-app", "Date": "2017-04-06T14:55:49Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (handler.contains(\"r\")) { myToDoList.removeTask(args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6211/buggy-version/ToDoApp.src.App.java", "BodyUseAPI": [], "Fixed commit": "f6b85896598b1c4667681e3a067f3be62adefe08", "Url": "https://api.github.com/repos/green-fox-academy/nokecskes-todo-app", "Date": "2017-04-06T14:55:49Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { java.lang.String savedRole = savedInstanceState.getString(org.wordpress.android.ui.people.RoleChangeDialogFragment.ROLE_TAG); mRoleListAdapter.setSelectedRole(savedRole); }else { android.os.Bundle args = getArguments(); if (args != null) { java.lang.String role = args.getString(org.wordpress.android.ui.people.RoleChangeDialogFragment.ROLE_TAG); mRoleListAdapter.setSelectedRole(role); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2365/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.people.RoleChangeDialogFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "6538a3559028736cb9327cfbbe1760299c20cce3", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2016-05-16T14:50:09Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files) != null) return files.length; else return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/139/buggy-version/src.com.sam.hex.fragment.HistoryFragment.java", "BodyUseAPI": [], "Fixed commit": "2052059252847ddca6415f023655497da9e6d323", "Url": "https://api.github.com/repos/Xlythe/HexGame_Android", "Date": "2013-06-30T17:09:24Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!on) { java.lang.String[] spl = line.split(\":\"); if ((spl.length) != 2) { continue; } name = spl[0]; ll = java.lang.Integer.parseInt(spl[1]); on = true; }else if ((ll--) > 0) { cur.append((line + (com.javaprophet.javawebserver.JavaWebServer.crlf))); }else { on = false; html.put(name, cur.toString()); cur = new java.lang.StringBuilder(); java.lang.String[] spl = line.split(\":\"); if ((spl.length) != 2) { continue; } name = spl[0]; ll = java.lang.Integer.parseInt(spl[1]); on = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8309/buggy-version/src.com.javaprophet.javawebserver.plugins.javaloader.lib.HTMLCache.java", "BodyUseAPI": [], "Fixed commit": "1b66e4f3d66f7f7bd2bf1209542253c7421d3566", "Url": "https://api.github.com/repos/Protryon/AvunaHTTPD-Java", "Date": "2015-02-05T07:37:27Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.rsen.util.TextUtils.isEmpty(text)) || (text.toString().contains(\"son\"))) { safeText = \"\u670d\u52a1\u5668\u5f02\u5e38,\u8bf7\u7a0d\u540e\u91cd\u8bd5!\"; }else { safeText = text.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1614/buggy-version/rsen.src.main.java.com.rsen.util.T.java", "BodyUseAPI": ["java.lang.CharSequence.toString()"], "Fixed commit": "84cf5c9f110dcdfe503ae16bb0c9594f08437dff", "Url": "https://api.github.com/repos/angcyo/RJcenter", "Date": "2016-11-18T02:26:19Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node_inside_path.startsWith((\"/\" + (node.getParentNode().getNodeName())))) { node_inside_path = node_inside_path.replace((\"/\" + (node.getParentNode().getNodeName())), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5291/buggy-version/src.main.java.eu.delving.x3ml.engine.Domain.java", "BodyUseAPI": ["java.lang.String.replace((\"/\" + (node.getParentNode().getNodeName())),java.lang.String)", "eu.delving.x3ml.engine.Domain.getParentNode()", "node.getParentNode().getNodeName()"], "Fixed commit": "058a81a9d2fdc902301093b0934d172c60d2351e", "Url": "https://api.github.com/repos/isl/x3ml", "Date": "2016-02-23T09:46:21Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.polimi.elet.selflet.knowledge.IServiceKnowledge.getProperty(servicePack.getName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (serviceKnowledge.isLocalService(service.getName())) { it.polimi.elet.selflet.behavior.IBehavior newDefaultBehavior = servicePack.getDefaultBehavior(); if (service.getDefaultBehavior().equals(newDefaultBehavior)) { return; } service.setDefaultBehavior(newDefaultBehavior); serviceKnowledge.updateProperty(service.getName(), service); it.polimi.elet.selflet.negotiation.messageHandlers.ChangeServiceImplementationMessageHandler.LOG.info((((\"service \" + (service.getName())) + \" has a new default behavior: \") + (newDefaultBehavior.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1402/buggy-version/src.main.java.it.polimi.elet.selflet.negotiation.messageHandlers.ChangeServiceImplementationMessageHandler.java", "BodyUseAPI": ["it.polimi.elet.selflet.knowledge.IServiceKnowledge.updateProperty(service.getName(),it.polimi.elet.selflet.service.Service)", "service.getDefaultBehavior().equals(it.polimi.elet.selflet.behavior.IBehavior)", "org.apache.log4j.Logger.info((((\"service \" + (service.getName())) + \" has a new default behavior: \") + (newDefaultBehavior.getName())))", "it.polimi.elet.selflet.service.Service.getName()", "it.polimi.elet.selflet.service.Service.getName()", "it.polimi.elet.selflet.service.Service.getDefaultBehavior()", "it.polimi.elet.selflet.service.Service.setDefaultBehavior(it.polimi.elet.selflet.behavior.IBehavior)"], "Fixed commit": "e64b2818b74aa84d67ad861611280d8bf2088395", "Url": "https://api.github.com/repos/ncalca/selflet", "Date": "2014-07-23T16:19:59Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cursor < (buffer.length())) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2247/buggy-version/src.main.java.standard.engine.FinalCompleter.java", "BodyUseAPI": [], "Fixed commit": "6c01ef0fd4e8a784d8c5fe5f9f2e8d269bb33f62", "Url": "https://api.github.com/repos/Rincewind95/Interactive-Fiction", "Date": "2017-01-21T01:38:13Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(trigger_elem.getAttribute(\"next_map\").getValue().isEmpty())) { trigger.setNextMap(repo.byId(trigger_elem.getAttribute(\"next_map\").getIntValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2104/buggy-version/shivas-data.src.main.java.org.shivas.data.loader.XmlLoader.java", "BodyUseAPI": ["trigger_elem.getAttribute(\"next_map\").getIntValue()", "org.shivas.data.entity.MapTrigger.setNextMap(repo.byId(trigger_elem.getAttribute(\"next_map\").getIntValue()))", "org.shivas.data.repository.BaseRepository<org.shivas.data.entity.GameMap>.byId(trigger_elem.getAttribute(\"next_map\").getIntValue())", "org.jdom2.Element.getAttribute(java.lang.String)"], "Fixed commit": "8b08a66e0b4dc844463f4da8f754a647ef0861e1", "Url": "https://api.github.com/repos/Blackrush/Shivas", "Date": "2012-05-21T11:22:16Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arrayPosition.length) == 0) { throw new java.lang.IllegalArgumentException(\"Empty arrays are not allowed as array position.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/332/buggy-version/core.src.main.java.com.github.jcomparison.core.array.api.MultiDimensionalArrayComparisonResult.java", "BodyUseAPI": [], "Fixed commit": "22c860ea273279dd464c54719030c3663d1fadd8", "Url": "https://api.github.com/repos/mmirwaldt/jcomparison", "Date": "2017-07-05T23:57:09Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.inveitix.android.clue.cmn.Room.getQrById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (qr != null) { roomView.updateUserPosition(new com.inveitix.android.clue.cmn.Point(qr.getX(), qr.getY())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5977/buggy-version/app.src.main.java.com.inveitix.android.clue.ui.MapActivity.java", "BodyUseAPI": ["com.inveitix.android.clue.ui.views.RoomView.updateUserPosition(com.inveitix.android.clue.cmn.Point)", "com.inveitix.android.clue.cmn.QR.getY()", "com.inveitix.android.clue.cmn.QR.getX()"], "Fixed commit": "2408151ee7003fc1765143ba984c347fd4bbf3ef", "Url": "https://api.github.com/repos/TeodorKostadinov/Clue", "Date": "2016-01-03T11:08:41Z"},
{"Line": "=>4385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt((((origBounds.getWidth()) * (origBounds.getWidth())) + ((origBounds.getHeight()) * (origBounds.getHeight()))))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (h1 < 1) h1 = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2825/buggy-version/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java", "BodyUseAPI": [], "Fixed commit": "62bcad7c97fdd561ecd50aa12db2ca06bcdf77a4", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-08-22T19:14:46Z"},
{"Line": "=>4384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt((((transformedBounds.getWidth()) * (transformedBounds.getWidth())) + ((transformedBounds.getHeight()) * (transformedBounds.getHeight()))))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (h2 < 1) h2 = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2825/buggy-version/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java", "BodyUseAPI": [], "Fixed commit": "62bcad7c97fdd561ecd50aa12db2ca06bcdf77a4", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-08-22T19:14:46Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<java.lang.String>.isEmpty()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (noTags) { mConnections.remove(presenter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7489/buggy-version/moxy.src.main.java.com.arellomobile.mvp.PresentersCounter.java", "BodyUseAPI": [], "Fixed commit": "2c1355a007c74c89da2c673a50d6b135f0cf76f6", "Url": "https://api.github.com/repos/Arello-Mobile/Moxy", "Date": "2016-12-28T16:37:08Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { int tagID = rs.getInt(1); data.RecipediaJDBC.ps = data.RecipediaJDBC.conn.prepareStatement(data.RecipediaJDBC.getTagWithID); data.RecipediaJDBC.ps.setInt(1, tagID); java.sql.ResultSet rs2 = data.RecipediaJDBC.ps.executeQuery(); while (rs2.next()) { results.add(this.getRecipe(rs2.getInt(2))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6091/buggy-version/Recipedia.src.data.RecipediaJDBC.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)"], "Fixed commit": "9cf5d24953bf6fd59f71164453a102c83a2a7c51", "Url": "https://api.github.com/repos/cheses100/RecipediaProject", "Date": "2017-04-15T23:32:53Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.isConfigurationInterface()) { org.ietr.preesm.experiment.model.pimm.ISetter setter = p.getGraphPort().getIncomingDependency().getSetter(); if (setter instanceof org.ietr.preesm.experiment.model.pimm.Parameter) p.setExpression(((org.ietr.preesm.experiment.model.pimm.Parameter) (setter)).getExpression()); }else { java.lang.Integer value = execution.getUniqueValue(p); if (value != null) { org.ietr.preesm.experiment.model.pimm.Expression pExp = piFactory.createExpression(); pExp.setString(value.toString()); p.setExpression(pExp); org.ietr.dftools.algorithm.model.parameters.Variable v = new org.ietr.dftools.algorithm.model.parameters.Variable(p.getName(), value.toString()); result.getVariables().addVariable(v); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3927/buggy-version/plugins.org.ietr.preesm.experiment.pimm2sdf.src.org.ietr.preesm.experiment.pimm2sdf.visitor.PiMM2SDFVisitor.java", "BodyUseAPI": ["org.ietr.preesm.experiment.model.pimm.Parameter.getGraphPort()", "p.getGraphPort().getIncomingDependency().getSetter()", "org.ietr.preesm.experiment.model.pimm.Parameter.setExpression(org.ietr.preesm.experiment.model.pimm.Expression)", "org.ietr.preesm.experiment.model.pimm.Parameter.getName()", "p.getGraphPort().getIncomingDependency()", "org.ietr.preesm.experiment.model.pimm.Parameter.setExpression(((org.ietr.preesm.experiment.model.pimm.Parameter) (setter)).getExpression())", "org.ietr.preesm.experiment.pimm2sdf.PiGraphExecution.getUniqueValue(org.ietr.preesm.experiment.model.pimm.Parameter)"], "Fixed commit": "b61c04e26ada028990e6cce20363de40b262c0fd", "Url": "https://api.github.com/repos/preesm/preesm", "Date": "2014-10-15T15:19:18Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((params == null) || (params.equals(\"\"))) pb = new java.lang.ProcessBuilder(\"java\", \"-jar\", serverJarPath, java.lang.String.valueOf(tcpPort), java.lang.String.valueOf(udpPort)); else pb = new java.lang.ProcessBuilder(\"java\", \"-jar\", serverJarPath, java.lang.String.valueOf(tcpPort), java.lang.String.valueOf(udpPort), params);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3774/buggy-version/src.main.java.masterServer.ServerManager.java", "BodyUseAPI": [], "Fixed commit": "02d4f10ae1e2a7989a1f68f3018a2df92a46793a", "Url": "https://api.github.com/repos/Souverain73/MasterServer", "Date": "2017-03-07T20:38:02Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.infinispan.protostream.annotations.impl.ProtoFieldMetadata.getDefaultValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (defaultValue instanceof java.lang.Long) { v = defaultValue + \"L\"; }else if (defaultValue instanceof java.lang.Double) { v = defaultValue + \"D\"; }else if (defaultValue instanceof java.lang.Float) { v = defaultValue + \"F\"; }else { v = defaultValue.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/829/buggy-version/core.src.main.java.org.infinispan.protostream.annotations.impl.MarshallerCodeGenerator.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "fbc0cce951aaeb50107294279b259b060857893c", "Url": "https://api.github.com/repos/infinispan/protostream", "Date": "2015-01-18T16:50:01Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.facebook.common.util.UriUtil.isNetworkUri(uri))) { uri = new android.net.Uri.Builder().scheme(UriUtil.LOCAL_FILE_SCHEME).path(url).build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1315/buggy-version/fresco-helper.src.main.java.com.facebook.fresco.helper.ImageLoader.java", "BodyUseAPI": [], "Fixed commit": "06b37724ae431c4e640734b34665469c49e614e9", "Url": "https://api.github.com/repos/hpdx/fresco-helper", "Date": "2017-05-19T03:09:12Z"},
{"Line": "=>569", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.contains(\"/\")) { fileName = url.substring(((url.lastIndexOf('/')) + 1)); if ((fileName != null) && (fileName.contains(\"?\"))) { fileName = fileName.substring(0, fileName.indexOf('?')); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/548/buggy-version/FileDownloader.src.main.java.org.wlf.filedownloader.util.UrlUtil.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.lastIndexOf(char)"], "Fixed commit": "fa170c26cf1f6c0eb4721e2bcd375535745978bb", "Url": "https://api.github.com/repos/wlfcolin/file-downloader", "Date": "2016-03-27T06:30:59Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (firePower > 0) { com.github.joakimpersson.tda367.model.utils.Position firePos = new com.github.joakimpersson.tda367.model.utils.Position((x + ((dir.getX()) * i)), (y + ((dir.getY()) * i))); if (validPos(firePos)) { com.github.joakimpersson.tda367.model.tiles.Tile tile = map[firePos.getY()][firePos.getX()]; if (tryBreak(tile, firePower)) { firePower -= tile.getToughness(); fireList.add(firePos); }else { break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4029/buggy-version/src.com.github.joakimpersson.tda367.model.tiles.bombs.NormalBomb.java", "BodyUseAPI": ["com.github.joakimpersson.tda367.model.tiles.bombs.NormalBomb.tryBreak(com.github.joakimpersson.tda367.model.tiles.Tile,int)"], "Fixed commit": "34ab5940ef2d0b6be45489d56a2d6a883f3e520b", "Url": "https://api.github.com/repos/joakimpersson/TDA367", "Date": "2012-04-16T09:21:24Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflexo.localization.LocalizedDelegateImpl.getDictionaryForLanguage(org.openflexo.localization.Language)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (dict != null) { java.util.Properties loadedDict = loadDictionary(language); _localizedDictionaries.put(language, loadedDict); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3470/buggy-version/flexolocalization.src.main.java.org.openflexo.localization.LocalizedDelegateImpl.java", "BodyUseAPI": [], "Fixed commit": "8504bfcf95fc767a7c4740b93ea4a27023a6a2ba", "Url": "https://api.github.com/repos/openflexo-team/gina", "Date": "2014-03-30T15:29:16Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alibaba.fastjson.parser.JSONLexerBase.token()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (token == (com.alibaba.fastjson.parser.JSONToken.LITERAL_STRING)) { java.lang.String strVal = lexer.stringVal(); if ((strVal.length()) == 0) { lexer.nextToken(); return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3518/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "50d35d5e09d9e9f21f6becd8378d74a70e0af4bc", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-04-13T15:46:07Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getCookies()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(railo.runtime.type.util.ArrayUtil.isEmpty(_cookies))) { disconnectData.cookies = new javax.servlet.http.Cookie[_cookies.length]; for (int i = 0; i < (_cookies.length); i++) disconnectData.cookies[i] = _cookies[i]; }else disconnectData.cookies = new javax.servlet.http.Cookie[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6200/buggy-version/railo-java.railo-core.src.railo.runtime.net.http.HTTPServletRequestWrap.java", "BodyUseAPI": [], "Fixed commit": "418e7a66b310f7915c04b51b3e8fe71b5c43c16a", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2014-01-21T19:14:54Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notify) com.ray.mvvm.lib.view.adapter.list.base.ListAdapter.notifyItemChanged((position + headerCount));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1871/buggy-version/src.main.java.com.ray.mvvm.lib.view.adapter.list.base.ListAdapter.java", "BodyUseAPI": [], "Fixed commit": "5111970640f2ba468f4de320e084a9b7d9dbcabe", "Url": "https://api.github.com/repos/LenaYan/BaseLibrary", "Date": "2017-02-07T08:50:36Z"},
{"Line": "=>606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((alert.getHistoryRef()) != null) { if (!(allAlerts.contains(alert))) { allAlerts.add(alert); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3574/buggy-version/src.org.zaproxy.zap.extension.alert.ExtensionAlert.java", "BodyUseAPI": ["java.util.List<org.parosproxy.paros.core.scanner.Alert>.add(org.parosproxy.paros.core.scanner.Alert)", "java.util.List<org.parosproxy.paros.core.scanner.Alert>.contains(org.parosproxy.paros.core.scanner.Alert)"], "Fixed commit": "5432a9bf86bf477c20bcc6e8f29e180cfacd8586", "Url": "https://api.github.com/repos/Dalimil/zaproxy", "Date": "2016-08-12T20:33:03Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.parse.ParseUser.getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((currentUser != null) && (com.parse.ParseFacebookUtils.isLinked(currentUser))) { startUserHomeActivity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1505/buggy-version/det.src.main.src.com.jab.det.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "1cca4e7c9af8752964ec1bc7bd543f38dfa10053", "Url": "https://api.github.com/repos/rawrjustin/det-android", "Date": "2013-11-18T22:45:32Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openflexo.view.controller.FlexoController.askForString(org.openflexo.localization.FlexoLocalization.localizedForKey(\"name_for_new_shape\"))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((newName == null) || (org.openflexo.toolbox.StringUtils.isEmpty(newName))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4810/buggy-version/flexodesktop.modules.flexovieweditor.src.main.java.org.openflexo.ve.controller.action.AddShapeInitializer.java", "BodyUseAPI": [], "Fixed commit": "0114f4f324594e046953204132175c0b4e6ccb52", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2012-04-17T10:29:51Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["entry.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == (com.jetbrains.jetpad.vclang.ConsoleMain.ModuleResult.ERRORS)) numWithErrors += 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1099/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.ConsoleMain.java", "BodyUseAPI": [], "Fixed commit": "0708365125d48d142a9fc83f94419ba98e87d809", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2016-11-23T19:09:08Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (numWithErrors > 0) { java.lang.System.out.println((\"Number of modules with errors: \" + numWithErrors)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1099/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.ConsoleMain.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "0708365125d48d142a9fc83f94419ba98e87d809", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2016-11-23T19:09:08Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["typeCheckResults.get(source)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result == (com.jetbrains.jetpad.vclang.ConsoleMain.ModuleResult.ERRORS)) numWithErrors += 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1099/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.ConsoleMain.java", "BodyUseAPI": [], "Fixed commit": "0708365125d48d142a9fc83f94419ba98e87d809", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2016-11-23T19:09:08Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_node) instanceof storm.trident.planner.PartitionNode) { return each(new backtype.storm.tuple.Fields(), new storm.trident.operation.impl.TrueFilter()).partition(grouping); }else { return _topology.addSourcedNode(this, new storm.trident.planner.PartitionNode(_node.streamId, getOutputFields(), grouping)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/958/buggy-version/src.jvm.storm.trident.Stream.java", "BodyUseAPI": [], "Fixed commit": "add5809b63c4efa4d5b5d43c6eedc8a4755e6661", "Url": "https://api.github.com/repos/nathanmarz/storm", "Date": "2012-08-23T00:06:06Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isAdded()) { createAllMarkers(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3993/buggy-version/app.src.main.java.com.example.usi.lanloc.map.MapFragment.java", "BodyUseAPI": [], "Fixed commit": "cd3374d553547df09af68c324e7324b9e35f04d0", "Url": "https://api.github.com/repos/jennyBu/LanLoc", "Date": "2017-12-18T22:53:01Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isAdded()) { createListItems(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3993/buggy-version/app.src.main.java.com.example.usi.lanloc.MostPopularFragment.java", "BodyUseAPI": [], "Fixed commit": "cd3374d553547df09af68c324e7324b9e35f04d0", "Url": "https://api.github.com/repos/jennyBu/LanLoc", "Date": "2017-12-18T22:53:01Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) { java.lang.System.out.print(\"############################NewestFragment not added yet\"); }else { java.lang.System.out.print(\"############################NewestFragment added\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3993/buggy-version/app.src.main.java.com.example.usi.lanloc.NewestFragment.java", "BodyUseAPI": [], "Fixed commit": "cd3374d553547df09af68c324e7324b9e35f04d0", "Url": "https://api.github.com/repos/jennyBu/LanLoc", "Date": "2017-12-18T22:53:01Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isAdded()) { createListItems(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3993/buggy-version/app.src.main.java.com.example.usi.lanloc.NewestFragment.java", "BodyUseAPI": [], "Fixed commit": "cd3374d553547df09af68c324e7324b9e35f04d0", "Url": "https://api.github.com/repos/jennyBu/LanLoc", "Date": "2017-12-18T22:53:01Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((raf.read(res)) != (res.length)) { throw new org.molgenis.genotype.GenotypeDataException(\"Error reading BED file, file shorted than expected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4664/buggy-version/molgenis-genotype-reader.src.main.java.org.molgenis.genotype.plink.drivers.BedFileDriver.java", "BodyUseAPI": [], "Fixed commit": "7fcb03efd824b3636af5a47dfd8686d48b76b85a", "Url": "https://api.github.com/repos/Bonder-MJ/systemsgenetics", "Date": "2013-08-24T15:34:50Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((raf.read(res)) != (res.length)) { throw new org.molgenis.genotype.GenotypeDataException(\"Error reading BED file, file shorted than expected\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4664/buggy-version/molgenis-genotype-reader.src.main.java.org.molgenis.genotype.plink.drivers.BedFileDriver.java", "BodyUseAPI": [], "Fixed commit": "7fcb03efd824b3636af5a47dfd8686d48b76b85a", "Url": "https://api.github.com/repos/Bonder-MJ/systemsgenetics", "Date": "2013-08-24T15:34:50Z"},
{"Line": "=>506", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.runtime.cache.tag.CacheHandler.get(railo.runtime.tag.StoredProc,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ci != null) cacheValue = ((railo.runtime.cache.tag.query.StoredProcCacheItem) (ci)).getStruct();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6130/buggy-version/railo-java.railo-core.src.railo.runtime.tag.StoredProc.java", "BodyUseAPI": [], "Fixed commit": "0ceeab8551f4a38f2de63fee765dd3ff6c972d97", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2014-05-21T07:42:05Z"},
{"Line": "=>1247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.isseiaoki.simplecropview.CropImageView.getRotatedBitmap(android.graphics.Bitmap)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cropped != (getBitmap())) && (cropped != rotated)) { cropped.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2640/buggy-version/simplecropview.src.main.java.com.isseiaoki.simplecropview.CropImageView.java", "BodyUseAPI": ["android.graphics.Bitmap.recycle()"], "Fixed commit": "6582a44eadd0302b083219b62f3e91f0614edd81", "Url": "https://api.github.com/repos/igreenwood/SimpleCropView", "Date": "2016-04-26T07:19:22Z"},
{"Line": "=>1549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.graphics.Bitmap.createBitmap(android.graphics.Bitmap,cropRect.left,cropRect.top,cropRect.width(),cropRect.height(),<nulltype>,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cropped != (getBitmap())) { cropped.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2640/buggy-version/simplecropview.src.main.java.com.isseiaoki.simplecropview.CropImageView.java", "BodyUseAPI": ["android.graphics.Bitmap.recycle()"], "Fixed commit": "6582a44eadd0302b083219b62f3e91f0614edd81", "Url": "https://api.github.com/repos/igreenwood/SimpleCropView", "Date": "2016-04-26T07:19:22Z"},
{"Line": "=>1615", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cropped != (getBitmap())) { cropped.recycle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2640/buggy-version/simplecropview.src.main.java.com.isseiaoki.simplecropview.CropImageView.java", "BodyUseAPI": ["android.graphics.Bitmap.recycle()"], "Fixed commit": "6582a44eadd0302b083219b62f3e91f0614edd81", "Url": "https://api.github.com/repos/igreenwood/SimpleCropView", "Date": "2016-04-26T07:19:22Z"},
{"Line": "=>2476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.intermine.pathquery.PathConstraint.getValue(org.intermine.pathquery.PathConstraint)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (value != null) { if (constraint instanceof org.intermine.pathquery.PathConstraintLoop) { conb.append(((\",\\\"loopPath\\\":\\\"\" + (org.apache.commons.lang.StringEscapeUtils.escapeJava(value))) + \"\\\"\")); }else { conb.append(((\",\\\"value\\\":\\\"\" + (org.apache.commons.lang.StringEscapeUtils.escapeJava(value))) + \"\\\"\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4951/buggy-version/intermine.pathquery.main.src.org.intermine.pathquery.PathQuery.java", "BodyUseAPI": ["java.lang.StringBuilder.append(((\",\\\"loopPath\\\":\\\"\" + (org.apache.commons.lang.StringEscapeUtils.escapeJava(value))) + \"\\\"\"))", "org.apache.commons.lang.StringEscapeUtils.escapeJava(java.lang.String)", "java.lang.StringBuilder.append(((\",\\\"value\\\":\\\"\" + (org.apache.commons.lang.StringEscapeUtils.escapeJava(value))) + \"\\\"\"))", "org.apache.commons.lang.StringEscapeUtils.escapeJava(java.lang.String)"], "Fixed commit": "488cea81511ac681ed51883f1095dfd083c32c01", "Url": "https://api.github.com/repos/julie-sullivan/intermine", "Date": "2017-08-11T10:56:54Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((\"IS NULL\".equals(op)) || (\"IS NOT NULL\".equals(op))) { constraint = new org.intermine.pathquery.PathConstraintNull(path, constraintOp); }else if ((((\"WITHIN\".equals(op)) || (\"OVERLAPS\".equals(op))) || (\"DOES NOT OVERLAP\".equals(op))) || (\"OUTSIDE\".equals(op))) { java.util.List<java.lang.String> ranges = new java.util.ArrayList<java.lang.String>(); for (int j = 0; j < (values.length()); j++) { ranges.add(values.get(j).toString()); } constraint = new org.intermine.pathquery.PathConstraintRange(path, constraintOp, ranges); }else if ((\"ISA\".equals(op)) || (\"ISNT\".equals(op))) { java.util.List<java.lang.String> types = new java.util.ArrayList<java.lang.String>(); for (int j = 0; j < (values.length()); j++) { types.add(values.get(j).toString()); } constraint = new org.intermine.pathquery.PathConstraintMultitype(path, constraintOp, types); }else { if (constraintObj.has(\"loopPath\")) { java.lang.String loopPath = constraintObj.getString(\"loopPath\"); constraint = new org.intermine.pathquery.PathConstraintLoop(path, constraintOp, loopPath); }else { constraint = new org.intermine.pathquery.PathConstraintAttribute(path, constraintOp, value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4951/buggy-version/intermine.pathquery.main.src.org.intermine.pathquery.PathQueryBinding.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "488cea81511ac681ed51883f1095dfd083c32c01", "Url": "https://api.github.com/repos/julie-sullivan/intermine", "Date": "2017-08-11T10:56:54Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (constraintObj.has(\"loopPath\")) { java.lang.String loopPath = constraintObj.getString(\"loopPath\"); constraint = new org.intermine.pathquery.PathConstraintLoop(path, constraintOp, loopPath); }else { constraint = new org.intermine.pathquery.PathConstraintAttribute(path, constraintOp, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4951/buggy-version/intermine.pathquery.main.src.org.intermine.pathquery.PathQueryBinding.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "488cea81511ac681ed51883f1095dfd083c32c01", "Url": "https://api.github.com/repos/julie-sullivan/intermine", "Date": "2017-08-11T10:56:54Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hdi.getDigest()) != null) { log.trace(\"Provided HashDataInput for digest {}.\", hdi.getDigest()); hashDataDigestMap.put(new java.lang.String(hdi.getDigest()), hdi); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6356/buggy-version/BKUOnline.src.main.java.at.gv.egiz.stal.service.impl.STALServiceImpl.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String,hdi.getDigest())", "at.gv.egiz.stal.HashDataInput.getDigest()", "java.util.Map<java.lang.String, at.gv.egiz.stal.HashDataInput>.put(java.lang.String,at.gv.egiz.stal.HashDataInput)", "at.gv.egiz.stal.HashDataInput.getDigest()"], "Fixed commit": "2ffeff42cccd0534668b22774df8bfcd3dee43c3", "Url": "https://api.github.com/repos/primesign/mocca", "Date": "2015-07-29T13:24:47Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5898/buggy-version/Android.src.org.droidplanner.android.utils.NetworkUtils.java", "BodyUseAPI": [], "Fixed commit": "21a7be8b300c3f66022114ffd4118a921f86be2b", "Url": "https://api.github.com/repos/DroidPlanner/Tower", "Date": "2015-08-25T23:24:05Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5898/buggy-version/Android.src.org.droidplanner.android.utils.NetworkUtils.java", "BodyUseAPI": [], "Fixed commit": "21a7be8b300c3f66022114ffd4118a921f86be2b", "Url": "https://api.github.com/repos/DroidPlanner/Tower", "Date": "2015-08-25T23:24:05Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.littleshoot.proxy.impl.ProxyUtils.isCONNECT(httpRequest)) { org.littleshoot.proxy.impl.LOG.debug(\"Not reusing existing ProxyToServerConnection because request is a CONNECT for: {}\", serverHostAndPort); newConnectionRequired = true; }else if ((currentServerConnection) == null) { org.littleshoot.proxy.impl.LOG.debug(\"Didn't find existing ProxyToServerConnection for: {}\", serverHostAndPort); newConnectionRequired = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4897/buggy-version/src.main.java.org.littleshoot.proxy.impl.ClientToProxyConnection.java", "BodyUseAPI": [], "Fixed commit": "c0c174df22705d3856f56f762b4d1b9bc13410bf", "Url": "https://api.github.com/repos/adamfisk/LittleProxy", "Date": "2013-09-09T13:14:00Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (map.isOutOfBounds(player)) { player.die(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2520/buggy-version/core.src.com.sideprojects.megamanxphantomblade.physics.player.PlayerPhysics.java", "BodyUseAPI": ["com.sideprojects.megamanxphantomblade.player.PlayerBase.die()"], "Fixed commit": "801ac8690189ac271dc67a6dd69610106ed779e1", "Url": "https://api.github.com/repos/hoangbv15/PhantomBlade", "Date": "2017-05-10T19:32:44Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isDebugEnabled()) logger.trace(\"araqne rpc: start initialize connection [{}]\", channel.getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6190/buggy-version/araqne-rpc.src.main.java.org.araqne.rpc.impl.RpcHandler.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String,channel.getId())"], "Fixed commit": "63ff91a3f12a758135fc6c946ada807b7c0e2352", "Url": "https://api.github.com/repos/araqne/rpc", "Date": "2015-07-16T07:09:43Z"},
{"Line": "=>4133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ev.getInventory().getResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((result.getType()) == (org.bukkit.Material.STAINED_GLASS_PANE)) && (sig.plugin.TwosideKeeper.Artifact.isArtifact(result))) { for (int i = 0; i < (ev.getInventory().getSize()); i++) { if ((((ev.getInventory().getItem(i)) != null) && ((ev.getInventory().getItem(i).getType()) != (org.bukkit.Material.AIR))) && (!(sig.plugin.TwosideKeeper.Artifact.isArtifact(ev.getInventory().getItem(i))))) { ev.getInventory().setResult(new org.bukkit.inventory.ItemStack(org.bukkit.Material.AIR)); break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6914/buggy-version/src.sig.plugin.TwosideKeeper.TwosideKeeper.java", "BodyUseAPI": [], "Fixed commit": "e073bcaeaf916aef8a622f057b13263bc78d61b6", "Url": "https://api.github.com/repos/sigonasr2/TwosideKeeper", "Date": "2016-06-24T05:19:57Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.StringUtils.split(config.getExcludeTemplate(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (excludes != null) for (int i = 0; i < (excludes.length); ++i) { excludes[i] = org.apache.commons.lang3.StringUtils.trim(excludes[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/869/buggy-version/genthemall-maven-plugin.src.main.java.com.ii2d.genthemall.maven.plugin.GenerateMojo.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.trim(java.lang.String)"], "Fixed commit": "c23389650a6142cd1ef6e5044d1ca14573d029dc", "Url": "https://api.github.com/repos/donilan/genthemall", "Date": "2013-02-22T06:24:59Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.StringUtils.split(config.getIncludeTemplate(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (includes != null) for (int i = 0; i < (includes.length); ++i) { includes[i] = org.apache.commons.lang3.StringUtils.trim(includes[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/869/buggy-version/genthemall-maven-plugin.src.main.java.com.ii2d.genthemall.maven.plugin.GenerateMojo.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.trim(java.lang.String)"], "Fixed commit": "c23389650a6142cd1ef6e5044d1ca14573d029dc", "Url": "https://api.github.com/repos/donilan/genthemall", "Date": "2013-02-22T06:24:59Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((c.operand) != (wyil.lang.Code.NULL_REG)) { environment.add(c.operand); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8613/buggy-version/modules.wyil.src.wyil.transforms.LiveVariablesAnalysis.java", "BodyUseAPI": ["wyil.transforms.LiveVariablesAnalysis.Env.add(c.operand)"], "Fixed commit": "cc8d77785f183571a71827fb034d5d8e61d71a8d", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2013-06-26T07:47:57Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (scaleMode == null) this.scaleMode = ScaleMode.FitXY; else this.scaleMode = scaleMode;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2903/buggy-version/ion.src.com.koushikdutta.ion.DefaultTransform.java", "BodyUseAPI": [], "Fixed commit": "2f46faa8fa9a37600046962a48e70e5f99a84db7", "Url": "https://api.github.com/repos/koush/ion", "Date": "2014-11-22T03:57:35Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isLoggedIn())) { throw new com.evernote.client.android.InvalidAuthenticationException(\"Must not call when already logged out\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6762/buggy-version/library.src.com.evernote.client.android.EvernoteSession.java", "BodyUseAPI": [], "Fixed commit": "15d16550db8898128ad7deb9bf182803c5648e85", "Url": "https://api.github.com/repos/evernote/evernote-sdk-android", "Date": "2013-03-18T21:43:11Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectedItemView != null) { numeratorView.setText(org.eyeseetea.malariacare.utils.Utils.round(numerator)); denominatorView.setText(org.eyeseetea.malariacare.utils.Utils.round(denominator)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7389/buggy-version/app.src.main.java.org.eyeseetea.malariacare.layout.Layout.java", "BodyUseAPI": [], "Fixed commit": "76c50f87facbda7b69b500bb4b99162f29fc674a", "Url": "https://api.github.com/repos/EyeSeeTea/malariapp", "Date": "2015-02-26T16:13:51Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fileModel instanceof org.jboss.windup.graph.model.ArchiveModel) { return fileModel.getPrettyPath(); }else { return fileModel.getPrettyPathWithinProject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5466/buggy-version/rules-java.api.src.main.java.org.jboss.windup.rules.apps.java.reporting.freemarker.RenderLinkDirective.java", "BodyUseAPI": ["org.jboss.windup.graph.model.resource.FileModel.getPrettyPath()", "org.jboss.windup.graph.model.resource.FileModel.getPrettyPathWithinProject()"], "Fixed commit": "e4e037a10dea8e087159dcea90cd381b5986ee0c", "Url": "https://api.github.com/repos/OndraZizka/windup", "Date": "2017-05-16T07:08:25Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (movementTicksRemain > 0) { double da = (pcl.lc.util.MathUtils.diffAngle(ring_angle, ring_dest_angle)) / movementTicksRemain; ring_angle = pcl.lc.util.MathUtils.addAngle(ring_angle, da); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7291/buggy-version/src.main.java.pcl.lc.module.stargate.tile.TileStargateBase.java", "BodyUseAPI": [], "Fixed commit": "3667fb424ce0e8f4665696c57b8369bf7c881158", "Url": "https://api.github.com/repos/PC-Logix/LanteaCraft", "Date": "2014-08-17T01:45:32Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((result != null) && (!resultSwapped)) result.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3474/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.MemStoreCompactor.java", "BodyUseAPI": ["org.apache.hadoop.hbase.regionserver.ImmutableSegment.close()"], "Fixed commit": "a6f971d87dc5c1de0a8962e73248ab48d6c78ba9", "Url": "https://api.github.com/repos/Eshcar/hbase", "Date": "2016-07-04T11:22:18Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.cas.lib.proarc.common.workflow.WorkflowManager.findMaterial(cz.cas.lib.proarc.common.workflow.model.MaterialFilter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((mvs.get(0).getMetadata()) == null) { cz.cas.lib.proarc.mods.ModsDefinition mods = new cz.cas.lib.proarc.mods.ModsDefinition(); mods.setVersion(ModsUtils.VERSION); xmlMetadata = cz.cas.lib.proarc.common.mods.ModsUtils.toXml(mods, true); }else { xmlMetadata = mvs.get(0).getMetadata(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7460/buggy-version/proarc-common.src.main.java.cz.cas.lib.proarc.common.fedora.WorkflowStorage.java", "BodyUseAPI": ["mvs.get(0).getMetadata()", "java.util.List<cz.cas.lib.proarc.common.workflow.model.MaterialView>.get(int)"], "Fixed commit": "946505764838373e1f9fe660ec4e9a7bf9dd094a", "Url": "https://api.github.com/repos/proarc/proarc", "Date": "2017-11-20T10:01:33Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFragmentManager().findFragmentById(R.id.player_fragment)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (playerFrag == null) { limit = ViewGroup.LayoutParams.MATCH_PARENT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8579/buggy-version/app.src.main.java.com.example.mlen.mytwitch.activity.ChannelActivity.java", "BodyUseAPI": [], "Fixed commit": "fdf654afd21fa8a3805c3d17fabbcd0522feb513", "Url": "https://api.github.com/repos/lental/MyTwitch", "Date": "2017-03-02T22:18:17Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DEBUGMODE) { net.minecraft.inventory.Slot s; for (java.lang.Object o : this.container.inventorySlots) { s = ((net.minecraft.inventory.Slot) (o)); this.drawString(this.fontRendererObj, (\"\" + (s.getSlotIndex())), s.xDisplayPosition, ((s.yDisplayPosition) + 4), 16777120); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2362/buggy-version/InfiniteInvoMutated.src.main.java.com.lothrazar.powerinventory.inventory.client.GuiBigInventory.java", "BodyUseAPI": [], "Fixed commit": "37c1eb518372ac6decaa6a7ad960c7d0fb79e741", "Url": "https://api.github.com/repos/PrinceOfAmber/SamsPowerups", "Date": "2015-07-22T05:47:54Z"},
{"Line": "=>356", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((joinCommand) == null) joinCommand = \"chuckTesta\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/9054/buggy-version/src.littlegruz.autoruncommands.CommandMain.java", "BodyUseAPI": [], "Fixed commit": "79ce59dc079cb24cb585f8a1c9c6894a69834f60", "Url": "https://api.github.com/repos/LittleGruz/Autorun-Commands", "Date": "2012-06-05T01:15:47Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (requiresLogout(request, response)) { for (org.springframework.security.ui.logout.LogoutHandler handler : globalHandlers) { handler.logout(request, response, auth); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6936/buggy-version/saml2-core.src.main.java.org.springframework.security.saml.SAMLLogoutFilter.java", "BodyUseAPI": ["org.springframework.security.ui.logout.LogoutHandler.logout(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.Authentication)"], "Fixed commit": "9151bfe505ebce5ac225abf4263fb37ac709f6e3", "Url": "https://api.github.com/repos/PeopleMatter/spring-security-saml", "Date": "2014-07-29T18:40:59Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xcompwiz.lookingglass.client.proxyworld.ProxyWorldManager.getProxyworld(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((proxyworld.provider.dimensionId) == (net.minecraft.client.Minecraft.getMinecraft().thePlayer.dimension)) { proxyworld.removeWorldAccess(view.getRenderGlobal()); }else if ((proxyworld.provider.dimensionId) != (net.minecraft.client.Minecraft.getMinecraft().thePlayer.dimension)) { proxyworld.removeWorldAccess(view.getRenderGlobal()); proxyworld.addWorldAccess(view.getRenderGlobal()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2222/buggy-version/src.main.java.com.xcompwiz.lookingglass.client.proxyworld.ProxyWorldManager.java", "BodyUseAPI": ["net.minecraft.client.multiplayer.WorldClient.addWorldAccess(view.getRenderGlobal())", "net.minecraft.client.multiplayer.WorldClient.removeWorldAccess(view.getRenderGlobal())", "net.minecraft.client.multiplayer.WorldClient.removeWorldAccess(view.getRenderGlobal())"], "Fixed commit": "f83954c8754109213973e1e94d5914bbeb4872f1", "Url": "https://api.github.com/repos/Geforce132/LookingGlass", "Date": "2016-08-08T05:36:00Z"},
{"Line": "=>853", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tr instanceof com.ochafik.lang.jnaerator.parser.TypeRef.TaggedTypeRef) { com.ochafik.lang.jnaerator.parser.TypeRef.TaggedTypeRef ttr = ((com.ochafik.lang.jnaerator.parser.TypeRef.TaggedTypeRef) (tr)); if ((ttr.isForwardDeclaration()) && ((ttr.getTag()) != null)) { com.ochafik.lang.jnaerator.parser.TypeRef resolved = null; if (ttr instanceof java.lang.Enum) { resolved = resolveEnum(ttr.getTag()); }else if (ttr instanceof com.ochafik.lang.jnaerator.parser.Struct) { resolved = resolveStruct(ttr.getTag()); } return resolved != null ? resolved : tr; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8681/buggy-version/libraries.jnaerator.jnaerator.src.main.java.com.ochafik.lang.jnaerator.Result.java", "BodyUseAPI": [], "Fixed commit": "2f059bd4ecf771dd67621909e94ba8c7e19d9b24", "Url": "https://api.github.com/repos/fvlankvelt/nativelibs4java", "Date": "2013-07-27T17:03:30Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hixi_hyi.idumo.core.exec.AbstractExecutionComponent.getRunnable()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (runnable.isReady()) { runnable.run(); i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4053/buggy-version/console.src.com.hixi_hyi.idumo.console.exec.ConsoleExecution.java", "BodyUseAPI": ["com.hixi_hyi.idumo.core.IdumoRunnable.run()"], "Fixed commit": "3d4ec60a0692bc1ad6d5559c20d6c78cddd3d6b6", "Url": "https://api.github.com/repos/hixi-hyi/IDUMO", "Date": "2011-11-18T10:50:22Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hixi_hyi.idumo.core.exec.AbstractExecutionComponent.getRunnable()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (runnable.isReady()) { runnable.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4053/buggy-version/console.src.com.hixi_hyi.idumo.console.exec.ConsoleExecution.java", "BodyUseAPI": ["com.hixi_hyi.idumo.core.IdumoRunnable.run()"], "Fixed commit": "3d4ec60a0692bc1ad6d5559c20d6c78cddd3d6b6", "Url": "https://api.github.com/repos/hixi-hyi/IDUMO", "Date": "2011-11-18T10:50:22Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.hardware.Camera.getParameters()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((parameters.getAntibanding()) != null) { parameters.setAntibanding(\"auto\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5849/buggy-version/app.src.main.java.meeting.linkface.cn.PATHotongmeeting.customer.display.CameraProxy.java", "BodyUseAPI": ["android.hardware.Camera.Parameters.setAntibanding(java.lang.String)"], "Fixed commit": "6f452f30f5a38370e53b0ffe8fe6a133d3ab30bf", "Url": "https://api.github.com/repos/yanmeizhao/XiaoTongMeeting", "Date": "2017-07-24T09:19:16Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMediaPlayer) != null) { if (mMediaPlayer.isPlaying()) { mMediaPlayer.stop(); } mMediaPlayer.release(); mMediaPlayer = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8029/buggy-version/stream.player.src.main.java.com.android.magic.stream.player.MediaPlayerThread.java", "BodyUseAPI": [], "Fixed commit": "a9d9ab69aced04089894e49f36c59291e987e018", "Url": "https://api.github.com/repos/florina-muntenescu/StreamPlayer", "Date": "2015-01-18T20:03:37Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.mobile.data.rest.RestHelper.getCallListValue(listPatientRestService.getListPatients(patientListUuid, options, null))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (patientListContexts.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8123/buggy-version/openmrs-client.src.main.java.org.openmrs.mobile.data.sync.impl.PatientListContextSubscriptionProvider.java", "BodyUseAPI": [], "Fixed commit": "224c626ad33e8ed580fa3a40ef1ed8bda133ee03", "Url": "https://api.github.com/repos/OpenHMIS/openmrs-contrib-android-client", "Date": "2017-12-18T13:08:37Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pulseToWatt(one)) > 10000) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8788/buggy-version/bundles.binding.org.openhab.binding.plugwise.src.main.java.org.openhab.binding.plugwise.internal.Circle.java", "BodyUseAPI": [], "Fixed commit": "da54c1421e69959feb3935fd6e18b05a8aefa9fe", "Url": "https://api.github.com/repos/kgoderis/openhab", "Date": "2014-01-30T18:53:22Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getColumnIndex(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (idx >= 0) { final java.lang.String path = cursor.getString(idx); if (path != null) { return android.net.Uri.fromFile(new java.io.File(cursor.getString(idx))); }else { return null; } }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6113/buggy-version/SmartReceiptsLibrary.src.main.java.co.smartreceipts.android.model.Attachment.java", "BodyUseAPI": ["android.database.Cursor.getString(int)", "android.database.Cursor.getString(int)", "android.net.Uri.fromFile(java.io.File)"], "Fixed commit": "d53e429dfc0a29a066074295c281bcc0213195c4", "Url": "https://api.github.com/repos/wbaumann/SmartReceiptsLibrary", "Date": "2016-05-13T14:47:30Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.WindowEvent.getWindow()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((window == (gui.WindowManager.navigationWindow)) && ((o_componentWindows.size()) == 0)) { lastWindowClosing(); }else if (((o_componentWindows.size()) == 0) && (!(gui.WindowManager.navigationWindow.isVisible()))) { lastWindowClosing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7266/buggy-version/src.main.java.gui.WindowManager.java", "BodyUseAPI": ["java.util.Map.size()"], "Fixed commit": "86f6068a4ffc9d37293310593199d3a7fc0fe3a2", "Url": "https://api.github.com/repos/talmeym/threads", "Date": "2016-05-20T16:20:41Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type instanceof java.lang.reflect.ParameterizedType) { type = ((java.lang.reflect.ParameterizedType) (type)).getActualTypeArguments()[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7219/buggy-version/wantscart-db-jade.src.main.java.com.wantscart.jade.core.serializer.EntityListSerailizer.java", "BodyUseAPI": [], "Fixed commit": "b865ee2c4b3c65a740a48453cd6996ad74df41d0", "Url": "https://api.github.com/repos/Gbeginner/wantscart-db", "Date": "2016-03-21T07:39:07Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.vehiclesByRoute.containsKey(route)) { return java.util.Collections.unmodifiableList(this.vehiclesByRoute.get(route)); }else { return new java.util.ArrayList<com.eatthepath.gtfs.realtime.Vehicle>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6601/buggy-version/src.com.eatthepath.gtfs.TransitSystem.java", "BodyUseAPI": ["java.util.Collections.unmodifiableList(this.vehiclesByRoute.get(route))", "java.util.HashMap<com.eatthepath.gtfs.Route, java.util.List<com.eatthepath.gtfs.realtime.Vehicle>>.get(com.eatthepath.gtfs.Route)"], "Fixed commit": "d6a3c3de9f26b2e71b12c9706bbe01c5d3f1a81d", "Url": "https://api.github.com/repos/jchambers/bus-route-discovery", "Date": "2013-07-24T04:20:42Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (first) { html += (\"<h1> \" + (results.getString(\"Playlist.PlaylistName\"))) + \" </h1>\"; html += \"<ul style=\\\"list-style: none;\\\">\"; first = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/305/buggy-version/src.java.com.thatsmyjam.servlets.Playlists.java", "BodyUseAPI": [], "Fixed commit": "38fc16bf94cf42768cf9b35b2cf9fb1a9286add0", "Url": "https://api.github.com/repos/Shaffer319/ThatsMyJam", "Date": "2017-08-22T13:37:57Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yoogurt.taxi.user.service.UserService.doLogin(loginForm.getUsername(),loginForm.getPassword())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (sessionUser != null) { return com.yoogurt.taxi.common.vo.ResponseObj.success(sessionUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1327/buggy-version/taxi-user.src.main.java.com.yoogurt.taxi.user.controller.mobile.UserMobileController.java", "BodyUseAPI": ["com.yoogurt.taxi.common.vo.ResponseObj.success(com.yoogurt.taxi.common.bo.SessionUser)"], "Fixed commit": "9f83dcb0b617d49da584d70d3a058ee87e506bc2", "Url": "https://api.github.com/repos/liu-weihao/yoogurt-taxi", "Date": "2017-09-07T01:42:33Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((f.length()) == 0) throw new java.lang.IllegalStateException((\"empty jar file: \" + (f.getAbsolutePath())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/291/buggy-version/araqne-core.src.main.java.org.araqne.bundle.BundleManagerService.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()"], "Fixed commit": "9df0ed5778dd87c25d1027a1d0a72e7551e57a18", "Url": "https://api.github.com/repos/araqne/core", "Date": "2015-06-10T06:18:38Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sel.content) != null) { java.lang.String replacementTxt = sel.content.replaceAll(\"\\n\", \" \"); replaceContent(sel, replacementTxt); }else { javax.swing.text.Document doc = editor.getDocument(); int caretPos = editor.getCaretPosition(); java.lang.String text = doc.getText(0, doc.getLength()); int crlfPos = text.indexOf(\"\\r\\n\", caretPos); int lfPos = text.indexOf(\"\\n\", caretPos); if ((crlfPos != (-1)) && (lfPos != (-1))) { if (crlfPos < lfPos) { doc.remove(crlfPos, 2); doc.insertString(crlfPos, \" \", null); }else { doc.remove(lfPos, 1); doc.insertString(lfPos, \" \", null); } }else if (lfPos != (-1)) { doc.remove(lfPos, 1); doc.insertString(lfPos, \" \", null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8026/buggy-version/src.main.java.com.sandy.jnmaker.ui.helper.PopupEditMenu.java", "BodyUseAPI": ["com.sandy.jnmaker.ui.helper.PopupEditMenu.replaceContent(com.sandy.jnmaker.ui.helper.PopupEditMenu.SelectedContent,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "1ba49b1366dd3058470e58f7c738436e0647973e", "Url": "https://api.github.com/repos/deb-sandeep/JoveNotesMaker", "Date": "2016-06-30T15:56:27Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (len > 0) { doc.setCharacterAttributes(((token.start) + start), len, doc.getStyle(type.toString()), false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8026/buggy-version/src.main.java.com.sandy.jnmaker.ui.panels.JoveNotesTextPane.java", "BodyUseAPI": ["javax.swing.text.StyledDocument.setCharacterAttributes(((token.start) + start),int,javax.swing.text.Style,boolean)"], "Fixed commit": "1ba49b1366dd3058470e58f7c738436e0647973e", "Url": "https://api.github.com/repos/deb-sandeep/JoveNotesMaker", "Date": "2016-06-30T15:56:27Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sejda.core.support.prefix.processor.PrefixTypesChain.process(java.lang.String,org.sejda.core.support.prefix.model.NameGenerationRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((result.length()) > 255) { java.lang.String baseName = org.apache.commons.io.FilenameUtils.getBaseName(result); java.lang.String ext = org.apache.commons.io.FilenameUtils.getExtension(result); return ((baseName.substring(0, (254 - (ext.length())))) + \".\") + ext; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7535/buggy-version/sejda-core.src.main.java.org.sejda.core.support.prefix.NameGenerator.java", "BodyUseAPI": ["org.apache.commons.io.FilenameUtils.getBaseName(java.lang.String)", "org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)"], "Fixed commit": "c1e2565aa5a0a4587d34c31a42b94dac16cbc0d4", "Url": "https://api.github.com/repos/torakiki/sejda", "Date": "2015-08-05T21:13:22Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFuzzySearchActivateAndTrueForQuery(info, query)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/665/buggy-version/android.src.main.java.org.ligi.fast.model.AppInfoList.java", "BodyUseAPI": [], "Fixed commit": "2157619f8cfccc1a3122c2c79bb9d1b0a860651e", "Url": "https://api.github.com/repos/ligi/FAST", "Date": "2013-11-22T15:48:16Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.impl.source.PsiClassImpl.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (parent instanceof com.intellij.psi.impl.source.PsiClassLevelDeclarationStatement) { com.intellij.psi.impl.source.PsiFile containingFile = parent.getContainingFile(); if (containingFile instanceof com.intellij.psi.impl.source.PsiJavaFile) { return com.intellij.openapi.util.text.StringUtil.getQualifiedName(((com.intellij.psi.impl.source.PsiJavaFile) (containingFile)).getPackageName(), getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3448/buggy-version/java-psi-impl.src.com.intellij.psi.impl.source.PsiClassImpl.java", "BodyUseAPI": ["com.intellij.psi.impl.source.PsiElement.getContainingFile()"], "Fixed commit": "eb3e0a97a9c9a202e76383e44b0ef7b6d4cd70c2", "Url": "https://api.github.com/repos/consulo/consulo-java", "Date": "2017-07-06T12:22:42Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sa.length) < 4) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6058/buggy-version/src.com.fifthfloor.gps.server.objects.SMJob.java", "BodyUseAPI": [], "Fixed commit": "16c8e7f41631dfcea453ac58b0342e2eb461bc0f", "Url": "https://api.github.com/repos/adowning/smtools", "Date": "2012-06-26T14:15:52Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sa.length) == 4) { url = (((((((\"http://maps.google.com/maps/api/geocode/xml?address=\" + (sa[0])) + \"+\") + (sa[1])) + \"+\") + (sa[2])) + \"+\") + (sa[3])) + \"&sensor=false\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6058/buggy-version/src.com.fifthfloor.gps.server.objects.SMJob.java", "BodyUseAPI": [], "Fixed commit": "16c8e7f41631dfcea453ac58b0342e2eb461bc0f", "Url": "https://api.github.com/repos/adowning/smtools", "Date": "2012-06-26T14:15:52Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sa.length) == 6) { url = (((((((((((\"http://maps.google.com/maps/api/geocode/xml?address=\" + (sa[0])) + \"+\") + (sa[1])) + \"+\") + (sa[2])) + \"+\") + (sa[3])) + \"+\") + (sa[4])) + \"+\") + (sa[5])) + \"&sensor=false\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6058/buggy-version/src.com.fifthfloor.gps.server.objects.SMJob.java", "BodyUseAPI": [], "Fixed commit": "16c8e7f41631dfcea453ac58b0342e2eb461bc0f", "Url": "https://api.github.com/repos/adowning/smtools", "Date": "2012-06-26T14:15:52Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((sa.length) == 5) { url = (((((((((\"http://maps.google.com/maps/api/geocode/xml?address=\" + (sa[0])) + \"+\") + (sa[1])) + \"+\") + (sa[2])) + \"+\") + (sa[3])) + \"+\") + (sa[4])) + \"&sensor=false\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6058/buggy-version/src.com.fifthfloor.gps.server.objects.SMJob.java", "BodyUseAPI": [], "Fixed commit": "16c8e7f41631dfcea453ac58b0342e2eb461bc0f", "Url": "https://api.github.com/repos/adowning/smtools", "Date": "2012-06-26T14:15:52Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((config.getId()) != null) { configurationService.Update(con, config); }else { configurationService.Insert(con, config); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8533/buggy-version/orchestrator.src.ch.uzh.ifi.feedback.orchestrator.services.ApplicationService.java", "BodyUseAPI": ["ch.uzh.ifi.feedback.orchestrator.services.ConfigurationService.Update(java.sql.Connection,ch.uzh.ifi.feedback.orchestrator.model.Configuration)", "ch.uzh.ifi.feedback.orchestrator.services.ConfigurationService.Insert(java.sql.Connection,ch.uzh.ifi.feedback.orchestrator.model.Configuration)"], "Fixed commit": "59533b03d27c27b241c4b7ecf297e9fd9c6a1afc", "Url": "https://api.github.com/repos/supersede-project/monitor_feedback", "Date": "2016-12-14T18:18:26Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args[0].equalsIgnoreCase(\"itemtest\")) { if (sender instanceof org.bukkit.entity.Player) { org.bukkit.entity.Player player = ((org.bukkit.entity.Player) (sender)); check = new com.turt2live.antishare.bukkit.dev.ItemStackTest(this, player); }else { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"Not for console.\")); } }else if (args[0].equalsIgnoreCase(\"itemtest2\")) { if (sender instanceof org.bukkit.entity.Player) { org.bukkit.entity.Player player = ((org.bukkit.entity.Player) (sender)); check = new com.turt2live.antishare.bukkit.dev.ItemStackTest2(this, player); }else { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"Not for console.\")); } }else if (args[0].equalsIgnoreCase(\"matstrings\")) { check = new com.turt2live.antishare.bukkit.dev.MaterialStringsCheck(this); }else sender.sendMessage(((org.bukkit.ChatColor.RED) + \"Unknown command.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1748/buggy-version/DevTools.BukkitPlugin.src.main.java.com.turt2live.antishare.bukkit.dev.AntiShare.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "7f56b76a23bf5c502a83af554bb9a7abf5a0be74", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2014-06-27T04:14:06Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((app.getPlayerAmmo()) > 0) grid.setCanShoot(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6485/buggy-version/src.edu.cpp.cs.cs141.final_project.User_Interface.GUI.Utilities.KeyboardHandler.java", "BodyUseAPI": [], "Fixed commit": "cda75cd539bf029742fc356d75d26dadb5dde778", "Url": "https://api.github.com/repos/fanfare00/CS141_FinalProject", "Date": "2016-12-03T02:29:23Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((remainingAmmo) > 0) this.remainingAmmo -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6485/buggy-version/src.edu.cpp.cs.cs141.final_project.Game_Objects.Actors.Player.java", "BodyUseAPI": [], "Fixed commit": "cda75cd539bf029742fc356d75d26dadb5dde778", "Url": "https://api.github.com/repos/fanfare00/CS141_FinalProject", "Date": "2016-12-03T02:29:23Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.mail.plugins.imageloader.settings.PluginSettingsManager.getIssueTypeImage(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (oldFileName != null) { java.io.File oldFile = new java.io.File(jiraHomeImg, oldFileName); if (oldFile.exists()) { oldFile.delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4238/buggy-version/src.main.java.ru.mail.plugins.imageloader.servlets.MailIssueImageLoaderServlet.java", "BodyUseAPI": [], "Fixed commit": "b3d2d3c7ba7f91ab8ebd436dfa852bcc2245321e", "Url": "https://api.github.com/repos/AndreyVMarkelov/mailru-jira-plugins-image-loader", "Date": "2013-03-06T20:14:16Z"},
{"Line": "=>679", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(selected.isEmpty())) { for (final java.lang.String feature : selected.split(\"[ ]\")) { configuration.setManual(feature, Selection.SELECTED); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3817/buggy-version/plugins.de.ovgu.featureide.ui.src.de.ovgu.featureide.ui.actions.generator.ConfigurationBuilder.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "2fd3d0c924f77dc07cc6699b941a2d7aa89b8749", "Url": "https://api.github.com/repos/tthuem/FeatureIDE", "Date": "2014-07-02T14:15:34Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (active.isHidden()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1625/buggy-version/src.projlab.rail.ui.GraphicsEngine.java", "BodyUseAPI": [], "Fixed commit": "e69caf5861acedb3f4df22a0b5cf24cb539733d3", "Url": "https://api.github.com/repos/mktiti/ProjektLab", "Date": "2017-05-06T23:55:32Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inCursor.size()) == 4) { if (((inCursor.get(0).getColor().equals(inCursor.get(1).getColor())) && (inCursor.get(0).getColor().equals(inCursor.get(2).getColor()))) && (inCursor.get(0).getColor().equals(inCursor.get(3).getColor()))) { for (com.Turntris.Block block : inCursor) { blocks.removeValue(block, true); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5271/buggy-version/TurntrisGDX.src.com.Turntris.Turntris.java", "BodyUseAPI": ["inCursor.get(0).getColor().equals(inCursor.get(1).getColor())", "inCursor.get(1).getColor()", "java.util.ArrayList<com.Turntris.Block>.get(int)", "java.util.ArrayList<com.Turntris.Block>.get(int)", "inCursor.get(2).getColor()", "inCursor.get(3).getColor()", "java.util.ArrayList<com.Turntris.Block>.get(int)", "inCursor.get(0).getColor()", "java.util.ArrayList<com.Turntris.Block>.get(int)", "inCursor.get(0).getColor().equals(inCursor.get(3).getColor())", "inCursor.get(0).getColor()", "java.util.ArrayList<com.Turntris.Block>.get(int)", "java.util.ArrayList<com.Turntris.Block>.get(int)", "inCursor.get(0).getColor()", "inCursor.get(0).getColor().equals(inCursor.get(2).getColor())"], "Fixed commit": "d93a5a2d344853cb4ac32192154b203d589af12f", "Url": "https://api.github.com/repos/KretsK/TurnTris", "Date": "2012-10-17T01:24:11Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (total == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/9176/buggy-version/src.main.java.iguanaman.iguanatweakstconstruct.leveling.RandomBonuses.java", "BodyUseAPI": [], "Fixed commit": "a3084e395c372cf4ef92f7f12f3f4e6113997ae8", "Url": "https://api.github.com/repos/TheOldOne822/IguanaTweaksTConstruct", "Date": "2014-08-03T08:39:41Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.hsbremen.mds.common.whiteboard.Whiteboard.getAttribute(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (groupEntry == null) { android.util.Log.e(de.hsbremen.mds.interpreter.Interpreter.LOGTAG, ((\"No Item Found to Key \" + elementKey) + \". Maybe it has already been removed\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7140/buggy-version/MdsAndroid.src.de.hsbremen.mds.interpreter.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "ed125911fee7b5e050d1ee16d31841565f838195", "Url": "https://api.github.com/repos/MachDeinSpiel/MdsAndroid", "Date": "2014-06-17T21:06:27Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stitchedImage) != null) boofcv.alg.misc.GImageMiscOps.fill(stitchedImage, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/92/buggy-version/main.sfm.src.boofcv.alg.sfm.d2.StitchingFromMotion2D.java", "BodyUseAPI": [], "Fixed commit": "76131ac6d1365e6b405bf1eab77ecc1777c9a054", "Url": "https://api.github.com/repos/lessthanoptimal/BoofCV", "Date": "2016-11-18T06:31:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.aplu.jgamegrid.GGVector.magnitude2()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (abMag == 0) return a;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/298/buggy-version/Triangles.src.models.Triangle.java", "BodyUseAPI": [], "Fixed commit": "4ad87c8a8e711991f6c62303e930ff3cab016846", "Url": "https://api.github.com/repos/panmari/PHBern", "Date": "2012-12-28T02:13:36Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ch.sprite.parent) != null) { com.shatteredpixel.shatteredpixeldungeon.effects.Wound w = ((com.shatteredpixel.shatteredpixeldungeon.effects.Wound) (ch.sprite.parent.recycle(com.shatteredpixel.shatteredpixeldungeon.effects.Wound.class))); ch.sprite.parent.bringToFront(w); w.reset(ch.pos); w.angle = angle; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2059/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.effects.Wound.java", "BodyUseAPI": ["ch.sprite.parent.recycle(java.lang.Class)", "com.shatteredpixel.shatteredpixeldungeon.effects.Wound.reset(ch.pos)", "ch.sprite.parent.bringToFront(com.shatteredpixel.shatteredpixeldungeon.effects.Wound)"], "Fixed commit": "4ad2f689bd228580a8247ed6666b52ccc0ab2f5b", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2014-11-16T05:40:05Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListener) != null) { mListener.onDaySelect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3961/buggy-version/core.src.main.java.com.azurechen.fcalendar.widget.FlexibleCalendar.java", "BodyUseAPI": [], "Fixed commit": "3757bc565a0d3ca98e016fcb763820ceef5f60e2", "Url": "https://api.github.com/repos/azurechen/android-flexible-calendar", "Date": "2015-08-07T03:07:29Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListener) != null) { mListener.onMonthChange(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3961/buggy-version/core.src.main.java.com.azurechen.fcalendar.widget.FlexibleCalendar.java", "BodyUseAPI": [], "Fixed commit": "3757bc565a0d3ca98e016fcb763820ceef5f60e2", "Url": "https://api.github.com/repos/azurechen/android-flexible-calendar", "Date": "2015-08-07T03:07:29Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListener) != null) { mListener.onMonthChange(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3961/buggy-version/core.src.main.java.com.azurechen.fcalendar.widget.FlexibleCalendar.java", "BodyUseAPI": [], "Fixed commit": "3757bc565a0d3ca98e016fcb763820ceef5f60e2", "Url": "https://api.github.com/repos/azurechen/android-flexible-calendar", "Date": "2015-08-07T03:07:29Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListener) != null) { mListener.onMonthChange(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3961/buggy-version/core.src.main.java.com.azurechen.fcalendar.widget.FlexibleCalendar.java", "BodyUseAPI": [], "Fixed commit": "3757bc565a0d3ca98e016fcb763820ceef5f60e2", "Url": "https://api.github.com/repos/azurechen/android-flexible-calendar", "Date": "2015-08-07T03:07:29Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListener) != null) { mListener.onWeekChange(mCurrentWeekIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3961/buggy-version/core.src.main.java.com.azurechen.fcalendar.widget.FlexibleCalendar.java", "BodyUseAPI": [], "Fixed commit": "3757bc565a0d3ca98e016fcb763820ceef5f60e2", "Url": "https://api.github.com/repos/azurechen/android-flexible-calendar", "Date": "2015-08-07T03:07:29Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListener) != null) { mListener.onDataUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3961/buggy-version/core.src.main.java.com.azurechen.fcalendar.widget.FlexibleCalendar.java", "BodyUseAPI": [], "Fixed commit": "3757bc565a0d3ca98e016fcb763820ceef5f60e2", "Url": "https://api.github.com/repos/azurechen/android-flexible-calendar", "Date": "2015-08-07T03:07:29Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(goalVertices.isEmpty())) && (!(onGoalMission))) { startMission(goalVertices.remove(0)); onGoalMission = true; }else if (path.isEmpty()) { print(\"Path is finished, finding a new one.\"); if (onGoalMission) { onGoalMission = !(onGoalMission); } startMission(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5405/buggy-version/src.org.lannister.agents.Explorer.java", "BodyUseAPI": ["org.lannister.agents.Explorer.startMission(java.lang.String)", "java.util.List<java.lang.String>.remove(int)"], "Fixed commit": "4a48fe71ef772cdfd75ffb32c7a1f552bbb2cf7e", "Url": "https://api.github.com/repos/oguzdemir/Lannister", "Date": "2014-03-04T15:07:40Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nimbusds.oauth2.sdk.token.BearerAccessToken.getScope()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (scope != null) { return new org.pac4j.oidc.profile.OidcProfile.BearerAccessTokenBean(token.getValue(), token.getLifetime(), scope.toStringList()); }else { return new org.pac4j.oidc.profile.OidcProfile.BearerAccessTokenBean(token.getValue(), token.getLifetime(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2239/buggy-version/pac4j-oidc.src.main.java.org.pac4j.oidc.profile.OidcProfile.java", "BodyUseAPI": ["com.nimbusds.oauth2.sdk.Scope.toStringList()"], "Fixed commit": "00ac2e17d65ae3904e17e77db0e4a36a67e3f95b", "Url": "https://api.github.com/repos/pac4j/pac4j", "Date": "2016-01-06T10:51:37Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(Security.checkCRLFInjection((url + \" \")))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6064/buggy-version/src.Security.java", "BodyUseAPI": [], "Fixed commit": "38dede4fa35b7479e8919938561ce5076b2ae0be", "Url": "https://api.github.com/repos/delbarital/HTTP-Web-Server", "Date": "2014-12-24T01:30:03Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gcloud_app_prefix) != null) { commands.add(gcloud_app_prefix); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3254/buggy-version/src.main.java.com.google.appengine.gcloudapp.AbstractGcloudMojo.java", "BodyUseAPI": [], "Fixed commit": "bbc2c24d89ffc62daf9a90c26d9308112e9ba807", "Url": "https://api.github.com/repos/GoogleCloudPlatform/gcloud-maven-plugin", "Date": "2016-08-15T17:57:54Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i + 1) >= (de.maxgb.vertretungsplan.manager.StundenplanManager.BEGINN_NACHMITTAG)) { stunde.addView(newTextView(\"\")); }else { stunde.addView(newTextView(java.lang.Integer.toString((i + 1)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7277/buggy-version/src.de.maxgb.vertretungsplan.fragments.stundenplan.StundenplanFragment.java", "BodyUseAPI": ["de.maxgb.vertretungsplan.fragments.stundenplan.StundenplanFragment.newTextView(java.lang.String)", "android.widget.TableRow.addView(newTextView(java.lang.Integer.toString((i + 1))))", "java.lang.Integer.toString(int)"], "Fixed commit": "98119cd034ec9aaffafbce7f04d920532ccdf800", "Url": "https://api.github.com/repos/maxanier/Vertretungsplan", "Date": "2014-01-20T18:02:26Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wasLooperNull) { android.os.Looper.loop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5709/buggy-version/dexter.src.main.java.com.karumi.dexter.WorkerThread.java", "BodyUseAPI": [], "Fixed commit": "9e5dd2d58ea1691b4d5628c01b7ce7df0e73b542", "Url": "https://api.github.com/repos/Coppernic/Dexter", "Date": "2017-05-12T13:11:42Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fortysevendeg.swipelistview.SwipeListView.getChildAt((position - (swipeListView.getFirstVisiblePosition())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (childAt == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/754/buggy-version/swipelistview.src.com.fortysevendeg.swipelistview.SwipeListViewTouchListener.java", "BodyUseAPI": [], "Fixed commit": "766ab8309f25f5ae110717e0d33d44fe5fef1d69", "Url": "https://api.github.com/repos/SunRain/android-swipelistview", "Date": "2014-02-19T19:38:20Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fortysevendeg.swipelistview.SwipeListView.getChildAt((position - (swipeListView.getFirstVisiblePosition())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (childAt == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/754/buggy-version/swipelistview.src.com.fortysevendeg.swipelistview.SwipeListViewTouchListener.java", "BodyUseAPI": [], "Fixed commit": "766ab8309f25f5ae110717e0d33d44fe5fef1d69", "Url": "https://api.github.com/repos/SunRain/android-swipelistview", "Date": "2014-02-19T19:38:20Z"},
{"Line": "=>1987", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ch) == 'D') || ((ch) == 'F')) { ch = buf[(++(bp))]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4776/buggy-version/src.main.java.com.alibaba.fastjson.parser.JSONScanner.java", "BodyUseAPI": [], "Fixed commit": "f845629d63a7d23209c5f71a7346ecb93eed4ca0", "Url": "https://api.github.com/repos/AlibabaTech/fastjson", "Date": "2012-07-13T01:01:04Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mendix.systemwideinterfaces.core.IMendixObject.getValue(com.mendix.systemwideinterfaces.core.IContext,User.MemberNames.Name.toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((username == null) || (username.isEmpty())) throw new java.lang.IllegalStateException(\"Trying to authenticate a user without a name\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8763/buggy-version/javasource.restservices.publish.RestServiceRequest.java", "BodyUseAPI": [], "Fixed commit": "5dc6a68e02f03ded13851a7ab9bedd179087f222", "Url": "https://api.github.com/repos/mendix/RestServices", "Date": "2014-06-20T18:19:40Z"},
{"Line": "=>1934", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getSelectedColumn()", "javax.swing.JTable.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((row > (-1)) && (col > (-1))) { try { int freq = bandmapQsoTableModel.cellToFreq(row, col); radioController.setFrequency(freq); initEntryFields(); } catch (java.lang.Exception ex) { java.util.logging.Logger.getLogger(org.lz1aq.lzhfqrp.MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4156/buggy-version/src.main.java.org.lz1aq.lzhfqrp.MainWindow.java", "BodyUseAPI": ["org.lz1aq.lzhfqrp.BandmapTableModel.cellToFreq(int,int)"], "Fixed commit": "b9952580ccbc4f6d5513967c0a4606bc65069e91", "Url": "https://api.github.com/repos/potty-dzmeia/jatu", "Date": "2017-06-04T20:41:18Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((update.getComponents()) != null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8832/buggy-version/src.main.java.it.polimi.modaclouds.monitoring.monitoring_manager.MonitoringManager.java", "BodyUseAPI": [], "Fixed commit": "af22d21baeacc0cee0a89196f255eaa280fff775", "Url": "https://api.github.com/repos/deib-polimi/modaclouds-monitoring-manager", "Date": "2014-07-04T09:36:29Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((update.getVms()) != null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8832/buggy-version/src.main.java.it.polimi.modaclouds.monitoring.monitoring_manager.MonitoringManager.java", "BodyUseAPI": [], "Fixed commit": "af22d21baeacc0cee0a89196f255eaa280fff775", "Url": "https://api.github.com/repos/deib-polimi/modaclouds-monitoring-manager", "Date": "2014-07-04T09:36:29Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((update.getExternalComponents()) != null) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8832/buggy-version/src.main.java.it.polimi.modaclouds.monitoring.monitoring_manager.MonitoringManager.java", "BodyUseAPI": [], "Fixed commit": "af22d21baeacc0cee0a89196f255eaa280fff775", "Url": "https://api.github.com/repos/deib-polimi/modaclouds-monitoring-manager", "Date": "2014-07-04T09:36:29Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((callsAdapter) != null) && (calls != null)) callsAdapter.notify(calls);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3655/buggy-version/app.src.main.java.com.whois.whoiswho.screens.calls.CallFragment.java", "BodyUseAPI": ["com.whois.whoiswho.screens.calls.CallsAdapter.notify(java.util.ArrayList<com.whois.whoiswho.model.Call>)"], "Fixed commit": "f3f253b35462f855dd35e04eaf11be978b99fb1e", "Url": "https://api.github.com/repos/Patrick7893/whoIsIt", "Date": "2016-09-05T09:51:10Z"},
{"Line": "=>770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (grader.basics.project.BasicProjectIntrospection.isPredefinedType(aProxyClass)) return aProxyClass;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5872/buggy-version/src.grader.basics.project.BasicProjectIntrospection.java", "BodyUseAPI": [], "Fixed commit": "9b1a9f4748eb5ca663f4d312561ab0dd6e4fbb38", "Url": "https://api.github.com/repos/pdewan/GraderBasics", "Date": "2016-10-26T21:28:38Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["portalBundle.getOSGiBundlesDir().append(\"modules\").append((hostBundleName + \".jar\")).toFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(hostBundle.exists())) { hostBundle = com.liferay.ide.gradle.core.GradleCore.getDefault().getStateLocation().append((hostBundleName + \".jar\")).toFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6470/buggy-version/tools.plugins.com.liferay.ide.gradle.core.src.com.liferay.ide.gradle.core.modules.NewModuleFragmentFilesOpMethods.java", "BodyUseAPI": [], "Fixed commit": "7cebdf466435eff3efd80c71c48b0fc08f1423b4", "Url": "https://api.github.com/repos/gamerson/liferay-ide", "Date": "2016-09-09T10:04:33Z"},
{"Line": "=>793", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((msg.getDirection().equals(\"Rx\")) && (!(msg.getPairedMsg().is664Msg()))) { eDestMsg.setAttribute(\"MessageDestID\", msg.getPairedMsg().getGuid()); eDestMsg.setAttribute(\"DestPort\", msg.getPairedMsg().getPort().getName()); eDestMsg.setAttribute(\"DestPortGuid\", msg.getPairedMsg().getPort().getGuid()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7032/buggy-version/src.main.java.dima.model.businesslogic.ICDConverter.java", "BodyUseAPI": ["msg.getPairedMsg().getPort()", "msg.getPairedMsg().getPort().getGuid()", "msg.getPairedMsg().getGuid()", "org.w3c.dom.Element.setAttribute(java.lang.String,msg.getPairedMsg().getGuid())", "msg.getPairedMsg().getPort().getName()", "dima.model.businesslogic.datamodel.Message.getPairedMsg()", "org.w3c.dom.Element.setAttribute(java.lang.String,msg.getPairedMsg().getPort().getName())", "msg.getPairedMsg().getPort()", "dima.model.businesslogic.datamodel.Message.getPairedMsg()", "dima.model.businesslogic.datamodel.Message.getPairedMsg()", "org.w3c.dom.Element.setAttribute(java.lang.String,msg.getPairedMsg().getPort().getGuid())"], "Fixed commit": "f593e95008b6dc6ea6a6e083fcddce8f696af1de", "Url": "https://api.github.com/repos/yind07/afdxTool", "Date": "2017-12-28T04:08:10Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.example.moneytracker.database.model.Expenses.getAllExpenses().isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4329/buggy-version/app.src.main.java.com.example.moneytracker.sync.ExpensesSync.java", "BodyUseAPI": [], "Fixed commit": "af2b3cf1cf6ef503f8bd865d7688a94ef3fc9d5b", "Url": "https://api.github.com/repos/pashko00710/MoneyTracker", "Date": "2016-06-15T09:02:25Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((cube.getUp().getGrid()[1][2]) == (Cube.Color.ORANGE)) && ((cube.getUp().getGrid()[2][1]) == (Cube.Color.ORANGE))) { Logic.executeCMD(cmd.CMD_RIGHT_ROTATE, actions, cube); Logic.executeCMD(cmd.CMD_RIGHT_ROTATE, actions, cube); Logic.twoNearInPlace(actions, cube); Logic.executeCMD(cmd.CMD_RIGHT_ROTATE, actions, cube); Logic.executeCMD(cmd.CMD_RIGHT_ROTATE, actions, cube); }else if (((cube.getUp().getGrid()[1][0]) == (Cube.Color.ORANGE)) && ((cube.getUp().getGrid()[2][1]) == (Cube.Color.ORANGE))) { Logic.executeCMD(cmd.CMD_LEFT_ROTATE, actions, cube); Logic.twoNearInPlace(actions, cube); Logic.executeCMD(cmd.CMD_RIGHT_ROTATE, actions, cube); }else { Logic.noneInPlace(actions, cube); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5026/buggy-version/src.Logic.java", "BodyUseAPI": ["Cube.getUp()", "Logic.twoNearInPlace(java.util.List<cmd>,Cube)", "Logic.executeCMD(cmd.CMD_RIGHT_ROTATE,java.util.List<cmd>,Cube)", "Logic.noneInPlace(java.util.List<cmd>,Cube)", "Cube.getUp()", "Logic.executeCMD(cmd.CMD_RIGHT_ROTATE,java.util.List<cmd>,Cube)", "cube.getUp().getGrid()", "Logic.executeCMD(cmd.CMD_LEFT_ROTATE,java.util.List<cmd>,Cube)", "Logic.executeCMD(cmd.CMD_RIGHT_ROTATE,java.util.List<cmd>,Cube)", "Logic.executeCMD(cmd.CMD_RIGHT_ROTATE,java.util.List<cmd>,Cube)", "cube.getUp().getGrid()", "Logic.executeCMD(cmd.CMD_RIGHT_ROTATE,java.util.List<cmd>,Cube)", "Logic.twoNearInPlace(java.util.List<cmd>,Cube)"], "Fixed commit": "45b6d074b55c5fb0997b76d73c4a63bc364b7af1", "Url": "https://api.github.com/repos/UriSha/rubiksCube", "Date": "2017-11-25T22:34:20Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((searchAlgorithm.getExpanded().size()) > (maxExpandedSize)) maxExpandedSize = searchAlgorithm.getExpanded().size();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6911/buggy-version/src.dac28.controller.AlgorithmController.java", "BodyUseAPI": ["dac28.model.SearchAlgorithm.getExpanded()", "searchAlgorithm.getExpanded().size()"], "Fixed commit": "b494b37aec85615b7adf2fa4e0a07542339db8e5", "Url": "https://api.github.com/repos/DanCornwell/AI_Search_Techniques_Visualisation", "Date": "2014-04-12T23:38:03Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.stanford.bmir.protege.web.server.app.WebProtegeProperties.get().getApplicationHostName().or(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(host.isEmpty())) { sb.append(\" http://\"); sb.append(host); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5073/buggy-version/src.edu.stanford.bmir.protege.web.server.owlapi.RevisionMetadataAnnotater.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "0d7aba3d6874f22e46763abddc004c1ea7e689ee", "Url": "https://api.github.com/repos/protegeproject/webprotege", "Date": "2013-08-12T23:50:59Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t instanceof com.ringov.yatrnsltr.exceptions.NoInternetConnectionException) { getView().showInternetConnectionException(t.getLocalizedMessage()); }else { getView().showKnownException(t.getLocalizedMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6443/buggy-version/app.src.main.java.com.ringov.yatrnsltr.base.ExceptionHandler.java", "BodyUseAPI": ["com.ringov.yatrnsltr.base.interfaces.BaseView.showInternetConnectionException(java.lang.String)", "java.lang.Throwable.getLocalizedMessage()", "java.lang.Throwable.getLocalizedMessage()", "com.ringov.yatrnsltr.base.interfaces.BaseView.showKnownException(java.lang.String)"], "Fixed commit": "c3483473aa4611928ad011b35dbf6870fc5626e5", "Url": "https://api.github.com/repos/3DRing/YaTrnsltr", "Date": "2017-04-19T06:22:53Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eu.irreality.age.SwingAetheriaGameLoaderInterface.font) == null) eu.irreality.age.SwingAetheriaGameLoaderInterface.font = new java.awt.Font(fontName, java.awt.Font.PLAIN, fontSize);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6909/buggy-version/age.src.eu.irreality.age.SwingAetheriaGameLoaderInterface.java", "BodyUseAPI": [], "Fixed commit": "c4f76d3d2c14a9c0e8d7e84a182d8711038193ed", "Url": "https://api.github.com/repos/komoku/aetheria", "Date": "2016-12-25T23:38:10Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spongepowered.api.util.command.dispatcher.SimpleDispatcher.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mapping.isPresent()) { java.util.List<java.lang.String> ret = mapping.get().getCallable().getSuggestions(source, ((parts.length) > 1 ? parts[1] : \"\")); if (ret == null) { suggestions.addAll(ret); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5964/buggy-version/src.main.java.org.spongepowered.api.util.command.dispatcher.SimpleDispatcher.java", "BodyUseAPI": ["mapping.get().getCallable()", "com.google.common.base.Optional<org.spongepowered.api.util.command.CommandMapping>.get()", "mapping.get().getCallable().getSuggestions(org.spongepowered.api.util.command.CommandSource,((parts.length) > 1 ? parts[1] : \"\"))"], "Fixed commit": "817e7aad9ad4454dc9d542321358e194cf1c03a0", "Url": "https://api.github.com/repos/kenzierocks/SpongeAPI", "Date": "2015-04-03T04:46:45Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<no.uib.probe.csf.pr.touch.logic.beans.QuantDiseaseGroupsComparison, no.uib.probe.csf.pr.touch.logic.beans.QuantDiseaseGroupsComparison>.get(updatedComparisonList.get((row - 1)))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (comp != null) { updatedComparisonList.set((row - 1), comp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3321/buggy-version/CSF-PR-2.0-Touch.src.main.java.no.uib.probe.csf.pr.touch.view.components.datasetfilters.GroupSwitchBtn.java", "BodyUseAPI": ["java.util.ArrayList<no.uib.probe.csf.pr.touch.logic.beans.QuantDiseaseGroupsComparison>.set(int,no.uib.probe.csf.pr.touch.logic.beans.QuantDiseaseGroupsComparison)"], "Fixed commit": "8e0a6a2b78b88ca993a39000c94ab67ec20a03fd", "Url": "https://api.github.com/repos/yehiafarag/csf-pr-uib", "Date": "2016-11-15T12:37:27Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.DateFormat.toPattern()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(localizedDatePattern.contains(\"yyyy\"))) { localizedDatePattern = localizedDatePattern.replace(\"yy\", \"yyyy\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3708/buggy-version/trickyTripper.src.de.koelle.christian.common.utils.DateUtils.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "6d9224cdbe309647a1dc127e80ee7e54338f1f24", "Url": "https://api.github.com/repos/koelleChristian/trickytripper", "Date": "2013-04-05T17:36:59Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Main.nms.supportsScoreboardTags()) { com.gmail.St3venAU.plugins.ArmorStandTools.ArmorStandCmd.cloneASCommand(as, clone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4025/buggy-version/src.com.gmail.St3venAU.plugins.ArmorStandTools.NMS.java", "BodyUseAPI": [], "Fixed commit": "d2864564897a45130886bd6b0e7b29c6c1480186", "Url": "https://api.github.com/repos/St3venAU/ArmorStandTools", "Date": "2017-07-02T09:37:31Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((rresult) != null) && (!(rresult.getBestFinalResultNoFiller().equals(\"\")))) calcScreen.setText(rresult.getBestFinalResultNoFiller()); else { calcScreen.setText(\"\"); textField.setText((\"Sound not detected \\n\" + \"correctly please try again\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5063/buggy-version/sphinx4-1.0beta5.src.apps.edu.cmu.sphinx.demo.calculator0701.Gui.java", "BodyUseAPI": ["edu.cmu.sphinx.result.Result.getBestFinalResultNoFiller()", "javax.swing.JTextField.setText(rresult.getBestFinalResultNoFiller())"], "Fixed commit": "892a6963cbc06568ef804f3a4f9939300ec99071", "Url": "https://api.github.com/repos/zoheiry/ACL_calculator", "Date": "2014-11-23T20:04:15Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(enableChannelChat)) { LunaChat.manager.removeAllDefaultChannels(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5517/buggy-version/src.main.java.com.github.ucchyocean.lc.LunaChatConfig.java", "BodyUseAPI": [], "Fixed commit": "76e31c96ded0dec49c40f3d2bc9a963d7b31527c", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2013-11-14T13:59:21Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((responseData.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6243/buggy-version/Fantail.src.main.java.com.aurynn.fantail.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f9b8cf653715da36b5546d566652040ff426e4e6", "Url": "https://api.github.com/repos/aurynn/fantail", "Date": "2013-11-16T08:43:43Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.unibz.inf.ontop.owlapi.TargetQueryValidator.isCanonicalIRI(it.unibz.inf.ontop.model.Predicate)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isCanonicalIRI) { predicate = dataFactory.getOntopCanonicalIRI(); debugMsg += \" is the ontop:is_canonical_iri_of property.\"; }else { predicate = dataFactory.getPredicate(p.getName(), atom.getArity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3953/buggy-version/obdalib-owlapi3.src.main.java.it.unibz.inf.ontop.owlapi.TargetQueryValidator.java", "BodyUseAPI": [], "Fixed commit": "e4872eb2be2bc78e001de1589e542ecf073989fe", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2016-10-05T10:59:57Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (it.unibz.inf.ontop.owlrefplatform.core.QuestUnfolder.log.isDebugEnabled()) { java.lang.String finalMappings = com.google.common.base.Joiner.on(\"\\n\").join(unfoldingProgram); it.unibz.inf.ontop.owlrefplatform.core.QuestUnfolder.log.debug(\"Set of mappings before canonical URI rewriting: \\n {}\", finalMappings); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3953/buggy-version/reformulation-core.src.main.java.it.unibz.inf.ontop.owlrefplatform.core.QuestUnfolder.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String)"], "Fixed commit": "e4872eb2be2bc78e001de1589e542ecf073989fe", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2016-10-05T10:59:57Z"},
{"Line": "=>715", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.math.BigDecimal>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((x.compareTo(java.math.BigDecimal.ZERO)) == 0) { return new java.math.BigDecimal(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3711/buggy-version/src.com.udojava.evalex.Expression.java", "BodyUseAPI": [], "Fixed commit": "bca37c28a22b49ec191f3c82fce643baa60f5fe9", "Url": "https://api.github.com/repos/uklimaschewski/EvalEx", "Date": "2013-10-04T10:11:07Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDeviceSupported())) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/9177/buggy-version/app.src.main.java.com.kdb.ledcontrol.LEDManager.java", "BodyUseAPI": [], "Fixed commit": "f48cb0493996453d13cbf19c94f2151c7be96489", "Url": "https://api.github.com/repos/KDB223/LEDControl", "Date": "2015-02-07T12:38:01Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isDeviceSupported())) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/9177/buggy-version/app.src.main.java.com.kdb.ledcontrol.LEDManager.java", "BodyUseAPI": [], "Fixed commit": "f48cb0493996453d13cbf19c94f2151c7be96489", "Url": "https://api.github.com/repos/KDB223/LEDControl", "Date": "2015-02-07T12:38:01Z"},
{"Line": "=>413", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (planarRegionsList == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2890/buggy-version/IHMCGraphics3DDescription.src.us.ihmc.graphics3DDescription.yoGraphics.YoGraphicPlanarRegionsList.java", "BodyUseAPI": [], "Fixed commit": "8209ec6919a7d977e4778a45c173da4938a51f01", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2016-12-06T22:41:33Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageView) != null) { android.graphics.Bitmap bitmap = ((android.graphics.drawable.BitmapDrawable) (imageView.getDrawable())).getBitmap(); double ratio = ((double) (bitmap.getHeight())) / ((double) (bitmap.getWidth())); double newWidth = (com.example.architecture.bad.myfigurecollection.util.CodeUtils.getScreenWidth(this)) * ratio; imageView.getLayoutParams().height = ((int) (newWidth)); imageView.requestLayout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1198/buggy-version/app.src.main.java.com.example.architecture.bad.myfigurecollection.figuredetail.FigureDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "f001daf625e32d885f4cd91fb20b57c1f5ddcdab", "Url": "https://api.github.com/repos/spawn150/myfigurecollection-bad-architecture", "Date": "2016-12-20T18:28:05Z"},
{"Line": "=>901", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (profile == null) { sb.append(com.photon.phresco.plugins.STR_SPACE).append(\"-Dsonar.branch=\").append(value).append(appInfo.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2197/buggy-version/plugin-commons.src.main.java.com.photon.phresco.plugins.PhrescoBasePlugin.java", "BodyUseAPI": [], "Fixed commit": "b43774bdd08c854a87e2db6034d84cff4cc63619", "Url": "https://api.github.com/repos/photon-infotech/plugins", "Date": "2014-06-18T12:04:27Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getView()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5139/buggy-version/src.com.learnit.LearnIt.fragments.DictFragment.java", "BodyUseAPI": [], "Fixed commit": "1bcaa6850425a727df309f1d2a111aa079afe177", "Url": "https://api.github.com/repos/niosus/LearnIt", "Date": "2014-11-09T15:23:21Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((words == null) || (!(this.isAdded()))) { ((android.widget.ListView) (this.getView().findViewById(R.id.list_of_add_words))).setAdapter(null); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5139/buggy-version/src.com.learnit.LearnIt.fragments.AddWordFragment.java", "BodyUseAPI": [], "Fixed commit": "1bcaa6850425a727df309f1d2a111aa079afe177", "Url": "https://api.github.com/repos/niosus/LearnIt", "Date": "2014-11-09T15:23:21Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (accept(org.flavio.pl0.LPAREN)) { do { if (accept(org.flavio.pl0.STRING)) { }else { expression(baseAndOffset); } } while (accept(org.flavio.pl0.COMMA) ); expect(org.flavio.pl0.RPAREN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/595/buggy-version/src.main.java.org.flavio.pl0.Parser.java", "BodyUseAPI": [], "Fixed commit": "d31b433454dcb79ec49ee6d4f5523d5d18056ff7", "Url": "https://api.github.com/repos/flaviooliveri/pl0-java8", "Date": "2015-11-07T15:44:14Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentByte.startsWith(\"1\")) { currentByte = \"-\" + (numstr.substring(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6375/buggy-version/Chat.src.Messages.Message.java", "BodyUseAPI": [], "Fixed commit": "0c5cac47eeb17b07f2d23eb00108de41900c3c67", "Url": "https://api.github.com/repos/ragnarok089/CS544", "Date": "2013-06-07T23:48:49Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e instanceof java.sql.BatchUpdateException) { if ((e.getNextException()) != null) { e = e.getNextException(); }else if ((e.getCause()) instanceof java.sql.SQLException) { e = ((java.sql.SQLException) (e.getCause())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3277/buggy-version/exo.jcr.component.core.src.main.java.org.exoplatform.services.jcr.impl.storage.jdbc.SQLExceptionHandler.java", "BodyUseAPI": ["java.sql.SQLException.getNextException()", "java.sql.SQLException.getNextException()"], "Fixed commit": "833265f0b91cca75391e5d2abea2e73429fe7f25", "Url": "https://api.github.com/repos/exodev/jcr", "Date": "2012-11-14T08:53:57Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListener) != null) { mListener.onChange(status); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5289/buggy-version/app.src.main.java.com.dolphinwang.switchbutton.SwitchButton.java", "BodyUseAPI": [], "Fixed commit": "db0de61dc2085c0ed415ce66be5adaa7f5b5ff20", "Url": "https://api.github.com/repos/dolphinwang/SwitchButton", "Date": "2014-07-15T11:37:56Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(\"\".equalsIgnoreCase(status))) && (!(\"null\".equalsIgnoreCase(status)))) { airticket.setStatus(java.lang.Integer.parseInt(status)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8306/buggy-version/src.java.com.smi.travel.controller.RefundAirlineController.java", "BodyUseAPI": ["com.smi.travel.datalayer.entity.RefundAirticket.setStatus(int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "cfac76646eec7e8833cc8cf8b72060ef3fdcfe18", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-12-16T07:38:00Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((marker.getMagnitude()) > (this.getMagnitude())) { return BIGGER; }else if ((marker.getMagnitude()) < (this.getMagnitude())) { return SMALLER; }else { return EQUAL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3684/buggy-version/src.module6.EarthquakeMarker.java", "BodyUseAPI": ["module6.EarthquakeMarker.getMagnitude()"], "Fixed commit": "c4c17e02fa18b44d46482c7e1f4000393306458c", "Url": "https://api.github.com/repos/mabbie/UCSDUnfoldingMaps", "Date": "2016-07-04T04:41:43Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(stockEventDto.hasReason())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6350/buggy-version/src.main.java.org.openlmis.stockmanagement.validators.AdjustmentReasonValidator.java", "BodyUseAPI": [], "Fixed commit": "203f79a7f481a4a5769073fd5b79f69108353409", "Url": "https://api.github.com/repos/OpenLMIS/openlmis-stockmanagement", "Date": "2017-02-22T04:09:26Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(eventDto.hasReason())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6350/buggy-version/src.main.java.org.openlmis.stockmanagement.validators.ReceiveIssueReasonValidator.java", "BodyUseAPI": [], "Fixed commit": "203f79a7f481a4a5769073fd5b79f69108353409", "Url": "https://api.github.com/repos/OpenLMIS/openlmis-stockmanagement", "Date": "2017-02-22T04:09:26Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list_adapter) != null) { java.util.ArrayList<java.lang.String> list_get = list_adapter.getlist(); if (list_get != null) { for (int i = 0; i < (list_get.size()); i++) { if (i == 0) { type_check = list_get.get(i); }else { type_check = (type_check) + (list_get.get(i)); } if (i != ((list_get.size()) - 1)) { type_check = (type_check) + \",\"; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4546/buggy-version/app.src.main.java.com.Senior.Faff.RestaurantProfile.Add_RestaurantProfile.java", "BodyUseAPI": [], "Fixed commit": "b6b82f40b317fc6abea6b8d4a4e83cb7a38f4eec", "Url": "https://api.github.com/repos/shaman1412/Senior", "Date": "2017-04-17T05:49:31Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (read == 0) throw new java.io.IOException(\"Message null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5189/buggy-version/src.webserver.chat.ChatHandler.java", "BodyUseAPI": [], "Fixed commit": "9f8f997114cd16b683ea0d8d2f5e29d3184d7f6a", "Url": "https://api.github.com/repos/krisraich/WebRadio", "Date": "2017-03-09T10:31:57Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.entity.Player.getItemInHand()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.getAmount()) == 1) { player.setItemInHand(new org.bukkit.inventory.ItemStack(0)); }else { item.setAmount(((item.getAmount()) - 1)); player.setItemInHand(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/13/buggy-version/src.main.java.fr.aumgn.diamondrush.stage.listeners.FightListener.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.setAmount(((item.getAmount()) - 1))", "org.bukkit.entity.Player.setItemInHand(org.bukkit.inventory.ItemStack)", "org.bukkit.inventory.ItemStack.getAmount()"], "Fixed commit": "b7aea94b10e8d038f5c8e8b29ae6a2164df96d6a", "Url": "https://api.github.com/repos/aumgn/DiamondRush", "Date": "2012-04-15T07:53:34Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getParameterTypes()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(funcParamTypes[i].isAssignableFrom(parameters[i].getClass()))) { parameters[i] = com.yukthi.utils.ConvertUtils.convert(parameters[i], funcParamTypes[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5657/buggy-version/yukthi-utils.src.main.java.com.yukthi.utils.expr.SimpleJavaFunction.java", "BodyUseAPI": ["com.yukthi.utils.ConvertUtils.convert(java.lang.Object,java.lang.Class<?>)"], "Fixed commit": "f9f8a27cc137f8162d81584b21fd90827e4550c0", "Url": "https://api.github.com/repos/yukthitech/utils", "Date": "2016-05-06T02:02:15Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFiltered) { net.sf.jasperreports.engine.JRDataSource jrDataSource = new net.sf.jasperreports.engine.data.JRBeanCollectionDataSource(allocationList, false); parameterMap.put(\"dataSource\", jrDataSource); mv = new org.springframework.web.servlet.ModelAndView(\"pdfReportf2\", parameterMap); }else if ((!(isFiltered)) && ((reportStartDate.equals(null)) && (reportEndDate.equals(null)))) { allocationList = allocationService.getAllocationList(); net.sf.jasperreports.engine.JRDataSource jrDataSource = new net.sf.jasperreports.engine.data.JRBeanCollectionDataSource(allocationList, false); parameterMap.put(\"dataSource\", jrDataSource); mv = new org.springframework.web.servlet.ModelAndView(\"pdfReportf2\", parameterMap); }else { net.sf.jasperreports.engine.JRDataSource jrDataSource = new net.sf.jasperreports.engine.data.JRBeanCollectionDataSource(projectList, false); parameterMap.put(\"dataSource\", jrDataSource); mv = new org.springframework.web.servlet.ModelAndView(\"pdfReportAlloc\", parameterMap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2254/buggy-version/src.main.java.novare.com.hk.controller.AllocationController.java", "BodyUseAPI": [], "Fixed commit": "38324618e0373cca1f00d4ba1a6e3f8e6878b3cc", "Url": "https://api.github.com/repos/zeroninekai/HrSystem", "Date": "2014-10-14T08:58:16Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getCause().first(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((optDamageSource.get()) instanceof org.spongepowered.api.event.cause.entity.damage.source.EntityDamageSource) { srcEntity = ((org.spongepowered.api.event.cause.entity.damage.source.EntityDamageSource) (optDamageSource.get())).getSource(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6084/buggy-version/src.main.java.com.skelril.nitro.combat.PlayerCombatParser.java", "BodyUseAPI": ["java.util.Optional<org.spongepowered.api.event.cause.entity.damage.source.DamageSource>.get()", "((org.spongepowered.api.event.cause.entity.damage.source.EntityDamageSource) (optDamageSource.get())).getSource()"], "Fixed commit": "45c8499a25937284ce18fe1e8a809b7afa87a681", "Url": "https://api.github.com/repos/Skelril/Skree", "Date": "2016-03-20T23:32:04Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.publicuhc.ultrahardcore.pluginfeatures.playerheads.Location.getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((headBlock.getY()) < 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6852/buggy-version/src.main.java.com.publicuhc.ultrahardcore.pluginfeatures.playerheads.PlayerHeadsFeature.java", "BodyUseAPI": [], "Fixed commit": "22dec2c6460c6df7977707edc2a5fd21d9e4a9a6", "Url": "https://api.github.com/repos/Eluinhost/ultrahardcore", "Date": "2014-07-17T21:29:32Z"},
{"Line": "=>894", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((connectorGRElement.getChild(\"CurvedPolylinConnector\")) != null) { grSpec = connectorGRElement.getChild(\"CurvedPolylinConnector\"); }else if ((connectorGRElement.getChild(\"ArcConnector\")) != null) { grSpec = connectorGRElement.getChild(\"ArcConnector\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/137/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.viewpoint.rm.ViewPointResourceImpl.java", "BodyUseAPI": ["org.jdom2.Element.getChild(java.lang.String)", "org.jdom2.Element.getChild(java.lang.String)", "org.jdom2.Element.getChild(java.lang.String)"], "Fixed commit": "0e736110cddf43c64c26ad45532e76510bab6b5f", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2014-04-23T08:48:21Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.countDownTimer) != null) { this.countDownTimer.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1065/buggy-version/app.src.main.java.com.greghilston.rsicompanion.ExerciseModel.java", "BodyUseAPI": [], "Fixed commit": "fbc58b7d802779a86afe6e3882c415455c47bab3", "Url": "https://api.github.com/repos/GregHilston/rsi-companion", "Date": "2016-09-05T01:22:47Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((mSize) <= 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3031/buggy-version/app.src.main.java.com.apps4av.avarehelper.gdl90.FisBuffer.java", "BodyUseAPI": [], "Fixed commit": "ac92bb38aab4f6b52caeb3257e6bf17c738ba5f5", "Url": "https://api.github.com/repos/apps4av/avarehelper", "Date": "2017-07-24T16:35:20Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.hasPermission(\"hungergames.kits.use\")) { inventory.addItem(HungerGames.kitSelector); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/233/buggy-version/src.fr.skyost.hungergames.HungerGamesAPI.java", "BodyUseAPI": [], "Fixed commit": "02f9567868753e9888102eebc5751f3906947d63", "Url": "https://api.github.com/repos/Skyost/Project-HungerGames", "Date": "2014-04-02T16:24:55Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gruppenComboBox_.getSelectionModel().getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (selected == null) { spielerNotInGruppeListView_.getItems().setAll(spielerList_); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5853/buggy-version/Source.src.view.controller.GruppenmanagerController.java", "BodyUseAPI": [], "Fixed commit": "096a202b15a1e3ff99160ab964116e4544f47fcf", "Url": "https://api.github.com/repos/SWT-Projektgruppe-2015/Rollenspielmanager", "Date": "2015-06-03T18:10:27Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((records.size()) >= (MAX_HEIGH_SCORES)) records.remove(records.get(((records.size()) - 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/76/buggy-version/app.src.main.java.com.example.ori9933.minesweeper.UserRecordsManager.java", "BodyUseAPI": ["java.util.List<com.example.ori9933.minesweeper.Record>.remove(records.get(((records.size()) - 1)))", "java.util.List<com.example.ori9933.minesweeper.Record>.size()", "java.util.List<com.example.ori9933.minesweeper.Record>.get(((records.size()) - 1))"], "Fixed commit": "464cff8f74c32abeb6b8dc7c83fc56eec4eed5c4", "Url": "https://api.github.com/repos/ori9933/MineSweeper", "Date": "2016-01-04T20:38:23Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.j256.ormlite.dao.Dao<model.Warenbewegung, java.lang.Integer>.query(com.j256.ormlite.stmt.PreparedQuery<model.Warenbewegung>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((wbResult.size()) > 0) { for (int i = 0; i < (wbResult.size()); i++) { result.add(wbResult.get(i).getLagerbestand()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6360/buggy-version/helper.Misc.java", "BodyUseAPI": ["java.util.List<model.Lagerbestand>.add(wbResult.get(i).getLagerbestand())", "wbResult.get(i).getLagerbestand()", "java.util.List<model.Warenbewegung>.get(int)", "java.util.List<model.Warenbewegung>.size()"], "Fixed commit": "283457c1cd49938bba8d1344e089e0a30cc94868", "Url": "https://api.github.com/repos/lagerverwaltung/lagerverwaltung", "Date": "2014-01-07T21:04:59Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player instanceof net.minecraftforge.common.util.FakePlayer)) { moze_intel.projecte.network.PacketHandler.HANDLER.sendTo(msg, player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1767/buggy-version/src.main.java.moze_intel.projecte.network.PacketHandler.java", "BodyUseAPI": ["cpw.mods.fml.common.network.simpleimpl.SimpleNetworkWrapper.sendTo(cpw.mods.fml.common.network.simpleimpl.IMessage,net.minecraft.entity.player.EntityPlayerMP)"], "Fixed commit": "f045dbf9cdb249f0fe4efd585bf9aefcfaa252d4", "Url": "https://api.github.com/repos/williewillus/ProjectE", "Date": "2015-03-26T06:30:45Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((outputFile.getParentFile()) != null) { outputFile.getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4243/buggy-version/src.com.homework.file.write.XmlFileWriter.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.getParentFile()"], "Fixed commit": "03116dab94c692df22e4007cd0839327baa6096d", "Url": "https://api.github.com/repos/Kisielisviktoras/DecathlonApplication", "Date": "2016-12-19T16:36:13Z"},
{"Line": "=>626", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rightFencer.getScore()) < (mMode)) rightFencer.addScore();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3070/buggy-version/app.src.main.java.com.ethanmad.engarde.MainActivity.java", "BodyUseAPI": ["com.ethanmad.engarde.Fencer.addScore()"], "Fixed commit": "b2da073de84bc43c11f85b1b2527d62e849d2f2d", "Url": "https://api.github.com/repos/ethanmad/En-Garde", "Date": "2014-08-31T07:29:56Z"},
{"Line": "=>651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((leftFencer.getScore()) < (mMode)) leftFencer.addScore();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3070/buggy-version/app.src.main.java.com.ethanmad.engarde.MainActivity.java", "BodyUseAPI": ["com.ethanmad.engarde.Fencer.addScore()"], "Fixed commit": "b2da073de84bc43c11f85b1b2527d62e849d2f2d", "Url": "https://api.github.com/repos/ethanmad/En-Garde", "Date": "2014-08-31T07:29:56Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mrjaffesclass.othello.Player.getNextMove(com.mrjaffesclass.othello.Board)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (nextMove != null) { java.lang.System.out.println((((playerToMove.toString()) + \" MOVE to \") + (nextMove.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7327/buggy-version/src.com.mrjaffesclass.othello.Controller.java", "BodyUseAPI": ["java.io.PrintStream.println((((playerToMove.toString()) + \" MOVE to \") + (nextMove.toString())))", "com.mrjaffesclass.othello.Position.toString()"], "Fixed commit": "b1540aa3f2598aa3f8d4bef78bb0b838a6fd66b4", "Url": "https://api.github.com/repos/JaffeAPCS/Othello", "Date": "2017-11-28T06:13:14Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((key) == 'f') || ((key) == 'F')) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1907/buggy-version/SoftModelling_Tools.src.softmodelling.SoftModelling.java", "BodyUseAPI": [], "Fixed commit": "16c43d3699b9cedcb3936664d71e29cac2c9aa3d", "Url": "https://api.github.com/repos/emeidiem/SoftModelling", "Date": "2014-09-10T10:24:09Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((key) == 'e') || ((key) == 'E')) { wblut.hemesh.HET_Export.saveToOBJ(mesh, this.sketchPath(((((((((((((((\"data/Meshes/SoftModelling_mesh_\" + (this.year())) + \"-\") + (this.month())) + \"-\") + (this.day())) + \"_\") + (this.hour())) + \"-\") + (this.minute())) + \"-\") + (this.second())) + \"_\") + (frameCount)) + \".obj\"))); (exportIndex)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1907/buggy-version/SoftModelling_Tools.src.softmodelling.SoftModelling.java", "BodyUseAPI": [], "Fixed commit": "16c43d3699b9cedcb3936664d71e29cac2c9aa3d", "Url": "https://api.github.com/repos/emeidiem/SoftModelling", "Date": "2014-09-10T10:24:09Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["p5.surface.getParticleswithKey(p5.surface.particles,v.key())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(p5.surface.particlesSelected.contains(p))) p5.surface.particlesSelected.add(p);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1907/buggy-version/SoftModelling_Tools.src.softmodelling.MeshClass.java", "BodyUseAPI": ["p5.surface.particlesSelected.add(softmodelling.Particle)"], "Fixed commit": "16c43d3699b9cedcb3936664d71e29cac2c9aa3d", "Url": "https://api.github.com/repos/emeidiem/SoftModelling", "Date": "2014-09-10T10:24:09Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resumptionToken == null) return new com.lyncode.xoai.dataprovider.core.ResumptionToken();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2768/buggy-version/src.main.java.com.lyncode.xoai.dataprovider.data.DefaultResumptionTokenFormat.java", "BodyUseAPI": [], "Fixed commit": "c69dda897dcabcf9427a817a8c889bccb31c4a3b", "Url": "https://api.github.com/repos/lyncode/xoai", "Date": "2013-09-05T21:38:05Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(par1ItemStack.hasTagCompound())) && ((par1ItemStack.getItemDamage()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/10/buggy-version/java.ak.EnchantChanger.item.EcItemMateria.java", "BodyUseAPI": [], "Fixed commit": "0aae8d3b2354189c611027ee0a8d6ad1441d8134", "Url": "https://api.github.com/repos/aksource/EnchantChanger", "Date": "2014-11-16T14:42:34Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit.RetrofitError.getKind()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((kind == (Kind.NETWORK)) || (kind == (Kind.UNEXPECTED))) || (kind == (Kind.CONVERSION))) { return new io.voucherify.client.error.VoucherifyError(retrofitError.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7612/buggy-version/src.main.java.io.voucherify.client.error.VoucherifyError.java", "BodyUseAPI": [], "Fixed commit": "6584a3acc916d659431da69510ec8262423c2157", "Url": "https://api.github.com/repos/voucherifyio/voucherify-java-sdk", "Date": "2017-09-20T07:18:33Z"},
{"Line": "=>830", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.Long, net.floodlightcontroller.core.IOFSwitch>.containsKey(sw.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!isActive) { sw.clearAllFlowMods(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3052/buggy-version/src.main.java.net.floodlightcontroller.core.internal.Controller.java", "BodyUseAPI": [], "Fixed commit": "ee0eb3cec23a5bd85dae6a126cf7b0466605496c", "Url": "https://api.github.com/repos/Linerd/floodlight", "Date": "2012-10-19T00:34:02Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Context.getSystemService(Context.INPUT_METHOD_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (inputManager.isActive(view)) inputManager.hideSoftInputFromWindow(view.getApplicationWindowToken(), 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8497/buggy-version/src.com.imaginea.android.sugarcrm.util.ViewUtil.java", "BodyUseAPI": ["android.view.View.getApplicationWindowToken()", "android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(view.getApplicationWindowToken(),int)"], "Fixed commit": "97237a22371f1772773541304be9575239cb0831", "Url": "https://api.github.com/repos/babasaikiran/airsugar-android", "Date": "2012-05-18T08:46:52Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDatabaseOperations) != null) { mDatabaseOperations.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8893/buggy-version/app.src.main.java.com.mobilemakers.juansoler.appradar.StartScreenFragment.java", "BodyUseAPI": [], "Fixed commit": "859d1f43fc63785f432c80216fc8a899e0fa7be7", "Url": "https://api.github.com/repos/juancruzgs/AppRadar", "Date": "2015-03-18T14:09:56Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (configuration.isRunWithJenkins()) { int previousBuildNumber = -1; try { previousBuildNumber = java.lang.Integer.parseInt(configuration.getBuildNumber()); previousBuildNumber--; } catch (java.lang.NumberFormatException e) { net.masterthought.cucumber.generators.AbstractPage.LOG.error(\"Could not parse build number: {}.\", configuration.getBuildNumber(), e); } result.put(\"build_previous_number\", previousBuildNumber); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3550/buggy-version/src.main.java.net.masterthought.cucumber.generators.AbstractPage.java", "BodyUseAPI": ["net.masterthought.cucumber.Configuration.getBuildNumber()", "org.apache.logging.log4j.Logger.error(java.lang.String,configuration.getBuildNumber(),java.lang.NumberFormatException)", "net.masterthought.cucumber.Configuration.getBuildNumber()", "java.lang.Integer.parseInt(configuration.getBuildNumber())"], "Fixed commit": "55d00c59eb43fc9babfc2acedf56540040e4be63", "Url": "https://api.github.com/repos/damianszczepanik/cucumber-reporting", "Date": "2016-01-20T15:38:12Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((com.sm.stepsassistant.MyActivity.dayList.size()) == 0)) { messageTextView.setVisibility(View.GONE); }else { messageTextView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2675/buggy-version/mobile.src.main.java.com.sm.stepsassistant.MyActivity.java", "BodyUseAPI": [], "Fixed commit": "c5dc9daf5f3624b34d3d270815581aacfec077fd", "Url": "https://api.github.com/repos/marcokstephen/StepsAssistant", "Date": "2014-07-08T04:17:30Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((body.getLinearVelocity().x) < 1.8F) { setFlippedHorizontal(true); body.setLinearVelocity((-2.0F), 0.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1010/buggy-version/src.Enemies.RinoEnemy.java", "BodyUseAPI": ["com.badlogic.gdx.physics.box2d.Body.setLinearVelocity(float,float)"], "Fixed commit": "0de71e649f75602302ab8062dac43415215bba73", "Url": "https://api.github.com/repos/aitorneos/streetJumper", "Date": "2014-02-10T18:14:25Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["combinefasta.CombineFasta.PrepareCMDOptions()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cmd.HasOpt(\"name\")) order = new combinefasta.Order(cmd.GetValue(\"input\"), cmd.GetValue(\"output\"), padding, cmd.GetValue(\"name\")); else order = new combinefasta.Order(cmd.GetValue(\"input\"), cmd.GetValue(\"output\"), padding);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2201/buggy-version/src.combinefasta.CombineFasta.java", "BodyUseAPI": ["GetCmdOpt.ArrayModeCmdLineParser.GetValue(java.lang.String)", "GetCmdOpt.ArrayModeCmdLineParser.GetValue(java.lang.String)", "GetCmdOpt.ArrayModeCmdLineParser.GetValue(java.lang.String)", "GetCmdOpt.ArrayModeCmdLineParser.GetValue(java.lang.String)", "GetCmdOpt.ArrayModeCmdLineParser.GetValue(java.lang.String)"], "Fixed commit": "1a4691e8a44c8207b3e56eae3d2f87e093b34f7c", "Url": "https://api.github.com/repos/njdbickhart/CombineFasta", "Date": "2017-07-18T21:33:35Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ratio < 1) { ratio = ((double) (size.height)) / (size.width); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1948/buggy-version/src.pw.custom.androidcamera.CameraViewProxy.java", "BodyUseAPI": [], "Fixed commit": "4d14d8ca0af4c0ffe4a9145d72406fc1c936c33a", "Url": "https://api.github.com/repos/gimdongwoo/Ti-Android-CameraView", "Date": "2015-09-11T12:05:34Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ratio < 1) { ratio = ((double) (size.height)) / (size.width); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1948/buggy-version/src.pw.custom.androidcamera.CameraViewProxy.java", "BodyUseAPI": [], "Fixed commit": "4d14d8ca0af4c0ffe4a9145d72406fc1c936c33a", "Url": "https://api.github.com/repos/gimdongwoo/Ti-Android-CameraView", "Date": "2015-09-11T12:05:34Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((board[x][y]) == (lab1.Main.tileState.EMPTY)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5029/buggy-version/src.lab1.Main.java", "BodyUseAPI": [], "Fixed commit": "7d29563d24ec2fa234bd1bd65db35f5b8af4ace2", "Url": "https://api.github.com/repos/magnificus/EDA132", "Date": "2016-02-10T09:36:00Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.clothapp.ImageFragment.lista) == null) || (com.clothapp.ImageFragment.lista.isEmpty())) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5609/buggy-version/app.src.main.java.com.clothapp.ImageFragment.java", "BodyUseAPI": [], "Fixed commit": "a62d47578c9926aedb0d313e1cb3ed85cf062286", "Url": "https://api.github.com/repos/ClothAppProject/ClothAppAndroid", "Date": "2016-03-09T00:54:11Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((program.containsKey(genre)) && (program.get(genre).containsKey(pg.classFullName))) { program.get(genre).get(pg.classFullName).remove(methodFullName); if (program.get(genre).get(pg.classFullName).isEmpty()) { program.get(genre).remove(pg.classFullName); if (program.get(genre).isEmpty()) { program.remove(genre); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8880/buggy-version/jackplay.src.jackplay.play.ProgramManager.java", "BodyUseAPI": ["program.get(genre).get(pg.classFullName)", "program.get(genre).get(pg.classFullName)", "java.util.Map<jackplay.bootstrap.Genre, java.util.Map<java.lang.String, java.util.Map<java.lang.String, jackplay.play.performers.Performer>>>.get(jackplay.bootstrap.Genre)", "program.get(genre).get(pg.classFullName).remove(java.lang.String)", "program.get(genre).isEmpty()", "program.get(genre).remove(pg.classFullName)", "java.util.Map<jackplay.bootstrap.Genre, java.util.Map<java.lang.String, java.util.Map<java.lang.String, jackplay.play.performers.Performer>>>.get(jackplay.bootstrap.Genre)", "java.util.Map<jackplay.bootstrap.Genre, java.util.Map<java.lang.String, java.util.Map<java.lang.String, jackplay.play.performers.Performer>>>.remove(jackplay.bootstrap.Genre)", "program.get(genre).get(pg.classFullName).isEmpty()", "java.util.Map<jackplay.bootstrap.Genre, java.util.Map<java.lang.String, java.util.Map<java.lang.String, jackplay.play.performers.Performer>>>.get(jackplay.bootstrap.Genre)", "java.util.Map<jackplay.bootstrap.Genre, java.util.Map<java.lang.String, java.util.Map<java.lang.String, jackplay.play.performers.Performer>>>.get(jackplay.bootstrap.Genre)"], "Fixed commit": "c4bf828fcc3715ef702fd1c2c8578da2ea5f1885", "Url": "https://api.github.com/repos/alfredPATHo/jackplay", "Date": "2016-08-17T21:54:41Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((el.getElement_color()) != null) && ((java.lang.Integer.parseInt(el.getElement_color())) != 0)) { finishedPaint.setColor(java.lang.Integer.parseInt(el.getElement_color())); }else { finishedPaint.setColor(Color.RED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7151/buggy-version/Code.src.com.ecn.urbapp.utils.DrawImageView.java", "BodyUseAPI": ["android.graphics.Paint.setColor(int)", "java.lang.Integer.parseInt(el.getElement_color())", "com.ecn.urbapp.db.Element.getElement_color()"], "Fixed commit": "c391f223ad0eaa445714c78e5a94933d350b1d59", "Url": "https://api.github.com/repos/jparty/FeatureApp", "Date": "2013-12-13T14:36:56Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wallIsHere(middleSpace, move.from())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7719/buggy-version/src.quoridor.Board.java", "BodyUseAPI": [], "Fixed commit": "2e40dcbf8a0ffb778d506cc253ca44d5871df329", "Url": "https://api.github.com/repos/nateuni/COMPTwoNine11---Project", "Date": "2011-05-30T08:44:21Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (invoke == null) { invoke = method.invoke(implementation, args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6196/buggy-version/core.log4jdbc-utils.src.main.java.fr.ms.lang.reflect.TimeInvocationHandler.java", "BodyUseAPI": [], "Fixed commit": "0e5d20c03eebabaea9d77355106d47ea1b30e266", "Url": "https://api.github.com/repos/marcosemiao/log4jdbc", "Date": "2015-10-27T18:48:45Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fr.ms.lang.reflect.TimeInvocationHandler.OBJECT_EQUALS.equals(method)) && (java.lang.reflect.Proxy.isProxyClass(args[0].getClass()))) { final boolean isEquals = proxy == (args[0]); if (isEquals) { invoke = java.lang.Boolean.valueOf(isEquals); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6196/buggy-version/core.log4jdbc-utils.src.main.java.fr.ms.lang.reflect.TimeInvocationHandler.java", "BodyUseAPI": [], "Fixed commit": "0e5d20c03eebabaea9d77355106d47ea1b30e266", "Url": "https://api.github.com/repos/marcosemiao/log4jdbc", "Date": "2015-10-27T18:48:45Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sedlex.objects.Law.getArticleList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((articleList.size()) != 0) { com.sedlex.adapters.ArticlesAdapter articlesAdapter = new com.sedlex.adapters.ArticlesAdapter(this, lawDetail.getArticleList()); articlesListView.setAdapter(articlesAdapter); }else { articlesLayoutView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2390/buggy-version/app.src.main.java.com.sedlex.activities.LawDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "f764c060b1b7e53a928e45d7c2788872b8a04ae9", "Url": "https://api.github.com/repos/FischerLouis/Sedlex", "Date": "2015-05-24T13:06:30Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (annotationFile.exists()) return annotationFile.getAbsolutePath(); else { int dateStartIndex = (documentName.indexOf(\"-8-K-\")) + 5; java.lang.String year = documentName.substring(dateStartIndex, (dateStartIndex + 4)); java.lang.String month = documentName.substring((dateStartIndex + 4), (dateStartIndex + 6)); annotationFile = new java.io.File(this.docAnnoDirPath, ((((year + \"/\") + month) + \"/\") + documentName)); return annotationFile.getAbsolutePath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7232/buggy-version/src.corp.data.annotation.AnnotationCache.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()"], "Fixed commit": "110cbcc53f0f741b35b7448b5f5d31a3c85433f9", "Url": "https://api.github.com/repos/forkunited/CorporateRelationExtraction", "Date": "2013-09-06T03:52:48Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (proc.getSDFS().isAvailable(f)) { fileShouldBeReplicated.add(f); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1820/buggy-version/src.filesystem.ReplicaManager.java", "BodyUseAPI": ["java.util.List<communication.Messages.FileIdentifier>.add(communication.Messages.FileIdentifier)"], "Fixed commit": "0f115d31fa1f8a2338941ecc62f58255d80f8b65", "Url": "https://api.github.com/repos/naveed2/MP3", "Date": "2012-11-11T14:30:41Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.brokenmatrix.modcore.tools.Helper.GetItem(org.bukkit.inventory.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (item != null) { item.onKilledEntity(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4200/buggy-version/ModCore.src.com.brokenmatrix.modcore.EventListener.java", "BodyUseAPI": ["com.brokenmatrix.modcore.items.CustomItem.onKilledEntity(org.bukkit.event.entity.EntityDeathEvent)"], "Fixed commit": "ac72e966b625e54fa93adaa8744dd4a45c02e0aa", "Url": "https://api.github.com/repos/BrokenMatrix/ModCore", "Date": "2017-08-08T20:03:14Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasNext()) { return parts[((i)++)]; }else { throw new java.util.NoSuchElementException(\"Sum's iterator does not have next!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6781/buggy-version/hadoop-mapreduce-project.hadoop-mapreduce-examples.src.main.java.org.apache.hadoop.examples.pi.math.Bellard.java", "BodyUseAPI": [], "Fixed commit": "be86237c09533a6691ed9eb4864643657331a11a", "Url": "https://api.github.com/repos/sequenceiq/hadoop", "Date": "2014-12-09T18:48:35Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.uima.jcas.cas.FSArray.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (fs instanceof uk.gov.dstl.baleen.types.semantic.Entity) { uk.gov.dstl.baleen.types.semantic.Entity ent = ((uk.gov.dstl.baleen.types.semantic.Entity) (fs)); entities.add(ent.getExternalId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3162/buggy-version/baleen.baleen-consumers.src.main.java.uk.gov.dstl.baleen.consumers.utils.EntityRelationConverter.java", "BodyUseAPI": [], "Fixed commit": "e0aacb11fa3316b5ebce5af1589b491974535835", "Url": "https://api.github.com/repos/tenode/baleen", "Date": "2016-02-29T09:54:44Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((indices.length) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2986/buggy-version/src.main.java.edu.ucla.sspace.util.SparseDoubleArray.java", "BodyUseAPI": [], "Fixed commit": "f073500c3d7a657db3da8495922550a9d8fd8989", "Url": "https://api.github.com/repos/fozziethebeat/S-Space", "Date": "2012-07-31T05:22:54Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["omero.util.IceMapper.toRType(java.lang.Object)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((key == null) || (val == null)) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"Nulls in map! %s=>%s\", key, val)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3291/buggy-version/components.blitz.src.ome.services.blitz.impl.AdminI.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,omero.RType)"], "Fixed commit": "7733a2902ddc8b3f39a2c5837ea28edaec967eb6", "Url": "https://api.github.com/repos/joshmoore/openmicroscopy", "Date": "2012-08-22T09:42:23Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.currentElement.getTextContent().matches(CompilationEngine.VAR)) { compileVarDec(rootElement); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7308/buggy-version/CompilationEngine.java", "BodyUseAPI": [], "Fixed commit": "a28424e984dcc71419dad9ed92e3516d9dd8b14c", "Url": "https://api.github.com/repos/nivdror1/ex10", "Date": "2017-01-03T20:29:00Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((stocks.get(order.getSymbol())) == null) { order.getTrader().receiveMessage(((order.getSymbol()) + \"not found\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4406/buggy-version/src.app.StockExchange.java", "BodyUseAPI": ["app.TradeOrder.getTrader()", "app.TradeOrder.getSymbol()", "order.getTrader().receiveMessage(((order.getSymbol()) + \"not found\"))"], "Fixed commit": "68d6c0d920eadea7e4d2fab7002bf8dd2c2e935a", "Url": "https://api.github.com/repos/CSRessel/StockExchange", "Date": "2014-09-30T18:40:16Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sentence.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5795/buggy-version/src.joshua.decoder.DecoderThread.java", "BodyUseAPI": [], "Fixed commit": "8f131b17187c743fe898c097ab97cef08e50f064", "Url": "https://api.github.com/repos/adampauls/joshua", "Date": "2011-11-29T18:01:54Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (energyCost < 0) { energyCost = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1175/buggy-version/src.main.java.com.ilids.controller.DashBoardUpdateController.java", "BodyUseAPI": [], "Fixed commit": "0b6a736b596253294ff8cdfe40c5eb15d34db11f", "Url": "https://api.github.com/repos/cirakas/ilids", "Date": "2014-09-12T05:33:08Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((status.getGeoLocation()) != null) { item.put(org.selman.tweetamo.PersistentStore.COL_LAT, new com.amazonaws.services.dynamodbv2.model.AttributeValue().withN(java.lang.Double.toString(status.getGeoLocation().getLatitude()))); item.put(org.selman.tweetamo.PersistentStore.COL_LONG, new com.amazonaws.services.dynamodbv2.model.AttributeValue().withN(java.lang.Double.toString(status.getGeoLocation().getLongitude()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3646/buggy-version/org.selman.tweetamo.src.org.selman.tweetamo.PersistentStore.java", "BodyUseAPI": ["status.getGeoLocation().getLatitude()", "java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>.put(java.lang.String,new com.amazonaws.services.dynamodbv2.model.AttributeValue().withN(java.lang.Double.toString(status.getGeoLocation().getLongitude())))", "java.lang.Double.toString(status.getGeoLocation().getLongitude())", "twitter4j.Status.getGeoLocation()", "com.amazonaws.services.dynamodbv2.model.AttributeValue.withN(java.lang.String)", "java.lang.Double.toString(status.getGeoLocation().getLatitude())", "twitter4j.Status.getGeoLocation()", "com.amazonaws.services.dynamodbv2.model.AttributeValue.withN(java.lang.String)", "status.getGeoLocation().getLongitude()", "java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>.put(java.lang.String,new com.amazonaws.services.dynamodbv2.model.AttributeValue().withN(java.lang.Double.toString(status.getGeoLocation().getLatitude())))"], "Fixed commit": "c2b35239f622ef362899cda2eb3dfb309ed98a96", "Url": "https://api.github.com/repos/dselman/tweetamo", "Date": "2013-12-19T21:36:16Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Stack<com.shineyang.scrapbook.utils.EditTextUtil.Action>.pop()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((action.endCursor) == (action.startCursor)) { editText.setSelection(((action.startCursor) + (action.actionTarget.length()))); }else { editText.setSelection(action.startCursor, action.endCursor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7939/buggy-version/app.src.main.java.com.shineyang.scrapbook.utils.EditTextUtil.java", "BodyUseAPI": ["android.widget.EditText.setSelection(int,int)", "java.lang.CharSequence.length()", "android.widget.EditText.setSelection(int)"], "Fixed commit": "f608f65d560398019e57e4352d01a108bf31c5ba", "Url": "https://api.github.com/repos/ShineYang/ScrapBook", "Date": "2016-12-14T04:47:48Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ViewManager.Utils.getColumnValueFromDeltaStream(stream.getDeltaDeletedRow(),java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(oldAggColValue.equals(\"null\"))) old_aggColValue = java.lang.Float.valueOf(ViewManager.Utils.getColumnValueFromDeltaStream(stream.getDeltaDeletedRow(), aggCol, aggColType, \"_old\")); else old_aggColValue = aggColValue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7941/buggy-version/src.java.ViewManager.ViewManager.java", "BodyUseAPI": [], "Fixed commit": "02254b776a7e897c16ed39eff65ad90a436facc7", "Url": "https://api.github.com/repos/abdelrahmanbadawy/Cassandra-VMS", "Date": "2015-10-26T15:08:18Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ut.getTipo().equals(\"amministratore\")) { panel_4.setVisible(false); new view.AmministratoreView(frmPiattaformaGaming, ut); }else { panel_4.setVisible(false); new view.UtenteView(frmPiattaformaGaming, ut); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4651/buggy-version/src.view.UtenteViewProfiloPers.java", "BodyUseAPI": [], "Fixed commit": "51d4b52daa2784f1068f66e632239fa79193e9b5", "Url": "https://api.github.com/repos/StefanoMartella/GamingPlatform", "Date": "2017-08-10T23:35:31Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((health) <= 0) alive = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/5595/buggy-version/src.com.company.player.java", "BodyUseAPI": [], "Fixed commit": "1856a0adfd94fdbb2744dc28b7214f3fabc981f6", "Url": "https://api.github.com/repos/SkittlePox/destination-unknown", "Date": "2015-09-07T22:43:38Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.io.File, java.util.List<java.io.File>>.get(java.io.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((filesToOpen != null) && ((filesToOpen.size()) > 0)) { for (java.io.File fileToOpen : filesToOpen) if (isGzipFile(fileToOpen)) return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6343/buggy-version/src.main.java.uk.ac.ebi.pride.toolsuite.gui.action.impl.OpenFileAction.java", "BodyUseAPI": [], "Fixed commit": "503d544272ed046c02e10b5b42c6620b9911abdb", "Url": "https://api.github.com/repos/PRIDE-Toolsuite/pride-inspector", "Date": "2015-02-06T15:38:38Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((name.startsWith(\"/\")) || (name.contains(\":\"))) { return new java.io.File(name.replace('.', '/')); }else { return new java.io.File(m_projectBaseDir, (\"target/\" + (name.replace('.', '/')))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2787/buggy-version/codegen.src.main.java.org.unidal.codegen.generator.GenerateContextSupport.java", "BodyUseAPI": ["java.lang.String.replace(char,char)", "java.lang.String.replace(char,char)"], "Fixed commit": "a8e2aea5cd7393a263a431b99cb329191fb74bf8", "Url": "https://api.github.com/repos/unidal/maven-plugins", "Date": "2012-09-28T08:05:17Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(soapAction_work)) { log.debug(((getLogPrefix(session)) + \"deriving default soapAction\")); try { java.net.URL resource = nl.nn.adapterframework.util.ClassUtils.getResourceURL(this, \"/xml/xsl/esb/soapAction.xsl\"); nl.nn.adapterframework.util.TransformerPool tp = new nl.nn.adapterframework.util.TransformerPool(resource, true); soapAction_work = tp.transform(input.toString(), null); } catch (java.lang.Exception e) { log.error(((getLogPrefix(session)) + \"failed to execute soapAction.xsl\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1710/buggy-version/tibco.src.main.java.nl.nn.adapterframework.extensions.tibco.SendTibcoMessage.java", "BodyUseAPI": [], "Fixed commit": "425b7fd7ddbc6034751360dedbde1518373bdb14", "Url": "https://api.github.com/repos/ibissource/iaf", "Date": "2016-12-22T11:10:10Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((moduleId.indexOf('!')) != (-1)) { moduleId = moduleId.substring(0, moduleId.indexOf('!')); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6165/buggy-version/org.dojotoolkit.optimizer.amd.rhinoast.src.org.dojotoolkit.optimizer.amd.rhinoast.AMDJSOptimizer.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(char)"], "Fixed commit": "7da16d4bb19b2ff0c5b875b6b9d65c158afe4e70", "Url": "https://api.github.com/repos/zazl/optimizer", "Date": "2012-04-28T12:49:43Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.beautysight.liurushi.identityaccess.domain.repo.UserRepo.withGlobalId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(theUser.isPresent())) { throw new com.beautysight.liurushi.common.ex.EntityNotFoundException(com.beautysight.liurushi.identityaccess.common.UserErrorId.user_not_exist_or_pwd_incorrect, \"user not exist or pwd incorrect\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6689/buggy-version/liurushi-identityaccess.src.main.java.com.beautysight.liurushi.identityaccess.domain.service.UserService.java", "BodyUseAPI": [], "Fixed commit": "77fde80c1c1d6e7e019f34bc6d86f3a97c75a866", "Url": "https://api.github.com/repos/18luohan/beautysight-liurushi", "Date": "2015-08-28T07:15:26Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((user.origin) == null) || (user.origin.isSelf())) { com.beautysight.liurushi.common.utils.PreconditionUtils.checkRequiredMobile(\"user.mobile\", user.mobile); com.beautysight.liurushi.common.utils.PreconditionUtils.checkRequired(\"user.password\", user.password); }else { com.beautysight.liurushi.common.utils.PreconditionUtils.checkRequired(\"user.unionId\", user.unionId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6689/buggy-version/liurushi-identityaccess.src.main.java.com.beautysight.liurushi.identityaccess.app.command.LoginCommand.java", "BodyUseAPI": ["com.beautysight.liurushi.common.utils.PreconditionUtils.checkRequired(java.lang.String,user.unionId)", "com.beautysight.liurushi.common.utils.PreconditionUtils.checkRequiredMobile(java.lang.String,user.mobile)", "com.beautysight.liurushi.common.utils.PreconditionUtils.checkRequired(java.lang.String,user.password)"], "Fixed commit": "77fde80c1c1d6e7e019f34bc6d86f3a97c75a866", "Url": "https://api.github.com/repos/18luohan/beautysight-liurushi", "Date": "2015-08-28T07:15:26Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"0\".equals(publicKey)) { if (callback != null) { callback.onFailed(\"\u7528\u6237\u540d\u672a\u901a\u8fc7\u9a8c\u8bc1\"); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8769/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.network.CrtbWebService.java", "BodyUseAPI": [], "Fixed commit": "d78ba19d3a076a8e1f1f3b3c2f869e9efb0b602b", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-06-01T08:56:20Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (retCode != 0) { if (callback != null) { callback.onSuccess(null); } }else { if (callback != null) { callback.onFailed(\"\u5bc6\u7801\u672a\u901a\u8fc7\u9a8c\u8bc1\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8769/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.network.CrtbWebService.java", "BodyUseAPI": [], "Fixed commit": "d78ba19d3a076a8e1f1f3b3c2f869e9efb0b602b", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-06-01T08:56:20Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (session != null) sv = session.getAttribute(key);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6907/buggy-version/webapi.src.main.java.com.github.thorqin.webapi.security.SecuritySetting.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Fixed commit": "c87179a3f1b779a480f25a80fa632b638c3beeaa", "Url": "https://api.github.com/repos/ThorQin/webapi-suit", "Date": "2014-08-25T04:51:10Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["files.RegionCountingTableModel.getMetaFile(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mfile == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7514/buggy-version/src.visualization.EditorRootPanel.java", "BodyUseAPI": [], "Fixed commit": "8ef7852058ccbd8cb9b30a541931d5f6ef802e10", "Url": "https://api.github.com/repos/Peaches491/cv-backgamon", "Date": "2014-12-11T21:26:26Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((imgInfo.getMetaFile()) != null) imgInfo.getMetaFile().clearMetadata();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7514/buggy-version/src.visualization.EditorRootPanel.java", "BodyUseAPI": ["components.base.ProcessInfo.getMetaFile()", "imgInfo.getMetaFile().clearMetadata()"], "Fixed commit": "8ef7852058ccbd8cb9b30a541931d5f6ef802e10", "Url": "https://api.github.com/repos/Peaches491/cv-backgamon", "Date": "2014-12-11T21:26:26Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.base.Throwables.getRootCause(java.lang.Throwable)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rootCause instanceof java.lang.InterruptedException) { co.cask.cdap.internal.app.runtime.workflow.WorkflowDriver.LOG.error(\"Workflow execution aborted.\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/2182/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.internal.app.runtime.workflow.WorkflowDriver.java", "BodyUseAPI": [], "Fixed commit": "08ce57003082672410d3ecc024bfa81193d26302", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2015-05-01T21:43:59Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((achieveString) != null) { crandallj2.lame.space.clicker.Achievement.saveLoader(achieveString, achievements); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/9026/buggy-version/app.src.main.java.crandallj2.lame.space.clicker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c761dd95c06184af62fae8d5b4600560ce4ecead", "Url": "https://api.github.com/repos/itsjop/click", "Date": "2017-12-06T23:35:30Z"},
{"Line": "=>551", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pratilipiData.getId()) == null) com.pratilipi.pagecontent.pratilipi.PratilipiContentHelper.createOrUpdatePratilipiPageUrl(pratilipi.getId(), request);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1425/buggy-version/src.com.pratilipi.pagecontent.pratilipi.PratilipiContentHelper.java", "BodyUseAPI": [], "Fixed commit": "95bdf5d21548c63b8e08400c49a831faf765adc4", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-03-31T08:12:07Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RayTracing.Plane.closerIntersectionPoint(RayTracing.Ray)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (p == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4572/buggy-version/src.RayTracing.Triangle.java", "BodyUseAPI": [], "Fixed commit": "1259a1df6ec323f71645b2b61dc4eda79c827bee", "Url": "https://api.github.com/repos/eyalw711/RayTracing", "Date": "2017-05-14T21:04:56Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dateCache) == null) dateCache = new abdom.data.json.JsonValue(com.ntt.tc.data.TC_Date.sdf.get().format(date));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/9012/buggy-version/maven.tclib.src.main.java.com.ntt.tc.data.TC_Date.java", "BodyUseAPI": [], "Fixed commit": "dfdb9b3811f62cd37178c576e17a83632fbf8f72", "Url": "https://api.github.com/repos/us-sasaki/ys-java", "Date": "2017-11-29T08:28:19Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"\".equals(contentType)) { con.setRequestProperty(\"Content-Type\", \"application/json\"); }else if ((contentType.indexOf('/')) == (-1)) { con.setRequestProperty(\"Content-Type\", ((\"application/vnd.com.nsn.cumulocity.\" + contentType) + \"+json; charset=UTF-8; ver=0.9\")); }else { con.setRequestProperty(\"Content-Type\", contentType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/9012/buggy-version/maven.tclib.src.main.java.com.ntt.tc.net.Rest.java", "BodyUseAPI": ["java.net.HttpURLConnection.setRequestProperty(java.lang.String,java.lang.String)", "java.lang.String.indexOf(char)", "java.net.HttpURLConnection.setRequestProperty(java.lang.String,java.lang.String)"], "Fixed commit": "dfdb9b3811f62cd37178c576e17a83632fbf8f72", "Url": "https://api.github.com/repos/us-sasaki/ys-java", "Date": "2017-11-29T08:28:19Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (saveSkippedMessages) skippedMessages.add(req);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7481/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.hazelcast.OHazelcastDistributedDatabase.java", "BodyUseAPI": [], "Fixed commit": "37c40a0e57afc3dd9a34e3431635022feeb100eb", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-02-20T11:06:54Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((meta.isInFields()) && (!(meta.isRemoveSourceField()))) { start = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4800/buggy-version/plugins.kettle-json-plugin.src.org.pentaho.di.trans.steps.jsoninput.JsonInput.java", "BodyUseAPI": [], "Fixed commit": "21afd903890f6b5f79f66f8c767857bfd52258d7", "Url": "https://api.github.com/repos/ArtsiomYurhevich/pentaho-kettle", "Date": "2016-05-19T15:11:21Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tickStroke) != null) graph.setStroke(tickStroke);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/774/buggy-version/src.Grapher.java", "BodyUseAPI": [], "Fixed commit": "e42840f3b06654bdf7c6c4de451347a7245a6dba", "Url": "https://api.github.com/repos/Stefan4472/Grapher", "Date": "2015-08-04T21:33:14Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((axisStroke) != null) graph.setStroke(axisStroke);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/774/buggy-version/src.Grapher.java", "BodyUseAPI": [], "Fixed commit": "e42840f3b06654bdf7c6c4de451347a7245a6dba", "Url": "https://api.github.com/repos/Stefan4472/Grapher", "Date": "2015-08-04T21:33:14Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((plotStroke) != null) graph.setStroke(plotStroke);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/774/buggy-version/src.Grapher.java", "BodyUseAPI": [], "Fixed commit": "e42840f3b06654bdf7c6c4de451347a7245a6dba", "Url": "https://api.github.com/repos/Stefan4472/Grapher", "Date": "2015-08-04T21:33:14Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gridLineStroke) != null) graph.setStroke(gridLineStroke);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/774/buggy-version/src.Grapher.java", "BodyUseAPI": [], "Fixed commit": "e42840f3b06654bdf7c6c4de451347a7245a6dba", "Url": "https://api.github.com/repos/Stefan4472/Grapher", "Date": "2015-08-04T21:33:14Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loading) { toggleLoadingPanelVisibility(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6766/buggy-version/app.src.main.java.com.soundwebcraft.movietainment.MoviesActivity.java", "BodyUseAPI": [], "Fixed commit": "fe7451dbc40d8eb11378d017723279958caf2dab", "Url": "https://api.github.com/repos/codeshifu/MovieTainment", "Date": "2017-04-24T20:07:26Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.ConnectivityManager.getActiveNetworkInfo()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((networkInfo == null) && (!(networkInfo.isConnected()))) { loadingIndicator.setVisibility(View.GONE); mEmptyStateTextView.setText(R.string.no_internet_connection); }else if ((news == null) && (news.isEmpty())) { mEmptyStateTextView.setText(R.string.no_news); }else { mAdapter.addAll(news); mEmptyStateTextView.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/543/buggy-version/app.src.main.java.si.gcarrot.newsapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "644167618934ef7099a9be3d5a772ca6a624d015", "Url": "https://api.github.com/repos/gcarrot/NewsApp", "Date": "2017-07-11T14:47:44Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.Double.compare(this.getProportion(), another.getProportion())) == 0) == ((this.getProportion()) == (another.getProportion()))) { return 0; }else { return java.lang.Double.compare(this.getProportion(), another.getProportion()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8803/buggy-version/potm-android-app.src.com.potm_android_app.model.Ti.java", "BodyUseAPI": ["java.lang.Double.compare(double,double)", "com.potm_android_app.model.Ti.getProportion()"], "Fixed commit": "f79079c0dd517fd78f25486a13b6c1dd1b812066", "Url": "https://api.github.com/repos/Thiner-LES/pomt-android-app", "Date": "2014-06-26T15:45:13Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((numb.length()) == 1) { values.add(tokens.stream().collect(java.util.stream.Collectors.joining(\"-\"))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6573/buggy-version/src.main.java.ru.azee.phonewords.traversal.DictTraversalBase.java", "BodyUseAPI": [], "Fixed commit": "88bec1ce42f1dea122a7a1d6cbc7c47f4be92a8d", "Url": "https://api.github.com/repos/azee/phonewords", "Date": "2016-10-26T10:34:28Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mavenLog.isDebugEnabled()) { lineNumber++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1757/buggy-version/src.main.java.com.github.dantwining.whitespace.WhitespaceUtils.java", "BodyUseAPI": [], "Fixed commit": "b3b2da72e6c2af73aca81401a0167a9b26341ce8", "Url": "https://api.github.com/repos/dantwining/whitespace-maven-plugin", "Date": "2014-03-28T16:30:03Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mavenLog.isDebugEnabled()) { if (isLineModified) { mavenLog.debug(((\"line \" + lineNumber) + \" modified\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1757/buggy-version/src.main.java.com.github.dantwining.whitespace.WhitespaceUtils.java", "BodyUseAPI": ["org.apache.maven.plugin.logging.Log.debug(java.lang.String)"], "Fixed commit": "b3b2da72e6c2af73aca81401a0167a9b26341ce8", "Url": "https://api.github.com/repos/dantwining/whitespace-maven-plugin", "Date": "2014-03-28T16:30:03Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.voyanttools.trombone.input.source.InputSourcesBuilder.getInputSources()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (inputSources.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/1157/buggy-version/src.main.java.org.voyanttools.trombone.storage.file.FileTrombone4_1Migrator.java", "BodyUseAPI": [], "Fixed commit": "9d9239790038a33e37abea1ce73f83f3888994e0", "Url": "https://api.github.com/repos/sgsinclair/trombone", "Date": "2016-11-18T20:58:54Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.ICE_CREAM_SANDWICH)) { m_oExpListView.expandGroup(position, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/4545/buggy-version/app.src.main.java.com.nextgis.metroaccess.SelectStationListFragment.java", "BodyUseAPI": [], "Fixed commit": "06863e25717ed4f9169833247cadccb2660b21c0", "Url": "https://api.github.com/repos/nextgis/metro4all-android", "Date": "2015-06-24T12:30:42Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.zhanghai.android.materialprogressbar.MaterialProgressBar.getProgressDrawable()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (progressDrawable instanceof me.zhanghai.android.materialprogressbar.DeterminateCircularProgressDrawable) { if (mProgressTintInfo.mHasSecondaryProgressTint) { ((me.zhanghai.android.materialprogressbar.DeterminateCircularProgressDrawable) (progressDrawable)).setSecondaryProgressTintList(mProgressTintInfo.mSecondaryProgressTint); } if (mProgressTintInfo.mHasSecondaryProgressTintMode) { ((me.zhanghai.android.materialprogressbar.DeterminateCircularProgressDrawable) (progressDrawable)).setSecondaryProgressTintMode(mProgressTintInfo.mSecondaryProgressTintMode); } }else { android.graphics.drawable.Drawable target = getTintTargetFromProgressDrawable(progressDrawable, android.R.id.secondaryProgress, false); if (target != null) { applyTintForDrawable(target, mProgressTintInfo.mSecondaryProgressTint, mProgressTintInfo.mHasSecondaryProgressTint, mProgressTintInfo.mSecondaryProgressTintMode, mProgressTintInfo.mHasSecondaryProgressTintMode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/6317/buggy-version/library.src.main.java.me.zhanghai.android.materialprogressbar.MaterialProgressBar.java", "BodyUseAPI": ["me.zhanghai.android.materialprogressbar.MaterialProgressBar.getTintTargetFromProgressDrawable(android.graphics.drawable.Drawable,android.R.id.secondaryProgress,boolean)"], "Fixed commit": "2774ccfa9709237fc79312fa31aa29fcb31890d1", "Url": "https://api.github.com/repos/webmaster128/MaterialProgressBar", "Date": "2017-04-07T14:02:33Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastPressed) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3027/buggy-version/app.src.main.java.com.example.android.calcv2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8f76d546c2fbb2a21a671be889dc8aef253f8578", "Url": "https://api.github.com/repos/adh636/CalculatorApp", "Date": "2016-01-07T01:32:31Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeClock.getIsMilitary()) { r = java.util.regex.Pattern.compile(timePattern_24hr); m = r.matcher(userTime); }else { r = java.util.regex.Pattern.compile(timePattern_12hr); m = r.matcher(userTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/8012/buggy-version/Clock.java", "BodyUseAPI": [], "Fixed commit": "1001b319c83397db0a83015265dc16ef53d12bdb", "Url": "https://api.github.com/repos/ashleyHutton/eecs448proj1", "Date": "2016-03-05T18:28:17Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.consol.citrus.context.TestContext.class.isAssignableFrom(type)) { return ((T) (context)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/7051/buggy-version/modules.citrus-cucumber.src.main.java.cucumber.runtime.java.spring.CitrusSpringObjectFactory.java", "BodyUseAPI": [], "Fixed commit": "3fd8dcdaa8b498920aae14025e357e70c22410cc", "Url": "https://api.github.com/repos/citrusframework/citrus", "Date": "2016-07-24T14:09:43Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.forName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.dianping.plumber.core.PlumberBarrier.class.isAssignableFrom(c)) { beanDefinition.setScope(\"prototype\"); com.dianping.plumber.core.PlumberWorkerDefinitionsRepo.barrierRegister(beanDefinitionName); }else if (com.dianping.plumber.core.Plumber.class.isAssignableFrom(c)) { beanDefinition.setScope(\"singleton\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3132/buggy-version/src.main.java.com.dianping.plumber.core.Plumber.java", "BodyUseAPI": ["java.lang.Class.isAssignableFrom(java.lang.Class)"], "Fixed commit": "ecb0189701cdda847b5a42039066e897b3cc7f8b", "Url": "https://api.github.com/repos/zhongliangjun1/plumber", "Date": "2014-11-24T16:14:44Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((maxX) - (minX)) >= (noise.length)) || (((maxY) - (minY)) >= (noise[0].length))) { noise = new double[((maxX) - (minX)) + 1][((maxY) - (minY)) + 1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V1/3222/buggy-version/BlogCode.src.noise.NoiseArray.java", "BodyUseAPI": [], "Fixed commit": "0d1be991a31514e19b3a2fa673a363ecaf3f6b59", "Url": "https://api.github.com/repos/f4113nb34st/Println", "Date": "2014-02-21T23:38:58Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cpw.mods.fml.common.FMLCommonHandler.instance().getEffectiveSide().isServer()) { return context.getServerHandler().playerEntity; }else { return net.minecraft.client.Minecraft.getMinecraft().thePlayer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1870/buggy-version/src.main.java.mekanism.client.ClientProxy.java", "BodyUseAPI": [], "Fixed commit": "4e32a77ac80779a7ae52ea82724ea43e75881961", "Url": "https://api.github.com/repos/aidancbrady/Mekanism", "Date": "2014-07-07T22:33:11Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.buffer.ChannelBuffer.readShort()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((buffer.readableBytes()) < len) { throw new java.lang.IllegalArgumentException((\"readableBytes less than \" + len)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4142/buggy-version/src.main.com.github.xgameenginee.buffer.GameUpBuffer.java", "BodyUseAPI": [], "Fixed commit": "1c913df7de048a0240984d9b50b63a20b8ce0fc5", "Url": "https://api.github.com/repos/cuixin/XGameEnginee", "Date": "2012-06-14T08:03:42Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buttonPanel) != null) remove(buttonPanel);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3924/buggy-version/GameOfLife.java", "BodyUseAPI": [], "Fixed commit": "3094add04b886e2452954b838eede9df585d825b", "Url": "https://api.github.com/repos/Ivoah/Conway-s-Game-of-Life", "Date": "2014-03-18T16:00:48Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLogFile()) != null) { service.sendOutputTo(new java.io.FileOutputStream(getLogFile())); }else { service.sendOutputTo(com.google.common.io.ByteStreams.nullOutputStream()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3659/buggy-version/java.client.src.org.openqa.selenium.firefox.GeckoDriverService.java", "BodyUseAPI": [], "Fixed commit": "80d35e0a7b710864fd12da567d0d0ba499b23371", "Url": "https://api.github.com/repos/krmahadevan/selenium", "Date": "2017-10-21T15:24:37Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (firefoxLogFile != null) { if (\"/dev/stdout\".equals(firefoxLogFile)) { sendOutputTo(java.lang.System.out); }else if (\"/dev/stderr\".equals(firefoxLogFile)) { sendOutputTo(java.lang.System.err); }else if (\"/dev/null\".equals(firefoxLogFile)) { sendOutputTo(com.google.common.io.ByteStreams.nullOutputStream()); }else { sendOutputTo(new java.io.FileOutputStream(firefoxLogFile)); } }else { if (logFile != null) { sendOutputTo(new java.io.FileOutputStream(logFile)); }else { sendOutputTo(com.google.common.io.ByteStreams.nullOutputStream()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3659/buggy-version/java.client.src.org.openqa.selenium.firefox.XpiDriverService.java", "BodyUseAPI": [], "Fixed commit": "80d35e0a7b710864fd12da567d0d0ba499b23371", "Url": "https://api.github.com/repos/krmahadevan/selenium", "Date": "2017-10-21T15:24:37Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((title == null) || (title.isEmpty())) newTitle = context.getResources().getString(R.string.app_name); else newTitle = title;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1422/buggy-version/app.src.main.java.shetye.prathamesh.notifyme.Utilities.java", "BodyUseAPI": [], "Fixed commit": "bc315b65de40ecc5059f61124f2e45e2f69ed7b4", "Url": "https://api.github.com/repos/techeretic/NotifyMe", "Date": "2015-03-21T05:57:27Z"},
{"Line": "=>1150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (gcv != null) { int pos = cg.getconst(gcv); m_cur_addr = command.MAKE_ADDR(command.ADDR_CONST, pos); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/35/buggy-version/src.fakescript.compiler.java", "BodyUseAPI": ["fakescript.codegen.getconst(fakescript.variant)"], "Fixed commit": "e5b6987c5d0c3ec7f600c758ea31d375020179d9", "Url": "https://api.github.com/repos/esrrhs/fakescript-java", "Date": "2017-07-02T06:36:01Z"},
{"Line": "=>1031", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != summary) { summary.setUnreadEventsCount(0); mStore.flushSummary(summary); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8030/buggy-version/matrix-sdk.src.main.java.org.matrix.androidsdk.data.Room.java", "BodyUseAPI": ["org.matrix.androidsdk.data.store.IMXStore.flushSummary(org.matrix.androidsdk.data.RoomSummary)", "org.matrix.androidsdk.data.RoomSummary.setUnreadEventsCount(int)"], "Fixed commit": "2d60ecc1adc3a94f9ba1757548b998954f7b76fd", "Url": "https://api.github.com/repos/matrix-org/matrix-android-sdk", "Date": "2017-02-09T16:36:55Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<java.nio.ByteBuffer>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (buf == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4357/buggy-version/src.ar.edu.it.itba.pdc.Implementations.proxy.client.ProxyClientSelectorProtocol.java", "BodyUseAPI": [], "Fixed commit": "131694e049e9edf040ff89eec67791052ac80920", "Url": "https://api.github.com/repos/mdesanti/TPE-Protos", "Date": "2012-05-14T11:45:07Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cell.getCachedFormulaResultType()) == (CELL_TYPE_ERROR)) return new bad.robot.excel.matchers.ErrorCell(cell.getErrorCellValue());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3392/buggy-version/src.main.java.bad.robot.excel.matchers.CellType.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Cell.Cell.getErrorCellValue()"], "Fixed commit": "82883a459360358bfa08aaaef5c5977a339d77c9", "Url": "https://api.github.com/repos/tobyweston/simple-excel", "Date": "2012-09-03T08:24:04Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (prunedNestedColLists.containsKey(child)) { groupPathsList.addAll(prunedNestedColLists.get(child)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/9149/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.optimizer.ColumnPrunerProcCtx.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.addAll(prunedNestedColLists.get(child))", "java.util.Map<org.apache.hadoop.hive.ql.exec.Operator<? extends org.apache.hadoop.hive.ql.plan.OperatorDesc>, java.util.List<java.lang.String>>.get(org.apache.hadoop.hive.ql.exec.Operator<? extends org.apache.hadoop.hive.ql.plan.OperatorDesc>)"], "Fixed commit": "57b28ef238fa12a1c6dfb0953ef116d0b5706c95", "Url": "https://api.github.com/repos/winningsix/hive", "Date": "2016-10-09T19:09:23Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.ql.plan.ExprNodeFieldDesc.getCols()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((cols != null) && (!(cols.isEmpty()))) { return org.apache.hadoop.util.StringUtils.join(\".\", new java.lang.String[]{ cols.get(0), exprNodeFieldDesc.getFieldName() }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/9149/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.optimizer.ColumnPrunerProcCtx.java", "BodyUseAPI": ["org.apache.hadoop.util.StringUtils.join(java.lang.String,java.lang.String[])", "java.util.List<java.lang.String>.get(int)"], "Fixed commit": "57b28ef238fa12a1c6dfb0953ef116d0b5706c95", "Url": "https://api.github.com/repos/winningsix/hive", "Date": "2016-10-09T19:09:23Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paths == null) || (paths.isEmpty())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/9149/buggy-version/serde.src.java.org.apache.hadoop.hive.serde2.ColumnProjectionUtils.java", "BodyUseAPI": [], "Fixed commit": "57b28ef238fa12a1c6dfb0953ef116d0b5706c95", "Url": "https://api.github.com/repos/winningsix/hive", "Date": "2016-10-09T19:09:23Z"},
{"Line": "=>933", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((term.getType()) == (Term.Type.NUMBER)) { int target = (nextVar)++; il.append(_factory.createNew(\"edu.columbia.mipl.datastr.PrimitiveDouble\")); il.append(InstructionConstants.DUP); il.append(new edu.columbia.mipl.codegen.PUSH(_cp, term.getValue())); il.append(_factory.createInvoke(\"java.lang.Double\", \"valueOf\", new edu.columbia.mipl.codegen.ObjectType(\"java.lang.Double\"), new edu.columbia.mipl.codegen.Type[]{ Type.DOUBLE }, Constants.INVOKESTATIC)); il.append(_factory.createInvoke(\"edu.columbia.mipl.datastr.PrimitiveDouble\", \"<init>\", Type.VOID, new edu.columbia.mipl.codegen.Type[]{ new edu.columbia.mipl.codegen.ObjectType(\"java.lang.Double\") }, Constants.INVOKESPECIAL)); il.append(_factory.createStore(Type.OBJECT, target)); return target; }else if ((term.getType()) == (Term.Type.TERM)) { if ((term.getArguments().size()) == 0) { if (!(edu.columbia.mipl.builtin.BuiltinTable.existMatrix(term.getName()))) { assert false; } int target = (nextVar)++; il.append(new edu.columbia.mipl.codegen.PUSH(_cp, term.getName())); il.append(_factory.createInvoke(\"edu.columbia.mipl.builtin.BuiltinTable\", \"matrix\", new edu.columbia.mipl.codegen.ObjectType(\"edu.columbia.mipl.datastr.PrimitiveMatrix\"), new edu.columbia.mipl.codegen.Type[]{ Type.STRING }, Constants.INVOKESTATIC)); il.append(_factory.createStore(Type.OBJECT, target)); return target; }else { assert false; } }else { assert false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1038/buggy-version/src.edu.columbia.mipl.codegen.JvmBytecodeWriter.java", "BodyUseAPI": ["term.getArguments().size()", "edu.columbia.mipl.codegen.Term.getName()", "edu.columbia.mipl.codegen.InstructionList.append(edu.columbia.mipl.codegen.PUSH)", "edu.columbia.mipl.builtin.BuiltinTable.existMatrix(term.getName())", "edu.columbia.mipl.codegen.Term.getName()", "edu.columbia.mipl.codegen.Term.getValue()", "edu.columbia.mipl.codegen.InstructionList.append(edu.columbia.mipl.codegen.PUSH)", "edu.columbia.mipl.codegen.Term.getArguments()", "edu.columbia.mipl.codegen.Term.getType()"], "Fixed commit": "95388e2d23b7eee4845aea0ae9c0e8b9248f3844", "Url": "https://api.github.com/repos/jinhyung/MIPL", "Date": "2012-04-26T03:09:07Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((operands.size()) != 0) && ((operators.size()) != 0)) { return ((operands.size()) * (java.lang.Math.log(operands.size()))) + ((operators.size()) * (java.lang.Math.log(operators.size()))); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4187/buggy-version/stockmetrics.src.com.sixrr.stockmetrics.halstead.HalsteadVisitor.java", "BodyUseAPI": ["java.lang.Math.log(int)", "java.util.Set<java.lang.String>.size()", "java.util.Set<java.lang.String>.size()", "java.util.Set<java.lang.String>.size()", "java.lang.Math.log(int)", "java.util.Set<java.lang.String>.size()"], "Fixed commit": "f86745ede12f9f351bcc25a533d9cbd86d5be428", "Url": "https://api.github.com/repos/Mizzlr/MetricsReloaded", "Date": "2017-03-30T04:00:06Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input instanceof java.lang.Float) { return ((java.lang.Float) (input)); }else if (input instanceof java.lang.Integer) { return ((float) ((java.lang.Integer) (input))); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2093/buggy-version/src.main.java.graphql.Scalars.java", "BodyUseAPI": [], "Fixed commit": "34145726d7a335ca3d70a84bad9abcdfe6e45af8", "Url": "https://api.github.com/repos/graphql-java/graphql-java", "Date": "2016-01-23T08:28:01Z"},
{"Line": "=>1973", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((farmingTaskIds != null) && (!(farmingTaskIds.isEmpty()))) { getAllVisitLogsData(farmingTaskIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6570/buggy-version/app.src.main.java.wal.fennel.fragments.MySignUps.java", "BodyUseAPI": ["wal.fennel.fragments.MySignUps.getAllVisitLogsData(java.lang.String)"], "Fixed commit": "428eff459020ec4c6f19759cd321c6d26fbadd15", "Url": "https://api.github.com/repos/KhawarR/Fennel", "Date": "2016-12-29T11:54:23Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resourceId > 0) availableHeight -= getResources().getDimensionPixelSize(resourceId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6685/buggy-version/src.main.java.de.j4velin.picturechooser.crop.CropFragment.java", "BodyUseAPI": ["getResources().getDimensionPixelSize(int)"], "Fixed commit": "b10e7d378f2f42d3b40f3d79d867941cbe12fe32", "Url": "https://api.github.com/repos/j4velin/PictureChooser", "Date": "2015-02-04T13:25:58Z"},
{"Line": "=>2102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<java.util.Map.Entry<java.lang.String, java.lang.String>>.next()", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((availableValue != null) && (availableValue.equals(entry.getValue()))) { continue; }else { availableClaims.put(claimURI, entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7064/buggy-version/core.org.wso2.carbon.user.core.src.main.java.org.wso2.carbon.user.core.jdbc.JDBCUserStoreManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()"], "Fixed commit": "123f101668aaa6f6ae8d7269d7c5d8f21a74de18", "Url": "https://api.github.com/repos/thanujalk/carbon-kernel", "Date": "2017-06-14T02:38:53Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((col < (getColumnCount())) && (row < (getRowCount()))) && (col > (-1))) && (row > (-1))) { if ((col == 5) && (((java.lang.Integer) (data.get(row)[col])) == (-1))) return \"\"; return data.get(row)[col]; }else return \"null\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7530/buggy-version/RequirementsManager.src.edu.wpi.cs.wpisuitetng.modules.RequirementsManager.tabs.RequirementTable.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Object[]>.get(int)", "java.util.ArrayList<java.lang.Object[]>.get(int)"], "Fixed commit": "36ab53333d8a9bc15295a5e661b515b01016c9aa", "Url": "https://api.github.com/repos/cmdunkers/wpi-suite-tng", "Date": "2013-03-27T18:15:02Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIndex()) > (-1)) { view.setTitleAt(getIndex(), title); tabComponent.invalidate(); }else java.lang.System.out.println(\"Blank ID. title\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7530/buggy-version/RequirementsManager.src.edu.wpi.cs.wpisuitetng.modules.RequirementsManager.tabs.Tab.java", "BodyUseAPI": [], "Fixed commit": "36ab53333d8a9bc15295a5e661b515b01016c9aa", "Url": "https://api.github.com/repos/cmdunkers/wpi-suite-tng", "Date": "2013-03-27T18:15:02Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIndex()) > (-1)) { view.setToolTipTextAt(getIndex(), toolTipText); }else java.lang.System.out.println(\"Blank ID. Tooltip\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7530/buggy-version/RequirementsManager.src.edu.wpi.cs.wpisuitetng.modules.RequirementsManager.tabs.Tab.java", "BodyUseAPI": [], "Fixed commit": "36ab53333d8a9bc15295a5e661b515b01016c9aa", "Url": "https://api.github.com/repos/cmdunkers/wpi-suite-tng", "Date": "2013-03-27T18:15:02Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getContentResolver().query(android.net.Uri,<nulltype>,<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cursor.moveToFirst())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4687/buggy-version/app.src.main.java.com.dhruvb.popularmovies.MovieDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "7c8573e5d047c5c990545425135b398369bf070c", "Url": "https://api.github.com/repos/dhruvbaldawa/PopularMovies", "Date": "2016-01-18T09:37:52Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == 103) { android.widget.Toast.makeText(this, \"\u8bf7\u68c0\u67e5\u76f8\u673a\u6743\u9650~\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4486/buggy-version/cameraapplication.src.main.java.com.zxing.cameraapplication.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b90140aa103bdcad28b1d6f4d0ff45e650fa6f63", "Url": "https://api.github.com/repos/CJT2325/CameraView", "Date": "2017-06-12T02:05:51Z"},
{"Line": "=>2321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasWritableAppCache()) libraryPath.add(getWritableAppCache());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/957/buggy-version/capsule.src.main.java.Capsule.java", "BodyUseAPI": [], "Fixed commit": "42f7207ef206d51ec72e492c33b48bce0d3c969f", "Url": "https://api.github.com/repos/puniverse/capsule", "Date": "2015-04-15T11:46:31Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.gargjayesh.practice.karaf.weatherstation.impl.internal.DummyDataStorage.temperatureData.size()) < 20) { com.gargjayesh.practice.karaf.weatherstation.impl.internal.DummyDataStorage.temperatureData.addAll(temperatureDataFromSensorList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8201/buggy-version/com.gargjayesh.practice.karaf.weatherstation.impl.src.main.java.com.gargjayesh.practice.karaf.weatherstation.impl.internal.DummyDataStorage.java", "BodyUseAPI": ["java.util.List<com.gargjayesh.practice.karaf.views.entities.Temperature>.addAll(java.util.List<com.gargjayesh.practice.karaf.views.entities.Temperature>)"], "Fixed commit": "3354017130db0719ea8f254a25d1bc8f44442aa6", "Url": "https://api.github.com/repos/jayeshgarg/OSGiPractice", "Date": "2017-10-27T06:47:36Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.gargjayesh.practice.karaf.weatherstation.impl.internal.DummyDataStorage.temperatureData.size()) < 20) { com.gargjayesh.practice.karaf.weatherstation.impl.internal.DummyDataStorage.temperatureData.add(temperatureDataFromSensor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8201/buggy-version/com.gargjayesh.practice.karaf.weatherstation.impl.src.main.java.com.gargjayesh.practice.karaf.weatherstation.impl.internal.DummyDataStorage.java", "BodyUseAPI": ["java.util.List<com.gargjayesh.practice.karaf.views.entities.Temperature>.add(com.gargjayesh.practice.karaf.views.entities.Temperature)"], "Fixed commit": "3354017130db0719ea8f254a25d1bc8f44442aa6", "Url": "https://api.github.com/repos/jayeshgarg/OSGiPractice", "Date": "2017-10-27T06:47:36Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.gargjayesh.practice.karaf.weatherstation.impl.internal.DummyDataStorage.humidityData.size()) < 20) { com.gargjayesh.practice.karaf.weatherstation.impl.internal.DummyDataStorage.humidityData.addAll(humidityDataFromSensorList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8201/buggy-version/com.gargjayesh.practice.karaf.weatherstation.impl.src.main.java.com.gargjayesh.practice.karaf.weatherstation.impl.internal.DummyDataStorage.java", "BodyUseAPI": ["java.util.List<com.gargjayesh.practice.karaf.views.entities.Humidity>.addAll(java.util.List<com.gargjayesh.practice.karaf.views.entities.Humidity>)"], "Fixed commit": "3354017130db0719ea8f254a25d1bc8f44442aa6", "Url": "https://api.github.com/repos/jayeshgarg/OSGiPractice", "Date": "2017-10-27T06:47:36Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.gargjayesh.practice.karaf.weatherstation.impl.internal.DummyDataStorage.humidityData.size()) < 20) { com.gargjayesh.practice.karaf.weatherstation.impl.internal.DummyDataStorage.humidityData.add(humidityDataFromSensor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8201/buggy-version/com.gargjayesh.practice.karaf.weatherstation.impl.src.main.java.com.gargjayesh.practice.karaf.weatherstation.impl.internal.DummyDataStorage.java", "BodyUseAPI": ["java.util.List<com.gargjayesh.practice.karaf.views.entities.Humidity>.add(com.gargjayesh.practice.karaf.views.entities.Humidity)"], "Fixed commit": "3354017130db0719ea8f254a25d1bc8f44442aa6", "Url": "https://api.github.com/repos/jayeshgarg/OSGiPractice", "Date": "2017-10-27T06:47:36Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (session.getAttribute(\"loggedIn\").equals(\"true\")) { session.invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7577/buggy-version/Splice.src.main.java.com.revature._611.logic.Commands.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.invalidate()"], "Fixed commit": "04a2a6393fee61ab9002c8a2c57f608ebd914a8d", "Url": "https://api.github.com/repos/1610oct24java/six-eleven", "Date": "2016-12-07T04:46:59Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(startID.equals(zielID))) { java.lang.String antwort = \"{}\"; com.fhaachen.swe.freespace.main.Knoten start = new com.fhaachen.swe.freespace.main.Knoten(startID); com.fhaachen.swe.freespace.main.Knoten ziel = new com.fhaachen.swe.freespace.main.Knoten(zielID); java.util.LinkedList<com.fhaachen.swe.freespace.main.Knoten> weg = com.fhaachen.swe.freespace.main.Weg.getWeg(start, ziel); if (weg != null) { antwort = com.fhaachen.swe.freespace.JsonHelper.getJsonStringFromMap(weg); return javax.ws.rs.core.Response.ok(antwort, MediaType.APPLICATION_JSON).build(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6210/buggy-version/Implementierung.FreeSpace-Server.src.main.java.com.fhaachen.swe.freespace.main.Weg.java", "BodyUseAPI": [], "Fixed commit": "d26a581abbd9c956dd370d3208c854c6e7205b9a", "Url": "https://api.github.com/repos/thomasgor/swe", "Date": "2017-01-12T12:12:08Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FileModel.getLevelWords(WordFile,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (levelWords == null) { return 0; }else { int count = 0; for (java.lang.String s : levelWords) { if (s.equals(word)) { count++; } } return count; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7783/buggy-version/src.FileModel.java", "BodyUseAPI": [], "Fixed commit": "a6271445c4cb059d030f2f17d0441c9dc1a22566", "Url": "https://api.github.com/repos/FMcIntosh/VoxProtoFAM", "Date": "2016-09-16T13:40:06Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((service != null) && (!(service.isEmpty()))) { org.mskcc.cbio.oncokb.util.HttpUtils.postRequest((service + \"?cmd=reset\"), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1691/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.CacheUtils.java", "BodyUseAPI": ["org.mskcc.cbio.oncokb.util.HttpUtils.postRequest(java.lang.String,java.lang.String)"], "Fixed commit": "d124d2666b8d468ca5cb97eb13e2f2798c712142", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2017-03-28T20:03:08Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((service != null) && (!(service.isEmpty()))) { org.mskcc.cbio.oncokb.util.HttpUtils.postRequest(((service + \"?cmd=updateGene&hugoSymbol=\") + (gene.getHugoSymbol())), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1691/buggy-version/core.src.main.java.org.mskcc.cbio.oncokb.util.CacheUtils.java", "BodyUseAPI": ["org.mskcc.cbio.oncokb.util.HttpUtils.postRequest(((service + \"?cmd=updateGene&hugoSymbol=\") + (gene.getHugoSymbol())),java.lang.String)"], "Fixed commit": "d124d2666b8d468ca5cb97eb13e2f2798c712142", "Url": "https://api.github.com/repos/zhx828/oncokb", "Date": "2017-03-28T20:03:08Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(nodeText.isEmpty())) { itemMap.put(nodeName, java.lang.Integer.parseInt(nodeText)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5817/buggy-version/src.com.tidesofwaronline.Exodus.Config.XMLLoader.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,int)"], "Fixed commit": "a62e0c08f95ab69b8d525ef5453adb6951d3ded9", "Url": "https://api.github.com/repos/TidesofWarOnline/Exodus", "Date": "2013-03-24T02:49:46Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.tidesofwaronline.Exodus.Config.XMLLoader.getEnumValue(map, key)) != null) { itemMap.put(map, com.tidesofwaronline.Exodus.Config.XMLLoader.getEnumValue(map, key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5817/buggy-version/src.com.tidesofwaronline.Exodus.Config.XMLLoader.java", "BodyUseAPI": ["com.tidesofwaronline.Exodus.Config.XMLLoader.getEnumValue(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)"], "Fixed commit": "a62e0c08f95ab69b8d525ef5453adb6951d3ded9", "Url": "https://api.github.com/repos/TidesofWarOnline/Exodus", "Date": "2013-03-24T02:49:46Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mBluetoothAdapter) != null) && ((mBluetoothGatt) != null)) { android.util.Log.i(TAG, \"Reading Sensor Config\"); mBluetoothGatt.readCharacteristic(BoardSensorConfigChar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3892/buggy-version/Android_code.STEM-METER.app.src.main.java.com.stemmeter.stem_meter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "60df9f5179efa5f22d37631b008c5a20c36c1120", "Url": "https://api.github.com/repos/jhansen3141/STEM_Meter", "Date": "2017-02-24T17:11:11Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hxdcml.sql.QueryMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (node.isExhaust()) search = com.hxdcml.sql.SQLBinder.exhaustFormat(search);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/670/buggy-version/Database.src.com.hxdcml.wrapper.MagicWrapper.java", "BodyUseAPI": [], "Fixed commit": "a4676919cdb8a4884285ba9af58d9d67323507f6", "Url": "https://api.github.com/repos/souleiman/ManaBase", "Date": "2013-01-25T17:26:46Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.mqttServiceManager) != null) && (this.mqttServiceManager.isServiceRunning())) { this.mqttServiceManager.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3834/buggy-version/RippleAndroid.src.main.java.mil.afrl.discoverylab.sate13.rippleandroid.MainActivity.java", "BodyUseAPI": ["mil.afrl.discoverylab.sate13.rippleandroid.mqtt.MQTTServiceManager.stop()"], "Fixed commit": "ae2124a01e1cf4657710503d19ada2392b4809f8", "Url": "https://api.github.com/repos/ProjectRipple/Ripple-Android", "Date": "2014-05-22T23:30:39Z"},
{"Line": "=>544", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cursor.moveToFirst())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8890/buggy-version/libs.SmartStore.src.com.salesforce.androidsdk.smartstore.store.DBHelper.java", "BodyUseAPI": [], "Fixed commit": "97d188fe8b64ae7be474b64b19266ff5826cfea2", "Url": "https://api.github.com/repos/bhariharan/SalesforceMobileSDK-Android", "Date": "2016-04-06T22:37:52Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((post_comment_list) != null) { post_comment_list.refresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2998/buggy-version/thinksns.thinksns.src.com.thinksns.jkfs.ui.fragment.PostDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "3e2ff246e5af447251eca43eaa806c2806e9a15b", "Url": "https://api.github.com/repos/lien1992/geek", "Date": "2014-06-15T07:35:10Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entity.getPhysicsBody().getLinearVelocity().x) == 0) { play(AnimationState.IDLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2786/buggy-version/src.anim.AnimStateMachine.java", "BodyUseAPI": [], "Fixed commit": "1777321bc3ed50105eb1d6e9cb0a5366a9aabbc2", "Url": "https://api.github.com/repos/TAMED/seasons", "Date": "2013-04-27T15:04:37Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (recipeActivity.getIngredientRowAdapter().isEmpty()) { de.anycook.einkaufszettel.tasks.LoadRecipeIngredientsTask loadRecipeIngredientsTask = new de.anycook.einkaufszettel.tasks.LoadRecipeIngredientsTask(recipeActivity.getIngredientRowAdapter(), view, recipeActivity); loadRecipeIngredientsTask.execute(recipe.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7842/buggy-version/app.src.main.java.de.anycook.einkaufszettel.activities.fragments.recipe.RecipeIngredientListFragment.java", "BodyUseAPI": ["de.anycook.einkaufszettel.activities.RecipeActivity.getIngredientRowAdapter()"], "Fixed commit": "c8c9f76957a53f17bdec40c6528d783d293f703b", "Url": "https://api.github.com/repos/anycook/anycook-einkaufszettel-android", "Date": "2016-06-12T19:18:21Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fluids.IFluidHandler.getTankInfo(net.minecraftforge.common.ForgeDirection)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tanks == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3535/buggy-version/items.OilCanEmpty.java", "BodyUseAPI": [], "Fixed commit": "6354f28bb8e5f4ee64d8cfe1359f61d01930317b", "Url": "https://api.github.com/repos/cyanobacteruim/BuildCraft-Addon_Basic-Machines", "Date": "2013-11-16T01:53:27Z"},
{"Line": "=>807", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pmOrAm.equals(\"pm\")) { if (hour == 12) { return planner.Parser.createCalendar(year, (month - 1), day, hour, min); }else { return planner.Parser.createCalendar(year, (month - 1), day, (hour + (planner.Parser.HALF_DAY_IN_HOURS)), min); } }else { if (hour == 12) { return planner.Parser.createCalendar(year, (month - 1), day, (hour - (planner.Parser.HALF_DAY_IN_HOURS)), min); }else { return planner.Parser.createCalendar(year, (month - 1), day, hour, min); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5353/buggy-version/source.src.planner.Parser.java", "BodyUseAPI": [], "Fixed commit": "05e9d398a51115fee9002c55cbf504e9dc4dab05", "Url": "https://api.github.com/repos/cs2103jan2015-w15-4j/main", "Date": "2015-04-01T06:12:47Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((schemas == null) || ((schemas.length) < 1)) { return newSchemaInternal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4667/buggy-version/jxvc.src.main.java.com.componentcorp.xml.validation.IntrinsicSchemaFactory.java", "BodyUseAPI": [], "Fixed commit": "4bc72a567305245491aafd452c4098ea45cd78d8", "Url": "https://api.github.com/repos/rosslamont/jxvc", "Date": "2017-08-09T22:12:21Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (element instanceof org.eclipse.eatop.examples.explorer.CategorizationNode) { return new org.eclipse.jface.viewers.StyledString(getText(element)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7390/buggy-version/examples.org.eclipse.eatop.examples.explorer.src.org.eclipse.eatop.examples.explorer.AppearanceExampleExplorerLabelProvider.java", "BodyUseAPI": ["org.eclipse.eatop.examples.explorer.AppearanceExampleExplorerLabelProvider.getText(java.lang.Object)"], "Fixed commit": "2938a717adc8e289a55226715babf9944c78c93a", "Url": "https://api.github.com/repos/Arccore/synligare", "Date": "2015-05-19T06:06:02Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element instanceof org.eclipse.eatop.examples.explorer.ChildWrapper) { element = ((org.eclipse.eatop.examples.explorer.ChildWrapper) (element)).getObject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7390/buggy-version/examples.org.eclipse.eatop.examples.explorer.src.org.eclipse.eatop.examples.explorer.AppearanceExampleExplorerLabelProvider.java", "BodyUseAPI": [], "Fixed commit": "2938a717adc8e289a55226715babf9944c78c93a", "Url": "https://api.github.com/repos/Arccore/synligare", "Date": "2015-05-19T06:06:02Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selection == null) selection = \"1\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5059/buggy-version/app.src.main.java.com.example.diokey.sunshine.app.data.WeatherProvider.java", "BodyUseAPI": [], "Fixed commit": "aa65c4a85ba676bc563ac929dfaea722c4ffcdb2", "Url": "https://api.github.com/repos/diokey/sunshine", "Date": "2015-03-16T06:19:56Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selection == null) selection = \"1\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5059/buggy-version/app.src.main.java.com.example.diokey.sunshine.app.data.WeatherProvider.java", "BodyUseAPI": [], "Fixed commit": "aa65c4a85ba676bc563ac929dfaea722c4ffcdb2", "Url": "https://api.github.com/repos/diokey/sunshine", "Date": "2015-03-16T06:19:56Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.perl6.nqp.sixmodel.reprs.VMArrayInstance_n.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((clone.slots) != null) clone.slots = this.slots.clone();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7903/buggy-version/src.org.perl6.nqp.sixmodel.reprs.VMArrayInstance_n.java", "BodyUseAPI": [], "Fixed commit": "4b14a9f84de7bf16330bcae4c9e76865448bd3e8", "Url": "https://api.github.com/repos/jnthn/nqp-jvm-prep", "Date": "2013-02-28T01:07:34Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.slots) != null) clone.slots = this.slots.clone();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7903/buggy-version/src.org.perl6.nqp.sixmodel.reprs.VMArrayInstance.java", "BodyUseAPI": [], "Fixed commit": "4b14a9f84de7bf16330bcae4c9e76865448bd3e8", "Url": "https://api.github.com/repos/jnthn/nqp-jvm-prep", "Date": "2013-02-28T01:07:34Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.perl6.nqp.sixmodel.reprs.VMArrayInstance_i.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((clone.slots) != null) clone.slots = this.slots.clone();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7903/buggy-version/src.org.perl6.nqp.sixmodel.reprs.VMArrayInstance_i.java", "BodyUseAPI": [], "Fixed commit": "4b14a9f84de7bf16330bcae4c9e76865448bd3e8", "Url": "https://api.github.com/repos/jnthn/nqp-jvm-prep", "Date": "2013-02-28T01:07:34Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.perl6.nqp.sixmodel.reprs.VMArrayInstance_s.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((clone.slots) != null) clone.slots = this.slots.clone();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7903/buggy-version/src.org.perl6.nqp.sixmodel.reprs.VMArrayInstance_s.java", "BodyUseAPI": [], "Fixed commit": "4b14a9f84de7bf16330bcae4c9e76865448bd3e8", "Url": "https://api.github.com/repos/jnthn/nqp-jvm-prep", "Date": "2013-02-28T01:07:34Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["crudapp.jpautils.EMFProvider.createEntityManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((entityManager != null) && (entityManager.isOpen())) entityManager.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7574/buggy-version/src.main.java.crudapp.dao.PersonRepository.java", "BodyUseAPI": ["javax.persistence.EntityManager.close()"], "Fixed commit": "f88142e823d2d930e767a187d365c94bbbfa8876", "Url": "https://api.github.com/repos/hadson172/JpaHibernateCRUD", "Date": "2016-10-09T15:22:05Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof wyil.lang.type.Type.Union) { wyil.lang.type.Type.Union tu = ((wyil.lang.type.Type.Union) (t)); for (wyil.lang.type.Type e : tu.bounds()) { if (wyil.lang.type.SemanticModel.match(e, v)) { return true; } } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5776/buggy-version/src.wyil.lang.type.SemanticModel.java", "BodyUseAPI": [], "Fixed commit": "73594c2c636c1b7693a8b4d7e687b148052d7f72", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-08-24T07:33:35Z"},
{"Line": "=>1194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (unreadGroupCount.equals(\"0\")) { unreadGroupTextView.setVisibility(View.GONE); }else { unreadGroupTextView.setText(unreadGroupCount); unreadGroupTextView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1545/buggy-version/app.src.main.java.com.zulip.android.activities.ZulipActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "7b3cad09e1752ca6b2e9e6d79eb4963caaae1047", "Url": "https://api.github.com/repos/Sam1301/zulip-android", "Date": "2017-01-15T17:54:53Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user_id) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3422/buggy-version/Habitica.src.main.java.com.magicmicky.habitrpgwrapper.lib.models.Preferences.java", "BodyUseAPI": [], "Fixed commit": "f7d3981eec69d0c23aa50a266db9eae28ce07e8a", "Url": "https://api.github.com/repos/HabitRPG/habitica-android", "Date": "2016-10-02T00:33:25Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((runTimeSeconds / 60) >= 1) { statData.add(((((\"Total run time: \" + (runTimeSeconds / 60)) + \" minutes and \") + (runTimeSeconds % 60)) + \" seconds.\")); }else { statData.add(((\"Total run time: \" + runTimeSeconds) + \" seconds.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6583/buggy-version/src.main.java.main.Othello.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "90d9baeeb24ab426d54a0160a1efd1f08033159a", "Url": "https://api.github.com/repos/Owen2284/BlancheNoire", "Date": "2017-05-01T23:18:04Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["user.getAttribs().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (attr == null) { attr = new com.tremolosecurity.saml.Attribute(localName); user.getAttribs().put(localName, attr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6233/buggy-version/unison.unison-server-core.src.main.java.com.tremolosecurity.provisioning.tasks.AddAttribute.java", "BodyUseAPI": [], "Fixed commit": "b7fdf4daeb3317674eb2899b62052fdc29e1066d", "Url": "https://api.github.com/repos/TremoloSecurity/OpenUnison", "Date": "2016-09-17T00:32:18Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (additionalProperties.containsKey(CodegenConstants.OPTIONAL_EMIT_DEFAULT_VALUES)) { setOptionalEmitDefaultValue(java.lang.Boolean.valueOf(additionalProperties.get(CodegenConstants.OPTIONAL_EMIT_DEFAULT_VALUES).toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8377/buggy-version/modules.swagger-codegen.src.main.java.io.swagger.codegen.languages.AbstractCSharpCodegen.java", "BodyUseAPI": ["io.swagger.codegen.languages.AbstractCSharpCodegen.setOptionalEmitDefaultValue(java.lang.Boolean)", "io.swagger.codegen.languages.AbstractCSharpCodegen.get(CodegenConstants.OPTIONAL_EMIT_DEFAULT_VALUES)", "java.lang.Boolean.valueOf(additionalProperties.get(CodegenConstants.OPTIONAL_EMIT_DEFAULT_VALUES).toString())", "additionalProperties.get(CodegenConstants.OPTIONAL_EMIT_DEFAULT_VALUES).toString()"], "Fixed commit": "033b9871b3eda94128ee4fe6f0685f61a410225a", "Url": "https://api.github.com/repos/MathiasWasAlreadyTaken/swagger-codegen", "Date": "2016-03-03T09:27:42Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<org.spine3.server.storage.EntityStorageRecord>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (record == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5559/buggy-version/server.src.main.java.org.spine3.server.entity.EntityRepository.java", "BodyUseAPI": [], "Fixed commit": "6514e041cf63a1a87174dcb0c948c2ee9d637a7a", "Url": "https://api.github.com/repos/SpineEventEngine/core-java", "Date": "2016-10-04T09:24:22Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.size()) < resultExpectedSize) { result.add(null); resultExpectedSize++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5559/buggy-version/server.src.main.java.org.spine3.server.storage.memory.InMemoryRecordStorage.java", "BodyUseAPI": ["java.util.Collection<org.spine3.server.storage.EntityStorageRecord>.add(<nulltype>)"], "Fixed commit": "6514e041cf63a1a87174dcb0c948c2ee9d637a7a", "Url": "https://api.github.com/repos/SpineEventEngine/core-java", "Date": "2016-10-04T09:24:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modelTile.isOccupied()) { setBackground(java.awt.Color.ORANGE); }else { setBackground(java.awt.Color.RED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2615/buggy-version/src.fiuba.algo3.view.EarthTileView.java", "BodyUseAPI": [], "Fixed commit": "fbc6c1346cbedffa00633add2a53b77eed72f3ba", "Url": "https://api.github.com/repos/algoCraftDeveloperTeam/algosIII_tpFinal", "Date": "2015-06-27T20:56:04Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modelTile.isOccupied()) { setBackground(java.awt.Color.ORANGE); }else { setBackground(java.awt.Color.BLUE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2615/buggy-version/src.fiuba.algo3.view.MineralTileView.java", "BodyUseAPI": [], "Fixed commit": "fbc6c1346cbedffa00633add2a53b77eed72f3ba", "Url": "https://api.github.com/repos/algoCraftDeveloperTeam/algosIII_tpFinal", "Date": "2015-06-27T20:56:04Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modelTile.isOccupied()) { setBackground(java.awt.Color.ORANGE); }else { setBackground(java.awt.Color.BLACK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2615/buggy-version/src.fiuba.algo3.view.SpaceTileView.java", "BodyUseAPI": [], "Fixed commit": "fbc6c1346cbedffa00633add2a53b77eed72f3ba", "Url": "https://api.github.com/repos/algoCraftDeveloperTeam/algosIII_tpFinal", "Date": "2015-06-27T20:56:04Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (modelTile.isOccupied()) { setBackground(java.awt.Color.ORANGE); }else { setBackground(java.awt.Color.GREEN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2615/buggy-version/src.fiuba.algo3.view.GasTileView.java", "BodyUseAPI": [], "Fixed commit": "fbc6c1346cbedffa00633add2a53b77eed72f3ba", "Url": "https://api.github.com/repos/algoCraftDeveloperTeam/algosIII_tpFinal", "Date": "2015-06-27T20:56:04Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(attrib.equals(\"\"))) { java.lang.reflect.Field field = xmlClass.getDeclaredField(attrib); field.setAccessible(true); java.lang.Object obj = field.get(xmlObject); if ((obj != null) && (!(obj.toString().equals(\"\")))) { attribBucket.put(attrib, obj.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6313/buggy-version/samplesvc.src.main.java.uk.gov.ons.ctp.response.sample.xml.JaxbAnnotatedTypeUtil.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.Class<? extends java.lang.Object>.getDeclaredField(java.lang.String)"], "Fixed commit": "4bcfb63039591794db40cc3ba694180194993683", "Url": "https://api.github.com/repos/ONSdigital/rm-sample-service", "Date": "2017-05-09T12:52:23Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dax.blocks.block.Block.getBlock(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (before != null) { before.onRemoved(x, y, z, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3106/buggy-version/src.dax.blocks.world.World.java", "BodyUseAPI": ["dax.blocks.block.Block.onRemoved(int,int,int,dax.blocks.world.World)"], "Fixed commit": "07b8fe85d2cdc261e022e4271ac58d2c31f75197", "Url": "https://api.github.com/repos/dax105/blocks", "Date": "2014-07-17T06:32:10Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (testTotal == null) { passTotalLength = 1; }else { passTotalLength = testTotal.toString().length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7490/buggy-version/src.main.java.org.jenkinsci.plugins.badge.ImageResolver.java", "BodyUseAPI": ["java.lang.Integer.toString()", "java.lang.String.length()"], "Fixed commit": "1f82d0352b6540eac419bab42103a875e1de8d98", "Url": "https://api.github.com/repos/SxMShaDoW/embeddable-badges-plugin", "Date": "2016-06-26T21:33:47Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arraylet) origChunkIdx += water.parser.ValueArray.getChunkIndex(key);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2051/buggy-version/src.main.java.water.parser.DParseTask.java", "BodyUseAPI": [], "Fixed commit": "d9a70f16f9ccd22a286dcacb3f27ef63297e6cf7", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2013-03-27T19:30:13Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ref.getAuth()) != null) { uid = ref.getAuth().getUid(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4499/buggy-version/OrganicFarm.app.src.main.java.com.kaylaflaten.organicfarm.DatabaseCtrl.java", "BodyUseAPI": ["ref.getAuth().getUid()", "com.firebase.client.Firebase.getAuth()"], "Fixed commit": "8b199b665f5d3d8cf7cbe7192f8daa1639ed64dd", "Url": "https://api.github.com/repos/wyattjcooper/OrganicFarm", "Date": "2016-04-07T07:10:36Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ref.WeakReference<org.zarroboogs.weibo.activity.OAuthActivity>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((activity.mAccountBean) == null) { activity.mAccountBean = account; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4982/buggy-version/src.org.zarroboogs.weibo.activity.OAuthActivity.java", "BodyUseAPI": [], "Fixed commit": "33654817cd248eca4d961a922559c3e0876e1961", "Url": "https://api.github.com/repos/andforce/iBeebo", "Date": "2015-03-23T11:06:39Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handler) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1265/buggy-version/com.onyx.quadcopter.src.main.java.com.onyx.quadcopter.communication.OnyxServer.java", "BodyUseAPI": [], "Fixed commit": "07a1202e597f7c24c7e619e594061b64a1b4e517", "Url": "https://api.github.com/repos/javachaos/Onyx", "Date": "2016-05-17T05:25:58Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.windup.config.tags.TagService.findTag(java.lang.String)", "org.jboss.windup.config.tags.TagService.findTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((subTag == null) || (superTag == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6098/buggy-version/config.api.src.main.java.org.jboss.windup.config.tags.TagService.java", "BodyUseAPI": [], "Fixed commit": "bb7d5c70b2669c774cd29c2f999e96f5db8da376", "Url": "https://api.github.com/repos/OndraZizka/windup", "Date": "2017-10-17T00:16:16Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.StevenLawson.TotalFreedomMod.TFM_AdminList.getEntry(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (admin == null) { playerMsg(\"Could not find your admin entry! Please notify a developer.\", ChatColor.RED); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5952/buggy-version/src.me.StevenLawson.TotalFreedomMod.Commands.Command_saconfig.java", "BodyUseAPI": [], "Fixed commit": "f2dc46d4ef41ed3517288b2266d878257bf21183", "Url": "https://api.github.com/repos/TotalFreedom/TotalFreedomMod", "Date": "2015-05-30T18:01:10Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Object, TRhs>.get(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (value == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5223/buggy-version/java-common-basic.src.main.java.common.basic.utils.ReflectionUtil.java", "BodyUseAPI": [], "Fixed commit": "36cc574228b7afd9ba75b2beeecba1b27e90358f", "Url": "https://api.github.com/repos/nativebinary/java-common", "Date": "2014-11-14T08:09:59Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kolsummaEdit.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(inputTextValue.equals(\"\"))) { inputValue = java.lang.Double.parseDouble(inputTextValue); result = calculator.convert(inputValue, 1, 5, 2); summaView.setText(java.lang.String.valueOf(result)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7725/buggy-version/app.src.main.java.kg.obval.ov.Tablo.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "8ec5db89b46b4297771274ffec22dd29f92f86f5", "Url": "https://api.github.com/repos/NurbekAl/OV", "Date": "2017-04-25T16:25:11Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (start >= pre) { continue; }else { if ((start + 1) == pre) { result.add(java.lang.Integer.toString(start)); }else { result.add(((start + \"->\") + (pre - 1))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1919/buggy-version/src.MissingRanges.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)", "java.lang.Integer.toString(int)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "d4d756791a25795264659a7d507bf2a1cf3484a1", "Url": "https://api.github.com/repos/yao23/Java_Playground", "Date": "2017-07-20T07:00:57Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((server.getName()) == null) || ((server.getType()) == null)) || ((server.getMap()) == null)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2572/buggy-version/src.main.java.org.kwstudios.play.kwbungeelobby.minigames.MinigameRequests.java", "BodyUseAPI": [], "Fixed commit": "ae92737d3b11a9d2b52f54d5b58e26d3bf6f797a", "Url": "https://api.github.com/repos/KWStudios/KWBungeeLobby", "Date": "2016-01-22T17:07:33Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.toString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (hour.equals(\"0\")) { hour = \"12\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4071/buggy-version/LifeReminders.app.src.main.java.com.jdndeveloper.lifereminders.adapter.NotificationAdapter.java", "BodyUseAPI": [], "Fixed commit": "6576a137c04e2a83f17fcf38dbbd6be78706402b", "Url": "https://api.github.com/repos/JDNdeveloper/Off-By-One", "Date": "2015-03-06T18:20:38Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == data) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5265/buggy-version/ZbarCodeDemo.app.src.main.java.znq.com.flowlayoutdemo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ddab7d8a5925be0f021868bbbdf07f4393e5e213", "Url": "https://api.github.com/repos/zybieku/ZbarCode", "Date": "2017-11-15T09:31:53Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((database) != null) { database.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3589/buggy-version/Kassenautomat-1-master.Kassenautomat_DHBW_AS.app.src.main.java.com.example.michael.kassenautomat_dhbw.database.DatabaseConnection.java", "BodyUseAPI": [], "Fixed commit": "493c427c6166d11309f1e3110fdb234850e7c3ff", "Url": "https://api.github.com/repos/Poescho/Advanced-SWE", "Date": "2016-12-22T14:06:37Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s[2].startsWith(\"_:\")) { (ctxCounter.distinctBlankNodeObjects)++; }else { (ctxCounter.distinctLiterals)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1020/buggy-version/tools.src.main.java.com.msd.gin.halyard.tools.HalyardStats.java", "BodyUseAPI": [], "Fixed commit": "cf703c925ba89fb716a12f1009710e5eaa905854", "Url": "https://api.github.com/repos/Merck/Halyard", "Date": "2017-05-18T07:04:58Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s[2].startsWith(\"_:\")) { (rootCounter.distinctBlankNodeObjects)++; }else { (rootCounter.distinctLiterals)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1020/buggy-version/tools.src.main.java.com.msd.gin.halyard.tools.HalyardStats.java", "BodyUseAPI": [], "Fixed commit": "cf703c925ba89fb716a12f1009710e5eaa905854", "Url": "https://api.github.com/repos/Merck/Halyard", "Date": "2017-05-18T07:04:58Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["violation.getArtefact().getName()", "java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((artefactPartWithoutBasePackage.isEmpty()) || (artefactName.substring(basePackage.length()).contains(\".\"))) || (basePackage.isEmpty())) { filteredViolations.add(violation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/465/buggy-version/investment-decision-making.src.main.java.org.codeqinvest.investment.QualityInvestmentPlanService.java", "BodyUseAPI": [], "Fixed commit": "e49285463ee9e6b786660528e668d058536d89ad", "Url": "https://api.github.com/repos/CodeQInvest/codeq-invest", "Date": "2013-07-03T15:48:06Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (input == null) { _venue = null; }else { _venue = input.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/859/buggy-version/src.bakatxt.core.Task.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "d0357ea632412e19253c8ea5b3244bdc491e0f7c", "Url": "https://api.github.com/repos/cs2103aug2014-t09-4j/main", "Date": "2014-10-01T12:36:52Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (input == null) { _date = null; }else { _date = input.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/859/buggy-version/src.bakatxt.core.Task.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "d0357ea632412e19253c8ea5b3244bdc491e0f7c", "Url": "https://api.github.com/repos/cs2103aug2014-t09-4j/main", "Date": "2014-10-01T12:36:52Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (input == null) { _time = null; }else { _time = input.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/859/buggy-version/src.bakatxt.core.Task.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "d0357ea632412e19253c8ea5b3244bdc491e0f7c", "Url": "https://api.github.com/repos/cs2103aug2014-t09-4j/main", "Date": "2014-10-01T12:36:52Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (input == null) { _description = null; }else { _description = input.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/859/buggy-version/src.bakatxt.core.Task.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "d0357ea632412e19253c8ea5b3244bdc491e0f7c", "Url": "https://api.github.com/repos/cs2103aug2014-t09-4j/main", "Date": "2014-10-01T12:36:52Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((movie.getDuration(movie.id)) < 0) { try { java.lang.Thread.sleep(2000); } catch (java.lang.Exception e) { e.printStackTrace(); } java.lang.System.out.println(\"Sleeping\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6186/buggy-version/src.main.java.org.datavyu.plugins.qtkitplayer.QTKitViewer.java", "BodyUseAPI": [], "Fixed commit": "18fd8aaf5b04dfa12c9cffe73b5ec99abfde244e", "Url": "https://api.github.com/repos/databrary/datavyu", "Date": "2016-01-25T21:00:06Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((parameterResolvers[i]) == null) { throw new org.axonframework.messaging.annotation.UnsupportedHandlerException(((((((\"Unable to resolver parameter \" + i) + \" (\") + (parameters[i].getType().getSimpleName())) + \") in handler \") + (executable.toGenericString())) + \".\"), executable); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8545/buggy-version/core.src.main.java.org.axonframework.messaging.annotation.AnnotatedMessageHandlingMember.java", "BodyUseAPI": [], "Fixed commit": "82bf3f87fb380a59ac6d8d19d226a9c69f8465d5", "Url": "https://api.github.com/repos/AxonFramework/AxonFramework", "Date": "2016-08-02T12:29:24Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.ChatColor.translateAlternateColorCodes(char,messageConfig.getString(key))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (message.isEmpty()) { localeMessages.remove(key); }else { localeMessages.put(key, message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6379/buggy-version/bukkit.src.main.java.com.github.games647.fastlogin.bukkit.BukkitCore.java", "BodyUseAPI": ["com.github.games647.fastlogin.bukkit.BukkitCore.put(java.lang.String,java.lang.String)"], "Fixed commit": "2881689f097f653f32955b81edac879ae1755440", "Url": "https://api.github.com/repos/AuthMe/FastLogin", "Date": "2016-06-15T15:35:10Z"},
{"Line": "=>840", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((numInitialAdoptersPerProduct.get(fpd)) > 0) { java.util.Set<java.lang.Integer> adopterIndices = IRPact_modellierung.helper.LazynessHelper.deriveAdopters(numInitialAdoptersPerProduct.get(fpd), numberOfConsumers); for (java.lang.Integer currentIndex : adopterIndices) { initiallyAdoptedProductsByAgentIndex.get(currentIndex).add(fpd); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2288/buggy-version/src.main.java.IRPact_modellierung.helper.LazynessHelper.java", "BodyUseAPI": ["IRPact_modellierung.helper.LazynessHelper.deriveAdopters(numInitialAdoptersPerProduct.get(fpd),int)", "initiallyAdoptedProductsByAgentIndex.get(currentIndex).add(IRPact_modellierung.helper.FixedProductDescription)", "java.util.Map<IRPact_modellierung.helper.FixedProductDescription, java.lang.Integer>.get(IRPact_modellierung.helper.FixedProductDescription)"], "Fixed commit": "94f08c87aacd72163c1ca244e926b2cd6004cf5f", "Url": "https://api.github.com/repos/Simonjohanning/IRPact", "Date": "2017-12-29T10:41:25Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((currentTitle != null) && (currentTitle.equals(title))) { java.lang.System.out.println(((currentTitle + \"\\t\") + currentTitleCount)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6434/buggy-version/Reducer.src.main.java.Reducer.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "cf29c16e8fc446705c6af164d73b053c38980384", "Url": "https://api.github.com/repos/MukhinAlexey/wiki-map-reduce", "Date": "2017-03-21T10:13:03Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.axiom.om.OMElement.getFirstChildWithName(javax.xml.namespace.QName)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (omDataType != null) { java.lang.String dataTypeStr = omDataType.getText(); java.lang.String dataTypeRefStr = omDataType.getAttributeValue(new javax.xml.namespace.QName(org.deegree.protocol.wps.client.process.ProcessDetails.owsNS, \"reference\")); dataType = new org.deegree.protocol.wps.client.param.ValueWithRef(dataTypeStr, dataTypeRefStr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1732/buggy-version/deegree-core.deegree-core-protocol.deegree-protocol-commons.src.main.java.org.deegree.protocol.wps.client.process.ProcessDetails.java", "BodyUseAPI": ["org.apache.axiom.om.OMElement.getAttributeValue(javax.xml.namespace.QName)", "org.apache.axiom.om.OMElement.getText()"], "Fixed commit": "0544ad46f6722be3040ed467279b412b55458a16", "Url": "https://api.github.com/repos/awst-baum/deegree3", "Date": "2017-07-25T12:37:31Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codeviz.codeviz.Parser.JDTAdapter.getCurrentProject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (javaProject == null) return new java.lang.String[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7874/buggy-version/src.com.codeviz.codeviz.Parser.JDTAdapter.java", "BodyUseAPI": [], "Fixed commit": "717dbc99e117dde359327503f947722e934e92ca", "Url": "https://api.github.com/repos/CodeViz/CodeViz", "Date": "2017-11-06T09:52:58Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == that) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6653/buggy-version/src.main.java.craterdog.collections.abstractions.Collection.java", "BodyUseAPI": [], "Fixed commit": "ccfeea354e14b5155a9cce6361c914a234ad5fe6", "Url": "https://api.github.com/repos/craterdog/java-collection-framework", "Date": "2014-12-16T01:09:44Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (that == null) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6653/buggy-version/src.main.java.craterdog.collections.abstractions.Collection.java", "BodyUseAPI": [], "Fixed commit": "ccfeea354e14b5155a9cce6361c914a234ad5fe6", "Url": "https://api.github.com/repos/craterdog/java-collection-framework", "Date": "2014-12-16T01:09:44Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == 0) { result = java.lang.Integer.compare(this.getNumberOfElements(), that.getNumberOfElements()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6653/buggy-version/src.main.java.craterdog.collections.abstractions.Collection.java", "BodyUseAPI": [], "Fixed commit": "ccfeea354e14b5155a9cce6361c914a234ad5fe6", "Url": "https://api.github.com/repos/craterdog/java-collection-framework", "Date": "2014-12-16T01:09:44Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((null != showlet) && (this.isUserAllowed(reqCtx, showlet))) { reqCtx.addExtraParam(SystemConstants.EXTRAPAR_CURRENT_SHOWLET, showlet); }else { reqCtx.removeExtraParam(SystemConstants.EXTRAPAR_CURRENT_SHOWLET); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6114/buggy-version/src.main.java.com.agiletec.aps.tags.ExecShowletTag.java", "BodyUseAPI": ["com.agiletec.aps.system.RequestContext.addExtraParam(SystemConstants.EXTRAPAR_CURRENT_SHOWLET,com.agiletec.aps.system.services.page.Showlet)", "com.agiletec.aps.system.RequestContext.removeExtraParam(SystemConstants.EXTRAPAR_CURRENT_SHOWLET)"], "Fixed commit": "f45c1fc5869be953ac232a5e857ae9954887dde6", "Url": "https://api.github.com/repos/entando/entando-core-engine", "Date": "2013-02-23T17:36:02Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["swissTournamentRunner.Battle.otherPlayer(swissTournamentRunner.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (opponent.getName().equals(\"BYE\")) { return 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2391/buggy-version/src.swissTournamentRunner.Battle.java", "BodyUseAPI": [], "Fixed commit": "e80a824c37e18ac5562b1a818f78c9064e9f3914", "Url": "https://api.github.com/repos/Ferrerothorn/BTC", "Date": "2017-09-18T13:00:16Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p.getName().equals(\"BYE\")) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2391/buggy-version/src.swissTournamentRunner.Battle.java", "BodyUseAPI": [], "Fixed commit": "e80a824c37e18ac5562b1a818f78c9064e9f3914", "Url": "https://api.github.com/repos/Ferrerothorn/BTC", "Date": "2017-09-18T13:00:16Z"},
{"Line": "=>791", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.comze_instancelabs.colormatch.Main.ingame.containsKey(arena))) { com.comze_instancelabs.colormatch.Main.ingame.put(arena, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8732/buggy-version/src.com.comze_instancelabs.colormatch.Main.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.Boolean>.put(java.lang.String,boolean)"], "Fixed commit": "cafc836f13486e3fc6d4844d32514ed3b62636fd", "Url": "https://api.github.com/repos/instance01/ColorMatch", "Date": "2014-02-10T14:46:19Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.grabbed) this.toggle();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8516/buggy-version/src.haven.FlatnessTool.java", "BodyUseAPI": [], "Fixed commit": "187028ab742d525e43c420059e1a10984569500e", "Url": "https://api.github.com/repos/DonnEssime/Custom-Salem", "Date": "2013-09-05T08:43:19Z"},
{"Line": "=>2644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.ofbiz.base.util.UtilValidate.isNotEmpty(parameters.get(\"productWidth\"))) { if ((java.lang.Double.parseDouble(((java.lang.String) (parameters.get(\"productWidth\"))))) < 0) { return org.ofbiz.service.ServiceUtil.returnError(\"\u5e45\u5bbd\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8e0\uff0c\u8bf7\u786e\u8ba4!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2771/buggy-version/hot-deploy.zuczugcommon.src.com.zuczug.product.ZuczugProductServices.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.lang.Double.parseDouble(java.lang.Object)"], "Fixed commit": "9790917aed9b7661512301225d50f256ca1561a2", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-07-08T03:10:00Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.service.GroupLocalServiceUtil.getGroup(creditApp.getVendorId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((com.tamarack.creekridge.managedocument.ManageDocumentUtil.getExpandoValue(group, \"Provider Name\")) != null) tokenMap.put(\"Provider Name\", com.tamarack.creekridge.managedocument.ManageDocumentUtil.getExpandoValue(group, \"Provider Name\").getData());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/411/buggy-version/docroot.WEB-INF.src.com.tamarack.creekridge.managedocument.ManageDocumentUtil.java", "BodyUseAPI": ["com.liferay.portlet.expando.model.ExpandoValue.getData()", "java.util.HashMap<java.lang.String, java.lang.Object>.put(java.lang.String,com.tamarack.creekridge.managedocument.ManageDocumentUtil.getExpandoValue(group, \"Provider Name\").getData())", "com.tamarack.creekridge.managedocument.ManageDocumentUtil.getExpandoValue(com.liferay.portal.model.Group,java.lang.String)"], "Fixed commit": "1ba7ef964d54767ab8753fca09dbdc27f831ced8", "Url": "https://api.github.com/repos/TamarackConsulting/Creekridge_Portal", "Date": "2015-02-25T19:34:00Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (angle < (-(java.lang.Math.PI))) { angle += (java.lang.Math.PI) * 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/9095/buggy-version/src.org.pavement.roads.CircleSplinePath.java", "BodyUseAPI": [], "Fixed commit": "648b5d1cb3245cbad2307e971d7d8b609f1df143", "Url": "https://api.github.com/repos/LiviasSecret/Pavement", "Date": "2014-05-14T02:51:19Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (angle > (java.lang.Math.PI)) { angle -= (java.lang.Math.PI) * 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/9095/buggy-version/src.org.pavement.roads.CircleSplinePath.java", "BodyUseAPI": [], "Fixed commit": "648b5d1cb3245cbad2307e971d7d8b609f1df143", "Url": "https://api.github.com/repos/LiviasSecret/Pavement", "Date": "2014-05-14T02:51:19Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (blue == 221) { this.player.setLockJumping(red, green, blue, Player.UP, Player.DOWN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7270/buggy-version/src.level.Area.java", "BodyUseAPI": ["entity.Player.setLockJumping(int,int,int,Player.UP,Player.DOWN)"], "Fixed commit": "27a1705c1e7267e45f8c27be386f6e9aa5595856", "Url": "https://api.github.com/repos/tommai78101/PokemonWalking", "Date": "2014-03-23T16:18:40Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args[0].equals(\"-\")) { BurrowsWheeler.transform(); }else { BurrowsWheeler.inverseTransform(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2763/buggy-version/10_burrows-wheeler.src.BurrowsWheeler.java", "BodyUseAPI": [], "Fixed commit": "25ddc21bceacdcf62554f4a9874f912f42fffb61", "Url": "https://api.github.com/repos/darbitman/algs4", "Date": "2017-12-28T20:27:30Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cells.isEmpty()) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8420/buggy-version/server.src.main.java.soze.multilife.simulation.Grid.java", "BodyUseAPI": [], "Fixed commit": "2aa7bd5a148ffdd44c50116e7ffcadf46361f78c", "Url": "https://api.github.com/repos/sozemego/multilife", "Date": "2017-02-27T10:54:24Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wordFrequencies.isEmpty()) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8215/buggy-version/src.main.java.wordcloud.WordCloud.java", "BodyUseAPI": [], "Fixed commit": "81f0867e6de65614c598ebdea471e9dd0aab1c85", "Url": "https://api.github.com/repos/kennycason/kumo", "Date": "2014-07-16T21:09:14Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startX + x) >= (width)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8215/buggy-version/src.main.java.wordcloud.WordCloud.java", "BodyUseAPI": [], "Fixed commit": "81f0867e6de65614c598ebdea471e9dd0aab1c85", "Url": "https://api.github.com/repos/kennycason/kumo", "Date": "2014-07-16T21:09:14Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.evercam.Defaults.getAuth(Auth.TYPE_BASIC)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (auth != null) { username = defaults.getAuth(Auth.TYPE_BASIC).getUsername(); password = defaults.getAuth(Auth.TYPE_BASIC).getPassword(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8557/buggy-version/src.io.evercam.network.query.EvercamQuery.java", "BodyUseAPI": [], "Fixed commit": "807539ae26a2e7c5f68350fc00b658ecc6c37200", "Url": "https://api.github.com/repos/evercam/evercam-discovery-java", "Date": "2015-10-13T09:35:22Z"},
{"Line": "=>733", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((marker.value) == (WsqHelper.EOI_WSQ)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4431/buggy-version/src.main.java.org.jnbis.internal.WsqDecoder.java", "BodyUseAPI": [], "Fixed commit": "400933d0790dc9a7672a53687e6ee9df89d0eec8", "Url": "https://api.github.com/repos/kareez/jnbis", "Date": "2017-12-12T21:21:32Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((marker.value) == (WsqHelper.EOI_WSQ)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4431/buggy-version/src.main.java.org.jnbis.internal.WsqDecoder.java", "BodyUseAPI": [], "Fixed commit": "400933d0790dc9a7672a53687e6ee9df89d0eec8", "Url": "https://api.github.com/repos/kareez/jnbis", "Date": "2017-12-12T21:21:32Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field[(y + (i * dy))][(x + (i * dx))].getOwnedBy()) != null) { if ((field[(y + (i * dy))][(x + (i * dx))].getOwnedBy().getIsOpponent()) == true) { cnt++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1213/buggy-version/src.de.dhbw.vierpunkt.logic.Match.java", "BodyUseAPI": ["field[(y + (i * dy))][(x + (i * dx))].getOwnedBy()", "field[(y + (i * dy))][(x + (i * dx))].getOwnedBy().getIsOpponent()"], "Fixed commit": "5f62ba5faacfb2133dd9bd7ea9becfde7e5e712b", "Url": "https://api.github.com/repos/SvenC56/vierpunkt", "Date": "2016-11-12T10:33:13Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field[(y + (i * dy))][(x + (i * dx))].getOwnedBy()) != null) { if ((field[(y + (i * dy))][(x + (i * dx))].getOwnedBy().getIsOpponent()) == false) { cnt++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1213/buggy-version/src.de.dhbw.vierpunkt.logic.Match.java", "BodyUseAPI": ["field[(y + (i * dy))][(x + (i * dx))].getOwnedBy()", "field[(y + (i * dy))][(x + (i * dx))].getOwnedBy().getIsOpponent()"], "Fixed commit": "5f62ba5faacfb2133dd9bd7ea9becfde7e5e712b", "Url": "https://api.github.com/repos/SvenC56/vierpunkt", "Date": "2016-11-12T10:33:13Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (redirectPageName == (org.pms.enums.PageName.PARISH)) { redirectedActionName = \"redirect:/viewparish.action\"; }else if (redirectPageName == (org.pms.enums.PageName.MASSCENTRE)) { redirectedActionName = \"redirect:/viewmasscentre.action\"; }else if (redirectPageName == (org.pms.enums.PageName.PRAYERUNIT)) { redirectedActionName = \"redirect:/viewprayerunit.action\"; }else if (redirectPageName == (org.pms.enums.PageName.FAMILY)) { redirectedActionName = \"redirect:/viewfamily.action\"; }else { redirectedActionName = redirectPageName.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8142/buggy-version/src.main.java.org.pms.controllers.LoginController.java", "BodyUseAPI": ["org.pms.enums.PageName.toString()"], "Fixed commit": "0144fe33e63c1c08bde3569e997308f2789f1ad5", "Url": "https://api.github.com/repos/tijomathew/pms", "Date": "2015-09-07T06:19:34Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client.level) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8506/buggy-version/src.engine.network.packet.Packet38MobAttack.java", "BodyUseAPI": [], "Fixed commit": "43bd1a7f03d25f9aaad5476f99f3c7df5ea90022", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2016-07-22T23:52:02Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(criticalSections.contains(id))) { criticalSections.add(id); handler.removeCallbacks(executor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2079/buggy-version/app.src.main.java.ru.yandex.yamblz.handler.StubCriticalSectionsHandler.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.add(int)"], "Fixed commit": "1128205d5e22b46d67dd437ba1ed9e6e8c649178", "Url": "https://api.github.com/repos/bobrusha/background", "Date": "2016-07-28T09:32:09Z"},
{"Line": "=>453", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((segments) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2164/buggy-version/src.main.java.com.jinnova.smartpad.partner.Catalog.java", "BodyUseAPI": [], "Fixed commit": "124b68e41aae6e5e58593b3b51d5768c4d92d985", "Url": "https://api.github.com/repos/smartpad/common", "Date": "2014-05-17T04:29:22Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((threadPoolQueue) != null) { return threadPoolQueue.remainingCapacity(); }else { return 99; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/983/buggy-version/modules.flowable-engine.src.main.java.org.flowable.engine.impl.asyncexecutor.DefaultAsyncJobExecutor.java", "BodyUseAPI": [], "Fixed commit": "f73e62bf2ee9ea67cf4af13076cb675e077114b1", "Url": "https://api.github.com/repos/flowable/flowable-engine", "Date": "2016-12-23T15:44:33Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.getRowCount()", "com.vgi.mafscaling.ClosedLoop.validate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((polfTableSet && (polfTable.isMap())) && ((mapArray.size()) != logDataTableRowCount)) javax.swing.JOptionPane.showMessageDialog(null, ((((\"Fueling data was set after loading the log file(s) and thus Manifold Abs Pressure column was not specified. '\" + (com.vgi.mafscaling.ClosedLoop.Afr1TableName)) + \"' and '\") + (com.vgi.mafscaling.ClosedLoop.Afr2TableName)) + \"' will not be displayed unless you clear and reload run data\"), \"Warning\", javax.swing.JOptionPane.WARNING_MESSAGE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1389/buggy-version/src.com.vgi.mafscaling.ClosedLoop.java", "BodyUseAPI": [], "Fixed commit": "dc01e4534c382aaaa21a83b9e5efd5c285c1213d", "Url": "https://api.github.com/repos/vimsh/mafscaling", "Date": "2017-03-30T21:10:36Z"},
{"Line": "=>1586", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (roleGroup != null) { org.apache.slider.core.conf.ConfTreeOperations appConf = getAmState().getAppConfSnapshot(); mapKey = appConf.getComponentOpt(roleGroup, org.apache.slider.providers.agent.ROLE_PREFIX, org.apache.slider.providers.agent.DEFAULT_METAINFO_MAP_KEY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6234/buggy-version/slider-core.src.main.java.org.apache.slider.providers.agent.AgentProviderService.java", "BodyUseAPI": ["org.apache.slider.core.conf.ConfTreeOperations.getComponentOpt(java.lang.String,org.apache.slider.providers.agent.ROLE_PREFIX,org.apache.slider.providers.agent.DEFAULT_METAINFO_MAP_KEY)"], "Fixed commit": "937b45b00dcc24245c6c08d6e60a4ab16d73f580", "Url": "https://api.github.com/repos/apache/incubator-slider", "Date": "2016-08-10T15:52:47Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commands == null) return this;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6773/buggy-version/src.java.org.apache.cassandra.schema.TableParams.java", "BodyUseAPI": [], "Fixed commit": "e858a13061d3ec505b4e95b066fbd62067f93f99", "Url": "https://api.github.com/repos/beobal/cassandra", "Date": "2016-03-18T12:18:13Z"},
{"Line": "=>365", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field.getType()) == (java.lang.Boolean.class)) { if (field.get(state).toString().equals(\"true\")) { sql += \" 1\"; }else if (field.get(state).toString().equals(\"false\")) { sql += \" 0\"; } }else if (((field.getType()) == (char.class)) || ((field.getType()) == (java.lang.Character.class))) { sql += (\" '\" + (field.get(state))) + \"'\"; }else if ((field.getType()) == (java.util.Date.class)) { java.util.Date insertDate = ((java.util.Date) (field.get(state))); if (insertDate != null) { sql += (\" '\" + (GeneralConstants.DB_DATE_FORMAT.format(insertDate))) + \"'\"; }else { sql += \" NULL\"; } }else if ((field.get(state)) == (com.fdflib.model.util.WhereClause.NULL)) { sql += \" NULL\"; }else { sql += \" \" + (field.get(state)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4365/buggy-version/src.main.java.com.fdflib.persistence.queries.CoreMySqlQueries.java", "BodyUseAPI": ["java.lang.reflect.Field.get(S)", "java.lang.reflect.Field.get(S)", "java.lang.reflect.Field.getType()", "java.lang.reflect.Field.get(S)", "java.lang.reflect.Field.get(S)", "java.lang.String.equals(java.lang.String)", "java.lang.reflect.Field.getType()", "java.lang.Object.toString()", "java.lang.reflect.Field.get(S)", "java.lang.String.equals(java.lang.String)", "java.lang.reflect.Field.get(S)", "java.lang.reflect.Field.getType()", "java.lang.Object.toString()"], "Fixed commit": "a7488cb9648aaaed54938b2ca6f0740bc1e92109", "Url": "https://api.github.com/repos/briangormanly/4dflib", "Date": "2015-09-15T19:24:50Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (mixer != null) { for (blue.mixer.Channel channel : mixer.getAllSourceChannels()) { if (channel.getName().equals(arrangementId)) { c = channel; break; } } if (c == null) { throw new java.lang.RuntimeException((\"Unable to find channel for instrument: \" + arrangementId)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/107/buggy-version/blue-core.src.blue.Arrangement.java", "BodyUseAPI": ["blue.mixer.Mixer.getAllSourceChannels()"], "Fixed commit": "7b69bc7ff7777c7325ab01b038eb7f1077370d81", "Url": "https://api.github.com/repos/kunstmusik/blue", "Date": "2015-05-04T01:58:54Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sender instanceof org.bukkit.command.ConsoleCommandSender) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2255/buggy-version/src.com.randude14.lotteryplus.Perm.java", "BodyUseAPI": [], "Fixed commit": "de3c6415a5869004c5d1fbd14b5e4fd965499e50", "Url": "https://api.github.com/repos/Randude14/LotteryPlus", "Date": "2014-02-10T05:52:23Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetDomainObject instanceof java.lang.String) { return securityService.hasUserPermissionToClass(user, com.abixen.platform.core.model.enumtype.PermissionName.valueOf(((java.lang.String) (permission))), ((java.lang.String) (targetDomainObject))); }else { return securityService.hasUserPermissionToObject(user, com.abixen.platform.core.model.enumtype.PermissionName.valueOf(((java.lang.String) (permission))), ((com.abixen.platform.core.model.SecurableModel) (targetDomainObject))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3395/buggy-version/abixen-platform-core.src.main.java.com.abixen.platform.core.security.PlatformPermissionEvaluator.java", "BodyUseAPI": [], "Fixed commit": "1438f4431bcdea68cadee27f516f10ae32959fc1", "Url": "https://api.github.com/repos/konradkwisniewski/abixen-platform", "Date": "2017-01-28T22:58:03Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.eclipse.code.propose.DeclarationCompletionProposal.getNextPosition(org.eclipse.jface.text.IDocument,int,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (next <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3851/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.propose.DeclarationCompletionProposal.java", "BodyUseAPI": [], "Fixed commit": "b56ddcc30d13b59b654781375a9c81b5fb93c5de", "Url": "https://api.github.com/repos/ceylon/ceylon-ide-eclipse", "Date": "2013-09-20T12:57:48Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.redhat.ceylon.eclipse.code.propose.DeclarationCompletionProposal.getNextPosition(org.eclipse.jface.text.IDocument,int,(pl == null))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (next <= 0) { return super.getSelection(document); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3851/buggy-version/plugins.com.redhat.ceylon.eclipse.ui.src.com.redhat.ceylon.eclipse.code.propose.DeclarationCompletionProposal.java", "BodyUseAPI": [], "Fixed commit": "b56ddcc30d13b59b654781375a9c81b5fb93c5de", "Url": "https://api.github.com/repos/ceylon/ceylon-ide-eclipse", "Date": "2013-09-20T12:57:48Z"},
{"Line": "=>791", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jme3.material.LightList.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((l.getType()) != (Light.Type.Probe)) { lightData.setVector4InArray(color.getRed(), color.getGreen(), color.getBlue(), l.getType().getId(), lightDataIndex); lightDataIndex++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7092/buggy-version/jme3-core.src.main.java.com.jme3.material.Material.java", "BodyUseAPI": ["com.jme3.shader.Uniform.setVector4InArray(color.getRed(),color.getGreen(),color.getBlue(),l.getType().getId(),int)", "com.jme3.material.Light.getType()", "l.getType().getId()"], "Fixed commit": "45321fc7d5a2cb248d78e880f534b5d6c303c727", "Url": "https://api.github.com/repos/riccardobl/jmonkeyengine", "Date": "2015-11-06T08:19:33Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.glite.voms.PKIUtils.getHash(java.security.cert.X509Certificate)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(((java.util.Vector) (certificates.get(hash))).contains(cert))) ((java.util.Vector) (certificates.get(hash))).add(cert);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5138/buggy-version/src.main.java.org.glite.voms.PKIStore.java", "BodyUseAPI": ["java.lang.Object.add(java.security.cert.X509Certificate)", "java.util.Hashtable.get(java.lang.String)"], "Fixed commit": "81429f3ba55dc90d9de293635a7d3f694fba4241", "Url": "https://api.github.com/repos/italiangrid/voms-api-java", "Date": "2012-03-12T10:58:50Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPagerAdapter) == null) { mPagerAdapter = new com.gelakinetic.mtgfam.fragments.CardViewPagerFragment.CardViewPagerAdapter(getChildFragmentManager(), cardIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1684/buggy-version/mobile.src.main.java.com.gelakinetic.mtgfam.fragments.CardViewPagerFragment.java", "BodyUseAPI": [], "Fixed commit": "1e8a240d3f60f3c57be0a66f6d9b7fdc14ef8f8b", "Url": "https://api.github.com/repos/gopat/mtg-familiar", "Date": "2015-12-25T01:42:28Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (myField.isFull()) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3624/buggy-version/src.wildfour.MaxMinMoveFinder.java", "BodyUseAPI": [], "Fixed commit": "63a12b11339e06bd9e15710ae0b1d2a59056fef3", "Url": "https://api.github.com/repos/wild8oar/wildfour", "Date": "2017-05-08T17:09:03Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDoubleQuoted) sb.append('\"');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3188/buggy-version/Java-SOLRStore.src.main.java.prompto.store.solr.SOLRFilterBuilder.java", "BodyUseAPI": [], "Fixed commit": "219d4d3739a9421e3d87c5d13ffd2b1a29e7f656", "Url": "https://api.github.com/repos/prompto/prompto-java", "Date": "2016-05-06T01:21:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDoubleQuoted) sb.append('\"');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3188/buggy-version/Java-SOLRStore.src.main.java.prompto.store.solr.SOLRFilterBuilder.java", "BodyUseAPI": [], "Fixed commit": "219d4d3739a9421e3d87c5d13ffd2b1a29e7f656", "Url": "https://api.github.com/repos/prompto/prompto-java", "Date": "2016-05-06T01:21:22Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((xyz.sangcomz.open_sns.ui.main.fragments.timeline.TimeLineFragment.refreshPostPublishSubject) != null) TimeLineFragment.refreshPostPublishSubject.onNext(post);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/604/buggy-version/app.src.main.java.xyz.sangcomz.open_sns.ui.comment.CommentActivity.java", "BodyUseAPI": [], "Fixed commit": "1b1d680ceca8f414bf9c29753641ee102093ed9b", "Url": "https://api.github.com/repos/sangcomz/Open_SNS", "Date": "2016-02-21T01:58:34Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((downloadBtn) != null) { if (visible) { if ((context) != null) { org.reactome.web.diagram.util.MapSet<java.lang.String, org.reactome.web.diagram.data.interactors.raw.RawInteractor> interactors = context.getInteractors().getRawInteractorsPerResource(selectedResource); if (hasContents(interactors)) { downloadBtn.setVisible(true); }else { downloadBtn.setVisible(false); } } }else { downloadBtn.setVisible(false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8600/buggy-version/src.main.java.org.reactome.web.diagram.controls.settings.tabs.InteractorsTabPanel.java", "BodyUseAPI": [], "Fixed commit": "816689badce0da4beec18f839733b4c16fe467e6", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2016-02-19T14:11:00Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.project.pervsys.picaround.ApplicationClass.alreadyEnabledPersistence())) { android.util.Log.i(com.project.pervsys.picaround.LoginActivity.TAG, \"Enabling database persistence\"); com.google.firebase.database.FirebaseDatabase.getInstance().setPersistenceEnabled(true); com.project.pervsys.picaround.ApplicationClass.setAlreadyEnabledPersistence(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5144/buggy-version/app.src.main.java.com.project.pervsys.picaround.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "4f46fb395456cc8f9cc8faade8a4f214a701db85", "Url": "https://api.github.com/repos/gitRiky/PicAround", "Date": "2017-04-05T10:24:23Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isLastCourse) { divider.setVisibility(View.INVISIBLE); }else { divider.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5071/buggy-version/app.src.main.java.com.cs410.android.ui.CourseListActivity.java", "BodyUseAPI": [], "Fixed commit": "fb1a94ed6f784f4efcf0db3ec272068c46835c7f", "Url": "https://api.github.com/repos/stevengatto/CS410-android", "Date": "2015-04-24T18:44:08Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((emptyState.getVisibility()) != (android.view.View.VISIBLE)) { emptyState.startAnimation(fadeInAnim); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3548/buggy-version/app.src.main.java.me.slackti.notesmatter.ui.MainActivity.java", "BodyUseAPI": ["android.widget.RelativeLayout.startAnimation(android.view.animation.Animation)"], "Fixed commit": "3ea428a15db8c3fb64ce837b9bbf6153b9039018", "Url": "https://api.github.com/repos/JackyMai/notes-matter", "Date": "2017-02-22T11:44:17Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((recView.getVisibility()) != (android.view.View.INVISIBLE)) { recView.startAnimation(fadeOutAnim); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3548/buggy-version/app.src.main.java.me.slackti.notesmatter.ui.MainActivity.java", "BodyUseAPI": ["me.slackti.notesmatter.ui.MainActivity.startAnimation(android.view.animation.Animation)"], "Fixed commit": "3ea428a15db8c3fb64ce837b9bbf6153b9039018", "Url": "https://api.github.com/repos/JackyMai/notes-matter", "Date": "2017-02-22T11:44:17Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sender instanceof org.bukkit.entity.Player) { java.lang.String currentWorld = org.bukkit.Bukkit.getServer().getPlayer(sender.getName()).getWorld().getName(); java.lang.String worldPermissionString = \"worlds.\" + currentWorld; if ((!(plugin.getConfig().isSet(worldPermissionString))) && (org.bukkit.Bukkit.getServer().getPlayer(sender.getName()).getWorld().getName().equals(currentWorld))) { sender.sendMessage(((((ChatPrefix) + \" Set resource pack to \") + (org.bukkit.ChatColor.GREEN)) + (args[2]))); plugin.updateResourcePack(args[2], org.bukkit.Bukkit.getServer().getPlayer(sender.getName())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3848/buggy-version/src.main.java.eu.savagecore.perworldresourcepack.PerWorldResourcePackCommandExecutor.java", "BodyUseAPI": ["org.bukkit.Bukkit.getServer().getPlayer(sender.getName())", "org.bukkit.Bukkit.getServer().getPlayer(sender.getName())", "org.bukkit.Bukkit.getServer().getPlayer(sender.getName()).getWorld()", "org.bukkit.Bukkit.getServer().getPlayer(sender.getName()).getWorld().getName()", "org.bukkit.Bukkit.getServer().getPlayer(sender.getName()).getWorld()", "org.bukkit.command.CommandSender.getName()", "org.bukkit.command.CommandSender.getName()", "org.bukkit.command.CommandSender.getName()", "org.bukkit.Bukkit.getServer().getPlayer(sender.getName()).getWorld().getName().equals(java.lang.String)", "org.bukkit.Bukkit.getServer().getPlayer(sender.getName()).getWorld().getName()", "org.bukkit.Bukkit.getServer().getPlayer(sender.getName())", "eu.savagecore.perworldresourcepack.PerWorldResourcePack.updateResourcePack(java.lang.String,org.bukkit.Bukkit.getServer().getPlayer(sender.getName()))", "org.bukkit.command.CommandSender.sendMessage(((((ChatPrefix) + \" Set resource pack to \") + (org.bukkit.ChatColor.GREEN)) + (args[2])))"], "Fixed commit": "0227854f30b4b99f9eadf33e4375abca7fd46905", "Url": "https://api.github.com/repos/SavageCore/PerWorldResourcePack", "Date": "2017-02-10T01:19:24Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((db) == (org.nutz.dao.DB.ORACLE)) { adapter = new org.nutz.plugins.cache.dao.impl.adapter.XMySqlSqlAdapter(); }else { adapter = new org.nutz.plugins.cache.dao.impl.adapter.XOracleSqlAdapter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7854/buggy-version/nutz-plugins-daocache.src.main.java.org.nutz.plugins.cache.dao.CachedNutDaoExecutor.java", "BodyUseAPI": [], "Fixed commit": "ea6b1eb074a84d613b91063dab0743563d89fb4c", "Url": "https://api.github.com/repos/ywjno/nutzmore", "Date": "2016-06-29T08:48:15Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.temp) { db.deleteRow(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4598/buggy-version/app.src.main.java.bredesh.medico.Notification.NotificationWindow.java", "BodyUseAPI": [], "Fixed commit": "cc76e0423bd6399294f4ca0b297a6715c1ee7996", "Url": "https://api.github.com/repos/edenkes/Medico", "Date": "2017-05-22T21:26:29Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAuthTokenType) == null) { mAuthTokenType = de.jhbruhn.moin.data.auth.AccountGeneral.AUTHTOKEN_TYPE_FULL_ACCESS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8375/buggy-version/mobile.src.main.java.de.jhbruhn.moin.gui.SignInActivity.java", "BodyUseAPI": [], "Fixed commit": "6166b91769387bd45093e1e33b87212ca74151bd", "Url": "https://api.github.com/repos/MoinApp/moinapp-android", "Date": "2014-12-23T14:03:34Z"},
{"Line": "=>594", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dexels.navajo.compiler.tsl.internal.BundleCreatorComponent.checkForRecompile(java.lang.String,java.lang.String,boolean,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (needsRecompile) { forceReinstall = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5351/buggy-version/server.com.dexels.navajo.compiler.tsl.src.com.dexels.navajo.compiler.tsl.internal.BundleCreatorComponent.java", "BodyUseAPI": [], "Fixed commit": "1476ff418f042f8ff4edd06ccdfe47919323db75", "Url": "https://api.github.com/repos/Dexels/navajo", "Date": "2014-03-28T14:29:25Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getComponent(se.chalmers.roguelike.Components.TurnsLeft.class).getTurnsLeft()) <= 0) { input.resetAttackCords(); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5516/buggy-version/se.chalmers.roguelike.Systems.CombatSystem.java", "BodyUseAPI": [], "Fixed commit": "de962c3f4c99b6dce374f62d9a3c49f907f44272", "Url": "https://api.github.com/repos/ravertass/KandidatRoguelike", "Date": "2014-03-21T14:21:09Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selection != null) && (selection != \"\")) { selectionStatement = selection + \" = ? \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4220/buggy-version/app.src.main.java.com.example.android.movieapp.data.FavoritesProvider.java", "BodyUseAPI": [], "Fixed commit": "eb3b5b5a3ad84f86414a3d4233654157c6355491", "Url": "https://api.github.com/repos/rznazn/movie-app", "Date": "2017-04-20T22:19:49Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myExcludePackagesModel) != null) { myExcludePackagesModel.removeAllElements(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8095/buggy-version/src.com.goide.codeInsight.imports.GoAutoImportConfigurable.java", "BodyUseAPI": [], "Fixed commit": "300518ebef7e4f36a41231c8811997c4dead832d", "Url": "https://api.github.com/repos/consulo/consulo-google-go", "Date": "2017-11-18T15:57:09Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lines.isEmpty())) { out.write(((\"Lines \" + (lines.size())) + \"\\n\")); for (anpaint.BasicShape bs : lines) { out.append(bs.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8615/buggy-version/ANPaint.src.anpaint.DrawPanel.java", "BodyUseAPI": ["java.io.BufferedWriter.write(((\"Lines \" + (lines.size())) + \"\\n\"))", "java.util.ArrayList<anpaint.BasicShape>.size()"], "Fixed commit": "f92f9444155fd5382312d27cee953f810836c362", "Url": "https://api.github.com/repos/nbguzman/Drawing-Application", "Date": "2013-04-07T16:48:04Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rectangles.isEmpty())) { out.write(((\"Rectangles \" + (rectangles.size())) + \"\\n\")); for (anpaint.BasicShape bs : rectangles) { out.append(bs.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8615/buggy-version/ANPaint.src.anpaint.DrawPanel.java", "BodyUseAPI": ["java.io.BufferedWriter.write(((\"Rectangles \" + (rectangles.size())) + \"\\n\"))", "java.util.ArrayList<anpaint.BasicShape>.size()"], "Fixed commit": "f92f9444155fd5382312d27cee953f810836c362", "Url": "https://api.github.com/repos/nbguzman/Drawing-Application", "Date": "2013-04-07T16:48:04Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(triangles.isEmpty())) { out.write(((\"Triangles \" + (triangles.size())) + \"\\n\")); for (anpaint.BasicShape bs : triangles) { out.append(bs.toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8615/buggy-version/ANPaint.src.anpaint.DrawPanel.java", "BodyUseAPI": ["java.util.ArrayList<anpaint.BasicShape>.size()", "java.io.BufferedWriter.write(((\"Triangles \" + (triangles.size())) + \"\\n\"))"], "Fixed commit": "f92f9444155fd5382312d27cee953f810836c362", "Url": "https://api.github.com/repos/nbguzman/Drawing-Application", "Date": "2013-04-07T16:48:04Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(type.isAttributes())) { java.lang.String currentFormula = formulaElements.get(i).getValue(); columnId = getColumnId(currentFormula); }else { columnId = valueElements.get(i).getName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5896/buggy-version/src.formula.FormulaDecomposer.java", "BodyUseAPI": [], "Fixed commit": "825db86082f2b34b3e2a78708c5ca3366d664297", "Url": "https://api.github.com/repos/openefsa/EFSA-RCL", "Date": "2017-12-05T08:02:38Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(type.isAttributes())) formulaElements = splitAsFoodex(formula, type.isAttributes());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5896/buggy-version/src.formula.FormulaDecomposer.java", "BodyUseAPI": ["formula.FormulaDecomposer.splitAsFoodex(java.lang.String,boolean)", "formula.FormulaDecomposer.CompoundType.isAttributes()"], "Fixed commit": "825db86082f2b34b3e2a78708c5ca3366d664297", "Url": "https://api.github.com/repos/openefsa/EFSA-RCL", "Date": "2017-12-05T08:02:38Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(type.isAttributes())) formulaElements = splitAsSimple(formula, type.getSeparator(), type.isAttributes());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5896/buggy-version/src.formula.FormulaDecomposer.java", "BodyUseAPI": ["formula.FormulaDecomposer.CompoundType.getSeparator()", "formula.FormulaDecomposer.CompoundType.isAttributes()", "formula.FormulaDecomposer.splitAsSimple(java.lang.String,java.lang.String,boolean)"], "Fixed commit": "825db86082f2b34b3e2a78708c5ca3366d664297", "Url": "https://api.github.com/repos/openefsa/EFSA-RCL", "Date": "2017-12-05T08:02:38Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((p.getSecond()) == null) || ((this.getSecond()) == null)) { if ((((p.getSecond()) == null) && ((this.getSecond()) != null)) || (((p.getSecond()) != null) && ((this.getSecond()) == null))) return false; }else if (!(p.getSecond().equals(this.getSecond()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3223/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.util.Pair.java", "BodyUseAPI": ["edu.cmu.ml.rtw.generic.util.Pair<F, S>.getSecond()", "edu.cmu.ml.rtw.generic.util.Pair<F, S>.getSecond()", "edu.cmu.ml.rtw.generic.util.Pair<F, S>.getSecond()", "S.equals(S)"], "Fixed commit": "7703639fcfd87a489ede576de6fbe8cc69537dee", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2016-04-13T06:28:36Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((p.getFirst()) == null) || ((this.getFirst()) == null)) { if ((((p.getFirst()) == null) && ((this.getFirst()) != null)) || (((p.getFirst()) != null) && ((this.getFirst()) == null))) return false; }else if (!(p.getFirst().equals(this.getFirst()))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3223/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.util.Pair.java", "BodyUseAPI": ["F.equals(F)", "edu.cmu.ml.rtw.generic.util.Pair<F, S>.getFirst()", "edu.cmu.ml.rtw.generic.util.Pair<F, S>.getFirst()", "edu.cmu.ml.rtw.generic.util.Pair<F, S>.getFirst()"], "Fixed commit": "7703639fcfd87a489ede576de6fbe8cc69537dee", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2016-04-13T06:28:36Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.voidedtech.notifytosms.ShowActivity.getActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (bar != null) { bar.setTitle(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2402/buggy-version/app.src.main.java.com.voidedtech.notifytosms.ShowActivity.java", "BodyUseAPI": ["android.app.ActionBar.setTitle(int)"], "Fixed commit": "eea39ce67e0370a803fad6bf9e5b462b4b92c0dd", "Url": "https://api.github.com/repos/enckse/n2s", "Date": "2014-12-06T02:46:32Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.voidedtech.notifytosms.MainActivity.getFilterValue(java.lang.String,java.util.Locale)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.util.regex.Pattern.compile(pattern)) == null) { throw new java.util.regex.PatternSyntaxException(\"No output on compile\", pattern, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2402/buggy-version/app.src.main.java.com.voidedtech.notifytosms.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "eea39ce67e0370a803fad6bf9e5b462b4b92c0dd", "Url": "https://api.github.com/repos/enckse/n2s", "Date": "2014-12-06T02:46:32Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((event.getEntity()) instanceof org.bukkit.entity.Player)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5061/buggy-version/src.me.KeybordPiano459.AntiHax.checks.fight.HitSelf.java", "BodyUseAPI": [], "Fixed commit": "fb2738cec22f5d850ed7d894e753d89df7601270", "Url": "https://api.github.com/repos/keybordpiano459/AntiHax", "Date": "2012-11-09T12:28:56Z"},
{"Line": "=>1006", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((datFile != null) && (!(datFile.isProjectFile()))) { java.io.File dff = new java.io.File(datFile.getOldName()).getParentFile(); if (((dff != null) && (dff.exists())) && (dff.isDirectory())) { prefix = new java.lang.String[]{ dff.getAbsolutePath(), org.nschmidt.ldparteditor.project.Project.getProjectPath(), org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getUnofficialFolderPath(), org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getLdrawFolderPath() }; readyOnlyAt = 3; }else { prefix = new java.lang.String[]{ org.nschmidt.ldparteditor.project.Project.getProjectPath(), org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getUnofficialFolderPath(), org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getLdrawFolderPath() }; } }else { prefix = new java.lang.String[]{ org.nschmidt.ldparteditor.project.Project.getProjectPath(), org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getUnofficialFolderPath(), org.nschmidt.ldparteditor.workbench.WorkbenchManager.getUserSettingState().getLdrawFolderPath() }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7887/buggy-version/src.org.nschmidt.ldparteditor.text.DatParser.java", "BodyUseAPI": ["org.nschmidt.ldparteditor.data.DatFile.getOldName()", "java.io.File.getParentFile()"], "Fixed commit": "5791e62c97840dea4a1e526693cb803a6e9b644d", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-03-24T18:09:55Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.umd.cs.findbugs.classfile.analysis.AnnotationValue.getValue(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (values != null) { for (final java.lang.Object v : values) { if (error.equals(v)) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4480/buggy-version/src.main.java.com.monits.findbugs.effectivejava.ToStringDetector.java", "BodyUseAPI": [], "Fixed commit": "8bec372a4df5c2435ed6cda8e70559f35162ee82", "Url": "https://api.github.com/repos/Monits/findbugs-plugin", "Date": "2016-10-02T22:48:12Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((floor.getName().charAt(((floor.getName().length()) - 1))) == 'B') { b.getFloors().add(0, floor); }else { b.addFloor(floor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8522/buggy-version/src.DataAccess.MapBuilder.java", "BodyUseAPI": ["DataAccess.Building.addFloor(DataAccess.Floor)", "b.getFloors().add(int,DataAccess.Floor)"], "Fixed commit": "e5e9561dd91f699aac17efd8f839abbf833286bb", "Url": "https://api.github.com/repos/Team-Schadenfreude/WPI-Path-Finding-Project", "Date": "2015-12-09T04:04:36Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ex.getMessage().equals(\"OPEN Deal with same name already exist in DB\")) { com.alwarsha.data.DealsProvider dp = com.alwarsha.data.DealsProvider.getInstace(this); deal = new com.alwarsha.app.Deal(); deal = dp.getOpenDealByName(mDealNameId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8399/buggy-version/app.src.main.java.com.alwarsha.activities.DealActivity.java", "BodyUseAPI": [], "Fixed commit": "1a8062302266a343438e51a1fb2874932ffe9a52", "Url": "https://api.github.com/repos/RedEyesClub/Alwarsha", "Date": "2014-06-21T08:20:11Z"},
{"Line": "=>522", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getDamager()) instanceof org.bukkit.entity.LightningStrike) { com.avrgaming.civcraft.main.CivLog.debug(\"onEntityDamageByEntityMonitor Lightning\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3614/buggy-version/civcraft.src.com.avrgaming.civcraft.listener.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "2512edbc350a68209657fedc5d26474bfe2c916a", "Url": "https://api.github.com/repos/ataranlen/civcraft", "Date": "2016-02-01T00:36:27Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((startTime) != null) && ((endTime) == null)) { return false; }else if (((startTime) == null) && ((endTime) != null)) { type = com.equinox.Todo.TYPE.DEADLINE; }else if (((startTime) == null) && ((endTime) == null)) { type = com.equinox.Todo.TYPE.TASK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1239/buggy-version/src.com.equinox.Todo.java", "BodyUseAPI": [], "Fixed commit": "7d2879ec71cb396411670b058f194c8b8cb617a1", "Url": "https://api.github.com/repos/cs2103jan2015-w15-3j/main", "Date": "2015-03-11T09:47:49Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sourceType.equals(targetType)) { return ((T) (original)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5283/buggy-version/core.src.main.java.org.axonframework.serialization.ChainingConverter.java", "BodyUseAPI": [], "Fixed commit": "4701e00ddfd38b80c898db4e0bcdbd1349b1ebfb", "Url": "https://api.github.com/repos/AxonFramework/AxonFramework", "Date": "2016-12-15T22:19:40Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.provider.DocumentsContract.getDocumentId(android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(id))) { try { final android.net.Uri contentUri = android.content.ContentUris.withAppendedId(android.net.Uri.parse(\"content://downloads/public_downloads\"), java.lang.Long.valueOf(id)); return com.yalantis.ucrop.util.FileUtils.getDataColumn(context, contentUri, null, null); } catch (java.lang.NumberFormatException e) { android.util.Log.i(com.yalantis.ucrop.util.FileUtils.TAG, e.getMessage()); return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5706/buggy-version/ucrop.src.main.java.com.yalantis.ucrop.util.FileUtils.java", "BodyUseAPI": ["java.lang.Long.valueOf(java.lang.String)", "android.content.ContentUris.withAppendedId(android.net.Uri.parse(\"content://downloads/public_downloads\"),java.lang.Long)"], "Fixed commit": "5b33feb0fb7c6c01f496b732a7bf951caafc0dc9", "Url": "https://api.github.com/repos/argiad/uCrop", "Date": "2017-08-25T14:50:29Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tars.logic.parser.Parser.parseCommand(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(isReUndoAbleCommand(command))) { model.getRedoableCmdHist().clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8977/buggy-version/src.main.java.tars.logic.LogicManager.java", "BodyUseAPI": [], "Fixed commit": "2ab9666dcc125bbdfc5c59015482fb038dad624c", "Url": "https://api.github.com/repos/CS2103AUG2016-F10-C1/main", "Date": "2016-10-26T11:22:57Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMap) != null) { for (int i = 0; i < (stops.size()); i++) { mMap.addMarker(new com.google.android.gms.maps.model.MarkerOptions().position(new com.google.android.gms.maps.model.LatLng(stops.get(i).latitude, stops.get(i).longitude)).title(stops.get(i).title)); android.util.Log.d(\"ArrivalListAdapter\", (((\"btnOnClick stops \" + (stops.get(i).latitude)) + \" \") + (stops.get(i).longitude))); } mMap.animateCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new com.google.android.gms.maps.model.LatLng(53.219404, 50.198077), 11)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6816/buggy-version/app.src.main.java.com.nikolaychernov.samaratransport.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "cd6f157ce553c004506c7100da5359f96ea684da", "Url": "https://api.github.com/repos/nikolaychernov/SamaraTransport", "Date": "2015-10-31T19:48:16Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (tempFile != null) { deleteTempFile(tempFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/282/buggy-version/src.main.java.org.mapfish.print.servlet.MapPrinterServlet.java", "BodyUseAPI": ["org.mapfish.print.servlet.MapPrinterServlet.deleteTempFile(org.mapfish.print.servlet.MapPrinterServlet.TempFile)"], "Fixed commit": "73feaad219a6ad28887a508591b1467742b3e48c", "Url": "https://api.github.com/repos/geosolutions-it/mapfish-print", "Date": "2015-06-29T10:28:16Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getEnabledPremium().add(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!didntexist) { sender.sendMessage(((org.bukkit.ChatColor.DARK_RED) + \"You are already on the premium list\")); }else { sender.sendMessage(((org.bukkit.ChatColor.DARK_GREEN) + \"Added to the list of premium players\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8753/buggy-version/bukkit.src.main.java.com.github.games647.fastlogin.bukkit.commands.PremiumCommand.java", "BodyUseAPI": [], "Fixed commit": "f2a8446c8dc912e27144b427b76c67c063072834", "Url": "https://api.github.com/repos/games647/FastLogin", "Date": "2016-04-03T01:10:51Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getPlayersInvited().contains(prefix)) { return prefix; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7671/buggy-version/src.simpleserver.config.data.Homes.java", "BodyUseAPI": [], "Fixed commit": "26056e095ff478ea3a8234dcf6e82fe0038213ee", "Url": "https://api.github.com/repos/iBotPeaches/SimpleServer", "Date": "2011-07-21T11:40:35Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.hostname) != null) { this.address = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/461/buggy-version/metrics-graphite.src.main.java.com.codahale.metrics.graphite.Graphite.java", "BodyUseAPI": [], "Fixed commit": "e20d1cae2f9dcf744c3f4da27ee7e92b04f8411f", "Url": "https://api.github.com/repos/alexmnyc/metrics", "Date": "2017-06-22T21:48:07Z"},
{"Line": "=>770", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.stratosphere.compiler.plan.Channel.getSource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((node == (wspn.getRootOfTerminationCriterion())) && ((wspn.getRootOfStepFunction()) == pred)) { chaining = false; }else if (((node.getOutgoingChannels().size()) > 0) && (((wspn.getRootOfStepFunction()) == pred) || ((wspn.getRootOfTerminationCriterion()) == pred))) { chaining = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7813/buggy-version/stratosphere-compiler.src.main.java.eu.stratosphere.compiler.plantranslate.NepheleJobGraphGenerator.java", "BodyUseAPI": ["eu.stratosphere.compiler.plan.SingleInputPlanNode.getOutgoingChannels()", "node.getOutgoingChannels().size()", "eu.stratosphere.compiler.plan.BulkIterationPlanNode.getRootOfTerminationCriterion()", "eu.stratosphere.compiler.plan.BulkIterationPlanNode.getRootOfStepFunction()"], "Fixed commit": "525cb03668b6f6a6bdb4c5c91d350d2e1670c319", "Url": "https://api.github.com/repos/Frank-Wu/stratosphere", "Date": "2014-03-13T21:57:19Z"},
{"Line": "=>1000", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (terminationCriterion != null) { terminationCriterion.accept(identifier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7813/buggy-version/stratosphere-compiler.src.main.java.eu.stratosphere.compiler.PactCompiler.java", "BodyUseAPI": ["eu.stratosphere.compiler.dag.OptimizerNode.accept(eu.stratosphere.compiler.PactCompiler.StaticDynamicPathIdentifier)"], "Fixed commit": "525cb03668b6f6a6bdb4c5c91d350d2e1670c319", "Url": "https://api.github.com/repos/Frank-Wu/stratosphere", "Date": "2014-03-13T21:57:19Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.stratosphere.compiler.dag.OptimizerNode.getAlternativePlans(eu.stratosphere.compiler.costs.CostEstimator)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((candidates.size()) > 0) { java.util.List<eu.stratosphere.compiler.plan.PlanNode> terminationCriterionCandidates = this.terminationCriterion.getAlternativePlans(estimator); for (eu.stratosphere.compiler.plan.PlanNode candidate : candidates) { for (eu.stratosphere.compiler.plan.PlanNode terminationCandidate : terminationCriterionCandidates) { if (this.singleRoot.areBranchCompatible(candidate, terminationCandidate)) { eu.stratosphere.compiler.plan.BulkIterationPlanNode node = new eu.stratosphere.compiler.plan.BulkIterationPlanNode(this, ((\"BulkIteration (\" + (this.getPactContract().getName())) + \")\"), in, pspn, candidate, terminationCandidate); eu.stratosphere.compiler.dataproperties.GlobalProperties gProps = candidate.getGlobalProperties().clone(); eu.stratosphere.compiler.dataproperties.LocalProperties lProps = candidate.getLocalProperties().clone(); node.initProperties(gProps, lProps); target.add(node); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7813/buggy-version/stratosphere-compiler.src.main.java.eu.stratosphere.compiler.dag.BulkIterationNode.java", "BodyUseAPI": [], "Fixed commit": "525cb03668b6f6a6bdb4c5c91d350d2e1670c319", "Url": "https://api.github.com/repos/Frank-Wu/stratosphere", "Date": "2014-03-13T21:57:19Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cell instanceof word.api.interfaces.IElement) { if (cell instanceof word.w2004.elements.tableElements.TableCell) { txt.append(tableCellTop); if (!(border.toString().isEmpty())) txt.append(((\"<w:tcPr><w:tcBorders>\" + (border.toString())) + \"</w:tcBorders></w:tcPr>\")); txt.append(((word.w2004.elements.tableElements.TableCell) (cell)).txt.toString()); txt.append(tableCellBottom); }else { word.api.interfaces.IElement elm = ((word.api.interfaces.IElement) (cell)); txt.append(tableCellTop); if (!(border.toString().isEmpty())) txt.append(((\"<w:tcPr><w:tcBorders>\" + (border.toString())) + \"</w:tcBorders></w:tcPr>\")); if (((elm.getContent()) != null) && ((elm.getContent().isEmpty()) == false)) txt.append(elm.getContent()); else txt.append(\"<w:p><w:r></w:r></w:p>\"); txt.append(tableCellBottom); } }else { throw new java.lang.IllegalArgumentException((\"Parameter can only be String of IElement. You gave me: \" + (cell.getClass().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5008/buggy-version/java2word.src.main.java.word.w2004.elements.tableElements.TableCell.java", "BodyUseAPI": ["java.lang.Class<? extends java.lang.Object>.toString()", "java.lang.Object.getClass()"], "Fixed commit": "3ab8e0ac7390206865c23bb489d52c5d8215c0a7", "Url": "https://api.github.com/repos/phamm/java2word", "Date": "2014-07-16T05:02:46Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(border.toString().isEmpty())) txt.append(((\"<w:tcPr><w:tcBorders>\" + (border.toString())) + \"</w:tcBorders></w:tcPr>\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5008/buggy-version/java2word.src.main.java.word.w2004.elements.tableElements.TableCell.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuffer.toString()"], "Fixed commit": "3ab8e0ac7390206865c23bb489d52c5d8215c0a7", "Url": "https://api.github.com/repos/phamm/java2word", "Date": "2014-07-16T05:02:46Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (distanciaMax == 0) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3414/buggy-version/src.subcadeiascaracteres.SubcadeiasCaracteres.java", "BodyUseAPI": [], "Fixed commit": "9c10636eee3f68e88ac712884ef156613c6aaa7c", "Url": "https://api.github.com/repos/davidbrusius/subcadeias-caracteres", "Date": "2016-03-25T15:39:40Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(folder.exists())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1126/buggy-version/JazminDeployer.src.jazmin.deploy.view.monitor.MonitorManager.java", "BodyUseAPI": [], "Fixed commit": "2e41737d2233ab771082bbc3e2ccd4f19f0eb3fb", "Url": "https://api.github.com/repos/icecooly/JazminServer", "Date": "2016-06-10T15:19:49Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jazmin.deploy.view.monitor.MonitorManager.getReaderFile(jazmin.deploy.domain.MonitorInfoQuery)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (file == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1126/buggy-version/JazminDeployer.src.jazmin.deploy.view.monitor.MonitorManager.java", "BodyUseAPI": [], "Fixed commit": "2e41737d2233ab771082bbc3e2ccd4f19f0eb3fb", "Url": "https://api.github.com/repos/icecooly/JazminServer", "Date": "2016-06-10T15:19:49Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (reader == null) { return list; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1126/buggy-version/JazminDeployer.src.jazmin.deploy.view.monitor.MonitorManager.java", "BodyUseAPI": [], "Fixed commit": "2e41737d2233ab771082bbc3e2ccd4f19f0eb3fb", "Url": "https://api.github.com/repos/icecooly/JazminServer", "Date": "2016-06-10T15:19:49Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cookiesToDelete) == null) { cookiesToDelete = new java.util.HashSet<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3592/buggy-version/src.gribbit.response.Response.java", "BodyUseAPI": [], "Fixed commit": "06a909c5e8c7a9d9adee606e6aedc62d7e2ea1e5", "Url": "https://api.github.com/repos/lukehutch/gribbit", "Date": "2014-12-29T21:20:16Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Thread.interrupted()) { return firstIteration ? 1 : 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7713/buggy-version/src.sushi.execution.minimizer.RunMinimizer.java", "BodyUseAPI": [], "Fixed commit": "3ba5cfa6b74048905178668220ae94073a4b6a29", "Url": "https://api.github.com/repos/pietrobraione/sushi", "Date": "2017-01-13T00:15:19Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(\"normal\")) { producer.NormalProducer producer = new producer.NormalProducer(bootstrapServers, topic, 0, 1, java.util.concurrent.TimeUnit.MILLISECONDS); }else { producer.DDosProducer ddosProducer = new producer.DDosProducer(bootstrapServers, topic, 0, 1, java.util.concurrent.TimeUnit.MILLISECONDS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6194/buggy-version/src.main.java.TypicalMessageApp.java", "BodyUseAPI": [], "Fixed commit": "153c4995057eecd4f35b1af4dbcce9ee14d88005", "Url": "https://api.github.com/repos/JNKHunter/kafka-log-producer", "Date": "2017-06-04T19:05:53Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (allBooks.containsKey(book)) return new java.util.HashSet<library.BookCopy>(allBooks.get(book)); else { return java.util.Collections.emptySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2442/buggy-version/ps3.src.library.BigLibrary.java", "BodyUseAPI": ["java.util.Map<library.Book, java.util.Set<library.BookCopy>>.get(library.Book)"], "Fixed commit": "494f1d7c672cade35d57036c2f433c7609cc6dc5", "Url": "https://api.github.com/repos/zgaleday/6_005", "Date": "2016-11-29T03:01:15Z"},
{"Line": "=>887", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ballot.getClosed()) != null) { boolean closed = ballot.getClosed(); if ((closed == true) && (!(ballotDB.getClosed()))) { ulm.university.news.controller.GroupController.logger.info(\"The ballot with id {} is getting closed.\", ballotDB.getId()); ballotDB.setClosed(closed); }else if ((closed == false) && (ballotDB.getClosed())) { ulm.university.news.controller.GroupController.logger.info(\"The ballot with id {} is getting opened again.\", ballotDB.getId()); ballotDB.setClosed(closed); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/766/buggy-version/src.main.java.ulm.university.news.controller.GroupController.java", "BodyUseAPI": ["ulm.university.news.data.Ballot.getClosed()"], "Fixed commit": "3f10d8ba207e3b6351fbeb4dca353903de351d04", "Url": "https://api.github.com/repos/ulm-university-news/UlmUniversityNewsRESTServer", "Date": "2015-09-21T20:19:42Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portal.kernel.service.PersistedModelLocalServiceRegistryUtil.getPersistedModelLocalService(entry.getClassName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (persistedModelLocalService instanceof com.liferay.portal.kernel.service.PersistedResourcedModelLocalService) { com.liferay.portal.kernel.service.PersistedResourcedModelLocalService persistedResourcedModelLocalService = ((com.liferay.portal.kernel.service.PersistedResourcedModelLocalService) (persistedModelLocalService)); java.util.List<? extends com.liferay.portal.kernel.model.PersistedModel> persistedModels = persistedResourcedModelLocalService.getPersistedModel(newClassPK); if (com.liferay.portal.kernel.util.ListUtil.isEmpty(persistedModels)) { return; } }else { persistedModelLocalService.getPersistedModel(newClassPK); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1632/buggy-version/ratings-service.src.main.java.com.liferay.ratings.internal.exportimport.data.handler.RatingsEntryStagedModelDataHandler.java", "BodyUseAPI": ["com.liferay.portal.kernel.service.PersistedModelLocalService.getPersistedModel(long)"], "Fixed commit": "abbf16e1d5394575f18eac62746398132cf89ee0", "Url": "https://api.github.com/repos/liferay/com-liferay-ratings", "Date": "2017-07-18T15:08:40Z"},
{"Line": "=>981", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLive) != null) { ls.getWatcherList(currentLive, new com.v2tech.service.MessageListener(h, com.v2tech.presenter.MainPresenter.WATCHER_LIST, currentLive)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5587/buggy-version/src.com.v2tech.presenter.MainPresenter.java", "BodyUseAPI": [], "Fixed commit": "262177ea8557bb5f561026da90d6bd06edf30c1c", "Url": "https://api.github.com/repos/jiangzhen1984/LiveShow", "Date": "2016-05-15T14:06:17Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Maps.newHashMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((params.containsKey(\"State\")) && (params.get(\"State\").equals(\"RUNNING\"))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8461/buggy-version/tool.src.main.java.org.apache.kylin.tool.JobDiagnosisInfoCLI.java", "BodyUseAPI": [], "Fixed commit": "74fc2d9c57825770fa736e89e8119a17d53b63c0", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-05-13T07:55:45Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pair.length) >= 2) { params.put(pair[0].trim(), pair[1].trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8461/buggy-version/tool.src.main.java.org.apache.kylin.tool.JobDiagnosisInfoCLI.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.trim()", "java.lang.String.trim()"], "Fixed commit": "74fc2d9c57825770fa736e89e8119a17d53b63c0", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2016-05-13T07:55:45Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((client.getRace()) != null) this.setRace(client.getRace());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3601/buggy-version/housing-matching.src.main.java.com.hserv.coordinatedentry.housingmatching.model.ClientDEModel.java", "BodyUseAPI": ["com.hserv.coordinatedentry.housingmatching.model.ClientDEModel.setRace(client.getRace())", "com.servinglynk.hmis.warehouse.core.model.BaseClient.getRace()"], "Fixed commit": "fb22d7cdd64b2d26115bf8d387541c53e8048a1d", "Url": "https://api.github.com/repos/hserv/coordinated-entry", "Date": "2016-12-20T08:51:37Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.miracle.dictionary.Dict.getWord(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (w != null) { wordOutput += (w.content) + \"\\r\\n\\r\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1285/buggy-version/src.com.miracle.dictionary.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c3321d65e25fa75b019053f4a355b02bef5d87d4", "Url": "https://api.github.com/repos/Chengwen/Dictionary-Android", "Date": "2014-07-19T21:10:20Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newTask.getExecutor().getUserID()) != null) { taskManager.model.User user = userDAO.getUserById(newTask.getExecutor().getUserID()); user.getUserTasks().add(newTask); userDAO.updateUser(user); }else { newTask.setExecutor(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1844/buggy-version/src.main.java.taskManager.endpoint.TaskManager.java", "BodyUseAPI": ["newTask.getExecutor().getUserID()", "taskManager.model.Task.setExecutor(<nulltype>)", "taskManager.model.Task.getExecutor()", "taskManager.dao.UserDAO.getUserById(newTask.getExecutor().getUserID())", "user.getUserTasks().add(taskManager.model.Task)"], "Fixed commit": "5235e39b67e9a50c6d71ccbe58351605d180724b", "Url": "https://api.github.com/repos/KanchoK/TaskManager", "Date": "2015-07-02T09:37:16Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cascading.flow.planner.ElementGraph.getEdgeTarget(cascading.flow.planner.Scope)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rhs instanceof cascading.tap.Tap) { if (onMapSide) step.getMapperTraps().putAll(traps); else step.getReducerTraps().putAll(traps); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5741/buggy-version/cascading-hadoop.src.main.shared.cascading.flow.hadoop.planner.HadoopStepGraph.java", "BodyUseAPI": [], "Fixed commit": "9f0a0b546b581734799413cad5afc183a4947d49", "Url": "https://api.github.com/repos/gerashegalov/cascading", "Date": "2014-08-19T20:58:22Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (speed < 0) speed = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7066/buggy-version/src.main.java.uk.ac.imperial.dws04.Presage2Experiments.SpeedService.java", "BodyUseAPI": [], "Fixed commit": "d661dcecdac9c00ecbea654afeb74f12834cf4f3", "Url": "https://api.github.com/repos/davekyle/Presage2-Experiments", "Date": "2012-05-17T13:23:44Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ev.get_tag()) == (HDFSSimTags.READ_REQUEST)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8692/buggy-version/src.HDFSSim.BlockReceiver.java", "BodyUseAPI": [], "Fixed commit": "fd82885a0a0e8bd92ff8bb6a4ada80aab226a5e0", "Url": "https://api.github.com/repos/AmemiyaYuko/HDFS_Simulator", "Date": "2015-04-28T08:58:18Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loop.loopExit.size()) == 0) { return new java.util.HashSet<boogie.controlflow.BasicBlock>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8598/buggy-version/gravy.src.org.gravy.loopunwinding.AbstractLoopUnwinding.java", "BodyUseAPI": [], "Fixed commit": "bf50921cc7491930d109d70a4c8ea5e5f91bf2f5", "Url": "https://api.github.com/repos/martinschaef/gravy", "Date": "2014-09-05T05:57:47Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mustReach.get(loop.loopHead)) == null) { util.Log.error((\"Could not compute the dominator relation for loop at \" + (loop.loopHead.getLabel()))); return new java.util.HashSet<boogie.controlflow.BasicBlock>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8598/buggy-version/gravy.src.org.gravy.loopunwinding.AbstractLoopUnwinding.java", "BodyUseAPI": ["loop.loopHead.getLabel()", "util.Log.error((\"Could not compute the dominator relation for loop at \" + (loop.loopHead.getLabel())))"], "Fixed commit": "bf50921cc7491930d109d70a4c8ea5e5f91bf2f5", "Url": "https://api.github.com/repos/martinschaef/gravy", "Date": "2014-09-05T05:57:47Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.metabroadcast.common.scheduling.UpdateProgress.getTotalProgress()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (totalProgress == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5130/buggy-version/src.main.java.org.atlasapi.remotesite.bbc.nitro.ChannelDayProcessingTask.java", "BodyUseAPI": [], "Fixed commit": "43c6b63ccd4dc675c05e9de8d7dba3004ba72a36", "Url": "https://api.github.com/repos/atlasapi/atlas", "Date": "2017-02-28T15:44:05Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ocr) == null) ocr = new com.example.svenscan.svenscan.utils.ocr.OCRDecoder(getApplication());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3594/buggy-version/app.src.main.java.com.example.svenscan.svenscan.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7cdae06d488b837271850074a728515b85d14c2b", "Url": "https://api.github.com/repos/SSundstrom/SvenScan", "Date": "2016-09-28T10:27:32Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (node != null) { for (java.lang.String s : node.getAction()) { src.State state = new src.State(s, row, col); state.print(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8639/buggy-version/src.PuzzleUI.java", "BodyUseAPI": ["src.Node.getAction()"], "Fixed commit": "d3f4082abd112874b7f52fd9da842ea07ad921ec", "Url": "https://api.github.com/repos/tosinoni/8-puzzle", "Date": "2017-02-17T06:17:47Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResourceAsStream(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (resStreamIn == null) { java.util.logging.Logger log = java.util.logging.Logger.getLogger(\"Minecraft\"); if (resource.equalsIgnoreCase(\"Languages/en_US.txt\")) { log.severe(\"[HyperConomy] Failed to copy language file backup. Do not use /reload to update HyperConomy.\"); }else { log.severe(\"[HyperConomy] Failed to copy file. Restart your server to fix this. Do not use /reload.\"); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4503/buggy-version/src.main.java.Utils.regalowl.hyperconomy.FileTools.java", "BodyUseAPI": [], "Fixed commit": "e26a9e5c486795d622a0f274e4182f5529e4981c", "Url": "https://api.github.com/repos/RegalOwl/HyperConomy", "Date": "2013-02-14T00:21:51Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.mFirstNameEditText.getText().toString().isEmpty()) { this.mFirstNameEditText.requestFocus(); this.mFirstNameEditText.setError(getString(R.string.person_name_empty_error)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1628/buggy-version/app.src.main.java.tejaswi_yerukalapudi.com.helloandroid.PersonActivity.java", "BodyUseAPI": ["android.widget.EditText.requestFocus()", "android.widget.EditText.setError(getString(R.string.person_name_empty_error))"], "Fixed commit": "46290f8f549d17afe26361ceeb504d8f95c162dc", "Url": "https://api.github.com/repos/tejaswiyvs/HelloAndroid", "Date": "2015-07-08T16:15:04Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["us.ihmc.commonWalkingControlModules.highLevelHumanoidControl.highLevelStates.walkingController.states.WalkingSingleSupportState.peekTiming(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (nextFootstepTiming != null) pelvisOrientationManager.initializeSwing(supportSide, swingTime, nextFootstepTiming.getTransferTime(), nextFootstepTiming.getSwingTime()); else pelvisOrientationManager.initializeSwing(supportSide, swingTime, finalTransferTime, 0.0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3308/buggy-version/CommonWalkingControlModules.src.us.ihmc.commonWalkingControlModules.highLevelHumanoidControl.highLevelStates.walkingController.states.WalkingSingleSupportState.java", "BodyUseAPI": ["us.ihmc.humanoidRobotics.footstep.FootstepTiming.getTransferTime()", "us.ihmc.humanoidRobotics.footstep.FootstepTiming.getSwingTime()", "us.ihmc.commonWalkingControlModules.controlModules.PelvisOrientationManager.initializeSwing(us.ihmc.commonWalkingControlModules.highLevelHumanoidControl.highLevelStates.walkingController.states.WalkingSingleSupportState,double,nextFootstepTiming.getTransferTime(),nextFootstepTiming.getSwingTime())"], "Fixed commit": "d1b03dc0b7095bb54cdb01319add87723c055d38", "Url": "https://api.github.com/repos/ihmcrobotics/ihmc-open-robotics-software", "Date": "2017-04-27T18:10:57Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(directoryName.equals(TachyonURI.EMPTY_URI))) { if (!(tfs.exist(directoryName))) { tachyon.util.UfsUtils.LOG.debug(((\"Loading ufs. Make dir if needed for '\" + directoryName) + \"'.\")); tfs.mkdir(directoryName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8973/buggy-version/core.src.main.java.tachyon.util.UfsUtils.java", "BodyUseAPI": ["tachyon.client.TachyonFS.mkdir(tachyon.TachyonURI)", "org.slf4j.Logger.debug(((\"Loading ufs. Make dir if needed for '\" + directoryName) + \"'.\"))", "tachyon.client.TachyonFS.exist(tachyon.TachyonURI)"], "Fixed commit": "b6626d0f5a4e1097064450f31651d5b68b593327", "Url": "https://api.github.com/repos/calvinjia/tachyon", "Date": "2015-04-03T02:05:24Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, java.util.Set<org.kontalk.model.User>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (userSet == null) { org.kontalk.model.ThreadList.LOGGER.warning(\"no users found for thread\"); userSet = new java.util.HashSet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/277/buggy-version/src.org.kontalk.model.ThreadList.java", "BodyUseAPI": [], "Fixed commit": "efe0f4208118985c56da9f723855cfb74c87c790", "Url": "https://api.github.com/repos/kontalk/desktopclient-java", "Date": "2014-08-20T17:01:40Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isActive())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1577/buggy-version/src.com.github.grimpy.botifier.BotifierManager.java", "BodyUseAPI": [], "Fixed commit": "228e1fa769944735a2d4cf9198cd8f0d632a23b8", "Url": "https://api.github.com/repos/grimpy/Botifier", "Date": "2013-09-10T19:49:42Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.udpAdapter) != null) { this.udpAdapter.sendUnicast(new de.tr0llhoehle.buschtrommel.models.PeerDiscoveryMessage(de.tr0llhoehle.buschtrommel.models.PeerDiscoveryMessage.DiscoveryMessageType.HI, de.tr0llhoehle.buschtrommel.Config.alias, fileTransferAdapter.getPort()), host); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/587/buggy-version/Buschtrommel.src.de.tr0llhoehle.buschtrommel.network.NetCache.java", "BodyUseAPI": [], "Fixed commit": "d04e9c68409643fd01bccfb58cf5fc974e25ab25", "Url": "https://api.github.com/repos/toebbel/buschtrommel", "Date": "2013-01-18T02:03:18Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.evolveum.midpoint.web.page.admin.orgs.OrgTreePanel.5.getModelObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(items.isInverse())) { this.setExpandedItems(items); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/498/buggy-version/gui.admin-gui.src.main.java.com.evolveum.midpoint.web.page.admin.orgs.OrgTreePanel.java", "BodyUseAPI": ["com.evolveum.midpoint.web.page.admin.orgs.OrgTreePanel.setExpandedItems(com.evolveum.midpoint.web.page.admin.users.dto.TreeStateSet<com.evolveum.midpoint.web.component.util.SelectableBean<com.evolveum.midpoint.xml.ns._public.common.common_3.OrgType>>)"], "Fixed commit": "9fec140cbfc54aa2b84069e6d871d1248a34348c", "Url": "https://api.github.com/repos/Evolveum/midpoint", "Date": "2017-02-08T13:55:00Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.delete()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!result) { com.github.zk1931.jzab.RollingLog.LOG.warn(\"The file {} might not be deleted successfully.\", file.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4730/buggy-version/src.main.java.com.github.zk1931.jzab.RollingLog.java", "BodyUseAPI": [], "Fixed commit": "48239a0adfcc52a08bfbdc3dfc315dfb6c160aa5", "Url": "https://api.github.com/repos/zk1931/jzab", "Date": "2014-10-14T21:27:38Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (willRespawn) { willRespawn = false; velocity.set(Vector3f.ZERO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4342/buggy-version/Kandidat33MobileGame.src.control.PlayerControl.java", "BodyUseAPI": [], "Fixed commit": "6cddfdd8f49b1e4ff8ce0298a800f50a273e79dc", "Url": "https://api.github.com/repos/forssenm/kandidat-projekt", "Date": "2013-04-11T12:42:36Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cellToReturn.isDoorway()) { roomLastVisited = cellToReturn.getRoomLetter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3917/buggy-version/src.clueGame.ComputerPlayer.java", "BodyUseAPI": ["clueGame.BoardCell.getRoomLetter()"], "Fixed commit": "58e02fec07a3db1b388c57985e76344d087191ae", "Url": "https://api.github.com/repos/ratchet1179/Clue", "Date": "2016-04-05T18:06:31Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parser.currentSymbolTable.findSymbol(scanner.previousID, false)) != null) { throw new java.lang.RuntimeException(java.lang.String.format(\"Redefinition of variable %s\", scanner.previousID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7949/buggy-version/src.CodeGenerator.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,scanner.previousID)"], "Fixed commit": "edde8d60427d749805650dc5e6459cd0bd033285", "Url": "https://api.github.com/repos/arashyousefi/Blend", "Date": "2017-02-18T09:05:35Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (proxyConfig != null) { if ((proxyConfig.getName()) == null) { proxyConfig = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4239/buggy-version/src.main.java.hudson.plugins.ec2.EC2Cloud.java", "BodyUseAPI": ["hudson.ProxyConfiguration.getName()"], "Fixed commit": "e6ffe7adc736f48d014810a2cf236d1c816a3e48", "Url": "https://api.github.com/repos/hudson3-plugins/ec2-plugin", "Date": "2015-07-15T18:25:57Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4282/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "ce31490b41dfa4cc1fe2b15678261e412ee7d08f", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.pathfinding.PathNavigateFlying.getPathToPos(net.minecraft.util.math.BlockPos)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (path != null) { net.minecraft.pathfinding.PathPoint lastPoint = path.getFinalPathPoint(); if ((lastPoint != null) && ((((lastPoint.x) != (pos.getX())) || ((lastPoint.y) != (pos.getY()))) || ((lastPoint.z) != (pos.getZ())))) { path = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8452/buggy-version/src.main.java.me.desht.pneumaticcraft.common.ai.EntityPathNavigateDrone.java", "BodyUseAPI": ["net.minecraft.pathfinding.Path.getFinalPathPoint()"], "Fixed commit": "cfa631c33dafb31db8412598b13337e7f2686f40", "Url": "https://api.github.com/repos/TeamPneumatic/pnc-repressurized", "Date": "2017-11-18T17:07:23Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textMaxScale) != 1) { float tempAlpha = (tempScale - 1) / ((textMaxScale) - 1); textAlpha = ((1 - (textMinAlpha)) * tempAlpha) + (textMinAlpha); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4827/buggy-version/app.src.main.java.com.hzn.easypickerview.EasyPickerView.java", "BodyUseAPI": [], "Fixed commit": "09f97c7f82cf6e844fa2ca95e3c04c7d79774d10", "Url": "https://api.github.com/repos/huzenan/EasyPickerView", "Date": "2017-06-09T02:26:23Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.thomasc.wordmaster.api.ServerAPI.makeRequest(java.lang.String,java.lang.String,java.lang.String,uk.co.thomasc.wordmaster.BaseGame)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (json != null) { errorCode = ((java.lang.Long) (json.get(\"error\"))).intValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4190/buggy-version/src.main.java.uk.co.thomasc.wordmaster.api.ServerAPI.java", "BodyUseAPI": ["((java.lang.Long) (json.get(\"error\"))).intValue()", "org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "992b597464737fc307c2aefdf291bccbec89beaa", "Url": "https://api.github.com/repos/Top-Cat/Wordmaster", "Date": "2013-08-09T09:38:09Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.contains(\",\")) { value = value.replaceAll(\",\", \";\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7071/buggy-version/src.main.java.net.styleguise.tools.DatastoreExporter.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "41d526318839e0d250b6b829953453135e7bd90f", "Url": "https://api.github.com/repos/fabcouwer/gae-datastore-migrator", "Date": "2015-09-30T09:43:02Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((length) == (-1)) { tmp.append(ch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7793/buggy-version/src.main.java.com.univocity.parsers.common.input.AbstractCharInputReader.java", "BodyUseAPI": [], "Fixed commit": "0676c2cca17e2a97f3a1ff5c72c4a4343d8cd34f", "Url": "https://api.github.com/repos/mosoft521/univocity-parsers", "Date": "2017-06-08T15:07:27Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(file.exists())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4133/buggy-version/src.main.java.com.lenis0012.bukkit.ls.util.SpigotUtil.java", "BodyUseAPI": [], "Fixed commit": "231e87a6b38289bc45481375f05a83130d5082c7", "Url": "https://api.github.com/repos/lenis0012/LoginSecurity-2", "Date": "2015-05-25T20:30:41Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentIndex) == (-1)) { currentIndex = (questionBank.length) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3175/buggy-version/app.src.main.java.com.example.vladislav.geoquiz.QuizActivity.java", "BodyUseAPI": [], "Fixed commit": "f815167a1bc11fa207819da8c65951b9eee05226", "Url": "https://api.github.com/repos/Vladislav719/GeoQuiz-FirstAndroidApp", "Date": "2014-08-20T10:19:54Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTimeline) != null) { mTimeline.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5341/buggy-version/src.blippy.desktop.GameHelper.java", "BodyUseAPI": [], "Fixed commit": "3c74786148cdad75b812bd24842384062ce94806", "Url": "https://api.github.com/repos/jaredwad/Blippy", "Date": "2013-12-18T16:51:38Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jurassicraft.server.block.entity.BugCrateBlockEntity.getOutputSlot(net.minecraft.item.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (outputSlot != (-1)) { this.mergeStack(outputSlot, output); }else { net.minecraft.entity.item.EntityItem item = new net.minecraft.entity.item.EntityItem(this.worldObj, ((this.pos.getX()) + 0.5), ((this.pos.getY()) + 1.0), this.pos.getZ(), output); this.worldObj.spawnEntityInWorld(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1985/buggy-version/src.main.java.org.jurassicraft.server.block.entity.BugCrateBlockEntity.java", "BodyUseAPI": ["org.jurassicraft.server.block.entity.BugCrateBlockEntity.mergeStack(int,net.minecraft.item.ItemStack)"], "Fixed commit": "ccbd56d8280ab1010f635590f429a858d75605ba", "Url": "https://api.github.com/repos/JurassiCraftTeam/JurassiCraft2", "Date": "2016-10-07T07:17:32Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (changed) { mLocalConfig.removeKey(org.kegbot.core.TapManager.KEY_HIDDEN_TAP_IDS); if (!(hiddenTaps.isEmpty())) { android.util.Log.d(org.kegbot.core.TapManager.TAG, (((\"Setting tap \" + (tap.getId())) + \" visible=\") + isVisible)); mLocalConfig.putStringSet(org.kegbot.core.TapManager.KEY_HIDDEN_TAP_IDS, hiddenTaps); } postUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2413/buggy-version/kegtab.src.main.java.org.kegbot.core.TapManager.java", "BodyUseAPI": [], "Fixed commit": "3ef28f4b3de0bb16cd39d03801b9890fc8f75acc", "Url": "https://api.github.com/repos/johnnyruz/kegbot-android", "Date": "2017-12-28T15:01:52Z"},
{"Line": "=>1083", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((name instanceof org.python.pydev.editor.codecompletion.revisited.modules.SourceToken) && (name.isWildImport())) { org.python.pydev.editor.codecompletion.revisited.modules.SourceToken sourceToken = ((org.python.pydev.editor.codecompletion.revisited.modules.SourceToken) (name)); org.python.pydev.parser.jython.SimpleNode ast = sourceToken.getAst(); if (ast instanceof org.python.pydev.parser.jython.ast.ImportFrom) { org.python.pydev.parser.jython.ast.ImportFrom importFrom = ((org.python.pydev.parser.jython.ast.ImportFrom) (ast)); if ((importFrom.level) > 0) { hasImportLevel = true; java.lang.String currentName = current.getName(); int currLevel = importFrom.level; while (currLevel > 0) { currLevel--; int i = currentName.lastIndexOf('.'); if (i == (-1)) { break; } currentName = currentName.substring(0, i); } if ((currentName.length()) > 0) { currentName += \".\" + (sourceToken.getOriginalRep()); }else { currentName = sourceToken.getOriginalRep(); } mod = getModule(currentName, state.getNature(), false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1163/buggy-version/plugins.org.python.pydev.src_completions.org.python.pydev.editor.codecompletion.revisited.AbstractASTManager.java", "BodyUseAPI": [], "Fixed commit": "2cc750742ddd4ee9265f0dd72b00c2b1668af906", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2014-06-19T23:19:04Z"},
{"Line": "=>1111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((!hasImportLevel) && (mod == null)) { if (current != null) { mod = getModule(name.getAsRelativeImport(current.getName()), state.getNature(), false); } if (mod == null) { mod = getModule(name.getOriginalRep(), state.getNature(), false); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1163/buggy-version/plugins.org.python.pydev.src_completions.org.python.pydev.editor.codecompletion.revisited.AbstractASTManager.java", "BodyUseAPI": [], "Fixed commit": "2cc750742ddd4ee9265f0dd72b00c2b1668af906", "Url": "https://api.github.com/repos/fabioz/Pydev", "Date": "2014-06-19T23:19:04Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((java.lang.Integer.parseInt(RankField.getText())) > 5) || ((java.lang.Integer.parseInt(RankField.getText())) < 1)) { javax.swing.JOptionPane.showMessageDialog(null, \"Please enter rank between 1 and 5\", \"Error\", javax.swing.JOptionPane.ERROR_MESSAGE); }else { java.sql.Connection conn = DSP.OracleJDBCConnection.connectDataBase(); java.sql.Statement st = null; java.sql.ResultSet rs = null; int ID = ALP.Employee.getID(); java.lang.String sql = \"Insert into Employee values(\"; sql += ID; sql += (\",\" + (ALP.Employee.SSN)) + \"\"; sql += (\",'\" + (ALP.Employee.name)) + \"'\"; sql += (\",'\" + (ALP.Employee.contact)) + \"'\"; sql += (\",'\" + (ALP.Employee.date)) + \"'\"; if (workPlaceCB.getSelectedItem().toString().equals(\"Prison\")) sql += \",NULL\"; else sql += (\",'\" + (workCB.getSelectedItem().toString())) + \"'\"; try { st = conn.createStatement(); if (workPlaceCB.getSelectedItem().toString().equals(\"Station\")) sql += \",NULL)\"; else { rs = st.executeQuery(((\"SELECT PRISON_ID FROM PRISON WHERE PRISON_LOCATION ='\" + (workCB.getSelectedItem().toString())) + \"'\")); while (rs.next()) sql += (\",\" + (rs.getString(1))) + \")\"; } } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger(UIP.AddEmployeeCop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } java.lang.System.out.println(sql); java.lang.String sql2 = \"Insert into Guard values(\"; sql2 += ID; sql2 += \",\" + (HourField.getText().trim()); sql2 += \",\" + (RankField.getText().trim()); sql2 += (\",\" + (RateField.getText().trim())) + \")\"; java.lang.System.out.println(sql2); try { st = conn.createStatement(); } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger(DSP.OracleJDBCConnection.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } try { st.executeUpdate(sql); st.executeUpdate(sql2); javax.swing.JOptionPane.showMessageDialog(null, \"Guard Added\"); this.setVisible(false); for (javax.swing.JFrame frame : formList) { if (frame instanceof UIP.AddEmployee1) { ((UIP.AddEmployee1) (frame)).clear(); } if (frame instanceof UIP.EmployeeInfo) { frame.setVisible(true); break; } } } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger(UIP.AddEmployeeGuard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); javax.swing.JOptionPane.showMessageDialog(null, \"Some of the fields are invalid\", \"Error\", javax.swing.JOptionPane.ERROR_MESSAGE); } try { st.close(); } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger(UIP.AddEmployeeGuard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6997/buggy-version/Application.src.UIP.AddEmployeeGuard.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "java.lang.String.trim()"], "Fixed commit": "6bf76d114ddbed34df858077325f2e9d632e7108", "Url": "https://api.github.com/repos/hussu97/LawEnforcementSystem", "Date": "2017-12-10T15:40:39Z"},
{"Line": "=>624", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.eclipse.core.runtime.Platform.isRunning()) { if (newContainer instanceof org.talend.dataquality.indicators.LowFrequencyIndicator) { this.setTopN(org.talend.dataquality.service.IndicatorDefaultValueServiceUtil.getIstance().getIndicatorDVService().getLowFrequencyLimitResult()); }else { this.setTopN(org.talend.dataquality.service.IndicatorDefaultValueServiceUtil.getIstance().getIndicatorDVService().getFrequencyLimitResult()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4055/buggy-version/main.plugins.org.talend.dataquality.src.org.talend.dataquality.indicators.impl.IndicatorParametersImpl.java", "BodyUseAPI": [], "Fixed commit": "619503a23b66da47d6865654b2c79fbdbee16dba", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2017-04-21T04:20:48Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (((device != null) && ((device.getEnrolmentInfo()) != null)) && ((device.getEnrolmentInfo().getStatus()) != (EnrolmentInfo.Status.REMOVED))) { toBeNotified.add(device); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4765/buggy-version/components.policy-mgt.org.wso2.carbon.policy.mgt.core.src.main.java.org.wso2.carbon.policy.mgt.core.enforcement.DelegationTask.java", "BodyUseAPI": ["java.util.List<org.wso2.carbon.device.mgt.common.Device>.add(org.wso2.carbon.device.mgt.common.Device)"], "Fixed commit": "7ab31ae7d8692d01f1cbfedb4039a6d4afa22990", "Url": "https://api.github.com/repos/charithag/carbon-device-mgt", "Date": "2017-12-13T08:26:29Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((JRStatics.IMG_RENDERED.width) == 0) { com.haxademic.core.debug.DebugUtil.printErr(\"####################################\"); com.haxademic.core.debug.DebugUtil.printErr(\"##### Rendered image isn't right...\"); com.haxademic.core.debug.DebugUtil.printErr(\"####################################\"); }else { JRStatics.IMG_RENDERED.save(JRStatics.P.sketchPath(JRStatics.RENDERED_INV_FILE_NAME)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8327/buggy-version/src.com.haxademic.core.render.joons.JoonsRenderer.java", "BodyUseAPI": [], "Fixed commit": "7817ea77ed01ad823f40e12fa4a89794458a033e", "Url": "https://api.github.com/repos/cacheflowe/haxademic", "Date": "2014-12-24T21:01:58Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((superCat.filledDeps) == null) { return score; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/554/buggy-version/src.chart_parser.ChartParserBeam.java", "BodyUseAPI": [], "Fixed commit": "95c3da7908f84944e27f6be40d696701e234db79", "Url": "https://api.github.com/repos/darrenfoong/candc", "Date": "2016-04-20T07:44:20Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mType.equalsIgnoreCase(\"mess\")) tv_title.setText((((mType.toUpperCase()) + \" \") + (mMode.toUpperCase()))); else tv_title.setText(mMode.toUpperCase());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3274/buggy-version/app.src.main.java.com.itraxhelper.DashBoardActivity.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "3dbe54eb372e4951fc877c761a284d1301eb4481", "Url": "https://api.github.com/repos/sixscorpions/ItraxHelper", "Date": "2017-08-22T16:31:33Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element == null) { throw new java.lang.IllegalArgumentException(\"Element can't be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4731/buggy-version/src.main.java.ar.com.kfgodel.nary.impl.OneElementNary.java", "BodyUseAPI": [], "Fixed commit": "2db29782b34969976cbc6784e43384812da3a1d2", "Url": "https://api.github.com/repos/kfgodel/nary", "Date": "2016-03-08T00:28:38Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (async == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3355/buggy-version/core.src.main.java.org.fourthline.cling.transport.impl.AsyncServletStreamServerImpl.java", "BodyUseAPI": [], "Fixed commit": "4522d1efe29078321f8e78162d823e503e569546", "Url": "https://api.github.com/repos/rzwuhan/cling", "Date": "2017-05-08T04:25:44Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(\"*\".equals(elementName))) { clone = org.xmlbeam.util.intern.DOMHelper.renameElement(clone, elementName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6946/buggy-version/src.main.java.org.xmlbeam.ProjectionInvocationHandler.java", "BodyUseAPI": ["org.xmlbeam.util.intern.DOMHelper.renameElement(org.w3c.dom.Element,java.lang.String)"], "Fixed commit": "47107b4e4f93fe7312c82f035ea8fd888d29f02e", "Url": "https://api.github.com/repos/SvenEwald/xmlbeam", "Date": "2014-03-29T11:44:04Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((type) == null) || ((exp.calcType(table)) == null)) throw new java.lang.RuntimeException(\"can't assign from/to void type\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7335/buggy-version/AST.AST_STMT_TYPE.java", "BodyUseAPI": [], "Fixed commit": "c21b5ec622d71d0b7f560757152434e21168feed", "Url": "https://api.github.com/repos/MatanLevy/Compilation", "Date": "2016-12-26T16:53:33Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.length) > (headerBytes.length)) { for (int i = 0; i < (headerBytes.length); i++) { headerBytes[i] = data[i]; } if (java.util.Arrays.equals(headerBytes, com.u17od.upm.database.PasswordDatabase.FILE_HEADER.getBytes())) { isPasswordDatabase = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8502/buggy-version/src.com.u17od.upm.database.PasswordDatabase.java", "BodyUseAPI": ["java.util.Arrays.equals(byte[],byte[])"], "Fixed commit": "bfb5af2eeb4b598a470da2fc0ef8a83db3b93e56", "Url": "https://api.github.com/repos/adrian/upm-android", "Date": "2012-08-12T16:51:17Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (codeFragments != null) { for (final jp.ac.osaka_u.ist.sdl.scanalyzer.data.db.DBCodeFragment codeFragment : codeFragments) { if (codeFragment.isGhost()) { (this.numGhostFragments)++; }else { (this.numClonedFragments)++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7850/buggy-version/src.main.java.jp.ac.osaka_u.ist.sdl.scanalyzer.data.db.DBCloneClass.java", "BodyUseAPI": [], "Fixed commit": "18c27485d7785b7e1c88f0aec0621ce4c79618d6", "Url": "https://api.github.com/repos/k-hotta/SCAnalyzer", "Date": "2014-12-03T19:01:34Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (b != null) { name.setText(b.getString(\"mName\")); certifications.setText(b.getString(\"mCertifications\")); yearsofExperience.setText(b.getString(\"mYearsOfExperience\")); Description.setText(b.getString(\"mDescription\")); Skills.setText(b.getStringArrayList(\"mSkills\").toString()); preferredIDE.setText(b.getString(\"mPreferredIDE\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1079/buggy-version/app.src.main.java.com.example.examples.sep4app.DeveloperProfile.ViewDevProfile.java", "BodyUseAPI": ["android.widget.TextView.setText(b.getString(\"mName\"))", "android.os.Bundle.getString(java.lang.String)", "android.widget.TextView.setText(b.getString(\"mDescription\"))", "android.os.Bundle.getString(java.lang.String)", "android.os.Bundle.getString(java.lang.String)", "android.widget.TextView.setText(b.getString(\"mCertifications\"))", "android.os.Bundle.getString(java.lang.String)", "b.getStringArrayList(\"mSkills\").toString()", "android.widget.TextView.setText(b.getString(\"mPreferredIDE\"))", "android.os.Bundle.getString(java.lang.String)", "android.widget.TextView.setText(b.getStringArrayList(\"mSkills\").toString())", "android.os.Bundle.getStringArrayList(java.lang.String)", "android.widget.TextView.setText(b.getString(\"mYearsOfExperience\"))"], "Fixed commit": "4a64bdd08208db5fb30cde6b94dc1f5238119ea7", "Url": "https://api.github.com/repos/odinchev/Sep4App", "Date": "2017-12-14T16:11:37Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.ui.table.JBTable.getSelectedRow()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (selectedRow != (-1)) { model.deleteRow(selectedRow); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8662/buggy-version/src.de.imgruntw.datetimeconverter.DeleteRowAction.java", "BodyUseAPI": ["de.imgruntw.datetimeconverter.DateTimeTableModel.deleteRow(int)"], "Fixed commit": "5048ae8cc54c2475c54839a0ac356099d5cecd62", "Url": "https://api.github.com/repos/imgruntw/date-time-converter-plugin", "Date": "2017-12-01T19:45:25Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.alexkaz.simplytaskmanager.AddNewTaskActivity.3.formingData()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isOneOfEditTextsEmpty(taskObject.getTaskTitle(), taskObject.getItemTitles())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5905/buggy-version/java.com.alexkaz.simplytaskmanager.AddNewTaskActivity.java", "BodyUseAPI": [], "Fixed commit": "220b3aae05364da2b684c85006d61a122bbe94a6", "Url": "https://api.github.com/repos/AlexKazmirchuk/SimplyTaskManager", "Date": "2016-09-16T08:24:04Z"},
{"Line": "=>783", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Hashtable<java.lang.Integer, com.tyler.app.shiplead.MainActivity.BallPhysics.Ball>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (tar != null) tar.AddNewTrace(x, y);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3551/buggy-version/ShipLead.src.com.tyler.app.shiplead.MainActivity.java", "BodyUseAPI": ["com.tyler.app.shiplead.MainActivity.BallPhysics.Ball.AddNewTrace(float,float)"], "Fixed commit": "679d33c752b7e520791333ed84a6e5ecfc27d740", "Url": "https://api.github.com/repos/zxs731/test", "Date": "2014-07-03T13:15:03Z"},
{"Line": "=>787", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (targets.containsKey(i)) targets.remove(i);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3551/buggy-version/ShipLead.src.com.tyler.app.shiplead.MainActivity.java", "BodyUseAPI": ["java.util.Hashtable<java.lang.Integer, com.tyler.app.shiplead.MainActivity.BallPhysics.Ball>.remove(int)"], "Fixed commit": "679d33c752b7e520791333ed84a6e5ecfc27d740", "Url": "https://api.github.com/repos/zxs731/test", "Date": "2014-07-03T13:15:03Z"},
{"Line": "=>771", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (targets.containsKey(i)) { targets.remove(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3551/buggy-version/ShipLead.src.com.tyler.app.shiplead.MainActivity.java", "BodyUseAPI": ["java.util.Hashtable<java.lang.Integer, com.tyler.app.shiplead.MainActivity.BallPhysics.Ball>.remove(int)"], "Fixed commit": "679d33c752b7e520791333ed84a6e5ecfc27d740", "Url": "https://api.github.com/repos/zxs731/test", "Date": "2014-07-03T13:15:03Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(event.getText().get(0).equals(\"\"))) com.apisense.bee.services.EventObserver.tempInput += getLastCharacter(java.lang.String.valueOf(event.getText().get(0)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4559/buggy-version/bee.src.main.java.com.apisense.bee.services.EventObserver.java", "BodyUseAPI": ["java.lang.String.valueOf(event.getText().get(0))", "com.apisense.bee.services.EventObserver.getLastCharacter(java.lang.String)", "android.view.accessibility.AccessibilityEvent.getText()", "event.getText().get(int)"], "Fixed commit": "41f7fe03f08b412410964cee33599574ae638f12", "Url": "https://api.github.com/repos/mohammadnaseri/bee-android", "Date": "2017-11-23T09:39:27Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null != m) { mapB[tilen] = new com.ds.avare.utils.BitmapHolder(m, tileNames[tilen]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4821/buggy-version/src.com.ds.avare.shapes.TileMap.java", "BodyUseAPI": [], "Fixed commit": "53c8e0771b671ba7484ea634730ddc12a736a170", "Url": "https://api.github.com/repos/apps4av/avare", "Date": "2013-03-25T13:16:18Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((source == null) && (getCurrentField().getType().isPrimitive())) { source = io.beanmapper.utils.DefaultValues.defaultValueFor(getCurrentField().getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2226/buggy-version/src.main.java.io.beanmapper.core.BeanField.java", "BodyUseAPI": [], "Fixed commit": "5adb0aeff68ef6469293bb46556ee20d117897d1", "Url": "https://api.github.com/repos/42BV/beanmapper", "Date": "2015-10-08T11:22:58Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMap) != null) { mMap.addPolyline(lineOptions); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8747/buggy-version/app.src.main.java.uk.gov.eastlothian.gowalk.ui.RoutesMapFragment.java", "BodyUseAPI": [], "Fixed commit": "8dde333d913c7f35d26d1a1952ff58efefbe3234", "Url": "https://api.github.com/repos/davemor/goexplore-android", "Date": "2015-01-06T14:48:28Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.equals(\"user\")) { return org.wordpress.android.ui.notifications.blocks.NoteBlockIdType.USER; }else if (value.equals(\"stat\")) { return org.wordpress.android.ui.notifications.blocks.NoteBlockIdType.STAT; }else { return org.wordpress.android.ui.notifications.blocks.NoteBlockIdType.UNKNOWN; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/797/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.notifications.blocks.NoteBlockIdType.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "d79395aa565b1318ef8ed4db140cc01d21f4d3fb", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2014-08-26T16:18:20Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FolderManager.getSelectedFolder(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rootFolderLoc == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4028/buggy-version/src.DecryptListener.java", "BodyUseAPI": [], "Fixed commit": "2ca70eb70ee560011c993c9590abfbdc3918f60b", "Url": "https://api.github.com/repos/kapil1100/File-Protector", "Date": "2017-10-10T07:34:21Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["FolderManager.getSelectedFolder(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rootFolderLoc == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4028/buggy-version/src.EncryptListener.java", "BodyUseAPI": [], "Fixed commit": "2ca70eb70ee560011c993c9590abfbdc3918f60b", "Url": "https://api.github.com/repos/kapil1100/File-Protector", "Date": "2017-10-10T07:34:21Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (address.has(\"city\")) { l.setCityName(address.getString(\"city\")); }else if (address.has(\"town\")) { l.setCityName(address.getString(\"town\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2010/buggy-version/src.main.java.de.fau.cs.mad.wanthavers.server.dao.LocationDAO.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "de.fau.cs.mad.wanthavers.common.Location.setCityName(address.getString(\"city\"))", "org.json.JSONObject.has(java.lang.String)", "de.fau.cs.mad.wanthavers.common.Location.setCityName(address.getString(\"town\"))"], "Fixed commit": "2bcc3cfabceb04ae0a4a935f141f1e86bfe17543", "Url": "https://api.github.com/repos/FAU-Inf2/wanthavers-server", "Date": "2016-07-31T17:18:10Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!((i < 0) || (j < 0))) && (!((i > ((map.length) - 1)) || (j > ((map[0].length) - 1))))) { int k = 0; while (k < (playerSpritzers.size())) { if ((map[i][j].isSolid()) && (playerSpritzers.get(k).getBounding().intersects(map[i][j].getBounding()))) { if ((playerSpritzers.get(k)) instanceof klassen.player.BasicShot) { klassen.player.BasicShot b = ((klassen.player.BasicShot) (playerSpritzers.get(k))); if ((b.getStatus()) == (BasicShot.Status.SHOOTING)) { playerSpritzers.remove(k); }else if (((b.getStatus()) == (BasicShot.Status.CHARCHING)) || ((b.getStatus()) == (BasicShot.Status.IMPACT))) { k++; } }else { playerSpritzers.remove(k); } }else { k++; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6744/buggy-version/src.klassen.Main.java", "BodyUseAPI": ["map[i][j].getBounding()", "playerSpritzers.get(k).getBounding().intersects(map[i][j].getBounding())", "map[i][j].isSolid()"], "Fixed commit": "9d24bc192d13dd2fa0ec30fe63ff2588f5420e06", "Url": "https://api.github.com/repos/Stippler007/Shinigami", "Date": "2015-06-16T14:24:26Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uploadedPhotosAdapter.getImagesCount()) == 0) { com.jrew.geocatch.mobile.fragment.LayoutUtil.showRefreshLayout(getActivity(), R.string.uploadedPhotosLoadingError); }else { android.widget.Toast.makeText(getActivity(), getResources().getString(R.string.uploadedPhotosLoadingError), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7502/buggy-version/geo-catch-mobile.src.main.java.com.jrew.geocatch.mobile.fragment.UploadedPhotosFragment.java", "BodyUseAPI": [], "Fixed commit": "fa00c1cd539db49c5cd12c271129985ee72e16ad", "Url": "https://api.github.com/repos/vadzim-kazak/geo-catch", "Date": "2014-03-05T20:26:44Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((momentum) == 0) momentum = dir;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3042/buggy-version/src.rift.PhysEngine.java", "BodyUseAPI": [], "Fixed commit": "059782dfbc3127e8a354e7561623b051e7e22563", "Url": "https://api.github.com/repos/buster52000/Rift", "Date": "2013-05-23T18:07:04Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((devices == null) || ((devices.size()) == 0)) { sources.addItem(\"No cameras found\"); sources.setEnabled(false); }else { for (final org.openimaj.video.capture.Device s : devices) sources.addItem(s.getNameStr()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2641/buggy-version/app.src.main.java.uk.ac.soton.ecs.comp3005.utils.VideoCaptureComponent.java", "BodyUseAPI": [], "Fixed commit": "7658b31fcf20f1418b3a0c4ee69b22640c77f91b", "Url": "https://api.github.com/repos/jonhare/COMP3005", "Date": "2014-03-10T15:32:53Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((devices == null) || ((devices.size()) == 0)) { currentDevice = null; final org.openimaj.image.MBFImage[] frames = new org.openimaj.image.MBFImage[]{ new org.openimaj.image.MBFImage(width, height, org.openimaj.image.colour.ColourSpace.RGB) }; frames[0].fill(RGBColour.RED); vc = new org.openimaj.video.ArrayBackedVideo<org.openimaj.image.MBFImage>(frames); }else { currentDevice = devices.get(0); vc = new org.openimaj.video.capture.VideoCapture(width, height, currentDevice); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2641/buggy-version/app.src.main.java.uk.ac.soton.ecs.comp3005.utils.VideoCaptureComponent.java", "BodyUseAPI": [], "Fixed commit": "7658b31fcf20f1418b3a0c4ee69b22640c77f91b", "Url": "https://api.github.com/repos/jonhare/COMP3005", "Date": "2014-03-10T15:32:53Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (create) { id = com.shonshampain.streamrecorder.db.AlarmHelper.getInstance().insert(context, alarm); }else { id = alarm._id; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4246/buggy-version/app.src.main.java.com.shonshampain.streamrecorder.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "e32c8c2247a122313bd399c0d11d3ad0ad295a35", "Url": "https://api.github.com/repos/shonshampain/StreamRecord", "Date": "2015-09-17T13:11:01Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playbackState == (com.google.android.exoplayer.ExoPlayer.STATE_READY)) && playWhenReady) { muxNotifier.onPreviewImageStateChanged(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4120/buggy-version/library.src.main.java.com.devbrackets.android.exomedia.EMListenerMux.java", "BodyUseAPI": [], "Fixed commit": "b9fb17fa7cd69fff6395355617500ea4c0f41373", "Url": "https://api.github.com/repos/brianwernick/ExoMedia", "Date": "2015-11-21T15:48:43Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String[]>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (checkedSport != null) { for (java.lang.String sportID : checkedSport) { facility.possibleSport.add(SportType.find.byId(sportID)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1183/buggy-version/app.controllers.AdminController.java", "BodyUseAPI": [], "Fixed commit": "e95d4eb615cc4eb24fded2ce94ccadf3048d4328", "Url": "https://api.github.com/repos/kohloderso/fitInnsbruckApp", "Date": "2015-06-14T14:10:36Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String[]>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (checkedSport != null) { for (java.lang.String sportID : checkedSport) { updatedFacility.possibleSport.add(SportType.find.byId(sportID)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1183/buggy-version/app.controllers.AdminController.java", "BodyUseAPI": [], "Fixed commit": "e95d4eb615cc4eb24fded2ce94ccadf3048d4328", "Url": "https://api.github.com/repos/kohloderso/fitInnsbruckApp", "Date": "2015-06-14T14:10:36Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLongestTrackPlayer) == null) { mLongestTrackPlayer = tp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5133/buggy-version/app.src.main.java.com.sloths.speedy.shortsounds.model.AudioPlayer.java", "BodyUseAPI": [], "Fixed commit": "ee35c7130e5da4a4f5c3ff353bdd01e204a18d72", "Url": "https://api.github.com/repos/nharlow89/ShortSounds", "Date": "2015-05-29T05:41:08Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(srcPomFile.exists())) { srcPomFile = new java.io.File(artifact.getFile().getParent(), org.mule.tools.maven.repository.ArtifactInstaller.POM_FILE_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8762/buggy-version/src.main.java.org.mule.tools.maven.repository.ArtifactInstaller.java", "BodyUseAPI": [], "Fixed commit": "90a9955a874a09018af3b3016da89f8e0ca0edaf", "Url": "https://api.github.com/repos/mulesoft/mule-maven-plugin", "Date": "2017-06-22T16:04:39Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sourcePomFile.exists())) { sourcePomFile = new java.io.File(artifact.getFile().getParent(), org.mule.tools.maven.repository.ArtifactInstaller.POM_FILE_NAME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8762/buggy-version/src.main.java.org.mule.tools.maven.repository.ArtifactInstaller.java", "BodyUseAPI": [], "Fixed commit": "90a9955a874a09018af3b3016da89f8e0ca0edaf", "Url": "https://api.github.com/repos/mulesoft/mule-maven-plugin", "Date": "2017-06-22T16:04:39Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (folder == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2527/buggy-version/kernel.src.main.java.org.vosao.business.impl.SetupBeanImpl.java", "BodyUseAPI": [], "Fixed commit": "19caaf62c2ba8bb5c841465533429a45a2d231b2", "Url": "https://api.github.com/repos/Sirtrack/blenke-vosao", "Date": "2010-05-30T19:00:55Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((omnikryptec.gameobject.particles.ParticleMaster.instance) != null) { omnikryptec.gameobject.particles.ParticleMaster.instance.rendertime = 0; omnikryptec.gameobject.particles.ParticleMaster.instance.updatetime = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8724/buggy-version/src.omnikryptec.gameobject.particles.ParticleMaster.java", "BodyUseAPI": [], "Fixed commit": "b6decf5b31739e5473216b8eb4b5fcc1ad89c274", "Url": "https://api.github.com/repos/OmniKryptec/OmniKryptec-Engine", "Date": "2017-12-01T15:13:22Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((engineInstance.getCurrent3DScene()) != null) { engineInstance.getCurrent3DScene().publicLogic(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8724/buggy-version/src.omnikryptec.main.GameLoop.java", "BodyUseAPI": ["omnikryptec.main.OmniKryptecEngine.getCurrent3DScene()", "engineInstance.getCurrent3DScene().publicLogic(boolean)"], "Fixed commit": "b6decf5b31739e5473216b8eb4b5fcc1ad89c274", "Url": "https://api.github.com/repos/OmniKryptec/OmniKryptec-Engine", "Date": "2017-12-01T15:13:22Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((engineInstance.getCurrent3DScene()) != null) { engineInstance.getCurrent3DScene().mainPassRender(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8724/buggy-version/src.omnikryptec.main.GameLoop.java", "BodyUseAPI": ["omnikryptec.main.OmniKryptecEngine.getCurrent3DScene()", "engineInstance.getCurrent3DScene().mainPassRender()"], "Fixed commit": "b6decf5b31739e5473216b8eb4b5fcc1ad89c274", "Url": "https://api.github.com/repos/OmniKryptec/OmniKryptec-Engine", "Date": "2017-12-01T15:13:22Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((engineInstance.getCurrent2DScene()) != null) { engineInstance.getCurrent2DScene().publicLogic(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8724/buggy-version/src.omnikryptec.main.GameLoop.java", "BodyUseAPI": ["engineInstance.getCurrent2DScene().publicLogic()", "omnikryptec.main.OmniKryptecEngine.getCurrent2DScene()"], "Fixed commit": "b6decf5b31739e5473216b8eb4b5fcc1ad89c274", "Url": "https://api.github.com/repos/OmniKryptec/OmniKryptec-Engine", "Date": "2017-12-01T15:13:22Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((engineInstance.getCurrent2DScene()) != null) { engineInstance.getCurrent2DScene().mainPassRender(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8724/buggy-version/src.omnikryptec.main.GameLoop.java", "BodyUseAPI": ["omnikryptec.main.OmniKryptecEngine.getCurrent2DScene()", "engineInstance.getCurrent2DScene().mainPassRender()"], "Fixed commit": "b6decf5b31739e5473216b8eb4b5fcc1ad89c274", "Url": "https://api.github.com/repos/OmniKryptec/OmniKryptec-Engine", "Date": "2017-12-01T15:13:22Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cisco.yangide.core.dom.ASTNode.getModule()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (thisModule instanceof com.cisco.yangide.core.dom.SubModule) { thisModulePrefix = ((com.cisco.yangide.core.dom.SubModule) (thisModule)).getParentPrefix(); }else { com.cisco.yangide.core.dom.SimpleNode<java.lang.String> prefixNode = ((java.lang.Module) (thisModule)).getPrefix(); if (prefixNode != null) { thisModulePrefix = prefixNode.getValue(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7581/buggy-version/plugins.com.cisco.yangide.editor.src.com.cisco.yangide.editor.editors.SemanticHighlighting.java", "BodyUseAPI": [], "Fixed commit": "83c95afbb9b0d630bab4e093ab92271caf9b3c36", "Url": "https://api.github.com/repos/xored/yang-ide", "Date": "2014-10-01T08:57:35Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cisco.yangide.core.dom.ASTNode.getModule()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (thisModule instanceof com.cisco.yangide.core.dom.SubModule) { thisModulePrefix = ((com.cisco.yangide.core.dom.SubModule) (thisModule)).getParentPrefix(); }else { com.cisco.yangide.core.dom.SimpleNode<java.lang.String> prefixNode = ((java.lang.Module) (thisModule)).getPrefix(); if (prefixNode != null) { thisModulePrefix = prefixNode.getValue(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7581/buggy-version/plugins.com.cisco.yangide.editor.src.com.cisco.yangide.editor.editors.SemanticHighlighting.java", "BodyUseAPI": [], "Fixed commit": "83c95afbb9b0d630bab4e093ab92271caf9b3c36", "Url": "https://api.github.com/repos/xored/yang-ide", "Date": "2014-10-01T08:57:35Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((com.cisco.yangide.core.dom.UsesNode) (node)).getGrouping().getPrefix()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (usesPrefix != null) { return !(usesPrefix.equals(thisModulePrefix)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7581/buggy-version/plugins.com.cisco.yangide.editor.src.com.cisco.yangide.editor.editors.SemanticHighlightings.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "83c95afbb9b0d630bab4e093ab92271caf9b3c36", "Url": "https://api.github.com/repos/xored/yang-ide", "Date": "2014-10-01T08:57:35Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.googlecode.mgwt.ui.client.util.MGWTUtil.isIEEdge()) { element.getStyle().setBackgroundImage(((\"url(\" + (imageResource.getSafeUri().asString())) + \")\")); }else { element.getStyle().setProperty(\"WebkitMaskBoxImage\", ((\"url(\" + (imageResource.getSafeUri().asString())) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/651/buggy-version/src.main.java.com.googlecode.mgwt.ui.client.widget.tabbar.TabBarButtonBase.java", "BodyUseAPI": [], "Fixed commit": "e7390cd3b361ce61910a59e0b9d9cefc36248965", "Url": "https://api.github.com/repos/Brainfuse/mgwt", "Date": "2016-07-20T00:15:22Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (age < 18) throw new java.lang.IllegalArgumentException(\"Age Can not be less than 18\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5831/buggy-version/CrownAndAnchorGame.src.src.Player.java", "BodyUseAPI": [], "Fixed commit": "edad63f660786c4a05534f0f20fafb8c9dfad775", "Url": "https://api.github.com/repos/gpathela/TheDebuggersFinal", "Date": "2016-10-06T03:54:28Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((endEvent.getTime()) != 0) durationInMilliseconds = (endEvent.getTime()) - (time); else durationInMilliseconds = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5816/buggy-version/src.main.java.unidue.ub.media.monographs.Event.java", "BodyUseAPI": ["unidue.ub.media.monographs.Event.getTime()"], "Fixed commit": "2823e6e33b357fc8eed2e615f0890180fd2214ac", "Url": "https://api.github.com/repos/ETspielberg/media", "Date": "2017-08-17T13:31:19Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(materials.contains(item.getMaterial()))) materials.add(item.getMaterial());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5816/buggy-version/src.main.java.unidue.ub.media.monographs.Manifestation.java", "BodyUseAPI": ["unidue.ub.media.monographs.Item.getMaterial()", "java.util.Set<java.lang.String>.add(item.getMaterial())"], "Fixed commit": "2823e6e33b357fc8eed2e615f0890180fd2214ac", "Url": "https://api.github.com/repos/ETspielberg/media", "Date": "2017-08-17T13:31:19Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (f.stringValue())) { return indexedToReadable(f.stringValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1492/buggy-version/solr.core.src.java.org.apache.solr.schema.BoolField.java", "BodyUseAPI": ["org.apache.solr.schema.BoolField.indexedToReadable(f.stringValue())", "org.apache.lucene.index.IndexableField.stringValue()"], "Fixed commit": "60ce8d7c549ef90cd6aaa9297bf31aeb3dd3417e", "Url": "https://api.github.com/repos/apache/lucene-solr", "Date": "2016-09-09T18:45:09Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (turn == 9) { java.lang.System.out.println(\"It was a Draw!\"); }else if ((turn % 2) == 1) { java.lang.System.out.println(\"Congratulations! Player 1 Wins!\"); }else { java.lang.System.out.println(\"Congratulations! Player 2 Wins!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3154/buggy-version/ticTacToe.java", "BodyUseAPI": [], "Fixed commit": "f795226b4d9f3b37598cc9f7e68013157386bb76", "Url": "https://api.github.com/repos/Pingry-Java/tictactoe---Card-8", "Date": "2016-12-12T13:45:06Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fs.exists(path)) { fs.delete(path, isDirectory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4199/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.planner.sql.handlers.CreateFunctionHandler.java", "BodyUseAPI": ["org.apache.hadoop.fs.FileSystem.delete(org.apache.hadoop.fs.Path,boolean)"], "Fixed commit": "6063b740a6acac834f6fe80e71554dbd91e31f9e", "Url": "https://api.github.com/repos/arina-ielchiieva/drill", "Date": "2017-03-06T11:34:56Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (invoiceDetailViewList != null) { for (int i = 0; i < (invoiceDetailViewList.size()); i++) { java.math.BigDecimal invAmounttemp = invoiceDetailViewList.get(i).getInvAmount(); invAmount = invAmounttemp.setScale(2, java.math.BigDecimal.ROUND_HALF_EVEN); staffowner = invoiceDetailViewList.get(i).getOwner(); ticketflightrouting = invoiceDetailViewList.get(i).getRouting(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1932/buggy-version/src.java.com.smi.travel.controller.AddTicketFareController.java", "BodyUseAPI": ["java.util.List<com.smi.travel.datalayer.view.entity.InvoiceDetailView>.get(int)", "java.util.List<com.smi.travel.datalayer.view.entity.InvoiceDetailView>.size()", "java.util.List<com.smi.travel.datalayer.view.entity.InvoiceDetailView>.get(int)", "java.util.List<com.smi.travel.datalayer.view.entity.InvoiceDetailView>.get(int)", "invoiceDetailViewList.get(i).getOwner()", "invoiceDetailViewList.get(i).getInvAmount()", "invoiceDetailViewList.get(i).getRouting()"], "Fixed commit": "f28160d3d8a9d21c6911a6cf124531ceedda7915", "Url": "https://api.github.com/repos/iCONEXT/SMI_Travel", "Date": "2015-09-15T03:36:34Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.alibaba.dubbo.remoting.transport.CodecSupport.getSerialization(channel.getUrl(), serializationType)) instanceof com.alibaba.dubbo.common.serialize.OptimizedSerialization) { argNum = in.readInt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8305/buggy-version/dubbo-rpc.dubbo-rpc-default.src.main.java.com.alibaba.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation.java", "BodyUseAPI": [], "Fixed commit": "3dcedd6d9b89ce9149a073d660e0fc2659e9fd85", "Url": "https://api.github.com/repos/Xiaobaxi/dubbox", "Date": "2017-01-15T14:43:09Z"},
{"Line": "=>1813", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clip && ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.CUPCAKE))) { mPopup.setClippingEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3596/buggy-version/lib.src.main.java.com.rey.material.widget.ListPopupWindow.java", "BodyUseAPI": [], "Fixed commit": "5a60829f04da9dab60ccfeade068559607eece59", "Url": "https://api.github.com/repos/rey5137/material", "Date": "2015-05-11T17:50:08Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<org.bubblecloud.vr4java.model.SceneNode>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (node != null) { node.writeState(bytes, startIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8428/buggy-version/vr4java-common.src.main.java.org.bubblecloud.vr4java.model.SceneModel.java", "BodyUseAPI": ["org.bubblecloud.vr4java.model.SceneNode.writeState(byte[],int)"], "Fixed commit": "37611ad4e4d3e36b4d2d7ef4e1ecb96c0f2be5fc", "Url": "https://api.github.com/repos/bubblecloud/vr4java", "Date": "2014-11-15T09:11:57Z"},
{"Line": "=>825", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (folder.exists()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4760/buggy-version/UltimateAndroid.src.com.marshalchen.common.commonUtils.fileUtils.FileUtils.java", "BodyUseAPI": [], "Fixed commit": "a7172684ceb478afbbaf8682b31a84dc80e6d556", "Url": "https://api.github.com/repos/cymcsg/UltimateAndroid", "Date": "2014-09-29T07:35:15Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getIntent().getFlags()) & (android.content.Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT)) != 0) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3506/buggy-version/UniGamesProject.app.src.main.java.com.example.juho.unigamesproject.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "394d0a59b7b634d5b3a731a641852351a35875c6", "Url": "https://api.github.com/repos/juhojo/AndroidAdvProject", "Date": "2016-09-24T11:59:30Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (extras != null) { android.widget.Toast.makeText(getApplicationContext(), extras.getString(\"error\"), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3506/buggy-version/UniGamesProject.app.src.main.java.com.example.juho.unigamesproject.LoginActivity.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)", "android.widget.Toast.makeText(getApplicationContext(), extras.getString(\"error\"), Toast.LENGTH_LONG).show()", "android.widget.Toast.makeText(getApplicationContext(),extras.getString(\"error\"),Toast.LENGTH_LONG)"], "Fixed commit": "394d0a59b7b634d5b3a731a641852351a35875c6", "Url": "https://api.github.com/repos/juhojo/AndroidAdvProject", "Date": "2016-09-24T11:59:30Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((figure) != null) { retval = figure.getOwnerNr(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3681/buggy-version/de.htwg.se.dog.src.de.htwg.se.dog.models.impl.Field.java", "BodyUseAPI": [], "Fixed commit": "ac4f78ffcbe1fa9d8db379e8e13a3c4c0af57952", "Url": "https://api.github.com/repos/miofferg/de.htwg.se.dog", "Date": "2013-12-20T21:30:02Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v.getId()) == (R.id.random_button)) { startActivity(new android.content.Intent(this, edu.csulb.suitup.RandomWardrobeActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8967/buggy-version/app.src.main.java.edu.csulb.suitup.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "f1a52d9bc7987911149f5eb51310758aa83df4e9", "Url": "https://api.github.com/repos/DavidVan/CECS-453-Final-Project", "Date": "2016-12-04T07:39:01Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (canonicalizedName.equals(\"select\")) { return org.apache.hadoop.hive.ql.security.authorization.Privilege.PrivilegeType.SELECT; }else if (canonicalizedName.equals(\"show_database\")) { return org.apache.hadoop.hive.ql.security.authorization.Privilege.PrivilegeType.SHOW_DATABASE; }else if (canonicalizedName.equals(\"grant\")) { return org.apache.hadoop.hive.ql.security.authorization.Privilege.PrivilegeType.GRANT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5562/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.security.authorization.Privilege.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "7c08616b7024146e20f66a275f0f1f5a0ddf9e9d", "Url": "https://api.github.com/repos/lalaguozhe/hive", "Date": "2014-03-04T09:52:16Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.ql.session.SessionState.getHiveOperation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((((op.equals(HiveOperation.GRANT_PRIVILEGE)) || (op.equals(HiveOperation.REVOKE_PRIVILEGE))) || (op.equals(HiveOperation.CREATEROLE))) || (op.equals(HiveOperation.DROPROLE))) || (op.equals(HiveOperation.GRANT_ROLE))) || (op.equals(HiveOperation.REVOKE_ROLE))) { ss.getAuthorizer().authorize(op.getInputRequiredPrivileges(), op.getOutputRequiredPrivileges()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5562/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.Driver.java", "BodyUseAPI": ["ss.getAuthorizer().authorize(op.getInputRequiredPrivileges(),op.getOutputRequiredPrivileges())", "org.apache.hadoop.hive.ql.plan.HiveOperation.getInputRequiredPrivileges()", "org.apache.hadoop.hive.ql.plan.HiveOperation.getOutputRequiredPrivileges()"], "Fixed commit": "7c08616b7024146e20f66a275f0f1f5a0ddf9e9d", "Url": "https://api.github.com/repos/lalaguozhe/hive", "Date": "2014-03-04T09:52:16Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (batteryLow && ((lastBatteryLow) != batteryLow)) { listener.onWhatsappBatteryLow(); lastBatteryLow = batteryLow; }else if (batteryLow != (lastBatteryLow)) lastBatteryLow = batteryLow;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2292/buggy-version/src.com.scsere.main.WebApp.WebAppWatcher.java", "BodyUseAPI": [], "Fixed commit": "4496322823cb3ff3aef5aa24f8113493a902705a", "Url": "https://api.github.com/repos/scsere/waWebStats", "Date": "2016-03-14T02:22:25Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (definedAspects != null) { for (org.alfresco.service.cmr.dictionary.AspectDefinition aspect : definedAspects.values()) { propDef.putAll(aspect.getProperties()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8007/buggy-version/amp.src.main.java.org.alfresco.extension.bulkimport.impl.BatchImporterImpl.java", "BodyUseAPI": ["java.util.Map<org.alfresco.service.namespace.QName, org.alfresco.service.cmr.dictionary.AspectDefinition>.values()"], "Fixed commit": "303af0259d755a8426a7ef3edd2bfbf8dcbb165b", "Url": "https://api.github.com/repos/drivera73/alfresco-bulk-import", "Date": "2017-01-19T00:53:09Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(op2 instanceof org.apache.chemistry.opencmis.jcr.query.EvaluatorXPath.ListBuilder)) throw new java.lang.UnsupportedOperationException(\"Unpredicted behavior. Parameter op2 should be instance of ListBuilder\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/311/buggy-version/chemistry-opencmis-server.chemistry-opencmis-server-jcr.src.main.java.org.apache.chemistry.opencmis.jcr.query.EvaluatorXPath.java", "BodyUseAPI": [], "Fixed commit": "0c08682c60a873da4fac818deb1b87e6d7b728cf", "Url": "https://api.github.com/repos/engagepoint/chemistry-opencmis", "Date": "2014-06-23T16:05:45Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rmfo.getStrength().equals(\"\")) { radioMedicine.setVolume(0.0); }else { radioMedicine.setStrength(java.lang.Double.parseDouble(rmfo.getVolume())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/9004/buggy-version/src.main.java.ohtu.radioaine.controller.RadioMedicineController.java", "BodyUseAPI": ["ohtu.radioaine.controller.RadioMedicineFormObject.getVolume()", "java.lang.Double.parseDouble(rmfo.getVolume())", "ohtu.radioaine.controller.RadioMedicine.setStrength(double)"], "Fixed commit": "0561b342f5b2903fd3c8f69df75845818ecd45db", "Url": "https://api.github.com/repos/Radioaine/radioaine", "Date": "2012-04-13T06:30:59Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (efo.getStrength().equals(\"\")) { eluate.setVolume(0.0); }else { eluate.setStrength(java.lang.Double.parseDouble(efo.getVolume())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/9004/buggy-version/src.main.java.ohtu.radioaine.controller.EluateController.java", "BodyUseAPI": ["java.lang.Double.parseDouble(efo.getVolume())", "ohtu.radioaine.controller.Eluate.setStrength(double)", "ohtu.radioaine.controller.EluateFormObject.getVolume()"], "Fixed commit": "0561b342f5b2903fd3c8f69df75845818ecd45db", "Url": "https://api.github.com/repos/Radioaine/radioaine", "Date": "2012-04-13T06:30:59Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((model.getSelectedNeuralNetId()) == null) && ((model.getNeuralNet()) != null)) { model.setSelectedNeuralNetId(model.getNeuralNet().getNeuralNetMetaData().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/547/buggy-version/src.main.java.de.baleipzig.iris.ui.presenter.neuralnetconfig.NeuralNetConfigPresenter.java", "BodyUseAPI": ["model.getNeuralNet().getNeuralNetMetaData()", "model.getNeuralNet().getNeuralNetMetaData().getId()", "de.baleipzig.iris.ui.viewmodel.neuralnetconfig.NeuralNetConfigViewModel.getNeuralNet()", "de.baleipzig.iris.ui.viewmodel.neuralnetconfig.NeuralNetConfigViewModel.setSelectedNeuralNetId(model.getNeuralNet().getNeuralNetMetaData().getId())"], "Fixed commit": "7a8b242ca4f21b8be06e6eebc56d4cbd1a3a1f4e", "Url": "https://api.github.com/repos/fluoxa/Iris", "Date": "2016-11-14T20:27:09Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((elementChangedCallback) != null) { elementChangedCallback.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3847/buggy-version/src.com.dozingcatsoftware.vectorpinball.editor.elements.EditableField.java", "BodyUseAPI": [], "Fixed commit": "3dfa0eeb61f43043e52ecbb56541ca79eab20496", "Url": "https://api.github.com/repos/dozingcat/Vector-Pinball-Editor", "Date": "2015-05-06T03:05:14Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((elementChangedCallback) != null) { elementChangedCallback.run(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3847/buggy-version/src.com.dozingcatsoftware.vectorpinball.editor.elements.EditableField.java", "BodyUseAPI": [], "Fixed commit": "3dfa0eeb61f43043e52ecbb56541ca79eab20496", "Url": "https://api.github.com/repos/dozingcat/Vector-Pinball-Editor", "Date": "2015-05-06T03:05:14Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.fs.FileStatus.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.hadoop.hbase.io.HFileLink.isHFileLink(path)) { path = org.apache.hadoop.hbase.io.HFileLink.getHFileLinkPatternRelativePath(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1135/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.mob.compactions.MobCompactionSubprocedure.java", "BodyUseAPI": ["org.apache.hadoop.hbase.io.HFileLink.getHFileLinkPatternRelativePath(org.apache.hadoop.fs.Path)"], "Fixed commit": "f27bd568375ffa76e84ac64ab463faaafec6fa84", "Url": "https://api.github.com/repos/JingchengDu/hbase", "Date": "2016-01-28T09:17:56Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.dialog.isShowing()) { this.dialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2845/buggy-version/branches.tinfoil-sms.src.com.tinfoil.sms.sms.ConversationView.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "2d8ff8d23934b6a08c1ae90f87ee9c16164bd4a9", "Url": "https://api.github.com/repos/tinfoilhat/tinfoil-sms", "Date": "2013-08-11T00:12:26Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.dialog.isShowing()) { this.dialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2845/buggy-version/branches.tinfoil-sms.src.com.tinfoil.sms.sms.MessageView.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "2d8ff8d23934b6a08c1ae90f87ee9c16164bd4a9", "Url": "https://api.github.com/repos/tinfoilhat/tinfoil-sms", "Date": "2013-08-11T00:12:26Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((description.getName()) == null) || (\"\".equalsIgnoreCase(description.getName()))) { org.springframework.validation.ObjectError error = new org.springframework.validation.ObjectError(((\"descriptionsSettoList[\" + i) + \"].name\"), ((\"Option name(\" + (l.getCode())) + \") is Required\")); result.addError(error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4721/buggy-version/sm-shop.src.main.java.com.salesmanager.web.admin.controller.products.OptionsController.java", "BodyUseAPI": [], "Fixed commit": "8908c14093ba34e9c3addfe5daaec0b8a41ea491", "Url": "https://api.github.com/repos/asaad1982/laVetrina", "Date": "2016-03-23T20:48:30Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cursor != null) { if (cursor.moveToFirst()) pokemon = new com.pokedeck.imie.pokedeck.entity.Pokemon(cursor); cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1391/buggy-version/app.src.main.java.com.pokedeck.imie.pokedeck.entity.Pokedeck.java", "BodyUseAPI": ["android.database.Cursor.close()", "android.database.Cursor.moveToFirst()"], "Fixed commit": "37e2d5441853a7f77774ce93699643800047177f", "Url": "https://api.github.com/repos/fabfromsky/Pokedeck", "Date": "2016-06-20T14:10:22Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["er.extensions.jdbc.ERXJDBCConnectionBroker.getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((con.getTransactionIsolation()) != 0) { con.setAutoCommit(false); con.setReadOnly(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6803/buggy-version/Frameworks.Core.ERExtensions.Sources.er.extensions.eof.ERXSequence.java", "BodyUseAPI": ["java.sql.Connection.setReadOnly(boolean)", "java.sql.Connection.setAutoCommit(boolean)"], "Fixed commit": "b151239220e9ab03e8f431e5a7b09d9c29de8e91", "Url": "https://api.github.com/repos/timsquared/wonder", "Date": "2014-06-09T13:17:29Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((j % i) == 0) { if ((doors[j]) == 0) { doors[j] = 1; }else { doors[j] = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6468/buggy-version/cyber-dojo.org.HundredDoors.Java.HundredDoors.java", "BodyUseAPI": [], "Fixed commit": "9efdbec05dd36add4d6f155076f558f001aafea9", "Url": "https://api.github.com/repos/FaulknerJr/cyber-dojo", "Date": "2016-05-05T01:01:37Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (loggersMap.containsKey(loggerName)) { propertyName = \"\"; propertyValue = properties.getProperty(key); int propertyIdx = loggerName.indexOf(\".\"); if (propertyIdx > 0) { propertyName = loggerName.substring((propertyIdx + 1)); loggerName = loggerName.substring(0, propertyIdx); } loggersMap.get(loggerName).put(propertyName, propertyValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7242/buggy-version/android-logger.src.main.java.com.rafalzajfert.androidlogger.ConfigReader.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int,int)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>.get(java.lang.String)"], "Fixed commit": "ca13b97922bd030318671426c2ec49034c8481c5", "Url": "https://api.github.com/repos/rSquared-software/AndroidLogger", "Date": "2015-10-15T20:10:32Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getBlockTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (host instanceof pcl.lc.tileentity.TileEntityStargateBase) { pcl.lc.tileentity.TileEntityStargateBase base = ((pcl.lc.tileentity.TileEntityStargateBase) (host)); return base.isConnected() ? 15 : 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1798/buggy-version/src.main.java.pcl.lc.blocks.BlockStargateBase.java", "BodyUseAPI": [], "Fixed commit": "8e6fe4dd1a108396410831871c31620f58a0eac4", "Url": "https://api.github.com/repos/PC-Logix/LanteaCraft", "Date": "2014-02-22T08:35:20Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.IBlockAccess.getBlockTileEntity(int,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (host instanceof pcl.lc.tileentity.TileEntityStargateBase) { pcl.lc.tileentity.TileEntityStargateBase base = ((pcl.lc.tileentity.TileEntityStargateBase) (host)); return base.isConnected() ? 15 : 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1798/buggy-version/src.main.java.pcl.lc.blocks.BlockStargateBase.java", "BodyUseAPI": [], "Fixed commit": "8e6fe4dd1a108396410831871c31620f58a0eac4", "Url": "https://api.github.com/repos/PC-Logix/LanteaCraft", "Date": "2014-02-22T08:35:20Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInError()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6808/buggy-version/core.src.main.java.org.remus.core.AppletInstance.java", "BodyUseAPI": [], "Fixed commit": "2ce087e76e49806940d3a2e550f2532fb8433ac9", "Url": "https://api.github.com/repos/kellrott/Remus", "Date": "2011-08-30T19:16:26Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.thruzero.auth.service.UserService.getUserByLoginId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (user != null) { com.thruzero.auth.utils.AuthenticationUtils.handleBadLoginAttempt(user); userService.saveUser(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6795/buggy-version/tz-commons.tz-commons-auth.src.main.java.com.thruzero.auth.realm.TzAuthorizingRealm.java", "BodyUseAPI": ["com.thruzero.auth.utils.AuthenticationUtils.handleBadLoginAttempt(com.thruzero.auth.model.User)", "com.thruzero.auth.service.UserService.saveUser(com.thruzero.auth.model.User)"], "Fixed commit": "aba5dc8bce2bbb8909c4b63e899613c36268ba68", "Url": "https://api.github.com/repos/georgenorman/tz-commons", "Date": "2012-07-29T20:22:52Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.qccr.livtrip.biz.service.product.impl.ProductDao.getHotelProductById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNoneBlank(hotelProduct.getThumb())) { hotelProduct.setThumb(hotelProduct.getThumb().replace(\"100x100\", \"200x200\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/219/buggy-version/biz.livtripmanager-biz.src.main.java.com.qccr.livtrip.biz.service.product.impl.ProductServiceImpl.java", "BodyUseAPI": ["com.qccr.livtrip.model.product.HotelProductRo.setThumb(hotelProduct.getThumb().replace(\"100x100\", \"200x200\"))", "com.qccr.livtrip.model.product.HotelProductRo.getThumb()", "hotelProduct.getThumb().replace(java.lang.String,java.lang.String)"], "Fixed commit": "093b2aca89f8329dca996874d0914efac635c8e4", "Url": "https://api.github.com/repos/livtrip/livtripmanager", "Date": "2017-04-30T03:30:11Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jjsp.http.HTMLFormPart.seekSequence(byte[],int,byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dataStart >= endPos) { startPos = endPos + (submissionBoundary.length); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3689/buggy-version/src.jjsp.http.HTMLFormPart.java", "BodyUseAPI": [], "Fixed commit": "6b5ed1862dafe7a8cb95a182ebfc133e6f114124", "Url": "https://api.github.com/repos/rhysnewman/JJSP", "Date": "2017-10-16T02:45:48Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endPos <= startPos) { startPos = (endPos + (submissionBoundary.length)) + (endPosCRLFCount * 2); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3689/buggy-version/src.jjsp.http.HTMLFormPart.java", "BodyUseAPI": [], "Fixed commit": "6b5ed1862dafe7a8cb95a182ebfc133e6f114124", "Url": "https://api.github.com/repos/rhysnewman/JJSP", "Date": "2017-10-16T02:45:48Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(message.startsWith(\"$\"))) { try { character = java.lang.Character.convert(message.split(\"Held \", 2)[1].split(\" bets:\", 2)[0]); } catch (java.lang.ArrayIndexOutOfBoundsException ex) { try { character = java.lang.Character.convert(message.split(\"Sold \", 2)[1].split(\" bets:\", 2)[0]); } catch (java.lang.Exception ex2) { character = null; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/867/buggy-version/src.mp247gui.ChatBot.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String,int)", "java.lang.String.split(java.lang.String,int)", "java.lang.Character.convert(java.lang.String)", "java.lang.String.split(java.lang.String,int)", "java.lang.Character.convert(java.lang.String)", "java.lang.String.split(java.lang.String,int)"], "Fixed commit": "d7c65728d73570c09469337862a8d277fc644f13", "Url": "https://api.github.com/repos/robomaeyhem/MP247Gui", "Date": "2015-10-11T18:25:14Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (name.contains(\" \")) { throw new java.lang.RuntimeException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/829/buggy-version/src.main.java.ru.maklas.consoleapp.Command.java", "BodyUseAPI": [], "Fixed commit": "d1e560df66aacfc4b0fca6f4c37038a4d0c5337c", "Url": "https://api.github.com/repos/maklas/ConsoleApplication", "Date": "2017-09-30T16:02:09Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (dataType != null) { return new io.crate.metadata.ReferenceInfo.Builder().ident(referenceInfo.ident()).columnPolicy(referenceInfo.columnPolicy()).granularity(referenceInfo.granularity()).type(dataType).build(); }else { return referenceInfo; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1180/buggy-version/sql.src.main.java.io.crate.analyze.relations.AbstractTableRelation.java", "BodyUseAPI": ["new io.crate.metadata.ReferenceInfo.Builder().ident(referenceInfo.ident()).columnPolicy(referenceInfo.columnPolicy()).granularity(referenceInfo.granularity()).type(io.crate.types.DataType)", "new io.crate.metadata.ReferenceInfo.Builder().ident(referenceInfo.ident()).columnPolicy(referenceInfo.columnPolicy()).granularity(referenceInfo.granularity()).type(dataType).build()"], "Fixed commit": "eb251d2b53ab315d540c5aa970b13ca1c28ebc8d", "Url": "https://api.github.com/repos/crate/crate", "Date": "2016-06-16T20:26:46Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["samuelpalmer.sensorautorotation.processes.ui.feedback.Email.send()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (openedEmail) finish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6677/buggy-version/app.src.main.java.samuelpalmer.sensorautorotation.processes.ui.feedback.EnterFeedbackActivity.java", "BodyUseAPI": [], "Fixed commit": "8ca6bae06f6154524788e9406808de0bf9aee2ef", "Url": "https://api.github.com/repos/sampalmer/sideways-mode", "Date": "2017-04-24T05:01:04Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newFile && (!(lastID.equals(iop.getUID())))) { lastID = iop.getUID(); kindred.addPeer(iop); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7749/buggy-version/src.mlga.io.peer.PeerTracker.java", "BodyUseAPI": ["mlga.io.peer.IOPeer.getUID()", "mlga.io.peer.kindred.Kindred.addPeer(mlga.io.peer.IOPeer)"], "Fixed commit": "eaab398a655c6001f2c6b13cbfe6a29bbec7120c", "Url": "https://api.github.com/repos/PsiLupan/MakeLobbiesGreatAgain", "Date": "2017-07-02T20:19:30Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((trip.getPhoto()) != null) { this.setPhoto(trip.getPhoto().getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1565/buggy-version/src.main.java.ru.kpfu.itis.dmitryivanov.response.TripInfoResponse.java", "BodyUseAPI": [], "Fixed commit": "dd3fad8e450497835472bcd9437ecf4fb7d2cc8a", "Url": "https://api.github.com/repos/Flexuss/TeamTravel", "Date": "2017-12-16T21:00:43Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.changyi.fi.external.enterprise.manager.EnternalEnterpriseAPIManager.API_TIANYANCHA.equals(key)) { return new com.changyi.fi.external.enterprise.tyc.TianYanChaAPIServiceImpl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3104/buggy-version/src.main.java.com.changyi.fi.external.enterprise.manager.EnternalEnterpriseAPIManager.java", "BodyUseAPI": [], "Fixed commit": "8626455af193356462bc799bd2f47b1608837452", "Url": "https://api.github.com/repos/finley007/Suishoushu", "Date": "2017-09-08T09:07:08Z"},
{"Line": "=>1222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kalang.compiler.SourceUnit.getInvocationExpr(kalang.ast.ExprNode,java.lang.String,ctx.params,<nulltype>,ctx.Identifier(1).getSymbol())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ie == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/439/buggy-version/src.main.java.kalang.compiler.SourceUnit.java", "BodyUseAPI": [], "Fixed commit": "a4af238471b4bdb34686adc1235764aa99f2b556", "Url": "https://api.github.com/repos/kasonyang/kalang", "Date": "2016-03-05T02:44:11Z"},
{"Line": "=>1172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(parentDir.exists())) parentDir.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/147/buggy-version/src.main.java.org.ecocean.media.MediaAsset.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "bd1c7c7e40a1bb848e788c000dfadb7443a04d98", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2017-04-06T16:58:03Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6649/buggy-version/app.src.main.java.org.dev4u.hv.guia3_ejemplo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "db426bb2e4f354f884a322244f907bcbe0e9c1e5", "Url": "https://api.github.com/repos/jonathancplusplus/Guia3_ejemplo", "Date": "2017-09-02T05:09:26Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.idega.xformsmanager.util.FormManagerUtil.getElementsContainingAttribute(xformsComponentDataBean.getElement(),java.lang.String,FormManagerUtil.ref_s_att)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((outputs == null) || ((outputs.getLength()) == 0)) outputs = com.idega.xformsmanager.util.FormManagerUtil.getElementsContainingAttribute(xformsComponentDataBean.getElement(), FormManagerUtil.output_tag, FormManagerUtil.ref_s_att);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7177/buggy-version/src.java.com.idega.xformsmanager.manager.impl.XFormsManagerPlainImpl.java", "BodyUseAPI": [], "Fixed commit": "977df8d6a610323549808897e8c6acbd7e726232", "Url": "https://api.github.com/repos/idega/com.idega.xformsmanager", "Date": "2012-02-27T08:40:54Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["component.getComponentDataBean().getElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(output.hasAttribute(FormManagerUtil.ref_s_att))) { com.idega.util.xml.XPathUtil outputXPUT = new com.idega.util.xml.XPathUtil(\".//xf:output\"); output = ((org.w3c.dom.Element) (outputXPUT.getNode(output))); if (output == null) { outputXPUT = new com.idega.util.xml.XPathUtil((\".//\" + (com.idega.xformsmanager.util.FormManagerUtil.output_tag))); output = ((org.w3c.dom.Element) (outputXPUT.getNode(output))); } if (output == null) return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7177/buggy-version/src.java.com.idega.xformsmanager.manager.impl.XFormsManagerPlainImpl.java", "BodyUseAPI": ["com.idega.util.xml.XPathUtil.getNode(org.w3c.dom.Element)"], "Fixed commit": "977df8d6a610323549808897e8c6acbd7e726232", "Url": "https://api.github.com/repos/idega/com.idega.xformsmanager", "Date": "2012-02-27T08:40:54Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.webfilesys.MetaInfManager.getInstance().getTitlePic(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((titlePic != null) && (titlePic.equals(fileToMove))) { de.webfilesys.MetaInfManager.getInstance().setTitlePic(currentPath, newFileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/280/buggy-version/src.main.java.de.webfilesys.gui.blog.BlogMoveEntryHandler.java", "BodyUseAPI": [], "Fixed commit": "8dadf72162328b054b8d4d68ee06452e2b1b5e2e", "Url": "https://api.github.com/repos/fhoehnel/webfilesys", "Date": "2016-08-17T20:13:19Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7123/buggy-version/src.persistence.PersistSymbolXML.java", "BodyUseAPI": [], "Fixed commit": "496d8cd8e27ed69974ebf2cec36255f4057b4e68", "Url": "https://api.github.com/repos/cmiyachi/StockMarketPort", "Date": "2014-03-03T18:42:57Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (imageFile.getModel().isDir()) { java.util.Set<java.lang.String> allChildrenIds = googleDriveService.getAllChildrenIds(imageFile.getModel().getId()); for (java.lang.String childId : allChildrenIds) { java.nio.file.Path path = fileSystem.getFullPath(fileSystem.get(childId)); handledPaths.add(path); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4169/buggy-version/src.main.java.net.edgefox.googledrive.filesystem.change.remote.RemoteChangesHandler.java", "BodyUseAPI": ["net.edgefox.googledrive.filesystem.Trie<java.lang.String, net.edgefox.googledrive.filesystem.FileMetadata>.getModel()", "net.edgefox.googledrive.service.GoogleDriveService.getAllChildrenIds(imageFile.getModel().getId())", "imageFile.getModel().getId()"], "Fixed commit": "f441c27a2d2740ba98a09eaa0a1558a251578123", "Url": "https://api.github.com/repos/edgefox/GoogleDriveJavaClient", "Date": "2013-11-30T20:51:37Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scrollView.getScrollY()) < 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4810/buggy-version/oak-library.src.main.java.oak.widget.ResizableHeaderScrollView.java", "BodyUseAPI": [], "Fixed commit": "e526a7ece2bf30b369e2949f2840e007a665d4df", "Url": "https://api.github.com/repos/willowtreeapps/OAK", "Date": "2014-08-04T18:59:02Z"},
{"Line": "=>9980", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cruise.umple.compiler.java.UmpleClass.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(av.isImmutable())) canSet.append(cruise.umple.compiler.java.StringFormatter.format(\" {0} = false;\\n\", gen.translate(\"attributeCanSet\", av)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4814/buggy-version/cruise.umple.src-gen-jet.cruise.umple.compiler.java.JavaClassGenerator.java", "BodyUseAPI": ["cruise.umple.compiler.java.JavaGenerator.translate(java.lang.String,cruise.umple.compiler.java.Attribute)", "java.lang.StringBuilder.append(cruise.umple.compiler.java.StringFormatter.format(\"    {0} = false;\\n\", gen.translate(\"attributeCanSet\", av)))", "cruise.umple.compiler.java.StringFormatter.format(java.lang.String,gen.translate(\"attributeCanSet\", av))"], "Fixed commit": "035cc1e9f1e7d375fba7333980cf6aeeb30b41b9", "Url": "https://api.github.com/repos/amidzak/umple", "Date": "2015-11-05T02:31:58Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((no.runsafe.framework.internal.Output.DefaultDebugLevel.intValue()) <= (java.util.logging.Level.INFO.intValue())) info(\"Setting debug level to %s\", no.runsafe.framework.internal.Output.DefaultDebugLevel.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5649/buggy-version/src.no.runsafe.framework.internal.Output.java", "BodyUseAPI": [], "Fixed commit": "505a92fb3558584bea7bcd789b6cf1b504000a7d", "Url": "https://api.github.com/repos/Runsafe/Framework", "Date": "2013-07-12T16:31:19Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((creds.signum()) < 1) generateToken(creds.negate()); else generateToken(creds);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2242/buggy-version/src.java.security.TokenHandlerServer.java", "BodyUseAPI": [], "Fixed commit": "d3949956eb1a3381ebabf78b91500914ea388303", "Url": "https://api.github.com/repos/Quayed/komponentMis", "Date": "2016-05-03T13:52:50Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((byteBuf.readableBytes()) <= 0) { super.write(ctx, msg, promise); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4717/buggy-version/src.main.java.io.github.lxgaming.bungeeplayer.ChannelHandler.java", "BodyUseAPI": [], "Fixed commit": "aaff3802247c20f2c1d240b3314d4addc88d142c", "Url": "https://api.github.com/repos/LXGaming/BungeePlayer", "Date": "2017-06-13T06:39:08Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nist.hit.core.hl7v2.service.HL7V2ResourceLoaderImpl.additionalConstraints(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (constraint != null) { gov.nist.hit.core.domain.Constraints existing = this.constraintsRepository.findOneBySourceId(constraint.getSourceId()); if (existing != null) { constraint.setId(existing.getId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3385/buggy-version/hit-core-hl7v2-service.src.main.java.gov.nist.hit.core.hl7v2.service.HL7V2ResourceLoaderImpl.java", "BodyUseAPI": ["this.constraintsRepository.findOneBySourceId(constraint.getSourceId())", "gov.nist.hit.core.domain.Constraints.getSourceId()", "gov.nist.hit.core.domain.Constraints.setId(existing.getId())"], "Fixed commit": "9b48d22ab95fed1289201dec6253a2259b32e017", "Url": "https://api.github.com/repos/haffo/hit-core-hl7v2", "Date": "2017-04-21T14:47:09Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((paragraph.getRuns().size()) == 0) { paragraph.createRun().setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/9117/buggy-version/plugins.org.obeonetwork.m2doc.src.org.obeonetwork.m2doc.parser.TokenIterator.java", "BodyUseAPI": ["org.apache.poi.xwpf.usermodel.XWPFParagraph.createRun()", "paragraph.createRun().setText(java.lang.String)"], "Fixed commit": "83edb15a23ed792085e4b7017a5ae316f17e979a", "Url": "https://api.github.com/repos/ObeoNetwork/M2Doc", "Date": "2016-05-04T10:05:54Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ExecutionException.getCause()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cause instanceof pl.wavesoftware.util.preferences.impl.hiera.HieraBackend.KeyNotFoundException) { throw ((pl.wavesoftware.util.preferences.impl.hiera.HieraBackend.KeyNotFoundException) (cause)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7638/buggy-version/src.main.java.pl.wavesoftware.util.preferences.impl.hiera.HieraBackend.java", "BodyUseAPI": [], "Fixed commit": "32c5469887d1c4256582c1a4982d218c63184697", "Url": "https://api.github.com/repos/wavesoftware/java-preferences-hiera", "Date": "2014-01-10T19:30:18Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (availablespace > 0) { g2.drawString(label, ((int) (((xstart) + (i * (xunit))) - (textwidth / 2))), (y + 20)); availablespace = (-textwidth) / 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5463/buggy-version/src.Graph.java", "BodyUseAPI": [], "Fixed commit": "1aeeec4114a4e302291161d2fd3cb3184db339d5", "Url": "https://api.github.com/repos/sfleischer/Gradebook", "Date": "2016-11-23T03:24:55Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.westsnow.myapplication.JSONParser.makeHttpRequest(java.lang.String,java.lang.String,java.util.List<org.apache.http.NameValuePair>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (json != null) { android.util.Log.d(\"Login attempt\", json.toString()); success = json.getInt(com.example.westsnow.myapplication.MainActivity.TAG_SUCCESS); }else { return \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/475/buggy-version/app.src.main.java.com.example.westsnow.myapplication.MainActivity.java", "BodyUseAPI": ["org.json.JSONObject.getInt(java.lang.String)", "org.json.JSONObject.toString()", "android.util.Log.d(java.lang.String,json.toString())"], "Fixed commit": "0840ac77d3f9011f2436b4bcd6e41f10c8080b78", "Url": "https://api.github.com/repos/CloudProject6998/Snail", "Date": "2015-05-21T06:40:10Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.westsnow.myapplication.JSONParser.makeHttpRequest(java.lang.String,java.lang.String,java.util.List<org.apache.http.NameValuePair>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (json != null) { android.util.Log.d(\"resigter attempt\", json.toString()); }else { return \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/475/buggy-version/app.src.main.java.com.example.westsnow.myapplication.Register.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,json.toString())", "org.json.JSONObject.toString()"], "Fixed commit": "0840ac77d3f9011f2436b4bcd6e41f10c8080b78", "Url": "https://api.github.com/repos/CloudProject6998/Snail", "Date": "2015-05-21T06:40:10Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mbserver.api.game.Location.getBlockY()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((y < 0) || (y > 127)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2007/buggy-version/src.com.ikkerens.worldedit.commands.FixLightCommand.java", "BodyUseAPI": [], "Fixed commit": "a644676003af6b897eddf3eea8d8c2f0d3109b9d", "Url": "https://api.github.com/repos/Ikkerens/MBWorldEdit", "Date": "2014-11-19T14:25:57Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showConfirmDialog(<nulltype>,java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (answer != (javax.swing.JOptionPane.OK_OPTION)) java.lang.System.exit(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6632/buggy-version/MapAnalyzer.src.MainPackage.LoadingFrame.java", "BodyUseAPI": [], "Fixed commit": "a12af58fbebc7207f04061084cc9f42af918dba1", "Url": "https://api.github.com/repos/naordalal/MaterialAnalysis", "Date": "2017-10-17T06:43:58Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getInput(transform).getAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allInputs.isEmpty()) { org.apache.flink.api.java.operators.DataSource<java.lang.String> dummySource = context.getExecutionEnvironment().fromElements(\"dummy\"); result = dummySource.flatMap(new org.apache.flink.api.common.functions.FlatMapFunction<java.lang.String, T>() { @java.lang.Override public void flatMap(java.lang.String s, org.apache.flink.util.Collector<T> collector) throws java.lang.Exception { } }).returns(new org.apache.beam.runners.flink.translation.types.CoderTypeInformation(((org.apache.beam.sdk.coders.Coder<T>) (org.apache.beam.sdk.coders.VoidCoder.of())))); }else { for (org.apache.beam.sdk.values.PCollection<T> collection : allInputs) { org.apache.flink.api.java.DataSet<T> current = context.getInputDataSet(collection); if (result == null) { result = current; }else { result = result.union(current); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/271/buggy-version/runners.flink.runner.src.main.java.org.apache.beam.runners.flink.translation.FlinkBatchTransformTranslators.java", "BodyUseAPI": [], "Fixed commit": "046d7627ca01c9130a4c410945306cf0d77fd69b", "Url": "https://api.github.com/repos/kennknowles/beam", "Date": "2016-05-06T11:31:18Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((strs.length) > 3) hours = new java.lang.Integer(strs[3]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6743/buggy-version/source.nl.esciencecenter.ptk.src.nl.esciencecenter.ptk.presentation.Presentation.java", "BodyUseAPI": [], "Fixed commit": "b12448d4aa7d063452d2afef5e76a652c2d66949", "Url": "https://api.github.com/repos/NLeSC/vbrowser", "Date": "2013-07-12T15:05:44Z"},
{"Line": "=>423", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((strs.length) > 4) hours = new java.lang.Integer(strs[4]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6743/buggy-version/source.nl.esciencecenter.ptk.src.nl.esciencecenter.ptk.presentation.Presentation.java", "BodyUseAPI": [], "Fixed commit": "b12448d4aa7d063452d2afef5e76a652c2d66949", "Url": "https://api.github.com/repos/NLeSC/vbrowser", "Date": "2013-07-12T15:05:44Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((inside.length()) == 0) splits = new java.lang.String[]{ }; else splits = inside.split(\",\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6782/buggy-version/h2o-core.src.main.java.water.api.Schema.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "19f5509e2f1d0d6957a11a7136ebee0fe76f239b", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-01-13T20:03:19Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getComponentType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((java.lang.String.class) == afclz) { java.lang.String stripped = splits[i].trim(); if ((stripped.length()) >= 2) stripped = stripped.substring(1, ((stripped.length()) - 1)); a[i] = ((E) (parse(stripped, afclz, required))); }else { a[i] = ((E) (parse(splits[i].trim(), afclz, required))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6782/buggy-version/h2o-core.src.main.java.water.api.Schema.java", "BodyUseAPI": ["water.api.Schema<I, S>.parse(java.lang.String,java.lang.Class<E>,boolean)", "water.api.Schema<I, S>.parse(java.lang.String,java.lang.Class<E>,boolean)"], "Fixed commit": "19f5509e2f1d0d6957a11a7136ebee0fe76f239b", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2015-01-13T20:03:19Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.daum.library.android.sitac.controller.EngineHandler.getEntityWithModelId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (e != null) delete(e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6356/buggy-version/android.org.daum.library.android.sitac.src.main.java.org.daum.library.android.sitac.controller.EngineHandler.java", "BodyUseAPI": ["org.daum.library.android.sitac.controller.EngineHandler.delete(org.daum.library.android.sitac.view.entity.IEntity)"], "Fixed commit": "84ab7ac9948e57138073ad4a323add52bbab956e", "Url": "https://api.github.com/repos/daumproject/daum-library", "Date": "2012-06-28T08:46:01Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MorraApp.totalScore(Player)", "MorraApp.totalScore(Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (h_totalScore == v_totalScore) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/736/buggy-version/src.MorraApp.java", "BodyUseAPI": [], "Fixed commit": "74dca03ea074e2e914bcb79e5e6a7e316405a7e4", "Url": "https://api.github.com/repos/vdate-ncirl/Morra", "Date": "2017-04-21T21:43:48Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MorraApp.totalScore(Player)", "MorraApp.totalScore(Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((v_totalScore >= (Constants.MAXSCORE)) && (v_totalScore > h_totalScore)) { Winner = v; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/736/buggy-version/src.MorraApp.java", "BodyUseAPI": [], "Fixed commit": "74dca03ea074e2e914bcb79e5e6a7e316405a7e4", "Url": "https://api.github.com/repos/vdate-ncirl/Morra", "Date": "2017-04-21T21:43:48Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MorraApp.totalScore(Player)", "MorraApp.totalScore(Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((h_totalScore >= (Constants.MAXSCORE)) && (h_totalScore > v_totalScore)) { Winner = h; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/736/buggy-version/src.MorraApp.java", "BodyUseAPI": [], "Fixed commit": "74dca03ea074e2e914bcb79e5e6a7e316405a7e4", "Url": "https://api.github.com/repos/vdate-ncirl/Morra", "Date": "2017-04-21T21:43:48Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (notValue != null) { cursor += notValue.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2171/buggy-version/src.main.java.com.query.maker.Criteria.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.size()"], "Fixed commit": "239fb21f4de107047e3ee1c802d7487f01c0613e", "Url": "https://api.github.com/repos/sdugene/query.maker.java", "Date": "2017-09-12T20:13:09Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (session.getLoading().getValue()) { session.setLoading(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/110/buggy-version/app.src.main.java.org.mozilla.focus.session.SessionCallbackProxy.java", "BodyUseAPI": ["org.mozilla.focus.session.Session.setLoading(boolean)"], "Fixed commit": "33e85146931ed394212e860919512c4657bd1709", "Url": "https://api.github.com/repos/layely/focus-android", "Date": "2017-10-21T05:29:14Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((matrix) != null) { matrix.iterator(subset[row]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4720/buggy-version/src.main.org.deidentifier.arx.framework.data.DataMatrixSubset.java", "BodyUseAPI": [], "Fixed commit": "25491e8cbbba2ce7269baa5f00a03137ddd00a70", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2017-06-12T12:35:42Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (percentage == 100) { uploadLastPos = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1344/buggy-version/QiniuLab.src.com.qiniu.qiniulab.activity.SimpleUploadWithoutKeyActivity.java", "BodyUseAPI": [], "Fixed commit": "ef3e5db4d44b1db8ddb684a862e96712520204f1", "Url": "https://api.github.com/repos/jemygraw/qiniu-lab-android", "Date": "2014-12-05T09:25:59Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((curMine.getAutomaticReset()) && (((curMine.getResetsIn()) <= 0) || (com.wolvencraft.prison.mines.PrisonMine.getSettings().MANUALTIMERRESET))) { curMine.resetTimer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2064/buggy-version/src.com.wolvencraft.prison.mines.cmd.ResetCommand.java", "BodyUseAPI": ["com.wolvencraft.prison.mines.mine.Mine.resetTimer()"], "Fixed commit": "6c7c50f11f0157b71677d312df77a3f9632d3057", "Url": "https://api.github.com/repos/bitWolfy/PrisonMine", "Date": "2013-01-16T02:42:38Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (classSymbol.getNestingKind().isNested()) { int lastDot = name.lastIndexOf('.'); name = ((name.substring(0, lastDot)) + '$') + (name.substring((lastDot + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7193/buggy-version/fenix-web-framework.src.main.java.pt.ist.fenixWebFramework.struts.annotations.ActionAnnotationProcessor.java", "BodyUseAPI": [], "Fixed commit": "49883cefeff3345f0ab71e77f2e4250d66fc1168", "Url": "https://api.github.com/repos/jcarvalho/bennu-renderers", "Date": "2013-07-24T14:03:02Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((((offset != (-1)) && (i > 0)) && ((hashIndex[(i - 1)]) != (-1))) && ((hashIndex[(i - 1)]) >= offset)) { throw new java.io.IOException(java.lang.String.format(\"Discovered an offset inversion! block %d offset: %d, block %d offset: %d\", (i - 1), hashIndex[(i - 1)], i, offset)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7400/buggy-version/src.java.com.rapleaf.hank.storage.cueball.Footer.java", "BodyUseAPI": [], "Fixed commit": "2aeb77f1606ab721954db8f96ca98c499a751ea4", "Url": "https://api.github.com/repos/bryanduxbury/hank", "Date": "2011-03-31T19:33:27Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rapleaf.hank.storage.cueball.HashIndexPrefixCalculator.getHashPrefix(byte[],int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (thisPrefix < (lastHashPrefix)) { throw new java.io.IOException(\"Just found a hash prefix inversion!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7400/buggy-version/src.java.com.rapleaf.hank.storage.cueball.CueballWriter.java", "BodyUseAPI": [], "Fixed commit": "2aeb77f1606ab721954db8f96ca98c499a751ea4", "Url": "https://api.github.com/repos/bryanduxbury/hank", "Date": "2011-03-31T19:33:27Z"},
{"Line": "=>1040", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.management.ManagementFactory.getPlatformMBeanServer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(server.isRegistered(mbeanName))) { server.registerMBean(this, mbeanName); }else { mbeanIsRegistered.set(false); com.orientechnologies.common.log.OLogManager.instance().warn(this, (\"MBean with name %s has already registered. Probably your system was not shutdown correctly\" + \" or you have several running applications which use OrientDB engine inside\"), mbeanName.getCanonicalName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6762/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.cache.local.twoq.O2QCache.java", "BodyUseAPI": ["javax.management.MBeanServer.registerMBean(com.orientechnologies.orient.core.storage.cache.local.twoq.O2QCache,javax.management.ObjectName)", "com.orientechnologies.common.log.OLogManager.instance().warn(com.orientechnologies.orient.core.storage.cache.local.twoq.O2QCache,java.lang.String,java.lang.String)", "javax.management.ObjectName.getCanonicalName()"], "Fixed commit": "5f30f708e8f3f6676d5911895c4042496d0dc1fd", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-02-16T11:59:21Z"},
{"Line": "=>1035", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.management.ManagementFactory.getPlatformMBeanServer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(server.isRegistered(mbeanName))) { server.registerMBean(this, mbeanName); }else { mbeanIsRegistered.set(false); com.orientechnologies.common.log.OLogManager.instance().warn(this, (\"MBean with name %s has already registered. Probably your system was not shutdown correctly\" + \" or you have several running applications which use OrientDB engine inside\"), mbeanName.getCanonicalName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6762/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.cache.local.OWOWCache.java", "BodyUseAPI": ["javax.management.MBeanServer.registerMBean(com.orientechnologies.orient.core.storage.cache.local.OWOWCache,javax.management.ObjectName)", "com.orientechnologies.common.log.OLogManager.instance().warn(com.orientechnologies.orient.core.storage.cache.local.OWOWCache,java.lang.String,java.lang.String)", "javax.management.ObjectName.getCanonicalName()"], "Fixed commit": "5f30f708e8f3f6676d5911895c4042496d0dc1fd", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-02-16T11:59:21Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["adaptor.getParameterValues().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (adaptorSchedulePeriod != null) { iTime = java.lang.Integer.parseInt(adaptorSchedulePeriod); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7660/buggy-version/core.src.main.java.eu.scape_project.watch.scheduling.quartz.QuartzScheduler.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "07141778ec4e7b46d15669bc2f8a9463a470bff1", "Url": "https://api.github.com/repos/openplanets/scout", "Date": "2013-04-10T09:09:06Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((TicTacToeBoard.getSpace(5)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(9)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(1)) == (ourSymbol))) && ((TicTacToeBoard.getSpace(3)) == 0)) return 3; else if ((((TicTacToeBoard.getSpace(1)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(9)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(2)) == 0)) return 2; else if ((((TicTacToeBoard.getSpace(1)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(9)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(4)) == 0)) return 4; else if ((((TicTacToeBoard.getSpace(3)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(7)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(2)) == 0)) return 2; else if ((((TicTacToeBoard.getSpace(3)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(7)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(2)) == 0)) return 4; else if (((((TicTacToeBoard.getSpace(1)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(8)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(4)) == 0)) && ((TicTacToeBoard.getSpace(7)) == 0)) return 7; else if (((((TicTacToeBoard.getSpace(2)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(7)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(4)) == 0)) && ((TicTacToeBoard.getSpace(1)) == 0)) return 1; else if (((((TicTacToeBoard.getSpace(1)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(6)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(2)) == 0)) && ((TicTacToeBoard.getSpace(3)) == 0)) return 3; else if (((((TicTacToeBoard.getSpace(3)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(4)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(2)) == 0)) && ((TicTacToeBoard.getSpace(1)) == 0)) return 1; else if (((((TicTacToeBoard.getSpace(2)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(9)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(6)) == 0)) && ((TicTacToeBoard.getSpace(3)) == 0)) return 3; else if (((((TicTacToeBoard.getSpace(4)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(9)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(8)) == 0)) && ((TicTacToeBoard.getSpace(7)) == 0)) return 7; else if (((((TicTacToeBoard.getSpace(3)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(8)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(6)) == 0)) && ((TicTacToeBoard.getSpace(9)) == 0)) return 9; else if (((((TicTacToeBoard.getSpace(6)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(7)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(8)) == 0)) && ((TicTacToeBoard.getSpace(9)) == 0)) return 9; else if (((((TicTacToeBoard.getSpace(1)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(5)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(9)) == (ourSymbol))) && ((TicTacToeBoard.getSpace(6)) == 0)) return 6; else if (((((TicTacToeBoard.getSpace(1)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(5)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(9)) == (ourSymbol))) && ((TicTacToeBoard.getSpace(8)) == 0)) return 8; else if (((((TicTacToeBoard.getSpace(3)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(5)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(7)) == (ourSymbol))) && ((TicTacToeBoard.getSpace(4)) == 0)) return 4; else if (((((TicTacToeBoard.getSpace(3)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(5)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(7)) == (ourSymbol))) && ((TicTacToeBoard.getSpace(8)) == 0)) return 8; else if (((((TicTacToeBoard.getSpace(7)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(5)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(3)) == (ourSymbol))) && ((TicTacToeBoard.getSpace(2)) == 0)) return 2; else if (((((TicTacToeBoard.getSpace(7)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(5)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(3)) == (ourSymbol))) && ((TicTacToeBoard.getSpace(6)) == 0)) return 6; else if (((((TicTacToeBoard.getSpace(9)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(5)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(1)) == (ourSymbol))) && ((TicTacToeBoard.getSpace(2)) == 0)) return 2; else if (((((TicTacToeBoard.getSpace(9)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(5)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(1)) == (ourSymbol))) && ((TicTacToeBoard.getSpace(4)) == 0)) return 4; else if (((((TicTacToeBoard.getSpace(6)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(8)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(5)) == (ourSymbol))) && ((TicTacToeBoard.getSpace(9)) == 0)) return 9;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8296/buggy-version/CutThroatComputerPlayer.java", "BodyUseAPI": [], "Fixed commit": "3c98299e10735c98b64851229b282d78b6ac3174", "Url": "https://api.github.com/repos/davidsawyer/TicTacToe", "Date": "2012-06-02T17:57:28Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((TicTacToeBoard.getSpace(9)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(5)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(1)) == (ourSymbol))) && ((TicTacToeBoard.getSpace(4)) == 0)) return 4; else if (((((TicTacToeBoard.getSpace(6)) == (theirSymbol)) && ((TicTacToeBoard.getSpace(8)) == (theirSymbol))) && ((TicTacToeBoard.getSpace(5)) == (ourSymbol))) && ((TicTacToeBoard.getSpace(9)) == 0)) return 9;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8296/buggy-version/CutThroatComputerPlayer.java", "BodyUseAPI": [], "Fixed commit": "3c98299e10735c98b64851229b282d78b6ac3174", "Url": "https://api.github.com/repos/davidsawyer/TicTacToe", "Date": "2012-06-02T17:57:28Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(params.isEmpty())) { uriBuilder.append('?'); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3721/buggy-version/openbankdata-core.src.main.java.org.openbankdata.core.client.BankRequest.java", "BodyUseAPI": [], "Fixed commit": "829ee73572ebc3780dd40c7685d7d3fb50e5538e", "Url": "https://api.github.com/repos/openbankdata/openbankdata-jvm", "Date": "2014-03-06T15:10:52Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((bName == null) || ((bName.length()) < 1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7853/buggy-version/WPS.src.de.rwth.ti.wps.NewFloorActivity.java", "BodyUseAPI": [], "Fixed commit": "4f6e80ff3a206183826f4934bf9d5599543b4d65", "Url": "https://api.github.com/repos/tcuje/PraktikumSS13-WLAN-Fingerprint", "Date": "2013-06-02T22:06:33Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.agg.application.dao.QuoteDAO.findByIdQuoteId(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((quote.getUseOfEquip()) != null) { reportDO.setEquipment(quote.getUseOfEquip().getEquipName()); }else { reportDO.setEquipment(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5766/buggy-version/src.main.java.com.agg.application.service.impl.QuoteServiceImpl.java", "BodyUseAPI": ["com.agg.application.model.ReportDO.setEquipment(quote.getUseOfEquip().getEquipName())", "quote.getUseOfEquip().getEquipName()", "com.agg.application.entity.Quote.getUseOfEquip()"], "Fixed commit": "d1e67538664d161e1e3c7ef0389ce2cec7e96973", "Url": "https://api.github.com/repos/bidnfix/agg", "Date": "2016-12-28T17:14:18Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mService.isConnected())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4971/buggy-version/app.src.main.java.com.morlunk.mumbleclient.channel.ChannelListAdapter.java", "BodyUseAPI": [], "Fixed commit": "82d9cdbebe21f7d09dfe4c0d19b09a068c5ec65e", "Url": "https://api.github.com/repos/Morlunk/Plumble", "Date": "2014-03-13T06:47:35Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.getParentFile().exists())) { crema.dao.db4o.DatabaseFileLocator.log.warn(\"parent directory for db file does not exist, creating now\"); file.getParentFile().mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5197/buggy-version/src.main.java.crema.dao.db4o.DatabaseFileLocator.java", "BodyUseAPI": ["java.io.File.mkdirs()", "java.io.File.getParentFile()"], "Fixed commit": "f26f4b076bda0b1dfd370fe1e56546bd19d228b9", "Url": "https://api.github.com/repos/jasonandersen/crema", "Date": "2013-12-26T17:30:41Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof javax.ws.rs.WebApplicationException) { throw ((javax.ws.rs.WebApplicationException) (e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6536/buggy-version/rest.src.main.java.org.ihtsdo.otf.mapping.rest.RootServiceRest.java", "BodyUseAPI": [], "Fixed commit": "0e6409ab02f1b7dbf1b4be7efd2524316f996b26", "Url": "https://api.github.com/repos/WestCoastInformatics/OTF-Mapping-Service", "Date": "2014-09-29T21:12:47Z"},
{"Line": "=>818", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["appeng.container.AEBaseContainer.getSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (s instanceof appeng.container.SlotPatternTerm) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3791/buggy-version/src.main.java.appeng.container.AEBaseContainer.java", "BodyUseAPI": [], "Fixed commit": "e51e3c7b1027f408e5ad8530cbcb4ab6fe12a39b", "Url": "https://api.github.com/repos/xsun2001/Applied-Energistics-2-Unofficial", "Date": "2017-08-14T11:49:11Z"},
{"Line": "=>762", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (declaredMethodName.startsWith(\"get\")) propertyName = declaredMethodName.substring(\"get\".length()); else if (declaredMethodName.startsWith(\"set\")) propertyName = declaredMethodName.substring(\"set\".length()); else if (declaredMethodName.startsWith(\"is\")) propertyName = declaredMethodName.substring(\"is\".length());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2956/buggy-version/src.main.java.ch.liquidmind.inflection.compiler.Pass2Listener.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int)"], "Fixed commit": "e3dc68ec8bc74e5e1e312508551acdbcd2065351", "Url": "https://api.github.com/repos/liquid-mind/inflection", "Date": "2015-10-23T14:35:59Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((check) > 1) { com.teambitcoin.coinwallet.models.User.getLoggedInUser().setCurrency(currencyNames.get(position)); android.widget.Toast.makeText(that, \"Updated currency!\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/575/buggy-version/CoinWallet.src.main.java.com.teambitcoin.coinwallet.EditAccount.java", "BodyUseAPI": [], "Fixed commit": "1fba5f84701a81f9d07df5cbff8c5e9163fd1bd2", "Url": "https://api.github.com/repos/cwallet/coinwallet", "Date": "2014-03-09T18:26:04Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((structOnTile) == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7282/buggy-version/src.Tile.java", "BodyUseAPI": [], "Fixed commit": "6150c02610864a175fc736751c8cc7af883da562", "Url": "https://api.github.com/repos/TylerBarkley/OOPCiv", "Date": "2017-02-06T16:50:45Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (params != null) { final int paramsSize = params.length; if (paramsSize > 0) { sbUrl.append(params[0].getName()).append(\"=\").append(params[0].getValue()); for (int i = 1; i < paramsSize; i++) { sbUrl.append(\"&\").append(params[i].getName()).append(\"=\").append(params[i].getValue()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4690/buggy-version/src.main.java.it.geosolutions.geoserver.rest.GeoServerRESTPublisher.java", "BodyUseAPI": ["java.lang.StringBuilder.append(params[0].getName())", "sbUrl.append(\"&\").append(params[i].getName()).append(\"=\").append(params[i].getValue())", "java.lang.StringBuilder.append(params[i].getName())", "sbUrl.append(params[0].getName()).append(\"=\").append(params[0].getValue())", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "params[0].getValue()", "params[i].getValue()", "params[0].getName()", "params[i].getName()"], "Fixed commit": "a73cf0759770857ea66c243c97b068c2fbd4146c", "Url": "https://api.github.com/repos/geosolutions-it/geoserver-manager", "Date": "2011-12-15T14:29:44Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (msg.hasField(com.opengamma.integration.marketdata.manipulator.dsl.VolatilitySurfaceSelectorFudgeBuilder.NAME_REGEX)) { java.lang.String nameRegex = deserializer.fieldValueToObject(java.lang.String.class, msg.getByName(com.opengamma.integration.marketdata.manipulator.dsl.VolatilitySurfaceSelectorFudgeBuilder.NAME_REGEX)); namePattern = java.util.regex.Pattern.compile(nameRegex); }else { namePattern = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/300/buggy-version/projects.OG-Integration.src.main.java.com.opengamma.integration.marketdata.manipulator.dsl.VolatilitySurfaceSelectorFudgeBuilder.java", "BodyUseAPI": ["org.fudgemsg.FudgeMsg.getByName(java.lang.String)", "org.fudgemsg.mapping.FudgeDeserializer.fieldValueToObject(java.lang.Class,msg.getByName(com.opengamma.integration.marketdata.manipulator.dsl.VolatilitySurfaceSelectorFudgeBuilder.NAME_REGEX))"], "Fixed commit": "1adc285e2f489fbef0042e8b9d60337aa0772bfc", "Url": "https://api.github.com/repos/OpenGamma/OG-Platform", "Date": "2013-06-19T14:11:26Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (days > 0L) { java.lang.StringBuilder message = new java.lang.StringBuilder(erki.xpeter.parsers.DagstuhlParser.MSG_STARTS[this.random.nextInt(erki.xpeter.parsers.DagstuhlParser.MSG_STARTS.length)]); message.append(days); message.append(erki.xpeter.parsers.DagstuhlParser.DAYS); message.append(erki.xpeter.parsers.DagstuhlParser.COMMENTS[this.random.nextInt(erki.xpeter.parsers.DagstuhlParser.COMMENTS.length)]); this.lastReminded = now; msg.respond(new erki.xpeter.msg.DelayedMessage(message.toString(), 1000)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5482/buggy-version/src.erki.xpeter.parsers.DagstuhlParser.java", "BodyUseAPI": ["java.lang.StringBuilder.append(long)"], "Fixed commit": "1fc4983a657ba6843c38c4e6126579c5877076d4", "Url": "https://api.github.com/repos/DZoom/xpeter", "Date": "2014-07-07T13:21:44Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(tiles.isPassable(goal.row, goal.col))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6297/buggy-version/wsTotal.TotalAnnihilationRoadRage.src.com.totalannihilationroadrage.OverworldPathfinding.java", "BodyUseAPI": [], "Fixed commit": "ab38f91d3df44feaba2af545fa99ebfba6b11037", "Url": "https://api.github.com/repos/bryanpope/TARR", "Date": "2014-07-04T19:44:00Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["server.Purchase.getItems()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((items == null) || (items.isEmpty())) { java.lang.System.err.println(\"temp server: there are no items to be iterated..\"); }else { java.lang.System.out.println(\"temp server: is empty check complete. there are items to be worked on\"); for (server.Item item : items) { server.dao.ItemDAO.reduceQuantity(item.getItem_id(), 1); server.dao.EmployeeDAO.increaseSales(item.getItem_price()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4657/buggy-version/src.server.RequestProcessor.java", "BodyUseAPI": [], "Fixed commit": "75164a4c59321de60deab3847d51222384aab5b9", "Url": "https://api.github.com/repos/mr-feek/POS", "Date": "2015-04-27T15:35:17Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sp) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8558/buggy-version/src.org.usfirst.frc.team95.robot.ArduPilotAthenaInputStream.java", "BodyUseAPI": [], "Fixed commit": "c9babc849bc472ba1f3dda882cad9ad1dd086584", "Url": "https://api.github.com/repos/first95/FRC2016", "Date": "2016-02-16T00:32:14Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputBBt) || ((xi) != null)) { outputs = new org.apache.hadoop.mapred.lib.MultipleOutputs(new org.apache.hadoop.mapred.JobConf(conf)); closeables.addFirst(new org.apache.mahout.common.IOUtils.MultipleOutputsCloseableAdapter(outputs)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4413/buggy-version/core.src.main.java.org.apache.mahout.math.hadoop.stochasticsvd.BtJob.java", "BodyUseAPI": [], "Fixed commit": "3fea9bd981043e268dd003d4c6c3943bb570c0f7", "Url": "https://api.github.com/repos/dlyubimov/mahout-commits", "Date": "2011-12-26T00:08:12Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (down.equals(up)) { down = StringThings.confuse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6320/buggy-version/wooT.java", "BodyUseAPI": [], "Fixed commit": "194aae2fb304e403e8d7c5b7bf878e18a4735af2", "Url": "https://api.github.com/repos/dariashifrina/kasha", "Date": "2017-01-20T02:21:39Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((left.equals(up)) || (left.equals(down))) { left = StringThings.confuse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6320/buggy-version/wooT.java", "BodyUseAPI": [], "Fixed commit": "194aae2fb304e403e8d7c5b7bf878e18a4735af2", "Url": "https://api.github.com/repos/dariashifrina/kasha", "Date": "2017-01-20T02:21:39Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((right.equals(up)) || (right.equals(left))) || (right.equals(down))) { right = StringThings.confuse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6320/buggy-version/wooT.java", "BodyUseAPI": [], "Fixed commit": "194aae2fb304e403e8d7c5b7bf878e18a4735af2", "Url": "https://api.github.com/repos/dariashifrina/kasha", "Date": "2017-01-20T02:21:39Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.index.OSimpleKeyIndexDefinition.field(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (collatesNames != null) { com.orientechnologies.orient.core.index.OCompositeCollate collates = new com.orientechnologies.orient.core.index.OCompositeCollate(this); for (java.lang.String collateName : collatesNames) collates.addCollate(com.orientechnologies.orient.core.sql.OSQLEngine.getCollate(collateName)); this.collate = collates; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1515/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.OSimpleKeyIndexDefinition.java", "BodyUseAPI": [], "Fixed commit": "d2ceca8f8179e816f2ac55e04dce375dc3ecb74d", "Url": "https://api.github.com/repos/micha-nerdlichter/orientdb", "Date": "2015-10-05T15:32:27Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.hoang.mobies.activities.MainActivity.flagNetworkSettings) == false) if ((snackbar) != null) snackbar.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1887/buggy-version/app.src.main.java.com.example.hoang.mobies.fragments.MoviesFragment.java", "BodyUseAPI": [], "Fixed commit": "d73c34cc31776c18af7a6eae85b9619ebf6d5406", "Url": "https://api.github.com/repos/yungwiche/Mobies", "Date": "2017-07-19T11:17:21Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (total < 0) return java.lang.Long.MAX_VALUE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3582/buggy-version/codehint-plugin.src.codehint.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "4aaadb79f70a3bb6045273fddf6f1ee248a0ceee", "Url": "https://api.github.com/repos/jgalenson/codehint", "Date": "2013-08-15T18:27:25Z"},
{"Line": "=>1139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (curMaxArgDepth > 0) return pruneManyArgCalls(allPossibleActuals, curDepth, (curMaxArgDepth - 1), method);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3582/buggy-version/codehint-plugin.src.codehint.exprgen.ExpressionGenerator.java", "BodyUseAPI": ["codehint.exprgen.ExpressionGenerator.pruneManyArgCalls(java.util.ArrayList<? extends java.util.ArrayList<? extends codehint.exprgen.TypedExpression>>,int,int,com.sun.jdi.Method)"], "Fixed commit": "4aaadb79f70a3bb6045273fddf6f1ee248a0ceee", "Url": "https://api.github.com/repos/jgalenson/codehint", "Date": "2013-08-15T18:27:25Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.statements().isEmpty()) { record(node); }else { for (java.lang.Object s : node.statements()) { record(((org.eclipse.jdt.core.dom.Statement) (s))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6447/buggy-version/rtrefactor.src.edu.washington.cs.rtrefactor.util.StatementCoverageVisitor.java", "BodyUseAPI": ["edu.washington.cs.rtrefactor.util.StatementCoverageVisitor.record(org.eclipse.jdt.core.dom.Block)", "org.eclipse.jdt.core.dom.Block.statements()"], "Fixed commit": "8d5c217357a570e4717fd09cc7e96bf040dbfb33", "Url": "https://api.github.com/repos/twschiller/rt-refactor-suggest", "Date": "2011-12-12T03:35:59Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.red5.server.net.rtmpt.BaseRTMPTConnection.log.isTraceEnabled()) { org.red5.server.net.rtmpt.BaseRTMPTConnection.log.trace(\"Current bytes read at decode: {}\", data.limit()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5594/buggy-version/src.main.java.org.red5.server.net.rtmpt.BaseRTMPTConnection.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String,data.limit())"], "Fixed commit": "498780c030e900e1c4d18b53ce2fc31d85f96c2d", "Url": "https://api.github.com/repos/Red5/red5-server-common", "Date": "2014-12-22T14:48:25Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.red5.server.net.rtmpt.BaseRTMPTConnection.log.isTraceEnabled()) { org.red5.server.net.rtmpt.BaseRTMPTConnection.log.trace(\"Clearing pending messages out: {}\", pendingOutMessages.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5594/buggy-version/src.main.java.org.red5.server.net.rtmpt.BaseRTMPTConnection.java", "BodyUseAPI": ["org.slf4j.Logger.trace(java.lang.String,int)"], "Fixed commit": "498780c030e900e1c4d18b53ce2fc31d85f96c2d", "Url": "https://api.github.com/repos/Red5/red5-server-common", "Date": "2014-12-22T14:48:25Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result == null) { result = controller.getString(R.string.error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7667/buggy-version/Handyboy.src.com.vallverk.handyboy.view.base.BaseListFragment.java", "BodyUseAPI": [], "Fixed commit": "0d45e1f9f2ae16d71d6b4aeda9289e71a73a6cee", "Url": "https://api.github.com/repos/voKrab/HandyBoy", "Date": "2015-01-30T14:20:09Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scopeEvents) != null) { return java.util.Arrays.copyOf(scopeEvents, scopeEvents.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7168/buggy-version/components.bpel.org.wso2.carbon.bpel.ui.src.main.java.org.wso2.carbon.bpel.ui.DeploymentDescriptorUpdater.java", "BodyUseAPI": [], "Fixed commit": "b37ab99a4d5c035ad0eba908e768d789fa9f978a", "Url": "https://api.github.com/repos/vinok88/carbon-business-process", "Date": "2017-01-31T04:54:53Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((offset.getNumerator()) > 0) { this.insertMultiNote(new logic.MultiNote(offset)); replaced = new logic.MultiNote(replaced.getDuration().minus(offset)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/366/buggy-version/logic.Editor.java", "BodyUseAPI": ["replaced.getDuration().minus(logic.Rational)", "logic.Editor.insertMultiNote(logic.MultiNote)"], "Fixed commit": "8ac9c1cc7683ba3b3a49ec85860e1258b2a27b51", "Url": "https://api.github.com/repos/CharlesYeh/MusicArranger", "Date": "2011-05-16T03:20:16Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.minecraft.client.Minecraft.getMinecraft().gameSettings.keyBindSneak.isPressed()) { if (net.minecraft.client.Minecraft.getMinecraft().gameSettings.keyBindAttack.isPressed()) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2731/buggy-version/[1.8]Attributes.src.main.java.net.ci010.attributesmod.handler.KeybindingHandler.java", "BodyUseAPI": ["net.minecraft.client.Minecraft.getMinecraft().gameSettings.keyBindAttack.isPressed()"], "Fixed commit": "bb06af4c14a4444545af1e4195599580a8fe1ac7", "Url": "https://api.github.com/repos/ci010/Attributes", "Date": "2015-06-27T07:26:20Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (!(grdarray == null)) { if ((grdarray.length) == 0) { javax.swing.JOptionPane.showMessageDialog(null, \"Could not get genomereleases!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4123/buggy-version/src.gui.sysadmin.SysadminController.java", "BodyUseAPI": [], "Fixed commit": "dfcf9c0d17b7dff3961b36d8d03f636246cce130", "Url": "https://api.github.com/repos/genomizer/genomizer-desktop", "Date": "2014-05-26T08:22:37Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.isEmpty()) { scriptWriter.newLine(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5759/buggy-version/wildfly-provisioning-plugin.src.main.java.org.jboss.provisioning.plugin.wildfly.ScriptCollector.java", "BodyUseAPI": [], "Fixed commit": "4cea7ed134bfc11cd3a0f3132d8a5c0293854853", "Url": "https://api.github.com/repos/aloubyansky/pm", "Date": "2017-02-27T18:16:37Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.geniem.rnble.ScanRecord.getManufacturerSpecificData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (manufacturerData != null) { advertisement.putString(\"manufacturerData\", java.util.Arrays.toString(manufacturerData)); }else { advertisement.putNull(\"manufacturerData\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7147/buggy-version/android.src.main.java.com.geniem.rnble.RNBLEModule.java", "BodyUseAPI": ["java.util.Arrays.toString(byte[])", "com.facebook.react.bridge.WritableMap.putString(java.lang.String,java.lang.String)"], "Fixed commit": "0f1ed1464acd1fc97b9b2d8b97060a46ec6dcd71", "Url": "https://api.github.com/repos/MPuhakka/react-native-ble", "Date": "2016-05-08T21:34:32Z"},
{"Line": "=>850", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!((root.getUserObject()) instanceof java.lang.String)) || ((t.getParent()) == null)) { javax.swing.tree.DefaultMutableTreeNode aTask = new javax.swing.tree.DefaultMutableTreeNode(t); root.add(aTask); aTask.add(new javax.swing.tree.DefaultMutableTreeNode((\"ID:\" + (t.getID())))); aTask.add(new javax.swing.tree.DefaultMutableTreeNode((\"Duration:\" + (t.getDuration())))); aTask.add(new javax.swing.tree.DefaultMutableTreeNode((\"Description:\" + (t.getDescription())))); aTask.add(new javax.swing.tree.DefaultMutableTreeNode((\"Complete:\" + (t.getPercentCompleted())))); if (!(t.getDeliverables().isEmpty())) { javax.swing.tree.DefaultMutableTreeNode Res = new javax.swing.tree.DefaultMutableTreeNode(\"Deliverables\"); aTask.add(Res); for (Entities.Deliverable d : t.getDeliverables()) { Res.add(new javax.swing.tree.DefaultMutableTreeNode(d.toString())); } } if (!(t.getRequiredResources().isEmpty())) { javax.swing.tree.DefaultMutableTreeNode Res = new javax.swing.tree.DefaultMutableTreeNode(\"Resources\"); aTask.add(Res); for (Entities.Resource r : t.getRequiredResources().values()) { Res.add(new javax.swing.tree.DefaultMutableTreeNode(r)); } } if (!(t.getPredecessors().isEmpty())) { javax.swing.tree.DefaultMutableTreeNode Pre = new javax.swing.tree.DefaultMutableTreeNode(\"Predecessors\"); aTask.add(Pre); for (Entities.Task task : t.getPredecessors().values()) { Pre.add(new javax.swing.tree.DefaultMutableTreeNode(task.getName())); } } if (!(t.getSuccessors().isEmpty())) { javax.swing.tree.DefaultMutableTreeNode Suc = new javax.swing.tree.DefaultMutableTreeNode(\"Successors\"); aTask.add(Suc); for (Entities.Task task : t.getSuccessors().values()) { Suc.add(new javax.swing.tree.DefaultMutableTreeNode(task.getName())); } } for (Entities.Task innerTask : t.getChildren().values()) { javax.swing.tree.DefaultMutableTreeNode newRoot = new javax.swing.tree.DefaultMutableTreeNode(innerTask); aTask.add(newRoot); newRoot.add(new javax.swing.tree.DefaultMutableTreeNode((\"ID:\" + (innerTask.getID())))); newRoot.add(new javax.swing.tree.DefaultMutableTreeNode((\"Duration:\" + (innerTask.getDuration())))); newRoot.add(new javax.swing.tree.DefaultMutableTreeNode((\"Description:\" + (innerTask.getDescription())))); newRoot.add(new javax.swing.tree.DefaultMutableTreeNode((\"Complete:\" + (innerTask.getPercentCompleted())))); if (!(innerTask.getDeliverables().isEmpty())) { javax.swing.tree.DefaultMutableTreeNode Res = new javax.swing.tree.DefaultMutableTreeNode(\"Deliverables\"); newRoot.add(Res); for (Entities.Deliverable d : innerTask.getDeliverables()) { Res.add(new javax.swing.tree.DefaultMutableTreeNode(d.toString())); } } if (!(innerTask.getRequiredResources().isEmpty())) { javax.swing.tree.DefaultMutableTreeNode Res = new javax.swing.tree.DefaultMutableTreeNode(\"Resources\"); newRoot.add(Res); for (Entities.Resource r : innerTask.getRequiredResources().values()) { Res.add(new javax.swing.tree.DefaultMutableTreeNode(r)); } } if (!(innerTask.getPredecessors().isEmpty())) { javax.swing.tree.DefaultMutableTreeNode PreC = new javax.swing.tree.DefaultMutableTreeNode(\"Predecessors\"); newRoot.add(PreC); for (Entities.Task task : innerTask.getPredecessors().values()) { PreC.add(new javax.swing.tree.DefaultMutableTreeNode(task.getName())); } } if (!(innerTask.getSuccessors().isEmpty())) { javax.swing.tree.DefaultMutableTreeNode SucC = new javax.swing.tree.DefaultMutableTreeNode(\"Successors\"); newRoot.add(SucC); for (Entities.Task task : innerTask.getSuccessors().values()) { SucC.add(new javax.swing.tree.DefaultMutableTreeNode(task.getName())); } } GUI.MainUI.helper(newRoot, innerTask.getChildren()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7174/buggy-version/src.GUI.MainUI.java", "BodyUseAPI": ["t.getSuccessors().isEmpty()", "Entities.Task.getDuration()", "Entities.Task.getDescription()", "Entities.Task.getDeliverables()", "javax.swing.tree.DefaultMutableTreeNode.add(javax.swing.tree.DefaultMutableTreeNode)", "javax.swing.tree.DefaultMutableTreeNode.add(javax.swing.tree.DefaultMutableTreeNode)", "Entities.Task.getSuccessors()", "Entities.Task.getDeliverables()", "Entities.Task.getPredecessors()", "javax.swing.tree.DefaultMutableTreeNode.add(javax.swing.tree.DefaultMutableTreeNode)", "Entities.Task.getID()", "t.getDeliverables().isEmpty()", "Entities.Task.getSuccessors()", "Entities.Task.getPercentCompleted()", "javax.swing.tree.DefaultMutableTreeNode.add(javax.swing.tree.DefaultMutableTreeNode)", "t.getRequiredResources().isEmpty()", "Entities.Task.getRequiredResources()", "t.getPredecessors().isEmpty()", "t.getChildren().values()", "t.getSuccessors().values()", "Entities.Task.getRequiredResources()", "javax.swing.tree.DefaultMutableTreeNode.add(javax.swing.tree.DefaultMutableTreeNode)", "t.getRequiredResources().values()", "Entities.Task.getPredecessors()", "Entities.Task.getChildren()", "t.getPredecessors().values()"], "Fixed commit": "bf691126eafaf7e3ccd0513b229b2800191a2979", "Url": "https://api.github.com/repos/GrayTeamCS251A/Silk", "Date": "2015-11-26T08:07:33Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getID()) != (t.getID())) model3.addElement(task);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7174/buggy-version/src.GUI.TaskUI.java", "BodyUseAPI": ["javax.swing.DefaultComboBoxModel.addElement(Entities.Task)"], "Fixed commit": "bf691126eafaf7e3ccd0513b229b2800191a2979", "Url": "https://api.github.com/repos/GrayTeamCS251A/Silk", "Date": "2015-11-26T08:07:33Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4597/buggy-version/app.src.main.java.andrewnguy.com.freefoodfinder.MapTab.java", "BodyUseAPI": [], "Fixed commit": "5c542a5c055a10767fc7c46eab34b6b197933d0e", "Url": "https://api.github.com/repos/anguy95/FreeFoodFinder", "Date": "2015-10-31T01:31:30Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.getPlayer()) != null) && (this.getPlayer().isOnline())) { try { if ((this.options) == null) { this.options = com.spleefleague.core.player.PlayerOptions.getDefault(); this.options.apply(this); } if ((this.collectibles) == null) this.collectibles = com.spleefleague.core.cosmetics.Collectibles.getDefault(); } finally { this.collectibles.apply(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7152/buggy-version/src.main.java.com.spleefleague.core.player.SLPlayer.java", "BodyUseAPI": [], "Fixed commit": "d1df2e1a757131e49e8f74361c70e06bc9a13f4d", "Url": "https://api.github.com/repos/SpleefLeague/Core", "Date": "2017-02-07T17:26:10Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (argIndex == (-1)) { addIssue(mit, \"Arguments are numbered starting from 1.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3229/buggy-version/java-checks.src.main.java.org.sonar.java.checks.PrintfCheck.java", "BodyUseAPI": [], "Fixed commit": "5bf99524ddb6c859a10c103e8f1a1519bd870b17", "Url": "https://api.github.com/repos/renewolfert/sonar-java", "Date": "2015-06-08T14:07:22Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fringe.contains(n))) { fringe.add(n); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2580/buggy-version/src.BreadthFirstTreeSearch.java", "BodyUseAPI": ["java.util.LinkedList<Node>.add(Node)"], "Fixed commit": "636e49a7bc26f40c2ee9df727d76e7bd82d2afcd", "Url": "https://api.github.com/repos/binel/2DGridSearch", "Date": "2017-09-26T01:03:13Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!valid) { context.disableDefaultConstraintViolation(); context.buildConstraintViolationWithTemplate(errorMessage).addNode(errorKey).addConstraintViolation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4740/buggy-version/src.main.java.ua.com.itinterview.validation.FieldsEqualsValidator.java", "BodyUseAPI": [], "Fixed commit": "af80d560669169bab74648fcac8824c806a54123", "Url": "https://api.github.com/repos/interview-com-ua/website", "Date": "2013-02-10T16:26:06Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(Screen.getText().toString().equals(\"\"))) { MemoryNumber += java.lang.Double.parseDouble(Screen.getText().toString()); Screen.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8701/buggy-version/app.src.main.java.com.example.faisal.assignmnet2.MainActivity.java", "BodyUseAPI": ["Screen.getText().toString()", "java.lang.Double.parseDouble(Screen.getText().toString())", "android.widget.TextView.setText(java.lang.String)", "android.widget.TextView.getText()"], "Fixed commit": "45d4a727eb9e4894a81cbd1f5cf802483e9f7cb0", "Url": "https://api.github.com/repos/FaisalShehada/Assignment2", "Date": "2016-03-24T16:55:50Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(android.text.TextUtils.isEmpty(message))) { com.classic.core.log.Logger.d(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/722/buggy-version/app.src.main.java.com.classic.car.di.modules.DbModule.java", "BodyUseAPI": ["com.classic.core.log.Logger.d(java.lang.String)"], "Fixed commit": "4e4587fec16c7d7d9297e6afb587ca23934266d9", "Url": "https://api.github.com/repos/qyxxjd/CarAssistant", "Date": "2016-09-12T10:19:48Z"},
{"Line": "=>549", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((regions.getRegions().size()) > 1) && (region.getId().equalsIgnoreCase(\"spawn\"))) { region = ((com.sk89q.worldguard.protection.regions.ProtectedRegion) (regions.getRegions().toArray()[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8941/buggy-version/src.com.m0pt0pmatt.LandPurchasing.LandPurchasing.java", "BodyUseAPI": ["com.sk89q.worldguard.protection.ApplicableRegionSet.getRegions()", "regions.getRegions().toArray()"], "Fixed commit": "08cc08dd115b9858273e7ecf0c50257c68d7257a", "Url": "https://api.github.com/repos/realmattysweeps/LandPurchasing", "Date": "2015-06-01T01:30:12Z"},
{"Line": "=>840", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.geotoolkit.nio.IOUtilities.isFileSystemSupported(input)) { final org.geotoolkit.image.io.metadata.SpatialMetadata metadata = createMetadataFromWorldFiles(imageIndex); if (metadata != null) { return metadata; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8174/buggy-version/modules.storage.geotk-coverage-netcdf.src.main.java.org.geotoolkit.image.io.plugin.NetcdfImageReader.java", "BodyUseAPI": [], "Fixed commit": "964ce6a8669cef78de378ec822c358183d200400", "Url": "https://api.github.com/repos/Geomatys/geotoolkit", "Date": "2017-01-18T16:33:26Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (strUid.isEmpty()) strUid = utilities.LegacyCorrectionUtilities.getBodyUID(strBody);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5872/buggy-version/src.contact.Contact.java", "BodyUseAPI": [], "Fixed commit": "24b19555fdf2b7d266c0dc05f648221f340bf94c", "Url": "https://api.github.com/repos/somedevelopment/CardDAVSyncOutlook", "Date": "2014-07-05T13:14:16Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (MergeSort.DO_COLLECT_ARRAY_DATA) { org.marlin.pisces.stats.ArraySortDataCollection.save(\"/tmp/ArraySortDataCollection.ser\", adc); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4788/buggy-version/src.main.java.org.marlin.pisces.RendererStats.java", "BodyUseAPI": [], "Fixed commit": "139e43ed34965ccbb017fc3106c3d48a26660c4e", "Url": "https://api.github.com/repos/bourgesl/marlin-renderer", "Date": "2015-11-26T13:31:06Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (SearchIndex.names.PROPERTIES_STATUS.name().equals(sortCriterion.getIndex().getName())) { return (\". ?s <\" + (sortCriterion.getIndex().getNamespace())) + \"> ?sort0\"; }else if (SearchIndex.names.CONTAINER_METADATA_TITLE.name().equals(sortCriterion.getIndex().getName())) { return (\"?s <http://imeji.org/terms/container/metadata> ?cmd. ?cmd <\" + (sortCriterion.getIndex().getNamespace())) + \"> ?sort0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3210/buggy-version/imeji_presentation.src.main.java.de.mpg.imeji.logic.search.query.SimpleQueryFactory.java", "BodyUseAPI": ["sortCriterion.getIndex().getNamespace()", "de.mpg.imeji.logic.search.vo.SortCriterion.getIndex()", "de.mpg.imeji.logic.search.vo.SortCriterion.getIndex()", "SearchIndex.names.CONTAINER_METADATA_TITLE.name().equals(sortCriterion.getIndex().getName())", "sortCriterion.getIndex().getNamespace()", "sortCriterion.getIndex().getName()", "de.mpg.imeji.logic.search.vo.SortCriterion.getIndex()"], "Fixed commit": "722bbaf27f38e66e53a8826dd8c35d055231eba8", "Url": "https://api.github.com/repos/masao/imeji", "Date": "2012-09-24T12:10:35Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mLastExpandedPosition) != (-1)) && (groupPosition != (mLastExpandedPosition))) { mHistoryExpandableListView.collapseGroup(mLastExpandedPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8699/buggy-version/app.src.main.java.com.rescribe.ui.activities.SingleVisitDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "338975350084f1644db8ff7523a0955b940f68bd", "Url": "https://api.github.com/repos/sandeepbahalkar123/myrescribe_repo", "Date": "2017-12-07T07:53:11Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerId == null) || (playerId.isEmpty())) { logger.warn(\"The parameter playerId must no be empty\"); throw new de.slackspace.rmanager.exception.InvalidOperationException(org.springframework.http.HttpStatus.BAD_REQUEST, \"BAD_REQUEST\", \"The playerId must be set\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1743/buggy-version/src.main.java.de.slackspace.rmanager.web.MatchResource.java", "BodyUseAPI": [], "Fixed commit": "dac3f7b605db9cdc88791e16a9325efbcb76e8dd", "Url": "https://api.github.com/repos/cternes/R-Manager", "Date": "2015-04-11T06:28:33Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((track) == null) { return -2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4609/buggy-version/app.src.main.java.com.limelight.binding.audio.AndroidAudioRenderer.java", "BodyUseAPI": [], "Fixed commit": "0a0be19b69c8131615b3d0074c1533e9ebbe82b0", "Url": "https://api.github.com/repos/moonlight-stream/moonlight-android", "Date": "2017-08-22T07:16:35Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (endDate != null) { javax.persistence.criteria.Expression expression = root.get(\"createdOn\"); if (startDate == null) { cq.where(cb.lessThanOrEqualTo(expression, endDate.getTime())); }else { cq.where(cb.and(cq.getRestriction(), cb.lessThanOrEqualTo(expression, endDate.getTime()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4444/buggy-version/Fuse.qlack2-fuse-auditing.qlack2-fuse-auditing-impl.src.main.java.com.eurodyn.qlack2.fuse.auditing.impl.AuditLoggingServiceImpl.java", "BodyUseAPI": ["javax.persistence.criteria.CriteriaBuilder.and(cq.getRestriction(),cb.lessThanOrEqualTo(expression, endDate.getTime()))", "javax.persistence.criteria.CriteriaBuilder.lessThanOrEqualTo(javax.persistence.criteria.Expression,long)", "javax.persistence.criteria.CriteriaBuilder.lessThanOrEqualTo(javax.persistence.criteria.Expression,long)", "javax.persistence.criteria.CriteriaQuery<T>.where(cb.and(cq.getRestriction(), cb.lessThanOrEqualTo(expression, endDate.getTime())))", "java.util.Date.getTime()", "java.util.Date.getTime()", "javax.persistence.criteria.CriteriaQuery<T>.where(cb.lessThanOrEqualTo(expression, endDate.getTime()))"], "Fixed commit": "71fafc21c890be953ee622d4c219e14335509950", "Url": "https://api.github.com/repos/eurodyn/Qlack2", "Date": "2017-05-12T13:37:32Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (columnNameToFieldMap != null) { columnNameToFieldMap.put(((com.impetus.kundera.metadata.model.attributes.AbstractAttribute) (attribute)).getJPAColumnName(), ((java.lang.reflect.Field) (attribute.getJavaMember()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1167/buggy-version/kundera-core.src.main.java.com.impetus.kundera.metadata.MetadataUtils.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.reflect.Field>.put(((com.impetus.kundera.metadata.model.attributes.AbstractAttribute) (attribute)).getJPAColumnName(),((java.lang.reflect.Field) (attribute.getJavaMember())))"], "Fixed commit": "b7896c00fd5b9073a22949c234329476b2575646", "Url": "https://api.github.com/repos/sonatype/Kundera", "Date": "2013-06-30T18:56:21Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.knowwe.core.compile.Compilers.getCompilerManager(Environment.DEFAULT_WEB)", "wikiContext.getRealPage().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (compilerManager.isCompiling(title)) { compilerManager.awaitTermination(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2034/buggy-version/KnowWE-Essentials.KnowWE-Plugin-JSPWiki-Connector.src.main.java.de.knowwe.jspwiki.KnowWEPlugin.java", "BodyUseAPI": ["de.knowwe.core.compile.CompilerManager.awaitTermination()"], "Fixed commit": "08b795a0904a8b6d6ed70ca33ef05ddd42e59ad5", "Url": "https://api.github.com/repos/denkbares/d3web-KnowWE", "Date": "2016-10-04T08:57:15Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["item.select(\"span[class*=\\\"yt-badge-live\\\"]\").first()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bla == null) { if ((item.select(\"span[class*=\\\"video-time\\\"]\").first()) == null) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2755/buggy-version/app.src.main.java.org.schabi.newpipe.extractor.services.youtube.YoutubeSearchEngine.java", "BodyUseAPI": [], "Fixed commit": "4058ec2ee9359660241b676d5b98a2e3c7f3bc40", "Url": "https://api.github.com/repos/TeamNewPipe/NewPipe", "Date": "2016-03-11T14:43:50Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((image) != null) { pers.setBild(((pers.getID()) + (saveImage(pers.getID())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5432/buggy-version/JH-DB-RB-lebenslauf-app.src.ch.jh_bd_rb_lebenslauf_app.gui.BildActivity.java", "BodyUseAPI": [], "Fixed commit": "202e4ea1405acbdc50171da029e3638824db3cea", "Url": "https://api.github.com/repos/ESALebenslauf-App/JH-DB-RB-lebenslauf-app", "Date": "2014-06-18T14:52:29Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requestCode == 1) && (resultCode == (RESULT_OK))) { image = ((android.graphics.Bitmap) (data.getExtras().get(\"data\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5432/buggy-version/JH-DB-RB-lebenslauf-app.src.ch.jh_bd_rb_lebenslauf_app.gui.BildActivity.java", "BodyUseAPI": [], "Fixed commit": "202e4ea1405acbdc50171da029e3638824db3cea", "Url": "https://api.github.com/repos/ESALebenslauf-App/JH-DB-RB-lebenslauf-app", "Date": "2014-06-18T14:52:29Z"},
{"Line": "=>7", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 2) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7730/buggy-version/src.main.java.Prime.java", "BodyUseAPI": [], "Fixed commit": "0aaa7c7c16c74af0c6da4b6c53bcfa6157c109d1", "Url": "https://api.github.com/repos/s-koizumi/demo-primenumber", "Date": "2017-11-08T05:33:24Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((table.getSelectedRow()) == (-1)) { javax.swing.JOptionPane.showMessageDialog(null, \"Vozilo nije izabrano\", \"Info\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }else { psc.dodajNaServis(date, psc.dajIDVozila(data1.get(table.getSelectedRow()).get(0))); frmPrijavaServisa.dispose(); vozniPark.View.EvidencijaServisa servis = new vozniPark.View.EvidencijaServisa(); servis.main(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6986/buggy-version/vozniPark.src.main.java.vozniPark.View.EvidencijaServisa.java", "BodyUseAPI": ["java.util.Vector<java.lang.String>.get(int)", "vozniPark.Controller.PregledServisaController.dodajNaServis(java.util.Date,psc.dajIDVozila(data1.get(table.getSelectedRow()).get(0)))", "vozniPark.Controller.PregledServisaController.dajIDVozila(java.lang.String)", "java.util.Vector<java.util.Vector<java.lang.String>>.get(int)", "javax.swing.JTable.getSelectedRow()"], "Fixed commit": "ebc161170276aa8ea4cf08dda73fc982af20fad1", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim7", "Date": "2016-05-21T10:13:11Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line.indexOf(\"].\")) > 0) { java.lang.System.err.println((\"Wrong format for description in line \" + lineN)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/945/buggy-version/src.main.java.org.cacert.policy.PolicyParser.java", "BodyUseAPI": [], "Fixed commit": "e22795b8673848e3f9a3193e28a5b9960f87f3db", "Url": "https://api.github.com/repos/yellowant/cacert-policy-parser", "Date": "2016-02-14T08:08:19Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { CheckWriteSettingsPermission(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1171/buggy-version/app.src.main.java.fi.suomaafrontieroy.aflashlight.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "29b404a06e5c12820cf8dc50b5bc71aaf381829d", "Url": "https://api.github.com/repos/Lasicaine/AFlashlight", "Date": "2017-10-16T19:44:32Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totalWeight == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3823/buggy-version/rpc.src.main.java.io.datakernel.rpc.client.sender.RpcStrategyRandomSampling.java", "BodyUseAPI": [], "Fixed commit": "081234f838579a43343c0177d58fb7643f72c7f6", "Url": "https://api.github.com/repos/softindex/datakernel", "Date": "2016-04-26T15:31:47Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getView()) != null) { if (((contentItem != null) && ((contentItem.getLayout()) != null)) && ((contentItem.getElements()) != null)) { listedCellContentDataList = checkTypeAndCalculateCelListedContent(contentItem); if ((listedCellContentDataList.size()) != 0) { getView().setData(listedCellContentDataList, contentItem.getLayout().getType()); getView().showEmptyView(false); getView().showErrorView(false); }else { getView().showEmptyView(true); } }else { getView().showEmptyView(true); } getView().showProgressView(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5809/buggy-version/ocmsdk.src.main.java.com.gigigo.orchextra.core.controller.model.grid.ContentViewPresenter.java", "BodyUseAPI": [], "Fixed commit": "e40fabb07751fd3788586a55643e4e0d283042c2", "Url": "https://api.github.com/repos/Orchextra/orchextra-content-android-sdk", "Date": "2017-07-14T06:15:50Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (driver.getAccessType().equals(DbAccessType.SUB_SERVICE)) { java.sql.Connection con = null; if (((dbAccessType) != (org.simplity.kernel.db.DbAccessType.NONE)) && ((dbAccessType) != (org.simplity.kernel.db.DbAccessType.SUB_SERVICE))) { con = org.simplity.kernel.db.DbDriver.getConnection(dbAccessType, schemaName); } driver = new org.simplity.kernel.db.DbDriver(con, dbAccessType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3941/buggy-version/simplity.kernel.src.main.java.org.simplity.tp.Service.java", "BodyUseAPI": [], "Fixed commit": "11b0ace78a73d862e527f2058d9d6ac9b01984fe", "Url": "https://api.github.com/repos/simplity/simplity", "Date": "2017-03-22T12:28:37Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.wuhulala.auth.JwtManager.getJwt(java.lang.String)", "java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(jwtValue.equals(token))) { throw new io.jsonwebtoken.SignatureException(\"Invalid token\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/9204/buggy-version/src.main.java.com.wuhulala.filter.JwtFilter.java", "BodyUseAPI": [], "Fixed commit": "73116844303f40b8fffdf6223743c1f61bfff242", "Url": "https://api.github.com/repos/wuhulala/qa-api", "Date": "2017-06-04T07:12:20Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((perPitch) > 90) { perPitch -= 180; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2815/buggy-version/src.com.example.robocontrol.MyoControlActivity.java", "BodyUseAPI": [], "Fixed commit": "ff99e3d3f4bc8f13a3f0378d1b2f04cf6da5d797", "Url": "https://api.github.com/repos/Xeratec/RoboControl", "Date": "2015-04-03T12:50:35Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((perYaw) > 180) { perYaw -= 360; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2815/buggy-version/src.com.example.robocontrol.MyoControlActivity.java", "BodyUseAPI": [], "Fixed commit": "ff99e3d3f4bc8f13a3f0378d1b2f04cf6da5d797", "Url": "https://api.github.com/repos/Xeratec/RoboControl", "Date": "2015-04-03T12:50:35Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((perRoll) > 180) { perRoll -= 360; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2815/buggy-version/src.com.example.robocontrol.MyoControlActivity.java", "BodyUseAPI": [], "Fixed commit": "ff99e3d3f4bc8f13a3f0378d1b2f04cf6da5d797", "Url": "https://api.github.com/repos/Xeratec/RoboControl", "Date": "2015-04-03T12:50:35Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (namePiece.identifier.contains(\"IAM\")) { namePiece = new com.google.api.codegen.util.Name.NamePiece(namePiece.identifier.replace(\"IAM\", \"Iam\"), namePiece.caseFormat); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1911/buggy-version/src.main.java.com.google.api.codegen.util.Name.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "ea7d6fed8277769ce351a917340cf67fa9872768", "Url": "https://api.github.com/repos/landrito/toolkit", "Date": "2016-09-19T04:29:07Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.rwth.i9.palm.datasetcollect.service.PublicationCollectionHelper.getDocumentWithJsoup(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (document.baseUri().contains(\"dl.acm.org/\")) { publicationDetailMaps.put(\"abstract\", document.text()); }else { org.jsoup.select.Elements elements = document.body().select(\"*\"); org.jsoup.nodes.Element elementOfInterest = null; java.lang.String elementOfInterestType = null; for (org.jsoup.nodes.Element element : elements) { java.lang.String elementText = element.text().toLowerCase(); if ((elementText.length()) < 10) { if (elementText.contains(\"keyword\")) { elementOfInterest = element; elementOfInterestType = \"keyword\"; break; } if ((elementText.contains(\"abstract\")) || (elementText.contains(\"summary\"))) { elementOfInterest = element; elementOfInterestType = \"abstract\"; break; } } } if (elementOfInterest == null) return java.util.Collections.emptyMap(); int numberOfCheckedSiblings = 8; int elementLevel = 0; boolean keywordFound = false; boolean abstractFound = false; for (int i = 0; i < numberOfCheckedSiblings; i++) { java.lang.String elementText = \"\"; if ((elementOfInterest.nextElementSibling()) != null) elementOfInterest = elementOfInterest.nextElementSibling(); else { while ((elementOfInterest.parent()) != null) { if (elementLevel > 0) { for (org.jsoup.nodes.Node child : elementOfInterest.childNodes()) if (child instanceof org.jsoup.nodes.TextNode) if ((((org.jsoup.nodes.TextNode) (child)).text().length()) > 200) { elementText = ((org.jsoup.nodes.TextNode) (child)).text(); } } if ((elementOfInterest.nextElementSibling()) == null) { elementOfInterest = elementOfInterest.parent(); elementLevel++; }else { elementOfInterest = elementOfInterest.nextElementSibling(); break; } } while (((elementOfInterest.childNodes()) != null) && (elementLevel > 0)) { try { elementOfInterest = elementOfInterest.child(0); } catch (java.lang.Exception e) { break; } elementLevel--; } } if (elementText.equals(\"\")) elementText = elementOfInterest.text(); if ((elementOfInterestType.equals(\"keyword\")) && (!keywordFound)) { if ((elementText.length()) > 8) { if ((publicationDetailMaps.get(\"keyword\")) != null) publicationDetailMaps.put(\"keyword\", (((publicationDetailMaps.get(\"keyword\")) + \", \") + elementText)); else publicationDetailMaps.put(\"keyword\", elementText); if (((elementOfInterest.nextElementSibling()) == null) || ((elementText.length()) > 40)) keywordFound = true; }else { if (elementText.toLowerCase().contains(\"abstract\")) elementOfInterestType = \"abstract\"; else if (elementText.toLowerCase().equals(\"null\")) break; } }else if ((elementOfInterestType.equals(\"abstract\")) && (!abstractFound)) { if ((elementText.length()) > 100) { publicationDetailMaps.put(\"abstract\", elementText); abstractFound = true; }else { if (elementText.toLowerCase().contains(\"keyword\")) elementOfInterestType = \"keyword\"; } }else if ((elementOfInterestType.equals(\"keyword\")) && keywordFound) { if ((elementText.length()) < 20) if (elementText.toLowerCase().contains(\"abstract\")) elementOfInterestType = \"abstract\"; }else if ((elementOfInterestType.equals(\"abstract\")) && abstractFound) { if ((elementText.length()) < 20) if ((elementText.toLowerCase().contains(\"keyword\")) || (elementText.toLowerCase().contains(\"index terms\"))) elementOfInterestType = \"keyword\"; } if (keywordFound && abstractFound) break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8439/buggy-version/src.main.java.de.rwth.i9.palm.datasetcollect.service.HtmlPublicationCollection.java", "BodyUseAPI": ["org.jsoup.nodes.Document.text()", "org.jsoup.nodes.Document.body()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,document.text())", "document.body().select(java.lang.String)"], "Fixed commit": "3040277ad1dacf121f117a1db77dc279df8c782d", "Url": "https://api.github.com/repos/palm-toolkit/palm-core", "Date": "2015-10-15T16:24:34Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.contains(\"dl.acm.org/\")) url = url.replace(\"citation.cfm\", \"tab_abstract.cfm\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8439/buggy-version/src.main.java.de.rwth.i9.palm.datasetcollect.service.HtmlPublicationCollection.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "3040277ad1dacf121f117a1db77dc279df8c782d", "Url": "https://api.github.com/repos/palm-toolkit/palm-core", "Date": "2015-10-15T16:24:34Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((current) <= 0) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3255/buggy-version/src.com.kelsonprime.oregontrail.gui.TravelScreen.java", "BodyUseAPI": [], "Fixed commit": "73d858f090de8726a2d8e15beccc2d7050b992df", "Url": "https://api.github.com/repos/kurtisnelson/OregonTrail", "Date": "2011-11-13T19:10:44Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (biome == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3326/buggy-version/src.main.java.rtg.event.EventManagerRTG.java", "BodyUseAPI": [], "Fixed commit": "1c884861ce16e10296541163dc4b03f7bb545900", "Url": "https://api.github.com/repos/srs-bsns/Realistic-Terrain-Generation", "Date": "2016-04-13T22:39:25Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (activePage == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2943/buggy-version/main.plugins.org.talend.commons.ui.src.main.java.org.talend.commons.ui.utils.CheatSheetUtils.java", "BodyUseAPI": [], "Fixed commit": "95ada948ac6888f48d6b548b8cece7dc25cfcacb", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-01-26T06:59:55Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["patientMain.MapController.returnOriginalFloor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (startfloor == 0) { floor_ChoiceBox.getSelectionModel().select(7); }else if (startfloor > 7) { floor_ChoiceBox.getSelectionModel().select(startfloor); }else { floor_ChoiceBox.getSelectionModel().select((startfloor - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2568/buggy-version/src.main.java.patientMain.patientMainController.java", "BodyUseAPI": ["floor_ChoiceBox.getSelectionModel().select(int)", "floor_ChoiceBox.getSelectionModel().select(int)"], "Fixed commit": "236806c4b6cf9893c4ec846bafd6374a9ef11a54", "Url": "https://api.github.com/repos/gftabor/Soft-Eng", "Date": "2017-04-21T13:52:07Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ipServer) != null) callback.onNetworkFound();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8148/buggy-version/android.app.src.main.java.controller.communication.wifi.Discovery.java", "BodyUseAPI": [], "Fixed commit": "400e67137942ff593f404ff6a3f5e67057e3ee12", "Url": "https://api.github.com/repos/cyprienruffino/MiniRemote", "Date": "2016-01-02T12:42:20Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (slot != slotNum) { if (((slotNum >= (entity.SLOT_INVENTORY_START)) && ((entity.SLOT_INVENTORY_START) != (entity.SLOT_INVENTORY_END))) && ((entity.SLOT_INVENTORY_START) != (-1))) { if (!(this.mergeItemStack(stackInSlot, entity.SLOT_INVENTORY_START, ((entity.SLOT_INVENTORY_END) + 1), false))) { return null; } foundSlot = true; break; }else if (((theTargetSlot.isItemValid(stackInSlot)) && ((theTargetSlot.getSlotStackLimit()) > 1)) && ((!(theTargetSlot.getHasStack())) || ((theTargetSlot.getStack().stackSize) < (theTargetSlot.getSlotStackLimit())))) { if (!(this.mergeItemStack(stackInSlot, slotNum, (slotNum + 1), false))) { return null; } foundSlot = true; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6228/buggy-version/src.main.java.com.vanhal.progressiveautomation.gui.container.BaseContainer.java", "BodyUseAPI": ["com.vanhal.progressiveautomation.gui.container.BaseContainer.mergeItemStack(net.minecraft.item.ItemStack,int,int,boolean)"], "Fixed commit": "d693b996726881c0f1c418663be1b0f580e4e564", "Url": "https://api.github.com/repos/Vanhal/ProgressiveAutomation", "Date": "2015-04-10T10:59:51Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDragging) { isDragging = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/9177/buggy-version/library.src.main.java.com.mx.dxinl.library.TileWall.java", "BodyUseAPI": [], "Fixed commit": "ca19f597a686ae2fac83f46fe8082e5e65287641", "Url": "https://api.github.com/repos/dxinl/TileWall", "Date": "2016-10-14T09:46:45Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(listeners.contains(listener))) { listeners.add(listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3510/buggy-version/src.main.java.org.rythmengine.spring.web.SessionManager.java", "BodyUseAPI": ["org.rythmengine.spring.web.SessionManager.add(org.rythmengine.spring.web.SessionManager.Listener)"], "Fixed commit": "53e3fd4b29da7802c003d1f61043758efa014a03", "Url": "https://api.github.com/repos/greenlaw110/spring-rythm", "Date": "2014-02-26T23:48:08Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(col.isPrimaryKey())) updateBuffer.append(\",\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4487/buggy-version/src.main.java.com.duggan.workflow.server.dao.CatalogDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "185fc0d34fe5765c8178833446951950c49c745a", "Url": "https://api.github.com/repos/duggankimani/WIRA", "Date": "2016-03-08T07:49:19Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastEntry.equals(\"E\")) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1443/buggy-version/src.main.java.pt.uc.dei.aor.paj.MathHelper.java", "BodyUseAPI": [], "Fixed commit": "9f56ada52d4d7fe0009a4c32d840081f83003b34", "Url": "https://api.github.com/repos/kwakiutlCS/AjaxCalculator", "Date": "2015-05-12T09:17:56Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((phase) == 2) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1443/buggy-version/src.main.java.pt.uc.dei.aor.paj.Screen.java", "BodyUseAPI": [], "Fixed commit": "9f56ada52d4d7fe0009a4c32d840081f83003b34", "Url": "https://api.github.com/repos/kwakiutlCS/AjaxCalculator", "Date": "2015-05-12T09:17:56Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (symbols.containsKey(key)) { retval.append(symbols.getString(key)); }else if (symbols.containsLiteral(key)) { retval.append(symbols.getString(key)); }else { retval.append(coyote.commons.template.Template.OPEN); retval.append(coyote.commons.template.Template.VAR); retval.append(key); retval.append(coyote.commons.template.Template.CLOSE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8476/buggy-version/Loader.src.main.java.coyote.commons.template.Template.java", "BodyUseAPI": ["coyote.commons.template.SymbolTable.getString(java.lang.String)", "coyote.commons.template.SymbolTable.getString(java.lang.String)", "java.lang.StringBuffer.append(java.lang.String)", "java.lang.StringBuffer.append(symbols.getString(key))", "java.lang.StringBuffer.append(symbols.getString(key))", "coyote.commons.template.SymbolTable.containsLiteral(java.lang.String)"], "Fixed commit": "969bc3e347d62f26cb8f6f7a632025416c2fb925", "Url": "https://api.github.com/repos/sdcote/coyote", "Date": "2017-07-10T02:53:05Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ticksExisted) - (lastSearch)) >= 40) { lastSearch = ticksExisted; java.lang.System.out.println(\"Searched.\"); colonies.anglewyrm.src.PathNavigator nav = pathToBlock(minerBlockID); if (nav == null) return; if ((nav.getLength()) < 1.5) { if ((!(hasPickaxe)) && (nav.hasLocation())) { getPickaxeFromChest(nav.getEndX(), nav.getEndY(), nav.getEndZ()); } }else { navigateToBlock(nav); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8827/buggy-version/anglewyrm.src.EntityMiner.java", "BodyUseAPI": [], "Fixed commit": "7d8f942a8f0407102c5fee3ea7ee7360ff9f2331", "Url": "https://api.github.com/repos/AngleWyrm/Colonies", "Date": "2012-12-12T23:10:57Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((endLocation) != null) { locations.add(endLocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2918/buggy-version/src.main.java.net.nikr.eve.jeveasset.data.api.my.MyContract.java", "BodyUseAPI": [], "Fixed commit": "32078ffa7ffc94e381368920f5af5b109a1aa8ff", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-10-25T12:00:55Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startLocation) != null) { locations.add(startLocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2918/buggy-version/src.main.java.net.nikr.eve.jeveasset.data.api.my.MyContract.java", "BodyUseAPI": [], "Fixed commit": "32078ffa7ffc94e381368920f5af5b109a1aa8ff", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-10-25T12:00:55Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((contractItem.getContract().getStartLocationID()) != null) { locationId = contractItem.getContract().getStartLocationID(); }else { locationId = 0L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2918/buggy-version/src.main.java.net.nikr.eve.jeveasset.data.api.raw.RawAsset.java", "BodyUseAPI": [], "Fixed commit": "32078ffa7ffc94e381368920f5af5b109a1aa8ff", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2017-10-25T12:00:55Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (socket.getSocketHint().getView().equals(SocketHint.View.NONE)) { return \"null\" + value; }else if (value.contains(\"Optional[\")) { return value.substring(((value.indexOf(\"[\")) + 1), value.lastIndexOf(\"]\")); }else { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5869/buggy-version/ui.src.main.java.edu.wpi.grip.ui.codeGeneration.TemplateMethods.java", "BodyUseAPI": [], "Fixed commit": "3e1a33d99aaadb33ade55679e87bd82011b708fc", "Url": "https://api.github.com/repos/osulacam/GRIP", "Date": "2016-05-27T19:48:38Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < 0) { return 0.0; }else { return java.lang.Double.parseDouble(this.values[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4227/buggy-version/app.src.main.java.com.music.cornell.music.Place.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "638d2cac35157b76dda34c36a2aac46051fdbf29", "Url": "https://api.github.com/repos/spdrucker/CAES-App", "Date": "2016-11-23T04:53:48Z"},
{"Line": "=>1079", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.getDocument(javassist.util.proxy.Proxy)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((iRecord.getIdentity().isValid()) && (iRecord.getIdentity().isPersistent())) { com.orientechnologies.orient.core.record.ORecord txRecord = db.getTransaction().getRecord(iRecord.getIdentity()); if (txRecord != null) { ((com.orientechnologies.orient.object.enhancement.OObjectProxyMethodHandler) (((javassist.util.proxy.ProxyObject) (iProxiedPojo)).getHandler())).setDoc(((com.orientechnologies.orient.core.record.impl.ODocument) (txRecord))); return ((T) (iProxiedPojo)); }else { iRecord.reload(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4100/buggy-version/object.src.main.java.com.orientechnologies.orient.object.enhancement.OObjectEntitySerializer.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.reload()", "db.getTransaction().getRecord(iRecord.getIdentity())", "com.orientechnologies.orient.core.record.impl.ODocument.getIdentity()"], "Fixed commit": "a5f4ac5a8a7a44bfded40c8d4661c2bc2697fb5b", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-04-27T05:45:10Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.util.Objects.equals(p1.getText().toString(), \"\")) { p1.setError(\"Enter Player 1 Name\"); }else if (java.util.Objects.equals(p2.getText().toString(), \"\")) { p2.setError(\"Enter Player 2 Name\"); }else if (java.util.Objects.equals(p1.getText().toString(), p2.getText().toString())) { android.widget.Toast.makeText(this, \"Enter different names\", Toast.LENGTH_SHORT).show(); }else if ((p1.getText().toString().length()) > 10) { android.widget.Toast.makeText(this, \"Shorten player 1 name\", Toast.LENGTH_SHORT).show(); }else if ((p2.getText().toString().length()) > 10) { android.widget.Toast.makeText(this, \"Shorten player 2 name\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2116/buggy-version/app.src.main.java.com.example.haresh.tic_tac_toe_app.two_player_names.java", "BodyUseAPI": ["p1.getText().toString().length()", "android.widget.EditText.getText()", "android.widget.EditText.getText()", "p1.getText().toString()", "java.util.Objects.equals(p1.getText().toString(),p2.getText().toString())", "p1.getText().toString()", "android.widget.EditText.setError(java.lang.String)"], "Fixed commit": "e9f0e4b9e9c8c1ae81c16a00d58a9dd20243864d", "Url": "https://api.github.com/repos/hareshkh/tic-tac-toe-android-app", "Date": "2016-01-24T11:15:40Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selected) == null) selected = piece;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7700/buggy-version/Client.AeroplaneChess.java", "BodyUseAPI": [], "Fixed commit": "f848d100e0cb13cbe7654f081f2f71dccde88d73", "Url": "https://api.github.com/repos/rweics/AeroplaneChess", "Date": "2015-02-22T06:39:22Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<java.lang.String, javax.servlet.Servlet>.putIfAbsent(java.lang.String,javax.servlet.Servlet)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (old != null) throw new java.lang.IllegalStateException((\"duplicated servlet name: \" + servletName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/406/buggy-version/network.kraken-httpd.src.main.java.org.krakenapps.httpd.impl.ServletDispatcher.java", "BodyUseAPI": [], "Fixed commit": "446fa4162b34a93f15584220502f4c5aa8189054", "Url": "https://api.github.com/repos/nchovy/kraken", "Date": "2013-01-23T06:38:25Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gameWorld.getGameObjectArray().size) != 0) { gameWorld.update(((interval) / 1000)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3674/buggy-version/core.src.com.mygdx.game.server.LogicServer.java", "BodyUseAPI": ["com.mygdx.game.entity.GameWorld.update(float)"], "Fixed commit": "9690d12a71c7b1045696729f40a96e06130fa77f", "Url": "https://api.github.com/repos/YUIL/gdx_test", "Date": "2015-09-09T00:05:24Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(recvString.equals(\"\"))) { java.lang.System.out.println((\"recv:\" + (recvString))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3674/buggy-version/core.src.com.mygdx.game.server.LogicServer.java", "BodyUseAPI": [], "Fixed commit": "9690d12a71c7b1045696729f40a96e06130fa77f", "Url": "https://api.github.com/repos/YUIL/gdx_test", "Date": "2015-09-09T00:05:24Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (name != null) { for (int i = 0; i < (gameObjectArray.size); i++) { if (name.equals(gameObjectArray.get(i).getName())) { return gameObjectArray.get(i); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3674/buggy-version/core.src.com.mygdx.game.entity.GameWorld.java", "BodyUseAPI": ["java.lang.String.equals(gameObjectArray.get(i).getName())"], "Fixed commit": "9690d12a71c7b1045696729f40a96e06130fa77f", "Url": "https://api.github.com/repos/YUIL/gdx_test", "Date": "2015-09-09T00:05:24Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.mucommander.commons.runtime.OsFamily.getCurrent()) == (com.mucommander.commons.runtime.OsFamily.WINDOWS)) { setSize(getSize()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8921/buggy-version/src.main.com.mucommander.ui.layout.AsyncPanel.java", "BodyUseAPI": [], "Fixed commit": "af0aecd5dcbaccf8547a2a471f079c9dba79af24", "Url": "https://api.github.com/repos/trol73/mucommander", "Date": "2015-07-03T20:42:36Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getPlayer().getHealth()) != 20) { if (numOfSugar == 1) { event.getPlayer().setItemInHand(null); }else { event.getPlayer().getItemInHand().setAmount((numOfSugar - 1)); } event.getPlayer().updateInventory(); event.getPlayer().setHealth(((event.getPlayer().getHealth()) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1207/buggy-version/eatsugar.ESPlayerListener.java", "BodyUseAPI": ["event.getPlayer().getItemInHand()", "event.getPlayer().setHealth(((event.getPlayer().getHealth()) + 1))", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getPlayer().updateInventory()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getPlayer().setItemInHand(<nulltype>)", "org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "event.getPlayer().getItemInHand().setAmount(int)", "event.getPlayer().getHealth()"], "Fixed commit": "5d6e758b5a6a09ca51b3f120308b932698975658", "Url": "https://api.github.com/repos/ChrizC/EatSugar", "Date": "2011-05-21T23:29:28Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()", "p.getLocation().getWorld()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.minecast.bedhome.BedHomeListener.plugin.bedInConfig(p, w)) { org.bukkit.Location ogBed = org.minecast.bedhome.BedHomeListener.plugin.getSavedBedLocation(p, w); if (ogBed.equals(e.getClickedBlock().getLocation())) { return; }else if (!(ogBed.equals(org.minecast.bedhome.BedHomeListener.plugin.getAltBedBlock(e.getClickedBlock())))) { if (!(org.minecast.bedhome.BedHomeListener.plugin.chargePlayerAccount(p, org.minecast.bedhome.BedHomeListener.plugin.bedSetCost))) { return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2293/buggy-version/src.main.java.org.minecast.bedhome.BedHomeListener.java", "BodyUseAPI": ["org.minecast.bedhome.Main.getAltBedBlock(e.getClickedBlock())", "org.minecast.bedhome.Main.chargePlayerAccount(org.bukkit.entity.Player,org.minecast.bedhome.BedHomeListener.plugin.bedSetCost)", "org.bukkit.Location.equals(org.minecast.bedhome.BedHomeListener.plugin.getAltBedBlock(e.getClickedBlock()))", "org.minecast.bedhome.Main.getSavedBedLocation(org.bukkit.entity.Player,org.bukkit.World)"], "Fixed commit": "7ae41309d7b4b379ef0d60deddf135250afa70f8", "Url": "https://api.github.com/repos/HeroCC/BedHome", "Date": "2017-02-01T22:08:24Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((server.numPlayers()) == 0) { pauseBackup = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5027/buggy-version/src.simpleserver.thread.AutoBackup.java", "BodyUseAPI": [], "Fixed commit": "191d26363f19fca14cfb840b108282a8b59921e9", "Url": "https://api.github.com/repos/iBotPeaches/SimpleServer", "Date": "2011-07-31T20:16:20Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pauseBackup) && ((server.numPlayers()) > 0)) { pauseBackup = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5027/buggy-version/src.simpleserver.thread.AutoBackup.java", "BodyUseAPI": [], "Fixed commit": "191d26363f19fca14cfb840b108282a8b59921e9", "Url": "https://api.github.com/repos/iBotPeaches/SimpleServer", "Date": "2011-07-31T20:16:20Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((record.stage) < 0) { han.ding.util.Ebbinghaus.log.info((\"stage is \" + (record.stage))); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6987/buggy-version/src.han.ding.util.Ebbinghaus.java", "BodyUseAPI": ["org.apache.commons.logging.Log.info((\"stage is \" + (record.stage)))"], "Fixed commit": "9696827f05703fbed77a6a4be1c479d1b512148d", "Url": "https://api.github.com/repos/Han-Jiang/dingdingdanci", "Date": "2014-09-07T15:52:51Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((neighbourhoods) != null) { neighbourhoods.setAdapter(dataAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/152/buggy-version/OsmAnd.src.org.hva.cityrunner.plus.activities.MainMenuActivity.java", "BodyUseAPI": [], "Fixed commit": "fe3a42950d7e45db28f901ef3c19f66765d574fb", "Url": "https://api.github.com/repos/joeyvanderbie/Osmand", "Date": "2014-01-27T12:34:07Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.blockchain.api.HttpClient.urlEncodeParams(java.util.Map<java.lang.String, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (encodedParams.isEmpty()) { url = new java.net.URL(((info.blockchain.api.HttpClient.BASE_URL) + resource)); }else { url = new java.net.URL(((((info.blockchain.api.HttpClient.BASE_URL) + resource) + '?') + encodedParams)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1373/buggy-version/src.main.java.info.blockchain.api.HttpClient.java", "BodyUseAPI": [], "Fixed commit": "c26ec94239583230a079ac83342a90424795aec8", "Url": "https://api.github.com/repos/blockchain/api-v1-client-java", "Date": "2015-10-31T14:36:47Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (option == (javax.swing.JOptionPane.CANCEL_OPTION)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8458/buggy-version/src.com.magician.TimeSheet.GUI.TimeSheetGUI.java", "BodyUseAPI": [], "Fixed commit": "6d32109c527bafc90a54363bd0432c44f94c45e8", "Url": "https://api.github.com/repos/bayside8787/MagicTimeSheet", "Date": "2013-12-13T03:12:04Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(settingValueFromControl)) { updateComponentFromInput(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4901/buggy-version/plugin_ide.ui.src-lang.melnorme.util.swt.components.AbstractField.java", "BodyUseAPI": [], "Fixed commit": "8f345840884f6a3e5b1c32192a6136f7ac4a8d98", "Url": "https://api.github.com/repos/RustDT/RustDT", "Date": "2015-05-20T18:49:54Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (extras != null) { position = extras.getInt(\"viewpager_position\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/167/buggy-version/app.src.main.java.com.iranplanner.tourism.iranplanner.MainActivity.java", "BodyUseAPI": ["android.os.Bundle.getInt(java.lang.String)"], "Fixed commit": "6de839dcaa52bf127292958670309cadef1b595c", "Url": "https://api.github.com/repos/hodamehr/IranPlanner", "Date": "2017-05-27T05:08:37Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(world.blockExists(position.posX, position.posY, position.posZ))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7425/buggy-version/src.projectzulu.common.world.buildingmanager.BuildingManager.java", "BodyUseAPI": [], "Fixed commit": "dffa83fce30741dbd486563818c6b635396558a1", "Url": "https://api.github.com/repos/ProjectZulu/Project-Zulu", "Date": "2013-04-16T17:47:33Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item instanceof minicraft.entity.PowerGloveItem) { java.lang.System.out.println(\"WARNING: tried to add power glove to inventory. stack trace:\"); java.lang.Thread.dumpStack(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5616/buggy-version/src.minicraft.entity.Inventory.java", "BodyUseAPI": [], "Fixed commit": "11bc0f5ef5d5a2de32109fd7d66b6c44e444bb23", "Url": "https://api.github.com/repos/chrisj42/minicraft-plus-revived", "Date": "2017-07-25T02:02:38Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.grow.cmputf17team4.grow.Models.HabitType.getNumCompleted()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (num == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1060/buggy-version/Grow.app.src.main.java.com.grow.cmputf17team4.grow.Views.ActivityStatistics.java", "BodyUseAPI": [], "Fixed commit": "73ab83beecdcb0fab1f78d4571dbd3a808b98b78", "Url": "https://api.github.com/repos/CMPUT301F17T04/Grow", "Date": "2017-12-05T07:30:59Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xtreemfs.mrc.database.StorageManager.getMetadata(globalFileIdResolver.getLocalFileId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (metadata != null) { org.xtreemfs.mrc.quota.QuotaFileInformation quotaFileInformation = new org.xtreemfs.mrc.quota.QuotaFileInformation(globalFileIdResolver.getVolumeId(), metadata); master.getMrcVoucherManager().clearVouchers(quotaFileInformation, cap.getClientIdentity(), expireTimeSet, newFileSizeMax, update); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/862/buggy-version/java.servers.src.org.xtreemfs.mrc.operations.ClearVouchersOperation.java", "BodyUseAPI": [], "Fixed commit": "ffad6ea0bbbf7e2d854cdfad41837a110c6a1300", "Url": "https://api.github.com/repos/xtreemfs/xtreemfs", "Date": "2015-09-28T16:43:52Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(superClazz.getName().equals(this.name))) this.superClazz = superClazz;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1501/buggy-version/src.models.Clazz.java", "BodyUseAPI": [], "Fixed commit": "89576897509d49fcdafe3698e31de3ec0ebeb4d1", "Url": "https://api.github.com/repos/eggnet/callgraphanalyzer", "Date": "2012-06-04T16:16:07Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["db.CallGraphDb.getLatestOwnerChange(java.lang.String,newMethod.getMethod().getstartChar(),newMethod.getMethod().getendChar(),comparator.newCommit.getCommit_date())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (newMethodChange != null) recurseMethods(new models.User(newMethodChange.getOwnerId()), newMethod.getMethod(), newMethod.getPercentage(), 0, methodCalls, comparator.newCommit.getCommit_id());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1501/buggy-version/src.callgraphanalyzer.CallGraphAnalyzer.java", "BodyUseAPI": ["callgraphanalyzer.CallGraphAnalyzer.recurseMethods(models.User,newMethod.getMethod(),newMethod.getPercentage(),int,java.util.Set<models.Method>,comparator.newCommit.getCommit_id())", "models.Change.getOwnerId()"], "Fixed commit": "89576897509d49fcdafe3698e31de3ec0ebeb4d1", "Url": "https://api.github.com/repos/eggnet/callgraphanalyzer", "Date": "2012-06-04T16:16:07Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["db.CallGraphDb.getLatestOwnerChange(java.lang.String,oldMethod.getMethod().getstartChar(),oldMethod.getMethod().getendChar(),comparator.oldCommit.getCommit_date())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (newMethodChange != null) recurseMethods(new models.User(newMethodChange.getOwnerId()), oldMethod.getMethod(), oldMethod.getPercentage(), 0, methodCalls, comparator.oldCommit.getCommit_id());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1501/buggy-version/src.callgraphanalyzer.CallGraphAnalyzer.java", "BodyUseAPI": ["callgraphanalyzer.CallGraphAnalyzer.recurseMethods(models.User,oldMethod.getMethod(),oldMethod.getPercentage(),int,java.util.Set<models.Method>,comparator.oldCommit.getCommit_id())", "models.Change.getOwnerId()"], "Fixed commit": "89576897509d49fcdafe3698e31de3ec0ebeb4d1", "Url": "https://api.github.com/repos/eggnet/callgraphanalyzer", "Date": "2012-06-04T16:16:07Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.ballerinalang.plugins.idea.psi.impl.BallerinaPsiImplUtil.isStructField(element))) { com.intellij.psi.PsiElement commonContext = com.intellij.psi.util.PsiTreeUtil.findCommonContext(element, resolvedElement); if (!(commonContext instanceof org.ballerinalang.plugins.idea.psi.BallerinaFile)) { return resolvedElement; } }else if ((resolvedElement.getParent()) instanceof org.ballerinalang.plugins.idea.psi.GlobalVariableDefinitionNode) { return resolvedElement; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3974/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.CallableUnitBodyNode.java", "BodyUseAPI": ["com.intellij.psi.util.PsiTreeUtil.findCommonContext(com.intellij.psi.PsiNamedElement,com.intellij.psi.PsiElement)"], "Fixed commit": "4403aff4c18f70203d0c946a74e14e55e0a64e0a", "Url": "https://api.github.com/repos/ballerina-attic/plugin-intellij", "Date": "2017-06-07T07:09:57Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((android.text.TextUtils.isEmpty(ETemail.getText().toString())) || (android.text.TextUtils.isEmpty(ETemail.getText().toString()))) { android.support.design.widget.Snackbar.make(findViewById(R.id.LoginBtn), \"\u041f\u043e\u043b\u044f \u043f\u0443\u0441\u0442\u044b\", Snackbar.LENGTH_SHORT).show(); android.support.design.widget.Snackbar.make(findViewById(R.id.RegBtn), \"\u041f\u043e\u043b\u044f \u043f\u0443\u0441\u0442\u044b\", Snackbar.LENGTH_SHORT).show(); }else { if ((view.getId()) == (R.id.LoginBtn)) { signin(ETemail.getText().toString(), ETpassword.getText().toString()); }else if ((view.getId()) == (R.id.RegBtn)) { registration(ETemail.getText().toString(), ETpassword.getText().toString()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8280/buggy-version/app.src.main.java.com.app.scope.myapplication.LoginActivity.java", "BodyUseAPI": ["com.app.scope.myapplication.LoginActivity.registration(ETemail.getText().toString(),ETpassword.getText().toString())", "android.widget.EditText.getText()", "ETemail.getText().toString()", "android.widget.EditText.getText()", "ETemail.getText().toString()", "com.app.scope.myapplication.LoginActivity.signin(ETemail.getText().toString(),ETpassword.getText().toString())"], "Fixed commit": "a552aa3049f3162359954ead410dcdfb62688a4c", "Url": "https://api.github.com/repos/MaxaAboutAll/FriendlyNotepad", "Date": "2017-01-13T08:12:40Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.client.Minecraft.getMinecraft().getTextureMapBlocks().getTextureExtry(fluid.getStill().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fluidStillSprite == null) fluidStillSprite = net.minecraft.client.Minecraft.getMinecraft().getTextureMapBlocks().getMissingSprite();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6861/buggy-version/src.main.java.com.nik7.upgcraft.client.gui.inventory.GuiWithFluid.java", "BodyUseAPI": [], "Fixed commit": "ec8b61af7689583195348e965c292c4529b1b09d", "Url": "https://api.github.com/repos/nik7007/UpgradeCraft", "Date": "2016-03-27T18:21:51Z"},
{"Line": "=>1048", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gooddata.processor.Command.getParam(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((token == null) || ((token.length()) <= 0)) token = c.getParam(\"accessToken\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2876/buggy-version/cli.src.main.java.com.gooddata.processor.GdcDI.java", "BodyUseAPI": [], "Fixed commit": "d249b2c5c0d5eb7a83da0c587049b8d2d59b92c2", "Url": "https://api.github.com/repos/chrbayer84/GoodData-CL", "Date": "2012-10-12T12:11:09Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (customText == null) { item.getItemProperty(\"caption\").setValue(value.toString()); }else { item.getItemProperty(\"caption\").setValue(customText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1200/buggy-version/vaadin-grid-util.src.main.java.org.vaadin.gridutil.cell.GridCellFilter.java", "BodyUseAPI": ["item.getItemProperty(\"caption\").setValue(java.lang.String)"], "Fixed commit": "356e7eb159531f9f715b44714b911bf98003147a", "Url": "https://api.github.com/repos/dk2k/vaadin-grid-util", "Date": "2017-01-17T09:43:34Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((customMessages) != null) { trueCaption = customMessages.get(\"trueCaption\"); falseCaption = customMessages.get(\"falseCaption\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1200/buggy-version/vaadin-grid-util.src.main.java.org.vaadin.gridutil.cell.GridCellFilter.java", "BodyUseAPI": [], "Fixed commit": "356e7eb159531f9f715b44714b911bf98003147a", "Url": "https://api.github.com/repos/dk2k/vaadin-grid-util", "Date": "2017-01-17T09:43:34Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (v_MovementDate == null) v_MovementDate = p_MovementDate;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8269/buggy-version/base.org.spin.report.AnalyticalInventory.java", "BodyUseAPI": [], "Fixed commit": "0e48e22dcfcf32b14c514b4d3201e2fa9be563a4", "Url": "https://api.github.com/repos/erpcya/LVE-ADempiere", "Date": "2015-04-09T14:31:49Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.ucchyocean.lc.command.JoinCommand.getChannel(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(channel.getDescription().trim().equals(\"\"))) { sendResourceMessage(sender, com.github.ucchyocean.lc.command.PREINFO, \"cmdmsgSetTopic\", channel.getDescription().trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1010/buggy-version/src.main.java.com.github.ucchyocean.lc.command.JoinCommand.java", "BodyUseAPI": ["com.github.ucchyocean.lc.channel.Channel.getDescription()", "channel.getDescription().trim()", "com.github.ucchyocean.lc.command.JoinCommand.sendResourceMessage(org.bukkit.command.CommandSender,com.github.ucchyocean.lc.command.PREINFO,java.lang.String,channel.getDescription().trim())"], "Fixed commit": "48f8841a678b7c027e779651806a5b13af7e6e96", "Url": "https://api.github.com/repos/ucchyocean/LunaChat", "Date": "2017-03-12T13:55:32Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((str1 == null) && (str2 != null)) { return false; }else if ((str1 != null) && (str2 == null)) { return false; }else if ((str1 != null) && (str2 != null)) { return str1.equals(str2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8657/buggy-version/plugins.net.refractions.udig.tool.info.src.net.refractions.udig.catalog.internal.document.AbstractDocument.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "2e8fb0d8479e2438c466933778bcdbb0f48005e5", "Url": "https://api.github.com/repos/markles/udig-platform", "Date": "2012-08-17T01:50:01Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (error == null) { if (method.equalsIgnoreCase(\"feed\")) { java.lang.String postId = values.getString(\"post_id\"); if (postId != null) { postMessage = (\"{ \\\"params\\\": \\\"\" + postId) + \"\\\" }\"; } }else if (method.equalsIgnoreCase(\"apprequests\")) { java.lang.String request = values.getString(\"request\"); if (request != null) { postMessage = (\"{ \\\"params\\\": \\\"\" + (bundleSetToURLEncoded(values))) + \"\\\" }\"; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6805/buggy-version/android.src.com.freshplanet.ane.AirFacebook.WebDialogActivity.java", "BodyUseAPI": [], "Fixed commit": "4243b918d4feaf03dbdcc16b5ba235aebc9ffba7", "Url": "https://api.github.com/repos/bithorder/ANE-Facebook", "Date": "2014-12-22T16:51:40Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.jackson.JsonNode.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (results == null) { throw new siddur.solidtrust.image.ResultException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6592/buggy-version/solidtrust.src.main.java.siddur.solidtrust.image.CustomSearchExtractor.java", "BodyUseAPI": [], "Fixed commit": "3fb382ee5a81d8a9238afc7d8043e0989889311e", "Url": "https://api.github.com/repos/siddur/mydesk", "Date": "2014-12-18T01:34:41Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.startsWith(\"-\")) && (item.endsWith(\"=\"))) item = item.substring(0, ((item.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8341/buggy-version/source.octopus-agent.src.octopus.teamcity.agent.OctopusCommandBuilder.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "7990a0fd82526522ab23d330e32d82ed4630dbaf", "Url": "https://api.github.com/repos/OctopusDeploy/Octopus-TeamCity", "Date": "2016-12-09T03:03:32Z"},
{"Line": "=>1067", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasSetZooKeeper.await(zkSessionTimeout, java.util.concurrent.TimeUnit.MILLISECONDS))) { org.apache.hadoop.ha.ActiveStandbyElector.LOG.debug(\"Event received with stale zk\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7982/buggy-version/hadoop-common-project.hadoop-common.src.main.java.org.apache.hadoop.ha.ActiveStandbyElector.java", "BodyUseAPI": [], "Fixed commit": "1bd23bca447d50695d4ceda39749fdafbb39b968", "Url": "https://api.github.com/repos/apache/hadoop", "Date": "2015-01-06T03:45:23Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((text.length()) <= 2) { return text; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7859/buggy-version/circleinitialsview.src.main.java.com.mklimek.circleinitialsview.CircleInitialsView.java", "BodyUseAPI": [], "Fixed commit": "1dcc002ca04a44a99ab8b7022aae1eab7f75d003", "Url": "https://api.github.com/repos/mklimek/circle-initials-view", "Date": "2016-05-24T07:38:17Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.imageio.ImageIO.read(java.net.URL)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((image.getType()) == (java.awt.image.BufferedImage.TYPE_BYTE_GRAY)) || ((image.getType()) == (java.awt.image.BufferedImage.TYPE_USHORT_GRAY))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7644/buggy-version/src.usr.eusth.baka.bakatsuki.IllustrationsPage.java", "BodyUseAPI": [], "Fixed commit": "5c5efd89358ece0b0a1fde3f1054216ef0afe5cb", "Url": "https://api.github.com/repos/EusthEnoptEron/JBakaPrince", "Date": "2014-01-19T22:47:02Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isLoggedIn(player))) && (hasAccount(player))) throw new de.st_ddt.crazyplugin.exceptions.CrazyCommandPermissionException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6100/buggy-version/CrazyLogin.src.de.st_ddt.crazylogin.CrazyLogin.java", "BodyUseAPI": [], "Fixed commit": "9e9dc8f49c28d96277e2bb23b560afab64fc0f40", "Url": "https://api.github.com/repos/ST-DDT/Crazy", "Date": "2012-04-24T12:20:02Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item == null) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2126/buggy-version/core.src.main.java.hudson.util.VersionNumber.java", "BodyUseAPI": [], "Fixed commit": "cc796a9fce1ae27204e2111c7fdd6f03270ca43a", "Url": "https://api.github.com/repos/jenkinsci/jenkins", "Date": "2011-09-09T02:42:41Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.netbeans.api.lexer.TokenSequence<ca.weblite.netbeans.mirah.lexer.MirahTokenId>.offset()", "ca.weblite.netbeans.mirah.lexer.DocumentQuery.getTokens(int,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((seq.offset()) == prevOffset) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/9224/buggy-version/src.ca.weblite.netbeans.mirah.lexer.DocumentQuery.java", "BodyUseAPI": [], "Fixed commit": "6785276bd3119f9f308893555a921fa51b2b2fa3", "Url": "https://api.github.com/repos/shannah/mirah-nbm", "Date": "2014-09-12T22:22:35Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.ItemStack.getDurability()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (itemdamage == 0) { itemString = new java.lang.Integer(itemtype).toString().replace(\"'\", \"\"); }else { itemString = ((new java.lang.Integer(itemtype).toString().replace(\"'\", \"\")) + \":\") + (new java.lang.Integer(itemdamage).toString().replace(\"'\", \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1431/buggy-version/src.terranetworkorg.ItemRestriction.ItemRestrictionPlayerListener.java", "BodyUseAPI": ["java.lang.Integer.toString()", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "4fc2b26e1a882c764209d1d2132c2311a2a1231c", "Url": "https://api.github.com/repos/TerraNetworkOrg/TNO-ItemRestriction", "Date": "2012-03-14T18:59:31Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["id.base.app.rest.RestCaller<id.base.app.valueobject.advisory.AdvisoryConsulting>.findById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (detail != null) { if ((detail.getName()) != null) { java.lang.String dataTitle = detail.getName().replace(\" \", \"-\"); if (dataTitle.equals(title)) { setMenu(model); model.addAttribute(\"detail\", detail); return \"/advisory/detail\"; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6545/buggy-version/Site.src.id.base.app.site.controller.web.AdvisoryWebController.java", "BodyUseAPI": ["org.springframework.ui.ModelMap.addAttribute(java.lang.String,id.base.app.valueobject.advisory.AdvisoryConsulting)", "id.base.app.valueobject.advisory.AdvisoryConsulting.getName()", "detail.getName().replace(java.lang.String,java.lang.String)", "id.base.app.valueobject.advisory.AdvisoryConsulting.getName()"], "Fixed commit": "05cf279f1032c0599860bc5fe25a89aec77a0c0a", "Url": "https://api.github.com/repos/utharamadhan/base.app", "Date": "2017-07-11T00:55:43Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (syllabifier == null) { syllabifier = new marytts.modules.phonemiser.Syllabifier(this.allophoneSet, this.removeTrailingOneFromPhones); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5734/buggy-version/marytts-runtime.src.main.java.marytts.modules.JPhonemiser.java", "BodyUseAPI": [], "Fixed commit": "871151b5db5160eeacb4fa48f397f951a1a5dafa", "Url": "https://api.github.com/repos/marytts-it/marytts", "Date": "2012-10-26T15:52:30Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inboundStatus != null) { callbackStatus = new org.mifos.beyonicIntegration.service.MifosGatewayService.domain.Status(); callbackStatus.setCode(java.lang.String.valueOf(TransactionStatus.INBOUND_STATUS_RECEIVED_CODE)); callbackStatus.setDescription(TransactionStatus.INBOUND_STATUS_RECEIVED); callbackStatus.setStatusCategory(StatusCategory.MMP_CATEGORY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5384/buggy-version/src.main.java.org.mifos.beyonicIntegration.controller.IncomingPaymentController.java", "BodyUseAPI": [], "Fixed commit": "1c5ab80d61d579a4aeb7e9e79541710cd646ec80", "Url": "https://api.github.com/repos/edcable/beyonic-integration", "Date": "2017-09-03T21:54:28Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sooo.Fat32.findNumber(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (found != (-1)) { fileName = \"fail\"; java.lang.System.out.println(\"@ createFile error: sorry this name has been take :(\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4956/buggy-version/src.sooo.Fat32.java", "BodyUseAPI": [], "Fixed commit": "9ba8f603d4599d45aad94c4d74372fe42915daa2", "Url": "https://api.github.com/repos/jefersoncunha/ufsm-SO_SistemasDeArquivoFAT", "Date": "2016-07-11T07:08:02Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultFormat) != null) formats.add(defaultFormat);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3426/buggy-version/lingual-core.src.main.java.cascading.lingual.catalog.SchemaDef.java", "BodyUseAPI": [], "Fixed commit": "335d353acccc11bfa383a59689214ca9ed727e80", "Url": "https://api.github.com/repos/Cascading/lingual", "Date": "2013-11-06T18:29:55Z"},
{"Line": "=>651", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultProtocol) != null) protocols.add(defaultProtocol);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3426/buggy-version/lingual-core.src.main.java.cascading.lingual.catalog.SchemaDef.java", "BodyUseAPI": [], "Fixed commit": "335d353acccc11bfa383a59689214ca9ed727e80", "Url": "https://api.github.com/repos/Cascading/lingual", "Date": "2013-11-06T18:29:55Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["no.runsafe.framework.minecraft.event.entity.RunsafeEntityDamageByEntityEvent.getDamageActor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (attacker instanceof no.runsafe.framework.minecraft.entity.RunsafeProjectile) { no.runsafe.framework.minecraft.entity.RunsafeProjectile projectile = ((no.runsafe.framework.minecraft.entity.RunsafeProjectile) (attacker)); if (!(((projectile.getEntityType()) == (no.runsafe.framework.minecraft.entity.ProjectileEntity.Egg)) || ((projectile.getEntityType()) == (no.runsafe.framework.minecraft.entity.ProjectileEntity.Snowball)))) { no.runsafe.framework.api.entity.IProjectileSource shooterSource = ((no.runsafe.framework.minecraft.entity.RunsafeProjectile) (attacker)).getShooter(); if (shooterSource instanceof no.runsafe.framework.minecraft.entity.RunsafeLivingEntity) attackingPlayer = this.findPlayer(((no.runsafe.framework.minecraft.entity.RunsafeLivingEntity) (shooterSource))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1945/buggy-version/src.no.runsafe.combatcooldown.EntityListener.java", "BodyUseAPI": [], "Fixed commit": "b7476d6bd89676a55de80c26cea50b246e5ecde6", "Url": "https://api.github.com/repos/Runsafe/CombatCooldown", "Date": "2017-03-08T06:07:46Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.io.FilenameUtils.getExtension(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.apache.commons.lang.ArrayUtils.contains(edu.cornell.med.icb.goby.alignments.AlignmentReaderImpl.COMPACT_ALIGNMENT_FILE_REQUIRED_EXTS, fileExtension))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/955/buggy-version/src.edu.cornell.med.icb.goby.alignments.AlignmentReaderImpl.java", "BodyUseAPI": [], "Fixed commit": "5d74d8a64c2461c737d9091567c5f4eea5a838c8", "Url": "https://api.github.com/repos/CampagneLaboratory/goby", "Date": "2012-07-20T18:11:32Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getResources().getConfiguration().locale.getLanguage()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lang.equals(\"en\")) { btnFont = android.graphics.Typeface.createFromAsset(getAssets(), \"NEURAL2.TTF\"); }else { btnFont = android.graphics.Typeface.createFromAsset(getAssets(), \"impact.ttf\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7978/buggy-version/app.src.main.java.com.alexkaz.barleybreak.LaunchActivity.java", "BodyUseAPI": [], "Fixed commit": "6a49ffbe6242484e0f6e85f66ef16371c83eb1d6", "Url": "https://api.github.com/repos/AlexKazmirchuk/BarleyBreak", "Date": "2016-09-29T11:50:03Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getRootDirectory()) != null) { appendFiles(getRootDirectory(), allFiles); }else { org.openflexo.foundation.resource.FileSystemBasedResourceCenter.logger.warning(((\"ResourceCenter: \" + (this)) + \" rootDirectory is null\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4955/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.resource.FileSystemBasedResourceCenter.java", "BodyUseAPI": [], "Fixed commit": "ad60619fcf60d09e36640d256a94cdf7bb026c79", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2014-02-10T18:15:05Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (node != null) { java.lang.String summary = processWikipediaAbstract(node.asLiteral().getString()); responseData.setText(summary); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5681/buggy-version/src.main.java.chatbot.lib.api.SPARQL.java", "BodyUseAPI": ["chatbot.lib.api.SPARQL.processWikipediaAbstract(node.asLiteral().getString())", "node.asLiteral().getString()", "org.apache.jena.rdf.model.RDFNode.asLiteral()"], "Fixed commit": "f7a56f0541904fa8b547a820c25b98dde98886ee", "Url": "https://api.github.com/repos/dbpedia/chatbot", "Date": "2017-07-03T08:25:24Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.unomi.api.services.EventService.send(org.apache.unomi.rest.Event)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((changes & (org.apache.unomi.api.services.EventService.PROFILE_UPDATED)) == (org.apache.unomi.api.services.EventService.PROFILE_UPDATED)) { profileService.save(profile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2906/buggy-version/rest.src.main.java.org.apache.unomi.rest.ProfileServiceEndPoint.java", "BodyUseAPI": [], "Fixed commit": "f47e846660cb7c785ee4bff39809848266678230", "Url": "https://api.github.com/repos/apache/incubator-unomi", "Date": "2016-09-07T08:59:59Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bluetoothAdapter) != null) { bluetoothAdapter.stopLeScan(callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5152/buggy-version/android.src.main.java.com.geniem.rnble.RNBLEModule.java", "BodyUseAPI": [], "Fixed commit": "c2e1d83bf4d0999be4473043558e295e09555743", "Url": "https://api.github.com/repos/jacobrosenthal/react-native-ble", "Date": "2016-05-10T12:04:09Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bluetoothAdapter) != null) { bluetoothAdapter.startLeScan(callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5152/buggy-version/android.src.main.java.com.geniem.rnble.RNBLEModule.java", "BodyUseAPI": [], "Fixed commit": "c2e1d83bf4d0999be4473043558e295e09555743", "Url": "https://api.github.com/repos/jacobrosenthal/react-native-ble", "Date": "2016-05-10T12:04:09Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.body().isEmpty())) { org.greenrobot.eventbus.EventBus.getDefault().post(new no.uib.info331.models.messages.EventEvent(response.body().get(latestIndex))); }else { java.lang.System.out.println(\"There was no latest event\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3215/buggy-version/app.src.main.java.no.uib.info331.queries.EventQueries.java", "BodyUseAPI": ["response.body().get(int)", "retrofit2.Response<java.util.List<no.uib.info331.models.Event>>.body()", "org.greenrobot.eventbus.EventBus.getDefault().post(no.uib.info331.models.messages.EventEvent)"], "Fixed commit": "a4d17340eee4ca4d34ad4e54038624e38e66318d", "Url": "https://api.github.com/repos/Foxboron/INFO331", "Date": "2017-12-03T20:39:09Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wangzw.plugin.cppstyle.CppCodeFormatter.format(doc.get(),org.eclipse.cdt.ui.ICEditor,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (editors == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1549/buggy-version/plugin.src.org.wangzw.plugin.cppstyle.CppCodeFormatter.java", "BodyUseAPI": [], "Fixed commit": "3055ecc99f91cceffc59d98f8d038c9139e96d4f", "Url": "https://api.github.com/repos/wangzw/CppStyle", "Date": "2015-02-21T15:03:43Z"},
{"Line": "=>716", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTextPresent(org.exoplatform.selenium.platform.calendar.MSG_TASK_DELETE, 3000)) alert.verifyAlertMessage(org.exoplatform.selenium.platform.calendar.MSG_TASK_DELETE); else alert.verifyAlertMessage(org.exoplatform.selenium.platform.calendar.MSG_EVENT_DELETE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4126/buggy-version/ui-common.src.main.java.org.exoplatform.selenium.platform.calendar.Event.java", "BodyUseAPI": [], "Fixed commit": "f4d856c227b3923d076d0f61bd9eaddd88cdb877", "Url": "https://api.github.com/repos/exoplatform/ui-test", "Date": "2015-03-19T06:53:49Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getCaze()) != null) { caze = caseDAO.queryForId(task.getCaze().getId()); content.append(\"<b>\").append(caze.toString()).append(\"</b><br/>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8715/buggy-version/sormas-app.app.src.main.java.de.symeda.sormas.app.task.TaskNotificationService.java", "BodyUseAPI": ["de.symeda.sormas.app.backend.task.Task.getCaze()", "de.symeda.sormas.app.backend.caze.CaseDao.queryForId(task.getCaze().getId())", "task.getCaze().getId()"], "Fixed commit": "53d6bb657cd3fc3e1d1550243e486d6fd7457aec", "Url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project", "Date": "2017-08-24T09:34:49Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getEvent()) != null) { event = eventDAO.queryForId(task.getEvent().getId()); content.append(\"<b>\").append(event.toString()).append(\"</b><br/>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8715/buggy-version/sormas-app.app.src.main.java.de.symeda.sormas.app.task.TaskNotificationService.java", "BodyUseAPI": ["task.getEvent().getId()", "de.symeda.sormas.app.backend.task.Task.getEvent()", "de.symeda.sormas.app.backend.event.EventDao.queryForId(task.getEvent().getId())"], "Fixed commit": "53d6bb657cd3fc3e1d1550243e486d6fd7457aec", "Url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project", "Date": "2017-08-24T09:34:49Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.getContact()) != null) { contact = contactDAO.queryForId(task.getContact().getId()); content.append(\"<b>\").append(contact.toString()).append(\"</b><br/>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8715/buggy-version/sormas-app.app.src.main.java.de.symeda.sormas.app.task.TaskNotificationService.java", "BodyUseAPI": ["de.symeda.sormas.app.backend.task.Task.getContact()", "de.symeda.sormas.app.backend.contact.ContactDao.queryForId(task.getContact().getId())", "task.getContact().getId()"], "Fixed commit": "53d6bb657cd3fc3e1d1550243e486d6fd7457aec", "Url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project", "Date": "2017-08-24T09:34:49Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((f.getFilterValue()) != null) predicates.add(edu.usc.cssl.tacit.common.queryprocess.QueryProcesser.constructSmartQuery(f));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1477/buggy-version/edu.usc.cssl.tacit.common.ui.src.edu.usc.cssl.tacit.common.queryprocess.QueryProcesser.java", "BodyUseAPI": ["edu.usc.cssl.tacit.common.queryprocess.QueryProcesser.constructSmartQuery(edu.usc.cssl.tacit.common.queryprocess.Filter)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "a938046f7e0cd3f919e74682566b446362952767", "Url": "https://api.github.com/repos/USC-CSSL/TACIT", "Date": "2015-12-05T22:34:03Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) == 0) deleteRC();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7791/buggy-version/riscoss-webapp.src.main.java.eu.riscoss.client.models.ModelsModule.java", "BodyUseAPI": [], "Fixed commit": "2ce9cbd69081eeac36c2928cf522bfe89b989ef5", "Url": "https://api.github.com/repos/RISCOSS/riscoss-corporate", "Date": "2015-12-11T16:42:34Z"},
{"Line": "=>641", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((iii) == ((size) - 1)) deleteRC();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7791/buggy-version/riscoss-webapp.src.main.java.eu.riscoss.client.models.ModelsModule.java", "BodyUseAPI": [], "Fixed commit": "2ce9cbd69081eeac36c2928cf522bfe89b989ef5", "Url": "https://api.github.com/repos/RISCOSS/riscoss-corporate", "Date": "2015-12-11T16:42:34Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != isReach) { reachRate.add(isReach); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6165/buggy-version/LS_Application.src.main.java.com.vzs.ls.application.output.pojo.DistructResturant.DistractPojo.java", "BodyUseAPI": ["com.vzs.ls.application.output.pojo.DistructResturant.DistractPojo.ReachRate.add(java.lang.Boolean)"], "Fixed commit": "21b3351ece04271fe15a0b49a3a382b37aeb16d4", "Url": "https://api.github.com/repos/vzs97/LS_StatisticForMaterial", "Date": "2015-03-18T09:45:13Z"},
{"Line": "=>1057", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldObj.isRemote)) { notifyPlayer(player, mca.core.util.LanguageHelper.getString(this, \"notify.child.growup\", false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1087/buggy-version/Forge.mcp.src.minecraft.mca.entity.EntityPlayerChild.java", "BodyUseAPI": [], "Fixed commit": "52dbc1d0b5065f744ed25f82cdee133f40afe9d9", "Url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive", "Date": "2013-08-24T23:15:39Z"},
{"Line": "=>1035", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldObj.isRemote)) { notifyPlayer(player, mca.core.util.LanguageHelper.getString(this, \"notify.child.readytogrow\", false)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1087/buggy-version/Forge.mcp.src.minecraft.mca.entity.EntityPlayerChild.java", "BodyUseAPI": [], "Fixed commit": "52dbc1d0b5065f744ed25f82cdee133f40afe9d9", "Url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive", "Date": "2013-08-24T23:15:39Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getMessage().getRawContent()", "fredboat.command.moderation.PrefixCommand.giefPrefix(event.getGuild().getIdLong())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (raw.startsWith(prefix)) { input = raw.substring(prefix.length()); if (prefix.equals(Config.CONFIG.getPrefix())) { Metrics.prefixParsed.labels(\"default\").inc(); }else { Metrics.prefixParsed.labels(\"custom\").inc(); } }else { if (raw.startsWith(((Config.CONFIG.getPrefix()) + \"help\"))) { Metrics.prefixParsed.labels(\"default\").inc(); input = raw.substring(Config.CONFIG.getPrefix().length()); }else { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/718/buggy-version/FredBoat.src.main.java.fredboat.commandmeta.abs.CommandContext.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(Config.CONFIG.getPrefix().length())", "java.lang.String.substring(int)", "java.lang.String.startsWith(((Config.CONFIG.getPrefix()) + \"help\"))", "java.lang.String.equals(Config.CONFIG.getPrefix())"], "Fixed commit": "5aac7b6af2ffd633d4bdac8dddd107ee3747cd0e", "Url": "https://api.github.com/repos/Frederikam/FredBoat", "Date": "2017-11-02T22:27:47Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i.range()) != null) { annotation.registerFix(new org.sonarlint.intellij.actions.NoSonarIntentionAction(i.range())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7475/buggy-version/src.main.java.org.sonarlint.intellij.editor.SonarExternalAnnotator.java", "BodyUseAPI": ["org.sonarlint.intellij.issue.IssuePointer.range()", "com.intellij.lang.annotation.Annotation.registerFix(org.sonarlint.intellij.actions.NoSonarIntentionAction)"], "Fixed commit": "52886a8a11acf1653c1fcdcfba606cbfec1c9ff8", "Url": "https://api.github.com/repos/SonarSource/sonarlint-intellij", "Date": "2016-01-13T08:20:55Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.dp.game.utils.JSONHelper.decodeString(msg.getMsgBody(),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (res.getDialogId().equals(Constant.DLG_POLICE_WANT_ELECT)) { int joinCnt = 0; for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : this.joinMap.entrySet()) { java.lang.String value = entry.getValue(); if ((value.length()) > 0) { if (Constant.COM_GAME_FLG_ON.equals(value)) { joinCnt++; } } } if (joinCnt >= ((this.seatMap.size()) - 1)) { res.setChooseIndex(\"1\"); } cn.dp.wolf.game.WolfGameRole jRole = null; for (int i = 0; i < (this.seatMap.size()); i++) { java.lang.Integer s = i + 1; cn.dp.wolf.game.WolfGameRole r = this.seatMap.get(s.toString()); if (r.getUid().equals(p.getPlayerUid())) { jRole = r; break; } } if (jRole != null) { if (res.getChooseIndex().equals(\"0\")) { this.joinMap.put(jRole.getSeatNo(), Constant.COM_GAME_FLG_ON); }else { this.joinMap.put(jRole.getSeatNo(), Constant.COM_GAME_FLG_OFF); } }else { cn.dp.game.utils.LogUtils.error((((\"jRole is null in \" + (this.getClass().getName())) + \" -- \") + (p.getPlayerUid()))); } }else { cn.dp.game.utils.LogUtils.error((((((\"unknown dialogid \" + (this.getClass())) + \"--\") + (msg.msgId)) + \" -- \") + (res.getDialogId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/21/buggy-version/src.server.src.main.java.cn.dp.wolf.round.WolfGameRoundElectJoin.java", "BodyUseAPI": ["res.getChooseIndex().equals(java.lang.String)", "cn.dp.wolf.dto.msg.MSG_DIALOG_SHOW_RESP.getChooseIndex()", "cn.dp.wolf.dto.msg.MSG_DIALOG_SHOW_RESP.getDialogId()", "cn.dp.game.utils.LogUtils.error((((((\"unknown dialogid \" + (this.getClass())) + \"--\") + (msg.msgId)) + \" -- \") + (res.getDialogId())))", "cn.dp.wolf.dto.msg.MSG_DIALOG_SHOW_RESP.setChooseIndex(java.lang.String)"], "Fixed commit": "6fbf83711181b7d717b2bc9e6bbe01dc6675f069", "Url": "https://api.github.com/repos/kanuo-dev/houdev", "Date": "2017-08-20T04:34:02Z"},
{"Line": "=>890", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (mHsConfig)) { listener.onRegistrationFailed(\"null mHsConfig\"); }else { if (!isDuplicated) { mHsConfig.setCredentials(credentials); org.matrix.androidsdk.MXSession session = im.vector.Matrix.getInstance(context).createSession(mHsConfig); im.vector.Matrix.getInstance(context).addSession(session); } listener.onRegistrationSuccess(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5221/buggy-version/vector.src.main.java.im.vector.RegistrationManager.java", "BodyUseAPI": [], "Fixed commit": "d427c8ef18b3382bd21d692b097223d7c75b3e2b", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-08-29T08:00:07Z"},
{"Line": "=>1530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (transition instanceof entities.LoopbackTransitionObj) { final_state = transition.getStartState(); }else { final_state = transition.getEndState(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4890/buggy-version/src.display.FizzimGui.java", "BodyUseAPI": ["entities.TransitionObj.getEndState()", "entities.TransitionObj.getStartState()"], "Fixed commit": "c56853816243f510b2ceb23debfe1d65fbff2acb", "Url": "https://api.github.com/repos/Wizzer240/GraphEditorForStateMachineModelization", "Date": "2014-05-21T06:36:57Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.onyxbits.remotekeyboard.TelnetEditorShell.self) != null) { return new de.onyxbits.remotekeyboard.DummyShell(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8096/buggy-version/src.de.onyxbits.remotekeyboard.TelnetEditorShell.java", "BodyUseAPI": [], "Fixed commit": "03518aeb0f7029a3c40aa11610e311a72039999e", "Url": "https://api.github.com/repos/onyxbits/remotekeyboard", "Date": "2013-08-19T22:10:42Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.isOp()) || (npc.getTrait(java.security.acl.Owner.class).isOwnedBy(p.getName()))) { if (ongoingTrades.containsKey(p.getName())) { if (ongoingTrades.get(p.getName()).equalsTraderStatus(TraderStatus.PLAYER_MANAGE)) { ongoingTrades.remove(p.getName()); p.sendMessage((((org.bukkit.ChatColor.RED) + (npc.getFullName())) + \": user mode!\")); } }else { ongoingTrades.put(p.getName(), new net.dtl.citizenstrader_new.traders.ServerTrader(npc, npc.getTrait(net.dtl.citizenstrader_new.traits.TraderTrait.class))); ongoingTrades.get(p.getName()).setTraderStatus(TraderStatus.PLAYER_MANAGE); p.sendMessage((((org.bukkit.ChatColor.RED) + (npc.getFullName())) + \": manager mode!\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1485/buggy-version/src.net.dtl.citizenstrader_new.TraderCharacter.java", "BodyUseAPI": ["ongoingTrades.get(p.getName()).equalsTraderStatus(TraderStatus.PLAYER_MANAGE)", "java.util.HashMap<java.lang.String, net.dtl.citizenstrader_new.traders.Trader>.remove(p.getName())", "org.bukkit.entity.Player.getName()", "ongoingTrades.get(p.getName()).setTraderStatus(TraderStatus.PLAYER_MANAGE)", "net.citizensnpcs.api.npc.NPC.getFullName()", "org.bukkit.entity.Player.getName()", "java.util.HashMap<java.lang.String, net.dtl.citizenstrader_new.traders.Trader>.get(p.getName())", "org.bukkit.entity.Player.sendMessage((((org.bukkit.ChatColor.RED) + (npc.getFullName())) + \": manager mode!\"))", "java.util.HashMap<java.lang.String, net.dtl.citizenstrader_new.traders.Trader>.get(p.getName())", "net.citizensnpcs.api.npc.NPC.getTrait(java.lang.Class)", "org.bukkit.entity.Player.getName()", "java.util.HashMap<java.lang.String, net.dtl.citizenstrader_new.traders.Trader>.put(p.getName(),net.dtl.citizenstrader_new.traders.ServerTrader)", "net.citizensnpcs.api.npc.NPC.getFullName()", "org.bukkit.entity.Player.getName()", "org.bukkit.entity.Player.sendMessage((((org.bukkit.ChatColor.RED) + (npc.getFullName())) + \": user mode!\"))", "org.bukkit.entity.Player.getName()", "java.util.HashMap<java.lang.String, net.dtl.citizenstrader_new.traders.Trader>.containsKey(p.getName())"], "Fixed commit": "6f40ced15be39003d1e2c323cba89f957e2eeb34", "Url": "https://api.github.com/repos/Dandielo/DtlCitizensTrader", "Date": "2012-07-15T20:58:55Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elmakers.mine.bukkit.utility.CompatibilityUtils.getHandle(com.elmakers.mine.bukkit.utility.LivingEntity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((sourceHandle == null) || (!(class_EntityCreature.isAssignableFrom(sourceHandle.getClass())))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6475/buggy-version/src.main.java.com.elmakers.mine.bukkit.utility.CompatibilityUtils.java", "BodyUseAPI": [], "Fixed commit": "0873dfe136af1d5c853f537185ffa4f5cb159346", "Url": "https://api.github.com/repos/elBukkit/MagicLib", "Date": "2014-09-04T22:20:19Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.entity.player.EntityPlayer.getCurrentEquippedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (currentEquippedItem == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/9036/buggy-version/src.main.java.net.snowshock.goldentreasures.blocks.BlockGoldenTorch.java", "BodyUseAPI": [], "Fixed commit": "5cdc60eacd467eb0f4764472091e3b48b15cb980", "Url": "https://api.github.com/repos/LyraelRayne/Golden-Treasures", "Date": "2015-12-31T12:49:47Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4572/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "2dfdfb3fc626e81b375c10ef1fce59112d580938", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(val.endsWith(\"&\"))) { lookup = ((val + \"&\") + name) + \"=\"; }else { lookup = (val + name) + \"=\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6417/buggy-version/src.org.apache.camel.idea.CamelSmartCompletionEndpointOptions.java", "BodyUseAPI": [], "Fixed commit": "a78ccd010ee08cba5c78e722396d8c49af99b7f5", "Url": "https://api.github.com/repos/camel-tooling/camel-idea-plugin", "Date": "2016-12-28T16:07:05Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.wst.server.core.IServer.loadAdapter(java.lang.Class,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (urlProvider == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4544/buggy-version/plugins.com.gwtplugins.gwt.eclipse.wtp.src.com.google.gwt.eclipse.wtp.facet.GwtLaunchableAdapterDelegate.java", "BodyUseAPI": [], "Fixed commit": "9a5d7d9e1780f840862ba24f6992895b0d20ce9c", "Url": "https://api.github.com/repos/gwt-plugins/gwt-eclipse-plugin", "Date": "2016-10-07T19:56:57Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((results.size()) < (rows.length)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7249/buggy-version/src.main.java.kegelmeisterschaft.model.common.HeadTopModel.java", "BodyUseAPI": [], "Fixed commit": "c0a39d7a172100c4e55e7c8d95bc673104a4754c", "Url": "https://api.github.com/repos/neoAblve/kegelmeisterschaft", "Date": "2014-10-30T20:34:08Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((results.size()) < (rows.length)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7249/buggy-version/src.main.java.kegelmeisterschaft.model.common.HeadTopModel.java", "BodyUseAPI": [], "Fixed commit": "c0a39d7a172100c4e55e7c8d95bc673104a4754c", "Url": "https://api.github.com/repos/neoAblve/kegelmeisterschaft", "Date": "2014-10-30T20:34:08Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((results.size()) < (rows.length)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7249/buggy-version/src.main.java.kegelmeisterschaft.model.common.HeadTopModel.java", "BodyUseAPI": [], "Fixed commit": "c0a39d7a172100c4e55e7c8d95bc673104a4754c", "Url": "https://api.github.com/repos/neoAblve/kegelmeisterschaft", "Date": "2014-10-30T20:34:08Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(playerInTurn)) throw new Logic.PlayerOutOfTurnException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/312/buggy-version/HW3.Logic.java", "BodyUseAPI": [], "Fixed commit": "1a4bd5c526cb8dbecfb45db1e900fb60874cc0a7", "Url": "https://api.github.com/repos/jgillham/CS390I", "Date": "2012-10-06T02:23:39Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(playerInTurn)) throw new Logic.PlayerOutOfTurnException();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/312/buggy-version/HW3.Logic.java", "BodyUseAPI": [], "Fixed commit": "1a4bd5c526cb8dbecfb45db1e900fb60874cc0a7", "Url": "https://api.github.com/repos/jgillham/CS390I", "Date": "2012-10-06T02:23:39Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(p.hasPermission(\"skinsrestorer.bypassdisabled\"))) && (!(p.isOp()))) { for (java.lang.String dskin : skinsrestorer.shared.storage.Config.DISABLED_SKINS) if (skin.equalsIgnoreCase(dskin)) { p.sendMessage(Locale.SKIN_DISABLED); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1644/buggy-version/src.skinsrestorer.bukkit.commands.SkinCommand.java", "BodyUseAPI": ["org.bukkit.entity.Player.sendMessage(Locale.SKIN_DISABLED)"], "Fixed commit": "6aa90484611960123b832ff9327dc0304273bdf9", "Url": "https://api.github.com/repos/Th3Tr0LLeR/SkinsRestorer---Maro", "Date": "2017-06-14T19:58:46Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(p.hasPermission(\"skinsrestorer.bypassdisabled\"))) { for (java.lang.String dskin : skinsrestorer.shared.storage.Config.DISABLED_SKINS) if (skin.equalsIgnoreCase(dskin)) { p.sendMessage(Locale.SKIN_DISABLED); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/1644/buggy-version/src.skinsrestorer.bungee.commands.PlayerCommands.java", "BodyUseAPI": ["net.md_5.bungee.api.connection.ProxiedPlayer.sendMessage(Locale.SKIN_DISABLED)"], "Fixed commit": "6aa90484611960123b832ff9327dc0304273bdf9", "Url": "https://api.github.com/repos/Th3Tr0LLeR/SkinsRestorer---Maro", "Date": "2017-06-14T19:58:46Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((playARound(wordGame.totalRounds.get(index), userInput).isComplete()) == false) { java.lang.System.out.println(playARound(wordGame.totalRounds.get(index), userInput).gameResponse); index--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3825/buggy-version/src.wordGame.java", "BodyUseAPI": ["wordGame.playARound(wordGame.totalRounds.get(index),java.lang.String)", "java.util.ArrayList<Round>.get(int)", "java.io.PrintStream.println(playARound(wordGame.totalRounds.get(index), userInput).gameResponse)"], "Fixed commit": "331e231250ba25e1cd51c3260fbc3cfb19fd8d43", "Url": "https://api.github.com/repos/Bex3/wordGame", "Date": "2017-02-05T21:21:26Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == (com.dexels.navajo.dependency.Dependency.ARTICLE_DEPENDENCY)) { scriptFileRel = scriptFile.split(\"article\")[1]; }else if ((type) == (com.dexels.navajo.dependency.Dependency.TASK_DEPENDENCY)) { int idx = scriptFile.indexOf(\"tasks.xml\"); scriptFileRel = scriptFile.substring(idx); }else { scriptFileRel = scriptFile.split(\"scripts\")[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8483/buggy-version/core.com.dexels.navajo.core.src.com.dexels.navajo.dependency.Dependency.java", "BodyUseAPI": [], "Fixed commit": "6dfd15fb054dc8eceb425f532db5b38035bf79d4", "Url": "https://api.github.com/repos/Dexels/navajo", "Date": "2015-11-12T09:34:34Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((samlssoRespDTO.getRespString()) != null) { org.wso2.carbon.identity.sso.saml.processors.SPInitSSOAuthnRequestProcessor.log.debug(samlssoRespDTO.getRespString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3819/buggy-version/components.sso-saml.org.wso2.carbon.identity.sso.saml.src.main.java.org.wso2.carbon.identity.sso.saml.processors.SPInitSSOAuthnRequestProcessor.java", "BodyUseAPI": ["org.wso2.carbon.identity.sso.saml.dto.SAMLSSORespDTO.getRespString()", "org.apache.commons.logging.Log.debug(samlssoRespDTO.getRespString())"], "Fixed commit": "1c91ced41c56faa593e3a9f9570b8fb1a42c8bc1", "Url": "https://api.github.com/repos/Pushpalanka/carbon-identity", "Date": "2015-10-29T08:12:32Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((samlssoRespDTO.getRespString()) != null) { org.wso2.carbon.identity.sso.saml.processors.IdPInitSSOAuthnRequestProcessor.log.debug(samlssoRespDTO.getRespString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3819/buggy-version/components.sso-saml.org.wso2.carbon.identity.sso.saml.src.main.java.org.wso2.carbon.identity.sso.saml.processors.IdPInitSSOAuthnRequestProcessor.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(samlssoRespDTO.getRespString())", "org.wso2.carbon.identity.sso.saml.dto.SAMLSSORespDTO.getRespString()"], "Fixed commit": "1c91ced41c56faa593e3a9f9570b8fb1a42c8bc1", "Url": "https://api.github.com/repos/Pushpalanka/carbon-identity", "Date": "2015-10-29T08:12:32Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (consumerIds.isEmpty()) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4344/buggy-version/consumer-manager.consumer-manager-api.src.com.liferay.consumer.manager.service.impl.ConsumerLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "8186f6578b2ca0879e5ef80d317be2c74d894db9", "Url": "https://api.github.com/repos/liferay/liferay-apps-content-targeting", "Date": "2015-09-23T12:02:02Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anyAreSet(state, io.undertow.conduits.BufferingStreamSinkConduit.SHUTDOWN)) { throw new java.nio.channels.ClosedChannelException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6766/buggy-version/core.src.main.java.io.undertow.conduits.BufferingStreamSinkConduit.java", "BodyUseAPI": [], "Fixed commit": "04f9d1dd57be5261c6f603a58e093d61b737ca3a", "Url": "https://api.github.com/repos/jfclere/undertow", "Date": "2013-02-16T23:18:38Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xnio.Pooled<java.nio.ByteBuffer>.getResource()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((buffer.remaining()) > total) { int put = total; org.xnio.Buffers.copy(buffer, srcs, offset, length); return put; }else { int put = buffer.remaining(); org.xnio.Buffers.copy(put, buffer, srcs, offset, length); flushBuffer(); return put; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6766/buggy-version/core.src.main.java.io.undertow.conduits.BufferingStreamSinkConduit.java", "BodyUseAPI": ["java.nio.ByteBuffer.remaining()", "org.xnio.Buffers.copy(java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int)", "org.xnio.Buffers.copy(int,java.nio.ByteBuffer,java.nio.ByteBuffer[],int,int)"], "Fixed commit": "04f9d1dd57be5261c6f603a58e093d61b737ca3a", "Url": "https://api.github.com/repos/jfclere/undertow", "Date": "2013-02-16T23:18:38Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anyAreSet(state, io.undertow.conduits.BufferingStreamSinkConduit.FLUSHING)) { boolean res = flushBuffer(); if (!res) { return 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6766/buggy-version/core.src.main.java.io.undertow.conduits.BufferingStreamSinkConduit.java", "BodyUseAPI": [], "Fixed commit": "04f9d1dd57be5261c6f603a58e093d61b737ca3a", "Url": "https://api.github.com/repos/jfclere/undertow", "Date": "2013-02-16T23:18:38Z"},
{"Line": "=>5466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entity instanceof java.util.Map) { java.util.List<java.lang.Class<?>> classList = org.osgl.Osgl.findPropertyParameterizedType(lastEntity, lastProp); if (null == classList) { org.osgl.PropertyGetter getter = org.osgl.Osgl.propertyGetter(cache, entity, prop, false); lastEntity = entity; entity = getter.get(entity, null); }else { org.osgl.MapPropertyGetter getter = org.osgl.Osgl.propertyHandlerFactory.createMapPropertyGetter(classList.get(0), classList.get(1)); lastEntity = entity; entity = getter.get(lastEntity, prop); } }else { org.osgl.PropertyGetter getter = org.osgl.Osgl.propertyGetter(cache, entity, prop, false); lastEntity = entity; entity = getter.get(entity, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5241/buggy-version/src.main.java.org.osgl.Osgl.java", "BodyUseAPI": ["org.osgl.PropertyGetter.get(java.lang.Object,<nulltype>)", "org.osgl.Osgl.propertyGetter(org.osgl.cache.CacheService,java.lang.Object,java.lang.String,boolean)", "org.osgl.PropertyGetter.get(java.lang.Object,<nulltype>)", "org.osgl.Osgl.propertyGetter(org.osgl.cache.CacheService,java.lang.Object,java.lang.String,boolean)"], "Fixed commit": "39d0ff566bdf1807a203404884b7e671923cbd98", "Url": "https://api.github.com/repos/osglworks/java-tool", "Date": "2016-04-06T10:00:56Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (node.isTextual()) { value = node.asText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/4545/buggy-version/raptor-models.src.main.java.org.createnet.raptor.models.data.types.NumberRecord.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.asText()"], "Fixed commit": "1a210426d6f3ba18e9564ea20d21fcf9fe8e6f22", "Url": "https://api.github.com/repos/raptorbox/raptor", "Date": "2016-06-08T14:10:13Z"},
{"Line": "=>677", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, nl.umcg.westrah.binarymetaanalyzer.MetaQTL4MetaTrait>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (t != null) { int index = traitMap.get(t); if ((confineToTheseProbes == null) || (confineToTheseProbes.contains(t.getMetaTraitName()))) { probeIndex[index][d] = p; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6271/buggy-version/BinaryMetaAnalyzer.src.main.java.nl.umcg.westrah.binarymetaanalyzer.BinaryMetaAnalysis.java", "BodyUseAPI": ["gnu.trove.map.hash.TObjectIntHashMap<nl.umcg.westrah.binarymetaanalyzer.MetaQTL4MetaTrait>.get(nl.umcg.westrah.binarymetaanalyzer.MetaQTL4MetaTrait)", "java.util.HashSet<java.lang.String>.contains(t.getMetaTraitName())", "nl.umcg.westrah.binarymetaanalyzer.MetaQTL4MetaTrait.getMetaTraitName()"], "Fixed commit": "8f6213279f0b6a34bfb6faf36fb097800bbc9da0", "Url": "https://api.github.com/repos/molgenis/systemsgenetics", "Date": "2017-11-08T11:47:58Z"},
{"Line": "=>480", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.shaolin.bmdp.runtime.security.UserContext.getUserContext().isPullRefresh()) { this.listData = rows; }else { this.listData.addAll(rows); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/6317/buggy-version/modules.uipage.src.main.java.org.shaolin.uimaster.page.ajax.Table.java", "BodyUseAPI": [], "Fixed commit": "853c46d57b7c27e9dd5dad18347b46aab31e2f1f", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2016-12-25T14:21:24Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newTableIds != null) { newTableIds[i] = mTableIds[shuffleOrder[i]]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2820/buggy-version/Wearable.src.main.java.com.ericfabreu.wearflashcards.utils.SetInfo.java", "BodyUseAPI": [], "Fixed commit": "f2f511bbc0b8c275b9d5670de487984831390ec5", "Url": "https://api.github.com/repos/ericfabreu/WearFlashcards", "Date": "2016-09-01T23:39:58Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((accept) == 0) { food = new Client.Food(this, countryLocked.name); usFood = new Client.Food(this, \"United_States\"); drink = new Client.Drink(this, countryLocked.name); snack = new Client.Snack(this, countryLocked.name); state = 3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/8266/buggy-version/src.Client.MainApplet.java", "BodyUseAPI": [], "Fixed commit": "2bb4cd0e17dd455f46d9bc0948a60dfca5060c69", "Url": "https://api.github.com/repos/zx03092005/SoftwareStudioFinalProject", "Date": "2016-05-27T15:17:29Z"},
{"Line": "=>1273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.isDirectory()) { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2869/buggy-version/src.com.example.legendutils.Tools.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "8ea98095682a8b67dfba13f70a64690ab07c368e", "Url": "https://api.github.com/repos/NashLegend/LegendUtils", "Date": "2014-07-16T07:14:10Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDatalist.size()) <= position) { return view; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/2328/buggy-version/app.src.main.java.com.brothers.travelplanner.activities.input.autocomplete.AutoCompleteAdapter.java", "BodyUseAPI": [], "Fixed commit": "9b17dd59108f59882be4ca99a1fcb76e5fdc93fa", "Url": "https://api.github.com/repos/alanchoi13/TravelPlanner", "Date": "2017-06-07T12:27:42Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sessionServices.getToken()) != null) return \"redirect:/git2\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5367/buggy-version/src.main.java.git.info.controllers.Controller.java", "BodyUseAPI": [], "Fixed commit": "c0ceb82458dd52c2baae9264ce695e374059f27a", "Url": "https://api.github.com/repos/polskikiel/JavaInternship", "Date": "2017-11-15T22:56:28Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((runner) <= 0) { runner = 0; displayRunners(runner); }else { runner = (runner) - 1; displayRunners(runner); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/3338/buggy-version/app.src.main.java.com.example.android.scorekeeper1.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a5d762b9687cde0704c9191e67ab4ea048ed8a44", "Url": "https://api.github.com/repos/Redjack1888/ScoreKeeper1", "Date": "2017-03-25T22:49:04Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((cfg.getClassLoader()) == null) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/7871/buggy-version/core.src.main.java.org.ehcache.config.DefaultConfiguration.java", "BodyUseAPI": [], "Fixed commit": "5612dfc4c6668a14d9e2584cc2daf8e77d0bdc0c", "Url": "https://api.github.com/repos/ehcache/ehcache3", "Date": "2016-06-17T14:04:29Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.utils.dbcreator.DatabaseCreator.getDatabaseType(java.sql.Connection)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"oracle\".equals(databaseType)) { schema = org.wso2.carbon.is.migration.client.internal.ISMigrationServiceDataHolder.getIdentityOracleUser(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5215/buggy-version/modules.migration.migration-5.0.0_to_5.1.0.wso2-is-migration-client.src.main.java.org.wso2.carbon.is.migration.MigrationDatabaseCreator.java", "BodyUseAPI": [], "Fixed commit": "517688b1b5bb8cf8f047c20ebe58190c58465aa6", "Url": "https://api.github.com/repos/madurangasiriwardena/product-is", "Date": "2015-11-30T14:18:00Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.utils.dbcreator.DatabaseCreator.getDatabaseType(java.sql.Connection)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((!oracleUserChanged) && (\"oracle\".equals(databaseType))) && (line.contains(\"databasename :=\"))) { line = (\"databasename := '\" + (org.wso2.carbon.is.migration.client.internal.ISMigrationServiceDataHolder.getIdentityOracleUser())) + \"';\"; oracleUserChanged = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V2/5215/buggy-version/modules.migration.migration-5.0.0_to_5.1.0.wso2-is-migration-client.src.main.java.org.wso2.carbon.is.migration.MigrationDatabaseCreator.java", "BodyUseAPI": [], "Fixed commit": "517688b1b5bb8cf8f047c20ebe58190c58465aa6", "Url": "https://api.github.com/repos/madurangasiriwardena/product-is", "Date": "2015-11-30T14:18:00Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jace.config.DynamicSelection.getSelections().keySet().iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (i.hasNext()) { return i.next(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6890/buggy-version/src.main.java.jace.config.DynamicSelection.java", "BodyUseAPI": ["java.util.Iterator<? extends T>.next()"], "Fixed commit": "5542bb342508c4d2f19e97b585bbdcf4fc98902a", "Url": "https://api.github.com/repos/badvision/jace", "Date": "2016-02-15T05:00:20Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (settings == null) { settings = factory.getDefaultIngestJobSettings(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5956/buggy-version/Core.src.org.sleuthkit.autopsy.ingest.IngestJobConfigurator.java", "BodyUseAPI": [], "Fixed commit": "3129a1d65c70b84e1e024501cb1b2b6113b2243c", "Url": "https://api.github.com/repos/sleuthkit/autopsy", "Date": "2014-05-16T14:00:08Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (data != null) { org.wso2.carbon.event.processor.core.internal.storm.TopologyManager.stormConfig = backtype.storm.utils.Utils.readDefaultConfig(); org.wso2.carbon.event.processor.core.internal.storm.TopologyManager.stormConfig.putAll(data); }else { org.wso2.carbon.event.processor.core.internal.storm.TopologyManager.stormConfig = backtype.storm.utils.Utils.readStormConfig(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6737/buggy-version/components.event-processor.org.wso2.carbon.event.processor.core.src.main.java.org.wso2.carbon.event.processor.core.internal.storm.TopologyManager.java", "BodyUseAPI": [], "Fixed commit": "c184d3eb2119eac445c0caebc54d57f1efedae69", "Url": "https://api.github.com/repos/ayash/carbon-event-processing", "Date": "2015-02-06T18:57:53Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mapActivity.getMapLayers().getContextMenuLayer().getSelectedObjectName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (dest && (selected != null)) { target = selected.replaceAll(getString(R.string.context_menu_item_destination_point), \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8676/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivityActions.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "e62041ed6792daa52897315768d45d8d8c578d44", "Url": "https://api.github.com/repos/Bars107/Osmand", "Date": "2014-11-18T10:57:49Z"},
{"Line": "=>1425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (workbenchEntity instanceof de.cismet.cids.custom.beans.belis2.TdtaStandortMastCustomBean) { for (final de.cismet.commons.server.entity.WorkbenchEntity leuchte : ((de.cismet.cids.custom.beans.belis2.TdtaStandortMastCustomBean) (workbenchEntity)).getLeuchten()) { objectsToDelete.add(leuchte); } objectsToDelete.add(workbenchEntity); }else if (isNodeHaengeLeuchte(nodeToRemove)) { if (de.cismet.belis.gui.widget.WorkbenchWidget.LOG.isDebugEnabled()) { de.cismet.belis.gui.widget.WorkbenchWidget.LOG.debug(\"Node which will be removed is a haengeleuchte. Removing also virtual Standort\"); } final de.cismet.cids.custom.beans.belis2.TdtaStandortMastCustomBean virtualStandort = leuchteToVirtualStandortMap.get(((de.cismet.cids.custom.beans.belis2.TdtaLeuchtenCustomBean) (workbenchEntity))); if (virtualStandort != null) { getBroker().getMappingComponent().getFeatureCollection().removeFeature(virtualStandort); objectsToDelete.add(virtualStandort); }else { de.cismet.belis.gui.widget.WorkbenchWidget.LOG.warn(\"No virtual standort found for leuchte\"); } }else { objectsToDelete.add(((de.cismet.commons.server.entity.WorkbenchEntity) (entity))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/701/buggy-version/src.main.java.de.cismet.belis.gui.widget.WorkbenchWidget.java", "BodyUseAPI": ["java.util.Collection<de.cismet.commons.server.entity.WorkbenchEntity>.add(de.cismet.commons.server.entity.WorkbenchEntity)"], "Fixed commit": "d0f9d4c7909dee8d999eff5d08bda3b19246cf33", "Url": "https://api.github.com/repos/cismet/belis-client", "Date": "2015-04-02T14:16:43Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((fr.imag.adele.apam.apammavenplugin.StandaloneACRParser.repoAdmin) == null) || ((fr.imag.adele.apam.apammavenplugin.StandaloneACRParser.repoAdmin.listRepositories()) == null)) || ((fr.imag.adele.apam.apammavenplugin.StandaloneACRParser.repoAdmin.listRepositories().length) < 1)) { fr.imag.adele.apam.apammavenplugin.StandaloneACRParser.logger.warn(\"No valid repository, returning empty capability list\"); return capabilities; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4705/buggy-version/plugins.apam-maven-plugin.src.main.java.fr.imag.adele.apam.apammavenplugin.StandaloneACRParser.java", "BodyUseAPI": [], "Fixed commit": "d84cb743138bdc194789c42282fa7cbea67f54d4", "Url": "https://api.github.com/repos/AdeleResearchGroup/ApAM", "Date": "2014-08-13T13:09:45Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<Map.Node>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n.name.equals(goal.name)) { Map.printf(\"GOAL FOUND\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7468/buggy-version/Map.java", "BodyUseAPI": [], "Fixed commit": "7e36795d51e7c842b0ba34e7843ba18af135cf70", "Url": "https://api.github.com/repos/JonathanCLo/RITmap_search", "Date": "2017-03-16T23:09:00Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) >= (numPlayers)) { index = (index) % (numPlayers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8411/buggy-version/src.com.jeffsul.riskapp.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "1c14625a66ba2eff897f5c598e19be1d3c3553d8", "Url": "https://api.github.com/repos/Jeffsul/RiskApp", "Date": "2014-04-03T21:02:42Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getAbsolutePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(name.substring(((name.length()) - 4), name.length()).equalsIgnoreCase(\".pdf\"))) { name = name.concat(\".pdf\"); file = new java.io.File(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3189/buggy-version/src.edu.umn.genomics.component.SavePDF.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)"], "Fixed commit": "b652189bb9fd8fec8ab0b65a9a4e32f182f6a714", "Url": "https://api.github.com/repos/hiralv/TableViewNew", "Date": "2012-08-09T15:50:51Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.cask.cdap.api.common.Bytes.toString(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (co.cask.cdap.etl.batch.StructuredRecordWritable.schemaCache.containsKey(schemaStr)) { schema = co.cask.cdap.etl.batch.StructuredRecordWritable.schemaCache.get(schemaStr); }else { schema = co.cask.cdap.api.data.schema.Schema.parseJson(schemaStr); co.cask.cdap.etl.batch.StructuredRecordWritable.schemaCache.put(schemaStr, schema); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2125/buggy-version/cdap-app-templates.cdap-etl.cdap-etl-batch.src.main.java.co.cask.cdap.etl.batch.StructuredRecordWritable.java", "BodyUseAPI": ["co.cask.cdap.api.data.schema.Schema.parseJson(java.lang.String)", "java.util.Map<java.lang.String, co.cask.cdap.api.data.schema.Schema>.put(java.lang.String,co.cask.cdap.api.data.schema.Schema)", "java.util.Map<java.lang.String, co.cask.cdap.api.data.schema.Schema>.get(java.lang.String)"], "Fixed commit": "52a9271c4daa45c1a643350d5cf7731122e2e5ae", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2017-09-02T00:41:49Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4468/buggy-version/src.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "b21b3ad9c8db9b79133a0293dc43e4ca8503751e", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (el == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2127/buggy-version/WSSemanticMatching.src.wssemanticmatching.WSSemanticMatching.java", "BodyUseAPI": [], "Fixed commit": "1ae0ad87a2df25157d57f272e03f09f3da7b881f", "Url": "https://api.github.com/repos/victoraldecoa/WebServiceMatching", "Date": "2013-02-28T15:54:55Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.snowflake.client.core.HttpUtil.logger.isTraceEnabled()) { net.snowflake.client.core.HttpUtil.logger.trace(\"Cipher suites used: {}\", java.util.Arrays.toString(cipherSuites)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2097/buggy-version/src.main.java.net.snowflake.client.core.HttpUtil.java", "BodyUseAPI": ["net.snowflake.client.log.SFLogger.trace(java.lang.String,java.lang.String)"], "Fixed commit": "e9ebd08f287036d12cb45d6c93c4a05670ace941", "Url": "https://api.github.com/repos/snowflakedb/snowflake-jdbc", "Date": "2017-11-29T19:27:20Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5146/buggy-version/library.src.main.java.com.fingdo.statelayout.StateLayout.java", "BodyUseAPI": [], "Fixed commit": "e79b4da37aacbe618e58667a3b00a7447b2ad42d", "Url": "https://api.github.com/repos/fingdo/stateLayout", "Date": "2017-03-31T02:17:46Z"},
{"Line": "=>885", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.minecraftforge.oredict.OreDictionary.doesOreNameExist(((MaterialRegistry.AllowedProducts.INGOT.name().toLowerCase()) + oreDictNames))) { zmaster587.advancedRocketry.recipe.RecipesMachine.getInstance().addRecipe(zmaster587.advancedRocketry.TileRollingMachine.class, ore.getProduct(MaterialRegistry.AllowedProducts.PLATE), 300, 200, ((MaterialRegistry.AllowedProducts.INGOT.name().toLowerCase()) + oreDictNames)); if ((AllowedProducts.BLOCK.isOfType(ore.getAllowedProducts())) || (ore.isVanilla())) zmaster587.advancedRocketry.recipe.RecipesMachine.getInstance().addRecipe(zmaster587.advancedRocketry.block.BlockPress.class, ore.getProduct(MaterialRegistry.AllowedProducts.PLATE), 0, 0, ((MaterialRegistry.AllowedProducts.BLOCK.name().toLowerCase()) + oreDictNames)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4107/buggy-version/src.main.java.zmaster587.advancedRocketry.AdvancedRocketry.java", "BodyUseAPI": ["zmaster587.advancedRocketry.recipe.RecipesMachine.getInstance().addRecipe(java.lang.Class,ore.getProduct(MaterialRegistry.AllowedProducts.PLATE),int,int,((MaterialRegistry.AllowedProducts.INGOT.name().toLowerCase()) + oreDictNames))", "zmaster587.advancedRocketry.recipe.RecipesMachine.getInstance().addRecipe(java.lang.Class,ore.getProduct(MaterialRegistry.AllowedProducts.PLATE),int,int,((MaterialRegistry.AllowedProducts.BLOCK.name().toLowerCase()) + oreDictNames))"], "Fixed commit": "f06084034db3cff0e2a6c309a2fc47b1bb3c979f", "Url": "https://api.github.com/repos/zmaster587/AdvancedRocketry", "Date": "2016-06-03T21:12:25Z"},
{"Line": "=>879", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.minecraftforge.oredict.OreDictionary.doesOreNameExist(((MaterialRegistry.AllowedProducts.INGOT.name().toLowerCase()) + name))) zmaster587.advancedRocketry.recipe.RecipesMachine.getInstance().addRecipe(zmaster587.advancedRocketry.TileLathe.class, ore.getProduct(MaterialRegistry.AllowedProducts.STICK), 300, 200, ((MaterialRegistry.AllowedProducts.INGOT.name().toLowerCase()) + name));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4107/buggy-version/src.main.java.zmaster587.advancedRocketry.AdvancedRocketry.java", "BodyUseAPI": ["zmaster587.advancedRocketry.recipe.RecipesMachine.getInstance().addRecipe(java.lang.Class,ore.getProduct(MaterialRegistry.AllowedProducts.STICK),int,int,((MaterialRegistry.AllowedProducts.INGOT.name().toLowerCase()) + name))"], "Fixed commit": "f06084034db3cff0e2a6c309a2fc47b1bb3c979f", "Url": "https://api.github.com/repos/zmaster587/AdvancedRocketry", "Date": "2016-06-03T21:12:25Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((out) == null) { try { out = new java.io.BufferedOutputStream(new java.io.FileOutputStream(f)); } catch (java.io.IOException ioe) { logger.error(ioe.getMessage(), ioe); out = oldOut; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3267/buggy-version/rayo-server.src.main.java.com.rayo.server.cdr.FileCdrStorageStrategy.java", "BodyUseAPI": [], "Fixed commit": "2caeaa3a6e001c53f15bf276011a61e053320fa4", "Url": "https://api.github.com/repos/rayo/rayo-server", "Date": "2013-09-20T13:47:26Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (actualMotor1Vel > 255) actualMotor1Vel = 255;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6306/buggy-version/src.main.java.com.ociweb.iot.grove.motor_driver.MotorDriver_Transducer.java", "BodyUseAPI": [], "Fixed commit": "55df68fa5b0fb0996c14da5432ddc0980d59d5f4", "Url": "https://api.github.com/repos/oci-pronghorn/FogLight", "Date": "2017-07-25T13:14:04Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((end - start) > bestLength) return text.substring(start, end); else return text.substring(bestStart, bestEnd);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7132/buggy-version/src.real.QuadSuffix.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "66cf3069d8f7b5b1e7ad3e73c06a579837633b34", "Url": "https://api.github.com/repos/akarki15/suffix", "Date": "2014-12-11T08:21:24Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDead()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4688/buggy-version/src.eroi.Knight.java", "BodyUseAPI": [], "Fixed commit": "420b8a5becfb5e8c723b53379640eae26355a1a0", "Url": "https://api.github.com/repos/Cristof17/LOOP", "Date": "2014-11-09T23:45:42Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (has_field_advantage) { int field_increased_dmg = ((eroi.Knight.SLAM_BASE_DMG) + ((level) * (eroi.Knight.SLAM_LVL_INCREASE))) + (Calculus.Percent.getPercent(eroi.Knight.FIELD_DMG_INCREASE, eroi.Knight.SLAM_BASE_DMG)); p.decreaseHP(((field_increased_dmg + (Calculus.Percent.getPercent(eroi.Knight.PYROMANCER_SLAM_DMG_INCREASE, field_increased_dmg))) + ((level) * (eroi.Knight.SLAM_LVL_INCREASE)))); }else if (!(has_field_advantage)) { p.decreaseHP((((eroi.Knight.SLAM_BASE_DMG) + (Calculus.Percent.getPercent(eroi.Knight.PYROMANCER_SLAM_DMG_INCREASE, eroi.Knight.SLAM_BASE_DMG))) + ((level) * (eroi.Knight.SLAM_LVL_INCREASE)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4688/buggy-version/src.eroi.Knight.java", "BodyUseAPI": [], "Fixed commit": "420b8a5becfb5e8c723b53379640eae26355a1a0", "Url": "https://api.github.com/repos/Cristof17/LOOP", "Date": "2014-11-09T23:45:42Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.core.issue.workflow.StateMachine.state(issue.status())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (state == null) { throw new java.lang.IllegalArgumentException((\"Unknown status: \" + (issue.status()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1892/buggy-version/sonar-core.src.main.java.org.sonar.core.issue.workflow.IssueWorkflow.java", "BodyUseAPI": [], "Fixed commit": "da8cc3299f6c6e4f999a6dd04f9efdd070798dd7", "Url": "https://api.github.com/repos/SonarSource/sonar", "Date": "2013-06-03T04:51:08Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Random.nextInt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (random < 10) { mCommonRecyclerAdapter.onLoadMoreError(); }else { mCommonRecyclerAdapter.setIsHasLoadMore(true); mCommonRecyclerAdapter.addAll(getDatas()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7440/buggy-version/commonadapter-sample.src.main.java.com.github.zeng1990java.commonadapter_sample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3d0cd21136fe693af815beb74e975364f42f24cb", "Url": "https://api.github.com/repos/zeng1990java/CommonRecyclerAdapter", "Date": "2016-08-13T16:25:21Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.upmoon.alex.moongameoflife.LoadGOLoffline.loadBoard(getContext(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (imaboard != null) { com.upmoon.alex.moongameoflife.CurrentBoard.getInstance().setBoard(imaboard); startActivity(new android.content.Intent(getActivity(), com.upmoon.alex.moongameoflife.GameOfLifeActivity.class)); }else { android.widget.Toast.makeText(getActivity(), \"No save exists\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3482/buggy-version/app.src.main.java.com.upmoon.alex.moongameoflife.MenuFragment.java", "BodyUseAPI": ["com.upmoon.alex.moongameoflife.CurrentBoard.getInstance().setBoard(com.upmoon.alex.moongameoflife.GameOfLifeBoard)"], "Fixed commit": "9a16b4434751a5f9eb40d27133de5fdb9d5e2286", "Url": "https://api.github.com/repos/Kaybass/CSI-319-Project-2", "Date": "2016-11-17T23:16:54Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(json.isNull(\"permission_overwrites\"))) && guildIsLoaded) { org.json.JSONArray overrides = json.getJSONArray(\"permission_overwrites\"); for (int i = 0; i < (overrides.length()); i++) { createPermissionOverride(overrides.getJSONObject(i), channel); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1913/buggy-version/src.main.java.net.dv8tion.jda.core.entities.EntityBuilder.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "9a51172d112519c69c6c68f703617fca3c3b28ab", "Url": "https://api.github.com/repos/Kaaz/JDA", "Date": "2017-02-10T20:43:14Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((schedule1.getSchedule()) == null) || ((schedule2.getSchedule()) == null)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7846/buggy-version/okeanos.control.src.main.java.okeanos.control.entities.utilities.ScheduleUtil.java", "BodyUseAPI": [], "Fixed commit": "b092c66983c0642e95de01097c7eb237b27642e2", "Url": "https://api.github.com/repos/wolfgang-lausenhammer/Okeanos", "Date": "2014-04-08T15:28:22Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (source.isSalveOrRead()) { java.lang.String serverId = source.getConfig().getServerId(); if ((serverId != null) && (serverId.equals(source.getDbPool().getMasterServerId()))) { source.getDbPool().switchSource(source.getIndex(), true, \"This is a new master data source\"); } this.setSlaveBehindMaster(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4432/buggy-version/src.main.java.io.mycat.backend.jdbc.JDBCHeartbeat.java", "BodyUseAPI": ["io.mycat.backend.jdbc.JDBCDatasource.getIndex()", "source.getConfig().getServerId()", "java.lang.String.equals(source.getDbPool().getMasterServerId())", "source.getDbPool().getMasterServerId()", "io.mycat.backend.jdbc.JDBCDatasource.getConfig()", "io.mycat.backend.jdbc.JDBCDatasource.getDbPool()", "io.mycat.backend.jdbc.JDBCDatasource.getDbPool()", "source.getDbPool().switchSource(source.getIndex(),boolean,java.lang.String)"], "Fixed commit": "e3854c8b52580b8f68884aff7d19de03acf63d28", "Url": "https://api.github.com/repos/cloud-dev/Mycat-Server", "Date": "2016-06-24T07:11:00Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((milliseconds.length()) > 3) { milliseconds = milliseconds.substring(0, 3); s = ((s.substring(0, ((s.indexOf(\".\")) + 1))) + milliseconds) + (s.substring(s.indexOf(\"+\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3892/buggy-version/orc-engine-core.src.main.java.com.microsoft.services.orc.CalendarSerializer.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "aa4df6b199a2ecc8229837d5966f7f663cb3384d", "Url": "https://api.github.com/repos/OfficeDev/orc-for-java-shared", "Date": "2015-06-02T18:39:55Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (DotNetNamespaceStubUtil.ROOT_FOR_INDEXING.equals(qName)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4260/buggy-version/dotnet-psi-impl.src.org.mustbe.consulo.dotnet.lang.psi.impl.IndexBasedDotNetNamespaceAsElement.java", "BodyUseAPI": [], "Fixed commit": "9779d9666175bd6a36e07ef9d521e37f12b528e9", "Url": "https://api.github.com/repos/consulo/consulo-dotnet", "Date": "2015-08-01T20:57:07Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (transactionIsolation != (connection.getTransactionIsolation())) { connection.setTransactionIsolation(transactionIsolation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5279/buggy-version/hikaricp-java6.src.main.java.com.zaxxer.hikari.util.PoolUtilities.java", "BodyUseAPI": ["java.sql.Connection.setTransactionIsolation(int)"], "Fixed commit": "4c0c9711e13db8ad72f86093461fee7a12451ee6", "Url": "https://api.github.com/repos/leusonmario/HikariCP", "Date": "2014-11-12T03:58:20Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (transactionIsolation != (connection.getTransactionIsolation())) { connection.setTransactionIsolation(transactionIsolation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5279/buggy-version/hikaricp.src.main.java.com.zaxxer.hikari.util.PoolUtilities.java", "BodyUseAPI": ["java.sql.Connection.setTransactionIsolation(int)"], "Fixed commit": "4c0c9711e13db8ad72f86093461fee7a12451ee6", "Url": "https://api.github.com/repos/leusonmario/HikariCP", "Date": "2014-11-12T03:58:20Z"},
{"Line": "=>1146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.globalsight.util.StringUtil.isEmpty(userId)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8834/buggy-version/main6.envoy.src.java.com.globalsight.webservices.AmbassadorHelper.java", "BodyUseAPI": [], "Fixed commit": "822c246e9934327a70e0e735242023d0b888a844", "Url": "https://api.github.com/repos/tingley/globalsight", "Date": "2014-01-16T04:22:32Z"},
{"Line": "=>1150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.globalsight.everest.company.Company.getCompanyName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((user == null) || (!(companyName.equalsIgnoreCase(user.getCompanyName())))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8834/buggy-version/main6.envoy.src.java.com.globalsight.webservices.AmbassadorHelper.java", "BodyUseAPI": [], "Fixed commit": "822c246e9934327a70e0e735242023d0b888a844", "Url": "https://api.github.com/repos/tingley/globalsight", "Date": "2014-01-16T04:22:32Z"},
{"Line": "=>804", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (envsToSendTo.isEmpty()) { response.sendError(HttpServletResponse.SC_FORBIDDEN); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8772/buggy-version/src.com.dotcms.publisher.ajax.RemotePublishAjaxAction.java", "BodyUseAPI": [], "Fixed commit": "6458251034c3960ccef7a4db5e0f170ca4c85876", "Url": "https://api.github.com/repos/dotCMS/dotCMS", "Date": "2013-12-16T16:32:50Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x) >= ((Constants.WIDTH) - 87)) { x = (Constants.WIDTH) - 87; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7574/buggy-version/Java-Workshop.src.game.Player.java", "BodyUseAPI": [], "Fixed commit": "8933c31c9c1b922cfa22f1dc70a904a00770baaa", "Url": "https://api.github.com/repos/gergovOT/GameBetter", "Date": "2016-04-17T10:00:24Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x) <= 0) { x = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7574/buggy-version/Java-Workshop.src.game.Player.java", "BodyUseAPI": [], "Fixed commit": "8933c31c9c1b922cfa22f1dc70a904a00770baaa", "Url": "https://api.github.com/repos/gergovOT/GameBetter", "Date": "2016-04-17T10:00:24Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getMode(node)) == (Bit.BIT8)) { addOperation(new compiler.firm.backend.operations.MovOperation(\"movb does not clear the register before write\", Bit.BIT64, new compiler.firm.backend.storage.Constant(0), register)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5730/buggy-version/Compiler.src.compiler.firm.backend.X8664AssemblerGenerationVisitor.java", "BodyUseAPI": [], "Fixed commit": "eceb181af40a7823b1934c54a8de8d387daa205a", "Url": "https://api.github.com/repos/replimoc/compiler", "Date": "2014-12-25T01:02:14Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["JERVIS.DateGenerator.getCurrentTime()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sCurrentTime.equals(\"24:1\")) { JERVIS.Organiser.collectEvents(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/9172/buggy-version/src.JERVIS.Organiser.java", "BodyUseAPI": [], "Fixed commit": "d4ba0e2e02123a0d555a96a337c28c0d0e2b596d", "Url": "https://api.github.com/repos/Nytorian/J.E.R.V.I.S", "Date": "2016-04-23T16:59:25Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(tag.getFirstArg())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (matcher.find()) { final java.lang.String typeParamName = matcher.group(1).trim(); if (!(typeParamNames.contains(typeParamName))) { log(tag.getLineNo(), tag.getColumnNo(), com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck.UNUSED_TAG, JavadocTagInfo.PARAM.getText(), (((com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck.OPEN_ANGLE_BRACKET) + typeParamName) + (com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck.CLOSE_ANGLE_BRACKET))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8776/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck.java", "BodyUseAPI": ["java.lang.String.trim()", "java.util.regex.Matcher.group(int)"], "Fixed commit": "97c6af3f32cfcbe59a1a76ea5b4494c59292151a", "Url": "https://api.github.com/repos/Vladlis/checkstyle", "Date": "2015-09-12T15:20:20Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((ODNBXlite.Generator) == (ODNBXlite.GEN_BIOMELESS)) && (((ODNBXlite.MapTheme) == (ODNBXlite.THEME_NORMAL)) || ((ODNBXlite.MapTheme) == (ODNBXlite.THEME_WOODS)))) && ((ODNBXlite.MapFeatures) == (ODNBXlite.FEATURES_ALPHA11201))) { ODNBXlite.SnowCovered = (new java.util.Random().nextInt(((ODNBXlite.MapTheme) == (ODNBXlite.THEME_WOODS) ? 2 : 4))) == 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4539/buggy-version/src.client.nbxlite.nbxlite.gui.GuiCreateWorld2.java", "BodyUseAPI": ["java.util.Random.nextInt(((ODNBXlite.MapTheme) == (ODNBXlite.THEME_WOODS) ? 2 : 4))"], "Fixed commit": "7bf32dbf21c15c4a640bee9dd494f7d88d66cebe", "Url": "https://api.github.com/repos/Exalm/Minecraft-mods", "Date": "2012-12-09T18:46:41Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (show) { progressBar.setVisibility(View.VISIBLE); }else { progressBar.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3422/buggy-version/app.src.main.java.com.example.ujjwal.broker.Login.View.LoginMainImp.java", "BodyUseAPI": [], "Fixed commit": "741f05d27ca439b370644d60dc1cda6d396a74f0", "Url": "https://api.github.com/repos/CodeNicely/BrokerApp", "Date": "2016-10-13T16:26:57Z"},
{"Line": "=>1860", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["parser.getLocalVarTable().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (localVarTableEntry == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5678/buggy-version/src.main.java.org.sdmlib.storyboards.Storyboard.java", "BodyUseAPI": [], "Fixed commit": "cf04720ae7d618085b03dd4339898a527b8b385e", "Url": "https://api.github.com/repos/fujaba/SDMLib", "Date": "2015-10-10T21:07:03Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((dc.fieldNames[i]) == null) || ((dc.fieldNames.length) == 0)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5726/buggy-version/CrawlerFinanzen.src.main.java.de.vv.crawler.CrawlerAnleihen.DBCon.java", "BodyUseAPI": [], "Fixed commit": "e265df4b0fa0bee535d733a295b1f44e84d314b3", "Url": "https://api.github.com/repos/Niederegger/SimpleCrawler", "Date": "2017-08-10T15:23:15Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mostRational.isValid())) { gameOver(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4737/buggy-version/src.GameStateGame.java", "BodyUseAPI": [], "Fixed commit": "3adedcb9b90be47982a75cb8409558d20272d94e", "Url": "https://api.github.com/repos/akateiva/Pentetris", "Date": "2015-12-05T17:07:15Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((toStore.getAmount()) < 1) return toStore;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/926/buggy-version/src.org.saga.buildings.storage.StorageArea.java", "BodyUseAPI": [], "Fixed commit": "309a5f8514914b67826dbb29fdb2522e72afcd19", "Url": "https://api.github.com/repos/andfRa/Saga", "Date": "2012-07-19T00:18:56Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((memberList.getModel().getSize()) == 0) { contactGroups.add(cal.getContactGroupByName(\"Default\")); }else { for (int i = 0; i < (memberList.getModel().getSize()); i++) { contactGroups.add(((edu.chl.calendarplusplus.model.IContactGroup) (memberList.getModel().getElementAt(i)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6386/buggy-version/calendarplusplus.src.main.java.edu.chl.calendarplusplus.view.AddContactCard.java", "BodyUseAPI": ["javax.swing.JList.getModel()", "javax.swing.JList.getModel()", "javax.swing.ListModel.getSize()", "java.util.List<edu.chl.calendarplusplus.model.IContactGroup>.add(java.lang.Object)", "javax.swing.ListModel.getElementAt(int)"], "Fixed commit": "ff036ef555d795ed73868b8dafa19377e2efe880", "Url": "https://api.github.com/repos/mictra/ooprojekt2015", "Date": "2015-05-19T14:01:19Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstLine) { document.Document currentDocument = new document.Document(id, idMember, timestamp, text, geoLat, geoLng); parsedContent.add(currentDocument); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6067/buggy-version/src.parse.CSVParser.java", "BodyUseAPI": [], "Fixed commit": "edc5fecf8557164fb1f411a4b8653cfd183deed9", "Url": "https://api.github.com/repos/sawankh/Microblogging", "Date": "2015-12-03T18:03:07Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (SHOW_HITBOXES) e.drawHitBox(g);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2994/buggy-version/tower-game.src.tower.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "8d6d7c6c214c0294168ec9d139eb79074dad07ec", "Url": "https://api.github.com/repos/buckleyjamesc/tower-game", "Date": "2016-06-05T15:48:18Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gp.e3.autheo.authorization.domain.entities.Permission.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (permissionId <= 0) { permissionId = createPermission(permission); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2962/buggy-version/src.main.java.gp.e3.autheo.authorization.domain.business.PermissionBusiness.java", "BodyUseAPI": [], "Fixed commit": "792de1675ee6ffb5b6fd46a193f75d1a2186c3b6", "Url": "https://api.github.com/repos/granpanda/autheo", "Date": "2014-08-02T16:03:10Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((file.getId()) != null) { dbFile = ((com.naples.file.File) (session.get(com.naples.file.File.class, file.getId()))); if (dbFile != null) { dbFile.build(context); dbFile.loadLastModified(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4499/buggy-version/src.main.java.com.naples.rest.FileService.java", "BodyUseAPI": ["com.naples.json.JsonFile.getId()", "org.hibernate.Session.get(java.lang.Class,file.getId())"], "Fixed commit": "f08ada5f5af12ff0dbdf8d34511f040b37b2f1b3", "Url": "https://api.github.com/repos/pleak-tools/pleak-backend", "Date": "2016-07-27T13:48:19Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (service.equals(\"0\")) { service = \"Deliver\"; }else if (service.equals(\"1\")) { service = \"Repair\"; }else service = \"All\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5287/buggy-version/app.src.main.java.com.raneem.omer.jeepgas_driver.OrderDetails.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "679540f01493a1fa1cd81a63c7fbf946961b8b82", "Url": "https://api.github.com/repos/raneemib/JeepGas_Driver", "Date": "2017-02-05T22:05:20Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirst) fromServer();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1950/buggy-version/app.src.main.java.com.fuentesj.ttt.services.ChatService.java", "BodyUseAPI": [], "Fixed commit": "d7a7794151c1401ac5c9aa5dd50f5fb3e4f94649", "Url": "https://api.github.com/repos/fuentesj11/TTT", "Date": "2017-01-06T16:16:25Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (statusCallbackUrl != null) { optionalParams.addIfValueNotNull(TwilioParamater.STATUS_CALLBACK, statusCallbackUrl); optionalParams.addIfValueNotNull(TwilioParamater.STATUS_CALLBACK_METHOD, org.mule.module.twilio.TwilioClient.DEFAULT_CALLBACK_HTTP_METHOD); }else if (statusCallback != null) { optionalParams.addIfValueNotNull(TwilioParamater.STATUS_CALLBACK, statusCallback.getUrl()); optionalParams.addIfValueNotNull(TwilioParamater.STATUS_CALLBACK_METHOD, org.mule.module.twilio.TwilioClient.DEFAULT_CALLBACK_HTTP_METHOD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3034/buggy-version/src.main.java.org.mule.module.twilio.TwilioClient.java", "BodyUseAPI": ["org.mule.module.twilio.TwilioParameters.addIfValueNotNull(TwilioParamater.STATUS_CALLBACK,java.lang.String)"], "Fixed commit": "1473a42d269a2577daa8c3ae3c98a12d5432dec4", "Url": "https://api.github.com/repos/mikekey/twilio-connector", "Date": "2014-06-19T20:57:21Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (remove) mAdapter.notifyItemRemoved(position); else mAdapter.notifyItemChanged(position);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3649/buggy-version/CriminalIntent.app.src.main.java.com.example.savagavran.criminalintent.CrimeListFragment.java", "BodyUseAPI": [], "Fixed commit": "bd0d7cdb828ce9b4b47e6ba25fb600086134a22c", "Url": "https://api.github.com/repos/gavransava/NerdRanchApps", "Date": "2016-10-27T16:21:25Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((grid[i][j]) != (-1)) { if (i > 0) { if ((holder[(i + 1)][j]) >= 1) { grid[i][j] += holder[(i + 1)][j]; } } if (j > 0) { if ((holder[i][(j + 1)]) >= 1) { grid[i][j] += holder[i][(j + 1)]; } } if (j < ((grid[0].length) - 1)) { if ((holder[(i - 1)][j]) >= 1) { grid[i][j] += holder[(i - 1)][j]; } } if (j < ((grid[0].length) - 1)) { if ((holder[i][(j - 1)]) >= 1) { grid[i][j] += holder[i][(j - 1)]; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5265/buggy-version/04USACO.Silver.java", "BodyUseAPI": [], "Fixed commit": "6f1302c3d07d72903086724913098e1cb4a6a09b", "Url": "https://api.github.com/repos/sunnysompalli/MKS22X", "Date": "2016-03-03T01:05:00Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.offset) >= (this.data.length())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5280/buggy-version/src.main.java.de.claas.parser.State.java", "BodyUseAPI": [], "Fixed commit": "734daf9da35b10a902238ee285758285c9ac40dd", "Url": "https://api.github.com/repos/claasahl/PARSER", "Date": "2016-09-28T19:21:06Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restlet.representation.Representation.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((text == null) || ((text.trim()) == \"\")) { throw new java.lang.Exception(\"Text can't be empty. Please add some content and try again.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7253/buggy-version/bragg.nbi.au.gov.ansto.bragg.nbi.server.src.au.gov.ansto.bragg.nbi.server.notebook.NotebookRestlet.java", "BodyUseAPI": [], "Fixed commit": "91335c1417bceb862823bc3d71441927dd73ef58", "Url": "https://api.github.com/repos/Gumtree/gumtree", "Date": "2017-09-01T01:08:58Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element instanceof org.eclipse.core.resources.IResource) { try { ((org.eclipse.core.resources.IResource) (element)).getParent().refreshLocal(IResource.DEPTH_ZERO, new org.eclipse.core.runtime.NullProgressMonitor()); ((org.eclipse.core.resources.IResource) (element)).getProject().refreshLocal(IResource.DEPTH_ZERO, new org.eclipse.core.runtime.NullProgressMonitor()); ((org.eclipse.core.resources.IResource) (element)).refreshLocal(IResource.DEPTH_ZERO, new org.eclipse.core.runtime.NullProgressMonitor()); } catch (org.eclipse.core.runtime.CoreException e) { uk.ac.diamond.scisoft.customprojects.rcp.projects.HideDeepProjects.logger.error((\"error refreshing project explorer\" + (e.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4505/buggy-version/uk.ac.diamond.scisoft.customprojects.rcp.src.uk.ac.diamond.scisoft.customprojects.rcp.projects.HideDeepProjects.java", "BodyUseAPI": [], "Fixed commit": "fb6d4200b465e0675d2a2372b58255ec66b87f9d", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2012-06-08T10:04:42Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.labs) != null) { this.labs.newTimeButtonActionPerformed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2575/buggy-version/src.GUI.SubjectsPanel.ChaosMode.SubjectPanelChaos.java", "BodyUseAPI": [], "Fixed commit": "8ee15101705c4d1ff80d8e66d891f471bab1c234", "Url": "https://api.github.com/repos/louay-hesham/ScheduleGenerator", "Date": "2017-02-04T00:07:41Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.tutorials) != null) { this.tutorials.newTimeButtonActionPerformed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2575/buggy-version/src.GUI.SubjectsPanel.ChaosMode.SubjectPanelChaos.java", "BodyUseAPI": [], "Fixed commit": "8ee15101705c4d1ff80d8e66d891f471bab1c234", "Url": "https://api.github.com/repos/louay-hesham/ScheduleGenerator", "Date": "2017-02-04T00:07:41Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (errors.contains(\"errcode\")) { com.riversoft.weixin.common.exception.WxError wxError = com.riversoft.weixin.common.exception.WxError.fromJson(errors); throw new com.riversoft.weixin.common.exception.WxRuntimeException(wxError); }else { throw new com.riversoft.weixin.common.exception.WxRuntimeException(999, errors); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8770/buggy-version/weixin-common.src.main.java.com.riversoft.weixin.common.WxClient.java", "BodyUseAPI": ["com.riversoft.weixin.common.exception.WxError.fromJson(java.lang.String)"], "Fixed commit": "e08932c3a93dae6db47b629bbe7a62e8a591cabc", "Url": "https://api.github.com/repos/borball/weixin-sdk", "Date": "2016-04-16T14:33:01Z"},
{"Line": "=>838", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((obj.getRowLimit()) != (java.lang.Integer.MAX_VALUE)) { this.limit = new java.lang.Integer(obj.getRowLimit()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6186/buggy-version/connectors.translator-mongodb.src.main.java.org.teiid.translator.mongodb.MongoDBSelectVisitor.java", "BodyUseAPI": ["org.teiid.translator.mongodb.Limit.getRowLimit()"], "Fixed commit": "057a37f633adcd30c86848690fbd4a7c4c1f36e7", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2014-06-06T14:21:45Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((counter) == 5) counter = 4;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1206/buggy-version/src.main.java.com.jeffreychan.yutnori.BoardActivity.java", "BodyUseAPI": [], "Fixed commit": "30c0934655bf9e53f65cb837225aa50092bde01a", "Url": "https://api.github.com/repos/superjeffreyc/Yut", "Date": "2016-04-16T23:22:48Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (mMediaPlayer)) { mMediaPlayer.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1666/buggy-version/app.src.main.java.com.hedgehogproductions.therapyguide.listenservice.ListenService.java", "BodyUseAPI": [], "Fixed commit": "34d7b44fedc2f2690433ddbf4dc60a140a8114fb", "Url": "https://api.github.com/repos/jgevans/TherapyGuide", "Date": "2017-09-22T16:47:18Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (na != 0) java.lang.System.arraycopy(this.a, pa, this.data, dest, na);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4823/buggy-version/plugins.org.python.pydev.jython.src_jython.org.python.core.MergeState.java", "BodyUseAPI": ["java.lang.System.arraycopy(org.python.core.PyObject[],int,org.python.core.PyObject[],int,int)"], "Fixed commit": "0b93a318ff25823b386288b4825660d4a4316d79", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2011-12-20T15:40:52Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nb != 0) java.lang.System.arraycopy(this.a, 0, this.data, (dest - (nb - 1)), nb);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4823/buggy-version/plugins.org.python.pydev.jython.src_jython.org.python.core.MergeState.java", "BodyUseAPI": ["java.lang.System.arraycopy(org.python.core.PyObject[],int,org.python.core.PyObject[],int,int)"], "Fixed commit": "0b93a318ff25823b386288b4825660d4a4316d79", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2011-12-20T15:40:52Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nucleusContext.getPersistenceConfiguration().getPersistenceProperties().get(\"datanucleus.connectionurl\")) == null) { return super.loadPersistenceUnit(pumd, loader); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3012/buggy-version/jpa.src.main.java.com.force.sdk.jpa.ForceMetaDataManager.java", "BodyUseAPI": [], "Fixed commit": "4a548d565e98e6488b71f85891130e9b9396da84", "Url": "https://api.github.com/repos/jwetzler/java-sdk", "Date": "2011-08-15T19:56:04Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["package_downloader.unZipIt(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(rootFolder.substring(0, ((rootFolder.length()) - 1)).equals(packagename))) { if (to.exists()) { package_downloader.deleteFolder(to); } from.renameTo(to); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3171/buggy-version/java-classes.package_downloader.java", "BodyUseAPI": [], "Fixed commit": "988ee73323915d6daafc68aca12bed41c3bea872", "Url": "https://api.github.com/repos/natcl/max_package_downloader", "Date": "2013-04-24T20:22:35Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity().getActionBar().getNavigationMode()) == (android.app.ActionBar.NAVIGATION_MODE_LIST)) getActivity().getActionBar().setSelectedNavigationItem(getRecentNavIndex());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2115/buggy-version/src.org.qii.weiciyuan.ui.maintimeline.FriendsTimeLineFragment.java", "BodyUseAPI": [], "Fixed commit": "166392fd3cea6a7adb7a0566fdfe9a5c33b4eab0", "Url": "https://api.github.com/repos/Jewelzqiu/weiciyuan", "Date": "2013-04-11T12:56:28Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((enrollment(enrollmentRequest)) == null) { enroll(enrollmentRequest); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/9091/buggy-version/ghana-national-core.src.main.java.org.motechproject.ghana.national.repository.AllSchedules.java", "BodyUseAPI": ["org.motechproject.ghana.national.repository.AllSchedules.enroll(org.motechproject.scheduletracking.api.service.EnrollmentRequest)"], "Fixed commit": "0dc0c9a67e7b0952869a648cc41c18dd10f2c05e", "Url": "https://api.github.com/repos/motech/GHANA-National", "Date": "2012-03-12T12:45:39Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.BASE_1_1)) { android.util.Log.i(TAG, (\"getProcessUID(), processUID = \" + (java.lang.Process.myUid()))); return java.lang.Process.myUid(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4070/buggy-version/AIDL-Android.src.com.nithin.sample.aidl.RemoteService.java", "BodyUseAPI": [], "Fixed commit": "8d7102005d75c4560e5e1e9bdf62ce36901de40d", "Url": "https://api.github.com/repos/nithinwarier/nithin-warriers-code-base", "Date": "2017-10-09T07:49:08Z"},
{"Line": "=>479", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.getElement().getType().equals(filereaders.individual.SUBELEMENT_TYPE_BOX)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((isBox && (eDownstream != null)) && (filereaders.individual.SUBELEMENT_TYPE_BAND.equals(eDownstream.getElement().getType()))) { if (filereaders.individual.SUBELEMENT_TYPE_SKIP_BOX.equals(change)) tempAssDss.put(eDownstream, filereaders.individual.SUBELEMENT_TYPE_SKIP_BAND); }else if (((!isBox) && (eDownstream != null)) && (filereaders.individual.SUBELEMENT_TYPE_BOX.equals(eDownstream.getElement().getType()))) { if (filereaders.individual.SUBELEMENT_TYPE_SKIP_BAND.equals(change)) tempAssDss.put(eDownstream, filereaders.individual.SUBELEMENT_TYPE_SKIP_BOX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5545/buggy-version/filereaders.individual.EctypalElement.java", "BodyUseAPI": ["filereaders.individual.SUBELEMENT_TYPE_BOX.equals(eDownstream.getElement().getType())", "java.util.Map<filereaders.tools.LinkedArrayList.Entry<filereaders.individual.EctypalSubElement.EctypalSubElement>, java.lang.String>.put(filereaders.tools.LinkedArrayList.Entry<filereaders.individual.EctypalSubElement.EctypalSubElement>,filereaders.individual.SUBELEMENT_TYPE_SKIP_BOX)", "java.util.Map<filereaders.tools.LinkedArrayList.Entry<filereaders.individual.EctypalSubElement.EctypalSubElement>, java.lang.String>.put(filereaders.tools.LinkedArrayList.Entry<filereaders.individual.EctypalSubElement.EctypalSubElement>,filereaders.individual.SUBELEMENT_TYPE_SKIP_BAND)", "eDownstream.getElement().getType()", "filereaders.tools.LinkedArrayList.Entry<filereaders.individual.EctypalSubElement.EctypalSubElement>.getElement()"], "Fixed commit": "9674cfeb62f1fdc46f976c97d6bf5c53a257bff6", "Url": "https://api.github.com/repos/ljuan/gbhit", "Date": "2013-07-15T09:56:33Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.evercam.androidapp.sharing.SharingActivity.evercamCamera) != null) { new java.lang.Thread(new io.evercam.androidapp.tasks.ValidateRightsRunnable(this, io.evercam.androidapp.sharing.SharingActivity.evercamCamera.getCameraId())).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6672/buggy-version/evercamPlay.src.main.java.io.evercam.androidapp.sharing.SharingActivity.java", "BodyUseAPI": [], "Fixed commit": "5b91a02678ef93f3554c3b2d7ac1357beeda5fad", "Url": "https://api.github.com/repos/evercam/evercam-android", "Date": "2015-11-20T10:47:46Z"},
{"Line": "=>731", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.evercam.androidapp.dto.AppData.defaultUser) != null) { new io.evercam.androidapp.authentication.EvercamAccount(activity).remove(AppData.defaultUser.getEmail(), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6672/buggy-version/evercamPlay.src.main.java.io.evercam.androidapp.CamerasActivity.java", "BodyUseAPI": [], "Fixed commit": "5b91a02678ef93f3554c3b2d7ac1357beeda5fad", "Url": "https://api.github.com/repos/evercam/evercam-android", "Date": "2015-11-20T10:47:46Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (type.equalsIgnoreCase(\"Libraries\")) { file = new java.io.File(librariesDir, name); name = \"libraries/\" + name; }else if (type.equalsIgnoreCase(\"Launcher\")) { java.lang.String version = element.getAttribute(\"version\"); if (!(getVersion().equalsIgnoreCase(version))) { if (getVersion().equalsIgnoreCase(\"%VERSION%\")) { continue; }else { console.log((((\"Update to Launcher found. Current version: \" + (this.version)) + \", New version: \") + version)); downloadUpdate(); } }else { continue; } }else { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5343/buggy-version/src.com.atlauncher.data.Settings.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "69da014941dabea318803dbbd6a46731815e9593", "Url": "https://api.github.com/repos/RyanTheAllmighty/ATLauncher", "Date": "2013-10-18T00:38:09Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["NameResolver.Factory.newNameResolver(java.net.URI,io.grpc.Attributes)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (resolver == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8625/buggy-version/core.src.main.java.io.grpc.internal.AbstractManagedChannelImplBuilder.java", "BodyUseAPI": [], "Fixed commit": "429afe3a9da1f82d6ccaefb71e8d0a99ede0203c", "Url": "https://api.github.com/repos/zpencer/grpc-java", "Date": "2017-04-27T17:22:16Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loadingLayout) != null) loadingLayout.setVisibility(View.INVISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6114/buggy-version/app.src.main.java.com.example.ismailamrani.gae.ui.base.LoadingActivity.java", "BodyUseAPI": [], "Fixed commit": "615672b55d7f29aed0655da9415a829b5dc5f6b1", "Url": "https://api.github.com/repos/DeveloperXY/GAE", "Date": "2016-06-06T18:39:12Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.todoroo.astrid.service.ThemeService.getTheme()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((themeSetting == (R.style.Theme)) || (themeSetting == (R.style.Theme_Transparent))) { if (ics) theme = R.style.TEA_Dialog_ICS; else theme = R.style.TEA_Dialog; }else { if (ics) theme = R.style.TEA_Dialog_White_ICS; else theme = R.style.TEA_Dialog_White; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6071/buggy-version/astrid.src.com.todoroo.astrid.service.ThemeService.java", "BodyUseAPI": [], "Fixed commit": "19835e50452559a89fd6ec3454dff0bd40db4677", "Url": "https://api.github.com/repos/todoroo/astrid", "Date": "2012-10-11T00:46:37Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.rascalmpl.values.uptr.SymbolAdapter.isLex(symbol)) { return regularExpressionsMap.containsKey(((org.eclipse.imp.pdb.facts.IString) (symbol.get(\"name\"))).getValue()); }else if (org.rascalmpl.values.uptr.SymbolAdapter.isIterStar(symbol)) { return isRegularExpression(getSymbolCons(symbol)); }else if (org.rascalmpl.values.uptr.SymbolAdapter.isIterStarSeps(symbol)) { return isRegularExpression(getSymbolCons(symbol)); }else if (org.rascalmpl.values.uptr.SymbolAdapter.isIterPlusSeps(symbol)) { return isRegularExpression(getSymbolCons(symbol)); }else if (org.rascalmpl.values.uptr.SymbolAdapter.isIterPlus(symbol)) { return isRegularExpression(getSymbolCons(symbol)); }else if (org.rascalmpl.values.uptr.SymbolAdapter.isAlt(symbol)) { org.eclipse.imp.pdb.facts.ISet alts = ((org.eclipse.imp.pdb.facts.ISet) (symbol.get(\"alternatives\"))); for (org.eclipse.imp.pdb.facts.IValue i : alts) { if (!(isRegularExpression(((org.eclipse.imp.pdb.facts.IConstructor) (i))))) { return false; } } return true; }else if (org.rascalmpl.values.uptr.SymbolAdapter.isSequence(symbol)) { org.eclipse.imp.pdb.facts.IList symbols = ((org.eclipse.imp.pdb.facts.IList) (symbol.get(\"symbols\"))); for (org.eclipse.imp.pdb.facts.IValue i : symbols) { if (!(isRegularExpression(((org.eclipse.imp.pdb.facts.IConstructor) (i))))) { return false; } } return true; }else if (org.rascalmpl.values.uptr.SymbolAdapter.isCharClass(symbol)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3197/buggy-version/src.org.rascalmpl.parser.GrammarToJigll.java", "BodyUseAPI": ["org.rascalmpl.parser.GrammarToJigll.getSymbolCons(org.eclipse.imp.pdb.facts.IConstructor)", "org.eclipse.imp.pdb.facts.IConstructor.get(java.lang.String)", "org.rascalmpl.values.uptr.SymbolAdapter.isAlt(org.eclipse.imp.pdb.facts.IConstructor)", "org.eclipse.imp.pdb.facts.IConstructor.get(java.lang.String)", "org.rascalmpl.values.uptr.SymbolAdapter.isIterPlus(org.eclipse.imp.pdb.facts.IConstructor)", "java.util.Map<java.lang.String, org.jgll.regex.RegularExpression>.containsKey(((org.eclipse.imp.pdb.facts.IString) (symbol.get(\"name\"))).getValue())", "org.rascalmpl.parser.GrammarToJigll.getSymbolCons(org.eclipse.imp.pdb.facts.IConstructor)", "org.rascalmpl.parser.GrammarToJigll.isRegularExpression(org.eclipse.imp.pdb.facts.IConstructor)", "org.rascalmpl.values.uptr.SymbolAdapter.isIterStarSeps(org.eclipse.imp.pdb.facts.IConstructor)", "org.eclipse.imp.pdb.facts.IConstructor.get(java.lang.String)", "org.rascalmpl.parser.GrammarToJigll.getSymbolCons(org.eclipse.imp.pdb.facts.IConstructor)", "org.rascalmpl.values.uptr.SymbolAdapter.isIterPlusSeps(org.eclipse.imp.pdb.facts.IConstructor)", "org.rascalmpl.parser.GrammarToJigll.isRegularExpression(org.eclipse.imp.pdb.facts.IConstructor)", "org.rascalmpl.values.uptr.SymbolAdapter.isIterStar(org.eclipse.imp.pdb.facts.IConstructor)", "((org.eclipse.imp.pdb.facts.IString) (symbol.get(\"name\"))).getValue()", "org.rascalmpl.values.uptr.SymbolAdapter.isCharClass(org.eclipse.imp.pdb.facts.IConstructor)", "org.rascalmpl.parser.GrammarToJigll.isRegularExpression(org.eclipse.imp.pdb.facts.IConstructor)", "org.rascalmpl.values.uptr.SymbolAdapter.isSequence(org.eclipse.imp.pdb.facts.IConstructor)", "org.rascalmpl.parser.GrammarToJigll.isRegularExpression(org.eclipse.imp.pdb.facts.IConstructor)", "org.rascalmpl.parser.GrammarToJigll.getSymbolCons(org.eclipse.imp.pdb.facts.IConstructor)"], "Fixed commit": "a0cf96334e152d7896b9731d7ae71ab398120744", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2014-01-10T00:31:50Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getLoaderManager().getLoader(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((loader != null) && (loader.isReset())) { getLoaderManager().destroyLoader(com.maoyuchaxue.catfishclubnewsapp.fragments.NewsListFragment.NEWS_CURSOR_LOADER_ID); }else { mLoader = getLoaderManager().initLoader(com.maoyuchaxue.catfishclubnewsapp.fragments.NewsListFragment.NEWS_CURSOR_LOADER_ID, args, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1035/buggy-version/app.src.main.java.com.maoyuchaxue.catfishclubnewsapp.fragments.NewsListFragment.java", "BodyUseAPI": [], "Fixed commit": "8e2a42a2d40414fd002738a078d06e8fddd8a991", "Url": "https://api.github.com/repos/maoyuchaxue/CatfishClubNewsApp", "Date": "2017-09-06T16:25:23Z"},
{"Line": "=>15", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cookies.length) >= 1) { for (javax.servlet.http.Cookie c : cookies) { if (c.getName().equals(\"uuid\")) { return c.getValue(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2932/buggy-version/secret.src.main.java.com.ethohampton.secret.Util.UUIDs.java", "BodyUseAPI": [], "Fixed commit": "9697f4bbfd49592618d5b4506f6d9b6798f5769a", "Url": "https://api.github.com/repos/EMH333/Secret-Keeper", "Date": "2017-09-30T01:33:29Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (blob == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6559/buggy-version/app.src.main.java.com.maoyuchaxue.catfishclubnewsapp.data.ResourceSource.java", "BodyUseAPI": [], "Fixed commit": "bded59af904daab3cbe8d6b87aa752d17c85747d", "Url": "https://api.github.com/repos/maoyuchaxue/CatfishClubNewsApp", "Date": "2017-09-10T14:02:45Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"Canceled\".equals(e.getMessage()))) { notifyDownloadError(url, e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5717/buggy-version/app.src.main.java.com.mcxtzhang.downloadmanager.download.ZDownloadManager.java", "BodyUseAPI": ["com.mcxtzhang.downloadmanager.download.ZDownloadManager.1.notifyDownloadError(java.lang.String,java.io.IOException)"], "Fixed commit": "60d40cd279f4c1f755355ed91f9f136c472b2b38", "Url": "https://api.github.com/repos/mcxtzhang/DownloadManager", "Date": "2017-08-22T13:41:08Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["infastructure.filetype.HDirectory.listFiles(java.io.FileFilter)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (files != null) { hFiles = new java.util.ArrayList<>(files.length); for (int i = 0; i != (files.length); ++i) { hFiles.add(i, constructor.make(files[i])); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5722/buggy-version/src.infastructure.filetype.HDirectory.java", "BodyUseAPI": ["functional.BiSupplier<T, java.io.File>.make(java.io.File)", "java.util.ArrayList<T>.add(int,constructor.make(files[i]))"], "Fixed commit": "3a199f4f74fcc4421bc1e4642dd102ae5bd87410", "Url": "https://api.github.com/repos/ImaginaryNumb3r/Hephaestus", "Date": "2017-05-26T18:06:23Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.content.ContextCompat.checkSelfPermission(getContext(), Manifest.permission.ACCESS_FINE_LOCATION)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3883/buggy-version/app.src.main.java.it.faerb.herakles.TrackFragment.java", "BodyUseAPI": [], "Fixed commit": "21871dfb290248c22fc8a11c5c5464a1044ebcee", "Url": "https://api.github.com/repos/Faerbit/Herakles", "Date": "2017-03-08T16:55:03Z"},
{"Line": "=>966", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((roiManager) != null) { ij.gui.Roi[] roiArray = roiManager.getSelectedRoisAsArray(); if ((roiArray.length) == 0) { roiManager.close(); roiManager = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3051/buggy-version/src.main.java.epigraph.ImageProcessingWindow.java", "BodyUseAPI": [], "Fixed commit": "96435ff0b62ab866f5e2629af11ffdba8e03375b", "Url": "https://api.github.com/repos/ComplexOrganizationOfLivingMatter/Epigraph", "Date": "2017-10-13T15:42:22Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getFirstChild()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (data_node == null) { return \"\"; }else { return data_node.getNodeValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/135/buggy-version/src.contactsmanager.XmlDataStore.java", "BodyUseAPI": ["org.w3c.dom.Node.getNodeValue()"], "Fixed commit": "716bdd9b67b393389611ba2e0845595b3f551f58", "Url": "https://api.github.com/repos/BBK-PiJ-2012-01/ContactManager", "Date": "2013-01-08T14:41:50Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["MediaStore.Images.Media.getBitmap(getContentResolver(),android.net.Uri)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bitmap == null) { throw new java.lang.IllegalStateException((\"Impossible to generate a Bitmap from the uri: \" + (uri.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4628/buggy-version/app.src.main.java.com.braisgabin.pokescreenshot.ScreenshotService.java", "BodyUseAPI": [], "Fixed commit": "c35ee178cecabc3edad7dc526c8c15668c01adaa", "Url": "https://api.github.com/repos/BraisGabin/pokescreenshot", "Date": "2016-11-09T21:02:42Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (subType.equalsIgnoreCase(\"UUID\")) event.setReplaced(new net.aufdemrand.denizen.tags.core.Element(java.util.UUID.randomUUID().toString()).getAttribute(attribute.fulfill(2))); else if (subType.equalsIgnoreCase(\"DUUID\")) event.setReplaced(new net.aufdemrand.denizen.tags.core.Element(net.aufdemrand.denizen.scripts.queues.ScriptQueue._getNextId()).getAttribute(attribute.fulfill(2)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3224/buggy-version/src.main.java.net.aufdemrand.denizen.tags.core.UtilTags.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "67783c66b94f4759946a548efb42b068652fe2d5", "Url": "https://api.github.com/repos/Morphan1/Denizen", "Date": "2014-01-18T20:39:11Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstWayBlockMixed) { copyPartial(ways.getStart(), EntityType.Way, blockWriterWays); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3735/buggy-version/core.src.main.java.de.topobyte.osm4j.pbf.executables.EntitySplitBlockwise.java", "BodyUseAPI": [], "Fixed commit": "5602727a765283d416f1e4f9e74f0c831e0777bf", "Url": "https://api.github.com/repos/topobyte/osm4j-pbf", "Date": "2015-11-22T16:37:46Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstRelationBlockMixed) { copyPartial(relations.getStart(), EntityType.Relation, blockWriterRelations); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3735/buggy-version/core.src.main.java.de.topobyte.osm4j.pbf.executables.EntitySplitBlockwise.java", "BodyUseAPI": [], "Fixed commit": "5602727a765283d416f1e4f9e74f0c831e0777bf", "Url": "https://api.github.com/repos/topobyte/osm4j-pbf", "Date": "2015-11-22T16:37:46Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cells[i][j].getIsAMine()) { if (cells[i][j].getIsRevealed()) { for (ca.csf.TP2_Demineur.EventHandler.GameEventHandler gameEvent : gameEventList) { gameEvent.buttonLeftClicked(i, j, ButtonImage.MINE_RED); } }else if ((cells[i][j].getCellState()) == 0) { for (ca.csf.TP2_Demineur.EventHandler.GameEventHandler gameEvent : gameEventList) { gameEvent.buttonLeftClicked(i, j, ButtonImage.MINE_NORMAL); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6560/buggy-version/TP2_Demineur.TP2_Demineur.src.ca.csf.TP2_Demineur.Game.java", "BodyUseAPI": ["ca.csf.TP2_Demineur.EventHandler.GameEventHandler.buttonLeftClicked(int,int,ButtonImage.MINE_NORMAL)", "cells[i][j].getCellState()", "cells[i][j].getIsRevealed()", "ca.csf.TP2_Demineur.EventHandler.GameEventHandler.buttonLeftClicked(int,int,ButtonImage.MINE_RED)"], "Fixed commit": "4a885bb91cf280ec11551e0bb0829c4cef5a97e6", "Url": "https://api.github.com/repos/GFrenette-Lareault/TP2_Demineur", "Date": "2014-11-04T17:22:53Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gameBoard.getElements(i, j).get(((gameBoard.getElements(i, j).size()) - 1))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (gameElement instanceof de.tu_darmstadt.gdi1.bomberman.game.elements.Player) { java.lang.System.out.println(((gameElement.getDescription()) + \" died\")); gameElement.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4436/buggy-version/src.de.tu_darmstadt.gdi1.bomberman.game.elements.Delegate.java", "BodyUseAPI": ["de.tu_darmstadt.gdi1.bomberman.game.elements.GameElement.destroy()", "java.io.PrintStream.println(((gameElement.getDescription()) + \" died\"))", "de.tu_darmstadt.gdi1.bomberman.game.elements.GameElement.getDescription()"], "Fixed commit": "af703c64d5ee49b04db3657a6af9238cb8a87203", "Url": "https://api.github.com/repos/steffen-mueller/javagame", "Date": "2012-08-20T16:25:18Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof com.vaadin.ui.Link) { value = new org.jsoup.examples.HtmlToPlainText().getPlainText(org.jsoup.Jsoup.parse(((com.vaadin.ui.Link) (value)).getCaption())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/9049/buggy-version/src.main.java.au.com.vaadinutils.crud.ContainerCSVExport.java", "BodyUseAPI": [], "Fixed commit": "f7ae6193caadfb3b1ac821064d5e90003c1dfb4d", "Url": "https://api.github.com/repos/rlsutton1/VaadinUtils", "Date": "2017-09-20T00:45:04Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof com.vaadin.ui.Link) { value = new org.jsoup.examples.HtmlToPlainText().getPlainText(org.jsoup.Jsoup.parse(itemProperty.getValue().toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/9049/buggy-version/src.main.java.au.com.vaadinutils.crud.ContainerCSVExport.java", "BodyUseAPI": [], "Fixed commit": "f7ae6193caadfb3b1ac821064d5e90003c1dfb4d", "Url": "https://api.github.com/repos/rlsutton1/VaadinUtils", "Date": "2017-09-20T00:45:04Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reverseP) { tmp.add(0); }else { tmp.add(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/9019/buggy-version/DMNTools.src.java.edu.usc.epigenome.dmntools.dmntools.NdrHmmHunter.java", "BodyUseAPI": [], "Fixed commit": "2081d7c2fabc34cbbbf10a12ab3712896fffb0ba", "Url": "https://api.github.com/repos/dnaase/Bis-tools", "Date": "2014-01-20T05:23:53Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reverseP) { tmp.add(0); }else { tmp.add(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/9019/buggy-version/DMNTools.src.java.edu.usc.epigenome.dmntools.dmntools.NdrHmmHunter.java", "BodyUseAPI": [], "Fixed commit": "2081d7c2fabc34cbbbf10a12ab3712896fffb0ba", "Url": "https://api.github.com/repos/dnaase/Bis-tools", "Date": "2014-01-20T05:23:53Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Md) == null) { win.start(display); }else { Md.dispose(); win.start(display); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3680/buggy-version/src.View.Mywindow.java", "BodyUseAPI": [], "Fixed commit": "4b43061d056c297932608e536df0be036d219f3a", "Url": "https://api.github.com/repos/Adamyyy/Matala-Daled", "Date": "2016-09-29T15:11:34Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Md) == null) { win.start(display); }else { Md.dispose(); ld.start(display); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3680/buggy-version/src.View.Mywindow.java", "BodyUseAPI": [], "Fixed commit": "4b43061d056c297932608e536df0be036d219f3a", "Url": "https://api.github.com/repos/Adamyyy/Matala-Daled", "Date": "2016-09-29T15:11:34Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (players.get(((turn) % 6)).isHuman) { board.movePlayer(players.get(((turn) % 6))); }else { board.movePlayer(players.get(((turn) % 6))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4881/buggy-version/clueGame.ClueGame.java", "BodyUseAPI": ["java.util.ArrayList<clueGame.Player>.get(int)", "clueGame.Board.movePlayer(players.get(((turn) % 6)))", "java.util.ArrayList<clueGame.Player>.get(int)", "clueGame.Board.movePlayer(players.get(((turn) % 6)))"], "Fixed commit": "7ab88e8b63d4c1bd7fd7d1a6312de86fdfa6c51c", "Url": "https://api.github.com/repos/pachecoae/ClueGame-AJ", "Date": "2014-11-06T06:56:25Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ids == null) || (ids.isEmpty())) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8425/buggy-version/src.com.duggan.workflow.server.dao.NotificationDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "52fb2306f18f553465c65a5b37227edc55fefe94", "Url": "https://api.github.com/repos/duggankimani/JBPMHT", "Date": "2014-02-27T21:47:20Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ids == null) || (ids.isEmpty())) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8425/buggy-version/src.com.duggan.workflow.server.dao.CommentDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "52fb2306f18f553465c65a5b37227edc55fefe94", "Url": "https://api.github.com/repos/duggankimani/JBPMHT", "Date": "2014-02-27T21:47:20Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["water.parser.orc.DKV.getGet(inputs[0])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (frameOrVec instanceof water.fvec.Frame) f = ((water.parser.orc.FileVec) (((water.parser.orc.Frame) (frameOrVec)).vec(0))); else f = ((water.parser.orc.FileVec) (frameOrVec));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8506/buggy-version/h2o-parsers.h2o-orc-parser.src.main.java.water.parser.orc.OrcParserProvider.java", "BodyUseAPI": [], "Fixed commit": "f54cdbb6043a7d3053ae5ee09360d02db22fd3c5", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2016-07-13T02:36:29Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (existingIssue.getUrl().equals(newIssue.getUrl())) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1879/buggy-version/csp-auditor-burp-plugin.src.main.java.burp.scanner.CspHeaderScanner.java", "BodyUseAPI": [], "Fixed commit": "b7e0b557708b68786235a2d43d1e7c226d02a09f", "Url": "https://api.github.com/repos/GoSecure/csp-auditor", "Date": "2016-06-27T21:30:54Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((waitForAndGetElement(ELEMENT_REMOVE_CONNECTION_BUTTON.replace(\"${peopleName}\", peopleName), 5000, 0)) != null) { click(ELEMENT_REMOVE_CONNECTION_BUTTON.replace(\"${peopleName}\", peopleName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7125/buggy-version/ui-common.src.main.java.org.exoplatform.selenium.platform.social.PeopleConnection.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "org.exoplatform.selenium.platform.social.PeopleConnection.click(java.lang.String)"], "Fixed commit": "156c1569097397409aa89ac3fa0ffb769b5a8082", "Url": "https://api.github.com/repos/exoplatform/ui-test", "Date": "2014-01-15T06:48:43Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.exists()) { file.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1403/buggy-version/app.controllers.HomeController.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "97307597afe72255acf2250b256be1d95774f548", "Url": "https://api.github.com/repos/toniryynanen/playTesting", "Date": "2017-07-05T09:57:54Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stopNext) && (!(refEnd.matches(currentRef)))) { write = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4856/buggy-version/pn-dispatcher.src.main.java.info.papyri.dispatch.CTSPassageServlet.java", "BodyUseAPI": [], "Fixed commit": "7a7424656ba06d7f18e23cd74420f6bfcc1701be", "Url": "https://api.github.com/repos/papyri/navigator", "Date": "2012-11-14T22:47:51Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (query == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5632/buggy-version/bridge.src.main.java.hbase.Utils.java", "BodyUseAPI": [], "Fixed commit": "257467cd54fcd5c95f96dd039bd2689bbb3ad02c", "Url": "https://api.github.com/repos/nickozoulis/thunderstorm", "Date": "2015-11-24T11:35:00Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (className == null) className = ps.getClassName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5904/buggy-version/core.src.main.java.lucee.runtime.compiler.CFMLCompilerImpl.java", "BodyUseAPI": [], "Fixed commit": "d228df541989f67a9c0c102251a493c69a8db992", "Url": "https://api.github.com/repos/lucee/Lucee", "Date": "2016-03-20T00:43:19Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (lesson.equals(\"empty\")) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3062/buggy-version/Schema.src.com.schema.bro.ks.Schedule.java", "BodyUseAPI": [], "Fixed commit": "4888dc9133f547df63678e94b1d60d26a513041e", "Url": "https://api.github.com/repos/ll-KS-ll/Schedule", "Date": "2013-03-27T18:07:16Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(lesson.equals(\"empty\"))) lessons.add(new com.schema.bro.ks.Lesson(lesson));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3062/buggy-version/Schema.src.com.schema.bro.ks.Schedule.java", "BodyUseAPI": [], "Fixed commit": "4888dc9133f547df63678e94b1d60d26a513041e", "Url": "https://api.github.com/repos/ll-KS-ll/Schedule", "Date": "2013-03-27T18:07:16Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dateTimeMap.containsKey(seedu.agendum.logic.parser.Parser.ADD_ARGS_FROM)) && (dateTimeMap.containsKey(seedu.agendum.logic.parser.Parser.ADD_ARGS_TO))) { return new seedu.agendum.logic.parser.AddCommand(taskTitle, dateTimeMap.get(seedu.agendum.logic.parser.Parser.ADD_ARGS_FROM), dateTimeMap.get(seedu.agendum.logic.parser.Parser.ADD_ARGS_TO), seedu.agendum.logic.parser.Parser.getTagsFromArgs(\"test\")); }else if (((!(dateTimeMap.containsKey(seedu.agendum.logic.parser.Parser.ADD_ARGS_FROM))) && (!(dateTimeMap.containsKey(seedu.agendum.logic.parser.Parser.ADD_ARGS_TO)))) && (!(dateTimeMap.containsKey(seedu.agendum.logic.parser.Parser.ADD_ARGS_BY)))) { return new seedu.agendum.logic.parser.AddCommand(taskTitle, seedu.agendum.logic.parser.Parser.getTagsFromArgs(\"test\")); }else { return new seedu.agendum.logic.parser.IncorrectCommand(java.lang.String.format(seedu.agendum.logic.parser.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4365/buggy-version/src.main.java.seedu.agendum.logic.parser.Parser.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.Optional<java.time.LocalDateTime>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.Optional<java.time.LocalDateTime>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.Optional<java.time.LocalDateTime>>.containsKey(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.Optional<java.time.LocalDateTime>>.get(java.lang.String)", "java.util.HashMap<java.lang.String, java.util.Optional<java.time.LocalDateTime>>.get(java.lang.String)"], "Fixed commit": "bf2c6d9f3074a487246383eb2f34bb1deefd040e", "Url": "https://api.github.com/repos/CS2103AUG2016-W11-C2/main", "Date": "2016-10-12T15:20:27Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(java.lang.String)", "dao.UserDAO.getInstance().findById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(currentUser.equals(targetUser))) { targetUserInfo.remove(\"email\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2069/buggy-version/src.webAPP.UserInfoServlet.java", "BodyUseAPI": [], "Fixed commit": "0f108f2a0da7dced179169481d553a3fbb48bad0", "Url": "https://api.github.com/repos/GoCheerJava/GoCheer_Server", "Date": "2016-12-11T12:20:11Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.processes) == null) { this.processes = processes; }else { this.processes.clear(); this.processes.addAll(processes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2180/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Batch.java", "BodyUseAPI": [], "Fixed commit": "e5c3e699502bb37fd9785309a796399009b68fdf", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batches) == null) { this.batches = batches; }else { this.batches.clear(); this.batches.addAll(batches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2180/buggy-version/Kitodo-DataManagement.src.main.java.org.kitodo.data.database.beans.Process.java", "BodyUseAPI": [], "Fixed commit": "e5c3e699502bb37fd9785309a796399009b68fdf", "Url": "https://api.github.com/repos/Beacze/kitodo-production", "Date": "2017-05-11T09:27:14Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pl.edu.agh.mcc.BatteryAdvanced.scheduledFuture) != null) { pl.edu.agh.mcc.BatteryAdvanced.scheduledFuture.cancel(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5284/buggy-version/src.pl.edu.agh.mcc.BatteryAdvanced.java", "BodyUseAPI": [], "Fixed commit": "72faf6bf61c153f5404198bc9532f7d19f8123b7", "Url": "https://api.github.com/repos/Hoobie/cordova-plugin-battery-advanced", "Date": "2017-05-10T13:50:27Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userFiltered.size()) != 1) { setShowingUsers(true); }else { setShowingUsers(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2626/buggy-version/src.SuggestorPanelModelForWrapper.java", "BodyUseAPI": [], "Fixed commit": "b913e1a194bcc2dd6f03d1eae2c11b85823b2dce", "Url": "https://api.github.com/repos/Jeyatharsini24/AutoCompleteComboBox", "Date": "2017-06-13T12:35:07Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userFiltered.size()) != 1) { setShowingUsers(true); }else { setShowingUsers(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2626/buggy-version/src.SuggestorPanelModel.java", "BodyUseAPI": [], "Fixed commit": "b913e1a194bcc2dd6f03d1eae2c11b85823b2dce", "Url": "https://api.github.com/repos/Jeyatharsini24/AutoCompleteComboBox", "Date": "2017-06-13T12:35:07Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.isNotBlank(taxon.getName())) && ((taxon.getName().length()) > 1)) { org.neo4j.graphdb.Node underlyingNode = taxon.getUnderlyingNode(); for (java.lang.String propertyName : org.eol.globi.service.TaxonPropertyEnricherImpl.PROPERTIES.keySet()) { needsEnriching = needsEnriching || (!(underlyingNode.hasProperty(propertyName))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3372/buggy-version/eol-globi-data-tool.src.main.java.org.eol.globi.service.TaxonPropertyEnricherImpl.java", "BodyUseAPI": ["org.eol.globi.domain.Taxon.getUnderlyingNode()"], "Fixed commit": "450293b03b348bee31675b8c2bf5806fcf9c92ce", "Url": "https://api.github.com/repos/jhpoelen/eol-globi-data", "Date": "2013-09-10T22:21:16Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((delegate.getFetchPlan()) != null) textRequest.setFetchPlan(delegate.getFetchPlan());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/254/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OCommandExecutorSQLDelegate.java", "BodyUseAPI": ["com.orientechnologies.orient.core.command.OCommandRequestText.setFetchPlan(delegate.getFetchPlan())", "com.orientechnologies.orient.core.command.OCommandExecutor.getFetchPlan()"], "Fixed commit": "1e118bb70cd79f6c0a9146563e487a477ec555e0", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-09-27T11:19:15Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { uiUtil.setStatusBarColor(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/89/buggy-version/FishBun.src.main.java.com.sangcomz.fishbun.ui.picker.PickerActivity.java", "BodyUseAPI": [], "Fixed commit": "d12a33c559115b1069919814336cdc6853eded90", "Url": "https://api.github.com/repos/sangcomz/FishBun", "Date": "2015-11-30T01:13:40Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { uiUtil.setStatusBarColor(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/89/buggy-version/FishBun.src.main.java.com.sangcomz.fishbun.ui.album.AlbumActivity.java", "BodyUseAPI": [], "Fixed commit": "d12a33c559115b1069919814336cdc6853eded90", "Url": "https://api.github.com/repos/sangcomz/FishBun", "Date": "2015-11-30T01:13:40Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 11) { dialog.setTypeface(tv, dialog.mBuilder.regularFont); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3638/buggy-version/src.com.afollestad.materialdialogs.MaterialDialogAdapter.java", "BodyUseAPI": [], "Fixed commit": "ac63b4da1c879f19a5c5e2e1c425a0b0fec3e8a6", "Url": "https://api.github.com/repos/imoblife/ImoblifeLibrary", "Date": "2016-05-26T08:33:59Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["act.util.ActContext.methodPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.osgl.util.S.notBlank(methodPath)) { while ((--level) > 0) { methodPath = org.osgl.util.S.beforeLast(methodPath, \".\"); } sb = org.osgl.util.S.builder(methodPath); }else { sb = org.osgl.util.S.builder(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2266/buggy-version/src.main.java.act.view.TemplatePathResolver.java", "BodyUseAPI": ["org.osgl.util.S.beforeLast(java.lang.String,java.lang.String)"], "Fixed commit": "019afa48378096e33baabf424deb69bf6df3057f", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2017-02-17T05:19:29Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["act.util.ActContext.templatePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(path.startsWith(\"/\"))) { sb.append(\"/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2266/buggy-version/src.main.java.act.view.TemplatePathResolver.java", "BodyUseAPI": [], "Fixed commit": "019afa48378096e33baabf424deb69bf6df3057f", "Url": "https://api.github.com/repos/actframework/actframework", "Date": "2017-02-17T05:19:29Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (opcode != (GOTO)) branch.emit(createInstructionId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/673/buggy-version/src.edu.ucla.pls.wiretap.wiretaps.Branch.java", "BodyUseAPI": [], "Fixed commit": "f29b1e168072cb062c9000ae208f54f9dd46f826", "Url": "https://api.github.com/repos/ucla-pls/wiretap", "Date": "2017-02-08T07:52:03Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getHttpServletRequest().getSession(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (httpSession == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/773/buggy-version/pippo-core.src.main.java.ro.pippo.core.DefaultSessionFactory.java", "BodyUseAPI": [], "Fixed commit": "bd8e6fc33f871bf9a88266447e677d8afec20bb7", "Url": "https://api.github.com/repos/pippo-java/pippo", "Date": "2015-02-05T22:11:14Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((success) == 1) { et_comment.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5500/buggy-version/app.src.main.java.it.polimi.guardian.citizenapp.AddCommentActivity.java", "BodyUseAPI": [], "Fixed commit": "7d7c89d058dbbe372c8b6c4662e5f4df1dc992ae", "Url": "https://api.github.com/repos/PhoneGuardian/CitizenApp", "Date": "2015-07-08T12:02:51Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"#reAssign#\".equals(action)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3780/buggy-version/ejb-core.formtemplate.src.main.java.com.silverpeas.workflow.engine.instance.HistoryStepImpl.java", "BodyUseAPI": [], "Fixed commit": "86ad6d5bac2b4f752d84f8dc24361e3e9012de6c", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2016-06-02T23:30:25Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getParcelableExtra(ContextVS.WEBSOCKET_REQUEST_KEY)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((org.votingsystem.util.ResponseVS.SC_OK) == (request.getStatusCode())) { showMessage(request.getStatusCode(), getString(R.string.sign_document_lbl), getString(R.string.sign_document_result_ok_msg)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8600/buggy-version/VotingToolAndroidProject.VotingToolAndroid.src.main.java.org.votingsystem.android.activity.ActivityBase.java", "BodyUseAPI": ["org.votingsystem.android.util.WebSocketRequest.getStatusCode()", "org.votingsystem.android.activity.ActivityBase.1.showMessage(request.getStatusCode(),getString(R.string.sign_document_lbl),getString(R.string.sign_document_result_ok_msg))"], "Fixed commit": "8202e1a122e263a992d858199488ce9b610d2e5a", "Url": "https://api.github.com/repos/votingsystem/votingsystem", "Date": "2014-11-06T17:01:14Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(type.getSelectedItem().toString().equals(\"\"))) && (!(type.getSelectedItem().toString().equals(\"All\")))) tempType = type.getSelectedItem().toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3864/buggy-version/app.src.main.java.edu.weber.neildalton.cs3270.daltoncarvings.FilterFragment.java", "BodyUseAPI": ["android.widget.Spinner.getSelectedItem()", "type.getSelectedItem().toString()"], "Fixed commit": "0c9985fddc393f1bdf16cddf229fff3ac58d40f1", "Url": "https://api.github.com/repos/Bones687/DaltonCarvings", "Date": "2015-06-24T19:54:41Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dmcapps.navigationfragment.common.interfaces.Config.getPresentAnimIn()", "com.dmcapps.navigationfragment.common.interfaces.Config.getPresentAnimOut()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((enter != null) && (exit != null)) { fragmentTransactionWrapper.setCustomAnimations(enter, exit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3548/buggy-version/navigation-fragment.src.main.java.com.dmcapps.navigationfragment.common.core.StackManager.java", "BodyUseAPI": ["com.dmcapps.navigationfragment.common.helpers.fragmenttransactionwrapper.FragmentTransactionWrapper.setCustomAnimations(java.lang.Integer,java.lang.Integer)"], "Fixed commit": "c0caa4edf818d922e230386aaadb1efe36af9837", "Url": "https://api.github.com/repos/DMCApps/NavigationFragment", "Date": "2016-11-20T18:06:02Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hardy.monsterismus.statements.StatementInstance.instanceUnder(float,float)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (nested != null) { if ((nested.isChild()) && (!(nested.isNestable()))) { nested = ((org.hardy.monsterismus.statements.StatementInstance) (nested.getParent())); } if (nested.isNestable()) { org.hardy.monsterismus.api.Nestable nestable = ((org.hardy.monsterismus.api.Nestable) (nested)); nestable.addChild(_instance); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4957/buggy-version/src.org.hardy.monsterismus.screens.Editor.java", "BodyUseAPI": ["org.hardy.monsterismus.statements.StatementInstance.isChild()", "org.hardy.monsterismus.statements.StatementInstance.getParent()", "org.hardy.monsterismus.statements.StatementInstance.isNestable()"], "Fixed commit": "355813224ec17b738aa84129da8cb2339bb457cd", "Url": "https://api.github.com/repos/Tape/Monsterismus", "Date": "2012-08-17T01:55:40Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clazz == (short.class)) || (clazz == (java.lang.Short.class))) { if (((val.compareTo(java.math.BigDecimal.valueOf(java.lang.Short.MAX_VALUE))) > 0) || ((val.compareTo(java.math.BigDecimal.valueOf(java.lang.Short.MIN_VALUE))) < 0)) { throw new com.alibaba.fastjson.JSONException((\"short overflow : \" + val)); } return ((T) (java.lang.Short.valueOf(val.shortValue()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7615/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.NumberDeserializer.java", "BodyUseAPI": [], "Fixed commit": "16a6e08d59b5d2e9a1a908b09d60fe6fd0b1c97c", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-03-10T12:30:51Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.mossol.MossolUtil.readJsonString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (requestObj == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7224/buggy-version/src.main.java.net.mossol.MossolController.java", "BodyUseAPI": [], "Fixed commit": "3843715515f5ab7be4184ff558d50f582b74397f", "Url": "https://api.github.com/repos/AmosDoan/line_bot_mossol", "Date": "2017-12-18T12:35:17Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["example.jbot.core.TicTacToeBoard.getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (status == (PLAYER2)) { message = (\"@\" + (gamePlayers.getPlayer2Name())) + \" won the game!\"; }else if (status == (DRAW)) { message = (((\"@\" + (gamePlayers.getPlayer1Name())) + \" and @\") + (gamePlayers.getPlayer2Name())) + \" tied the game!\"; }else { message = (\"Its @\" + (currentPlayer())) + \" turn!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5246/buggy-version/src.main.java.example.jbot.core.TicTacToe.java", "BodyUseAPI": [], "Fixed commit": "562c05376b02ea630579c97fae33575047963e2c", "Url": "https://api.github.com/repos/harirongali/myprojecttodo", "Date": "2017-06-21T23:40:23Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastEnemyPathFind) <= ((katsu.K.currentTime()) - (ld33.LD33Settings.get().enemyPathFindInterval))) { lastEnemyPathFind = katsu.K.currentTime(); doEnemyPathFinding(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5079/buggy-version/core.src.ld33.entities.Monster.java", "BodyUseAPI": [], "Fixed commit": "a5309d3bd8a6379a0b38a6ed9d9eda4b00c90a2c", "Url": "https://api.github.com/repos/berkano/katsu", "Date": "2015-08-23T17:51:38Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mute) { this.volume = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5052/buggy-version/src.palyer.state.PlayerState.java", "BodyUseAPI": [], "Fixed commit": "43724eec1a92aebb7817629388177d05679f06bc", "Url": "https://api.github.com/repos/krisraich/WebRadio", "Date": "2017-02-21T10:50:20Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (volume > 0) { mute = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5052/buggy-version/src.palyer.state.PlayerState.java", "BodyUseAPI": [], "Fixed commit": "43724eec1a92aebb7817629388177d05679f06bc", "Url": "https://api.github.com/repos/krisraich/WebRadio", "Date": "2017-02-21T10:50:20Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (session == null) { com.psk.pms.controller.EmployeeController.LOGGER.info(\"No session available\"); }else { com.psk.pms.controller.EmployeeController.LOGGER.info(\"This is old session\"); com.psk.pms.model.Employee employee = new com.psk.pms.model.Employee(); model.addAttribute(\"employeeObj\", employee); model.addAttribute(\"employeeForm\", employee); return \"SignIn\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2666/buggy-version/src.main.java.com.psk.pms.controller.EmployeeController.java", "BodyUseAPI": [], "Fixed commit": "4386f7df48600c7df55db46bec35cf856f00fee0", "Url": "https://api.github.com/repos/devintqa/pms", "Date": "2015-06-12T17:53:10Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((exploreVenuesResponse.getVenues().size()) == 0) { showError(R.string.no_venues_found); }else { vCardScroll.setAdapter(new cz.destil.glasquare.adapter.VenuesAdapter(exploreVenuesResponse.getVenues())); vCardScroll.activate(); vCardScroll.setOnItemClickListener(new android.widget.AdapterView.OnItemClickListener() { @java.lang.Override public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) { mSelectedVenue = ((cz.destil.glasquare.api.ExploreVenues.Venue) (vCardScroll.getItemAtPosition(position))); openOptionsMenu(); } }); hideProgress(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3678/buggy-version/code.Glasquare.src.main.java.cz.destil.glasquare.activity.VenuesActivity.java", "BodyUseAPI": ["cz.destil.glasquare.activity.VenuesActivity.1.setAdapter(cz.destil.glasquare.adapter.VenuesAdapter)", "ExploreVenues.ExploreVenuesResponse.getVenues()"], "Fixed commit": "4d4fcc9ffe14b352b086e052ae8c45938637c66d", "Url": "https://api.github.com/repos/destil/glasquare", "Date": "2014-01-26T19:37:36Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((def.useExistingPackage) != null) && (def.useExistingPackage.isEmpty())) { def.useExistingPackage = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5261/buggy-version/code.mettle.app.org.mef.tools.mgen.parser.DalGenXmlParser.java", "BodyUseAPI": [], "Fixed commit": "1278fc0b6ecdedaa98ee1db859a35c53e5ed4078", "Url": "https://api.github.com/repos/ianrae/mettle-framework", "Date": "2013-12-26T15:36:16Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (itemDisplayLang != null) this.itemDisplayName = langFile.getLocale(itemDisplayLang);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7096/buggy-version/src.main.java.com.ithinkrok.mccw.playerclass.items.ClassItem.java", "BodyUseAPI": [], "Fixed commit": "e8366ab70c2eaf071ab76b39d968430cf55daaee", "Url": "https://api.github.com/repos/elian1203/Colony-Wars", "Date": "2015-11-21T12:46:25Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.csstudio.ams4.service.messaging.ActiveMQConnectionService.JmsCommandMessageHandler.createCommandMessage(javax.jms.Message)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (commandMessage != null) { messageHandler.handleCommandMessage(commandMessage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4452/buggy-version/applications.plugins.org.csstudio.ams4.src.org.csstudio.ams4.service.messaging.ActiveMQConnectionService.java", "BodyUseAPI": ["org.csstudio.ams4.service.messaging.CommandMessageHandler.handleCommandMessage(org.csstudio.ams4.material.messaging.CommandMessage)"], "Fixed commit": "4826c86afbd6dfcdffb4e421a86a9e6d65191491", "Url": "https://api.github.com/repos/Desy-extern/cs-studio", "Date": "2015-06-25T16:18:56Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dangdang.ddframe.job.internal.schedule.JobRegistry.getInstance().getJob(jobConfiguration.getJobName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == jobScheduler) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8688/buggy-version/elastic-job-core.src.main.java.com.dangdang.ddframe.job.internal.execution.ExecutionService.java", "BodyUseAPI": [], "Fixed commit": "08baffdd8b39fd1765f875274a520abaf985cdbb", "Url": "https://api.github.com/repos/TonnyFeng/elastic-job", "Date": "2016-01-26T13:02:05Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((editTextView.getVisibility()) == (android.view.View.VISIBLE)) { editTextView.setVisibility(View.INVISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7415/buggy-version/app.src.main.java.io.github.scola.qart.MainActivity.java", "BodyUseAPI": ["android.widget.LinearLayout.setVisibility(View.INVISIBLE)"], "Fixed commit": "d256ae6bdefab14347186090da63859f7b944d94", "Url": "https://api.github.com/repos/scola/Qart", "Date": "2016-10-19T00:22:59Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((editTextView.getVisibility()) == (android.view.View.VISIBLE)) { editTextView.setVisibility(View.INVISIBLE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7415/buggy-version/app.src.main.java.io.github.scola.qart.MainActivity.java", "BodyUseAPI": ["android.widget.LinearLayout.setVisibility(View.INVISIBLE)"], "Fixed commit": "d256ae6bdefab14347186090da63859f7b944d94", "Url": "https://api.github.com/repos/scola/Qart", "Date": "2016-10-19T00:22:59Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (bookInfo.has(\"authors\")) { org.json.JSONArray authorsArray = bookInfo.getJSONArray(\"authors\"); authors = com.example.ante.booklistingapp.Utils.convertAuthorArrayToString(authorsArray); }else { authors = \"N/A\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2803/buggy-version/app.src.main.java.com.example.ante.booklistingapp.Utils.java", "BodyUseAPI": ["org.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "448245edce9b63f243bb6e5925b01f5b60b6c8dc", "Url": "https://api.github.com/repos/AP-93/BookListingApp", "Date": "2017-07-17T18:06:35Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.formats.in.SDTReader.getSizeX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((paddedWidth > sizeX) && ((planeSize * (getSizeC())) > blockSize)) && ((((planeSize / paddedWidth) * sizeX) * (getSizeC())) <= blockSize)) { paddedWidth = sizeX; planeSize = ((sizeX * sizeY) * times) * bpp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7796/buggy-version/components.formats-gpl.src.loci.formats.in.SDTReader.java", "BodyUseAPI": [], "Fixed commit": "d38ff3d934a01472a3c8bebf84be5bce4a4d14fe", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-02-22T11:33:47Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getStringExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (turnStr.equals(\"Computer\")) { setCutoffDropdownValues(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2026/buggy-version/Minev.app.src.main.java.edu.ramapo.sminev.ishido.View.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c908d3ef55ab3ebf0e27c6ad648b635f60820e4b", "Url": "https://api.github.com/repos/infation/Ishido", "Date": "2016-03-15T23:52:55Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sender.isConnected()) { if (o instanceof bgsep.model.Button) { bgsep.model.Button button = ((bgsep.model.Button) (o)); sender.send(((byte) (button.getButtonID())), button.isPressed()); }else if (((o instanceof bgsep.model.JoystickHandler) || (o instanceof bgsep.model.Gyro)) && (obj instanceof bgsep.communication.CommunicationNotifier)) { bgsep.communication.CommunicationNotifier cn = ((bgsep.communication.CommunicationNotifier) (obj)); sender.send(((byte) (cn.id)), cn.value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/111/buggy-version/VirtualGamepad.src.bgsep.communication.Communication.java", "BodyUseAPI": ["bgsep.communication.Sender.send(((byte) (button.getButtonID())),button.isPressed())", "bgsep.communication.Sender.send(((byte) (cn.id)),cn.value)"], "Fixed commit": "df52700a23a272444d78b2ae4aafeec5145dfc99", "Url": "https://api.github.com/repos/golvmopp/BGSEP", "Date": "2013-10-18T12:44:39Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (icnt == (nw)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8529/buggy-version/h2o-core.src.main.java.water.rapids.ast.prims.advmath.AstISax.java", "BodyUseAPI": [], "Fixed commit": "d5bdf4c749089b3c671b3f0b31edecf67b072546", "Url": "https://api.github.com/repos/h2oai/h2o-3", "Date": "2016-09-08T20:28:09Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userProfileEvaluation == null) { userProfileEvaluation = userProfile; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1533/buggy-version/modules.evaluation.src.main.java.eu.eexcess.federatedrecommender.evaluation.FederatedRecommenderEvaluationCore.java", "BodyUseAPI": [], "Fixed commit": "f07c4ee8a0f3ed18260cc12d610aeeeee4e5214c", "Url": "https://api.github.com/repos/EEXCESS/recommender", "Date": "2015-05-29T10:36:41Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (filesArray != null) { files.addAll(java.util.Arrays.asList(filesArray)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8859/buggy-version/LandscapePortraitImageSort.src.net.ccaper.LandscapePortraitImageSort.serviceImpl.IterateDirectoriesImpl.java", "BodyUseAPI": [], "Fixed commit": "a04bbce75cf6e5f4a3e705d43dd5d842a4f28d57", "Url": "https://api.github.com/repos/ccaper/LandscapePortraitImageSort", "Date": "2013-09-22T15:39:35Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (dirsArray != null) { dirs.addAll(java.util.Arrays.asList(dirsArray)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8859/buggy-version/LandscapePortraitImageSort.src.net.ccaper.LandscapePortraitImageSort.serviceImpl.IterateDirectoriesImpl.java", "BodyUseAPI": [], "Fixed commit": "a04bbce75cf6e5f4a3e705d43dd5d842a4f28d57", "Url": "https://api.github.com/repos/ccaper/LandscapePortraitImageSort", "Date": "2013-09-22T15:39:35Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (store < 0) { store = 127 - store; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5109/buggy-version/Chat.src.Messages.Message.java", "BodyUseAPI": [], "Fixed commit": "51cc701388627db85b0092f078c5be13f4abe3fb", "Url": "https://api.github.com/repos/ragnarok089/CS544", "Date": "2013-06-07T00:54:02Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (num >= 128) { num += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5109/buggy-version/Chat.src.Messages.Message.java", "BodyUseAPI": [], "Fixed commit": "51cc701388627db85b0092f078c5be13f4abe3fb", "Url": "https://api.github.com/repos/ragnarok089/CS544", "Date": "2013-06-07T00:54:02Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (numstr.startsWith(\"1\")) { numstr = \"-\" + (numstr.substring(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5109/buggy-version/Chat.src.Messages.Message.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "51cc701388627db85b0092f078c5be13f4abe3fb", "Url": "https://api.github.com/repos/ragnarok089/CS544", "Date": "2013-06-07T00:54:02Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.caltech.ipac.firefly.data.ServerRequest.getParam(DynUtils.QUERY_ID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (edu.caltech.ipac.util.StringUtils.isEmpty(queryId)) return req;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8243/buggy-version/src.firefly.java.edu.caltech.ipac.firefly.server.query.DynQueryProcessor.java", "BodyUseAPI": [], "Fixed commit": "9f56bb607460634093e48e4b46aa8a3979fa9f06", "Url": "https://api.github.com/repos/Caltech-IPAC/firefly", "Date": "2016-02-05T16:58:28Z"},
{"Line": "=>2125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((duplicatedTrimmed == null) && (duplicated != null)) && (trimmed != null)) duplicatedTrimmed = new net.spy.memcached.ops.OperationStatus(true, \"DUPLICATED_TRIMMED\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6452/buggy-version/src.main.java.net.spy.memcached.ArcusClient.java", "BodyUseAPI": [], "Fixed commit": "6f834415f1d3c90ec20b88f427c47dcd393feaba", "Url": "https://api.github.com/repos/naver/arcus-java-client", "Date": "2015-09-09T05:15:08Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((appContext.getExecutingJobQueue().getJob(jobPo.getTaskTrackerNodeGroup(), jobPo.getTaskId())) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/9129/buggy-version/lts-jobtracker.src.main.java.com.github.ltsopensource.jobtracker.support.checker.ExecutingDeadJobChecker.java", "BodyUseAPI": [], "Fixed commit": "ac71fe67ef50888484cf4aae9e9919e819a3bb92", "Url": "https://api.github.com/repos/donsunsoft/light-task-scheduler", "Date": "2016-06-20T10:38:19Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.protobuf.CodedInputStream.readRawVarint32()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (kind == 0) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6928/buggy-version/src.main.java.skadistats.clarity.processor.reader.InputStreamProcessor.java", "BodyUseAPI": [], "Fixed commit": "da1ae1da9f9b60f7c863a18401ada532089fa7ae", "Url": "https://api.github.com/repos/skadistats/clarity", "Date": "2015-03-22T21:45:39Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.id) == null) { ofy().save().entity(user).now(); }else { com.mobilevanity.backend.data.User savedUser = ofy().load().type(com.mobilevanity.backend.data.User.class).id(user.id).now(); if (savedUser != null) { user.password = savedUser.password; user.registrationId = savedUser.registrationId; ofy().save().entity(user).now(); user.password = null; user.registrationId = null; }else { ofy().save().entity(user).now(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6529/buggy-version/backend.src.main.java.com.mobilevanity.backend.DataManager.java", "BodyUseAPI": ["ofy().load().type(com.mobilevanity.backend.data.User.class).id(user.id).now()", "ofy().load().type(com.mobilevanity.backend.data.User.class).id(user.id)", "ofy().save().entity(com.mobilevanity.backend.data.User)", "ofy().save().entity(user).now()"], "Fixed commit": "bdc7ad7da675eca9dbe81d43279b73190576d6e3", "Url": "https://api.github.com/repos/dongja94/MobileVanityServer", "Date": "2016-09-05T01:54:21Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.common.IniList.getTable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (microscopeTable != null) { java.lang.String objective = microscopeTable.get(\"Objective\"); int space = objective.indexOf(\" \"); if (space != (-1)) { magnification = new java.lang.Double(objective.substring(0, (space - 1))); immersion = objective.substring((space + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7907/buggy-version/components.formats-gpl.src.loci.formats.in.SimplePCITiffReader.java", "BodyUseAPI": ["loci.common.IniTable.get(java.lang.String)"], "Fixed commit": "8c40bdea17dfc920d4d64bb775d000f0761831a2", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-22T02:48:56Z"},
{"Line": "=>478", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((accountSid) != null) { request.addPostParam(\"AccountSid\", accountSid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/278/buggy-version/src.main.java.com.twilio.rest.api.v2010.account.IncomingPhoneNumberUpdater.java", "BodyUseAPI": [], "Fixed commit": "fd772a4a59b54b15cac363d5a82ddff8d8355242", "Url": "https://api.github.com/repos/CellyApp/twilio-java", "Date": "2017-04-07T20:24:19Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((integrity) <= 0) { if ((state) == (stratos.game.economic.Structure.STATE_SALVAGE)) ((stratos.game.economic.Element) (basis)).setAsDestroyed(); if ((state) == (stratos.game.economic.Structure.STATE_INTACT)) state = stratos.game.economic.Structure.STATE_RAZED; integrity = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4168/buggy-version/src.stratos.game.economic.Structure.java", "BodyUseAPI": [], "Fixed commit": "d8c85ee35fb014d4ccb42882b465b4a177b0ccae", "Url": "https://api.github.com/repos/Morgan-Allen/Presidium-Graphics-Overhaul", "Date": "2016-01-17T17:31:57Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newPath.indexOf(\"<\")) != (-1)) { newPath = newPath.substring(0, newPath.indexOf(\"<\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1278/buggy-version/src.problem.Helpers.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "34c0205ed7b062944d0f455485f75fcef74db96f", "Url": "https://api.github.com/repos/JGSquared/374Project", "Date": "2016-01-29T06:04:56Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ontology != null) { objectProperties = ontology.getObjectPropertiesInSignature(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2300/buggy-version/obdalib-r2rml.src.main.java.it.unibz.krdb.obda.r2rml.OBDAMappingTransformer.java", "BodyUseAPI": ["org.semanticweb.owlapi.model.OWLOntology.getObjectPropertiesInSignature()"], "Fixed commit": "04228c5d5895b90e9209c196c1869e2249886ade", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2014-06-26T12:10:04Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (func.toString().contains(\"dateBaaLicenseeValidTo\")) java.lang.System.out.print(\"found you\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2300/buggy-version/obdalib-r2rml.src.main.java.it.unibz.krdb.obda.r2rml.OBDAMappingTransformer.java", "BodyUseAPI": [], "Fixed commit": "04228c5d5895b90e9209c196c1869e2249886ade", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2014-06-26T12:10:04Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (content instanceof net.sourceforge.fenixedu.domain.contents.Redirect) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3866/buggy-version/src.main.java.net.sourceforge.fenixedu.presentationTier.servlets.filters.functionalities.FilterFunctionalityContext.java", "BodyUseAPI": [], "Fixed commit": "43fab554db30a76fc14bb5a710c1c035bc4d6243", "Url": "https://api.github.com/repos/ist-dsi/fenix", "Date": "2013-06-06T19:31:58Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (par1World.isRemote) net.minecraft.client.Minecraft.getMinecraft().gameSettings.renderDistance = rebelkeithy.mods.atum.TickHandler.defaultFog;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3230/buggy-version/common.rebelkeithy.mods.atum.blocks.BlockAtumPortal.java", "BodyUseAPI": [], "Fixed commit": "bbad4637febb4e5ee335aafcf370f3fb74ab85f6", "Url": "https://api.github.com/repos/RebelKeithy/Atum", "Date": "2013-04-09T14:47:18Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (link.attr(\"abs:href\").matches(\"^mailto.*\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7196/buggy-version/src.main.java.com.usamin.nana.extractor.DomainCrawler.java", "BodyUseAPI": [], "Fixed commit": "1db954cbb991bf50b47e40acb3877f4d879470d7", "Url": "https://api.github.com/repos/SunnyLannie/jjvcrawler", "Date": "2017-05-13T03:30:59Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((SystemProperty.environment.value()) == (SystemProperty.Environment.Value.Production)) throw new com.yanchware.mmarazzu.backend.APIs.APIErrorException(500, \"Internal Server Error.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1802/buggy-version/src.main.java.com.yanchware.mmarazzu.backend.APIs.UserAPI.java", "BodyUseAPI": [], "Fixed commit": "b70c63b0de167db16e65dd9b22f458f8880a4d32", "Url": "https://api.github.com/repos/YanchWare/MmarazzuBE", "Date": "2015-04-13T20:45:24Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.text.TextUtils.isEmpty(mContentType)) && (mUri.getScheme().equals(\"file\"))) { mContentType = opt.outMimeType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/128/buggy-version/src.com.android.mms.ui.UriImage.java", "BodyUseAPI": [], "Fixed commit": "d0a1e596a0a20c58c5dc85dd2cc4e6ddc5a05048", "Url": "https://api.github.com/repos/codeaurora-unofficial/platform-packages-apps-Mms", "Date": "2016-03-28T02:22:07Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((message != null) && (!(message.isEmpty()))) { hrider.ui.MessageHandler.logger.error(ex, message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3849/buggy-version/src.main.java.hrider.ui.MessageHandler.java", "BodyUseAPI": ["hrider.io.Log.error(java.lang.Exception,java.lang.String)"], "Fixed commit": "c78cb97a5876ee4630adcf4041d52f44ca023a84", "Url": "https://api.github.com/repos/NiceSystems/hrider", "Date": "2013-04-21T13:33:22Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((message != null) && (!(message.isEmpty()))) { hrider.ui.MessageHandler.logger.info(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3849/buggy-version/src.main.java.hrider.ui.MessageHandler.java", "BodyUseAPI": ["hrider.io.Log.info(java.lang.String)"], "Fixed commit": "c78cb97a5876ee4630adcf4041d52f44ca023a84", "Url": "https://api.github.com/repos/NiceSystems/hrider", "Date": "2013-04-21T13:33:22Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e != null) { android.util.Log.e(\"*********************\", \"Failed to obtain category objects\"); }else { for (com.parse.ParseObject obj : objects) { mAdapter.add(((java.lang.String) (obj.get(APIConstants.NameKey)))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/9152/buggy-version/app.src.main.java.com.edu.sihanghuang.dada.LifestyleFragment.java", "BodyUseAPI": [], "Fixed commit": "f886204e3eeee1794a889c1adb0eafabe8c3cd90", "Url": "https://api.github.com/repos/nyus2014/CIU_Android", "Date": "2015-07-26T15:44:58Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCamera) != null) { mCamera.stopPreview(); mCamera.setPreviewCallback(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4421/buggy-version/app.src.main.java.com.smfandroid.summitsaround.CameraPreview.java", "BodyUseAPI": [], "Fixed commit": "b4c60dae18b1846ed321466cea131daa98f97ec8", "Url": "https://api.github.com/repos/Blizarre/SummitsAround", "Date": "2014-12-13T15:22:44Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.github.intangir.GalacticChat.Chatter.chatters.containsKey(p.getName())) { com.github.intangir.GalacticChat.Chatter.logOut(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1068/buggy-version/src.main.java.com.github.intangir.GalacticChat.Chatter.java", "BodyUseAPI": ["com.github.intangir.GalacticChat.Chatter.logOut(net.md_5.bungee.api.CommandSender)"], "Fixed commit": "37034b31dc9d793e90ca8db5669023cd75dd185c", "Url": "https://api.github.com/repos/intangir/GalacticChat", "Date": "2014-11-30T10:41:35Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replaceFirst(getRepository(),getTempFolder())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(new java.io.File(temp).exists())) internalExecuteProcess(java.lang.String.format(org.mondo.collaboration.online.core.StorageAccessSvn.SVN_CHECKOUT_COMMAND, folder, temp, getUsername(), getPassword()), new java.lang.String[]{ }, new java.io.File(getTempFolder()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/9134/buggy-version/plugins.org.mondo.collaboration.online.core.src.org.mondo.collaboration.online.core.StorageAccessSvn.java", "BodyUseAPI": ["org.mondo.collaboration.online.core.StorageAccessSvn.internalExecuteProcess(java.lang.String,java.lang.String[],java.io.File)", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.String,getUsername(),getPassword())"], "Fixed commit": "2d0d19061755039f13ceefb9e196c7b72ebc19f7", "Url": "https://api.github.com/repos/FTSRG/mondo-collab-framework", "Date": "2016-01-25T13:10:34Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((from == 0) || (to == 0)) { java.lang.System.out.println((((\"!!! invalid city index 0 in Map.getDistance - from \" + from) + \", to: \") + to)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7857/buggy-version/src.main.Map.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "d12caf60d1bc2b355edc2e6c8260c3381dc05a49", "Url": "https://api.github.com/repos/davidr14/ga-ws2015-2", "Date": "2016-01-02T17:28:54Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nl.avans.mbd2_android.models.SharedPreference.getFavorites(nl.avans.mbd2_android.activities.MainActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((initialFavorites != null) && ((initialFavorites.size()) > 0)) { t.execute(initialFavorites); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5244/buggy-version/app.src.main.java.nl.avans.mbd2_android.activities.MainActivity.java", "BodyUseAPI": ["nl.avans.mbd2_android.models.AsyncListViewLoader.execute(java.util.List<java.lang.String>)"], "Fixed commit": "6e0cb8948c51819fa9b05b720b106fe1c7807272", "Url": "https://api.github.com/repos/darthsitthiander/MBD2-Android", "Date": "2015-04-12T17:17:07Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myLocation) != null) { com.amap.api.maps2d.CameraUpdate update = com.amap.api.maps2d.CameraUpdateFactory.changeLatLng(myLocation); mAMap.animateCamera(update); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5916/buggy-version/library.src.main.java.support.im.location.LocationPickerActivity.java", "BodyUseAPI": [], "Fixed commit": "207bf84a241d0952fefafd2286088a9d6d9cd462", "Url": "https://api.github.com/repos/qijitech/support-im", "Date": "2016-05-13T13:34:26Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vars.length()) > 0) { assert vars.matches((((pattern + \"(\\\\s\") + pattern) + \")*\")); java.lang.String[] varMap = vars.split(\"\\\\s\"); for (java.lang.String varPair : varMap) { java.lang.String[] pair = varPair.split(\"=\"); values.put(expressivo.Expression.parse(pair[0]), java.lang.Double.valueOf(pair[1])); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6301/buggy-version/src.expressivo.Commands.java", "BodyUseAPI": ["java.lang.String.matches(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "a8f1f427b0cd09c6ecb983ba1ec4fa2219ae9651", "Url": "https://api.github.com/repos/Riksi/Expressivo", "Date": "2016-08-29T15:52:17Z"},
{"Line": "=>809", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.joda.time.Minutes.minutesBetween(currentTimeNow, nextClass.getStartTime().toDateTimeToday()).getMinutes()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (minutesLeft <= (java.lang.Integer.parseInt(sharedPreferences.getString(\"next_class_notification_minutes\", \"30\")))) { final android.content.Intent homeActivityIntent = new android.content.Intent(this, com.ghofrani.classapp.activity.Main.class); final android.app.PendingIntent addHomeActivityIntent = android.app.PendingIntent.getActivity(this, 0, homeActivityIntent, PendingIntent.FLAG_CANCEL_CURRENT); notificationCompatBuilderClass = new android.support.v4.app.NotificationCompat.Builder(this, \"class\").setOngoing(true).setSmallIcon(R.drawable.ic_notification_icon).setContentIntent(addHomeActivityIntent).setWhen(0).setColor(nextClass.getColor()).setVisibility(Notification.VISIBILITY_PUBLIC).setPriority(NotificationManager.IMPORTANCE_MAX); notificationCompatBuilderClass.setContentTitle((\"Next: \" + (nextClass.getName()))); if (minutesLeft > 60) { if (minutesLeft < 120) { if (minutesLeft == 61) notificationCompatBuilderClass.setContentText((\"In 1 hour, 1 minute\" + (nextClass.hasLocation() ? \" at \" + (nextClass.getLocation()) : \"\"))); else notificationCompatBuilderClass.setContentText((((\"In 1 hour, \" + (minutesLeft % 60)) + \" minutes\") + (nextClass.hasLocation() ? \" at \" + (nextClass.getLocation()) : \"\"))); }else { if ((minutesLeft % 60) == 0) notificationCompatBuilderClass.setContentText((((\"In \" + (minutesLeft / 60)) + \" hours\") + (nextClass.hasLocation() ? \" at \" + (nextClass.getLocation()) : \"\"))); else if ((minutesLeft % 60) == 1) notificationCompatBuilderClass.setContentText((((\"In \" + ((minutesLeft - (minutesLeft % 60)) / 60)) + \" hours, 1 minute\") + (nextClass.hasLocation() ? \" at \" + (nextClass.getLocation()) : \"\"))); else notificationCompatBuilderClass.setContentText((((((\"In \" + ((minutesLeft - (minutesLeft % 60)) / 60)) + \" hours, \") + (minutesLeft % 60)) + \" minutes\") + (nextClass.hasLocation() ? \" at \" + (nextClass.getLocation()) : \"\"))); } }else if (minutesLeft == 60) notificationCompatBuilderClass.setContentText((\"In 1 hour\" + (nextClass.hasLocation() ? \" at \" + (nextClass.getLocation()) : \"\"))); else if (minutesLeft <= 0) notificationCompatBuilderClass.setContentText((\"In 0 minutes\" + (nextClass.hasLocation() ? \" at \" + (nextClass.getLocation()) : \"\"))); else if (minutesLeft == 1) notificationCompatBuilderClass.setContentText((\"In 1 minute\" + (nextClass.hasLocation() ? \" at \" + (nextClass.getLocation()) : \"\"))); else notificationCompatBuilderClass.setContentText((((\"In \" + minutesLeft) + \" minutes\") + (nextClass.hasLocation() ? \" at \" + (nextClass.getLocation()) : \"\"))); notificationManager.notify(NOTIFICATION_NEXT_CLASS_ID, notificationCompatBuilderClass.build()); }else { notificationManager.cancel(NOTIFICATION_CURRENT_CLASS_ID); notificationManager.cancel(NOTIFICATION_NEXT_CLASS_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4389/buggy-version/app.src.main.java.com.ghofrani.classapp.service.Background.java", "BodyUseAPI": ["NotificationCompat.Builder.setContentText((((\"In \" + ((minutesLeft - (minutesLeft % 60)) / 60)) + \" hours, 1 minute\") + (nextClass.hasLocation() ? \" at \" + (nextClass.getLocation()) : \"\")))", "NotificationCompat.Builder.setContentText((((\"In 1 hour, \" + (minutesLeft % 60)) + \" minutes\") + (nextClass.hasLocation() ? \" at \" + (nextClass.getLocation()) : \"\")))", "NotificationCompat.Builder.setContentText((((\"In \" + (minutesLeft / 60)) + \" hours\") + (nextClass.hasLocation() ? \" at \" + (nextClass.getLocation()) : \"\")))", "NotificationCompat.Builder.setContentText((((((\"In \" + ((minutesLeft - (minutesLeft % 60)) / 60)) + \" hours, \") + (minutesLeft % 60)) + \" minutes\") + (nextClass.hasLocation() ? \" at \" + (nextClass.getLocation()) : \"\")))", "NotificationCompat.Builder.setContentText((((\"In \" + minutesLeft) + \" minutes\") + (nextClass.hasLocation() ? \" at \" + (nextClass.getLocation()) : \"\")))"], "Fixed commit": "42255a9dd464c841f6c82923279ab6f9f78915f2", "Url": "https://api.github.com/repos/arminghofrani/chalkboard", "Date": "2017-10-24T23:00:53Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIntent().getExtras()) != null) { android.util.Log.i(\"DrawActivity\", (\"Started DrawActivity on \" + (new java.util.Date(getIntent().getExtras().getLong(\"date_drawing_start\")).toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/181/buggy-version/app.src.main.java.org.twinnation.doodle.controller.DrawActivity.java", "BodyUseAPI": [], "Fixed commit": "ae5f3eb72ff869d3d178f6aa034373517b596a8d", "Url": "https://api.github.com/repos/TwinProduction/Doodle", "Date": "2017-12-05T18:03:55Z"},
{"Line": "=>1452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orgIds == null) || (orgIds.isEmpty())) { return rval; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5586/buggy-version/manager.api.jpa.src.main.java.io.apiman.manager.api.jpa.JpaStorage.java", "BodyUseAPI": [], "Fixed commit": "578cc4ed9e87cb62fdff71455a71cc53ebafc17c", "Url": "https://api.github.com/repos/cmoulliard/apiman", "Date": "2015-12-14T15:58:30Z"},
{"Line": "=>1029", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orgIds == null) || (orgIds.isEmpty())) { return rval; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5586/buggy-version/manager.api.jpa.src.main.java.io.apiman.manager.api.jpa.JpaStorage.java", "BodyUseAPI": [], "Fixed commit": "578cc4ed9e87cb62fdff71455a71cc53ebafc17c", "Url": "https://api.github.com/repos/cmoulliard/apiman", "Date": "2015-12-14T15:58:30Z"},
{"Line": "=>981", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orgIds == null) || (orgIds.isEmpty())) { return rval; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5586/buggy-version/manager.api.jpa.src.main.java.io.apiman.manager.api.jpa.JpaStorage.java", "BodyUseAPI": [], "Fixed commit": "578cc4ed9e87cb62fdff71455a71cc53ebafc17c", "Url": "https://api.github.com/repos/cmoulliard/apiman", "Date": "2015-12-14T15:58:30Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((preferenceHelper.getPort()) != 80) { text = (text + \":\") + (preferenceHelper.getPort()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2972/buggy-version/android.ServDroid.web.src.org.servDroid.ui.activity.ServDroidBaseFragmentActivity.java", "BodyUseAPI": ["org.servDroid.helper.IPreferenceHelper.getPort()"], "Fixed commit": "220fdb85be89e437afcac5347fee52e9a6a281f0", "Url": "https://api.github.com/repos/joanpuigsanz/servdroid", "Date": "2013-07-24T20:33:50Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.data.mongodb.core.aggregation.AggregationResults<com.clement.magichome.object.BonPointSum>.getUniqueMappedResult()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bps != null) { return bps; }else { bps = new com.clement.magichome.object.BonPointSum(); bps.setTotal(0L); return bps; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1632/buggy-version/src.main.java.com.clement.magichome.service.BonPointDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "d7a559328f3948bdf0a672c86a04d7f5e64fef8d", "Url": "https://api.github.com/repos/clementsoullard/rest-scheduler-ws", "Date": "2016-09-06T15:37:05Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spoofax.modelware.emf.utils.SpoofaxEMFUtils.index2feature(current.eClass(),((org.spoofax.interpreter.terms.IStrategoInt) (adjustedASTSelection.get(i))).intValue())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((feature instanceof org.eclipse.emf.ecore.EReference) && (((org.eclipse.emf.ecore.EReference) (feature)).isContainment()))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7877/buggy-version/org.spoofax.modelware.emf.src.org.spoofax.modelware.emf.utils.Subterm2Subobject.java", "BodyUseAPI": [], "Fixed commit": "4d971c751d876761932570524e8702476917a2b9", "Url": "https://api.github.com/repos/metaborg/spoofax-modelware", "Date": "2013-07-10T23:56:37Z"},
{"Line": "=>692", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.freeplane.features.url.mindmapmode.MFileManager.getAlternativeFile(java.io.File,AlternativeFileMode.AUTOSAVE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (alternativeFile != null) { if (alternativeFile.getAbsoluteFile().equals(file.getAbsoluteFile())) alternativeURL = url; else alternativeURL = org.freeplane.core.util.Compat.fileToUrl(alternativeFile); }else return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1560/buggy-version/freeplane.src.org.freeplane.features.map.mindmapmode.MMapController.java", "BodyUseAPI": ["java.io.File.getAbsoluteFile()", "org.freeplane.core.util.Compat.fileToUrl(java.io.File)", "java.io.File.equals(java.io.File)"], "Fixed commit": "4611a90dfb1f7296707ee6e8e983419f4946fe11", "Url": "https://api.github.com/repos/freeplane/freeplane", "Date": "2014-10-30T13:41:01Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((field.getParams().size()) > 1) { java.lang.Integer precision_threshold = ((java.lang.Integer) (field.getParams().get(1).value)); builder = builder.precisionThreshold(precision_threshold); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3507/buggy-version/src.main.java.org.nlpcn.es4sql.query.maker.AggMaker.java", "BodyUseAPI": ["org.nlpcn.es4sql.domain.MethodField.getParams()", "field.getParams().get(int)"], "Fixed commit": "a6697d6397e96b03778f85f4e1bfba14688df31d", "Url": "https://api.github.com/repos/clude/elasticsearch-sql", "Date": "2016-12-27T12:00:01Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (raw.substring(0, 20).contains(\"<html>\")) { java.lang.System.err.println(\"Received HTML from Reddit API instead of JSON. Have you been making more than 30 requests per minute?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6309/buggy-version/src.main.java.net.dean.jraw.RestResponse.java", "BodyUseAPI": [], "Fixed commit": "ed29ac09e15bed780ded8c67d958b8ec949aac03", "Url": "https://api.github.com/repos/thatJavaNerd/JRAW", "Date": "2014-05-24T01:11:25Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.warnings) == null) { this.warnings = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3559/buggy-version/plugin.bundles.org.simplity.eclipse.plugin.validator.src.org.simplity.eclipse.plugin.validator.CompilationUnit.java", "BodyUseAPI": [], "Fixed commit": "77fc0f3a01fade1fe50212238a68af41fce4496f", "Url": "https://api.github.com/repos/simplity/utils", "Date": "2017-08-02T10:52:20Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.easyuber.easyuber.UberOrderActivity.Container.getDuration()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (rawTime != null) { double time = (java.lang.Double.parseDouble(rawTime)) / 60; time /= 60; int hours = ((int) (time)); int minutes = ((int) (time * 60)) % 60; container.getPriceView().setText((((((((((container.getPrice()) + \" and will be about \") + hours) + \" hours \") + \"and \") + minutes) + \" minutes. This ride will be \") + (container.getDistance())) + \" miles\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6336/buggy-version/app.src.main.java.io.github.easyuber.easyuber.UberOrderActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "ddb990a699b8b8b4ea81ff9f22c89232426fc01f", "Url": "https://api.github.com/repos/robinonsay/EasyUber", "Date": "2016-06-04T16:01:44Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, com.kloudtek.kryptotek.Key>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (key == null) { throw new com.kloudtek.kryptotek.keystore.KeyNotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/605/buggy-version/core.src.main.java.com.kloudtek.kryptotek.keystore.KeyStoreMemoryImpl.java", "BodyUseAPI": [], "Fixed commit": "7ca3376017fba5f3278c450fe5a740a84ef0496b", "Url": "https://api.github.com/repos/kloudtek/kryptotek-core", "Date": "2015-02-20T22:16:52Z"},
{"Line": "=>379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page == null) { it.cnr.isti.hpc.wikipedia.parser.ArticleParser.logger.warn(\"page is null for article {}\", article.getTitle()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5639/buggy-version/src.main.java.it.cnr.isti.hpc.wikipedia.parser.ArticleParser.java", "BodyUseAPI": [], "Fixed commit": "e9f52bc4151e5b9d60e47dd4c9d05ade7c68ee7d", "Url": "https://api.github.com/repos/diegoceccarelli/json-wikipedia", "Date": "2013-08-16T11:20:57Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (defaultServletMatch && (extensionServlets.containsKey(entry.getKey()))) { pathServlet = extensionServlets.get(entry.getKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4259/buggy-version/servlet.src.main.java.io.undertow.servlet.handlers.ServletPathMatches.java", "BodyUseAPI": ["java.util.Map<java.lang.String, io.undertow.servlet.handlers.ServletHandler>.get(entry.getKey())", "java.util.Map.Entry<java.lang.String, java.util.Map<javax.servlet.DispatcherType, java.util.List<io.undertow.servlet.core.ManagedFilter>>>.getKey()"], "Fixed commit": "0a519a98d2c0e5a7748c6fc5cca8f7e949fbe301", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2013-09-27T13:50:31Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.jimple.DefinitionStmt.getRightOp()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(soot.Scene.v().getFastHierarchy().canStoreType(newType, ce.getCastType()))) newType = ce.getCastType();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/352/buggy-version/src.soot.jimple.infoflow.problems.BackwardsInfoflowProblem.java", "BodyUseAPI": ["soot.jimple.CastExpr.getCastType()"], "Fixed commit": "b4d536095bc57b12c904bec0f816223278a76aa7", "Url": "https://api.github.com/repos/titze/soot-infoflow", "Date": "2014-09-04T14:27:03Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.isCancelled()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5741/buggy-version/NoItem.src.net.worldoftomorrow.nala.ni.listeners.InventoryListener.java", "BodyUseAPI": [], "Fixed commit": "5a5cd0127f59a32adf268e450d6025d38f077fcc", "Url": "https://api.github.com/repos/nala3/NoItem", "Date": "2012-09-08T18:04:20Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (supplier != null) { session.save(supplier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7066/buggy-version/src.main.java.com.atom.hibernateSwing.dao.ProductsDAOImpl.java", "BodyUseAPI": ["org.hibernate.Session.save(com.atom.hibernateSwing.model.Supplier)"], "Fixed commit": "cb3f4354cbc79d15ccef8f306fc6d90ece8ec3cd", "Url": "https://api.github.com/repos/atomAtomovich/AccountingInStore", "Date": "2017-01-20T12:38:03Z"},
{"Line": "=>789", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.getData()) != null) { itemName = LocalShops.itemList.getItemName(item.getType().getId(), ((int) (item.getDurability()))); }else { java.util.ArrayList<java.lang.String> nameList = LocalShops.itemList.getItemName(item.getType().getId()); if ((nameList.size()) > 0) { itemName = nameList.get(0); }else { sender.sendMessage((((((((PlayerData.chatPrefix) + (org.bukkit.ChatColor.AQUA)) + \"Item \") + (org.bukkit.ChatColor.WHITE)) + (item.getType().toString())) + (org.bukkit.ChatColor.AQUA)) + \" can not be added to the shop.\")); java.lang.System.out.println(((((\"LocalShops: \" + (player.getName())) + \" tried to add \") + (item.getType().toString())) + \" but it's not in the item list.\")); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3734/buggy-version/src.net.centerleft.localshops.Commands.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage((((((((PlayerData.chatPrefix) + (org.bukkit.ChatColor.AQUA)) + \"Item \") + (org.bukkit.ChatColor.WHITE)) + (item.getType().toString())) + (org.bukkit.ChatColor.AQUA)) + \" can not be added to the shop.\"))", "org.bukkit.inventory.ItemStack.getDurability()", "org.bukkit.inventory.ItemStack.getType()", "item.getType().toString()", "org.bukkit.inventory.ItemStack.getType()", "LocalShops.itemList.getItemName(item.getType().getId())", "item.getType().toString()", "org.bukkit.inventory.ItemStack.getType()", "item.getType().getId()", "LocalShops.itemList.getItemName(item.getType().getId(),((int) (item.getDurability())))", "item.getType().getId()", "org.bukkit.inventory.ItemStack.getType()", "java.io.PrintStream.println(((((\"LocalShops: \" + (player.getName())) + \" tried to add \") + (item.getType().toString())) + \" but it's not in the item list.\"))"], "Fixed commit": "d7579b3efa8530bdab812ccd3604cafc5b5c0795", "Url": "https://api.github.com/repos/Jonbas/LocalShops", "Date": "2011-03-12T16:17:13Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LocalShops.itemList.getItemName(item.getType().getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((returnedNames.size()) == 0) { sender.sendMessage((((((((PlayerData.chatPrefix) + (org.bukkit.ChatColor.AQUA)) + \"Item \") + (org.bukkit.ChatColor.WHITE)) + (item.getType().toString())) + (org.bukkit.ChatColor.AQUA)) + \" can not be sold to the shop.\")); java.lang.System.out.println(((((\"LocalShops: \" + (player.getName())) + \" tried to sell \") + (item.getType().toString())) + \" but it's not in the item list.\")); return false; }else { itemName = returnedNames.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3734/buggy-version/src.net.centerleft.localshops.Commands.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)"], "Fixed commit": "d7579b3efa8530bdab812ccd3604cafc5b5c0795", "Url": "https://api.github.com/repos/Jonbas/LocalShops", "Date": "2011-03-12T16:17:13Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (e != null) { ack.setRemoteException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3333/buggy-version/framework.src.main.java.org.radargun.stages.SingleTXCheckStage.java", "BodyUseAPI": ["org.radargun.stages.DefaultDistStageAck.setRemoteException(java.lang.Exception)"], "Fixed commit": "ca8009397e4c9bdef0977eaf4399f9aceb8b3ef4", "Url": "https://api.github.com/repos/rvansa/radargun", "Date": "2012-10-12T12:03:35Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (e != null) { ack.setRemoteException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3333/buggy-version/framework.src.main.java.org.radargun.stages.SingleTXLoadStage.java", "BodyUseAPI": ["org.radargun.stages.DefaultDistStageAck.setRemoteException(java.lang.Exception)"], "Fixed commit": "ca8009397e4c9bdef0977eaf4399f9aceb8b3ef4", "Url": "https://api.github.com/repos/rvansa/radargun", "Date": "2012-10-12T12:03:35Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { setProgressDrawable(resources.getDrawable(com.andrew.apollo.widgets.theme.ThemeableSeekBar.PROGESS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3458/buggy-version/android.apollo.src.com.andrew.apollo.widgets.theme.ThemeableSeekBar.java", "BodyUseAPI": [], "Fixed commit": "1a3e97065f0895d4f4336cc6375332eb3141dfa6", "Url": "https://api.github.com/repos/gubatron/frostwire", "Date": "2016-10-11T18:14:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(isInEditMode())) { setBackground(resources.getDrawable(com.andrew.apollo.widgets.theme.ThemeableFrameLayout.BACKGROUND)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3458/buggy-version/android.apollo.src.com.andrew.apollo.widgets.theme.ThemeableFrameLayout.java", "BodyUseAPI": [], "Fixed commit": "1a3e97065f0895d4f4336cc6375332eb3141dfa6", "Url": "https://api.github.com/repos/gubatron/frostwire", "Date": "2016-10-11T18:14:22Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isInEditMode()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3458/buggy-version/android.apollo.src.com.andrew.apollo.widgets.RepeatingImageButton.java", "BodyUseAPI": [], "Fixed commit": "1a3e97065f0895d4f4336cc6375332eb3141dfa6", "Url": "https://api.github.com/repos/gubatron/frostwire", "Date": "2016-10-11T18:14:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNotBlank(getWorkspace())) { args.add(\"-workspace\", getWorkspace()); }else { context.log(((\"Using \\'\" + (projectDirectory)) + \"\\' as workspace auto search directory\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6702/buggy-version/src.main.java.jenkins.plugins.clangscanbuild.commands.ScanBuildCommand.java", "BodyUseAPI": [], "Fixed commit": "389f08dc9d61ea165019676365effa72be454a72", "Url": "https://api.github.com/repos/jenkinsci/clang-scanbuild-plugin", "Date": "2014-10-11T04:02:04Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(list.isEmpty())) { java.lang.Object o = list.get(0); if (o instanceof de.xwic.appkit.core.transfer.EntityTransferObject) { de.xwic.appkit.core.dao.DAO dao = de.xwic.appkit.core.dao.DAOSystem.findDAOforEntity(((de.xwic.appkit.core.transfer.EntityTransferObject) (o)).getEntityClass().getName()); type = dao.getEntityClass().getName(); }else if (o instanceof de.xwic.appkit.core.dao.IEntity) { type = de.xwic.appkit.core.model.util.EntityUtil.type(((de.xwic.appkit.core.dao.IEntity) (o))).getName(); }else { throw new de.xwic.appkit.core.dao.DataAccessException((\"Collection is not composed of entities, but of \" + (o.getClass().getName()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7784/buggy-version/de.xwic.appkit.core.src.de.xwic.appkit.core.remote.server.RemoteDataAccessServlet.java", "BodyUseAPI": ["java.util.List.get(int)"], "Fixed commit": "1c9d9f73dd3d51943fb8b4a93edb355f00ac509d", "Url": "https://api.github.com/repos/xwic/appkit", "Date": "2014-02-05T15:06:49Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { lat = savedInstanceState.getDouble(getString(R.string.create_dive_lat), Constants.INVALID_LAT); lng = savedInstanceState.getDouble(getString(R.string.create_dive_lng), Constants.INVALID_LONG); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3048/buggy-version/app.src.main.java.perklun.divebox.activities.CreateDiveActivity.java", "BodyUseAPI": ["android.os.Bundle.getDouble(getString(R.string.create_dive_lng),Constants.INVALID_LONG)", "android.os.Bundle.getDouble(getString(R.string.create_dive_lat),Constants.INVALID_LAT)"], "Fixed commit": "4410cb3da7056285d7d9f6b56045cb5fcec79b12", "Url": "https://api.github.com/repos/perklun/DiveBox", "Date": "2016-05-11T07:16:58Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lat == (perklun.divebox.utils.Constants.INVALID_LAT)) || (lng == (perklun.divebox.utils.Constants.INVALID_LONG))) { double latitude = location.getLatitude(); double longitude = location.getLongitude(); position = new com.google.android.gms.maps.model.LatLng(latitude, longitude); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3048/buggy-version/app.src.main.java.perklun.divebox.activities.CreateDiveActivity.java", "BodyUseAPI": [], "Fixed commit": "4410cb3da7056285d7d9f6b56045cb5fcec79b12", "Url": "https://api.github.com/repos/perklun/DiveBox", "Date": "2016-05-11T07:16:58Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((stVO.getStatus()) == (com.ghlh.strategy.TradeConstants.STATUS_PENDING_BUY)) { if ((sqb.getCurrentPrice()) <= (stVO.getBuyprice())) { java.lang.String message = com.ghlh.strategy.TradeUtil.getConfirmedBuyMessage(monitor.getMonitorstockVO().getStockid(), stVO.getNumber(), stVO.getBuyprice()); com.ghlh.autotrade.EventRecorder.recordEvent(com.ghlh.autotrade.StockTradeIntradyUtil.class, message); com.ghlh.tradeway.SoftwareTrader.getInstance().buyStock(stVO.getStockid(), stVO.getNumber()); com.ghlh.data.db.StocktradeDAO.updateStocktradeStatus(stVO.getId(), TradeConstants.STATUS_T_0_BUY); stVO.setStatus(TradeConstants.STATUS_T_0_BUY); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7205/buggy-version/src.java.com.ghlh.autotrade.StockTradeIntradyUtil.java", "BodyUseAPI": ["com.ghlh.tradeway.SoftwareTrader.getInstance().buyStock(stVO.getStockid(),stVO.getNumber())", "com.ghlh.data.db.StocktradeDAO.updateStocktradeStatus(stVO.getId(),TradeConstants.STATUS_T_0_BUY)", "com.ghlh.data.db.StocktradeVO.getId()", "com.ghlh.strategy.TradeUtil.getConfirmedBuyMessage(monitor.getMonitorstockVO().getStockid(),stVO.getNumber(),stVO.getBuyprice())", "com.ghlh.data.db.StocktradeVO.getBuyprice()", "com.ghlh.data.db.StocktradeVO.getNumber()", "com.ghlh.data.db.StocktradeVO.getNumber()", "com.ghlh.data.db.StocktradeVO.getStockid()", "com.ghlh.data.db.StocktradeVO.setStatus(TradeConstants.STATUS_T_0_BUY)", "com.ghlh.data.db.StocktradeVO.getBuyprice()"], "Fixed commit": "e8651950e6b2d3234c361276292facc2189b4271", "Url": "https://api.github.com/repos/lqjliu/ghlh", "Date": "2013-12-17T11:45:52Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { org.alliedmodders.pawn.lexer.PawnStringLiteralLexer.backup(1); return token((isStringLiteralTokenId() ? PawnStringLiteralTokenId.TEXT : PawnCharacterLiteralTokenId.TEXT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8616/buggy-version/src.org.alliedmodders.pawn.lexer.PawnStringLiteralLexer.java", "BodyUseAPI": [], "Fixed commit": "67749606f586a03321a650a820f676bf1581c3a5", "Url": "https://api.github.com/repos/collinsmith/PawnModule", "Date": "2015-08-31T04:58:23Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.isChecked()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5337/buggy-version/app.src.main.java.redteam.usuevents.view.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "57dbab22de58bc8faf47ecfe960f687b062ea853", "Url": "https://api.github.com/repos/CarsonBradshaw/USU-Events", "Date": "2017-06-21T04:28:35Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sonar.plugins.php.api.tree.lexical.SyntaxToken.isEOF()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isEOF) { lastLine = token.line(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5323/buggy-version/php-frontend.src.main.java.org.sonar.php.metrics.LineVisitor.java", "BodyUseAPI": [], "Fixed commit": "7403bf45048d7157af7efdaf594f8f798b94c3a2", "Url": "https://api.github.com/repos/SonarSource/sonar-php", "Date": "2015-10-20T13:50:11Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<venture.cs414.android.monopoly2.backend.Player>.indexOf(venture.cs414.android.monopoly2.backend.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nextIndex >= (players.size())) { nextIndex = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1397/buggy-version/app.src.main.java.venture.cs414.android.monopoly2.backend.GameFacade.java", "BodyUseAPI": [], "Fixed commit": "232f93ae6410efc7020b9d38dd9200a778bc1371", "Url": "https://api.github.com/repos/TeamVenture457/Monopoly2", "Date": "2016-11-18T08:07:17Z"},
{"Line": "=>545", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextIndex >= (players.size())) { nextIndex = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1397/buggy-version/app.src.main.java.venture.cs414.android.monopoly2.backend.GameFacade.java", "BodyUseAPI": [], "Fixed commit": "232f93ae6410efc7020b9d38dd9200a778bc1371", "Url": "https://api.github.com/repos/TeamVenture457/Monopoly2", "Date": "2016-11-18T08:07:17Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["stm.getObject().asResource().getURI()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(allLinks.contains(entityURI))) allLinks.add(entityURI);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4624/buggy-version/e-link.src.main.java.eu.freme.eservices.elink.api.DataEnricher.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "7fdc85c551dbf1c59d327c6cf7ae3e95751421aa", "Url": "https://api.github.com/repos/freme-project/e-services", "Date": "2016-12-06T10:53:02Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((part == 1) && ((eventTime.getMillis()) == 0)) name = event.getName(); else name = (((event.getName()) + \" (Part \") + part) + \")\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5093/buggy-version/src.com.pennapps.smartschedule.scheduler.RollingScheduler.java", "BodyUseAPI": [], "Fixed commit": "5bc3dbd39c97caae7a0547d038a041c4df7d79d6", "Url": "https://api.github.com/repos/blacksmithgu/SmartSchedule", "Date": "2014-09-14T02:02:22Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((fromDate) == null) || ((toDate) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8442/buggy-version/src.inventory.reportPage.ReportView.java", "BodyUseAPI": [], "Fixed commit": "3ff33d271cd097e9e2a43ba5879d2296a2cab6e0", "Url": "https://api.github.com/repos/bauli2000/Inventory", "Date": "2013-10-31T09:48:58Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (intent.hasExtra(WifiP2pManager.EXTRA_WIFI_P2P_DEVICE)) { wifiDirectApp.mThisDevice = intent.getParcelableExtra(WifiP2pManager.EXTRA_WIFI_P2P_DEVICE); wifiDirectApp.mDeviceName = wifiDirectApp.mThisDevice.deviceName; if ((wifiDirectApp.mHomeActivity) != null) { wifiDirectApp.mHomeActivity.updateThisDevice(wifiDirectApp.mThisDevice); return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4730/buggy-version/app.src.main.java.com.seniordesign.wolfpack.quizinator.WifiDirect.ConnectionService.java", "BodyUseAPI": ["android.content.Intent.getParcelableExtra(WifiP2pManager.EXTRA_WIFI_P2P_DEVICE)"], "Fixed commit": "b148319fd232be3aa58561af8ee949aa0fc5c385", "Url": "https://api.github.com/repos/TeamWolfpack/Quizinator", "Date": "2016-12-01T23:44:38Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.hasOption(option)) { field.setBoolean(instance, input.hasOption(option)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1699/buggy-version/src.main.java.jpbetz.cli.CommandSet.java", "BodyUseAPI": ["jpbetz.cli.CommandContext.hasOption(org.apache.commons.cli.Option)", "java.lang.reflect.Field.setBoolean(jpbetz.cli.Command,input.hasOption(option))"], "Fixed commit": "cdb11cbd77b84b2dae7161781cfb0ec110ae0fac", "Url": "https://api.github.com/repos/briangu/cli-util", "Date": "2011-12-02T06:09:30Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.caleydo.core.data.datadomain.ATableBasedDataDomain.getDimensionIDType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (selectionDelta.getIDType().getIDCategory().equals(dimensionIDType.getIDCategory())) { if ((selectionDelta.getIDType()) != dimensionIDType) { selectionDelta = org.caleydo.core.data.selection.delta.DeltaConverter.convertDelta(getDataDomain().getDimensionIDMappingManager(), dimensionIDType, selectionDelta); } dimensionSelectionManager.setDelta(selectionDelta); callback.onSelectionUpdate(dimensionSelectionManager); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6241/buggy-version/org.caleydo.core.src.org.caleydo.core.data.selection.TablePerspectiveSelectionMixin.java", "BodyUseAPI": ["org.caleydo.core.data.selection.delta.SelectionDelta.getIDType()", "org.caleydo.core.data.selection.delta.DeltaConverter.convertDelta(getDataDomain().getDimensionIDMappingManager(),org.caleydo.core.id.IDType,org.caleydo.core.data.selection.delta.SelectionDelta)"], "Fixed commit": "a70466867f1d0099f3e69e8786c2f59ba88d3d7b", "Url": "https://api.github.com/repos/Caleydo/caleydo", "Date": "2013-07-29T12:17:32Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((messageModel) == (com.alibaba.rocketmq.common.protocol.heartbeat.MessageModel.CLUSTERING)) { defaultMQPushConsumer.changeInstanceNameToPID(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3492/buggy-version/rocketmq-client.src.main.java.com.alibaba.rocketmq.client.consumer.cacheable.CacheableConsumer.java", "BodyUseAPI": [], "Fixed commit": "289fc8badcc1ceb23d8e69d8cadc0375a1594b89", "Url": "https://api.github.com/repos/lizhanhui/Alibaba_RocketMQ", "Date": "2015-12-29T03:38:41Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_traversePolygon) != null) { _traversePolygon.setFlash(_traverseMode, _traverseWireMode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4884/buggy-version/src.com.haxademic.app.haxmapper.distribution.MappingGroup.java", "BodyUseAPI": [], "Fixed commit": "277578d72be9c0cabe76f069cc5efe8b52bc9827", "Url": "https://api.github.com/repos/cacheflowe/haxademic", "Date": "2015-04-22T20:19:37Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (caseid == 1) com.google.gwt.user.client.History.newItem(edu.cmu.square.client.ui.ChooseStep.ChooseStepPilot.generateNavigationId(ChooseStepPilot.PageId.home));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5454/buggy-version/src.edu.cmu.square.client.ui.assetsAndGoals.AssociateAssetsWithGoalsPane.java", "BodyUseAPI": [], "Fixed commit": "e89e83eb652e0e84fd8824796b5872928260be9e", "Url": "https://api.github.com/repos/deekay0/asquare", "Date": "2011-07-12T04:41:40Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (caseid == 3) com.google.gwt.user.client.History.newItem(edu.cmu.square.client.ui.ChooseStepCase3.ChooseStepCase3Pilot.generateNavigationId(ChooseStepCase3Pilot.PageId.home));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5454/buggy-version/src.edu.cmu.square.client.ui.assetsAndGoals.AssociateAssetsWithGoalsPane.java", "BodyUseAPI": [], "Fixed commit": "e89e83eb652e0e84fd8824796b5872928260be9e", "Url": "https://api.github.com/repos/deekay0/asquare", "Date": "2011-07-12T04:41:40Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((firebaseUser) != null) { databaseReference.child(userID).removeValue(); databaseReference.child(userID).push().setValue(getUser()); }else { databaseReference.push().setValue(getUser()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3359/buggy-version/app.src.main.java.kg.kloop.android.redbutton.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "928bf8637c7ba6f52f464d7317e7fbad31db4b7f", "Url": "https://api.github.com/repos/AlexWalker28/REDbutton", "Date": "2017-04-23T11:44:37Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Data.filteringEnabled.size()) > 0) showAllButton.setVisibility(View.INVISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4917/buggy-version/FunWithFlags.app.src.main.java.ch.ethz.inf.vs.a4.funwithflags.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "45cd59d897c443e58a68c09d5564434092c214c4", "Url": "https://api.github.com/repos/semaj7/distributedsystems", "Date": "2015-11-29T14:49:36Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Data.filteringEnabled.size()) > 0) showAllButton.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4917/buggy-version/FunWithFlags.app.src.main.java.ch.ethz.inf.vs.a4.funwithflags.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "45cd59d897c443e58a68c09d5564434092c214c4", "Url": "https://api.github.com/repos/semaj7/distributedsystems", "Date": "2015-11-29T14:49:36Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (entity != entity2) if (entity.getPolygon().intersects(entity2.getPolygon())) entity.collision(entity2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/212/buggy-version/src.main.java.com.shc.silenceengine.collision.colliders.QuadTreeSceneCollider.java", "BodyUseAPI": ["com.shc.silenceengine.entity.Entity2D.collision(com.shc.silenceengine.entity.Entity2D)", "entity.getPolygon().intersects(entity2.getPolygon())", "com.shc.silenceengine.entity.Entity2D.getPolygon()", "com.shc.silenceengine.entity.Entity2D.getPolygon()"], "Fixed commit": "4c33d852f560257c8c9767b6aaa2b7b30bd305e1", "Url": "https://api.github.com/repos/sriharshachilakapati/SilenceEngine", "Date": "2015-01-10T10:44:24Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseCode == 403) { throw new com.ppm.integration.agilesdk.connector.octane.client.OctaneClientException(\"OCTANE_API\", \"ERROR_AUTHENTICATION_FAILED\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1986/buggy-version/src.com.ppm.integration.agilesdk.connector.octane.client.ClientPublicAPI.java", "BodyUseAPI": [], "Fixed commit": "85c8efc315c4557f07f9d9cb361482f55cf1de46", "Url": "https://api.github.com/repos/MicroFocus/ppm-octane-connector", "Date": "2017-03-30T08:05:18Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lionzxy.vkapi.VKUser.getAnswer(java.lang.String,java.util.HashMap<java.lang.String, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((obj != null) && (from != null)) new com.lionzxy.vkapi.exceptions.VKException(obj.toJSONString(), from); else com.lionzxy.vkapi.util.Logger.getLogger().print(\"Error! Message not send!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2896/buggy-version/src.com.lionzxy.vkapi.messages.Message.java", "BodyUseAPI": ["org.json.simple.JSONObject.toJSONString()"], "Fixed commit": "6270bd69e64084551396cf4a5e62bcb08695515d", "Url": "https://api.github.com/repos/LionZXY/BookTracker", "Date": "2016-01-28T14:39:09Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((virtualEntities.get(uri)) == backend)) { virtualEntities.put(uri, backend); eu.spitfire_project.smart_service_proxy.core.httpServer.EntityManager.log.debug((\"New virtual entity created: \" + uri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7376/buggy-version/src.main.java.eu.spitfire_project.smart_service_proxy.core.httpServer.EntityManager.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.net.URI, eu.spitfire_project.smart_service_proxy.core.Backend>.put(java.net.URI,eu.spitfire_project.smart_service_proxy.core.Backend)", "org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "b5cae5d37bb8a8b61b37d07cf0b00c35279dd238", "Url": "https://api.github.com/repos/ict-spitfire/smart-service-proxy", "Date": "2013-04-26T08:42:31Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((entities.get(uri)) == backend)) { entities.put(uri, backend); eu.spitfire_project.smart_service_proxy.core.httpServer.EntityManager.log.debug((\"New entity created: \" + uri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7376/buggy-version/src.main.java.eu.spitfire_project.smart_service_proxy.core.httpServer.EntityManager.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)", "java.util.concurrent.ConcurrentHashMap<java.net.URI, eu.spitfire_project.smart_service_proxy.core.Backend>.put(java.net.URI,eu.spitfire_project.smart_service_proxy.core.Backend)"], "Fixed commit": "b5cae5d37bb8a8b61b37d07cf0b00c35279dd238", "Url": "https://api.github.com/repos/ict-spitfire/smart-service-proxy", "Date": "2013-04-26T08:42:31Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mp) != null) { if ((mp.isPlaying()) && ((t) == 11)) { mp.pause(); t = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4633/buggy-version/vision_app.app.src.main.java.com.team2783.vision.VisionTrackerActivity.java", "BodyUseAPI": [], "Fixed commit": "a1cc3da6f7df44faec5c1f38f56c01d90867e6d9", "Url": "https://api.github.com/repos/kyeot/2017-Off-Season-Code", "Date": "2017-09-02T16:44:53Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.commons.lang3.math.NumberUtils.toInt(this.select, 0)) > _size) { this.select = _size + \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6979/buggy-version/core-lib.BASE.com.netsteadfast.greenstep.base.model.PageOf.java", "BodyUseAPI": [], "Fixed commit": "8750a23ccd027951652d46191f9ca53a705bb549", "Url": "https://api.github.com/repos/billchen198318/bamboobsc", "Date": "2017-06-03T14:54:53Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (field != \"\") { message = \"invalid \" + field; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7889/buggy-version/mci-api.src.main.java.org.sharedhealth.mci.web.handler.ErrorHandler.java", "BodyUseAPI": [], "Fixed commit": "42ce48c5134e3b768f1c56006def49280d3a3cdb", "Url": "https://api.github.com/repos/SharedHealth/MCI-Resigtry", "Date": "2014-09-14T07:07:59Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(deck.isDone())) drawTile(((BOARD_WIDTH) + (((MENU_WIDTH) - (TILE_WIDTH)) / 2)), 10, deck.getCurrent(), g);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1702/buggy-version/src.GameEntities.Drawer.java", "BodyUseAPI": ["GameEntities.Drawer.Screen.drawTile(int,int,deck.getCurrent(),java.awt.Graphics)", "GameEntities.Deck.getCurrent()"], "Fixed commit": "d59f915c65756a9a2bf24c14fa32df56cacb526d", "Url": "https://api.github.com/repos/wheelsandbytes/tigerzone", "Date": "2016-12-03T00:37:57Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (rootNodeImpl instanceof de.lessvoid.nifty.spi.node.NiftyLayoutNodeImpl) { ((de.lessvoid.nifty.spi.node.NiftyLayoutNodeImpl) (rootNodeImpl)).onAttach(layout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8809/buggy-version/nifty.src.main.java.de.lessvoid.nifty.Nifty.java", "BodyUseAPI": [], "Fixed commit": "68ab497eb1f62b4e720fe6bd96b57283f5070719", "Url": "https://api.github.com/repos/mkaring/nifty-gui", "Date": "2015-09-06T19:42:45Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4735/buggy-version/src.main.java.com.mridang.wifiadb.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "83602a221ea9a1aed50039a23735ee414756dcb4", "Url": "https://api.github.com/repos/mridang/dashclock-wifiadb", "Date": "2015-03-29T09:13:06Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collectionInterval instanceof java.lang.Long) { this.collectionInterval = ((java.lang.Long) (collectionInterval)); }else if ((collectionInterval instanceof java.lang.String[]) && (!(org.apache.commons.lang3.ArrayUtils.isEmpty(((java.lang.String[]) (collectionInterval)))))) { try { this.collectionInterval = java.lang.Long.parseLong(((java.lang.String[]) (collectionInterval))[0]); } catch (java.lang.Exception e) { this.collectionInterval = -1L; } }else { this.collectionInterval = -1L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3590/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.resource.common.monitor.config.MonitoringConfigFormNG.java", "BodyUseAPI": [], "Fixed commit": "c26be0df4bc94ad8df4e1af3e2c93b541c37d549", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-09-08T13:03:47Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mForm.getCollectionInterval()) < 1L) || ((mForm.getCollectionInterval()) > 999L)) { addCustomActionErrorMessages(getText(\"errors.range\", new java.lang.String[]{ \"Colelction Interval\", \"1\", \"999\" })); return \"failure\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3590/buggy-version/hq-web.src.main.java.org.hyperic.hq.ui.action.resource.common.monitor.config.ConfigMetricsActionNG.java", "BodyUseAPI": [], "Fixed commit": "c26be0df4bc94ad8df4e1af3e2c93b541c37d549", "Url": "https://api.github.com/repos/hyperic/hq", "Date": "2015-09-08T13:03:47Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rebecalang.compiler.modelcompiler.corerebeca.statementsemanticchecker.expression.TernaryExpressionSemanticCheck.check(tExpression.getLeft())", "org.rebecalang.compiler.modelcompiler.corerebeca.statementsemanticchecker.expression.TernaryExpressionSemanticCheck.check(tExpression.getRight())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.rebecalang.compiler.utils.TypesUtilities.getInstance().canTypeUpCastTo(rType.getFirst(), lType.getFirst())) { tExpression.setType(lType.getFirst()); }else if (org.rebecalang.compiler.utils.TypesUtilities.getInstance().canTypeUpCastTo(lType.getFirst(), rType.getFirst())) { tExpression.setType(rType.getFirst()); }else { org.rebecalang.compiler.utils.CodeCompilationException cce = org.rebecalang.compiler.utils.TypesUtilities.getTypeMismatchException(rType.getFirst(), lType.getFirst()); cce.setLine(tExpression.getLeft().getLineNumber()); cce.setColumn(tExpression.getLeft().getCharacter()); exceptionContainer.addException(cce); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6858/buggy-version/src.main.java.org.rebecalang.compiler.modelcompiler.corerebeca.statementsemanticchecker.expression.TernaryExpressionSemanticCheck.java", "BodyUseAPI": ["org.rebecalang.compiler.utils.Pair<org.rebecalang.compiler.modelcompiler.corerebeca.objectmodel.Type, java.lang.Object>.getFirst()", "org.rebecalang.compiler.utils.Pair<org.rebecalang.compiler.modelcompiler.corerebeca.objectmodel.Type, java.lang.Object>.getFirst()", "org.rebecalang.compiler.utils.TypesUtilities.getInstance().canTypeUpCastTo(lType.getFirst(),rType.getFirst())", "org.rebecalang.compiler.utils.Pair<org.rebecalang.compiler.modelcompiler.corerebeca.objectmodel.Type, java.lang.Object>.getFirst()", "org.rebecalang.compiler.utils.TypesUtilities.getTypeMismatchException(rType.getFirst(),lType.getFirst())", "org.rebecalang.compiler.modelcompiler.corerebeca.objectmodel.TernaryExpression.setType(lType.getFirst())", "org.rebecalang.compiler.utils.Pair<org.rebecalang.compiler.modelcompiler.corerebeca.objectmodel.Type, java.lang.Object>.getFirst()", "org.rebecalang.compiler.utils.Pair<org.rebecalang.compiler.modelcompiler.corerebeca.objectmodel.Type, java.lang.Object>.getFirst()", "org.rebecalang.compiler.modelcompiler.corerebeca.objectmodel.TernaryExpression.setType(rType.getFirst())", "org.rebecalang.compiler.utils.Pair<org.rebecalang.compiler.modelcompiler.corerebeca.objectmodel.Type, java.lang.Object>.getFirst()"], "Fixed commit": "63b686af8c0f28dc19089a3fae5bbe46aca5daee", "Url": "https://api.github.com/repos/rebeca-lang/org.rebecalang.compiler", "Date": "2017-01-03T16:12:57Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rebuild) { org.eclipse.core.resources.IProject project = mavenProjectFacade.getProject(); com.eidosmedia.eclipse.maven.resources.remote.BuildParticipant.log.debug(\"build project {}\", project); rebuilProject(project); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7588/buggy-version/com.eidosmedia.eclipse.maven.m2e-remote-resources.src.com.eidosmedia.eclipse.maven.resources.remote.BuildParticipant.java", "BodyUseAPI": [], "Fixed commit": "e2dd377a3c96bc4cf0efc2e49fc11e3618b81083", "Url": "https://api.github.com/repos/dashie/m2e-remote-resources", "Date": "2013-09-14T18:43:48Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getScanManager().startSingleScan()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (check == false) { android.widget.Toast.makeText(this, R.string.error_scanning, Toast.LENGTH_LONG).show(); }else { if ((lastMP) == null) { lastMP = getStorage().createMeasurePoint(floorSelected, p[0], p[1]); }else if (((lastMP.getPosx()) != (p[0])) || ((lastMP.getPosy()) != (p[1]))) { lastMP = getStorage().createMeasurePoint(floorSelected, p[0], p[1]); } if ((waitDialog) != null) { waitDialog.dismiss(); } waitDialog = new android.app.AlertDialog.Builder(this).setTitle(R.string.scan_wait).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1256/buggy-version/WPS.src.de.rwth.ti.wps.MeasureActivity.java", "BodyUseAPI": [], "Fixed commit": "b1bb5698efebc833ab644306943982481059b514", "Url": "https://api.github.com/repos/tcuje/PraktikumSS13-WLAN-Fingerprint", "Date": "2013-06-23T07:56:00Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (deveCalcular) { Pipeline.Mapeamento.Map.informarDimensoesPanel(tamanhoXPanel, tamanhoYPanel); Pipeline.Mapeamento.Map.informarDimensoesMaximasMundo(tamanhoMundoX, tamanhoMundoY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2356/buggy-version/src.Pipeline.Mapeamento.Map.java", "BodyUseAPI": [], "Fixed commit": "af29875665b1e404a0a1639e0405847138d6a9cc", "Url": "https://api.github.com/repos/pauloht/TrabalhoCG", "Date": "2016-08-30T00:53:30Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!fullEntity) ++carry;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5161/buggy-version/transaction_client.src.TransactionClient.java", "BodyUseAPI": [], "Fixed commit": "e3abe8a1c4741ec08c8ff08a443c73bc1564af3b", "Url": "https://api.github.com/repos/teodormacicas/ERS-testing-tool", "Date": "2013-08-02T14:33:26Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ent instanceof org.bukkit.entity.Tameable) && ((!(((org.bukkit.entity.Tameable) (event.getEntity())).isTamed())) || (((org.bukkit.entity.Tameable) (ent)).getOwner().equals(event.getRemover())))) isOwner = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/828/buggy-version/src.main.java.com.sk89q.craftbook.mech.BetterLeads.java", "BodyUseAPI": [], "Fixed commit": "54ef2819b8b5ba6821410139fed6151a94d61454", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-11-06T07:23:09Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((chunk == null) || ((chunk.length) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7030/buggy-version/src.main.java.sx.blah.discord.util.MessageHistoryBuilder.java", "BodyUseAPI": [], "Fixed commit": "5f2fb1bb35c80497cd12774fc2db21df19d8b652", "Url": "https://api.github.com/repos/JamesGallicchio/Discord4J", "Date": "2017-05-06T16:14:06Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<sx.blah.discord.handle.obj.IMessage>.indexOf(sx.blah.discord.handle.obj.IMessage)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index >= 0) { sx.blah.discord.handle.obj.IMessage[] toAdd = cached.subList((index + 1), cached.size()).toArray(new sx.blah.discord.handle.obj.IMessage[0]); if ((toAdd.length) > 0) { if (!(add(toAdd))) return; last = toAdd[((toAdd.length) - 1)]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7030/buggy-version/src.main.java.sx.blah.discord.util.MessageHistoryBuilder.java", "BodyUseAPI": ["cached.subList((index + 1), cached.size()).toArray(sx.blah.discord.handle.obj.IMessage[])", "java.util.List<sx.blah.discord.handle.obj.IMessage>.subList(int,cached.size())"], "Fixed commit": "5f2fb1bb35c80497cd12774fc2db21df19d8b652", "Url": "https://api.github.com/repos/JamesGallicchio/Discord4J", "Date": "2017-05-06T16:14:06Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((count) < 0) || (((currentCount)++) < (count))) { messages.add(last); }else return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7030/buggy-version/src.main.java.sx.blah.discord.util.MessageHistoryBuilder.java", "BodyUseAPI": [], "Fixed commit": "5f2fb1bb35c80497cd12774fc2db21df19d8b652", "Url": "https://api.github.com/repos/JamesGallicchio/Discord4J", "Date": "2017-05-06T16:14:06Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.viewers.IStructuredSelection.getFirstElement()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((descriptor.getData()) instanceof org.talend.designer.core.ui.editor.connections.ConnectionLabel) { createDynamicComposite(tabFactory.getTabComposite(), ((org.talend.designer.core.ui.editor.connections.ConnectionLabel) (descriptor.getData())).getConnection(), descriptor.getCategory()); }else { createDynamicComposite(tabFactory.getTabComposite(), ((org.talend.core.model.process.Element) (descriptor.getData())), descriptor.getCategory()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6563/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.views.properties.ComponentSettingsView.java", "BodyUseAPI": ["org.talend.designer.core.ui.views.properties.ComponentSettingsView.1.createDynamicComposite(tabFactory.getTabComposite(),((org.talend.core.model.process.Element) (descriptor.getData())),descriptor.getCategory())", "org.talend.designer.core.ui.views.properties.ComponentSettingsView.1.createDynamicComposite(tabFactory.getTabComposite(),((org.talend.designer.core.ui.editor.connections.ConnectionLabel) (descriptor.getData())).getConnection(),descriptor.getCategory())", "org.talend.core.properties.tab.TalendPropertyTabDescriptor.getData()", "org.talend.core.properties.tab.TalendPropertyTabDescriptor.getData()", "((org.talend.designer.core.ui.editor.connections.ConnectionLabel) (descriptor.getData())).getConnection()", "org.talend.core.properties.tab.TalendPropertyTabDescriptor.getCategory()", "org.talend.core.properties.tab.TalendPropertyTabDescriptor.getCategory()"], "Fixed commit": "a79fa236c2bf0056bd6ed745872f24e3f272524b", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2014-06-30T22:32:51Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (elem instanceof org.talend.designer.core.ui.editor.notes.Note) { return EElementType.NOTE.getCategories(); }else if (elem instanceof org.talend.designer.core.ui.editor.subjobcontainer.SubjobContainer) { return EElementType.SUBJOB.getCategories(); }else if (elem instanceof org.talend.designer.core.ui.editor.connections.ConnectionLabel) { return getCategories(((org.talend.designer.core.ui.editor.connections.ConnectionLabel) (elem)).getConnection()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6563/buggy-version/main.plugins.org.talend.designer.core.src.main.java.org.talend.designer.core.ui.views.properties.ComponentSettingsView.java", "BodyUseAPI": [], "Fixed commit": "a79fa236c2bf0056bd6ed745872f24e3f272524b", "Url": "https://api.github.com/repos/Talend/tdi-studio-se", "Date": "2014-06-30T22:32:51Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["graindcafe.thecave.plugin.TheCave.getDungeon(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (d == null) { new graindcafe.thecave.rooms.Portal(plugin, p); p.sendMessage(\"The portal was not added to any dungeon as you don't have any.\"); }else { d.addRoom(new graindcafe.thecave.rooms.Portal(plugin, p)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8718/buggy-version/src.graindcafe.thecave.commands.DebugController.java", "BodyUseAPI": ["graindcafe.thecave.plugin.Dungeon.addRoom(graindcafe.thecave.rooms.Portal)"], "Fixed commit": "f2d4d4d7d16361a17d5aa4e62a10139955ef7e3f", "Url": "https://api.github.com/repos/graindcafe/TheCave", "Date": "2013-07-22T15:30:32Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.zk.ui.event.Event.getTarget()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (comp.hasAttribute(BinderImpl.VAR)) { java.lang.Object ref = comp.getAttribute(((java.lang.String) (comp.getAttribute(BinderImpl.VAR)))); if (ref instanceof org.zkoss.bind.sys.ReferenceBinding) { org.zkoss.bind.impl.BinderUtil.markHandling(comp, ((org.zkoss.bind.sys.ReferenceBinding) (ref)).getBinder()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4287/buggy-version/zkbind.src.org.zkoss.bind.tracker.impl.BindUiLifeCycle.java", "BodyUseAPI": ["org.zkoss.zk.ui.Component.getAttribute(BinderImpl.VAR)", "org.zkoss.zk.ui.Component.getAttribute(((java.lang.String) (comp.getAttribute(BinderImpl.VAR))))", "org.zkoss.bind.impl.BinderUtil.markHandling(org.zkoss.zk.ui.Component,((org.zkoss.bind.sys.ReferenceBinding) (ref)).getBinder())"], "Fixed commit": "8010fc9686516adc66d7b867312b18bd4743f5aa", "Url": "https://api.github.com/repos/wenninghsu/zk", "Date": "2015-12-24T03:20:13Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foundDay) { int selectedDay = ((!isSelectedDayDisabled) && ((mSelectedDay) > 0)) ? mSelectedDay : startDay; setSelectedDay(selectedDay, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5592/buggy-version/Ranger.src.main.java.com.andressantibanez.ranger.Ranger.java", "BodyUseAPI": [], "Fixed commit": "58e274cbe30496117eded6f661c880c19e725978", "Url": "https://api.github.com/repos/claudioredi/Ranger", "Date": "2016-03-10T20:05:16Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) { timer.interrupt(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1816/buggy-version/csci201-Group-server.src.server.ServerThread.java", "BodyUseAPI": [], "Fixed commit": "f7834b564ba5f17fdc8303bebcaae23ae9e64c6e", "Url": "https://api.github.com/repos/sstraw/csci201-Group", "Date": "2014-12-02T08:15:26Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.getCode().equals(ResultCode.INVALID_CHARACTER_IN_NAME)) { message = res.getString(R.string.filename_forbidden_characters); }else if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.INVALID_CHARACTER_DETECT_IN_SERVER)) { message = res.getString(R.string.filename_forbidden_charaters_from_server); }else if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.FILE_NOT_FOUND)) { message = res.getString(R.string.rename_server_fail_msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6865/buggy-version/src.com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.java", "BodyUseAPI": ["com.owncloud.android.lib.common.operations.RemoteOperationResult.getCode()", "com.owncloud.android.lib.common.operations.RemoteOperationResult.getCode()"], "Fixed commit": "6cc57698018e1f52521c8714d4b92d186fac84d1", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2017-03-07T08:22:40Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["shapes.controller.GameManager.getSelected()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((selected.getX()) < ((ri.w.getX()) + (0.5 * (ri.w.getWidth())))) && ((ri.dexword) == 0)) { if (!(gm.getPa().connectWordLeftPoem(gm.getPa().getPoems().get(ri.dexpoem), selected, ri.dexrow))) { revert(); } }else if (((selected.getX()) >= ((ri.w.getX()) + (0.5 * (ri.w.getWidth())))) && ((ri.dexword) == ((gm.getPa().getPoems().get(ri.dexpoem).getRows().get(ri.dexrow).getWords().size()) - 1))) { if (!(gm.getPa().connectWordRightPoem(gm.getPa().getPoems().get(ri.dexpoem), selected, ri.dexrow))) { revert(); } }else { revert(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6215/buggy-version/CyberPoetrySlam.src.shapes.controller.ConnectWordController.java", "BodyUseAPI": ["gm.getPa().getPoems().get(ri.dexpoem)", "gm.getPa().connectWordLeftPoem(gm.getPa().getPoems().get(ri.dexpoem),shapes.controller.Word,ri.dexrow)", "gm.getPa().getPoems().get(ri.dexpoem).getRows()", "gm.getPa().getPoems().get(ri.dexpoem).getRows().get(ri.dexrow).getWords().size()", "gm.getPa().getPoems().get(ri.dexpoem).getRows().get(ri.dexrow)", "shapes.controller.Word.getX()", "gm.getPa().getPoems().get(ri.dexpoem)", "ri.w.getWidth()", "gm.getPa().connectWordRightPoem(gm.getPa().getPoems().get(ri.dexpoem),shapes.controller.Word,ri.dexrow)", "gm.getPa().getPoems().get(ri.dexpoem).getRows().get(ri.dexrow).getWords()", "gm.getPa().getPoems().get(ri.dexpoem)", "ri.w.getX()"], "Fixed commit": "f50cf07e7b52c27b259d78ef34de1bffeb5eaf54", "Url": "https://api.github.com/repos/tejbir-singh/WPI-CS509", "Date": "2014-11-03T06:40:14Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(extDir.isDirectory())) { de.andreas_rueckert.util.LogUtils.getInstance().getLogger().error(((extDir.getName()) + \" file is not a directory!\")); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2619/buggy-version/core.src.de.andreas_rueckert.util.ModuleLoader.java", "BodyUseAPI": ["de.andreas_rueckert.util.LogUtils.getInstance().getLogger().error(java.lang.String)", "java.io.File.getName()"], "Fixed commit": "4b0c7f914a0490578b65fe60535c2e4b031988b7", "Url": "https://api.github.com/repos/ReAzem/cryptocoin-tradelib", "Date": "2013-04-23T20:50:13Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (moduleJars != null) { for (java.io.File currentJar : getModuleJars()) { de.andreas_rueckert.util.LogUtils.getInstance().getLogger().info((\"Loading module jar: \" + (currentJar.getName()))); loadClassesFromJar(currentJar); } }else { de.andreas_rueckert.util.LogUtils.getInstance().getLogger().warn(\"No module jars found in ext/ directory\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2619/buggy-version/core.src.de.andreas_rueckert.util.ModuleLoader.java", "BodyUseAPI": [], "Fixed commit": "4b0c7f914a0490578b65fe60535c2e4b031988b7", "Url": "https://api.github.com/repos/ReAzem/cryptocoin-tradelib", "Date": "2013-04-23T20:50:13Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (destructiveSort) { subLists.add(currentList); shouldListBeSorted.add(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2767/buggy-version/src.org.nschmidt.ldparteditor.data.Sorter.java", "BodyUseAPI": [], "Fixed commit": "29df2163c5f38221110d9577b62892e415d4fdd6", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-04-11T08:52:12Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (position > (mDeletePosition)) { insertEmoji((position - 1)); }else { insertEmoji(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8406/buggy-version/rsen.src.main.java.com.rsen.viewgroup.EmojiView.java", "BodyUseAPI": ["com.rsen.viewgroup.EmojiView.EmojiAdapter.1.insertEmoji(int)", "com.rsen.viewgroup.EmojiView.EmojiAdapter.1.insertEmoji(int)"], "Fixed commit": "a26290328f1690f85a5f52359735bd2f5907eeff", "Url": "https://api.github.com/repos/angcyo/RJcenter", "Date": "2016-11-04T23:16:42Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.solr.common.SolrDocument.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (values != null) value = values.get(0); else value = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7916/buggy-version/api.src.main.java.org.openmrs.module.chartsearch.solr.ChartSearchSearcher.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)"], "Fixed commit": "e5d285a156629c9198b50e3c15c7d3e37961086b", "Url": "https://api.github.com/repos/tallevi12/ChartSearch", "Date": "2014-03-21T12:33:14Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((roundnumber < 18) && (rule.setStone(gbp))) { if ((roundnumber % 2) == 0) { gbp.setSide(StoneSide.PLAYER1); }else { gbp.setSide(StoneSide.PLAYER2); } }else if (roundnumber >= 18) { }else { turn_ok = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1148/buggy-version/core.src.com.mygdx.game.game.GameBoardLogic.java", "BodyUseAPI": ["com.mygdx.game.game.GameBoardPoint.setSide(StoneSide.PLAYER2)", "com.mygdx.game.game.GameBoardPoint.setSide(StoneSide.PLAYER1)"], "Fixed commit": "fef27fadcfc25e79b847d3da81030bbf5882e2e9", "Url": "https://api.github.com/repos/brennerit/muehle", "Date": "2016-08-28T00:22:07Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (origine != null) { if (co.getStatut().equalsIgnoreCase(\"en creation\")) { return prefix + \"IHM_Client/include/commande\"; }else { return prefix + \"IHM_Client/include/suiviCommande\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2396/buggy-version/restaurantXtier.restaurantXtier-war.src.java.controleurs.IHMClientControleur.java", "BodyUseAPI": [], "Fixed commit": "26ce93d12bd8041fd233a7d68617611943da171a", "Url": "https://api.github.com/repos/mgriffoul/restaurantXtier", "Date": "2016-06-16T10:35:28Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["framework.scuba.domain.MemEdge.getSrc()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (src.isParamNode()) { return ret; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5231/buggy-version/src.framework.scuba.controller.InstnController.java", "BodyUseAPI": [], "Fixed commit": "673564f3d246e9e9356343a153ef8ec8962892cf", "Url": "https://api.github.com/repos/xwangsd/Scuba", "Date": "2014-09-22T18:48:41Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view.getVisibility()) == (android.view.View.GONE)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5982/buggy-version/app.src.main.java.bookdlab.bookd.helpers.AnimUtils.java", "BodyUseAPI": [], "Fixed commit": "e37e72586e05e172d476fdb4c58cca830fa0a962", "Url": "https://api.github.com/repos/bookd-lab/bookd", "Date": "2016-11-21T01:13:01Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (urlTb.contains(\"&\")) { urlTb = urlTb.substring(0, urlTb.indexOf(\"&\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3160/buggy-version/src.com.adtworker.mail.AdtImage.java", "BodyUseAPI": [], "Fixed commit": "162563941ca60934e2bd57b3c8ef8d63073f4e2c", "Url": "https://api.github.com/repos/adtworker/iWatch", "Date": "2012-04-28T07:06:07Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(notificationEncouragementList.isEmpty())) { notificationEncouragementList.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7616/buggy-version/app.src.main.java.com.wordpress.zackleaman.materialtablayout.AlertReceiver.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.remove(int)"], "Fixed commit": "5024127ef0c7ed37824d6a19d2c377bc4e6e9107", "Url": "https://api.github.com/repos/ZackLeaman/Encouragement_Android_App", "Date": "2016-09-27T20:38:39Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((mIsTimelapse) || (mIsRecording))) { checkWriteStoragePermission(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8704/buggy-version/app.src.main.java.mobapptut.com.camera2videoimage.Camera2VideoImageActivity.java", "BodyUseAPI": [], "Fixed commit": "a367a2589b63e498c0023e9c3473584fc9b27f44", "Url": "https://api.github.com/repos/mobapptuts/android_camera2_api_video_app", "Date": "2017-05-19T06:11:39Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraft.client.Minecraft.getMinecraft().currentScreen) != null) doZoom = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1847/buggy-version/src.main.java.cz.ondraster.zoomit.KeyInputHandler.java", "BodyUseAPI": [], "Fixed commit": "4c56d10c01d607d3ccb711279f9320a654ecc4cb", "Url": "https://api.github.com/repos/OndraSter/ZoomIt", "Date": "2014-09-21T21:08:58Z"},
{"Line": "=>731", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMap) != null) { mMap.setMyLocationEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2969/buggy-version/GMSClientNew.src.com.jstakun.gms.android.ui.GMSClient3MainActivity.java", "BodyUseAPI": [], "Fixed commit": "dad0941aabe25d6a8f795789774907fadcd76efd", "Url": "https://api.github.com/repos/jstakun/gms-world-client", "Date": "2017-08-22T14:28:29Z"},
{"Line": "=>502", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == (vnf.getVnfProfileId())) || (\"\".equals(vnf.getVnfProfileId()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5708/buggy-version/servicegateway.service.src.main.java.org.openo.gso.servicegateway.service.impl.ServiceGatewayImpl.java", "BodyUseAPI": [], "Fixed commit": "c27ac6b437815cb54cc9d90bb22f9f53adbcecf3", "Url": "https://api.github.com/repos/open-o/gso", "Date": "2017-04-26T03:58:35Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (moviePage != null) { movies = moviePage.getMovies(); this.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6136/buggy-version/app.src.main.java.com.neiljaywarner.yamoviesapp.MoviesRecyclerViewAdapter.java", "BodyUseAPI": ["com.neiljaywarner.yamoviesapp.model.MoviePage.getMovies()"], "Fixed commit": "0c2075981121f8238e0109d03fe73b1eef81a769", "Url": "https://api.github.com/repos/neiljaywarner/YAMoviesApp", "Date": "2015-08-25T03:13:37Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.milaboratory.mageri.core.genomic.GenomicInfoProvider.get(java.lang.String,com.milaboratory.core.sequence.nucleotide.NucleotideSequence)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((genomicInfo.getContig()) == null) { java.lang.System.out.println(((\"[WARNING] No contig found for \" + name) + \", skipping reference.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5154/buggy-version/src.main.java.com.milaboratory.mageri.core.genomic.ReferenceLibrary.java", "BodyUseAPI": [], "Fixed commit": "14398f0cdfd8ed81c9f2b2b6f93877515c254308", "Url": "https://api.github.com/repos/mikessh/mageri", "Date": "2015-09-19T11:29:30Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (references.isEmpty()) { throw new java.lang.RuntimeException(\"No references were loaded from provided FASTA records.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5154/buggy-version/src.main.java.com.milaboratory.mageri.core.genomic.ReferenceLibrary.java", "BodyUseAPI": [], "Fixed commit": "14398f0cdfd8ed81c9f2b2b6f93877515c254308", "Url": "https://api.github.com/repos/mikessh/mageri", "Date": "2015-09-19T11:29:30Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dbHandler.getDOB().getDday()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(dob.equals(\"null\"))) { dbHandler.deleteDOB(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4246/buggy-version/app.src.main.java.com.babyandi.stephnoutsa.babyandi.CustomNotifAdapter.java", "BodyUseAPI": [], "Fixed commit": "d1de6bb7fc1ba16a7298d827cd829511d93f9e0d", "Url": "https://api.github.com/repos/stephanenoutsa/motherslove", "Date": "2016-08-13T10:04:01Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.babyandi.stephnoutsa.babyandi.MyDBHandler.getLMP()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(lmp.equals(\"null\"))) { dbHandler.stopAncNotifs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4246/buggy-version/app.src.main.java.com.babyandi.stephnoutsa.babyandi.CustomNotifAdapter.java", "BodyUseAPI": [], "Fixed commit": "d1de6bb7fc1ba16a7298d827cd829511d93f9e0d", "Url": "https://api.github.com/repos/stephanenoutsa/motherslove", "Date": "2016-08-13T10:04:01Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.failures.size()) == 2) { return containsOneOrMore(team, spies); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7395/buggy-version/src.s21504053.BoneCrusher.java", "BodyUseAPI": [], "Fixed commit": "4d6f79c6e82c409357b5fe5f250300f33d385683", "Url": "https://api.github.com/repos/jackrobertscott/artificial-intelligence-resistance-game", "Date": "2016-10-28T05:46:42Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((round) == 1) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7395/buggy-version/src.s21504053.BoneCrusher.java", "BodyUseAPI": [], "Fixed commit": "4d6f79c6e82c409357b5fe5f250300f33d385683", "Url": "https://api.github.com/repos/jackrobertscott/artificial-intelligence-resistance-game", "Date": "2016-10-28T05:46:42Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_tasks.isEmpty()) == true) { _Assignments.remove(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2409/buggy-version/src.Crane.Crane.java", "BodyUseAPI": [], "Fixed commit": "41773ef680b3972ca67e40085ef1481ad2082d8b", "Url": "https://api.github.com/repos/Containing/Containing-Core", "Date": "2013-01-28T09:47:33Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.buterfleoge.whale.biz.order.impl.create.CreateOrderContext.getGroup()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (group.getActualCount().equals(group.getMaxCount())) { group.setStatus(GroupStatus.FULL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4889/buggy-version/src.main.java.com.buterfleoge.whale.biz.order.impl.create.BizProcessor.java", "BodyUseAPI": ["com.buterfleoge.whale.type.entity.TravelGroup.setStatus(GroupStatus.FULL)"], "Fixed commit": "46664c7dfdf9839664fceaff5db3c72b7c2872a0", "Url": "https://api.github.com/repos/dongjunpeng/whale", "Date": "2016-05-24T17:04:04Z"},
{"Line": "=>927", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hbase.zookeeper.ZKUtil.listChildrenNoWatch(org.apache.hadoop.hbase.zookeeper.ZooKeeperWatcher,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((tableNames != null) && (!(tableNames.isEmpty()))) { results = new java.util.ArrayList<java.lang.String>(); for (java.lang.String tableName : tableNames) { byte[] data = org.apache.hadoop.hbase.zookeeper.ZKUtil.getData(this.zkw, getTableDescZNode(tableName)); if (data != null) { results.add(tableName); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8278/buggy-version/csbt-client.src.main.java.org.apache.hadoop.hbase.crosssite.CrossSiteZNodes.java", "BodyUseAPI": [], "Fixed commit": "2a29b1cc0b0a3956a4da40c40a4641ee2518fa01", "Url": "https://api.github.com/repos/intel-hadoop/CSBT", "Date": "2014-08-18T01:44:01Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tools.WebDriverFactory.driver) == null) init();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7867/buggy-version/src.main.java.tools.WebDriverFactory.java", "BodyUseAPI": [], "Fixed commit": "33c51b01531db770d7158f54613314877da23609", "Url": "https://api.github.com/repos/GaurangB/cucumber-java", "Date": "2017-06-04T20:54:49Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.submissionRate) == 0) { return \"---\"; }else { return \"0.00%\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7714/buggy-version/src.main.java.com.andrewrnagel.objgrader.entity.Assignment.java", "BodyUseAPI": [], "Fixed commit": "1ec1d24ad003f496692e6e04bd8460eb7c2b1b93", "Url": "https://api.github.com/repos/turboska5/tiy-final-project", "Date": "2016-10-19T15:36:20Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.assignmentNumber) == 0) { return \"---\"; }else { return \"0.00%\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7714/buggy-version/src.main.java.com.andrewrnagel.objgrader.entity.AcademicClass.java", "BodyUseAPI": [], "Fixed commit": "1ec1d24ad003f496692e6e04bd8460eb7c2b1b93", "Url": "https://api.github.com/repos/turboska5/tiy-final-project", "Date": "2016-10-19T15:36:20Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root) == null) { jsat.classifiers.trees.DecisionStump stump = new jsat.classifiers.trees.DecisionStump(); stump.train(dataSet, threadPool); root = new jsat.classifiers.trees.DecisionTree.Node(stump); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6033/buggy-version/JSAT.src.jsat.classifiers.trees.DecisionTree.java", "BodyUseAPI": [], "Fixed commit": "975e923250d0d62847f7061d6eca6eea2bb8f8d4", "Url": "https://api.github.com/repos/EdwardRaff/JSAT", "Date": "2016-02-29T05:10:06Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root) == null) { jsat.classifiers.trees.DecisionStump stump = new jsat.classifiers.trees.DecisionStump(); stump.trainC(dataSet, threadPool); root = new jsat.classifiers.trees.DecisionTree.Node(stump); }else prune(root, pruningMethod, testPoints);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6033/buggy-version/JSAT.src.jsat.classifiers.trees.DecisionTree.java", "BodyUseAPI": [], "Fixed commit": "975e923250d0d62847f7061d6eca6eea2bb8f8d4", "Url": "https://api.github.com/repos/EdwardRaff/JSAT", "Date": "2016-02-29T05:10:06Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(prefixMatches(initialKey))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6620/buggy-version/src.main.java.me.gking2224.common.utils.PrefixedProperties.java", "BodyUseAPI": [], "Fixed commit": "470ee832c58cd9803416ce45ca47787da7ecc52c", "Url": "https://api.github.com/repos/gking2224/utilities", "Date": "2016-10-31T16:49:21Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((final_path - 1) != (path.size())) { path.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4962/buggy-version/src.robotmotionplanner.MotionPlanner.java", "BodyUseAPI": ["java.util.ArrayList<java.awt.Point>.clear()"], "Fixed commit": "1982bfeb37b39a35825f466afc25aff37efa8b8a", "Url": "https://api.github.com/repos/brianh014/RoboMotionPlanner", "Date": "2014-04-22T02:57:38Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tasks.get(position).getTask().subTaskCount()) > 1) { subcount.setText((((java.lang.String.valueOf(tasks.get(position).getTask().subTaskCount())) + \" \") + (convertView.getResources().getString(R.string.subtasks)))); }else { subcount.setText((((java.lang.String.valueOf(tasks.get(position).getTask().subTaskCount())) + \" \") + (convertView.getResources().getString(R.string.subtask)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3697/buggy-version/src.com.ghsoft.treetaskapp.MainListItem.java", "BodyUseAPI": ["tasks.get(position).getTask().subTaskCount()", "java.util.ArrayList<com.ghsoft.treetask.TaskHead>.get(int)", "android.widget.TextView.setText((((java.lang.String.valueOf(tasks.get(position).getTask().subTaskCount())) + \" \") + (convertView.getResources().getString(R.string.subtask))))", "tasks.get(position).getTask().subTaskCount()", "tasks.get(position).getTask()", "java.lang.String.valueOf(tasks.get(position).getTask().subTaskCount())", "java.lang.String.valueOf(tasks.get(position).getTask().subTaskCount())", "tasks.get(position).getTask()", "java.util.ArrayList<com.ghsoft.treetask.TaskHead>.get(int)", "android.widget.TextView.setText((((java.lang.String.valueOf(tasks.get(position).getTask().subTaskCount())) + \" \") + (convertView.getResources().getString(R.string.subtasks))))"], "Fixed commit": "656e9197de79516e12bf25d6fffdad04bbf103e0", "Url": "https://api.github.com/repos/gh123man/Tree-Task", "Date": "2014-05-05T20:39:06Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gameAbs.cardAbs.canPrecomputeBuckets()) { gameAbs.cardAbs.precomputeBuckets(gameAbs.game, hand); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6290/buggy-version/src.solver.PureCFRMachine.java", "BodyUseAPI": ["gameAbs.cardAbs.precomputeBuckets(gameAbs.game,acpc.Hand)"], "Fixed commit": "d4f7cba85f1e43c7c3e84b9626d6bcd8f76468d1", "Url": "https://api.github.com/repos/JaysenStark/MyCFR", "Date": "2017-07-13T07:30:37Z"},
{"Line": "=>320", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7909/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "956b3196ded0d3d15bbc017d1d29c96c4d8a16c5", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nl.dalthow.etaron.model.Main.levelScore) > (java.lang.Integer.parseInt(nl.dalthow.etaron.model.Main.allScores[nl.dalthow.etaron.model.Main.currentLevel]))) { nl.dalthow.etaron.model.Main.allScores[nl.dalthow.etaron.model.Main.currentLevel] = java.lang.Long.toString(Main.levelScore); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3596/buggy-version/et-game.src.main.java.nl.dalthow.etaron.object.Player.java", "BodyUseAPI": [], "Fixed commit": "90c7e7a5b007c84a410eeb3556a7e35e31949de1", "Url": "https://api.github.com/repos/M0rfic/Etaron", "Date": "2014-06-13T17:00:22Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(line.contains(\"LOGICAL DISPLAY FOLDERS (\"))) { parseLogicalTable(line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/248/buggy-version/src.obiee.udmlparser.parser.SubjectArea.java", "BodyUseAPI": [], "Fixed commit": "db73928c41e3519a651fdd5a2a85783a692e6666", "Url": "https://api.github.com/repos/danielgalassi/udmlparser", "Date": "2016-01-30T11:17:23Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((delayer) > 0) { (delayer)--; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3945/buggy-version/src.main.java.bluemonster122.mods.simplerandomstuff.tanks.TileTank.java", "BodyUseAPI": [], "Fixed commit": "0b29cfc0c668bdc2fc717027439383642abadb6d", "Url": "https://api.github.com/repos/bluemonster122/SimplyRandom", "Date": "2017-08-12T09:08:34Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.end) != null) this.end.connectCable(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8777/buggy-version/src.uninamo_components.Cable.java", "BodyUseAPI": [], "Fixed commit": "1ab54ff585fba397b3a0ba7ae298891f68201884", "Url": "https://api.github.com/repos/Mikkomario/UniNamo2", "Date": "2014-03-15T15:30:30Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.start) != null) this.start.connectCable(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8777/buggy-version/src.uninamo_components.Cable.java", "BodyUseAPI": [], "Fixed commit": "1ab54ff585fba397b3a0ba7ae298891f68201884", "Url": "https://api.github.com/repos/Mikkomario/UniNamo2", "Date": "2014-03-15T15:30:30Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mEventListener) != null) mEventListener.onConnectionStateChange(name, address, false, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6259/buggy-version/app.src.main.java.com.kidsdynamic.swing.androidswingapp.BLEControl.java", "BodyUseAPI": [], "Fixed commit": "9a70ac94f625937ff3dddfab8b560a88a7ef4634", "Url": "https://api.github.com/repos/kidsdynamic/AndroidSwingApp", "Date": "2017-03-16T18:49:15Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (geomRemaining.isEmpty()) { start = geometry.getCoordinateN(((geometry.getNumPoints()) - 1)); }else { start = geomRemaining.getCoordinateN(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1993/buggy-version/otp-core.src.main.java.org.opentripplanner.routing.impl.OnBoardDepartServiceImpl.java", "BodyUseAPI": ["com.vividsolutions.jts.geom.LineString.getCoordinateN(int)"], "Fixed commit": "4314cbfa0e499041f70015ccf9bd576fea05435d", "Url": "https://api.github.com/repos/openplans/OpenTripPlanner", "Date": "2013-09-09T11:40:19Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mOnError)) { android.util.Log.e(acr.browser.lightning.react.Observable.TAG, \"onComplete called more than once\"); throw new java.lang.RuntimeException(\"onComplete called more than once\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1228/buggy-version/app.src.main.java.acr.browser.lightning.react.Observable.java", "BodyUseAPI": [], "Fixed commit": "eda498c65fdbb97bf194fac6542d70cad899f1b4", "Url": "https://api.github.com/repos/toandrew/Lightning-Browser", "Date": "2016-04-22T15:56:12Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (command.equals(\"quit\")) { if (bot.isConnected()) { bot.quitServer(); bot.shutdown(true); } java.lang.Thread.sleep(1000); java.lang.System.exit(0); }else if (command.startsWith(\"msg \")) { command = command.substring(4); java.lang.String destination = command.split(\" \")[0]; java.lang.String message = command.substring(((destination.length()) + 1)); bot.sendMessage(destination, message); }else if (command.startsWith(\"join \")) { command = command.substring(5); bot.joinChannel(command.split(\" \")[0]); }else if (command.startsWith(\"part \")) { command = command.substring(5); bot.partChannel(command.split(\" \")[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/727/buggy-version/src.org.pircbotx.ConsoleThread.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "862982e572f747383369982313e6deb4626f89e4", "Url": "https://api.github.com/repos/Heufneutje/HeufyBot", "Date": "2013-06-11T12:16:17Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.namespace.QName.getLocalPart()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (localPart.equals(io.github.techietotoro.RSSFeedParser.ITEM)) { if (isFeedHeader) { isFeedHeader = false; feed = new io.github.techietotoro.Feed(title, link, description, language, copyright, pubdate); } event = eventReader.nextEvent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5507/buggy-version/src.main.java.io.github.techietotoro.RSSFeedParser.java", "BodyUseAPI": [], "Fixed commit": "dd2f86d17433d390154b3067994126be8ee665f1", "Url": "https://api.github.com/repos/techietotoro/CongressJBot", "Date": "2013-05-18T07:13:45Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (oldMail.equals(newMail)) { android.content.ContentValues updatedValues = new android.content.ContentValues(); updatedValues.put(\"FIRSTNAME\", firstname); updatedValues.put(\"LASTNAME\", lastname); updatedValues.put(\"PASSWORD\", password); java.lang.String where = \"MAIL = ?\"; db.update(\"LOGIN\", updatedValues, where, new java.lang.String[]{ oldMail }); return true; }else if (!(entryExists(newMail))) { android.content.ContentValues updatedValues = new android.content.ContentValues(); updatedValues.put(\"MAIL\", newMail); updatedValues.put(\"FIRSTNAME\", firstname); updatedValues.put(\"LASTNAME\", lastname); updatedValues.put(\"PASSWORD\", password); java.lang.String where = \"MAIL = ?\"; db.update(\"LOGIN\", updatedValues, where, new java.lang.String[]{ oldMail }); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8656/buggy-version/myFlat.src.com.example.myflat.LoginDataBaseAdapter.java", "BodyUseAPI": ["com.example.myflat.LoginDataBaseAdapter.entryExists(java.lang.String)", "android.database.sqlite.SQLiteDatabase.update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])", "android.content.ContentValues.put(java.lang.String,java.lang.String)", "android.database.sqlite.SQLiteDatabase.update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])"], "Fixed commit": "460856aefc8339372f717926795fc6f49f554bc0", "Url": "https://api.github.com/repos/TobiasNeuburger/myFlat", "Date": "2013-07-28T08:31:53Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reminder.getAlarms()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1092/buggy-version/app.src.main.java.mobi.devteam.demofalldetector.utils.Utils.java", "BodyUseAPI": [], "Fixed commit": "3057af18ede5cce0fef009176318031a869ec262", "Url": "https://api.github.com/repos/TruongThanhIT/HealthCareSupporter", "Date": "2017-08-01T14:26:23Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["issue.getField(jiraFieldName).toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (old_value == \"null\") { old_value = \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5316/buggy-version/src.main.java.org.jenkinsci.plugins.jiraext.svc.impl.JiraClientSvcImpl.java", "BodyUseAPI": [], "Fixed commit": "1af7e416ea5812c09f160c72791e1448f797e6de", "Url": "https://api.github.com/repos/ilya-dubovskiy/jira-ext-plugin", "Date": "2016-09-08T10:42:32Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((extraScreenStack) != null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/9187/buggy-version/android.app.src.main.java.com.reactnativenavigation.layouts.BottomTabsLayout.java", "BodyUseAPI": [], "Fixed commit": "3576a30869541a4427555b0875520bb929c36afb", "Url": "https://api.github.com/repos/MediaMonksMobile/react-native-navigation", "Date": "2017-06-21T20:19:26Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((names.length) == 1) { givenNames = parseString(new com.innovatrics.mrz.MrzRange(range.column, ((range.column) + (names[0].length())), range.row)); surname = \"\"; }else if ((names.length) > 1) { surname = parseString(new com.innovatrics.mrz.MrzRange(range.column, ((range.column) + (names[0].length())), range.row)); givenNames = parseString(new com.innovatrics.mrz.MrzRange((((range.column) + (names[0].length())) + 2), ((range.column) + (str.length())), range.row)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7349/buggy-version/src.main.java.com.innovatrics.mrz.MrzParser.java", "BodyUseAPI": ["com.innovatrics.mrz.MrzParser.parseString(com.innovatrics.mrz.MrzRange)", "java.lang.String.length()", "com.innovatrics.mrz.MrzParser.parseString(com.innovatrics.mrz.MrzRange)", "java.lang.String.length()", "com.innovatrics.mrz.MrzParser.parseString(com.innovatrics.mrz.MrzRange)", "java.lang.String.length()"], "Fixed commit": "66dbc2457d461add00022a1f603cb05a617ff9f8", "Url": "https://api.github.com/repos/ZsBT/mrz-java", "Date": "2017-05-31T07:50:43Z"},
{"Line": "=>662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (brokerRootNode != null) { javax.xml.bind.JAXBElement<org.apache.activemq.schema.core.DtoBroker> brokerJAXBElement = unMarshaller.unmarshal(brokerRootNode, org.apache.activemq.schema.core.DtoBroker.class); jaxbConfig = brokerJAXBElement.getValue(); lastModified = configToMonitor.lastModified(); loadPropertiesPlaceHolderSupport(doc); }else { info((\"Failed to find 'broker' element by tag in: \" + configToMonitor)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7924/buggy-version/activemq-runtime-config.src.main.java.org.apache.activemq.plugin.RuntimeConfigurationBroker.java", "BodyUseAPI": ["javax.xml.bind.Unmarshaller.unmarshal(org.w3c.dom.Node,java.lang.Class)"], "Fixed commit": "ab1db0258cdefc0d2795a596a9f6c8d8e59f1dc3", "Url": "https://api.github.com/repos/apache/activemq", "Date": "2013-10-24T11:59:15Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aliens.size()) == 0) return newAlienMissiles;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2406/buggy-version/SpaceInvaders.src.GameEngine.java", "BodyUseAPI": [], "Fixed commit": "1af6fd9dca127a8a20c271e32f45f86f637ca23e", "Url": "https://api.github.com/repos/borisv13/SpaceInvaders", "Date": "2014-11-12T22:38:36Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((aliens.size()) > 1) { alienToShoot = randomGenerator.nextInt(((aliens.size()) - 1)); }else { alienToShoot = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2406/buggy-version/SpaceInvaders.src.GameEngine.java", "BodyUseAPI": ["java.util.Random.nextInt(((aliens.size()) - 1))", "java.util.List<Alien>.size()"], "Fixed commit": "1af6fd9dca127a8a20c271e32f45f86f637ca23e", "Url": "https://api.github.com/repos/borisv13/SpaceInvaders", "Date": "2014-11-12T22:38:36Z"},
{"Line": "=>2757", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e instanceof org.apache.hadoop.hbase.io.hfile.CorruptHFileException) || (e instanceof java.io.FileNotFoundException)) { throw new org.apache.hadoop.hbase.DoNotRetryIOException(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/889/buggy-version/hbase-server.src.main.java.org.apache.hadoop.hbase.regionserver.RSRpcServices.java", "BodyUseAPI": [], "Fixed commit": "35836c67dea8bc665189ca9a5d3e630b2d6f936c", "Url": "https://api.github.com/repos/JingchengDu/hbase", "Date": "2016-11-18T06:40:40Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file1 == null) || (file2 == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/547/buggy-version/pluto.src.build.pluto.util.AbsoluteComparedFile.java", "BodyUseAPI": [], "Fixed commit": "fd745bb5a7fd0cff5a3331f9775ffe5edd82d5da", "Url": "https://api.github.com/repos/pluto-build/pluto", "Date": "2015-04-28T13:39:57Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { getWindow().setSharedElementsUseOverlay(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6436/buggy-version/TMDBApp.app.src.main.java.com.anandbibek.tmdbapp.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "4914c36a847839396d6dcc7f00332cb842f0d854", "Url": "https://api.github.com/repos/anandbibek/Nanodegree-Projects", "Date": "2016-01-02T18:52:17Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { getWindow().setSharedElementsUseOverlay(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6436/buggy-version/TMDBApp.app.src.main.java.com.anandbibek.tmdbapp.DetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "4914c36a847839396d6dcc7f00332cb842f0d854", "Url": "https://api.github.com/repos/anandbibek/Nanodegree-Projects", "Date": "2016-01-02T18:52:17Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((t._nobs) != 0) { if ((_nobs) == 0) { _ymu = t._ymu; _nobs = t._nobs; _ymin = t._ymin; _ymax = t._ymax; }else { _ymu = ((_ymu) * (((double) (_nobs)) / ((_nobs) + (t._nobs)))) + (((t._ymu) * (t._nobs)) / ((_nobs) + (t._nobs))); _nobs += t._nobs; _ymax = java.lang.Math.max(_ymax, t._ymax); _ymin = java.lang.Math.min(_ymin, t._ymin); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5021/buggy-version/src.main.java.hex.glm.GLMTask.java", "BodyUseAPI": ["java.lang.Math.max(double,double)", "java.lang.Math.min(double,double)"], "Fixed commit": "a39853f89f04c7f09233cdcc729cc112391ddee4", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-04-25T17:55:52Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mComponentCells[i].equals(mAnchorCell)) { mAnchorCell = mGameGridCells[((highestRowToFallTo * (NUM_COLS)) + xPos)]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6211/buggy-version/app.src.main.java.com.example.android.tetris.game_entities.Tetronimoes.Tetronimo.java", "BodyUseAPI": [], "Fixed commit": "d3c4b2214e77fe8b985fdcfc8df040aaa28dd9c2", "Url": "https://api.github.com/repos/abias1122/Not-Tetris", "Date": "2017-08-19T14:12:30Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lineStart == 1) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4843/buggy-version/src.db.Resources.java", "BodyUseAPI": [], "Fixed commit": "da92424d4b50126cc1fdc9e596932d8f36045213", "Url": "https://api.github.com/repos/eggnet/database", "Date": "2012-05-30T21:23:36Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getValue()) > 0) { while ((getValue()) < minDisplayableValue) { double testValue = getValue(); minDisplayableValue = minDisplayableValue / 10.0; actualDecimalPlaces++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2105/buggy-version/beam-core.src.main.java.org.esa.beam.framework.datamodel.ColorBarInfo.java", "BodyUseAPI": [], "Fixed commit": "6b97adac1832afbbbd052632fd3170100a0fea93", "Url": "https://api.github.com/repos/seadas/beam", "Date": "2016-08-05T20:29:25Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (webClientProperties.isTagsStoreAvailable()) { return ((java.math.BigInteger) (entityManager.createNativeQuery(\"select count(distinct ste.sessions_id) from SessionTagEntity as ste where ste.tags_name in (:sessionTagNames)\").setParameter(\"sessionTagNames\", new java.util.ArrayList<java.lang.String>(sessionTagNames)).getSingleResult())).longValue(); }else { return 0L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5411/buggy-version/dbapi.src.main.java.com.griddynamics.jagger.dbapi.provider.SessionInfoProviderImpl.java", "BodyUseAPI": [], "Fixed commit": "ddb237239eeb9c6b2c675ac242331991d2810291", "Url": "https://api.github.com/repos/amikryukov/jagger", "Date": "2014-04-18T11:57:17Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((JTextFieldNome.getText().contains(\":\")) || (java.lang.String.valueOf(JTextFieldPass1.getPassword()).contains(\":\"))) { jcomp4.setText(\"<html><font color = red >il nuome o la password non puo contenere : </font></html>\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5565/buggy-version/WahtsUp.src.gui.Nuova.java", "BodyUseAPI": [], "Fixed commit": "b55ba434940b88bdb1937996650522afc86bdb67", "Url": "https://api.github.com/repos/g4solio/WhatsUp", "Date": "2017-11-13T22:15:08Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allIn) { speak(\"is all in\"); window.buttonsEnabled(false); return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7137/buggy-version/src.poker.Human.java", "BodyUseAPI": [], "Fixed commit": "209c2e1f73263f6ec5983cdd5cf45b9d41dfe4a2", "Url": "https://api.github.com/repos/paulsteele/texas-hold-em", "Date": "2013-11-29T00:34:16Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transforms.length) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5326/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.AutonomousNavigation.Waypoint.VuforiaPositionFinder.java", "BodyUseAPI": [], "Fixed commit": "29363c5aaeaae106bd79c66b2ae63c6f47f315b0", "Url": "https://api.github.com/repos/gutsylvin/Team_Repo_TheClueless", "Date": "2016-10-22T03:54:30Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.event.world.BlockEvent.HarvestDropsEvent.getState()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((state.getBlock()) != (net.tropicraft.core.registry.BlockRegistry.pineapple)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4160/buggy-version/src.main.java.net.tropicraft.core.common.event.BlockEvents.java", "BodyUseAPI": [], "Fixed commit": "939c261b1c3ad566f482f575d5ee15c3d7ceea23", "Url": "https://api.github.com/repos/Tropicraft/Tropicraft", "Date": "2017-11-09T22:25:11Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operator.equals('/')) if (back == 0) { java.lang.System.out.println(\"error : 0\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd \ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\u03f4\ufffd.\"); result = -1.11; }else result = ((double) (front)) / ((double) (back)); else { java.lang.System.out.println(\"error : \ufffd\u03bd\ufffd\ufffd\ufffd \ufffd\ufffd \ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\u0534\u03f4\ufffd.\"); result = -1.11; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3007/buggy-version/src.Calculator.java", "BodyUseAPI": [], "Fixed commit": "8d8013258eef6badac21828f339053adebd94ca3", "Url": "https://api.github.com/repos/jangsooji/se_project", "Date": "2017-12-02T08:49:42Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((operator.equals(\"/\")) && (back == 0)) java.lang.System.out.println(\"error : 0\ufffd\ufffd\ufffd\ufffd \ufffd\ufffd\ufffd\ufffd \ufffd\ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\u03f4\ufffd.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3007/buggy-version/src.Calculator.java", "BodyUseAPI": [], "Fixed commit": "8d8013258eef6badac21828f339053adebd94ca3", "Url": "https://api.github.com/repos/jangsooji/se_project", "Date": "2017-12-02T08:49:42Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tuple == null) { this.tuple = null; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5374/buggy-version/cascading-core.src.main.java.cascading.tuple.TupleEntry.java", "BodyUseAPI": [], "Fixed commit": "aa4f237bf48f4cee9d11a6fd8d41c419f53d600f", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2015-03-11T23:54:51Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (into == null) throw new java.lang.IllegalArgumentException(\"into argument Tuple may not be null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5374/buggy-version/cascading-core.src.main.java.cascading.tuple.TupleEntry.java", "BodyUseAPI": [], "Fixed commit": "aa4f237bf48f4cee9d11a6fd8d41c419f53d600f", "Url": "https://api.github.com/repos/cwensel/cascading", "Date": "2015-03-11T23:54:51Z"},
{"Line": "=>1440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ednovo.gooru.client.uc.UlPanel.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(widgets.hasNext())) { removeActiveStyleb21(id); }else { while (widgets.hasNext()) { com.google.gwt.user.client.ui.Widget widget = widgets.next(); if (java.lang.String.valueOf(id).equals(widget.getElement().getAttribute(\"id\"))) { widget.removeStyleName(AddStandardsBundle.INSTANCE.css().dropMenuSelected()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/817/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.standards.StandardsPopupView.java", "BodyUseAPI": ["java.util.Iterator<com.google.gwt.user.client.ui.Widget>.next()", "java.util.Iterator<com.google.gwt.user.client.ui.Widget>.hasNext()"], "Fixed commit": "d692d977ec8ad50b8d5b05a24a26a2cf191afba8", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-08-31T05:08:34Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (removed) { remove(getItem(listView.getPositionForView(view))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1101/buggy-version/src.jp.gr.java_conf.daisy.android_blocks.swipe_to_dismiss.SwipeToDismissListViewItemsActivity.java", "BodyUseAPI": [], "Fixed commit": "462adac77d7cd8004a4fb22f68041fc631a6f154", "Url": "https://api.github.com/repos/daisy1754/AndroidAppBlocks", "Date": "2013-08-29T14:13:55Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c != (entry.getValue().size())) { continue primary; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6611/buggy-version/plugin.src.main.java.net.aufdemrand.denizen.scripts.containers.core.ItemScriptHelper.java", "BodyUseAPI": [], "Fixed commit": "17bfc5d295abe171a6336ba131c3002e2d434450", "Url": "https://api.github.com/repos/mergu/Denizen", "Date": "2017-09-17T05:34:06Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restfulwhois.rdap.filters.queryFilter.NoticeQueryFilter.getTruncatedNotice(org.restfulwhois.rdap.core.common.model.base.BaseModel)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != truncatedNotices) { notices.addAll(truncatedNotices); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1917/buggy-version/rdap-webapp.src.main.java.org.restfulwhois.rdap.filters.queryFilter.NoticeQueryFilter.java", "BodyUseAPI": ["java.util.List<org.restfulwhois.rdap.core.common.model.Notice>.addAll(java.util.List<org.restfulwhois.rdap.core.common.model.Notice>)"], "Fixed commit": "d4106a7f6a3a127e1ded34ff8f796b4297ab70db", "Url": "https://api.github.com/repos/cnnic/rdap", "Date": "2014-11-20T06:29:37Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.powerpoint45.lucidbrowser.Tools.getStatusMargine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((MainActivity.webLayout.getY()) != (newToolbarY + margine)) { MainActivity.webLayout.setY(((int) (newToolbarY + margine))); MainActivity.toolbar.setY((newToolbarY + (com.powerpoint45.lucidbrowser.Tools.getStatusSize()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/800/buggy-version/src.com.powerpoint45.lucidbrowser.ActionBarControls.java", "BodyUseAPI": ["MainActivity.webLayout.setY(float)", "MainActivity.toolbar.setY((newToolbarY + (com.powerpoint45.lucidbrowser.Tools.getStatusSize())))"], "Fixed commit": "c0af64b89532bae557716f73fec34e70ea3775ef", "Url": "https://api.github.com/repos/powerpoint45/Lucid-Browser", "Date": "2015-08-19T20:50:44Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.silverpeas.util.StringUtil.isDefined(event.getDescription())) { com.silverpeas.util.html.HtmlCleaner cleaner = new com.silverpeas.util.html.HtmlCleaner(); java.lang.String plainText = \"\"; try { plainText = cleaner.cleanHtmlFragment(event.getDescription()); } catch (java.lang.Exception e) { } iCalEvent.getProperties().add(new net.fortuna.ical4j.model.property.Description(plainText)); iCalEvent.getProperties().add(new com.silverpeas.export.ical.ical4j.Html(event.getDescription())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/263/buggy-version/lib-core.src.main.java.com.silverpeas.export.ical.ical4j.ICal4JICalCodec.java", "BodyUseAPI": ["com.silverpeas.util.html.HtmlCleaner.cleanHtmlFragment(event.getDescription())", "com.silverpeas.calendar.CalendarEvent.getDescription()", "iCalEvent.getProperties().add(com.silverpeas.export.ical.ical4j.Html)", "com.silverpeas.calendar.CalendarEvent.getDescription()"], "Fixed commit": "11bcbca77afbbe8b7a059bbb258f86e8309fed8b", "Url": "https://api.github.com/repos/CecileBONIN/Silverpeas-Core", "Date": "2015-06-26T12:58:51Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultadoDen == 0) { throw new java.lang.ArithmeticException(\"Divsion no permitia\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5770/buggy-version/src.main.java.IWVG.SwC.Chinegua.calculos.Fraction.java", "BodyUseAPI": [], "Fixed commit": "17ba45c8e5108cd1f4095c7660b18f0aa368eacc", "Url": "https://api.github.com/repos/Chinegua/IWVG.SwC.Chinegua", "Date": "2017-09-20T22:36:57Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(copyFromVersionSlug)) { setDefaultCopyFromVersion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7177/buggy-version/zanata-war.src.main.java.org.zanata.action.VersionHome.java", "BodyUseAPI": [], "Fixed commit": "2a1d4e647657657dbed0bf832190b451701fbb87", "Url": "https://api.github.com/repos/zanata/zanata-server", "Date": "2014-10-27T22:31:28Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mcjty.deepresonance.blocks.crystals.ResonatingCrystalTileEntity.getBlockState(getPos())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((state.getValue(ResonatingCrystalBlock.EMPTY)) != empty) { worldObj.setBlockState(getPos(), state.withProperty(ResonatingCrystalBlock.EMPTY, empty), 3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3807/buggy-version/src.main.java.mcjty.deepresonance.blocks.crystals.ResonatingCrystalTileEntity.java", "BodyUseAPI": ["mcjty.deepresonance.blocks.crystals.ResonatingCrystalTileEntity.setBlockState(getPos(),state.withProperty(ResonatingCrystalBlock.EMPTY, empty),int)", "net.minecraft.block.state.IBlockState.withProperty(ResonatingCrystalBlock.EMPTY,boolean)"], "Fixed commit": "72494c659eae83a526f4538a7bde6024fbaf6e02", "Url": "https://api.github.com/repos/McJtyMods/DeepResonance", "Date": "2016-02-26T08:32:39Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedList<com.example.SpBuffer>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((spBuffer.getId()) < 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7969/buggy-version/TSStack.tsstack2.src.main.java.com.example.TsStack.java", "BodyUseAPI": [], "Fixed commit": "b9a70d0ba770ef68b8ddc3a7efe3a7e9ef35a083", "Url": "https://api.github.com/repos/lancelebanoff/ts_stack", "Date": "2016-03-14T06:04:23Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((cellHeight) < 15) && ((cellWidth) < 30)) { cellWidth = 30; cellHeight = 15; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4197/buggy-version/src.main.java.org.geworkbenchweb.visualizations.Dendrogram.java", "BodyUseAPI": [], "Fixed commit": "b6c531556fa659af8bb438311b72796269cf4076", "Url": "https://api.github.com/repos/geworkbench-group/geworkbench-web", "Date": "2014-11-26T16:16:03Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"true\".equals(java.lang.System.getenv(\"debug\"))) { java.lang.System.out.println(java.lang.Integer.toHexString(c)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/493/buggy-version/client-lib.src.grouppractical.client.commands.CommandParser.java", "BodyUseAPI": [], "Fixed commit": "3d136dbd2117c044b3e9e66dce5b95a867bc9fd0", "Url": "https://api.github.com/repos/janslow/cs-a-group", "Date": "2013-05-04T16:56:21Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (zipFile.exists()) { zipFile.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5649/buggy-version/modules.common.src.main.java.org.shaolin.bmdp.utils.FileUtil.java", "BodyUseAPI": ["java.io.File.delete()"], "Fixed commit": "ddd95ee9003ea136ba249e8f2853a591c3305d15", "Url": "https://api.github.com/repos/shaolinwu/uimaster", "Date": "2017-03-03T10:37:38Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cs.wpisuitetng.modules.requirementmanager.view.MainView.getComponentAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (toBeRemoved instanceof edu.wpi.cs.wpisuitetng.modules.requirementmanager.view.overview.OverviewPanel) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2039/buggy-version/RequirementManager.src.edu.wpi.cs.wpisuitetng.modules.requirementmanager.view.ViewEventController.java", "BodyUseAPI": [], "Fixed commit": "dd986111457f3051953930dce3a8fd9bcedb059c", "Url": "https://api.github.com/repos/djkirby/wpi-suite-tng", "Date": "2013-04-12T04:54:33Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cs.wpisuitetng.modules.requirementmanager.view.MainView.getComponentAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (toBeRemoved instanceof edu.wpi.cs.wpisuitetng.modules.requirementmanager.view.overview.OverviewPanel) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2039/buggy-version/RequirementManager.src.edu.wpi.cs.wpisuitetng.modules.requirementmanager.view.ViewEventController.java", "BodyUseAPI": [], "Fixed commit": "dd986111457f3051953930dce3a8fd9bcedb059c", "Url": "https://api.github.com/repos/djkirby/wpi-suite-tng", "Date": "2013-04-12T04:54:33Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (args.containsKey(AssignLevelOneSupportPostFunctionFactory.FIELD_OVERRIDE)) { return !(java.lang.Boolean.parseBoolean(((java.lang.String) (args.get(AssignLevelOneSupportPostFunctionFactory.FIELD_OVERRIDE))))); }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4551/buggy-version/src.main.java.com.edwardawebb.jira.assignescalate.workflow.AssignLevelOneSupportPostFunction.java", "BodyUseAPI": ["java.util.Map.get(AssignLevelOneSupportPostFunctionFactory.FIELD_OVERRIDE)", "java.lang.Boolean.parseBoolean(java.lang.Object)"], "Fixed commit": "1e638e7930f725bc3dd9b1d28a76a4bf75bda0ca", "Url": "https://api.github.com/repos/eddiewebb/jira-assign-escalate", "Date": "2016-01-23T17:27:38Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.cherimojava.data.mongo.entity.ParameterProperty.getMongoName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(data.containsKey(name))) && (property.isPrimitiveType())) { data.put(name, com.google.common.base.Defaults.defaultValue(com.google.common.primitives.Primitives.unwrap(property.getType()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7776/buggy-version/mongo.src.main.java.com.github.cherimojava.data.mongo.entity.EntityInvocationHandler.java", "BodyUseAPI": ["com.google.common.base.Defaults.defaultValue(com.google.common.primitives.Primitives.unwrap(property.getType()))", "com.google.common.primitives.Primitives.unwrap(property.getType())", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,com.google.common.base.Defaults.defaultValue(com.google.common.primitives.Primitives.unwrap(property.getType())))", "com.github.cherimojava.data.mongo.entity.ParameterProperty.getType()"], "Fixed commit": "df0372247dd9c8b22bf521a7519086ba6c3ac4a1", "Url": "https://api.github.com/repos/cherimojava/cherimodata", "Date": "2015-07-07T19:33:01Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/9028/buggy-version/Image_Loader.src.com.gui.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "b10060aebaca2b395b1eb95f91f004b51947c145", "Url": "https://api.github.com/repos/pjmicolet/yphci", "Date": "2012-10-21T19:37:12Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.obidea.semantika.materializer.TriplesProjection.getDatatype(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (datatype.equals(DataType.STRING)) { return mValueFactory.createLiteral(mObjectValue); }else { return mValueFactory.createLiteral(mObjectValue, mValueFactory.createURI(datatype)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/858/buggy-version/src.com.obidea.semantika.materializer.SesameStatement.java", "BodyUseAPI": ["org.openrdf.model.ValueFactory.createURI(java.lang.String)", "org.openrdf.model.ValueFactory.createLiteral(java.lang.String,mValueFactory.createURI(datatype))"], "Fixed commit": "8fb94151e1b7768378f66f125d6e994d8d506915", "Url": "https://api.github.com/repos/obidea/semantika-core", "Date": "2014-06-09T07:46:32Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cat.udl.menufinder.utils.Utils.getLatLngOfRestaurant(cat.udl.menufinder.models.Restaurant,getActivity())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (latLngRestaurant != null) { distance = com.google.maps.android.SphericalUtil.computeDistanceBetween(latLngUser, latLngRestaurant); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6092/buggy-version/app.src.main.java.cat.udl.menufinder.fragments.SubscriptionsFragment.java", "BodyUseAPI": ["com.google.maps.android.SphericalUtil.computeDistanceBetween(com.google.android.gms.maps.model.LatLng,com.google.android.gms.maps.model.LatLng)"], "Fixed commit": "385a1c9dece0d74d92408207bd7867aa51dfb92b", "Url": "https://api.github.com/repos/MenuFinder/AndroidClient", "Date": "2017-01-08T01:21:18Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (viewHoldersPriorPosition > (viewHolder.currentPosition)) { (com.layer.atlas.adapters.AtlasConversationsAdapter.mLastPositionSelected)++; }else { viewHolder.masterView.setBackgroundColor(com.layer.atlas.adapters.AtlasConversationsAdapter.mBackgroundColor); com.layer.atlas.adapters.AtlasConversationsAdapter.mLastViewSelected = viewHolder.masterView; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/61/buggy-version/layer-atlas.src.main.java.com.layer.atlas.adapters.AtlasConversationsAdapter.java", "BodyUseAPI": ["android.view.View.setBackgroundColor(int)"], "Fixed commit": "336036e99f03ada1ef4b48aefc08ee5955cd0a18", "Url": "https://api.github.com/repos/SalesRabbit/Atlas-Android", "Date": "2016-06-02T22:46:41Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.springframework.util.StringUtils.isEmpty(storageDirectory)) { storageDirectory = java.lang.System.getProperty(\"java.io.tmpdir\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/958/buggy-version/fileupload-api.src.main.java.us.pinette.fileupload.api.services.impl.LocalFileStorageService.java", "BodyUseAPI": [], "Fixed commit": "91a085f8d80ec6a7530c8ea02300c00d782969db", "Url": "https://api.github.com/repos/sowelie/dotsub-fileupload", "Date": "2016-11-18T06:09:38Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["au.org.intersect.faims.android.beanshell.DatabaseHelper.saveArchEnt(au.org.intersect.faims.android.beanshell.BeanShellLinker,java.lang.String,java.lang.String,java.util.List<com.nutiteq.geometry.Geometry>,java.util.List<au.org.intersect.faims.android.data.EntityAttribute>,au.org.intersect.faims.android.beanshell.callbacks.SaveCallback,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (uuid == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2007/buggy-version/faims-android-app.src.au.org.intersect.faims.android.beanshell.DatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "e2a85ba35bf880309cbbb21456333cca6fc4318b", "Url": "https://api.github.com/repos/IntersectAustralia/faims-android", "Date": "2014-11-10T04:46:03Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTaskRoot())) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6782/buggy-version/headwaySharedLibrary.src.main.java.ie.headway.app.HeadwaySplashScreenActivity.java", "BodyUseAPI": [], "Fixed commit": "529b1bdc6872944951c91a2227807d09f1ca8d11", "Url": "https://api.github.com/repos/HeadwayApp/How-To-Do-It-", "Date": "2015-11-10T17:22:03Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof java.io.InputStream) { if (!(com.codename1.io.MultipartRequest.leaveInputStreamsOpen)) { com.codename1.io.Util.cleanup(i); } }else { com.codename1.io.Util.cleanup(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3651/buggy-version/CodenameOne.src.com.codename1.io.MultipartRequest.java", "BodyUseAPI": [], "Fixed commit": "c3b05d468f34dde2d2f03095258e4c314bc43f94", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-12-11T16:26:19Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((name == null) || (name.equals(\"\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2173/buggy-version/CRTBTunnelMonitor.src.com.crtb.tunnelmonitor.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b854d5ed9a4f21f35bf1991b8126da4759a4fdb1", "Url": "https://api.github.com/repos/2014-2/001", "Date": "2014-09-28T07:52:31Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getJail()) != null) getJail().getCellList().remove(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1872/buggy-version/src.com.matejdro.bukkit.jail.JailCell.java", "BodyUseAPI": [], "Fixed commit": "8271420a7482faf0e76c70ba408fc7af0ae0d075", "Url": "https://api.github.com/repos/matejdro/Jail", "Date": "2011-07-25T10:06:06Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (label.equalsIgnoreCase(\"root\")) label = ((java.lang.String) (phyloTree.getRoot().getLabel()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2444/buggy-version/bnkit.src.reconstruction.ASRPOG.java", "BodyUseAPI": [], "Fixed commit": "2d13022db3b4b0293fe339bbe4571beba71c7295", "Url": "https://api.github.com/repos/bodenlab/bnkit", "Date": "2017-08-17T07:51:54Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pAst instanceof com.microsoft.z3.IntNum) { z = creator.encapsulate(FormulaType.IntegerType, pAst); }else if (pAst instanceof com.microsoft.z3.RatNum) { z = creator.encapsulate(FormulaType.RationalType, pAst); }else { throw new java.lang.AssertionError(java.lang.String.format(\"unexpected type of expression %s (%s)\", pAst, pAst.getClass())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6506/buggy-version/src.org.sosy_lab.solver.z3java.Z3OptimizationProver.java", "BodyUseAPI": ["org.sosy_lab.solver.z3java.Z3OptimizationProver.encapsulate(FormulaType.RationalType,com.microsoft.z3.ArithExpr)", "com.microsoft.z3.ArithExpr.getClass()", "org.sosy_lab.solver.z3java.Z3OptimizationProver.encapsulate(FormulaType.IntegerType,com.microsoft.z3.ArithExpr)", "java.lang.String.format(java.lang.String,com.microsoft.z3.ArithExpr,pAst.getClass())"], "Fixed commit": "1af1fed25d4a13cc75b922abbe234e84da16795f", "Url": "https://api.github.com/repos/sosy-lab/java-smt", "Date": "2016-02-04T14:27:52Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.dotamatchesreminder.activitys.MainActivity.loadingData)) new com.dotamatchesreminder.adapter.ListOfResultsAdapter.FetchDataTask().execute(); else android.widget.Toast.makeText(context, context.getString(R.string.app_launching), Toast.LENGTH_LONG).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4240/buggy-version/src.com.dotamatchesreminder.adapter.ListOfResultsAdapter.java", "BodyUseAPI": [], "Fixed commit": "84e558569e9f222eeb90ce5897bd221049d4329e", "Url": "https://api.github.com/repos/IceIceIce/test", "Date": "2014-03-08T14:21:57Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e instanceof java.lang.reflect.InvocationTargetException) { e = e.getCause(); if (e instanceof ru.tehkode.permissions.exceptions.PermissionBackendException) { throw ((ru.tehkode.permissions.exceptions.PermissionBackendException) (e)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1988/buggy-version/src.main.java.ru.tehkode.permissions.backends.PermissionBackend.java", "BodyUseAPI": ["java.lang.Throwable.getCause()"], "Fixed commit": "d04c4e38d78f7b90ad438dde56011ab15bc74f91", "Url": "https://api.github.com/repos/wolfwork/PermissionsEx", "Date": "2014-04-12T04:32:24Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((canvas) != null) canvas.shutDown();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6187/buggy-version/icy.gui.viewer.Viewer.java", "BodyUseAPI": [], "Fixed commit": "c875c72f054f730d72bf91cd4c62d196678f8890", "Url": "https://api.github.com/repos/Icy-imaging/Icy-Kernel", "Date": "2014-11-20T08:30:49Z"},
{"Line": "=>1023", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["icy.sequence.Sequence.getSizeC()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (channel >= sizeC) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6187/buggy-version/icy.sequence.SequenceUtil.java", "BodyUseAPI": [], "Fixed commit": "c875c72f054f730d72bf91cd4c62d196678f8890", "Url": "https://api.github.com/repos/Icy-imaging/Icy-Kernel", "Date": "2014-11-20T08:30:49Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(PURPOSE.ADVANCE_AMOUNT.toString().equals(receiptDetail.getPurpose()))) totalCrAmountToBePaid = totalCrAmountToBePaid.add(receiptDetail.getCramountToBePaid());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1133/buggy-version/egov.egov-ptis.src.main.java.org.egov.ptis.client.service.CollectionApportioner.java", "BodyUseAPI": ["org.egov.collection.entity.ReceiptDetail.getCramountToBePaid()", "java.math.BigDecimal.add(receiptDetail.getCramountToBePaid())"], "Fixed commit": "b4109835f9417a3cf672740ec56b9ea01af26eef", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-04-03T09:45:27Z"},
{"Line": "=>2025", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkOnboarding(com.ludoscity.findmybikes.activities.NearbyActivity.eONBOARDING_LEVEL.ONBOARDING_LEVEL_FULL, com.ludoscity.findmybikes.activities.NearbyActivity.eONBOARDING_STEP.ONBOARDING_STEP_SEARCH_SHOWCASE))) checkOnboarding(com.ludoscity.findmybikes.activities.NearbyActivity.eONBOARDING_LEVEL.ONBOARDING_LEVEL_LIGHT, com.ludoscity.findmybikes.activities.NearbyActivity.eONBOARDING_STEP.ONBOARDING_STEP_MAIN_CHOICE_HINT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6613/buggy-version/FindMyBikes.app.src.main.java.com.ludoscity.findmybikes.activities.NearbyActivity.java", "BodyUseAPI": [], "Fixed commit": "4a1d1ccc5e42296d197b61f43da6bec692ccb33a", "Url": "https://api.github.com/repos/f8full/ludOScity", "Date": "2017-02-25T18:59:50Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dante.knowledge.utils.SPUtil.getBoolean(SettingFragment.SECRET_MODE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isSecretOn) { sub.getItem(2).setIcon(new com.mikepenz.iconics.IconicsDrawable(this).icon(GoogleMaterial.Icon.gmd_whatshot).color(Color.WHITE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3768/buggy-version/app.src.main.java.com.dante.knowledge.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "b99e3d926dddc97158f53afb88374b329b16f664", "Url": "https://api.github.com/repos/DanteAndroid/Knowledge", "Date": "2016-03-25T05:54:33Z"},
{"Line": "=>721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (si == null) { if (ci != null) { return false; } }else if (!(si.equals(ci))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7815/buggy-version/modules.wyrl.src.wyautl.core.Automaton.java", "BodyUseAPI": ["wyautl.core.Automaton.State.equals(wyautl.core.Automaton.State)"], "Fixed commit": "b5173fa3d9efebef67e09811ae57b54e0d2dd8aa", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2013-05-20T08:56:48Z"},
{"Line": "=>696", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ith != null) { r = r + (ith.hashCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7815/buggy-version/modules.wyrl.src.wyautl.core.Automaton.java", "BodyUseAPI": ["wyautl.core.Automaton.State.hashCode()"], "Fixed commit": "b5173fa3d9efebef67e09811ae57b54e0d2dd8aa", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2013-05-20T08:56:48Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ebay.soap.eBLBaseComponents.ItemType.getProductListingDetails()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((details.getBrandMPN()) == null) { brand = \"N/A\"; }else brand = details.getBrandMPN().getBrand();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8645/buggy-version/src.getstorelist.EbayConnecter.java", "BodyUseAPI": ["details.getBrandMPN().getBrand()", "com.ebay.soap.eBLBaseComponents.ProductListingDetailsType.getBrandMPN()"], "Fixed commit": "19aab67e5fe4e05d660587d52649d7c6966dde58", "Url": "https://api.github.com/repos/superzjn/GetStoreListing", "Date": "2016-11-16T17:15:38Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasTooltip) { result += \"\\r\\n has_tooltip\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5728/buggy-version/de.beyondjava.xtext.jsf.src.TaglibImporter.java", "BodyUseAPI": [], "Fixed commit": "cc4f1943d6143f5ba54b9225a4f6f940af1d41d7", "Url": "https://api.github.com/repos/stephanrauh/JSFLibraryGenerator", "Date": "2015-06-07T08:46:20Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(thumb.isComplete())) { thumb.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3795/buggy-version/library.src.main.java.com.bumptech.glide.request.ThumbnailRequestCoordinator.java", "BodyUseAPI": ["com.bumptech.glide.request.Request.clear()"], "Fixed commit": "b078cc52a03f9187720f90eaf705d89dbe8b3a90", "Url": "https://api.github.com/repos/bumptech/glide", "Date": "2015-03-04T03:58:02Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMultiUserSwitch) != null) { mMultiUserSwitch.setActivityStarter(activityStarter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6117/buggy-version/packages.SystemUI.src.com.android.systemui.statusbar.phone.StatusBarHeaderView.java", "BodyUseAPI": [], "Fixed commit": "74d7533057335baddf9333447a9ab405007274a1", "Url": "https://api.github.com/repos/OptiPop/frameworks_base", "Date": "2015-05-10T11:21:58Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActivityStarter) != null) { mActivityStarter.startActivity(intent, true); }else { getContext().startActivityAsUser(intent, new android.os.UserHandle(android.os.UserHandle.USER_CURRENT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6117/buggy-version/packages.SystemUI.src.com.android.systemui.statusbar.phone.MultiUserSwitch.java", "BodyUseAPI": [], "Fixed commit": "74d7533057335baddf9333447a9ab405007274a1", "Url": "https://api.github.com/repos/OptiPop/frameworks_base", "Date": "2015-05-10T11:21:58Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chylex.bettersprinting.client.ClientModManager.isModDisabled()) { sneakToggle = sprintToggle = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3778/buggy-version/src.main.java.chylex.bettersprinting.client.player.CustomMovementInput.java", "BodyUseAPI": [], "Fixed commit": "2a0e16d90a886f9883dfb26f71b82015462285a8", "Url": "https://api.github.com/repos/chylex/Better-Sprinting", "Date": "2015-12-03T22:24:44Z"},
{"Line": "=>1415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (minX == maxX) { axis.setRange((minX - ((java.lang.Math.abs(minX)) * 0.1)), (maxX + ((java.lang.Math.abs(maxX)) * 0.1))); }else { axis.setRange(minX, maxX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3103/buggy-version/gui.src.main.java.edu.utah.ece.async.ibiosim.gui.graphEditor.Graph.java", "BodyUseAPI": ["java.lang.Math.abs(double)", "org.jfree.chart.axis.NumberAxis.setRange(double,double)", "org.jfree.chart.axis.NumberAxis.setRange(double,double)", "java.lang.Math.abs(double)"], "Fixed commit": "93a87ce7e321168cd9810c0464925efafafcbe90", "Url": "https://api.github.com/repos/MyersResearchGroup/iBioSim", "Date": "2017-12-05T16:34:10Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handler) == null) { handler = ((com.Ben12345rocks.AdvancedCore.Util.AnvilInventory.AInventory.AnvilClickEventHandler) (com.Ben12345rocks.AdvancedCore.Util.Misc.PlayerUtils.getInstance().getPlayerMeta(player, \"AInventory\"))); com.Ben12345rocks.AdvancedCore.AdvancedCoreHook.getInstance().debug(\"Anvil handler was null, fixing...\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8937/buggy-version/AdvancedCore.src.com.Ben12345rocks.AdvancedCore.Util.AnvilInventory.AInventory.java", "BodyUseAPI": [], "Fixed commit": "a64bb69bc267afebc5e866e6c039170a68aaf222", "Url": "https://api.github.com/repos/Ben12345rocks/AdvancedCore", "Date": "2016-12-13T20:34:54Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((routeSearch.getDestinationCoordinates()) != null) routeSearch.getDestinationCoordinates().save();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3236/buggy-version/app.src.main.java.fi.ohtu.mobilityprofile.data.RouteSearchDao.java", "BodyUseAPI": ["routeSearch.getDestinationCoordinates().save()", "fi.ohtu.mobilityprofile.domain.RouteSearch.getDestinationCoordinates()"], "Fixed commit": "e036cf4ced8d8c6dd8cfba5fe2214baa94d88c40", "Url": "https://api.github.com/repos/mobility-profile/Mobility-Profile", "Date": "2016-08-09T12:44:04Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((routeSearch.getStartCoordinates()) != null) routeSearch.getStartCoordinates().save();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3236/buggy-version/app.src.main.java.fi.ohtu.mobilityprofile.data.RouteSearchDao.java", "BodyUseAPI": ["routeSearch.getStartCoordinates().save()", "fi.ohtu.mobilityprofile.domain.RouteSearch.getStartCoordinates()"], "Fixed commit": "e036cf4ced8d8c6dd8cfba5fe2214baa94d88c40", "Url": "https://api.github.com/repos/mobility-profile/Mobility-Profile", "Date": "2016-08-09T12:44:04Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partitionedInstanceStatus) == null) { partitionedInstanceStatus = new java.util.HashMap<java.lang.Integer, com.datatorrent.demos.mobile.BatchedOperatorStats>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1453/buggy-version/demos.src.main.java.com.datatorrent.demos.mobile.ThroughputBasedPartitioner.java", "BodyUseAPI": [], "Fixed commit": "bbccdb87d9ea1ae9df4692265bfba2e3d1f6d400", "Url": "https://api.github.com/repos/sashadt/Malhar", "Date": "2014-07-11T23:54:22Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getType()) == (SceneTrackerEvent.REMOVED)) { updateActiveScene(null); }else { updateActiveScene(e.getScene()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2294/buggy-version/src.main.java.de.onyxbits.scenepainter.gui.MainStatusBar.java", "BodyUseAPI": ["de.onyxbits.scenepainter.gui.MainStatusBar.updateActiveScene(e.getScene())", "de.onyxbits.scenepainter.gui.SceneTrackerEvent.getScene()"], "Fixed commit": "6a04e1f5dcaead26b099cf0734650f96c780427b", "Url": "https://api.github.com/repos/onyxbits/ScenePainter", "Date": "2012-04-08T18:29:33Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((guidanceModelInfo.getDescription()) != null) && ((guidanceModelInfo.getOrdering()) != null)) { hasEffectedGuidanceModels = new at.decisionexpert.neo4jentity.relationship.decisionguidance.designoption.HasEffectedGuidanceModels(startDesignOption, endDecisionGuidanceModel, guidanceModelInfo.getDescription(), guidanceModelInfo.getOrdering()); }else { hasEffectedGuidanceModels = new at.decisionexpert.neo4jentity.relationship.decisionguidance.designoption.HasEffectedGuidanceModels(startDesignOption, endDecisionGuidanceModel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8974/buggy-version/backend.at.decisionexpert.src.main.java.at.decisionexpert.business.decisionguidance.designoption.DesignOptionBusinessImpl.java", "BodyUseAPI": ["at.decisionexpert.neo4jentity.dto.decisionguidance.designoption.DesignOptionEffectedGuidanceModelsDto.getDescription()", "at.decisionexpert.neo4jentity.dto.decisionguidance.designoption.DesignOptionEffectedGuidanceModelsDto.getOrdering()"], "Fixed commit": "dcfb66aee19f6cf4fb18fb6dee632328269e873a", "Url": "https://api.github.com/repos/gihustefan/SEPraktikum-Backend", "Date": "2016-11-08T17:16:36Z"},
{"Line": "=>3825", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mEditor) == null) || (!(mEditor.mErrorWasChanged))) { setError(error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6181/buggy-version/core.java.android.widget.TextView.java", "BodyUseAPI": [], "Fixed commit": "bb7c54d673a75d8f7af711b4851af6a71bf8561d", "Url": "https://api.github.com/repos/Infinitive-OS/platform_frameworks_base", "Date": "2015-07-29T10:04:36Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.parse.ParseObject.getParseFile(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (parseFile == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3180/buggy-version/app.src.main.java.com.clothapp.profile.utils.ProfileUtils.java", "BodyUseAPI": [], "Fixed commit": "c708d3cee52e80f7d147c91b6821b00c95827fa3", "Url": "https://api.github.com/repos/ClothAppProject/ClothAppAndroid", "Date": "2016-03-15T10:09:12Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (photo == null) { android.util.Log.d(\"checkToCompress\", \"ritornato -1\"); return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3180/buggy-version/app.src.main.java.com.clothapp.resources.BitmapUtil.java", "BodyUseAPI": [], "Fixed commit": "c708d3cee52e80f7d147c91b6821b00c95827fa3", "Url": "https://api.github.com/repos/ClothAppProject/ClothAppAndroid", "Date": "2016-03-15T10:09:12Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.clothapp.resources.BitmapUtil.checkToCompress(android.graphics.Bitmap)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (toCompress == (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3180/buggy-version/app.src.main.java.com.clothapp.upload.UploadProfilePictureActivity.java", "BodyUseAPI": [], "Fixed commit": "c708d3cee52e80f7d147c91b6821b00c95827fa3", "Url": "https://api.github.com/repos/ClothAppProject/ClothAppAndroid", "Date": "2016-03-15T10:09:12Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (schema == null) { throw new java.lang.RuntimeException((\"Argument is not known : \" + (\" , usage: \" + \" 'docker' or no arguments for infrastructure generic model.\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6940/buggy-version/src.main.java.org.ow2.erocci.backend.BackendDBusService.java", "BodyUseAPI": [], "Fixed commit": "64f6c1ead430673429fbd373bb05e288a8127942", "Url": "https://api.github.com/repos/MaelAudren/erocci-dbus-java", "Date": "2016-04-18T15:13:43Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.Bukkit.getWorld(Data.ENVIRONMENT.getFileConfig().getString(\"Fallback\"))", "org.bukkit.Bukkit.getWorld(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fall != w) for (org.bukkit.entity.Player pl : w.getPlayers()) if ((pl != null) && (fall != null)) pl.teleport(fall.getSpawnLocation());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/320/buggy-version/src.com.kNoAPP.Clara.aspects.Environment.java", "BodyUseAPI": ["org.bukkit.World.getPlayers()", "org.bukkit.World.getSpawnLocation()", "org.bukkit.entity.Player.teleport(fall.getSpawnLocation())"], "Fixed commit": "43d3cc77f562601e4855985d93d2261cd8ccefdc", "Url": "https://api.github.com/repos/kNoAPP/C.L.A.R.A", "Date": "2017-12-16T06:01:23Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((device.getAddress().replace(\":\", \"\").toUpperCase().startsWith(\"880F10\")) || (device.getAddress().replace(\":\", \"\").toUpperCase().startsWith(\"C80F10\"))) { if (device.getName().equals(btDeviceName)) { android.util.Log.d(\"BluetoothMiScale\", \"Mi Scale found trying to connect...\"); final byte[] weightData = java.util.Arrays.copyOfRange(scanRecord, 21, 31); weightData[0] = 98; parseBytes(weightData); bluetoothGatt = device.connectGatt(context, false, gattCallback); searchHandler.removeCallbacksAndMessages(null); btAdapter.stopLeScan(scanCallback); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7931/buggy-version/android_app.app.src.main.java.com.health.openscale.core.BluetoothMiScale.java", "BodyUseAPI": ["device.getName().equals(java.lang.String)", "android.bluetooth.BluetoothDevice.getName()", "android.bluetooth.BluetoothDevice.connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback)"], "Fixed commit": "3c64530ed80d897f9337696aa4347b87850f945b", "Url": "https://api.github.com/repos/oliexdev/openScale", "Date": "2017-03-16T16:03:10Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOpaque(getTileAt(pos))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/768/buggy-version/haju3d-client.src.main.java.fi.haju.haju3d.client.chunk.light.ChunkLightManager.java", "BodyUseAPI": [], "Fixed commit": "79b5b41029501599502fe02838accc5a9645ed13", "Url": "https://api.github.com/repos/jvmakine/haju3d", "Date": "2013-12-06T12:33:45Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (raster instanceof org.esa.beam.framework.datamodel.Mask) { bandValues[pixelIndex] = ((float) ((temp == 0) ? 0 : 1)); }else { if ((raster.getDataType()) == (org.esa.beam.framework.datamodel.ProductData.TYPE_UINT32)) { if (org.esa.beam.pixex.output.AggregatingPixExMeasurementFactory.isNoDataValue(raster, temp)) { bandValues[pixelIndex] = java.lang.Float.NaN; }else { bandValues[pixelIndex] = ((float) (temp & 65535L)); } }else { if (org.esa.beam.pixex.output.AggregatingPixExMeasurementFactory.isNoDataValue(raster, temp)) { bandValues[pixelIndex] = java.lang.Float.NaN; }else { bandValues[pixelIndex] = ((float) (temp)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2100/buggy-version/beam-pixel-extraction.src.main.java.org.esa.beam.pixex.output.AggregatingPixExMeasurementFactory.java", "BodyUseAPI": ["org.esa.beam.pixex.output.AggregatingPixExMeasurementFactory.isNoDataValue(org.esa.beam.framework.datamodel.RasterDataNode,int)", "org.esa.beam.pixex.output.AggregatingPixExMeasurementFactory.isNoDataValue(org.esa.beam.framework.datamodel.RasterDataNode,int)", "org.esa.beam.framework.datamodel.RasterDataNode.getDataType()"], "Fixed commit": "9183ead39b44e8c9762d9a3ff676c9e0869ce0a7", "Url": "https://api.github.com/repos/bcdev/beam", "Date": "2014-01-20T10:43:11Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.esa.beam.framework.datamodel.RasterDataNode.getSampleInt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.esa.beam.pixex.output.AggregatingPixExMeasurementFactory.isNoDataValue(raster, temp)) { bandValues[pixelIndex] = java.lang.Float.NaN; }else { bandValues[pixelIndex] = ((float) (temp)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2100/buggy-version/beam-pixel-extraction.src.main.java.org.esa.beam.pixex.output.AggregatingPixExMeasurementFactory.java", "BodyUseAPI": [], "Fixed commit": "9183ead39b44e8c9762d9a3ff676c9e0869ce0a7", "Url": "https://api.github.com/repos/bcdev/beam", "Date": "2014-01-20T10:43:11Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Globals.OPENCRON_SERVERURL) != null) { java.lang.String params = \"\"; org.opencron.common.utils.HttpUtils.doPost(Globals.OPENCRON_SERVERURL, params, \"UTF-8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5132/buggy-version/opencron-agent.src.main.java.org.opencron.agent.Bootstrap.java", "BodyUseAPI": [], "Fixed commit": "6a3689fe7ab9957d4b819c415ad3c5046e51d2dc", "Url": "https://api.github.com/repos/jobxhub/JobX", "Date": "2017-05-04T13:14:06Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((wuPATHn.me.lagouspider.util.Helper.index) == 0) { wuPATHn.me.lagouspider.util.Helper.builder.set(\"User-Agent\", wuPATHn.me.lagouspider.framework.SpiderUserAgentUtil.next()); wuPATHn.me.lagouspider.util.Helper.index = (++(wuPATHn.me.lagouspider.util.Helper.index)) % (wuPATHn.me.lagouspider.Config.SWITCH_AGENT_NUM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8187/buggy-version/LagouSpider.src.main.java.wuPATHn.me.lagouspider.util.Helper.java", "BodyUseAPI": [], "Fixed commit": "0cbf4fa86ae372ba3e8971ee4551308d57fe311b", "Url": "https://api.github.com/repos/PATHoshenke/Hangzhou-IT-Corp", "Date": "2017-04-24T07:03:05Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(path.toFile().exists())) { org.eclipse.core.resources.IWorkspaceRoot wsroot = org.eclipse.core.resources.ResourcesPlugin.getWorkspace().getRoot(); org.eclipse.core.resources.IProject refrenceProject = wsroot.getProject(path.segment(0)); if (refrenceProject != null) { org.eclipse.core.runtime.IPath refProjectPrefix = refrenceProject.getLocation().removeLastSegments(1).removeTrailingSeparator(); org.eclipse.core.runtime.IPath tmpPath = new org.eclipse.core.runtime.Path(((refProjectPrefix.toPortableString()) + (path.toPortableString()))); path = tmpPath; file = path.toFile(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7657/buggy-version/src.org.wjw.eclipse.handlers.explore.ExploreDirectoryHandler.java", "BodyUseAPI": ["org.eclipse.core.runtime.IPath.toPortableString()", "org.eclipse.core.resources.IWorkspaceRoot.getProject(path.segment(0))", "org.eclipse.core.runtime.IPath.segment(int)"], "Fixed commit": "302e013496735d87914a9a54fe5a704786ffe2fd", "Url": "https://api.github.com/repos/wjw465150/OpenExplore", "Date": "2013-05-15T08:21:30Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLastMealEvent) == null) { new com.davidtschida.purduemenu.util.DefaultMealChooser().initiateDefaultMealSelection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4011/buggy-version/app.src.main.java.com.davidtschida.materialdiningcourts.activities.MealViewActivity.java", "BodyUseAPI": [], "Fixed commit": "38b8aa1fa2322a023a5c9ac0920391de2f10fac0", "Url": "https://api.github.com/repos/vidia/MaterialDiningCourts-android", "Date": "2015-12-15T06:29:55Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subject.length()) < 7) end = subject.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2130/buggy-version/edoweb2-api.src.main.java.de.nrw.hbz.edoweb2.api.Actions.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "bf58fc30318fc6c7bb9eba61407837c77df83bf3", "Url": "https://api.github.com/repos/edoweb/edoweb2", "Date": "2012-11-16T07:16:55Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["phoneBook.MyDate.getMonth()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nowMonth > 12) { nowMonth = 1; nowYear++; if (nowYear == 100) { nowYear = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1991/buggy-version/MyDate.java", "BodyUseAPI": [], "Fixed commit": "107d565c46274c7461d555b728fa80a7f7cba4c7", "Url": "https://api.github.com/repos/lightb0x/computerProgrammingHW1verJava", "Date": "2016-04-15T08:12:27Z"},
{"Line": "=>974", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"global\".equals(element.get(0).asText())) { ctx = context.getGlobal(); startIdx++; }else if (\"self\".equals(element.get(0).asText())) { ctx = context.getProp(\"self\"); startIdx++; }else { ctx = context.getAsNode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8862/buggy-version/src.main.java.ru.histone.evaluator.Evaluator.java", "BodyUseAPI": ["java.lang.String.equals(element.get(0).asText())", "element.get(0).asText()", "com.fasterxml.jackson.databind.node.ArrayNode.get(int)"], "Fixed commit": "490e224046ec002ca6e8d0d715c01091b3d8a3aa", "Url": "https://api.github.com/repos/MegafonWebLab/histone-java", "Date": "2012-12-03T10:52:46Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) > 1) val += \" \" + (args[1]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6594/buggy-version/StoreDecision.src.storedecision.StoreDecision.java", "BodyUseAPI": [], "Fixed commit": "b96613aa3ed16536256366b29ffa1718b4305fb6", "Url": "https://api.github.com/repos/HerrAugust/OpenHAB", "Date": "2017-02-23T13:06:48Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.Integer>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (x == mscIdx) { list.add(uk.gov.dvla.osg.batch.Main.customers.get(i).getMsc()); }else if (x == outEnvIdx) { list.add(uk.gov.dvla.osg.batch.Main.customers.get(i).getEnvelope()); }else if (x == mailingProductIdx) { list.add(uk.gov.dvla.osg.batch.Main.customers.get(i).getProduct()); }else if (x == batchTypeIdx) { list.add(uk.gov.dvla.osg.batch.Main.customers.get(i).getBatchType()); }else if (x == totalNumberOfPagesInGroupFieldIdx) { list.add((\"\" + (uk.gov.dvla.osg.batch.Main.customers.get(i).getTotalPagesInGroup()))); }else if ((x == insertHopperCodeFieldIdx) && (!(uk.gov.dvla.osg.batch.Main.customers.get(i).getInsertRef().trim().isEmpty()))) { list.add((\"\" + (uk.gov.dvla.osg.batch.Main.il.getLookup().get(uk.gov.dvla.osg.batch.Main.customers.get(i).getInsertRef().trim()).getHopperCode()))); }else if (x == tenDigitJidIdx) { list.add((\"\" + (uk.gov.dvla.osg.batch.Main.customers.get(i).getTenDigitJid()))); }else { list.add(split[x]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8534/buggy-version/src.uk.gov.dvla.osg.batch.Main.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "db4fc8c0ae4f3ab475ba0a0e27c4e86912e58d1c", "Url": "https://api.github.com/repos/dendleberry/batch", "Date": "2017-04-20T07:31:31Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["services.getSelectionModel().getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (selectedItem != null) { m_consumer.setService(services.getSelectionModel().getSelectedItem().toString()); m_consumer.subscribe(ric.getText().trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/485/buggy-version/src.com.thomsonreuters.ema.example.gui.SpeedGuide.view.SpeedGuideViewController.java", "BodyUseAPI": [], "Fixed commit": "db20097162699ac1b37d69319bd31479673044cd", "Url": "https://api.github.com/repos/TR-API-Samples/Example.EMA.Java.SpeedGuide", "Date": "2017-01-24T20:54:38Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((d.vendor) == null) && ((vendor) != (d.vendor))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1242/buggy-version/src.net.pieroxy.ua.detection.Browser.java", "BodyUseAPI": [], "Fixed commit": "d268294f0694dcb06806856473f2fee00ab526c6", "Url": "https://api.github.com/repos/pieroxy/java-user-agent-detection", "Date": "2015-04-10T18:46:18Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.airbnb.android.airmapview.RuntimePermissionUtils.checkLocationPermissions(getActivity(), this)) { myLocationEnabled = enabled; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/855/buggy-version/library.src.main.java.com.airbnb.android.airmapview.NativeGoogleMapFragment.java", "BodyUseAPI": [], "Fixed commit": "a83d5d513f3267c567abd87fa94a4714bd48fbe2", "Url": "https://api.github.com/repos/OmarB97/AirMapView", "Date": "2016-12-20T08:21:35Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newConfig.orientation) == (android.content.res.Configuration.ORIENTATION_LANDSCAPE)) { mBlurImageContainer.setLayoutParams(new android.widget.FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT)); mBlurImageContainer.requestLayout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2099/buggy-version/app.src.main.java.com.fangxu.dota2helper.ui.Activity.VideoPlayerActivity.java", "BodyUseAPI": [], "Fixed commit": "9f21b07336ff6d7d37f72d4e14650bc364a905d9", "Url": "https://api.github.com/repos/uin3566/Dota2Helper", "Date": "2016-06-28T06:29:55Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (customWorldData.hasTag(\"warp\")) { customWorldData.setTagCompound(\"warps\", customWorldData.getTagCompound(\"warp\")); customWorldData.removeValue(\"warp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5239/buggy-version/src.main.java.hxckdms.hxccore.HxCCore.java", "BodyUseAPI": ["hxckdms.hxccore.HxCCore.setTagCompound(java.lang.String,customWorldData.getTagCompound(\"warp\"))", "hxckdms.hxccore.HxCCore.getTagCompound(java.lang.String)", "hxckdms.hxccore.HxCCore.removeValue(java.lang.String)"], "Fixed commit": "68ff8466000d0cd04eec6a9676aeff656702fa6f", "Url": "https://api.github.com/repos/HxCKDMS/HxCCore", "Date": "2016-11-11T17:55:58Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (customWorldData.hasTag(\"home\")) { customWorldData.setTagCompound(\"homes\", customWorldData.getTagCompound(\"home\")); customWorldData.removeValue(\"home\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5239/buggy-version/src.main.java.hxckdms.hxccore.HxCCore.java", "BodyUseAPI": ["hxckdms.hxccore.HxCCore.setTagCompound(java.lang.String,customWorldData.getTagCompound(\"home\"))", "hxckdms.hxccore.HxCCore.removeValue(java.lang.String)", "hxckdms.hxccore.HxCCore.getTagCompound(java.lang.String)"], "Fixed commit": "68ff8466000d0cd04eec6a9676aeff656702fa6f", "Url": "https://api.github.com/repos/HxCKDMS/HxCCore", "Date": "2016-11-11T17:55:58Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getAction()) != (android.view.MotionEvent.ACTION_DOWN)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3895/buggy-version/app.src.main.java.austinpatel.connectfour.ConnectGrid.java", "BodyUseAPI": [], "Fixed commit": "3f3d392b06ebe9cf3a42159975a6c3bb90f444ef", "Url": "https://api.github.com/repos/austinapatel/ConnectFour", "Date": "2017-02-05T12:53:35Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_camera) == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7140/buggy-version/android.src.main.java.com.lwansbrough.RCTCamera.RCTCameraViewFinder.java", "BodyUseAPI": [], "Fixed commit": "030b33a70871c9545d1855717db268a51f3755aa", "Url": "https://api.github.com/repos/kevinnguy/react-native-camera", "Date": "2017-02-22T23:33:08Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (this.customSQL.toLowerCase().contains(\"\\nfrom \")) { columnList = java.util.Arrays.asList(com.library.common.StringHelper.getBetweenString(this.customSQL.toLowerCase(), \"select\", \"\\nfrom \").split(\",\")); }else { columnList = java.util.Arrays.asList(com.library.common.StringHelper.getBetweenString(this.customSQL.toLowerCase(), \"select\", \" from \").split(\",\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6315/buggy-version/src.com.web.spring.datatable.TableQuery.java", "BodyUseAPI": [], "Fixed commit": "020670bb6b75b73aa133d4e14c3dc76c96098f03", "Url": "https://api.github.com/repos/lwfwind/spring-jquery-datatable", "Date": "2016-12-20T09:11:59Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.encodedPhoto.size()) != 0) { if (this.encodedPhoto.get(0).equals(\"\")) { this.encodedPhoto.remove(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6495/buggy-version/TradioGC.app.src.main.java.com.example.yunita.tradiogc.photo.Photo.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.get(int)", "java.util.ArrayList<java.lang.String>.remove(int)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "86de5cb94853bdad1b88a2c1994cb3295c873994", "Url": "https://api.github.com/repos/CMPUT301F15T09/Cloud9", "Date": "2015-12-01T00:51:51Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (esize < 10) esize = this.estimateSize(baseMap, filter);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4662/buggy-version/platform.src.main.java.org.hillview.table.SparseMembership.java", "BodyUseAPI": [], "Fixed commit": "a0f6de93a3eb5fa984d5cca9b84c2cf4fbba1b34", "Url": "https://api.github.com/repos/uwieder/Hillview", "Date": "2017-10-19T17:10:11Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (predicted == 0.0) predicted = 1.0E-4;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5405/buggy-version/src.nayak.Neural.NeuralNetwork.java", "BodyUseAPI": [], "Fixed commit": "1f7737d4ebf9a1d0e521f2000c56e6e3f555192c", "Url": "https://api.github.com/repos/nayak1123/classifiers", "Date": "2014-06-14T02:42:45Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Jama.Matrix.get(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (predicted == 1.0) predicted = 0.999;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5405/buggy-version/src.nayak.Neural.NeuralNetwork.java", "BodyUseAPI": [], "Fixed commit": "1f7737d4ebf9a1d0e521f2000c56e6e3f555192c", "Url": "https://api.github.com/repos/nayak1123/classifiers", "Date": "2014-06-14T02:42:45Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((trackingSession.getData().size()) >= 3) { statisticsContainer.getChildren().add(new gui.views.statistics.TrackingStatistic(trackingSession)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8564/buggy-version/Project7.src.main.java.gui.controllers.StatisticsViewController.java", "BodyUseAPI": ["statisticsContainer.getChildren().add(gui.views.statistics.TrackingStatistic)"], "Fixed commit": "ec30464df0e1c88db7df4fd1d659cf05e4cad5cb", "Url": "https://api.github.com/repos/ProPra16/programmierpraktikum-abschlussprojekt-null", "Date": "2016-07-13T18:09:37Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["syncService.getCasePhoto(id, photoKey, PhotoConfig.RESIZE_FOR_WEB).toBlocking().first()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (response.isSuccessful()) { updateCasePhotos(id, response.body().bytes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3270/buggy-version/app.src.main.java.org.unicef.rapidreg.sync.CPSyncPresenter.java", "BodyUseAPI": ["retrofit2.Response<okhttp3.ResponseBody>.body()", "org.unicef.rapidreg.sync.CPSyncPresenter.22.updateCasePhotos(java.lang.String,response.body().bytes())", "response.body().bytes()"], "Fixed commit": "8be1589bddcdee2ba7c0360983debe998329ffcb", "Url": "https://api.github.com/repos/UnicefNY/RapidReg", "Date": "2017-01-23T01:55:51Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(alreadyAddedTests.contains(newTest.getName()))) { orderedListOfTests.add(newTest); alreadyAddedTests.add(newTest.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6966/buggy-version/dt-impact-tracer.src.edu.washington.cs.dt.impact.order.Standard.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(newTest.getName())", "edu.washington.cs.dt.impact.data.TestFunctionStatement.getName()", "java.util.List<edu.washington.cs.dt.impact.data.TestFunctionStatement>.add(edu.washington.cs.dt.impact.data.TestFunctionStatement)"], "Fixed commit": "9f935d42e9bcc717d6b41102cd406476b72328d2", "Url": "https://api.github.com/repos/winglam/dependent-tests-impact", "Date": "2017-01-13T22:59:16Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (action.equals(\"isInstalled\")) { this.isInstalled(); }else if (action.equals(\"test\")) { this.test(); }else { callbackContext.error(\"Invalid Action\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1711/buggy-version/src.android.InstagramSharePlugin.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "1a2060a5731e4e39ac00baa71c1e1afc251b650e", "Url": "https://api.github.com/repos/samuelcastro/cordova-instagram-share", "Date": "2016-01-06T15:03:22Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.pm.PackageManager.getPackageInfo(mContext.getPackageName(),PackageManager.GET_PERMISSIONS)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((packageInfo == null) || ((packageInfo.requestedPermissions) == null)) { writer.println(\"No requested permission.\"); if (mIsAll) { writer.println(\"\"); } return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8054/buggy-version/app.src.main.java.org.shikato.infodumper.InfoDumperPlugin.java", "BodyUseAPI": [], "Fixed commit": "aae8bb07444794ec07123efbb95c6e2f12aacd1d", "Url": "https://api.github.com/repos/shikato/info-dumper", "Date": "2015-05-28T15:30:44Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((servers.size) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2689/buggy-version/src.com.ahsgaming.valleyofbones.screens.GameJoinScreen.java", "BodyUseAPI": [], "Fixed commit": "13a290b9362905e11a3d1294bc9c0a8f448a65ca", "Url": "https://api.github.com/repos/fbcouch/valley-of-bones", "Date": "2014-02-16T16:00:10Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((servers.size) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2689/buggy-version/src.com.ahsgaming.valleyofbones.screens.GameJoinScreen.java", "BodyUseAPI": [], "Fixed commit": "13a290b9362905e11a3d1294bc9c0a8f448a65ca", "Url": "https://api.github.com/repos/fbcouch/valley-of-bones", "Date": "2014-02-16T16:00:10Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sum / size) == 0) { _averageFAs.add(0.0); }else { _averageFAs.add((sum / size)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8954/buggy-version/src.Tract.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.Double>.add(double)"], "Fixed commit": "b2ceaa71288248ac90586cf9ec3f45f33078a56b", "Url": "https://api.github.com/repos/Jeffrey-Young/CalculateDeltaFA", "Date": "2016-10-24T04:44:14Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.get(\"Road Hazard\")) != null) { reportImage.setRoadHazard(java.lang.Integer.parseInt(item.get(\"Road Hazard\").getN())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2743/buggy-version/app.src.main.java.com.mobilizedconstruction.model.Image.java", "BodyUseAPI": ["com.mobilizedconstruction.model.ReportImageDO.setRoadHazard(int)", "java.lang.Integer.parseInt(item.get(\"Road Hazard\").getN())", "item.get(\"Road Hazard\").getN()", "java.util.Map<java.lang.String, com.amazonaws.services.dynamodbv2.model.AttributeValue>.get(java.lang.String)"], "Fixed commit": "17f33621e1c823047bead7e0bc50620ee1c9be00", "Url": "https://api.github.com/repos/juliejin/MobilizedConstruction", "Date": "2017-10-26T14:24:42Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.contains(\"dd\")) { input = (input.substring(0, input.lastIndexOf(\"-\"))) + \"-31\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3475/buggy-version/src.de.uniba.kinf.projm.hylleblomst.logicImpl.UserQueryImpl.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.lastIndexOf(java.lang.String)"], "Fixed commit": "3fbe61381a67ca20534578a86c43503af0ed4fe4", "Url": "https://api.github.com/repos/HannesT117/KInf-Proj", "Date": "2015-07-13T20:42:40Z"},
{"Line": "=>427", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((folders > 0) && (files > 0)) { output = output + \", \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/952/buggy-version/src.com.owncloud.android.ui.fragment.OCFileListFragment.java", "BodyUseAPI": [], "Fixed commit": "580c1f008e1eaeddf26e257a6aefdde5169a76cd", "Url": "https://api.github.com/repos/Kernald/owncloud-android", "Date": "2014-11-21T17:08:44Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (files > 0) { if (files == 1) { output = ((output + (files.toString())) + \" \") + (getResources().getString(R.string.file_list_file)); }else { output = ((output + (files.toString())) + \" \") + (getResources().getString(R.string.file_list_files)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/952/buggy-version/src.com.owncloud.android.ui.fragment.OCFileListFragment.java", "BodyUseAPI": ["java.lang.Integer.toString()", "java.lang.Integer.toString()"], "Fixed commit": "580c1f008e1eaeddf26e257a6aefdde5169a76cd", "Url": "https://api.github.com/repos/Kernald/owncloud-android", "Date": "2014-11-21T17:08:44Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1970/buggy-version/ddth-commons-core.src.main.java.com.github.ddth.commons.utils.ValueUtils.java", "BodyUseAPI": [], "Fixed commit": "b32a80f92d8c5ace4fcd2044cacd74c34fc8c053", "Url": "https://api.github.com/repos/DDTH/ddth-commons", "Date": "2017-06-08T07:04:10Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1970/buggy-version/ddth-commons-core.src.main.java.com.github.ddth.commons.utils.ValueUtils.java", "BodyUseAPI": [], "Fixed commit": "b32a80f92d8c5ace4fcd2044cacd74c34fc8c053", "Url": "https://api.github.com/repos/DDTH/ddth-commons", "Date": "2017-06-08T07:04:10Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y > (maxY)) || (y < 0)) { return com.sk89q.worldedit.EditSession.nullBlock; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1139/buggy-version/core.src.main.java.com.boydti.fawe.object.extent.FastWorldEditExtent.java", "BodyUseAPI": [], "Fixed commit": "4007155b8f0137081afa21ff006f5e19d0ebbf91", "Url": "https://api.github.com/repos/boy0001/FastAsyncWorldedit", "Date": "2017-03-05T04:30:21Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pluginName.startsWith(de.dal33t.powerfolder.plugin.PluginManager.PLUGIN_PACKAGE_PREFIX)) { int lastDot = pluginName.lastIndexOf('.'); pluginName = pluginName.substring((lastDot + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6921/buggy-version/src.main.de.dal33t.powerfolder.plugin.PluginManager.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.lastIndexOf(char)"], "Fixed commit": "c5faa5d7bc429910a70c394befa5d300f09a21ce", "Url": "https://api.github.com/repos/powerfolder/PF-CORE", "Date": "2015-08-08T01:05:06Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pluginName.startsWith(de.dal33t.powerfolder.plugin.PluginManager.PLUGIN_PACKAGE_PREFIX)) { int lastDot = pluginName.lastIndexOf('.'); pluginName = pluginName.substring((lastDot + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6921/buggy-version/src.main.de.dal33t.powerfolder.plugin.PluginManager.java", "BodyUseAPI": ["java.lang.String.lastIndexOf(char)", "java.lang.String.substring(int)"], "Fixed commit": "c5faa5d7bc429910a70c394befa5d300f09a21ce", "Url": "https://api.github.com/repos/powerfolder/PF-CORE", "Date": "2015-08-08T01:05:06Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (run) { canvas.drawBitmap(backgroundImage, null, new android.graphics.Rect(0, 0, getWidth(), getHeight()), null); ship.draw(canvas, getWidth(), getHeight()); testEnemy.Draw(canvas, getWidth(), getHeight()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3044/buggy-version/src.com.se.kinderlearn.core.SpaceInvadersView.java", "BodyUseAPI": [], "Fixed commit": "2d8ee0abb0133a4c1abb5ef5fc0fb6db87facea8", "Url": "https://api.github.com/repos/qinPATHoapp/SE329_KinderLearn", "Date": "2013-11-12T19:20:07Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cyano.poweradvantage.machines.conveyors.TileEntityConveyor.handleChest(net.minecraft.tileentity.TileEntity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (realChest == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4876/buggy-version/src.main.java.cyano.poweradvantage.machines.conveyors.TileEntityConveyor.java", "BodyUseAPI": [], "Fixed commit": "0d8d1cc1ceb32689a070a37df0671259aeff0545", "Url": "https://api.github.com/repos/cyanobacterium/PowerAdvantageAPI", "Date": "2015-06-08T11:38:54Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cyano.poweradvantage.machines.conveyors.TileEntityConveyor.handleChest(net.minecraft.tileentity.TileEntity)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (realChest == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4876/buggy-version/src.main.java.cyano.poweradvantage.machines.conveyors.TileEntityConveyor.java", "BodyUseAPI": [], "Fixed commit": "0d8d1cc1ceb32689a070a37df0671259aeff0545", "Url": "https://api.github.com/repos/cyanobacterium/PowerAdvantageAPI", "Date": "2015-06-08T11:38:54Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((f.length) > 1) { java.lang.String[] l = f[0].split(\"-\"); cal.set(java.util.Calendar.YEAR, java.lang.Integer.valueOf(l[0])); cal.set(java.util.Calendar.MONTH, java.lang.Integer.valueOf(l[1])); cal.set(java.util.Calendar.DAY_OF_MONTH, java.lang.Integer.valueOf(l[2])); s = f[1].split(\":\"); }else { s = dateString.split(\":\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4723/buggy-version/BeerApp.src.com.chro.beerapp.Entry.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "9de67a74e44b1b7063fad37fa25e77a4971bf15c", "Url": "https://api.github.com/repos/oliverwnk/AppDev", "Date": "2015-01-28T17:58:18Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["originalKeywords.get(((originalKeywords.size()) - 1)).getHeisigId()", "java.lang.Integer.parseInt(entry.id)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((id < 1) || (id > LAST_HEISIG_ID)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/945/buggy-version/KoohiiAite.src.main.java.com.diarmaidlindsay.koohii.adapter.ImportStoryAdapter.java", "BodyUseAPI": [], "Fixed commit": "1070e7c39421902469aa1b492c228defdba8abe2", "Url": "https://api.github.com/repos/diarmaidlindsay/KoohiiAite", "Date": "2016-11-10T15:55:08Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (env.isAutoImports()) { importsContext.computeImports(element); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/221/buggy-version/src.main.java.spoon.reflect.visitor.DefaultJavaPrettyPrinter.java", "BodyUseAPI": [], "Fixed commit": "5716b023f70a30ff8cbf233a75ea8e25be1ed3c8", "Url": "https://api.github.com/repos/surli/spoon", "Date": "2016-12-07T09:36:20Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.regex.Pattern.matches(taskie.parser.CommandParser.PATTERN_MATCH_FROM_TO_TIME, date)) { return date; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6159/buggy-version/src.taskie.parser.CommandParser.java", "BodyUseAPI": [], "Fixed commit": "8248052c82e869f37a632d55c5295ac3a8573d18", "Url": "https://api.github.com/repos/cs2103jan2015-t15-2j/main", "Date": "2015-04-12T06:11:29Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.Query.getMaxResults()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((maxResults > 0) && ((results.size()) >= maxResults)) { return results; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8426/buggy-version/src.java.com.idega.core.persistence.impl.DaoFunctionsImpl.java", "BodyUseAPI": [], "Fixed commit": "f89cd318da9c2b7c55108d3b7bcd368059616a65", "Url": "https://api.github.com/repos/idega/com.idega.core", "Date": "2017-02-03T13:40:31Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.persistence.Query.getMaxResults()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((maxResults > 0) && ((results.size()) >= maxResults)) { return results; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8426/buggy-version/src.java.com.idega.core.persistence.impl.DaoFunctionsImpl.java", "BodyUseAPI": [], "Fixed commit": "f89cd318da9c2b7c55108d3b7bcd368059616a65", "Url": "https://api.github.com/repos/idega/com.idega.core", "Date": "2017-02-03T13:40:31Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == (_nsi)) addSlotToContainer(new powercrystals.minefactoryreloaded.gui.slot.SlotViewOnly(inventoryPlayer, i, (8 + (i * 18)), (84 + 58))); else addSlotToContainer(new net.minecraft.inventory.Slot(inventoryPlayer, i, (8 + (i * 18)), (84 + 58)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3043/buggy-version/src.powercrystals.minefactoryreloaded.gui.container.ContainerNeedlegun.java", "BodyUseAPI": ["powercrystals.minefactoryreloaded.gui.container.ContainerNeedlegun.addSlotToContainer(powercrystals.minefactoryreloaded.gui.slot.SlotViewOnly)", "powercrystals.minefactoryreloaded.gui.container.ContainerNeedlegun.addSlotToContainer(net.minecraft.inventory.Slot)"], "Fixed commit": "834a0516768c03d74ec465a9a187adc9f99b1222", "Url": "https://api.github.com/repos/skyboy/MineFactoryReloaded", "Date": "2013-10-12T20:43:30Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ebi.ontocat.bioportal.BioportalOntologyService.getSynonyms(uk.ac.ebi.ontocat.OntologyTerm)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((synonymsForParentTerm.size()) == 0) synonymsForParentTerm = new java.util.ArrayList<java.lang.String>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3708/buggy-version/apps.bioshare.plugins.harmonization.TermExpansionJob.java", "BodyUseAPI": [], "Fixed commit": "a64cf86383fd261c8d2bf2be139e1c320259a83f", "Url": "https://api.github.com/repos/ChaoPang/molgenis_apps-legacy", "Date": "2013-02-21T20:57:21Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.ebi.ontocat.bioportal.BioportalOntologyService.getSynonyms(uk.ac.ebi.ontocat.OntologyTerm)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((synonymsForChildTerm.size()) == 0) synonymsForChildTerm = new java.util.ArrayList<java.lang.String>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3708/buggy-version/apps.bioshare.plugins.harmonization.TermExpansionJob.java", "BodyUseAPI": [], "Fixed commit": "a64cf86383fd261c8d2bf2be139e1c320259a83f", "Url": "https://api.github.com/repos/ChaoPang/molgenis_apps-legacy", "Date": "2013-02-21T20:57:21Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (apiList == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4613/buggy-version/app.src.main.java.be.irail.liveboards.StationFragment.java", "BodyUseAPI": [], "Fixed commit": "8f9c68e2f2a2ca440799ddbbb6ed6b6fcd28358b", "Url": "https://api.github.com/repos/ChristopheVersieux/BeTrains-Shortcuts", "Date": "2017-10-16T07:02:20Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { android.support.v7.app.AlertDialog.Builder builder = new android.support.v7.app.AlertDialog.Builder(this); builder.setMessage((\"Please send and email to christophe.versieux+betrains@gmail.com with a screenshot of this screen or this url:\\n\" + url)).setTitle(\"ERROR\"); builder.create().show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4613/buggy-version/app.src.main.java.be.irail.liveboards.LiveboardVehicleActivity.java", "BodyUseAPI": [], "Fixed commit": "8f9c68e2f2a2ca440799ddbbb6ed6b6fcd28358b", "Url": "https://api.github.com/repos/ChristopheVersieux/BeTrains-Shortcuts", "Date": "2017-10-16T07:02:20Z"},
{"Line": "=>731", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.walkmod.javalang.compiler.symbols.SymbolType.valueOf(java.lang.reflect.Type,org.walkmod.javalang.compiler.symbols.SymbolType,java.util.Map<java.lang.String, org.walkmod.javalang.compiler.symbols.SymbolType>,java.util.Map<java.lang.String, org.walkmod.javalang.compiler.symbols.SymbolType>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((arg != null) || (!(java.lang.Object.class.getName().equals(tp.getName())))) { if (tp != null) { params.add(tp); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4350/buggy-version/src.main.java.org.walkmod.javalang.compiler.symbols.SymbolType.java", "BodyUseAPI": ["java.util.List<org.walkmod.javalang.compiler.symbols.SymbolType>.add(org.walkmod.javalang.compiler.symbols.SymbolType)"], "Fixed commit": "2020a741987b75db66dbe76d5fe3d3ec67d5b0ea", "Url": "https://api.github.com/repos/cal101/javalang-compiler", "Date": "2017-04-23T09:29:43Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shooterController.isBackPushed()) { objShooter.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1953/buggy-version/src.edu.wpi.first.wpilibj.templates.Team3373.java", "BodyUseAPI": [], "Fixed commit": "c439ecd0c1270703ea12a4c1407361e951db50ad", "Url": "https://api.github.com/repos/Peragore/2013_Refactored", "Date": "2013-02-16T02:26:08Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shooterController.isStartPushed()) { objShooter.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1953/buggy-version/src.edu.wpi.first.wpilibj.templates.Team3373.java", "BodyUseAPI": [], "Fixed commit": "c439ecd0c1270703ea12a4c1407361e951db50ad", "Url": "https://api.github.com/repos/Peragore/2013_Refactored", "Date": "2013-02-16T02:26:08Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((domain.length()) == 0) { try { registry.unbind(config.getString(\"root_id\")); } catch (java.lang.Exception e) { java.lang.System.err.println((\"Error while unbinding object: \" + (e.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3586/buggy-version/src.main.java.nameserver.Nameserver.java", "BodyUseAPI": [], "Fixed commit": "88fea253e67b284a4e42510e17b66968d2ec9c81", "Url": "https://api.github.com/repos/freddysoare/VSYSLAB2", "Date": "2016-12-28T21:36:59Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((life) != null) map.put(\"life\", life.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1204/buggy-version/Demigods-Engine.src.main.java.com.censoredsoftware.demigods.engine.structure.StructureData.java", "BodyUseAPI": [], "Fixed commit": "79f54154c95159801b37bb0069b269a6f4385fb6", "Url": "https://api.github.com/repos/CensoredSoftware/Demigods", "Date": "2013-12-25T05:50:45Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.psddev.dari.util.Settings.isProduction())) { html.object(ex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5412/buggy-version/db.src.main.java.com.psddev.cms.db.ToolFormWriter.java", "BodyUseAPI": [], "Fixed commit": "9003307189f98f3457993a00af09c4e83e2b7641", "Url": "https://api.github.com/repos/perfectsense/brightspot-cms", "Date": "2013-02-08T17:42:39Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lody.virtual.helper.utils.ArrayUtils.indexOfObject(java.lang.Object[],java.lang.Class,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (intentIndex < 0) { return com.lody.virtual.helper.compat.ActivityManagerCompat.START_INTENT_NOT_RESOLVED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3358/buggy-version/VirtualApp.lib.src.main.java.com.lody.virtual.client.hook.patchs.am.StartActivity.java", "BodyUseAPI": [], "Fixed commit": "5870c152e6a635eb9c44f6c80ad9bb041b7d2716", "Url": "https://api.github.com/repos/hhkhub/VirtualApp", "Date": "2017-03-10T14:27:19Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((array.length) < 2) { value = textParam.getDefaultValue(); }else if (array[1].isEmpty()) { value = textParam.getDefaultValue(); }else { value = array[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1006/buggy-version/core.src.me.scarlet.undertailor.texts.parse.TextParser.java", "BodyUseAPI": ["java.lang.String.isEmpty()"], "Fixed commit": "0f33fed496dd85a1104b3dc117b3bb95c7826fd3", "Url": "https://api.github.com/repos/Xemiru/Undertailor", "Date": "2016-02-21T20:45:52Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Snake.snake.peek().getPos()) < (new Snake.Pos(16, 16).getPos())) { Snake.jTextArea1.replaceRange(java.lang.Character.toString(Snake.snakeHead), Snake.snake.peek().getPos(), ((Snake.snake.peek().getPos()) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2316/buggy-version/code.Snake.java", "BodyUseAPI": ["javax.swing.JTextArea.replaceRange(java.lang.String,int,int)", "java.util.LinkedList<Snake.Pos>.peek()", "Snake.Pos.getPos()", "Snake.Pos.getPos()", "java.util.LinkedList<Snake.Pos>.peek()"], "Fixed commit": "6457441f694bc32ab6548b5b25c6b3b797a3b98a", "Url": "https://api.github.com/repos/Swepedia/ASCII-Snake", "Date": "2017-03-09T19:27:34Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin.getChallengeConfig().getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(level.isEmpty())) { if (!(isLevelAvailable(player, level))) { player.sendMessage(((org.bukkit.ChatColor.RED) + (Locale.challengesyouHaveNotUnlocked))); return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1436/buggy-version/src.com.wasteofplastic.askyblock.Challenges.java", "BodyUseAPI": ["com.wasteofplastic.askyblock.Challenges.isLevelAvailable(org.bukkit.entity.Player,java.lang.String)"], "Fixed commit": "e3ccd5ada8e912ff2783a3d00036d1c6afa2aa3a", "Url": "https://api.github.com/repos/tastybento/askyblock", "Date": "2015-01-04T18:36:16Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((serviceDescription.getPort()) != 8080) serviceDescription.setPort(8080);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7476/buggy-version/src.com.connectsdk.service.NetcastTVService.java", "BodyUseAPI": [], "Fixed commit": "1f48640410df629b3537d2011d56b28cac576ee3", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android", "Date": "2014-05-03T01:48:32Z"},
{"Line": "=>390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.connectsdk.discovery.DiscoveryManager.getInstance().getConnectableDeviceStore()) != null) { com.connectsdk.device.ConnectableDevice storedDevice = com.connectsdk.discovery.DiscoveryManager.getInstance().getConnectableDeviceStore().getDevice(serviceConfig.getServiceUUID()); if (storedDevice == null) { storedDevice = new com.connectsdk.device.ConnectableDevice(serviceDescription.getIpAddress(), serviceDescription.getFriendlyName(), serviceDescription.getModelName(), serviceDescription.getModelNumber()); } storedDevice.addService(this); com.connectsdk.discovery.DiscoveryManager.getInstance().getConnectableDeviceStore().addDevice(storedDevice); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7476/buggy-version/src.com.connectsdk.service.NetcastTVService.java", "BodyUseAPI": [], "Fixed commit": "1f48640410df629b3537d2011d56b28cac576ee3", "Url": "https://api.github.com/repos/ConnectSDK/Connect-SDK-Android", "Date": "2014-05-03T01:48:32Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldEnable) { numberField.setBackground(java.awt.Color.WHITE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8860/buggy-version/RequirementsManagement.src.edu.wpi.cs.wpisuitetng.modules.requirementsmanagement.gui.ReleaseNumberPanel.java", "BodyUseAPI": [], "Fixed commit": "9b323cd3862afa4aa68c802ece35a5a0a4a17f4a", "Url": "https://api.github.com/repos/alexhenning/wpi-suite-tng", "Date": "2013-04-10T19:29:40Z"},
{"Line": "=>1399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isJson) && (!(arr.isEmpty()))) { throw new lucee.runtime.interpreter.InterpreterException(\"Invalid Syntax trailing comma found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4100/buggy-version/lucee-java.lucee-core.src.lucee.runtime.interpreter.CFMLExpressionInterpreter.java", "BodyUseAPI": [], "Fixed commit": "0db33ea0a5b9500355421c8f4dc1459c04433306", "Url": "https://api.github.com/repos/bdw429s/Lucee4", "Date": "2015-07-21T21:08:12Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2102/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "aac13f32c34f6f4f379e28a204a03c6da3234d43", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((highWindTimer) > 0) { (highWindTimer)--; if ((highWindTimer) <= 0) { weather2.Weather.dbg(\"high wind event ended\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2538/buggy-version/src.main.java.weather2.weathersystem.wind.WindManager.java", "BodyUseAPI": [], "Fixed commit": "cbb3659dc817bd41f94298ea77314a569317d0fb", "Url": "https://api.github.com/repos/Corosauce/weather2", "Date": "2016-12-05T02:32:34Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lowWindTimer) <= 0) { weather2.Weather.dbg(\"low wind event ended\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2538/buggy-version/src.main.java.weather2.weathersystem.wind.WindManager.java", "BodyUseAPI": [], "Fixed commit": "cbb3659dc817bd41f94298ea77314a569317d0fb", "Url": "https://api.github.com/repos/Corosauce/weather2", "Date": "2016-12-05T02:32:34Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getIntExtra(java.lang.String,tabLayout.getSelectedTabPosition())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (idx < 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3429/buggy-version/app.src.main.java.com.java.group8.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "82b54a1a46c601bfe5c10c6da6c32da906d57776", "Url": "https://api.github.com/repos/leefige/YiNews", "Date": "2017-09-07T09:32:16Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getButton()) == (java.awt.event.MouseEvent.BUTTON1)) this.restartGame(); else if ((e.getButton()) == (java.awt.event.MouseEvent.BUTTON2)) java.lang.System.exit(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2293/buggy-version/Framework.java", "BodyUseAPI": ["java.awt.event.MouseEvent.getButton()"], "Fixed commit": "fe778743ae263d17a20129d78ba64aa438dfc3db", "Url": "https://api.github.com/repos/MarMar-1/CompsciFinalProject", "Date": "2014-06-09T16:28:50Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["im.vector.services.EventStreamService.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (null != eventStreamService) { java.util.ArrayList<java.lang.String> matrixIds = new java.util.ArrayList<>(); matrixIds.add(session.getMyUserId()); eventStreamService.stopAccounts(matrixIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5688/buggy-version/vector.src.main.java.im.vector.activity.CommonActivityUtils.java", "BodyUseAPI": ["im.vector.services.EventStreamService.stopAccounts(java.util.ArrayList<java.lang.String>)"], "Fixed commit": "5bdd9c4011b3b487b41e68485cb9ce2b0c845981", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2017-09-11T07:23:15Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (kadosh) { if ((this.getActions().size) > 0) return; kadosh = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5990/buggy-version/ClientSide.core.src.GameObjects.Bot.java", "BodyUseAPI": [], "Fixed commit": "737c6dc034dd3e7084b6e3727871ab89e827653d", "Url": "https://api.github.com/repos/tamirz12345/YouHockey", "Date": "2015-05-17T16:31:53Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tarunisrani.dailykharcha.dbhelper.ExpenseDataSource.getExpenseItems(sheet.getSheet_id())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((expenseItems.size()) > 0) { if (expenseDataSource.removeExpenseEntry(expenseItems)) { com.tarunisrani.dailykharcha.utils.AppUtils.getService().removeExpenseEntryFromServer(expenseItems); if (expenseSheetDataSource.removeSheetEntry(sheet)) { android.util.Log.e(\"Remove Sheet\", \"SUCCESSFUL\"); com.tarunisrani.dailykharcha.utils.AppUtils.getService().removeSheetEntryFromServer(sheet); return true; }else { android.util.Log.e(\"Remove Sheet\", \"FAILURE\"); } } }else { if (expenseSheetDataSource.removeSheetEntry(sheet)) { android.util.Log.e(\"Remove Sheet\", \"SUCCESSFUL\"); com.tarunisrani.dailykharcha.utils.AppUtils.getService().removeSheetEntryFromServer(sheet); return true; }else { android.util.Log.e(\"Remove Sheet\", \"FAILURE\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8088/buggy-version/app.src.main.java.com.tarunisrani.dailykharcha.android.ExpenseActivity.java", "BodyUseAPI": ["com.tarunisrani.dailykharcha.dbhelper.ExpenseDataSource.removeExpenseEntry(java.util.ArrayList<com.tarunisrani.dailykharcha.model.Expense>)", "com.tarunisrani.dailykharcha.utils.AppUtils.getService().removeExpenseEntryFromServer(java.util.ArrayList<com.tarunisrani.dailykharcha.model.Expense>)"], "Fixed commit": "84a9bb3ba0c5c4bb74d10da58797eaf00bd1b7e2", "Url": "https://api.github.com/repos/tarunisrani/DailyKharcha", "Date": "2017-04-12T11:15:21Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Controllers.Alert.showAndWait()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((result.get()) != cancelButton) { stage = ((javafx.stage.Stage) (loginButton.getScene().getWindow())); javafx.scene.layout.GridPane root = javafx.fxml.FXMLLoader.load(getClass().getResource(\"/FXML/register.fxml\")); javafx.scene.Scene scene = new javafx.scene.Scene(root, 1280, 720); root.getStyleClass().add(\"scene-background\"); scene.getStylesheets().add(\"/assets/css/menu.css\"); stage.setScene(scene); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1714/buggy-version/src.Controllers.LoginController.java", "BodyUseAPI": [], "Fixed commit": "7f5dd8e4bdbc375049d75af2a8b0aa4635895756", "Url": "https://api.github.com/repos/ruslegg/Western", "Date": "2017-12-12T15:08:01Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Controllers.Alert.showAndWait()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((result.get()) == studentButton) { Controllers.Student.RegisterController.isTeacher = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1714/buggy-version/src.Controllers.LoginController.java", "BodyUseAPI": [], "Fixed commit": "7f5dd8e4bdbc375049d75af2a8b0aa4635895756", "Url": "https://api.github.com/repos/ruslegg/Western", "Date": "2017-12-12T15:08:01Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getFragmentManager().findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (wv == null) { wv = net.biospherecorp.urss.WebViewFrag.create(article.getUrl(), article.getTitle()); getFragmentManager().beginTransaction().replace(R.id.mainScreen, wv, \"webview\").addToBackStack(null).commit(); }else { wv.loadPage(url); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4528/buggy-version/app.src.main.java.net.biospherecorp.urss.MainActivity.java", "BodyUseAPI": ["net.biospherecorp.urss.WebViewFrag.loadPage(java.lang.String)"], "Fixed commit": "6555ac421e715d1954bb719c80b0417b48114b93", "Url": "https://api.github.com/repos/pepinpin/microRSS", "Date": "2016-08-07T15:18:51Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ru.surf.course.movierecommendations.fragments.MoviesListFragment.PAGE) > 1) { movieInfoList.addAll(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6987/buggy-version/app.src.main.java.ru.surf.course.movierecommendations.fragments.MoviesListFragment.java", "BodyUseAPI": [], "Fixed commit": "1aca6486ebd265767583faa1d7285d24572c3432", "Url": "https://api.github.com/repos/pechorka/Movie-Recommendations", "Date": "2017-01-04T11:41:18Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(be.ugent.zeus.hydra.Hydra.DEBUG)) { android.util.Log.d(\"Testflight:\", \"Enable bugtracking\"); com.testflightapp.lib.TestFlight.takeOff(this.getApplication(), \"f498b778-92cf-49d7-9650-954daeaa8551\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1653/buggy-version/android.src.be.ugent.zeus.hydra.Hydra.java", "BodyUseAPI": [], "Fixed commit": "91cd7189e137431d1b5696c3e8ea62c75c0bbe31", "Url": "https://api.github.com/repos/ZeusWPI/hydra", "Date": "2013-09-08T15:26:56Z"},
{"Line": "=>2266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (current.getDependencies().contains(current.getParent())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4127/buggy-version/core.impl.src.main.java.com.blazebit.persistence.impl.JoinManager.java", "BodyUseAPI": [], "Fixed commit": "abbd2cd7b78a68bcbd398691ded8f9f112695a06", "Url": "https://api.github.com/repos/JWGmeligMeyling/blaze-persistence", "Date": "2017-05-08T16:57:43Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((target.length) > 0) prepare(new org.badiff.Op(org.badiff.Op.INSERT, target.length, target));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7326/buggy-version/badiff.src.main.java.org.badiff.q.ReplaceOpQueue.java", "BodyUseAPI": [], "Fixed commit": "9246ab9d5ff40790d17cffc04b489eed75c25b10", "Url": "https://api.github.com/repos/org-badiff/badiff", "Date": "2017-05-31T03:06:46Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((orig.length) > 0) prepare(new org.badiff.Op(org.badiff.Op.DELETE, orig.length, orig));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7326/buggy-version/badiff.src.main.java.org.badiff.q.ReplaceOpQueue.java", "BodyUseAPI": [], "Fixed commit": "9246ab9d5ff40790d17cffc04b489eed75c25b10", "Url": "https://api.github.com/repos/org-badiff/badiff", "Date": "2017-05-31T03:06:46Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((next) == 0) throw new org.araqne.logdb.QueryParseException(\"empty-delimiters\", (-1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8574/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.expr.Split.java", "BodyUseAPI": [], "Fixed commit": "96276a5d989f4bb9087d76728f2c2a61daa2d77a", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2014-10-07T15:10:57Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((score) != (other.score)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2044/buggy-version/src.main.java.ge.edu.freeuni.sdp.xo.achiev.UserAchievment.java", "BodyUseAPI": [], "Fixed commit": "18e54f9245ee4de92ecf6d1f22847f1d0c68afd9", "Url": "https://api.github.com/repos/freeuni-sdp/xo-achiev", "Date": "2015-06-17T22:04:04Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wattdepot.server.http.api.DepositoryHistoricalValuesServer.getMeasurements(java.lang.String,java.lang.String,java.lang.String,org.wattdepot.common.util.DateConvert.convertXMLCal(begin),org.wattdepot.common.util.DateConvert.convertXMLCal(end),boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((measurementList.size()) > 0) { temp /= measurementList.size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1478/buggy-version/src.main.java.org.wattdepot.server.http.api.DepositoryHistoricalValuesServer.java", "BodyUseAPI": ["java.util.List<org.wattdepot.common.domainmodel.Measurement>.size()"], "Fixed commit": "789c94128c4f94a408683ada7061d980cf7a19ab", "Url": "https://api.github.com/repos/wattdepot/wattdepot", "Date": "2015-08-16T21:33:37Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.java.decompiler.modules.decompiler.PrimitiveExprsList.getStack()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((stack.getByOffset((-1)).getExprType().stackSize) == 1) { stack.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8323/buggy-version/plugins.java-decompiler.engine.src.org.jetbrains.java.decompiler.modules.decompiler.ExprProcessor.java", "BodyUseAPI": ["org.jetbrains.java.decompiler.modules.decompiler.ExprentStack.pop()"], "Fixed commit": "6aa01673faebf7a807128f7d82a018439917cc76", "Url": "https://api.github.com/repos/smmribeiro/intellij-community", "Date": "2017-10-18T06:43:38Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (degree == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8617/buggy-version/src.main.java.pt.ist.fenixedu.delegates.ui.DelegateSearchBean.java", "BodyUseAPI": [], "Fixed commit": "e84be00dde7fd43e3a9c63fb7e855e1be7e30235", "Url": "https://api.github.com/repos/ist-dsi-archive/fenixedu-ist-delegates", "Date": "2015-03-04T11:27:16Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.v3ld1n.commands.V3LD1NCommand.getAliasesWithSlash(org.bukkit.command.PluginCommand)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(aliases.isEmpty())) { com.v3ld1n.util.ChatUtil.sendList(user, Message.COMMAND_USAGE_ALIASES.toString(), aliases, ListType.SHORT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6991/buggy-version/src.com.v3ld1n.commands.V3LD1NCommand.java", "BodyUseAPI": ["com.v3ld1n.util.ChatUtil.sendList(org.bukkit.command.CommandSender,Message.COMMAND_USAGE_ALIASES.toString(),java.util.List<java.lang.String>,ListType.SHORT)"], "Fixed commit": "2c6126ab37afcc1e15d0753a5b8e00786ea0a983", "Url": "https://api.github.com/repos/V3LD1N/V3LD1N-Bukkit-Plugin", "Date": "2016-11-23T00:47:30Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.arcs.groove.basking.ui.LibraryFragment.2.getPlaylistId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (playlistId == (PLAYLIST_ID_NONE)) { return new android.content.Loader<android.database.Cursor>(getActivity()) {}; }else { java.lang.String[] projection = new java.lang.String[]{ android.provider.MediaStore.Audio.Playlists.Members._ID, android.provider.MediaStore.Audio.AudioColumns.DATA, android.provider.MediaStore.Audio.AudioColumns.ARTIST, android.provider.MediaStore.Audio.AudioColumns.TITLE, android.provider.MediaStore.Audio.AudioColumns.ALBUM }; return new android.content.CursorLoader(getActivity(), Playlists.Members.getContentUri(\"external\", playlistId), projection, null, null, android.provider.MediaStore.Audio.Playlists.Members.PLAY_ORDER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2674/buggy-version/app.src.main.java.co.arcs.groove.basking.ui.LibraryFragment.java", "BodyUseAPI": ["Playlists.Members.getContentUri(java.lang.String,long)"], "Fixed commit": "a2db230dc0ae6cbc3b35f134828aadcdf4d6dac5", "Url": "https://api.github.com/repos/danhawkes/basking-android", "Date": "2014-06-16T23:54:15Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.oStream) != null) { this.oStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7269/buggy-version/fileformat.src.main.java.org.zuinnote.hadoop.office.format.common.writer.MSExcelWriter.java", "BodyUseAPI": [], "Fixed commit": "9490e3047c6556e8abd5aacb00ec867af1236cf4", "Url": "https://api.github.com/repos/ZuInnoTe/hadoopoffice", "Date": "2017-03-18T20:59:01Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.oStream) != null) { this.oStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7269/buggy-version/fileformat.src.main.java.org.zuinnote.hadoop.office.format.common.writer.MSExcelWriter.java", "BodyUseAPI": [], "Fixed commit": "9490e3047c6556e8abd5aacb00ec867af1236cf4", "Url": "https://api.github.com/repos/ZuInnoTe/hadoopoffice", "Date": "2017-03-18T20:59:01Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.oStream) != null) { this.oStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7269/buggy-version/fileformat.src.main.java.org.zuinnote.hadoop.office.format.common.writer.MSExcelWriter.java", "BodyUseAPI": [], "Fixed commit": "9490e3047c6556e8abd5aacb00ec867af1236cf4", "Url": "https://api.github.com/repos/ZuInnoTe/hadoopoffice", "Date": "2017-03-18T20:59:01Z"},
{"Line": "=>311", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.encryptAlgorithmCipher) == null) { org.zuinnote.hadoop.office.format.common.writer.MSExcelWriter.LOG.error(\"No encryption algorithm specified\"); }else if ((this.hashAlgorithmCipher) == null) { org.zuinnote.hadoop.office.format.common.writer.MSExcelWriter.LOG.error(\"No hash algorithm specified\"); }else if ((this.encryptionModeCipher) == null) { org.zuinnote.hadoop.office.format.common.writer.MSExcelWriter.LOG.error(\"No encryption mode specified\"); }else if ((this.chainModeCipher) == null) { org.zuinnote.hadoop.office.format.common.writer.MSExcelWriter.LOG.error(\"No chain mode specified\"); }else { try { org.apache.poi.poifs.crypt.EncryptionInfo info = new org.apache.poi.poifs.crypt.EncryptionInfo(this.encryptionModeCipher, this.encryptAlgorithmCipher, this.hashAlgorithmCipher, (-1), (-1), this.chainModeCipher); org.apache.poi.poifs.crypt.Encryptor enc = info.getEncryptor(); enc.confirmPassword(this.howc.getPassword()); java.io.OutputStream os = enc.getDataStream(ooxmlDocumentFileSystem); this.currentWorkbook.write(os); ooxmlDocumentFileSystem.writeFilesystem(this.oStream); } catch (java.io.IOException | java.security.GeneralSecurityException e) { org.zuinnote.hadoop.office.format.common.writer.MSExcelWriter.LOG.error(e); } finally { try { if ((this.oStream) != null) { this.oStream.close(); } } catch (java.io.IOException e) { org.zuinnote.hadoop.office.format.common.writer.MSExcelWriter.LOG.error(e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7269/buggy-version/fileformat.src.main.java.org.zuinnote.hadoop.office.format.common.writer.MSExcelWriter.java", "BodyUseAPI": [], "Fixed commit": "9490e3047c6556e8abd5aacb00ec867af1236cf4", "Url": "https://api.github.com/repos/ZuInnoTe/hadoopoffice", "Date": "2017-03-18T20:59:01Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.oStream) != null) { this.oStream.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7269/buggy-version/fileformat.src.main.java.org.zuinnote.hadoop.office.format.common.writer.MSExcelWriter.java", "BodyUseAPI": [], "Fixed commit": "9490e3047c6556e8abd5aacb00ec867af1236cf4", "Url": "https://api.github.com/repos/ZuInnoTe/hadoopoffice", "Date": "2017-03-18T20:59:01Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((vars.queryfx.StateLookup.injector) == null) { synchronized(vars.queryfx.StateLookup.lockObject) { vars.queryfx.StateLookup.injector = com.google.inject.Guice.createInjector(new vars.queryfx.QueryModule()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3487/buggy-version/vars-queryfx.src.main.java.vars.queryfx.StateLookup.java", "BodyUseAPI": [], "Fixed commit": "b17412e3fad2c701e7221ffaab1e1efa7c52edec", "Url": "https://api.github.com/repos/hohonuuli/vars", "Date": "2016-10-17T22:19:06Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ptvMunicipality == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3052/buggy-version/src.main.java.fi.otavanopisto.kuntaapi.server.integrations.ptv.PtvTranslator.java", "BodyUseAPI": [], "Fixed commit": "947bddde6321d322f0f69eb90227ec3569de50b1", "Url": "https://api.github.com/repos/Metatavu/kunta-api-server", "Date": "2017-04-16T08:43:28Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ip_addr != null) { java.lang.String[] a = ip_addr.split(\"\\\\.\"); return ((((java.lang.Integer.parseInt(a[0])) * 16777216) + ((java.lang.Integer.parseInt(a[1])) * 65536)) + ((java.lang.Integer.parseInt(a[2])) * 256)) + (java.lang.Integer.parseInt(a[3])); }else { throw new java.lang.Exception(\"IP address can not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2283/buggy-version/src.io.evercam.network.ipscan.IpTranslator.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "4d55bc942f12c064c572e0bf2829b0027a56c2bf", "Url": "https://api.github.com/repos/evercam/networkscan.java", "Date": "2014-05-06T09:39:48Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (FeedbackParticipantType.OWN_TEAM_MEMBERS)) { name = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6800/buggy-version/src.main.java.teammates.common.datatransfer.FeedbackSessionResultsBundle.java", "BodyUseAPI": [], "Fixed commit": "88eabace97b0ebf2a37d63773930db5544a8977b", "Url": "https://api.github.com/repos/TEAMMATES/repo", "Date": "2014-06-16T07:39:13Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (FeedbackParticipantType.OWN_TEAM_MEMBERS)) { name = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6800/buggy-version/src.main.java.teammates.common.datatransfer.FeedbackSessionResultsBundle.java", "BodyUseAPI": [], "Fixed commit": "88eabace97b0ebf2a37d63773930db5544a8977b", "Url": "https://api.github.com/repos/TEAMMATES/repo", "Date": "2014-06-16T07:39:13Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((whenGamePaused) != 0) { timeGamePaused += (java.lang.System.currentTimeMillis()) - (whenGamePaused); whenGamePaused = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4399/buggy-version/src.com.sam.hex.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "5b1f8d6eb0858f0354da99e50ecc691357d060fe", "Url": "https://api.github.com/repos/Xlythe/HexGame_Android", "Date": "2013-06-03T21:58:13Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((proxyConfiguration.host) != null) && ((proxyConfiguration.port) != 0)) client.setProxyConfiguration(proxyConfiguration.host, proxyConfiguration.port, proxyConfiguration.username, proxyConfiguration.password);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/424/buggy-version/src.main.java.org.jfrog.hudson.ArtifactoryServer.java", "BodyUseAPI": ["org.jfrog.build.client.ArtifactoryBuildInfoClient.setProxyConfiguration(proxyConfiguration.host,proxyConfiguration.port,proxyConfiguration.username,proxyConfiguration.password)"], "Fixed commit": "bd31c34999c16458402b5d775d69be7442f7acfb", "Url": "https://api.github.com/repos/hudson3-plugins/artifactory-plugin", "Date": "2012-09-24T12:43:02Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((proxyConfiguration.host) != null) && ((proxyConfiguration.port) != 0)) client.setProxyConfiguration(proxyConfiguration.host, proxyConfiguration.port, proxyConfiguration.username, proxyConfiguration.password);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/424/buggy-version/src.main.java.org.jfrog.hudson.ArtifactoryServer.java", "BodyUseAPI": ["org.jfrog.build.client.ArtifactoryDependenciesClient.setProxyConfiguration(proxyConfiguration.host,proxyConfiguration.port,proxyConfiguration.username,proxyConfiguration.password)"], "Fixed commit": "bd31c34999c16458402b5d775d69be7442f7acfb", "Url": "https://api.github.com/repos/hudson3-plugins/artifactory-plugin", "Date": "2012-09-24T12:43:02Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gainControl) != null) { gainControl.setValue(dB); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6738/buggy-version/src.engine.sound.Sound.java", "BodyUseAPI": [], "Fixed commit": "4868712072d974adcd9f3d1853e837b5fecc5a04", "Url": "https://api.github.com/repos/iebaker/game-final-project", "Date": "2013-11-15T04:50:16Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dateFormat != null) && (!(dateFormat.toPattern().contains(\"yyyy\")))) yearModifier = java.util.Calendar.getInstance();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8828/buggy-version/araqne-log-api.src.main.java.org.araqne.log.api.MultilineLogExtractor.java", "BodyUseAPI": [], "Fixed commit": "78b94ab9f53f9dfc021b6d53c7fac4f58704be0f", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2013-08-29T06:09:17Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((yearModifier) != null) { int year = java.util.Calendar.getInstance().get(java.util.Calendar.YEAR); yearModifier.setTime(d); yearModifier.set(java.util.Calendar.YEAR, year); d = yearModifier.getTime(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8828/buggy-version/araqne-log-api.src.main.java.org.araqne.log.api.MultilineLogExtractor.java", "BodyUseAPI": [], "Fixed commit": "78b94ab9f53f9dfc021b6d53c7fac4f58704be0f", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2013-08-29T06:09:17Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.SimpleDateFormat.parse(java.lang.String,java.text.ParsePosition)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (d == null) return new java.util.Date();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8828/buggy-version/araqne-log-api.src.main.java.org.araqne.log.api.MultilineLogExtractor.java", "BodyUseAPI": [], "Fixed commit": "78b94ab9f53f9dfc021b6d53c7fac4f58704be0f", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2013-08-29T06:09:17Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (currentDaasUser == null) { log.error(\"User is not Logged in\"); throw new com.bbytes.daas.rest.BaasPersistentException(\"User is not Logged in\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1125/buggy-version/daas-rest-server.src.main.java.com.bbytes.daas.rest.dao.DocumentDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "d9ac7b5cf2715aaa2a38832093fa32ac0e85bb2a", "Url": "https://api.github.com/repos/bbytes/DAAS", "Date": "2013-08-22T13:12:28Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (config.useSudo()) { com.netflix.priam.defaultimpl.CassandraProcessManager.logger.info(\"Configured to use sudo to stop C*\"); if (!(\"root\".equals(java.lang.System.getProperty(\"user.name\")))) { command.add(com.netflix.priam.defaultimpl.CassandraProcessManager.SUDO_STRING); command.add(\"-n\"); command.add(\"-E\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6861/buggy-version/priam.src.main.java.com.netflix.priam.defaultimpl.CassandraProcessManager.java", "BodyUseAPI": [], "Fixed commit": "a4f4af951f9fe956e860e4b25d3ee3dd6fd33c1c", "Url": "https://api.github.com/repos/vinaykumarchella/Priam", "Date": "2017-08-23T22:09:44Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, sx.blah.discord.handle.obj.IUser>.get(packet.getSsrc())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (userSpeaking != null) { byte[] decodedAudio = sx.blah.discord.api.internal.OpusUtil.decodeToPCM(packet.getEncodedAudio(), 2, userSpeaking); client.getDispatcher().dispatch(new sx.blah.discord.handle.impl.events.AudioReceiveEvent(userSpeaking, decodedAudio)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5954/buggy-version/src.main.java.sx.blah.discord.api.internal.DiscordVoiceWS.java", "BodyUseAPI": ["sx.blah.discord.api.internal.OpusUtil.decodeToPCM(packet.getEncodedAudio(),int,sx.blah.discord.handle.obj.IUser)", "client.getDispatcher().dispatch(sx.blah.discord.handle.impl.events.AudioReceiveEvent)"], "Fixed commit": "ff432ef7d32f6f9c4e9d4fb64a41e3882be9842c", "Url": "https://api.github.com/repos/Discord4J/Discord4J", "Date": "2016-07-19T07:11:20Z"},
{"Line": "=>406", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.piusvelte.mast.MainActivity.getSupportActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (actionBar != null) { boolean isSubFolder = !(isPagerAtRoot()); actionBar.setDisplayHomeAsUpEnabled(isSubFolder); actionBar.setHomeButtonEnabled(isSubFolder); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/737/buggy-version/src.com.piusvelte.mast.MainActivity.java", "BodyUseAPI": ["android.support.v7.app.ActionBar.setDisplayHomeAsUpEnabled(boolean)", "android.support.v7.app.ActionBar.setHomeButtonEnabled(boolean)"], "Fixed commit": "f9559fa1279995c68b41a707766839cfe50327bb", "Url": "https://api.github.com/repos/piusvelte/Mast", "Date": "2015-01-11T15:10:07Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nucleus.vecmath.Vector2D.length(float,float)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (length == 0) { vector[X] = x; vector[Y] = y; vector[com.nucleus.vecmath.Vector2D.MAGNITUDE] = 0; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5775/buggy-version/src.main.java.com.nucleus.vecmath.Vector2D.java", "BodyUseAPI": [], "Fixed commit": "4f9a5bce9c140e8def0b8d5b2c81ee8acd859c67", "Url": "https://api.github.com/repos/rsahlin/vecmath", "Date": "2015-11-26T07:45:19Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displaySymbol) == null) { return code; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/542/buggy-version/app.src.main.java.org.mifos.mobilebanking.models.Currency.java", "BodyUseAPI": [], "Fixed commit": "712a2465f1acc0909dde9fffeab28eec3d4cb90e", "Url": "https://api.github.com/repos/luckyman20/self-service-app", "Date": "2017-12-08T06:07:29Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getAuctioneer().getProductBeingSold().getQuantityAvailable()) == 0) { getAuctioneer().setAucState(AucioneerState.NEXT_ITEM); }else if (getAuctioneer().reduceCurrentProductPrice()) { getAuctioneer().setAucState(AucioneerState.START_CN); }else { getAuctioneer().setAucState(AucioneerState.NEXT_ITEM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/156/buggy-version/src.agents.AuctioneerBehaviour.java", "BodyUseAPI": [], "Fixed commit": "8bbc6e228f89523c4542024d940fbec4fe506a9e", "Url": "https://api.github.com/repos/ricardojmf/TNEL_DutchAuction", "Date": "2016-05-31T21:00:39Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (download) { pb = new java.lang.ProcessBuilder(nbc, \"-d\", filepath); }else { pb = new java.lang.ProcessBuilder(nbc, filepath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4900/buggy-version/jbrick.src.com.jbricx.communication.NXTAccess.java", "BodyUseAPI": [], "Fixed commit": "0399f0c6412fc569ed2d40f1cada4fc0837f153d", "Url": "https://api.github.com/repos/RITAccess/JBrick", "Date": "2014-06-23T18:21:18Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args[i].toLowerCase().equals(\"-autorefresh\")) { setAutoRefreshTime(1); }else { java.lang.System.out.println(\"Arguments -autorefresh must be followed by a colon (:) and the refreshTime value.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3411/buggy-version/ServiceWatcher.src.main.java.com.cons.CommandLineArgs.java", "BodyUseAPI": [], "Fixed commit": "31f51aaf4c65e602f4c6e2c7462797e042a076fd", "Url": "https://api.github.com/repos/gtrianta1965/ServiceWatcher", "Date": "2017-07-27T13:06:02Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(socket instanceof javax.net.ssl.SSLSocket)) socket.shutdownInput();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5143/buggy-version/server.src.main.java.com.orientechnologies.orient.server.OClientConnectionManager.java", "BodyUseAPI": ["java.net.Socket.shutdownInput()"], "Fixed commit": "9e345baf05243a14ad48998431936a026d338821", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-10-11T19:22:48Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(socket instanceof javax.net.ssl.SSLSocket)) socket.shutdownInput();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5143/buggy-version/server.src.main.java.com.orientechnologies.orient.server.OClientConnectionManager.java", "BodyUseAPI": ["java.net.Socket.shutdownInput()"], "Fixed commit": "9e345baf05243a14ad48998431936a026d338821", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-10-11T19:22:48Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pauldavdesign.mineauz.minigames.PlayerData.getMinigamePlayer(event.getPlayer())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ply == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1486/buggy-version/src.com.pauldavdesign.mineauz.minigames.Events.java", "BodyUseAPI": [], "Fixed commit": "5b0d4f1fecbf9ec11121b2ef073769de03129c3e", "Url": "https://api.github.com/repos/Razz0991/Minigames", "Date": "2014-02-04T14:46:20Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jajimenez.workpage.logic.ApplicationLogic.getApplicationFirstExecution()) { jajimenez.workpage.logic.ApplicationLogic.setApplicationFirstExecution(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3296/buggy-version/workpage.src.jajimenez.workpage.TaskActivity.java", "BodyUseAPI": [], "Fixed commit": "6930aa746bacd6e961f61ee7e67629e5c8d58a90", "Url": "https://api.github.com/repos/jajimenez/workpage", "Date": "2015-12-21T03:00:20Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSolid(b)) { return b; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5907/buggy-version/src.me.libraryaddict.Hungergames.Managers.GenerationManager.java", "BodyUseAPI": [], "Fixed commit": "7c8d2e672d59eb15b4718ac45a8126375371083f", "Url": "https://api.github.com/repos/libraryaddict/LibsHungergames", "Date": "2014-01-09T20:10:18Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((patient != null) && (cdaProfileType != null)) { org.openhealthtools.mdht.uml.cda.ClinicalDocument cdaDocument = CDAFactory.eINSTANCE.createClinicalDocument(); if (cdaProfileType.getTemplateid().equals(\"1.3.6.1.4.1.19376.1.5.3.1.1.16.1.1\")) { org.openmrs.module.CDAGenerator.CDAHandlers.APHPHandler aphphandler = new org.openmrs.module.CDAGenerator.CDAHandlers.APHPHandler(); cdaDocument = aphphandler.buildAPHPMessage(patient, cdaProfileType); }else if (cdaProfileType.getTemplateid().equals(\"1.3.6.1.4.19376.1.5.3.1.1.11.2\")) { org.openmrs.module.CDAGenerator.CDAHandlers.APSHandler apshandler = new org.openmrs.module.CDAGenerator.CDAHandlers.APSHandler(); cdaDocument = apshandler.buildAPSMessage(patient, cdaProfileType); } return cdaDocument; }else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3568/buggy-version/api.src.main.java.org.openmrs.module.CDAGenerator.api.impl.CDAGeneratorServiceImpl.java", "BodyUseAPI": ["org.openmrs.module.CDAGenerator.CDAHandlers.APHPHandler.buildAPHPMessage(org.openmrs.Patient,org.openmrs.module.CDAGenerator.CDAHandlers.BaseCdaTypeHandler)", "cdaProfileType.getTemplateid().equals(java.lang.String)", "org.openmrs.module.CDAGenerator.CDAHandlers.APSHandler.buildAPSMessage(org.openmrs.Patient,org.openmrs.module.CDAGenerator.CDAHandlers.BaseCdaTypeHandler)", "org.openmrs.module.CDAGenerator.CDAHandlers.BaseCdaTypeHandler.getTemplateid()", "cdaProfileType.getTemplateid().equals(java.lang.String)", "org.openmrs.module.CDAGenerator.CDAHandlers.BaseCdaTypeHandler.getTemplateid()"], "Fixed commit": "c99902d0b75f58b3ec229f326ba0c4cbdc44e7b8", "Url": "https://api.github.com/repos/openmrs/openmrs-module-cdagenerator", "Date": "2014-08-05T01:54:28Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.entityPlayer.inventory.armorItemInSlot(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (itemStack != null) cache[i] = itemStack.copy();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2437/buggy-version/src.main.java.dmillerw.armor.client.handler.PlayerRenderHandler.java", "BodyUseAPI": ["net.minecraft.item.ItemStack.copy()"], "Fixed commit": "3a146bb7b50443765fb0d9db73a1b8f348a7c5cc", "Url": "https://api.github.com/repos/dmillerw/CosmeticArmor", "Date": "2014-11-26T20:17:35Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild<?, ?>.getExecutor()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (exec == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/872/buggy-version/src.main.java.org.jenkins_ci.plugins.run_condition.core.NodeCondition.java", "BodyUseAPI": [], "Fixed commit": "a4bdc3aa64d6a23bfe21a6268fc89346d235913d", "Url": "https://api.github.com/repos/jenkinsci/run-condition-plugin", "Date": "2017-05-02T08:55:12Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (j == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/872/buggy-version/src.main.java.org.jenkins_ci.plugins.run_condition.core.NodeCondition.java", "BodyUseAPI": [], "Fixed commit": "a4bdc3aa64d6a23bfe21a6268fc89346d235913d", "Url": "https://api.github.com/repos/jenkinsci/run-condition-plugin", "Date": "2017-05-02T08:55:12Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild<?, ?>.getWorkspace()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ws == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/872/buggy-version/src.main.java.org.jenkins_ci.plugins.run_condition.contributed.CommandInterperterCondition.java", "BodyUseAPI": [], "Fixed commit": "a4bdc3aa64d6a23bfe21a6268fc89346d235913d", "Url": "https://api.github.com/repos/jenkinsci/run-condition-plugin", "Date": "2017-05-02T08:55:12Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getAttribute(\"QuestionId\")) != null) { com.silverpeas.questionReply.model.Question question = scc.getQuestion(java.lang.Long.parseLong(((java.lang.String) (request.getAttribute(\"QuestionId\"))))); java.lang.String categoryId = question.getCategoryId(); if (!(com.silverpeas.util.StringUtil.isDefined(categoryId))) { categoryId = \"null\"; } destination = ((\"/questionReply/jsp/listQuestionsDHTML.jsp?categoryId=\" + categoryId) + \"&questionId=\") + (question.getPK().getId()); }else { destination = \"/questionReply/jsp/listQuestionsDHTML.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3607/buggy-version/question-reply.question-reply-war.src.main.java.com.silverpeas.questionReply.servlets.QuestionReplyRequestRouter.java", "BodyUseAPI": ["java.lang.Long.parseLong(((java.lang.String) (request.getAttribute(\"QuestionId\"))))", "javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)", "com.silverpeas.questionReply.control.QuestionReplySessionController.getQuestion(long)"], "Fixed commit": "062b2395ec77dfe83bdd9d02d6036ac409119594", "Url": "https://api.github.com/repos/ndup0nt/Silverpeas-Components", "Date": "2012-02-14T15:22:27Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTablet())) { if ((drawerLayout) != null) { drawerLayout.closeDrawer(GravityCompat.START); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7334/buggy-version/app.src.main.java.org.fs.qm.views.MainActivityView.java", "BodyUseAPI": [], "Fixed commit": "0890a9a2a158b804076b58681ebfe761237d6841", "Url": "https://api.github.com/repos/droideveloper/QMAndroid", "Date": "2016-06-15T14:45:35Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isTablet())) { if ((drawerLayout) != null) { drawerLayout.openDrawer(GravityCompat.END); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7334/buggy-version/app.src.main.java.org.fs.qm.views.MainActivityView.java", "BodyUseAPI": [], "Fixed commit": "0890a9a2a158b804076b58681ebfe761237d6841", "Url": "https://api.github.com/repos/droideveloper/QMAndroid", "Date": "2016-06-15T14:45:35Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v == (btnSend)) { if (etContent.getText().toString().equals(\"\")) { android.util.Log.e(\"IP \uff06 PORT\", \"null\"); ShowToast(\"\u53d1\u9001\u6d88\u606f\u4e0d\u80fd\u4e3a\u7a7a!\"); }else { sendMessage(\"talk\", ((((getIPAddress()) + \":\") + (etContent.getText())) + \"\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2986/buggy-version/app.src.main.java.me.lancer.airfree.activity.TalkActivity.java", "BodyUseAPI": [], "Fixed commit": "cea4eb62c9a720de161e94be5172d7a31d3af819", "Url": "https://api.github.com/repos/1anc3r/AirFree-Client", "Date": "2016-07-22T10:09:49Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (command.contains(\"talk\")) { android.os.Message msg = new android.os.Message(); msg.what = 1; msg.obj = paramet; mHandler.sendMessage(msg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2986/buggy-version/app.src.main.java.me.lancer.airfree.activity.TalkActivity.java", "BodyUseAPI": [], "Fixed commit": "cea4eb62c9a720de161e94be5172d7a31d3af819", "Url": "https://api.github.com/repos/1anc3r/AirFree-Client", "Date": "2016-07-22T10:09:49Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gavel.impl.common.Enums.lookup(java.lang.Class<T>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (constant != null) return constant;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4655/buggy-version/src.main.java.gavel.impl.common.Enums.java", "BodyUseAPI": [], "Fixed commit": "556e4775b07d6f18bf97b15837774d691c9fc6ed", "Url": "https://api.github.com/repos/gavelproject/gavel", "Date": "2017-10-31T00:20:58Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((map.get((y + 1)).get(x)) == (Box.DOOR)) { ++y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6182/buggy-version/src.model.game.Level.java", "BodyUseAPI": [], "Fixed commit": "20166b5744981548c83c5995ee39d350a79c988a", "Url": "https://api.github.com/repos/Alexis-D/Block-Dutz", "Date": "2011-04-13T14:50:44Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["be.ugent.zeus.hydra.data.sync.minerva.helpers.CalendarSync.getAllIdsFromDeviceCalendar(android.accounts.Account,be.ugent.zeus.hydra.data.sync.minerva.helpers.ContentResolver)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(allDeviceIds.isEmpty())) { android.util.Log.w(be.ugent.zeus.hydra.data.sync.minerva.helpers.CalendarSync.TAG, ((\"Manually removing \" + (allDeviceIds.size())) + \" device calendar events. This is not normal!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1933/buggy-version/app.src.main.java.be.ugent.zeus.hydra.data.sync.minerva.helpers.CalendarSync.java", "BodyUseAPI": ["android.util.Log.w(java.lang.String,java.lang.String)", "java.util.Set<java.lang.Long>.size()"], "Fixed commit": "33de2e04d95a44a7e5e142ae0e26fe0c1f6b1101", "Url": "https://api.github.com/repos/ZeusWPI/hydra-android", "Date": "2017-12-06T21:48:27Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ei.getChannel()) == null) { onAdd(ei); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4162/buggy-version/src.gash.router.server.edges.EdgeMonitor.java", "BodyUseAPI": ["gash.router.server.edges.EdgeMonitor.onAdd(gash.router.server.edges.EdgeInfo)"], "Fixed commit": "2e101ca241e963239949c0cb2e4e7e8c3ad462c3", "Url": "https://api.github.com/repos/shafi-dayatar/sturdy-happiness", "Date": "2017-03-20T22:47:38Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getPortType()) != null) { commandInterpreter.println((\"PortType: \" + (e.getPortType().toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5238/buggy-version/org.opentosca.core.internal.endpoint.service.impl.src.org.opentosca.core.internal.endpoint.service.impl.CoreInternalEndpointServiceImpl.java", "BodyUseAPI": ["e.getPortType().toString()", "org.eclipse.osgi.framework.console.CommandInterpreter.println((\"PortType: \" + (e.getPortType().toString())))", "org.opentosca.core.model.endpoint.wsdl.WSDLEndpoint.getPortType()"], "Fixed commit": "8c2effd96f235029ab5e5b8ea849c6e23c38b8e5", "Url": "https://api.github.com/repos/OpenTOSCA/container", "Date": "2015-08-10T11:24:15Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (allele != (allele.ZERO)) { variantAlleles.add(allele); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7162/buggy-version/molgenis-genotype-reader.src.main.java.org.molgenis.genotype.variant.ReadOnlyGeneticVariantTriTyper.java", "BodyUseAPI": ["java.util.HashSet<org.molgenis.genotype.Allele>.add(org.molgenis.genotype.Allele)"], "Fixed commit": "c721144e8845f9cc7495fd7808400771a44c88be", "Url": "https://api.github.com/repos/PatrickDeelen/systemsgenetics", "Date": "2013-09-02T20:41:07Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (update) { agent.endEpisode(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6700/buggy-version/src.main.java.ch.idsia.benchmark.tasks.BasicTask.java", "BodyUseAPI": [], "Fixed commit": "d2b4483856af29705dd7db44b74c2433370c9709", "Url": "https://api.github.com/repos/moshiky/mario_experiment", "Date": "2017-08-18T11:53:25Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.ViewGroup.findViewById(R.id.spinner)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((spinner.getSelectedItemPosition()) != (-1)) { java.lang.String key = ((de.geeksfactory.opacclient.searchfields.DropdownSearchField) (field)).getDropdownValues().get(spinner.getSelectedItemPosition()).get(\"key\"); if (!(key.equals(\"\"))) query.add(new de.geeksfactory.opacclient.searchfields.SearchQuery(field, key)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2107/buggy-version/src.de.geeksfactory.opacclient.frontend.SearchFragment.java", "BodyUseAPI": ["org.holoeverywhere.widget.Spinner.getSelectedItemPosition()", "((de.geeksfactory.opacclient.searchfields.DropdownSearchField) (field)).getDropdownValues().get(spinner.getSelectedItemPosition()).get(java.lang.String)", "((de.geeksfactory.opacclient.searchfields.DropdownSearchField) (field)).getDropdownValues().get(spinner.getSelectedItemPosition())"], "Fixed commit": "7c880f61450d514a94eb829d7f2368a08c41f222", "Url": "https://api.github.com/repos/johan12345/opacclient", "Date": "2014-10-12T11:26:01Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.nyancraft.reportrts.ReportRTS.getPlugin().useMySQL) { if (rs.isBeforeFirst()) rs.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6131/buggy-version/src.com.nyancraft.reportrts.command.CheckCommand.java", "BodyUseAPI": [], "Fixed commit": "881cb5d748158a23b92ee6863dac5d1075e0c1bd", "Url": "https://api.github.com/repos/ProjectInfinity/ReportRTS", "Date": "2012-03-12T20:58:39Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (osName.startsWith(\"win\")) { data.width = 100; data.height = 20; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8917/buggy-version/xstampp.src.xstampp.usermanagement.ui.contribution.UserContribution.java", "BodyUseAPI": [], "Fixed commit": "5ad65729c5559f39b7ada062acc5067bd6413dbb", "Url": "https://api.github.com/repos/SE-Stuttgart/XSTAMPP", "Date": "2017-11-22T09:04:32Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((journalName == null) || ((journalName.length()) == 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4692/buggy-version/dspace.modules.journal-landing.journal-landing-webapp.src.main.java.org.dspace.app.xmlui.aspect.journal.landing.JournalSearch.java", "BodyUseAPI": [], "Fixed commit": "b29c1289389d2f81149fedb66870a2478c5f3cc9", "Url": "https://api.github.com/repos/datadryad/dryad-repo", "Date": "2015-02-10T23:41:00Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentView) == 0) { fileButton.setEnabled(false); }else { fileButton.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7503/buggy-version/src.gui.Gui.java", "BodyUseAPI": [], "Fixed commit": "eac1747e3c7893dee90d5cf8a0843c4f1e7c7375", "Url": "https://api.github.com/repos/wouwouwou/project_module_3", "Date": "2015-04-13T10:24:02Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (code == (org.java_websocket.framing.CloseFrame.PROTOCOL_ERROR)) { flushAndClose(code, message, remote); }else { flushAndClose(CloseFrame.NEVER_CONNECTED, message, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7788/buggy-version/src.main.java.org.java_websocket.WebSocketImpl.java", "BodyUseAPI": ["org.java_websocket.WebSocketImpl.flushAndClose(int,java.lang.String,boolean)"], "Fixed commit": "f1eeff4c3b677a503d04d260475b9725445a82d6", "Url": "https://api.github.com/repos/marci4/Java-WebSocket-Dev", "Date": "2017-10-04T21:46:20Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(config.hasPath(org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL))) { throw new org.apache.drill.exec.exception.DrillbitStartupException(java.lang.String.format(\"BOOT option '%s' is missing in config.\", org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5504/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.rpc.user.security.UserAuthenticatorFactory.java", "BodyUseAPI": [], "Fixed commit": "aa6993936fcdc634b0b76910a52301f879693b79", "Url": "https://api.github.com/repos/sohami/drill", "Date": "2017-02-28T07:28:14Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFinishing()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1503/buggy-version/reader-android.src.com.sismics.reader.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1564676d3b33630a38083e2a0019588a63af0fce", "Url": "https://api.github.com/repos/sismics/reader", "Date": "2013-10-21T19:40:15Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((viewPager) != null) { data.putExtra(\"position\", viewPager.getCurrentItem()); sharedAdapterHelper.removeAdapter(viewPager.getAdapter(), articlesHelperListener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1503/buggy-version/reader-android.src.com.sismics.reader.activity.ArticleActivity.java", "BodyUseAPI": [], "Fixed commit": "1564676d3b33630a38083e2a0019588a63af0fce", "Url": "https://api.github.com/repos/sismics/reader", "Date": "2013-10-21T19:40:15Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getCanvas().getOffsetWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (depthRangeStart != width) { context.drawImage(source, depthRangeStart, 0, (width - depthRangeStart), height, depthRangeStart, 0, (width - depthRangeStart), (height / scaling)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4058/buggy-version/addon.src.main.java.org.vaadin.sonarwidget.widgetset.client.ui.ImageRenderer.java", "BodyUseAPI": ["com.google.gwt.canvas.dom.client.Context2d.drawImage(com.google.gwt.dom.client.ImageElement,int,int,int,int,int,int,int,float)"], "Fixed commit": "5ad664f5b62ccdfd1435a8712349eebb54911b16", "Url": "https://api.github.com/repos/capeisti/SonarWidget", "Date": "2015-04-02T10:50:47Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (patient == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6017/buggy-version/similarity-genotype-view.src.main.java.org.phenotips.data.similarity.genotype.DefaultPatientGenotypeManager.java", "BodyUseAPI": [], "Fixed commit": "82312196f4900b339dfcdb154c2d0a9702bc8a16", "Url": "https://api.github.com/repos/phenotips/patient-network", "Date": "2017-12-07T16:56:37Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.genotype) != null) { json.put(\"genesStatus\", this.genotype.getGenesStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6017/buggy-version/matching-notification-api.src.main.java.org.phenotips.matchingnotification.match.internal.DefaultPatientInMatch.java", "BodyUseAPI": [], "Fixed commit": "82312196f4900b339dfcdb154c2d0a9702bc8a16", "Url": "https://api.github.com/repos/phenotips/patient-network", "Date": "2017-12-07T16:56:37Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Random.nextDouble()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (probability < (epsilon)) { enemy = randomUnit(enemies); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6335/buggy-version/Assignment5.QLearningAgent.java", "BodyUseAPI": [], "Fixed commit": "69a7b12296ca85b389fd4e305124b13887e823de", "Url": "https://api.github.com/repos/madapesjosh/AIHW5", "Date": "2013-05-01T00:06:03Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expr.data) instanceof jkonoha.compiler.KFloat) { jkonoha.compiler.KFloat i = ((jkonoha.compiler.KFloat) (expr.data)); loadConst(i.unbox()); typeStack.push(Type.DOUBLE_TYPE); }else if ((expr.data) instanceof jkonoha.compiler.KString) { jkonoha.compiler.KString s = ((jkonoha.compiler.KString) (expr.data)); loadConst(s.unbox()); typeStack.push(jkonoha.compiler.Type.getType(java.lang.String.class)); }else { throw new jkonoha.compiler.CodeGenException(\"err const\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3324/buggy-version/src.jkonoha.compiler.Compiler.java", "BodyUseAPI": [], "Fixed commit": "2214d6b6daa21316f6a6480e64d1cac563b9277f", "Url": "https://api.github.com/repos/wakama2/jkonoha", "Date": "2012-07-01T05:40:46Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (itemAdjustment.isAppliedToSalePrice()) { saleAdjustmentValue = itemAdjustment.getValue(); retailAdjustmentValue = itemAdjustment.getRetailPriceValue(); }else { retailAdjustmentValue = itemAdjustment.getValue(); saleAdjustmentValue = itemAdjustment.getSalesPriceValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3906/buggy-version/core.broadleaf-framework.src.main.java.org.broadleafcommerce.core.offer.service.discount.domain.PromotableOrderItemPriceDetailAdjustmentImpl.java", "BodyUseAPI": [], "Fixed commit": "a123490bf8739e5f97e6b93fb3b641c528bccb6a", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-09-06T20:50:42Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.equals(photo.pubDate, currentToken)) { scheduleUpdate(((java.lang.System.currentTimeMillis()) + ((30 * 60) * 1000))); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8011/buggy-version/muzei-nationalgeographic.src.java.de.msal.muzei.nationalgeographic.NationalGeographicArtSource.java", "BodyUseAPI": [], "Fixed commit": "26b8ef67698c209edd9b91c0f8df536b0e323db5", "Url": "https://api.github.com/repos/msal/muzei-nationalgeographic", "Date": "2014-02-21T06:37:07Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action.equals(\"draw\")) { model.draw(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2523/buggy-version/src.host.control.gameHandle.HostHandler.java", "BodyUseAPI": [], "Fixed commit": "2e424fe87dedf929dd7c57f4d77b01767cf85aa3", "Url": "https://api.github.com/repos/quintenpalmer/postprompt", "Date": "2012-09-28T23:17:18Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (directional) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7744/buggy-version/src.org.nschmidt.ldparteditor.data.VM21Merger.java", "BodyUseAPI": [], "Fixed commit": "793b3a4d7fdcba9b6f59a46e2fcb3a3aab5754ac", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-02-12T21:48:20Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (directional) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7744/buggy-version/src.org.nschmidt.ldparteditor.data.VM21Merger.java", "BodyUseAPI": [], "Fixed commit": "793b3a4d7fdcba9b6f59a46e2fcb3a3aab5754ac", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2017-02-12T21:48:20Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (system.pseudoCells.containsKey(message.dest)) { consumerPseudo.accept(message.copy()); return; }else if ((system.clientMode) && (!(system.cells.containsKey(message.dest)))) { system.executerService.client(message.copy(), alias); return; }else if (system.resourceCells.containsKey(message.dest)) { system.executerService.resource(message.copy()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/5202/buggy-version/actor4j-core.src.main.java.actor4j.core.DefaultActorMessageDispatcher.java", "BodyUseAPI": ["system.executerService.client(message.copy(),java.lang.String)", "actor4j.core.messages.ActorMessage<?>.copy()", "actor4j.core.messages.ActorMessage<?>.copy()", "actor4j.function.Consumer<actor4j.core.messages.ActorMessage<?>>.accept(message.copy())", "system.cells.containsKey(message.dest)", "system.executerService.resource(message.copy())", "actor4j.core.messages.ActorMessage<?>.copy()", "system.resourceCells.containsKey(message.dest)"], "Fixed commit": "98c8148f3d6a4d10e6253079e31ef807e20cf444", "Url": "https://api.github.com/repos/relvaner/actor4j-core", "Date": "2016-02-21T14:47:05Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["views.html.Account.emailJobCreated.render(jobUrl, webUiJob.nicename).body()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(controllers.Account.sendEmail((\"Job started: \" + (webUiJob.nicename)), html, text, scriptForm.guestEmail, scriptForm.guestEmail))) flash(\"error\", \"Was unable to send the e-mail.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/172/buggy-version/app.controllers.Jobs.java", "BodyUseAPI": [], "Fixed commit": "dadda33dc4e258aaf8da823532862cd0c6bf90b2", "Url": "https://api.github.com/repos/daisy-consortium/pipeline-webui", "Date": "2012-07-16T14:01:53Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["reimb.getU_resolver().getU_id()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (r != 0) { stmt.setInt(6, r); }else { stmt.setNull(6, java.sql.Types.INTEGER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4463/buggy-version/ers.src.main.java.dao.ExpenseDaoImpl.java", "BodyUseAPI": ["java.sql.PreparedStatement.setInt(int,int)"], "Fixed commit": "3e0eb83a9d7bcc79b9e357696fbebc3aff2d90d5", "Url": "https://api.github.com/repos/seed-0317/ER_AWESOME", "Date": "2017-04-19T18:26:16Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t.length) == 2) { toAdd = t[1]; }else { toAdd = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7072/buggy-version/src.main.java.io.bdrc.lucene.sa.CmdParser.java", "BodyUseAPI": [], "Fixed commit": "9554f23e24f6361f686dcb3cd3d96898f4a5e3c7", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/lucene-sa", "Date": "2017-09-05T17:52:23Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((t.length) == 2) { toAdd = t[1]; }else { toAdd = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/7072/buggy-version/src.main.java.io.bdrc.lucene.sa.CmdParser.java", "BodyUseAPI": [], "Fixed commit": "9554f23e24f6361f686dcb3cd3d96898f4a5e3c7", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/lucene-sa", "Date": "2017-09-05T17:52:23Z"},
{"Line": "=>599", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.internal.formatter.CommentsPreparator.tokenStartingAt(node.getStartPosition())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (startIndex > 1) startTokeen.breakBefore();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6073/buggy-version/org.eclipse.jdt.core.formatter.org.eclipse.jdt.internal.formatter.CommentsPreparator.java", "BodyUseAPI": [], "Fixed commit": "669b3cc9d9250c7d63a530f2ee1182c6c8089982", "Url": "https://api.github.com/repos/eclipse/eclipse.jdt.core", "Date": "2015-08-02T20:10:30Z"},
{"Line": "=>364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((row >= 0) && (row < (Config.WORLD_ROWS))) { for (int j = 0; j < lastChar; j++) { world[row][j] = (rowInput.charAt(j)) == (Config.ALIVE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6294/buggy-version/GameOfLife.java", "BodyUseAPI": [], "Fixed commit": "0aa1abffc253716653c3bb499e5e807237539264", "Url": "https://api.github.com/repos/drscott173/taylor", "Date": "2017-03-15T23:02:48Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLabelField()) != null) { link.setParameter(\"labelField\", getLabelField()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/1817/buggy-version/bennu-renderers.src.main.java.pt.ist.fenixWebFramework.rendererExtensions.AutoCompleteInputRenderer.java", "BodyUseAPI": [], "Fixed commit": "d02c9294f0ffdf9d53b6653f102df569ff9a000a", "Url": "https://api.github.com/repos/jcarvalho/bennu-renderers", "Date": "2014-08-27T16:07:55Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isNPC) { fap_java.PauseScreen ps = new fap_java.PauseScreen(false, this); if ((adv) > 0) { ps.setAdvMode(true); } this.addObject(ps); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3030/buggy-version/src.fap_java.Game.java", "BodyUseAPI": [], "Fixed commit": "766b046cfffff56f590f45a8f4a52a86ec382187", "Url": "https://api.github.com/repos/FAPDomination/FAP_java", "Date": "2013-08-31T16:26:30Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((map_markers.size()) > 1) { map_markers.add(map_markers.get(0)); for (int i = 0; i < (map_markers.size()); i++) { java.lang.String lat = java.lang.Double.toString(map_markers.get(i).getPosition().getLatitude()); java.lang.String lng = java.lang.Double.toString(map_markers.get(i).getPosition().getLongitude()); java.lang.String alt = \"0.0\"; java.lang.String acu = \"0.0\"; temp_string = (((((((temp_string + lat) + \" \") + lng) + \" \") + alt) + \" \") + acu) + \";\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/4280/buggy-version/collect_app.src.main.java.org.odk.collect.android.activities.GeoShapeOsmMapActivity.java", "BodyUseAPI": ["java.util.ArrayList<org.osmdroid.bonuspack.overlays.Marker>.get(int)", "map_markers.get(i).getPosition()", "java.util.ArrayList<org.osmdroid.bonuspack.overlays.Marker>.get(int)", "map_markers.get(i).getPosition()", "java.util.ArrayList<org.osmdroid.bonuspack.overlays.Marker>.add(map_markers.get(0))", "map_markers.get(i).getPosition().getLatitude()", "java.util.ArrayList<org.osmdroid.bonuspack.overlays.Marker>.size()", "java.lang.Double.toString(map_markers.get(i).getPosition().getLatitude())", "java.lang.Double.toString(map_markers.get(i).getPosition().getLongitude())", "map_markers.get(i).getPosition().getLongitude()", "java.util.ArrayList<org.osmdroid.bonuspack.overlays.Marker>.get(int)"], "Fixed commit": "6f277d16df4c3c2d46f165b029fc108933962c8d", "Url": "https://api.github.com/repos/AguaClara/post.collect", "Date": "2016-05-14T02:06:12Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pt != (edu.nctu.lalala.enums.PreprocessingType.None)) { java.lang.System.out.println(p_alg.toString()); if ((((((fs_cfs && (p_alg == (edu.nctu.lalala.enums.Preprocessing_Algorithm.FS_CFS))) || (fs_consistency && (p_alg == (edu.nctu.lalala.enums.Preprocessing_Algorithm.FS_Consistency)))) || (ft_projection && (p_alg == (edu.nctu.lalala.enums.Preprocessing_Algorithm.FT_RandomProjection)))) || (ft_pca && (p_alg == (edu.nctu.lalala.enums.Preprocessing_Algorithm.FT_PCA)))) || (is_reservoir && (p_alg == (edu.nctu.lalala.enums.Preprocessing_Algorithm.IS_Reservoir)))) || (is_missclassified && (p_alg == (edu.nctu.lalala.enums.Preprocessing_Algorithm.IS_Misclassified)))) continue; weka.core.Instances filtered = null; filtered = applySelection(discretized, p_alg); java.lang.String processed_cachename = java.lang.String.format(\"%s_%s_%s\", datasetName, dis_alg.toString(), p_alg.toString()); edu.nctu.lalala.util.FVSHelper.getInstance().saveIntermediateInstances(filtered, processed_cachename); for (edu.nctu.lalala.enums.ClassifierType type : cts) { if (type == (edu.nctu.lalala.enums.ClassifierType.DecisionStump)) continue; edu.nctu.lalala.util.FVSHelper.getInstance().logFile((\"Classifier: \" + type)); weka.classifiers.Classifier f_cl = buildClassifier(filtered, type); weka.classifiers.Evaluation f_eval = new weka.classifiers.Evaluation(filtered); f_eval.crossValidateModel(f_cl, filtered, CROSS_VALIDATION, new weka.core.Debug.Random(1)); double[] result = getModelSize(f_cl); modelSize = (result[0]) / (originalModelSize.get(type)); rule = ((int) (result[1])); writeReport(edu.nctu.lalala.main.Main.REPORT_FOLDER, datasetName, filtered.classIndex(), f_eval, f_cl, modelSize, 0.0, p_alg, type, dis_alg, thr_alg, rule); } filtered.delete(); java.lang.System.gc(); if (p_alg == (edu.nctu.lalala.enums.Preprocessing_Algorithm.FS_CFS)) fs_cfs = true; else if (p_alg == (edu.nctu.lalala.enums.Preprocessing_Algorithm.FS_Consistency)) fs_consistency = true; else if (p_alg == (edu.nctu.lalala.enums.Preprocessing_Algorithm.FT_RandomProjection)) ft_projection = true; else if (p_alg == (edu.nctu.lalala.enums.Preprocessing_Algorithm.FT_PCA)) ft_pca = true; else if (p_alg == (edu.nctu.lalala.enums.Preprocessing_Algorithm.IS_Reservoir)) is_reservoir = true; else if (p_alg == (edu.nctu.lalala.enums.Preprocessing_Algorithm.IS_Misclassified)) is_missclassified = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3902/buggy-version/src.edu.nctu.lalala.main.Main.java", "BodyUseAPI": [], "Fixed commit": "7f54707a8edc2fdd3e8e106492bde51ab345d2a2", "Url": "https://api.github.com/repos/gunarto90/FVS", "Date": "2017-04-20T08:52:13Z"},
{"Line": "=>521", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["application.Task.getCategory()", "application.Task.getCategory()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(categoryOfTaskA.equals(Constant.CATEGORY_UNCATEGORISED))) && (!(categoryOfTaskB.equals(Constant.CATEGORY_UNCATEGORISED)))) { comparison = categoryOfTaskA.compareTo(categoryOfTaskB); }else if ((categoryOfTaskA.equals(Constant.CATEGORY_UNCATEGORISED)) & (!(categoryOfTaskB.equals(Constant.CATEGORY_UNCATEGORISED)))) { comparison = 1; }else if ((!(categoryOfTaskA.equals(Constant.CATEGORY_UNCATEGORISED))) && (categoryOfTaskB.equals(Constant.CATEGORY_UNCATEGORISED))) { comparison = -1; }else { comparison = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/668/buggy-version/ToDooo.src.application.Task.java", "BodyUseAPI": ["java.lang.String.compareTo(java.lang.String)", "java.lang.String.equals(Constant.CATEGORY_UNCATEGORISED)", "java.lang.String.equals(Constant.CATEGORY_UNCATEGORISED)", "java.lang.String.equals(Constant.CATEGORY_UNCATEGORISED)", "java.lang.String.equals(Constant.CATEGORY_UNCATEGORISED)"], "Fixed commit": "b23cedda0039019315a9105d0dbfa9fa5feae2aa", "Url": "https://api.github.com/repos/cs2103jan2015-f09-3j/main", "Date": "2015-03-24T10:16:49Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((client) == null) { client = proxyFactory.getRESTClient(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2328/buggy-version/rest-provider.src.main.java.org.jboss.pressgang.ccms.rest.RESTManager.java", "BodyUseAPI": [], "Fixed commit": "f667187811bcc5782f62779c599c03927109e81f", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSDatasourceProviders", "Date": "2013-12-03T22:53:41Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flag) == (ch.ranil.android.flageo.model.Flag.KOSOVO)) { flag = ch.ranil.android.flageo.model.FlagQuizBuilder.getInstance().nextUnasked(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/3287/buggy-version/app.src.main.java.ch.ranil.android.flageo.fragment.Flag2MapQuizFragment.java", "BodyUseAPI": [], "Fixed commit": "20392afb70a684f1c247536a7c8fd245eaec6ede", "Url": "https://api.github.com/repos/stravag/flageo-android", "Date": "2016-03-24T21:58:03Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["annoyaml.AnnoYAMLSerializer.getValueOfProperty(java.lang.Object,java.lang.reflect.Method,java.lang.reflect.Field)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (value.getClass().isEnum()) { resultValue = value.toString(); }else { resultValue = value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/6193/buggy-version/src.main.java.annoyaml.AnnoYAMLSerializer.java", "BodyUseAPI": ["java.lang.Object.toString()"], "Fixed commit": "c4ee598a50c3796196586533032891e80cda07d2", "Url": "https://api.github.com/repos/AnnoYAML/annoyaml", "Date": "2014-02-19T23:35:43Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (request != null) { switch (request) { case \"guestLogin\" : handleGuestLogin(in, out); break; case \"login\" : handleLogin(in, out); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/8397/buggy-version/src.LoginServer.java", "BodyUseAPI": [], "Fixed commit": "68bfe5cee876b71a38cfc1f7bc96a0639d076df8", "Url": "https://api.github.com/repos/rutgersc/mmServer", "Date": "2014-11-18T14:55:53Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (null == baiduMapDto) { baiduMapDto = new com.mogone.manager.dto.thirdparty.BaiduMapDto(); baiduMapDto.setPositionType(Constants.POSITION.ERR.getKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/91/buggy-version/src.main.java.com.mogone.manager.service.thirdparty.baidumap.BaiduMapService.java", "BodyUseAPI": [], "Fixed commit": "835c93e686cdcb15cc888c9fe7c7b0bf86e9ffb2", "Url": "https://api.github.com/repos/fandaqian/mogone-manager", "Date": "2016-06-04T11:42:33Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Constants.POSITION.ERR.getKey().equals(baiduMapDto.getPositionType())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/91/buggy-version/src.main.java.com.mogone.manager.service.WhereParentsService.java", "BodyUseAPI": [], "Fixed commit": "835c93e686cdcb15cc888c9fe7c7b0bf86e9ffb2", "Url": "https://api.github.com/repos/fandaqian/mogone-manager", "Date": "2016-06-04T11:42:33Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.docear.plugin.core.workspace.model.DocearWorkspaceProject.getExtensions(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((settings != null) && (settings.includeDemoFiles())) { org.freeplane.plugin.workspace.nodes.LinkTypeFileNode newPaperNode = new org.freeplane.plugin.workspace.nodes.LinkTypeFileNode(); newPaperNode.setLinkURI(org.freeplane.plugin.workspace.URIUtils.createURI(((libPath.toString()) + \"/My%20New%20Paper.mm\"))); newPaperNode.setName(org.freeplane.core.util.TextUtils.getText(((newPaperNode.getClass().getName().toLowerCase(java.util.Locale.ENGLISH)) + \".newpaper.label\"))); project.getModel().addNodeTo(newPaperNode, libNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V3/2745/buggy-version/docear_plugin_core.src.org.docear.plugin.core.workspace.controller.DocearProjectLoader.java", "BodyUseAPI": [], "Fixed commit": "89c449d0205479b6b340677ae4324c36f4e05bb2", "Url": "https://api.github.com/repos/Docear/Desktop", "Date": "2013-08-21T18:16:14Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.weblogic.lutskbus.MainActivity.getSystemService(Context.LOCATION_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER)) { locationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER, 0, 0, locationListener); android.location.Location mapStartPosition = locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER); if (mapStartPosition != null) map.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(new com.weblogic.lutskbus.LatLng(mapStartPosition.getLatitude(), mapStartPosition.getLongitude()), 16)); }else { map.moveCamera(com.google.android.gms.maps.CameraUpdateFactory.newLatLngZoom(Weblogic, 16)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3247/buggy-version/src.com.weblogic.lutskbus.MainActivity.java", "BodyUseAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER)", "android.location.LocationManager.requestLocationUpdates(LocationManager.NETWORK_PROVIDER,int,int,android.location.LocationListener)"], "Fixed commit": "6e88590b89bf759befb50502f493b917f8d3817a", "Url": "https://api.github.com/repos/firsyura/lutskbus", "Date": "2013-05-30T14:48:16Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkNetworkOnline()) { org.wso2.emm.system.service.utils.Preference.putString(context, context.getResources().getString(R.string.upgrade_download_status), context.getResources().getString(R.string.status_failed)); }else { org.wso2.emm.system.service.utils.Preference.putString(context, context.getResources().getString(R.string.upgrade_download_status), context.getResources().getString(R.string.status_connectivity_failed)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6890/buggy-version/modules.mobile-agents.android.system-service.app.src.main.java.org.wso2.emm.system.service.api.OTAServerManager.java", "BodyUseAPI": [], "Fixed commit": "1b1ff0d45a6153c9b88d2541844dc95a343acf50", "Url": "https://api.github.com/repos/wso2-attic/product-emm", "Date": "2016-08-10T13:20:36Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hudson.plugins.tfs.TeamBuildEndpoint.COMMAND_FACTORIES_BY_NAME.containsKey(commandName))) { throw org.kohsuke.stapler.HttpResponses.error(hudson.plugins.tfs.SC_BAD_REQUEST, \"Command not implemented\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6687/buggy-version/src.main.java.hudson.plugins.tfs.TeamBuildEndpoint.java", "BodyUseAPI": [], "Fixed commit": "50825acd7663a49436c2dfe55da24e666945228d", "Url": "https://api.github.com/repos/jenkinsci/tfs-plugin", "Date": "2016-07-29T20:01:16Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ticketArea.getSelectedValue()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5859/buggy-version/AirlineSystem.AdminGUI.java", "BodyUseAPI": [], "Fixed commit": "58191bebbf5c3c0cf9df80981136d8a80f203918", "Url": "https://api.github.com/repos/Ben-Graham/ENSF-409-Final", "Date": "2017-04-06T16:11:18Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tcts.common.SessionData.fromSession(javax.servlet.http.HttpSession)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((sessionData.getVolunteer()) != null) { com.tcts.datamodel.Volunteer volunteer = sessionData.getVolunteer(); model.addAttribute(\"bankName\", volunteer.getLinkedBank().getBankName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/355/buggy-version/src.main.java.com.tcts.controller.EditPersonalDataController.java", "BodyUseAPI": ["com.tcts.common.SessionData.getVolunteer()"], "Fixed commit": "24519e700eff7b4d788f92b723eaa71fc0763753", "Url": "https://api.github.com/repos/mcherm/TeachChildrenToSave", "Date": "2015-02-06T01:32:03Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((output > 9.99999999999E11) || (output < (-9.99999999999E11))) { df = new java.text.DecimalFormat(\"0.#####E0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3323/buggy-version/app.src.main.java.com.interview.raihan.mycalculator.EvaluateString.java", "BodyUseAPI": [], "Fixed commit": "0bbf6ff397eac2f435599647ec52cebe6e39804d", "Url": "https://api.github.com/repos/anik041/My-Calculator", "Date": "2017-10-12T12:10:24Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3105/buggy-version/de.bund.bfr.knime.openkrise.src.de.bund.bfr.knime.openkrise.MyKrisenInterfacesNodeModel.java", "BodyUseAPI": [], "Fixed commit": "e2bd9711809f9e3e696ee58a7d2949724e02b3c2", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2015-10-26T17:51:41Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getString(AuthenticatorService.KEY_INSTANCE_URL)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (encryptedInstanceUrl != null) { newInstanceUrl = com.salesforce.androidsdk.app.SalesforceSDKManager.decryptWithPasscode(encryptedInstanceUrl, com.salesforce.androidsdk.app.SalesforceSDKManager.getInstance().getPasscodeHash()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/896/buggy-version/libs.SalesforceSDK.src.com.salesforce.androidsdk.rest.ClientManager.java", "BodyUseAPI": ["com.salesforce.androidsdk.app.SalesforceSDKManager.decryptWithPasscode(java.lang.String,com.salesforce.androidsdk.app.SalesforceSDKManager.getInstance().getPasscodeHash())"], "Fixed commit": "c19194c83f0f9b9e84329e4756612500e7b21edc", "Url": "https://api.github.com/repos/wmathurin/SalesforceMobileSDK-Android", "Date": "2016-02-09T23:33:53Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(java.nio.file.Files.exists(mediaPath))) { if (!(java.nio.file.Files.exists(java.nio.file.Files.createDirectories(mediaPath)))) { throw new java.io.IOException((\"Couldn't make tomcat directory at: \" + (mediaPath.toAbsolutePath()))); }else { com.kirinpatel.util.UIMessage.showMessageDialog(((\"A new folder has been added for offline media.\\nPlease open \\\"\" + (mediaPath.toAbsolutePath())) + \"\\\"\\nand add any media files that you would like to use for sync.\"), \"Tomcat directory created!\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8778/buggy-version/sync.src.com.kirinpatel.tomcat.TomcatServer.java", "BodyUseAPI": [], "Fixed commit": "a6d9bcf838a0b69d456865c4cdf2fb065b82240d", "Url": "https://api.github.com/repos/ajchili/sync", "Date": "2017-07-27T00:43:25Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((k % 1000) == 0) println(((\"[CACHE-VALIDATOR] Start validation for keys like 'key-\" + k) + \"-*'\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3985/buggy-version/modules.yardstick.src.main.java.org.apache.ignite.yardstick.cache.failover.IgniteTransactionalInvokeRetryBenchmark.java", "BodyUseAPI": ["org.apache.ignite.yardstick.cache.failover.IgniteTransactionalInvokeRetryBenchmark.1.println(java.lang.String)"], "Fixed commit": "afee4b129bb7f7fdfae1aba6dda590477d977a84", "Url": "https://api.github.com/repos/ashutakGG/incubator-ignite", "Date": "2015-10-05T16:58:58Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dpfmanager.conformancechecker.tiff.implementation_checker.Validator.checkRule(dpfmanager.conformancechecker.tiff.implementation_checker.rules.model.RuleType,dpfmanager.conformancechecker.tiff.implementation_checker.model.TiffNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!ok) && ((rule.isWarning()) || (rule.isInfo()))) ok = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2630/buggy-version/src.main.java.dpfmanager.conformancechecker.tiff.implementation_checker.Validator.java", "BodyUseAPI": [], "Fixed commit": "0d5f4745f1e31b97766ef1a288d73a7d8b1adefb", "Url": "https://api.github.com/repos/EasyinnovaSL/DPFManager", "Date": "2016-10-21T06:52:13Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((offset_tilesize[0]) > 0) { xOffsetPos = xRealIsoPos + (java.lang.Math.abs(offset_tilesize[0])); }else { xOffsetPos = xRealIsoPos - (java.lang.Math.abs(offset_tilesize[0])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4828/buggy-version/src.org.andengine.extension.tmx.TMXLayer.java", "BodyUseAPI": ["java.lang.Math.abs(int)", "java.lang.Math.abs(int)"], "Fixed commit": "be1150246c6970c1ce68b277409c06597985a82e", "Url": "https://api.github.com/repos/Niffy/AndEngineTMXTiledMapExtension", "Date": "2012-07-04T18:43:22Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(comm.getCommunicator().isRunning())) { stop = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1781/buggy-version/src.com.codebrig.beam.transfer.FileTransferChannel.java", "BodyUseAPI": [], "Fixed commit": "a7c3a96c7b5322910efcf4d1825734d5b118b4af", "Url": "https://api.github.com/repos/BFergerson/Beam", "Date": "2015-07-07T23:45:03Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Set<com.codebrig.beam.transfer.FileDataMessage>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (size == 0) { capturedBlocks = new com.codebrig.beam.transfer.FileDataMessage[0]; }else { capturedBlocks = capturedBlockSet.toArray(new com.codebrig.beam.transfer.FileDataMessage[size]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1781/buggy-version/src.com.codebrig.beam.transfer.FileTransferChannel.java", "BodyUseAPI": ["java.util.Set<com.codebrig.beam.transfer.FileDataMessage>.toArray(com.codebrig.beam.transfer.FileDataMessage[])"], "Fixed commit": "a7c3a96c7b5322910efcf4d1825734d5b118b4af", "Url": "https://api.github.com/repos/BFergerson/Beam", "Date": "2015-07-07T23:45:03Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.INVALID_CHARACTER_DETECT_IN_SERVER)) { message = res.getString(R.string.filename_forbidden_charaters_from_server); }else if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.CONFLICT)) { message = res.getString(R.string.move_file_error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7150/buggy-version/src.com.owncloud.android.ui.errorhandling.ErrorMessageAdapter.java", "BodyUseAPI": ["com.owncloud.android.lib.common.operations.RemoteOperationResult.getCode()"], "Fixed commit": "c23e17760f9823bc15ddabea06b858dff58dc688", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2017-03-07T07:56:33Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (activity.isComment()) { if (!(activity.getTitleId().equals(\"forum.remove-poll\"))) { if (activity.getTitleId().equals(\"forum.add-poll\")) { return org.exoplatform.social.notification.LinkProviderUtils.getOpenLink(org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(activity)); }else { return templateParams.get(\"PostLink\"); } } }else { return (org.exoplatform.commons.utils.CommonsUtils.getCurrentDomain()) + (templateParams.get(\"TopicLink\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5646/buggy-version/component.notification.src.main.java.org.exoplatform.social.notification.LinkProviderUtils.java", "BodyUseAPI": ["org.exoplatform.social.core.activity.model.ExoSocialActivity.getTitleId()", "org.exoplatform.social.core.activity.model.ExoSocialActivity.getTitleId()", "activity.getTitleId().equals(java.lang.String)", "org.exoplatform.social.notification.LinkProviderUtils.getOpenLink(org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(activity))", "activity.getTitleId().equals(java.lang.String)", "org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(org.exoplatform.social.core.activity.model.ExoSocialActivity)"], "Fixed commit": "888476aa3af34b335d0321e1753492a3fd8860a2", "Url": "https://api.github.com/repos/exodev/social", "Date": "2016-08-24T10:25:52Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (activity.isComment()) { return org.exoplatform.social.notification.LinkProviderUtils.getOpenLink(org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(activity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5646/buggy-version/component.notification.src.main.java.org.exoplatform.social.notification.LinkProviderUtils.java", "BodyUseAPI": ["org.exoplatform.social.notification.LinkProviderUtils.getOpenLink(org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(activity))", "org.exoplatform.social.notification.Utils.getActivityManager().getParentActivity(org.exoplatform.social.core.activity.model.ExoSocialActivity)"], "Fixed commit": "888476aa3af34b335d0321e1753492a3fd8860a2", "Url": "https://api.github.com/repos/exodev/social", "Date": "2016-08-24T10:25:52Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((keys.length) > 2) { for (int i = 0; i < ((keys.length) - 2); i++) { name = (name + \".\") + (keys[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2038/buggy-version/ReuseProcessMining.ReuseProcessMiner.src.br.ufrj.cos.prisma.miner.Extractor.model.JDTHelper.java", "BodyUseAPI": [], "Fixed commit": "e8fead76caa594589d74705906326a024fd99e4c", "Url": "https://api.github.com/repos/talitalopes/ReuseProcessMining", "Date": "2014-04-06T17:38:29Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.overlord.sramp.repository.jcr.JCRPersistence.findArtifactNode(java.lang.String,org.overlord.sramp.common.ArtifactType,javax.jcr.Session)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (artifactNode.isNodeType(JCRConstants.SRAMP_NON_DOCUMENT_TYPE)) { throw new org.overlord.sramp.common.InvalidArtifactUpdateException(Messages.i18n.format(\"JCRPersistence.NoArtifactContent\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6656/buggy-version/s-ramp-repository-jcr.src.main.java.org.overlord.sramp.repository.jcr.JCRPersistence.java", "BodyUseAPI": [], "Fixed commit": "9cbd36aa44e91faf2cb1f6a3b0fe6d2d30d42905", "Url": "https://api.github.com/repos/EricWittmann/s-ramp", "Date": "2014-06-12T13:49:35Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ivk.type) instanceof wyc.stages.Type.Meth) { receiver = ((wyc.stages.Type.Process) (environment.pop())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7451/buggy-version/src.wyc.stages.TypePropagation.java", "BodyUseAPI": [], "Fixed commit": "00e870c6b650b6560c6a11846ec089e5aa9ebc29", "Url": "https://api.github.com/repos/zmthy/WhileyCompiler", "Date": "2011-08-04T00:40:32Z"},
{"Line": "=>567", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ivk.type) instanceof wyc.stages.Type.Meth) { funtype = bindMethod(ivk.name, receiver, types, stmt); }else { funtype = bindFunction(ivk.name, types, stmt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7451/buggy-version/src.wyc.stages.TypePropagation.java", "BodyUseAPI": ["wyc.stages.TypePropagation.bindFunction(ivk.name,java.util.ArrayList<wyc.stages.Type>,wyc.stages.Entry)", "wyc.stages.TypePropagation.bindMethod(ivk.name,Type.Process,java.util.ArrayList<wyc.stages.Type>,wyc.stages.Entry)"], "Fixed commit": "00e870c6b650b6560c6a11846ec089e5aa9ebc29", "Url": "https://api.github.com/repos/zmthy/WhileyCompiler", "Date": "2011-08-04T00:40:32Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.exists()) { org.apache.commons.io.FileUtils.forceDelete(file); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7132/buggy-version/robot-coder.src.main.java.com.piza.coder.CoderTask.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.forceDelete(java.io.File)"], "Fixed commit": "74e4f3aa2589502afd4a1c6358d4c217182761e5", "Url": "https://api.github.com/repos/piza/robotbase", "Date": "2016-10-11T09:38:30Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((shellJob.getResult()) != null) && (shellJob.getResult().contains(\"[ERROR]\"))) { this.sendChat(\"build failed, break task!\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7132/buggy-version/robot-deployer.src.main.java.com.piza.robot.deployer.DeployTask.java", "BodyUseAPI": [], "Fixed commit": "74e4f3aa2589502afd4a1c6358d4c217182761e5", "Url": "https://api.github.com/repos/piza/robotbase", "Date": "2016-10-11T09:38:30Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { selectItem(mCurrentSelectedPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8963/buggy-version/app.src.main.java.com.beercadeapp.NavigationDrawerFragment.java", "BodyUseAPI": [], "Fixed commit": "fb4dfad0397a1726a5ac5b783afce37489d2f21b", "Url": "https://api.github.com/repos/markcorrado/beercade-android-app", "Date": "2015-11-02T20:08:47Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPath) == null) id = mId; else id = idv.jason.lib.imagemanager.ImageManager.getImageId(mPath, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2234/buggy-version/src.idv.jason.lib.imagemanager.ImageManager.java", "BodyUseAPI": [], "Fixed commit": "ffc1f6c200bd8efb296eb0551ba3c0d9e351171c", "Url": "https://api.github.com/repos/jason1peng/ImageManager", "Date": "2012-12-10T03:32:22Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (server.useKeepAliveConnections()) { icapHeader.append(icap.services.HEAD_CONNECTION_KEEPALIVE).append(icap.services.CRLF); }else { icapHeader.append(icap.services.HEAD_CONNECTION_CLOSED).append(icap.services.CRLF); this.closeConnection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2041/buggy-version/src.icap.services.SafeShoppingAdapter.java", "BodyUseAPI": [], "Fixed commit": "f87c4055720f8e76a74596ae4856e3f64b0c1b7c", "Url": "https://api.github.com/repos/faust0335/dynamo-safeshopping", "Date": "2015-07-08T17:38:26Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["personal.frequency.service.impl.CurrencyConverterServiceImpl.getRates(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rates.containsKey(toCurrency)) { rate = rates.get(toCurrency); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5769/buggy-version/src.main.java.personal.frequency.service.impl.CurrencyConverterServiceImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Double>.get(java.lang.String)"], "Fixed commit": "dceeb50806295c06db490c6857eb542da5d5f7ff", "Url": "https://api.github.com/repos/diafelea/frequency", "Date": "2016-09-03T07:58:02Z"},
{"Line": "=>1342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsweet.transpiler.util.Util.isInterface(com.sun.tools.javac.code.Symbol.ClassSymbol)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isInterface) { print(\"<\").print(newClass.clazz).print(\">\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3367/buggy-version/src.main.java.org.jsweet.transpiler.typescript.Java2TypeScriptTranslator.java", "BodyUseAPI": [], "Fixed commit": "c6be0586682d9576d5ba99f51f4715ed2087b581", "Url": "https://api.github.com/repos/cincheo/jsweet", "Date": "2016-02-10T14:38:12Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) != 0) d.setId(id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7473/buggy-version/core.src.main.java.me.prettyprint.cassandra.service.ThriftCfDef.java", "BodyUseAPI": [], "Fixed commit": "ce230ea8a036ef693698bdccec0600f52fa6de1b", "Url": "https://api.github.com/repos/yangyangyyy/hector", "Date": "2011-09-30T22:16:58Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.exists()) keyValuePairs.putAll(briefj.opt.OptionsParser.readOptionsFile(file));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4617/buggy-version/src.main.java.westrun.exprepo.PermanentIndex.java", "BodyUseAPI": ["briefj.opt.OptionsParser.readOptionsFile(java.io.File)", "java.util.LinkedHashMap<java.lang.String, java.lang.String>.putAll(briefj.opt.OptionsParser.readOptionsFile(file))"], "Fixed commit": "45847dd651a8631b3b7fb504ca52e70900751b06", "Url": "https://api.github.com/repos/alexandrebouchard/westrun", "Date": "2014-10-14T14:23:50Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.exists()) keyValuePairs.put(westrun.exprepo.PermanentIndex.getNameNoExtension(file), briefj.BriefIO.fileToString(file));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4617/buggy-version/src.main.java.westrun.exprepo.PermanentIndex.java", "BodyUseAPI": ["westrun.exprepo.PermanentIndex.getNameNoExtension(java.io.File)", "java.util.LinkedHashMap<java.lang.String, java.lang.String>.put(java.lang.String,briefj.BriefIO.fileToString(file))", "briefj.BriefIO.fileToString(java.io.File)"], "Fixed commit": "45847dd651a8631b3b7fb504ca52e70900751b06", "Url": "https://api.github.com/repos/alexandrebouchard/westrun", "Date": "2014-10-14T14:23:50Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (params.containsKey(termName)) terms.addObject().put(\"name\", termName).put(\"value\", params.get(termName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6210/buggy-version/src.main.java.ru.rest.client.ClientPDF.java", "BodyUseAPI": ["terms.addObject().put(java.lang.String,java.lang.String)", "ru.rest.utils.ParamsMap.get(java.lang.String)", "terms.addObject().put(\"name\", termName).put(java.lang.String,params.get(termName))"], "Fixed commit": "1e567886d7e212ad18f0d6599d6df112b48d5630", "Url": "https://api.github.com/repos/BigBigBoss/GetOffence", "Date": "2016-01-19T11:42:17Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (range < 0) return value;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/42/buggy-version/src.org.pipservices.commons.random.RandomDateTime.java", "BodyUseAPI": [], "Fixed commit": "b82f70f4ae9aa2bc7f10694e6cad885815158707", "Url": "https://api.github.com/repos/pip-services/pip-services-commons-java", "Date": "2016-10-06T08:22:03Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.currentTimeMillis()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((thisTime + lastTouchTime) > 250) { mc.setZoom(zoomLevel); mc.animateTo(myLocationOverlay.getMyLocation()); lastTouchTime = -1; }else { lastTouchTime = thisTime; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2278/buggy-version/Pubrundan.src.com.tarea.pubrundan.TheMap.java", "BodyUseAPI": [], "Fixed commit": "920767dc6e7c012af0b20bcf6294d6b9cb3569b7", "Url": "https://api.github.com/repos/gitsjogren/segr4", "Date": "2012-10-12T21:28:27Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin2.getExecutions().getExecution()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (getSigningProfilePlugin(profile, execution).equals(profile.getId())) { return getSigningProfilePlugin(profile, execution); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4932/buggy-version/phresco-pom.src.main.java.com.phresco.pom.util.AndroidPomProcessor.java", "BodyUseAPI": ["com.phresco.pom.util.AndroidPomProcessor.getSigningProfilePlugin(com.phresco.pom.model.Profile,java.util.List<com.phresco.pom.model.PluginExecution>)"], "Fixed commit": "131396ed8c021163a25fe70434bfddea827b6986", "Url": "https://api.github.com/repos/phresco/phresco", "Date": "2012-07-19T06:53:47Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["plugin2.getExecutions().getExecution()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (execution != null) { for (com.phresco.pom.model.PluginExecution pluginExecution : execution) { if ((pluginExecution.getConfiguration()) != null) { java.util.List<org.w3c.dom.Element> any = pluginExecution.getConfiguration().getAny(); processProfiles(androidProfile, any); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4932/buggy-version/phresco-pom.src.main.java.com.phresco.pom.util.AndroidPomProcessor.java", "BodyUseAPI": [], "Fixed commit": "131396ed8c021163a25fe70434bfddea827b6986", "Url": "https://api.github.com/repos/phresco/phresco", "Date": "2012-07-19T06:53:47Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pluginExecution.getConfiguration()) != null) { java.util.List<org.w3c.dom.Element> any = pluginExecution.getConfiguration().getAny(); processProfiles(androidProfile, any); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4932/buggy-version/phresco-pom.src.main.java.com.phresco.pom.util.AndroidPomProcessor.java", "BodyUseAPI": ["com.phresco.pom.model.PluginExecution.getConfiguration()", "pluginExecution.getConfiguration().getAny()"], "Fixed commit": "131396ed8c021163a25fe70434bfddea827b6986", "Url": "https://api.github.com/repos/phresco/phresco", "Date": "2012-07-19T06:53:47Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.phylogeny.extrabitmanipulation.reference.SculptSettings.SCULPT_HOLLOW_SHAPE) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3926/buggy-version/src.main.java.com.phylogeny.extrabitmanipulation.shape.Shape.java", "BodyUseAPI": [], "Fixed commit": "116bc50bb56f4d3b4f9ee65369922214f3aaec98", "Url": "https://api.github.com/repos/Phylogeny/ExtraBitManipulation", "Date": "2016-03-03T12:31:44Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!warped) { com.sekwah.advancedportals.portals.Portal.throwPlayerBack(player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8335/buggy-version/src.com.sekwah.advancedportals.portals.Portal.java", "BodyUseAPI": [], "Fixed commit": "4cb0df024edc6c7c3719fcd45e080bdddb103e9c", "Url": "https://api.github.com/repos/sekwah41/Advanced-Portals", "Date": "2017-03-07T12:06:17Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (plugin.spectatingPlayers.contains(leavingPlayer.getPlayer())) { plugin.spectatingPlayers.remove(leavingPlayer.getPlayer()); this.restoreInventory(leavingPlayer.getPlayer()); leavingPlayer.teleport(plugin.locations.lobbySpawnLocation()); for (org.bukkit.entity.Player pl : org.bukkit.Bukkit.getOnlinePlayers()) { pl.showPlayer(leavingPlayer.getPlayer()); } leavingPlayer.setAllowFlight(false); }else if (plugin.duelingPlayers.contains(leavingPlayer.getPlayer())) { plugin.util.broadcastMessage((((org.bukkit.ChatColor.RED) + (leavingPlayer.getName())) + \" has ended the duel by leaving!!\")); plugin.util.endDuel(); }else { leavingPlayer.sendMessage((((plugin.pluginPrefix) + (org.bukkit.ChatColor.YELLOW)) + \"You cannot leave a duel if you are not in one!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2350/buggy-version/src.main.java.com.teozcommunity.teozfrank.duelme.util.Util.java", "BodyUseAPI": ["org.bukkit.entity.Player.getPlayer()", "com.teozcommunity.teozfrank.duelme.util.Util.restoreInventory(leavingPlayer.getPlayer())", "org.bukkit.entity.Player.showPlayer(leavingPlayer.getPlayer())", "plugin.locations.lobbySpawnLocation()", "org.bukkit.entity.Player.teleport(plugin.locations.lobbySpawnLocation())", "org.bukkit.entity.Player.getPlayer()", "plugin.util.broadcastMessage((((org.bukkit.ChatColor.RED) + (leavingPlayer.getName())) + \" has ended the duel by leaving!!\"))", "org.bukkit.entity.Player.sendMessage((((plugin.pluginPrefix) + (org.bukkit.ChatColor.YELLOW)) + \"You cannot leave a duel if you are not in one!\"))", "plugin.util.endDuel()", "org.bukkit.entity.Player.setAllowFlight(boolean)", "org.bukkit.entity.Player.getPlayer()", "plugin.duelingPlayers.contains(leavingPlayer.getPlayer())", "org.bukkit.entity.Player.getPlayer()", "org.bukkit.entity.Player.getName()", "plugin.spectatingPlayers.remove(leavingPlayer.getPlayer())"], "Fixed commit": "ea92f5f4f0beeaaf8310af813191b3cac8bc1bc5", "Url": "https://api.github.com/repos/teozfrank/DuelMe", "Date": "2013-08-21T01:25:05Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.getBlockState(pos).getBlock()) instanceof vswe.stevescarts.blocks.BlockUpgrade) { if (side != null) { world.setBlockState(pos, blockUpgrade.getDefaultState().withProperty(BlockUpgrade.FACING, side).withProperty(BlockUpgrade.TYPE, getType())); }else { world.setBlockState(pos, blockUpgrade.getDefaultState().withProperty(BlockUpgrade.TYPE, getType())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8094/buggy-version/src.main.java.vswe.stevescarts.blocks.tileentities.TileEntityUpgrade.java", "BodyUseAPI": ["vswe.stevescarts.blocks.tileentities.TileEntityUpgrade.setBlockState(vswe.stevescarts.blocks.tileentities.TileEntityUpgrade,blockUpgrade.getDefaultState().withProperty(BlockUpgrade.TYPE, getType()))", "vswe.stevescarts.blocks.tileentities.TileEntityUpgrade.setBlockState(vswe.stevescarts.blocks.tileentities.TileEntityUpgrade,blockUpgrade.getDefaultState().withProperty(BlockUpgrade.FACING, side).withProperty(BlockUpgrade.TYPE, getType()))"], "Fixed commit": "a8f8d361f5f338f2df312f13b2b0df53ed1a3f71", "Url": "https://api.github.com/repos/TechReborn/StevesCarts", "Date": "2017-05-07T12:48:16Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index >= 0) && (index < 5)) { return programmedCards[index]; }else { throw new java.lang.IllegalArgumentException(\"Index must be between 0 and 4\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2819/buggy-version/src.main.java.edu.chl.roborally.model.Player.java", "BodyUseAPI": [], "Fixed commit": "a5b5c679d15957df460d8280b53a42f30a472c87", "Url": "https://api.github.com/repos/frellan/robo-rally", "Date": "2015-03-31T15:52:40Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAppContext) != null) mAppContext.getContentResolver().unregisterContentObserver(mSecureSettingsChanged);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2326/buggy-version/src.main.java.com.anysoftkeyboard.ui.settings.setup.SetUpKeyboardWizardFragment.java", "BodyUseAPI": [], "Fixed commit": "f25b6834cbc80cabfa9e3c088e78c3032dbb5cdf", "Url": "https://api.github.com/repos/menny/AnySoftKeyboard", "Date": "2013-12-12T15:06:56Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").equals(\"Mac OS X\")) { cattr = new org.lwjgl.opengl.ContextAttribs(3, 2).withForwardCompatible(true).withProfileCore(true); }else { cattr = new org.lwjgl.opengl.ContextAttribs(3, 3).withForwardCompatible(true).withProfileCore(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4040/buggy-version/flaming-octo-ironman.src.com.flamingOctoIronman.subsystem.render.RenderEngine2.java", "BodyUseAPI": [], "Fixed commit": "0dbe0cbe3e0b240ab1ebf8c81368fd5a6941ca2a", "Url": "https://api.github.com/repos/fh3/flaming-octo-ironman", "Date": "2014-11-03T21:09:16Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cn.vicey.navigator.Map.MapParser.validate(src))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1527/buggy-version/app.src.main.java.cn.vicey.navigator.Map.MapManager.java", "BodyUseAPI": [], "Fixed commit": "6a03210ac5a4a37dfe2b6ad63f0d7995b19c44e3", "Url": "https://api.github.com/repos/yhvicey/IndoorNavigator.Navigator", "Date": "2017-04-02T16:40:11Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((task.sentence.content) instanceof nars.operator.Operation) { if ((((nars.operator.Operation) (task.sentence.content)).getPredicate()) == (memory.getOperator(\"^deactivate\"))) { boolean breakpoint = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3552/buggy-version/nars_java.nars.core.control.NAL.java", "BodyUseAPI": ["((nars.operator.Operation) (task.sentence.content)).getPredicate()"], "Fixed commit": "4b436b0478c74502ea089d757748fece1648ed54", "Url": "https://api.github.com/repos/opennars/opennars", "Date": "2014-11-10T17:54:05Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((task.sentence.content) instanceof nars.language.Implication) && ((((nars.language.Implication) (task.sentence.content)).getTemporalOrder()) == (nars.inference.TemporalRules.ORDER_BACKWARD))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3552/buggy-version/nars_java.nars.core.control.NAL.java", "BodyUseAPI": [], "Fixed commit": "4b436b0478c74502ea089d757748fece1648ed54", "Url": "https://api.github.com/repos/opennars/opennars", "Date": "2014-11-10T17:54:05Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Parser.termMultOrDiv()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (factorRight == null) { throw new Parser.SyntaxErrorException(\"Incorrect right side expression\"); }else { expr = new Division(expr, factorRight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4671/buggy-version/source.Parser.java", "BodyUseAPI": [], "Fixed commit": "8f7c354bed5375794e1910393d36f0aa48e24ddd", "Url": "https://api.github.com/repos/ElieOaks/inlup4", "Date": "2017-11-27T13:24:46Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Parser.termMultOrDiv()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rightTerm == null) { throw new Parser.SyntaxErrorException(\"Incorrect right side term\"); }else { expr = new Subtraction(expr, rightTerm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4671/buggy-version/source.Parser.java", "BodyUseAPI": [], "Fixed commit": "8f7c354bed5375794e1910393d36f0aa48e24ddd", "Url": "https://api.github.com/repos/ElieOaks/inlup4", "Date": "2017-11-27T13:24:46Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Parser.termMultOrDiv()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rightTerm == null) { throw new Parser.SyntaxErrorException(\"Incorrect right side term\"); }else { expr = new Addition(expr, rightTerm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4671/buggy-version/source.Parser.java", "BodyUseAPI": [], "Fixed commit": "8f7c354bed5375794e1910393d36f0aa48e24ddd", "Url": "https://api.github.com/repos/ElieOaks/inlup4", "Date": "2017-11-27T13:24:46Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Parser.assignment()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (rightTerm == null) { throw new Parser.SyntaxErrorException(\"Incorrect right side term\"); }else { expr = new Assignment(expr, rightTerm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4671/buggy-version/source.Parser.java", "BodyUseAPI": [], "Fixed commit": "8f7c354bed5375794e1910393d36f0aa48e24ddd", "Url": "https://api.github.com/repos/ElieOaks/inlup4", "Date": "2017-11-27T13:24:46Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Parser.termMultOrDiv()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (factorRight == null) { throw new Parser.SyntaxErrorException(\"Incorrect right side expression\"); }else { expr = new Multiplication(expr, factorRight); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4671/buggy-version/source.Parser.java", "BodyUseAPI": [], "Fixed commit": "8f7c354bed5375794e1910393d36f0aa48e24ddd", "Url": "https://api.github.com/repos/ElieOaks/inlup4", "Date": "2017-11-27T13:24:46Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (AWCoreStatics.DEBUG) { AncientWarfareCore.log.log(Level.ERROR, (\"[DEBUG] \" + message)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8733/buggy-version/src.main.java.net.shadowmage.ancientwarfare.core.config.AWLog.java", "BodyUseAPI": [], "Fixed commit": "0faac7cd5667308d61d7a16caea69791d5da9b38", "Url": "https://api.github.com/repos/shadowmage45/AncientWarfare2", "Date": "2014-07-26T02:35:52Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sessionServices.hasToken()) { return \"redirect:/git2\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4802/buggy-version/src.main.java.git.info.controllers.Controller.java", "BodyUseAPI": [], "Fixed commit": "e1c37998c65a0cc6370163fe29d710a4474d28f3", "Url": "https://api.github.com/repos/polskikiel/JavaInternship", "Date": "2017-11-15T20:57:39Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((info) == false) { paused = true; gameLogic.setMakeWait(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4656/buggy-version/src.gui.UserInterface.java", "BodyUseAPI": [], "Fixed commit": "6af16498ae76d18252f96ccb5b6d030f3b14e56c", "Url": "https://api.github.com/repos/GaryNiet/PS14", "Date": "2014-07-04T14:43:23Z"},
{"Line": "=>1158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ModelConstants.STATE_TASLAPPROVE.equals(newState)) || (ModelConstants.STATE_APPROVED.equals(newState))) { com.novartis.ecrs.ui.utility.ADFUtils.setEL(\"#{bindings.TaslRejectComment.inputValue}\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5553/buggy-version/ECRS.ECRSViewController.src.com.novartis.ecrs.ui.bean.ManageCRSBean.java", "BodyUseAPI": [], "Fixed commit": "73a6d6d597768c0d685ca88d63e5162e073926ca", "Url": "https://api.github.com/repos/hpothuri/ecrs", "Date": "2015-11-05T02:09:47Z"},
{"Line": "=>1161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ModelConstants.STATE_MLAPPROVE.equals(newState)) || (ModelConstants.STATE_APPROVED.equals(newState))) { com.novartis.ecrs.ui.utility.ADFUtils.setEL(\"#{bindings.MedicalLeadRejectComment.inputValue}\", null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5553/buggy-version/ECRS.ECRSViewController.src.com.novartis.ecrs.ui.bean.ManageCRSBean.java", "BodyUseAPI": [], "Fixed commit": "73a6d6d597768c0d685ca88d63e5162e073926ca", "Url": "https://api.github.com/repos/hpothuri/ecrs", "Date": "2015-11-05T02:09:47Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aiObj.pcPresent()) && (pc == 0)) { throw new java.lang.Exception(java.lang.String.format(\"Address Indicator %d indicates that PointCode is present, however PointCode passed is 0\", ai)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4761/buggy-version/sccp.sccp-impl.src.main.java.org.mobicents.protocols.ss7.sccp.impl.oam.SccpExecutor.java", "BodyUseAPI": [], "Fixed commit": "0df50122a53089fbcd6509f3c459447d3de5a2f6", "Url": "https://api.github.com/repos/Mobicents/jss7", "Date": "2013-09-30T17:04:22Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aiObj.ssnPresent()) && (ssn == 0)) { throw new java.lang.Exception(java.lang.String.format(\"Address Indicator %d indicates that SSN is present, however SSN passed is 0\", ai)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4761/buggy-version/sccp.sccp-impl.src.main.java.org.mobicents.protocols.ss7.sccp.impl.oam.SccpExecutor.java", "BodyUseAPI": [], "Fixed commit": "0df50122a53089fbcd6509f3c459447d3de5a2f6", "Url": "https://api.github.com/repos/Mobicents/jss7", "Date": "2013-09-30T17:04:22Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.util.xml.GenericValue<com.intellij.persistence.model.PersistentAttribute>.getStringValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (mappedByStringValue == null) mappedByStringValue = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/104/buggy-version/src.com.esn.idea.liquibaseejb.model.ejb.member.AnyToOneModel.java", "BodyUseAPI": [], "Fixed commit": "3104752889c5e436b082813a9555c328045b5e09", "Url": "https://api.github.com/repos/marcusn/LiquibaseEjb", "Date": "2012-05-13T10:36:40Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.valueOf(item[1])) == 1) { defeated = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1158/buggy-version/app.src.main.java.usa.ten.game.tenusa.database.SqliteDAO.java", "BodyUseAPI": [], "Fixed commit": "f5a646ab084485a920ad9e9c402fffd7acc57c53", "Url": "https://api.github.com/repos/goya813/Tenusa", "Date": "2015-11-21T16:08:36Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6943/buggy-version/Simple-DB.src.com.wslfinc.db.TypeChecker.java", "BodyUseAPI": [], "Fixed commit": "df4e12e74761efe6b73f72b6d5ca8dc2350f1482", "Url": "https://api.github.com/repos/WslF/Simple-DB-Local", "Date": "2016-09-25T22:37:43Z"},
{"Line": "=>917", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getHand()) == (org.bukkit.inventory.EquipmentSlot.HAND)) { player.getInventory().setItemInMainHand(null); }else if ((event.getHand()) == (org.bukkit.inventory.EquipmentSlot.OFF_HAND)) { player.getInventory().setItemInOffHand(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7233/buggy-version/src.main.java.com.winthier.minigames.spleef.Spleef.java", "BodyUseAPI": ["org.bukkit.event.block.BlockPlaceEvent.getHand()"], "Fixed commit": "a48fb2c2695b9ffb2b6bbbdca6ebd4553cde37f4", "Url": "https://api.github.com/repos/StarTux/Spleef", "Date": "2016-06-04T21:22:32Z"},
{"Line": "=>911", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getHand()) == (org.bukkit.inventory.EquipmentSlot.HAND)) { player.getInventory().setItemInMainHand(item); }else if ((event.getHand()) == (org.bukkit.inventory.EquipmentSlot.OFF_HAND)) { player.getInventory().setItemInOffHand(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7233/buggy-version/src.main.java.com.winthier.minigames.spleef.Spleef.java", "BodyUseAPI": ["org.bukkit.event.block.BlockPlaceEvent.getHand()"], "Fixed commit": "a48fb2c2695b9ffb2b6bbbdca6ebd4553cde37f4", "Url": "https://api.github.com/repos/StarTux/Spleef", "Date": "2016-06-04T21:22:32Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((cCount) == 0) && (grid2[row][col].isMine())) { grid2[row][col].setIsMine(false); hw2.GridUtil.initCounts(grid2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2753/buggy-version/src.hw2.Minesweeper.java", "BodyUseAPI": ["hw2.GridUtil.initCounts(api.Cell[][])", "grid2[row][col].setIsMine(boolean)"], "Fixed commit": "4e831220c331f66f4ab5b986cad98cf5cfad8d4e", "Url": "https://api.github.com/repos/Yingste/hw2", "Date": "2016-03-31T02:25:56Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (givenCol < ((grid[givenRow].length) - 1)) { if (grid[(givenRow + 1)][(givenCol + 1)].isMine()) { count++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2753/buggy-version/src.hw2.GridUtil.java", "BodyUseAPI": ["grid[(givenRow + 1)][(givenCol + 1)].isMine()"], "Fixed commit": "4e831220c331f66f4ab5b986cad98cf5cfad8d4e", "Url": "https://api.github.com/repos/Yingste/hw2", "Date": "2016-03-31T02:25:56Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (givenCol < ((grid[givenRow].length) - 1)) { if (grid[(givenRow - 1)][(givenCol + 1)].isMine()) { count++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2753/buggy-version/src.hw2.GridUtil.java", "BodyUseAPI": ["grid[(givenRow - 1)][(givenCol + 1)].isMine()"], "Fixed commit": "4e831220c331f66f4ab5b986cad98cf5cfad8d4e", "Url": "https://api.github.com/repos/Yingste/hw2", "Date": "2016-03-31T02:25:56Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (shareContainer.needAnonymousShares()) { entries.addAll(anonymousShareEntryService.create(actor, owner, shareContainer)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2460/buggy-version/src.main.java.org.linagora.linshare.core.service.impl.ShareServiceImpl.java", "BodyUseAPI": ["org.linagora.linshare.core.service.AnonymousShareEntryService.create(org.linagora.linshare.core.domain.entities.Account,org.linagora.linshare.core.domain.entities.User,org.linagora.linshare.core.domain.objects.ShareContainer)", "java.util.Set<org.linagora.linshare.core.domain.entities.Entry>.addAll(anonymousShareEntryService.create(actor, owner, shareContainer))"], "Fixed commit": "7a23d23c952a45dbdd0081574b70199b37643cf6", "Url": "https://api.github.com/repos/linagora/linshare-core", "Date": "2015-07-29T15:24:41Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.equals(\"otter-canal\", java.lang.System.getProperty(\"appName\"))) { monitor.setRootConf(rootDir); }else { monitor.setRootConf(\"src/main/resources/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8982/buggy-version/deployer.src.main.java.com.alibaba.otter.canal.deployer.CanalController.java", "BodyUseAPI": [], "Fixed commit": "38cc81b7dab29b51371096fb6763ca3a8432ffee", "Url": "https://api.github.com/repos/xiwanglr/canal", "Date": "2016-04-07T03:25:59Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.devsilo.persistence.BasicDBObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (commentObjects != null) { for (com.devsilo.persistence.BasicDBObject commentObject : commentObjects) { com.devsilo.persistence.Comment comment = new com.devsilo.persistence.Comment(commentObject.getString(\"author\"), commentObject.getString(\"content\")); comments.add(comment); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3034/buggy-version/src.main.java.com.devsilo.persistence.VideoDao.java", "BodyUseAPI": [], "Fixed commit": "ca65518bbc529a12ae290bb5b7f9b63d302436d0", "Url": "https://api.github.com/repos/LikeLikeAteMyShield/DevSilo-Core", "Date": "2017-03-19T14:06:18Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.vanilladb.core.server.VanillaDb.catalogMgr().getIndexInfo(java.lang.String,java.lang.String,org.vanilladb.core.storage.tx.Transaction)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (iis != null) candidates.addAll(iis);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3462/buggy-version/src.main.java.org.vanilladb.core.query.planner.opt.TablePlanner.java", "BodyUseAPI": ["java.util.Set<org.vanilladb.core.storage.metadata.index.IndexInfo>.addAll(java.util.List<org.vanilladb.core.storage.metadata.index.IndexInfo>)"], "Fixed commit": "7fa490228b135a1cc5434b5abeddfc57f0e8a435", "Url": "https://api.github.com/repos/vanilladb/vanillacore", "Date": "2017-07-27T07:47:02Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(loadedTables.contains(tblName))) { getIndexInfo(tblName, tx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3462/buggy-version/src.main.java.org.vanilladb.core.storage.metadata.index.IndexMgr.java", "BodyUseAPI": ["org.vanilladb.core.storage.metadata.index.IndexMgr.getIndexInfo(java.lang.String,org.vanilladb.core.storage.tx.Transaction)"], "Fixed commit": "7fa490228b135a1cc5434b5abeddfc57f0e8a435", "Url": "https://api.github.com/repos/vanilladb/vanillacore", "Date": "2017-07-27T07:47:02Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.vanilladb.core.server.VanillaDb.catalogMgr().getIndexInfo(java.lang.String,java.lang.String,org.vanilladb.core.storage.tx.Transaction)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (iis != null) candidates.addAll(iis);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3462/buggy-version/src.main.java.org.vanilladb.core.query.planner.index.IndexSelector.java", "BodyUseAPI": ["java.util.Set<org.vanilladb.core.storage.metadata.index.IndexInfo>.addAll(java.util.List<org.vanilladb.core.storage.metadata.index.IndexInfo>)"], "Fixed commit": "7fa490228b135a1cc5434b5abeddfc57f0e8a435", "Url": "https://api.github.com/repos/vanilladb/vanillacore", "Date": "2017-07-27T07:47:02Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<Logic.ProofLine>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((line.justification) == (Rules.Rule.MPP)) { Logic.Rules.checkMPP(proofLines, line); }else if ((line.justification) == (Rules.Rule.MTT)) { Logic.Rules.checkMTT(proofLines, line); }else if ((line.justification) == (Rules.Rule.DN)) { Logic.Rules.checkDN(proofLines, line); }else { throw new java.lang.IllegalArgumentException(\"Not a valid rule\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1122/buggy-version/site.api.Logic.Proof.java", "BodyUseAPI": ["Logic.Rules.checkDN(java.util.List<Logic.ProofLine>,Logic.ProofLine)", "Logic.Rules.checkMTT(java.util.List<Logic.ProofLine>,Logic.ProofLine)", "Logic.Rules.checkMPP(java.util.List<Logic.ProofLine>,Logic.ProofLine)"], "Fixed commit": "741b726de3e7b038adca01590617637d271c4f18", "Url": "https://api.github.com/repos/blomqcon/logic-solver", "Date": "2015-03-11T20:30:21Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<Logic.ProofLine>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((line.justification) == (Rules.Rule.MPP)) { Logic.Rules.checkMPP(proofLines, line); }else if ((line.justification) == (Rules.Rule.MTT)) { Logic.Rules.checkMTT(proofLines, line); }else if ((line.justification) == (Rules.Rule.DN)) { Logic.Rules.checkDN(proofLines, line); }else { throw new java.lang.IllegalArgumentException(\"Not a valid rule\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1122/buggy-version/src.Logic.Proof.java", "BodyUseAPI": ["Logic.Rules.checkMTT(java.util.List<Logic.ProofLine>,Logic.ProofLine)", "Logic.Rules.checkMPP(java.util.List<Logic.ProofLine>,Logic.ProofLine)", "Logic.Rules.checkDN(java.util.List<Logic.ProofLine>,Logic.ProofLine)"], "Fixed commit": "741b726de3e7b038adca01590617637d271c4f18", "Url": "https://api.github.com/repos/blomqcon/logic-solver", "Date": "2015-03-11T20:30:21Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((android.os.PowerManager) (context.getSystemService(Context.POWER_SERVICE))).isScreenOn()) android.preference.PreferenceManager.getDefaultSharedPreferences(context).edit().putBoolean(\"unlock\", true).commit(); else { android.preference.PreferenceManager.getDefaultSharedPreferences(context).edit().putBoolean(\"unlock\", false).commit(); com.lukekorth.pebblelocker.Locker.unlockIfEnabled(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/463/buggy-version/src.com.lukekorth.pebblelocker.PebbleConnectionReceiver.java", "BodyUseAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(context).edit().putBoolean(\"unlock\", true).commit()", "android.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context)", "android.preference.PreferenceManager.getDefaultSharedPreferences(context).edit()", "android.preference.PreferenceManager.getDefaultSharedPreferences(context).edit().putBoolean(\"unlock\", false).commit()", "com.lukekorth.pebblelocker.Locker.unlockIfEnabled(android.content.Context)", "android.preference.PreferenceManager.getDefaultSharedPreferences(context).edit().putBoolean(java.lang.String,boolean)", "android.preference.PreferenceManager.getDefaultSharedPreferences(android.content.Context)", "android.preference.PreferenceManager.getDefaultSharedPreferences(context).edit()", "android.preference.PreferenceManager.getDefaultSharedPreferences(context).edit().putBoolean(java.lang.String,boolean)"], "Fixed commit": "54408881bb55ae9f6f631d64d4e9dd957d4462db", "Url": "https://api.github.com/repos/lkorth/pebble-locker", "Date": "2013-09-17T03:00:10Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSentenceWithImmunization(sentence).getTokensWithoutWhitespace()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tokens[i].isImmunized()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1662/buggy-version/languagetool-language-modules.de.src.main.java.org.languagetool.rules.de.VerbAgreementRule.java", "BodyUseAPI": [], "Fixed commit": "f3d139e0f313ac826f12ce2071996ac381e01415", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2015-09-22T12:44:40Z"},
{"Line": "=>1262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.seafile.seadroid2.data.DataManager.getCachedRepoByID(navContext.getRepoID())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((repo != null) && (repo.canLocalDecrypt())) { addUploadBlocksTask(navContext.getRepoID(), navContext.getRepoName(), navContext.getDirPath(), takeCameraPhotoTempFile.getAbsolutePath(), repo.encVersion); }else { addUploadTask(navContext.getRepoID(), navContext.getRepoName(), navContext.getDirPath(), takeCameraPhotoTempFile.getAbsolutePath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8585/buggy-version/app.src.main.java.com.seafile.seadroid2.ui.activity.BrowserActivity.java", "BodyUseAPI": ["com.seafile.seadroid2.ui.activity.BrowserActivity.addUploadBlocksTask(navContext.getRepoID(),navContext.getRepoName(),navContext.getDirPath(),java.lang.String,repo.encVersion)"], "Fixed commit": "5623b622b18bef8a461a5d143dd1126f6f21d763", "Url": "https://api.github.com/repos/haiwen/seadroid", "Date": "2016-06-30T03:09:53Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position < 0) || (position >= (surveys.size()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6662/buggy-version/app.src.main.java.org.eyeseetea.malariacare.layout.adapters.dashboard.AssessmentAdapter.java", "BodyUseAPI": [], "Fixed commit": "9c725c45dcad286ecdf0b4d266c606e338e5b62b", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2017-03-29T23:35:32Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (destination.contains(\"null\")) { return; }else { f = new java.io.File(destination); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4071/buggy-version/src.projekt.MyExcel.java", "BodyUseAPI": [], "Fixed commit": "151dae898d8522d5bc31a58469dfc6d6d1a77d3b", "Url": "https://api.github.com/repos/FreakazoidRoflcopter/Assignments", "Date": "2017-10-06T10:10:56Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstRun) { try { java.lang.Thread.sleep(time); } catch (java.lang.InterruptedException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1020/buggy-version/guiPanel.java", "BodyUseAPI": [], "Fixed commit": "580c6331463133402a631c05a427290c20707e6d", "Url": "https://api.github.com/repos/citrin2013/citrin", "Date": "2013-04-27T03:18:38Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(use64Bit)) { for (int i = 0; i < (markers.length); i++) { markers[i] = (markers[i]) & 4294967295L; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2695/buggy-version/components.formats-gpl.src.loci.formats.in.NDPIReader.java", "BodyUseAPI": [], "Fixed commit": "7ecabcdb7097f6fa7273538542c6dd4c8c5e5030", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2015-05-13T07:47:33Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (val instanceof soot.jimple.FieldRef) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3434/buggy-version/src.soot.jimple.infoflow.problems.AbstractInfoflowProblem.java", "BodyUseAPI": [], "Fixed commit": "bc85c1fc2b84b56c0330f82d448f3c0481d4e8d3", "Url": "https://api.github.com/repos/secure-software-engineering/soot-infoflow", "Date": "2014-01-27T14:31:19Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.knowledge.graph.Mainpage.getSubjects().getTiedTopics(this.ID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (topics != null) { for (int i = 0; i < (topics.size()); i++) { model.addElement(new com.knowledge.graph.frontend.panel.NodeWrapper(topics.get(i).getName(), topics.get(i).getTopicID())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4748/buggy-version/src.com.knowledge.graph.frontend.panel.TopicsPanel.java", "BodyUseAPI": ["javax.swing.DefaultListModel.addElement(com.knowledge.graph.frontend.panel.NodeWrapper)", "java.util.List<com.knowledge.graph.backend.Topic>.size()", "topics.get(i).getName()", "java.util.List<com.knowledge.graph.backend.Topic>.get(int)", "topics.get(i).getTopicID()", "java.util.List<com.knowledge.graph.backend.Topic>.get(int)"], "Fixed commit": "df8c2943a6c7837cfd237060920af0eafe4f75c6", "Url": "https://api.github.com/repos/sinahab/KnowledgeGraph", "Date": "2014-06-18T06:57:42Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((offer.getVendors()) != null) { for (br.com.battista.myoffers.model.Vendor vendor : offer.getVendors()) { vendorRepository.save(vendor); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2958/buggy-version/app.src.main.java.br.com.battista.myoffers.controller.OfferController.java", "BodyUseAPI": ["br.com.battista.myoffers.model.Offer.getVendors()"], "Fixed commit": "0baf6a5cf753900f0395dd626abd1ef7cdaf8543", "Url": "https://api.github.com/repos/rafaelbscit/myoffers", "Date": "2016-04-16T15:01:11Z"},
{"Line": "=>1378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (entity)) { return \"Whoops, No Entity\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2858/buggy-version/MekHQ.src.mekhq.campaign.ResolveScenarioTracker.java", "BodyUseAPI": [], "Fixed commit": "53a9f7c4deec6b025a342f775a9f1f0ce978484a", "Url": "https://api.github.com/repos/Akjosch/mekhq", "Date": "2015-09-09T19:15:58Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tag_id > 0) { n.setTag(hermes.dataloader.FactoryDAO.getTagDAO().retrieve(tag_id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6000/buggy-version/src.hermes.dataloader.NotificationDAOforJDBC.java", "BodyUseAPI": ["hermes.dataloader.FactoryDAO.getTagDAO().retrieve(int)", "hermes.dataloader.Notification.setTag(hermes.dataloader.FactoryDAO.getTagDAO().retrieve(tag_id))"], "Fixed commit": "119a5126bf41ada48d6e9505759c86c740ac5b61", "Url": "https://api.github.com/repos/matiascelasco/hermes", "Date": "2015-11-04T18:29:46Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m.find()) { name = m.replaceFirst(\"? \"); pn.setType(NameType.PLACEHOLDER); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6442/buggy-version/name-parser.src.main.java.org.gbif.nameparser.NameParserGBIF.java", "BodyUseAPI": ["java.util.regex.Matcher.replaceFirst(java.lang.String)"], "Fixed commit": "f6b3d38e49e1bb07ba0a9ec0ba1636847c2a2cbd", "Url": "https://api.github.com/repos/gbif/name-parser", "Date": "2017-12-13T10:26:35Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBluetoothGatt) != null) mBluetoothGatt.discoverServices();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3699/buggy-version/NurApiAndroid.nurapiandroid.src.main.java.com.nordicid.nurapi.UartService.java", "BodyUseAPI": [], "Fixed commit": "b24a361a472098c17496e2330acb48b9cb1ff39a", "Url": "https://api.github.com/repos/NordicID/nur_sample_android", "Date": "2016-11-07T09:21:52Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBluetoothGatt) != null) mBluetoothGatt.discoverServices();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3699/buggy-version/NurApiAndroid.nurapiandroid.src.main.java.com.nordicid.nurapi.UartService.java", "BodyUseAPI": [], "Fixed commit": "b24a361a472098c17496e2330acb48b9cb1ff39a", "Url": "https://api.github.com/repos/NordicID/nur_sample_android", "Date": "2016-11-07T09:21:52Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dimensionName.equals(Column.TIME_COLUMN_NAME)) { return new io.druid.segment.StringDimensionHandler(dimensionName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/502/buggy-version/processing.src.main.java.io.druid.segment.DimensionHandlerUtil.java", "BodyUseAPI": [], "Fixed commit": "856b03a7ed35b86f53ae33b23c8b164d78c7f4af", "Url": "https://api.github.com/repos/jon-wei/druid", "Date": "2016-11-12T01:10:51Z"},
{"Line": "=>1344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tileentity instanceof net.minecraft.src.TileEntityPiston) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/598/buggy-version/src.minecraft.net.minecraft.src.World.java", "BodyUseAPI": [], "Fixed commit": "886e6d946568755d762f8ed5fad47de608ce4ffb", "Url": "https://api.github.com/repos/dotblank/Spoutcraft", "Date": "2011-10-17T23:23:23Z"},
{"Line": "=>474", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(tileentity.isInvalid())) { TileEntityRenderer.instance.renderTileEntity(tileentity, var3); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/598/buggy-version/src.minecraft.net.minecraft.src.RenderGlobal.java", "BodyUseAPI": ["TileEntityRenderer.instance.renderTileEntity(net.minecraft.src.TileEntity,float)"], "Fixed commit": "886e6d946568755d762f8ed5fad47de608ce4ffb", "Url": "https://api.github.com/repos/dotblank/Spoutcraft", "Date": "2011-10-17T23:23:23Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jp.getCurrentToken()) == (org.codehaus.jackson.JsonToken.START_ARRAY)) { jp.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4392/buggy-version/extensions.bundles.opendaylight.vtn.src.main.java.org.opennaas.extensions.opendaylight.vtn.protocol.client.serializers.json.deserialize.vBridgeInterfacesWrapperJSONDeserializer.java", "BodyUseAPI": ["org.codehaus.jackson.JsonParser.nextToken()"], "Fixed commit": "37c55be861026d91893db79fe6c9b78af168d12d", "Url": "https://api.github.com/repos/dana-i2cat/opennaas-routing-nfv", "Date": "2014-04-14T15:07:28Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jp.getCurrentToken()) == (org.codehaus.jackson.JsonToken.START_ARRAY)) { jp.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4392/buggy-version/extensions.bundles.opendaylight.vtn.src.main.java.org.opennaas.extensions.opendaylight.vtn.protocol.client.serializers.json.deserialize.vLinksWrapperJSONDeserializer.java", "BodyUseAPI": ["org.codehaus.jackson.JsonParser.nextToken()"], "Fixed commit": "37c55be861026d91893db79fe6c9b78af168d12d", "Url": "https://api.github.com/repos/dana-i2cat/opennaas-routing-nfv", "Date": "2014-04-14T15:07:28Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jp.getCurrentToken()) == (org.codehaus.jackson.JsonToken.START_ARRAY)) { jp.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4392/buggy-version/extensions.bundles.opendaylight.vtn.src.main.java.org.opennaas.extensions.opendaylight.vtn.protocol.client.serializers.json.deserialize.vBridgesWrapperJSONDeserializer.java", "BodyUseAPI": ["org.codehaus.jackson.JsonParser.nextToken()"], "Fixed commit": "37c55be861026d91893db79fe6c9b78af168d12d", "Url": "https://api.github.com/repos/dana-i2cat/opennaas-routing-nfv", "Date": "2014-04-14T15:07:28Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jp.getCurrentToken()) == (org.codehaus.jackson.JsonToken.START_ARRAY)) { jp.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4392/buggy-version/extensions.bundles.opendaylight.vtn.src.main.java.org.opennaas.extensions.opendaylight.vtn.protocol.client.serializers.json.deserialize.LogicalPortsWrapperJSONDeserializer.java", "BodyUseAPI": ["org.codehaus.jackson.JsonParser.nextToken()"], "Fixed commit": "37c55be861026d91893db79fe6c9b78af168d12d", "Url": "https://api.github.com/repos/dana-i2cat/opennaas-routing-nfv", "Date": "2014-04-14T15:07:28Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jp.getCurrentToken()) == (org.codehaus.jackson.JsonToken.START_ARRAY)) { jp.nextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4392/buggy-version/extensions.bundles.opendaylight.vtn.src.main.java.org.opennaas.extensions.opendaylight.vtn.protocol.client.serializers.json.deserialize.BoundaryWrapperJSONDeserializer.java", "BodyUseAPI": ["org.codehaus.jackson.JsonParser.nextToken()"], "Fixed commit": "37c55be861026d91893db79fe6c9b78af168d12d", "Url": "https://api.github.com/repos/dana-i2cat/opennaas-routing-nfv", "Date": "2014-04-14T15:07:28Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((context.getAxis()) == (org.olap4j.Axis.ROWS)) { styleClass = rowTitleStyleClass; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5690/buggy-version/src.main.java.com.eyeq.pivot4j.ui.html.HtmlRenderer.java", "BodyUseAPI": [], "Fixed commit": "173e4d4f0d4e40a3739f2774dd478a9e52cc9e89", "Url": "https://api.github.com/repos/mysticfall/pivot4j", "Date": "2013-03-04T16:21:04Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(item.isDisposed())) { item.setText(2, ri.getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8962/buggy-version/plugins.org.jkiss.dbeaver.core.src.org.jkiss.dbeaver.ui.controls.ScriptSelectorPanel.java", "BodyUseAPI": ["org.jkiss.dbeaver.ui.controls.TreeItem.setText(int,ri.getDescription())"], "Fixed commit": "51383aff5941a00df841dcfdb6342b8fd8efebac", "Url": "https://api.github.com/repos/dbeaver/dbeaver", "Date": "2016-01-28T19:02:11Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (field.getType().getName().toLowerCase().contains(\"boolean\")) { value = obj.optBoolean(name); }else if (field.getType().getName().toLowerCase().contains(\"double\")) { double doubleValue = obj.optDouble(name); if (java.lang.Double.isNaN(doubleValue)) { value = 0; }else { value = doubleValue; } }else { value = obj.opt(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/857/buggy-version/app.src.main.java.com.stevenfu.warehouse.base.Entity.java", "BodyUseAPI": ["java.lang.Class<?>.getName()", "java.lang.String.contains(java.lang.String)", "java.lang.reflect.Field.getType()", "java.lang.String.toLowerCase()"], "Fixed commit": "87b38ca958461fcb19f5f9ab677f385e2b66d777", "Url": "https://api.github.com/repos/ddssssdd/warehouse2", "Date": "2017-07-29T07:25:22Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (logger.isDebugEnabled()) { logger.debug((name + \" returned null from preSend, i.e. precluding the send.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1666/buggy-version/spring-messaging.src.main.java.org.springframework.messaging.support.AbstractMessageChannel.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "f8e45472288f486c892e29f5aef246e6046ebd45", "Url": "https://api.github.com/repos/mosoft521/spring-framework", "Date": "2014-07-10T19:55:27Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isShowingDetail) { showDetail(); }else { showSurface(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/377/buggy-version/core.src.main.java.com.dt.lib.core.SlideMoreLayout.java", "BodyUseAPI": [], "Fixed commit": "4092e792f156766c46c1144d5dd7ef0bf3e7846c", "Url": "https://api.github.com/repos/fwh007/SlideMoreLayout", "Date": "2016-08-06T01:58:14Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.DataAccessor.getUserAuthorList(com.pratilipi.filter.AccessTokenFilter.getAccessToken().getUserId(),java.util.List<java.lang.Long>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((userAuthorList.size()) != 0) for (int i = 0; i < (authorIdList.size()); i++) if (((userAuthorList.get(i)) != null) && (userAuthorList.get(i).isFollowing())) authorDataList.get(i).setFollowing(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3074/buggy-version/src.main.java.com.pratilipi.data.util.UserAuthorDataUtil.java", "BodyUseAPI": ["java.util.List<com.pratilipi.data.type.UserAuthor>.get(int)", "userAuthorList.get(i).isFollowing()", "java.util.List<com.pratilipi.data.type.UserAuthor>.get(int)"], "Fixed commit": "f4e28cfe0aa629617704333ba23fcc60fcbeb1d1", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-07-15T10:47:15Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.chalmers.tendu.network.bluetooth.clicklinkcompete.ConnectionService.kryoFactory()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((tempKryo != null) && ((out) != null)) { tempKryo.writeObject(out, message); out.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2777/buggy-version/Tendu-android.src.it.chalmers.tendu.network.bluetooth.clicklinkcompete.ConnectionService.java", "BodyUseAPI": ["com.esotericsoftware.kryo.Kryo.writeObject(com.esotericsoftware.kryo.io.Output,it.chalmers.tendu.tbd.EventMessage)"], "Fixed commit": "4b8a21428900eb7e06403b55080c208ef7343d5b", "Url": "https://api.github.com/repos/tortal/IT2-LP1-Tendu", "Date": "2013-10-18T08:28:36Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getDamager()) instanceof org.bukkit.entity.Projectile) { event.getDamager().remove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2366/buggy-version/src.main.java.org.bitbucket.ucchy.sl.StandLockListener.java", "BodyUseAPI": ["event.getDamager().remove()", "org.bukkit.event.entity.EntityDamageByEntityEvent.getDamager()"], "Fixed commit": "ea62a808f76ed72c27e2412bc1d6ddcd9ce779d6", "Url": "https://api.github.com/repos/ucchyocean/StandLock", "Date": "2016-04-02T08:53:55Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((boards[activeBoard].getHeight()) > ((y + 1) * (px))) { bot = boards[activeBoard].getSubimage(0, ((y + 1) * (px)), boards[activeBoard].getWidth(), ((boards[activeBoard].getHeight()) - ((y + 1) * (px)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8322/buggy-version/src.main.java.github.iruuunechka.view.TetrisViewImpl.java", "BodyUseAPI": ["java.awt.image.BufferedImage.getHeight()", "java.awt.image.BufferedImage.getSubimage(int,int,int,int)", "java.awt.image.BufferedImage.getWidth()"], "Fixed commit": "2aee43a0b2f19a1abf0af499ea3a46bf366ac3f3", "Url": "https://api.github.com/repos/iruuunechka/Tetris", "Date": "2013-09-01T17:58:10Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bot != null) { g.drawImage(bot, null, 0, ((y + 1) * (px))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8322/buggy-version/src.main.java.github.iruuunechka.view.TetrisViewImpl.java", "BodyUseAPI": ["java.awt.Graphics2D.drawImage(java.awt.image.BufferedImage,<nulltype>,int,int)"], "Fixed commit": "2aee43a0b2f19a1abf0af499ea3a46bf366ac3f3", "Url": "https://api.github.com/repos/iruuunechka/Tetris", "Date": "2013-09-01T17:58:10Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (deltaHistory != null) { for (org.waveprotocol.box.server.waveserver.ByteStringMessage<org.waveprotocol.wave.federation.Proto.ProtocolAppliedWaveletDelta> d : deltaHistory) { deltaHistoryBytes.add(d.getByteString()); } }else { org.waveprotocol.box.server.waveserver.WaveServerImpl.LOG.info(\"deltaHistory = null. Is this the start of a new wave?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8732/buggy-version/src.org.waveprotocol.box.server.waveserver.WaveServerImpl.java", "BodyUseAPI": [], "Fixed commit": "6c77ed757b672474f0baafbf57ec6677ebd00553", "Url": "https://api.github.com/repos/alown/wave", "Date": "2012-09-18T20:58:15Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((converter) != null) { o = converter.serialize(entity); }else { o = field.get(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/9052/buggy-version/src.main.java.io.innerloop.neo4j.ogm.impl.metadata.PropertyMetadata.java", "BodyUseAPI": [], "Fixed commit": "6101f67fe4d4136b978cac76982697a6c3f97272", "Url": "https://api.github.com/repos/mangrish/java-neo4j-ogm", "Date": "2015-03-24T04:26:18Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.dashboard.ui.controller.RequestContext.getCurrentContext().getRequest().getRequestObject()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (request != null) { return ((request.getContextPath()) + \"/\") + (org.jboss.dashboard.ui.components.URLMarkupGenerator.COMMAND_RUNNER); }else { return org.jboss.dashboard.ui.components.URLMarkupGenerator.COMMAND_RUNNER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5520/buggy-version/modules.dashboard-ui.dashboard-ui-core.src.main.java.org.jboss.dashboard.ui.components.URLMarkupGenerator.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getContextPath()"], "Fixed commit": "76246ed7fe5151331fc965b2ed2e3d0da2dd3fbb", "Url": "https://api.github.com/repos/droolsjbpm/dashboard-builder", "Date": "2013-03-22T12:44:40Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((u == null) || (v == null)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3000/buggy-version/src.GraphProcessor.java", "BodyUseAPI": [], "Fixed commit": "3b1b3bfa33a74e815a74cbc907a3e581b7edbd85", "Url": "https://api.github.com/repos/ekuntz11/coms311-project-two", "Date": "2017-11-14T19:25:18Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(de.terrestris.momo.util.security.MomoSecurityUtil.isValidPassword(rawPassword))) { throw new java.lang.Exception(\"The given password does not fulfill the security requirements.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8206/buggy-version/src.main.java.de.terrestris.momo.service.MomoPasswordResetTokenService.java", "BodyUseAPI": [], "Fixed commit": "7841ad89e374de7f812d9cf456c12698ceaf9b26", "Url": "https://api.github.com/repos/terrestris/momo3-backend", "Date": "2017-09-13T13:18:58Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.toLowerCase().equals(\"reject_proposal\")) { return new jade.lang.acl.ACLMessage(jade.lang.acl.ACLMessage.REJECT_PROPOSAL); }else if (p.toLowerCase().equals(\"query_if\")) { return new jade.lang.acl.ACLMessage(jade.lang.acl.ACLMessage.QUERY_IF); }else if (p.toLowerCase().equals(\"inform_if\")) { return new jade.lang.acl.ACLMessage(jade.lang.acl.ACLMessage.INFORM_IF); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2439/buggy-version/src.main.java.jason.infra.jade.JadeAg.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.lang.String.toLowerCase()", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "bf3293fc6edaa1072fd5f59ee260a31e372e8db5", "Url": "https://api.github.com/repos/jason-lang/jason", "Date": "2016-10-02T18:57:33Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entity.worldObj.getBlockId(par2, 250, par4)) == 7) { entity.worldObj.setBlock(par2, 250, par4, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/435/buggy-version/src.main.java.vazkii.tinkerer.common.block.kami.BlockBedrockPortal.java", "BodyUseAPI": ["entity.worldObj.setBlock(int,int,int,int)"], "Fixed commit": "c3d0f51873187c2486e2583c4691044a8396dcf9", "Url": "https://api.github.com/repos/Thaumic-Tinkerer/ThaumicTinkerer", "Date": "2014-03-23T02:02:29Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.blackout.paidupdater.Packages.PackageAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(data.icon.isEmpty())) { android.app.FragmentManager fragmentManager = getFragmentManager(); fragmentManager.beginTransaction().replace(R.id.container, com.blackout.paidupdater.Packages.PackageDetailsFragment.newInstance(data.title, data.icon, data.md5, data.download, data.preview, data.description)).addToBackStack(null).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4181/buggy-version/app.src.main.java.com.blackout.paidupdater.Packages.PackageListFragment.java", "BodyUseAPI": ["fragmentManager.beginTransaction().replace(R.id.container, com.blackout.paidupdater.Packages.PackageDetailsFragment.newInstance(data.title, data.icon, data.md5, data.download, data.preview, data.description)).addToBackStack(null).commit()", "com.blackout.paidupdater.Packages.PackageDetailsFragment.newInstance(data.title,data.icon,data.md5,data.download,data.preview,data.description)", "fragmentManager.beginTransaction().replace(R.id.container, com.blackout.paidupdater.Packages.PackageDetailsFragment.newInstance(data.title, data.icon, data.md5, data.download, data.preview, data.description)).addToBackStack(<nulltype>)", "fragmentManager.beginTransaction().replace(R.id.container,com.blackout.paidupdater.Packages.PackageDetailsFragment.newInstance(data.title, data.icon, data.md5, data.download, data.preview, data.description))"], "Fixed commit": "00f1749d87d8bee9d9fa0b4efc97a67557b9fb60", "Url": "https://api.github.com/repos/mrbirdman/TeamBlackOut", "Date": "2014-02-24T05:26:02Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.FragmentManager.findFragmentByTag(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (fragment != null) { fm.beginTransaction().remove(fragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4877/buggy-version/app.src.main.java.ru.android.ainege.shoppinglist.ui.activities.SingleFragmentActivity.java", "BodyUseAPI": ["fm.beginTransaction().remove(fragment).commit()", "fm.beginTransaction().remove(android.app.Fragment)"], "Fixed commit": "612c66f7f6488272155f127801f7defbb7901f5b", "Url": "https://api.github.com/repos/Ainege/ShoppingList", "Date": "2016-08-25T08:20:27Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Node.getNodeValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(args.isEmpty())) { arguments.add(args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8329/buggy-version/src.main.java.it.unibo.alchemist.language.EnvironmentBuilder.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "5b23ad083b621311801fac9a867571a19c542509", "Url": "https://api.github.com/repos/DanySK/alchemist-implementationbase", "Date": "2015-02-09T20:37:51Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (filterCriteria != null) { for (java.lang.Object entryObject : filterCriteria.keySet()) { java.lang.String entry = entryObject.toString(); if ((entry.startsWith(\"sort-\")) && ((columnMapping.get(entry.substring(5))) != null)) sortOrder = (sortOrder.toString().equals(\"\")) ? sortOrder.append(columnMapping.get(entry.substring(5)).toString()).append(\" \").append(((java.lang.String[]) (filterCriteria.get(entry)))[0]) : sortOrder.append(\",\").append(columnMapping.get(entry.substring(5)).toString()).append(\" \").append(((java.lang.String[]) (filterCriteria.get(entry)))[0]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6421/buggy-version/modules.report.src.main.java.org.openlmis.report.builder.QueryHelpers.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.util.Map.keySet()", "java.util.Map.get(java.lang.String)", "java.util.Map.get(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "9686149af978a10ccfa5f7f71b94afcab6cfcea4", "Url": "https://api.github.com/repos/USAID-DELIVER-PROJECT/elmis", "Date": "2014-03-10T16:37:00Z"},
{"Line": "=>859", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (chr.isHardcoreDead()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/758/buggy-version/src.tools.MaplePacketCreator.java", "BodyUseAPI": [], "Fixed commit": "78ae422cc443adbcf9a6ec436b2b2902607259f2", "Url": "https://api.github.com/repos/aaronweiss74/Orpheus", "Date": "2012-05-29T18:59:33Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((identificationParametersInputBean.getDestinationFile()) != null) { return identificationParametersInputBean.getDestinationFile(); }else { return identificationParametersInputBean.getInputFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4727/buggy-version/src.main.java.eu.isas.searchgui.cmd.SearchCLIInputBean.java", "BodyUseAPI": ["com.compomics.util.experiment.identification.parameters_cli.IdentificationParametersInputBean.getDestinationFile()", "com.compomics.util.experiment.identification.parameters_cli.IdentificationParametersInputBean.getInputFile()"], "Fixed commit": "3590a07dfa755136895ec378adbfdf41e75e9da2", "Url": "https://api.github.com/repos/compomics/searchgui", "Date": "2016-01-21T14:20:43Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rr.getName().equals(\"PI\"))) { researcherRoles.put(rr.getId(), rr.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3969/buggy-version/src.main.java.pm.controller.CreateRPLinkController.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.String>.put(rr.getId(),rr.getName())", "pm.pojo.ResearcherRole.getName()", "pm.pojo.ResearcherRole.getId()"], "Fixed commit": "d26d0c9ab0c93f7e0286a3c8b0f165984cc22f29", "Url": "https://api.github.com/repos/nesi/projectdb-webapp", "Date": "2013-08-11T23:12:52Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rr.getName().equals(\"PI\")) { researcherRoles.put(rr.getId(), rr.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3969/buggy-version/src.main.java.pm.controller.CreateProjectController.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, java.lang.String>.put(rr.getId(),rr.getName())", "pm.pojo.ResearcherRole.getId()", "pm.pojo.ResearcherRole.getName()"], "Fixed commit": "d26d0c9ab0c93f7e0286a3c8b0f165984cc22f29", "Url": "https://api.github.com/repos/nesi/projectdb-webapp", "Date": "2013-08-11T23:12:52Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (charset == null) { charset = \"UTF-8\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3176/buggy-version/chubot-spider.src.main.java.cmri.etl.downloader.HttpClientDownloader.java", "BodyUseAPI": [], "Fixed commit": "24d188c6288bed1999c1ab9a8b4ddc4eb32ef8f2", "Url": "https://api.github.com/repos/chookin/chubot", "Date": "2016-05-09T03:58:44Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(item.has(\"source\"))) { item.put(\"source\", ((bindPath + \".\") + (item.getString(\"name\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5885/buggy-version/opensrp-app.src.main.java.org.ei.opensrp.util.FormUtils.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,((bindPath + \".\") + (item.getString(\"name\"))))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "2ae461dd96729552cc8a7ade2ece7a60e8d6ed3b", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client", "Date": "2015-11-27T06:34:58Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(item.has(\"source\"))) { field.put(\"source\", ((bindPath + \".\") + (item.getString(\"name\")))); }else { field.put(\"source\", ((bindPath + \".\") + (item.getString(\"source\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5885/buggy-version/opensrp-app.src.main.java.org.ei.opensrp.util.FormUtils.java", "BodyUseAPI": ["org.json.JSONObject.put(java.lang.String,((bindPath + \".\") + (item.getString(\"source\"))))", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.put(java.lang.String,((bindPath + \".\") + (item.getString(\"name\"))))", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "2ae461dd96729552cc8a7ade2ece7a60e8d6ed3b", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client", "Date": "2015-11-27T06:34:58Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((arguments.getBranchName()) != null) && (!(arguments.getBranchName().isEmpty()))) { proctor.checkoutBranch(arguments.getBranchName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/9049/buggy-version/proctor-builder.src.main.java.com.indeed.proctor.builder.GitLocalProctorBuilder.java", "BodyUseAPI": ["com.indeed.proctor.store.GitProctor.checkoutBranch(java.lang.String)", "com.indeed.proctor.builder.GitLocalProctorBuilder.GitLocalProctorBuilderArgs.getBranchName()"], "Fixed commit": "c7daf7952c92b788c54ca735b9f8dce8c9ce37c8", "Url": "https://api.github.com/repos/jdcheng/proctor-git", "Date": "2014-07-15T15:33:51Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (results.hasOption(\"branch\")) { this.branchName = results.getOptionValue(\"branch\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/9049/buggy-version/proctor-builder.src.main.java.com.indeed.proctor.builder.GitLocalProctorBuilder.java", "BodyUseAPI": ["org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)"], "Fixed commit": "c7daf7952c92b788c54ca735b9f8dce8c9ce37c8", "Url": "https://api.github.com/repos/jdcheng/proctor-git", "Date": "2014-07-15T15:33:51Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(idsRetrievedFromMelodySearch.equals(\"\"))) { sqlFilter = (\" WHERE scr.score_id IN (\" + idsRetrievedFromMelodySearch) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1275/buggy-version/wmss.src.de.wwu.wmss.factory.FactoryWMSS.java", "BodyUseAPI": [], "Fixed commit": "2a3c34b26f332a231eb257ba6d08ba052cbe9db5", "Url": "https://api.github.com/repos/jimjonesbr/wmss", "Date": "2017-11-17T16:19:51Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initialized) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1140/buggy-version/xmvn-core.src.main.java.org.fedoraproject.xmvn.resolver.impl.depmap.DefaultDependencyMap.java", "BodyUseAPI": [], "Fixed commit": "3e904547d79e13e3aaa82e4a4234ec2d728d7704", "Url": "https://api.github.com/repos/mbooth101/xmvn", "Date": "2014-06-04T10:05:48Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.omertron.thetvdbapi.TheTVDBApi.getSeries(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNumeric(tvdbSeries.getRating())) { try { series.addRating(com.yamj.core.service.plugin.TheTVDbScanner.TVDB_SCANNER_ID, ((int) ((java.lang.Float.parseFloat(tvdbSeries.getRating())) * 10))); } catch (java.lang.NumberFormatException nfe) { com.yamj.core.service.plugin.TheTVDbScanner.LOG.warn(\"Failed to convert TVDB rating '{}' to an integer, error: {}\", tvdbSeries.getRating(), nfe.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1651/buggy-version/yamj3-core.src.main.java.com.yamj.core.service.plugin.TheTVDbScanner.java", "BodyUseAPI": ["com.yamj.core.database.model.Series.addRating(java.lang.String,((int) ((java.lang.Float.parseFloat(tvdbSeries.getRating())) * 10)))", "java.lang.Float.parseFloat(tvdbSeries.getRating())", "com.yamj.core.database.model.Series.getRating()", "com.yamj.core.database.model.Series.getRating()", "org.slf4j.Logger.warn(java.lang.String,tvdbSeries.getRating(),java.lang.String)"], "Fixed commit": "700ca1e24f606858985feaf3f64b23356dbdd8f4", "Url": "https://api.github.com/repos/YAMJ/yamj-v3", "Date": "2013-05-26T11:09:23Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xuemiao.model.repository.WeekPlanRepository.getLatestWeekPlan()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (latestWeekPlanTime == null) { injectWeekPlan(); }else { org.joda.time.DateTime latest = new org.joda.time.DateTime(latestWeekPlanTime.getTime()); if (!(((latest.getWeekyear()) == (startTime.getWeekyear())) && ((latest.getWeekOfWeekyear()) == (startTime.getWeekOfWeekyear())))) { injectWeekPlan(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6494/buggy-version/src.main.java.com.xuemiao.service.ScheduleTaskService.java", "BodyUseAPI": ["java.sql.Timestamp.getTime()"], "Fixed commit": "caaf2b64e6b8f372eba0dbc5ad3f9e0e552bc3b0", "Url": "https://api.github.com/repos/zijundeng/signing-in-system", "Date": "2017-07-15T07:42:35Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (xOffsetStep > 0.0F) { mOffsetsDetector.setScreens(((int) (1.0F / xOffsetStep))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4263/buggy-version/app.src.main.java.fr.ravenfeld.example.livewallpaper.Wallpaper.java", "BodyUseAPI": ["fr.ravenfeld.example.livewallpaper.gesture.OffsetsDetector.setScreens(float)"], "Fixed commit": "2c54e0952c4c69f212648a417bb62ca3b8c5bd56", "Url": "https://api.github.com/repos/ravenfeld/LiveWallpaperSimulateOffsetsChanged", "Date": "2014-03-24T11:25:15Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xOffset != 0.5F) { mScrollingWorking = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4263/buggy-version/app.src.main.java.fr.ravenfeld.example.livewallpaper.Wallpaper.java", "BodyUseAPI": [], "Fixed commit": "2c54e0952c4c69f212648a417bb62ca3b8c5bd56", "Url": "https://api.github.com/repos/ravenfeld/LiveWallpaperSimulateOffsetsChanged", "Date": "2014-03-24T11:25:15Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getChildAt(i).getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (height < 16) height = 16;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4122/buggy-version/src.main.java.net.earthcomputer.easyeditors.gui.command.slot.CommandSlotRadioList.java", "BodyUseAPI": [], "Fixed commit": "46cbaa710a92cf96efba10c5e2d3b59d4c201b4a", "Url": "https://api.github.com/repos/Earthcomputer/Easy-Editors", "Date": "2016-02-06T13:34:09Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.earthcomputer.easyeditors.gui.command.slot.CommandSlotRadioList.getYOfChild(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (top > (buttonTops[i])) top = buttonTops[i];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4122/buggy-version/src.main.java.net.earthcomputer.easyeditors.gui.command.slot.CommandSlotRadioList.java", "BodyUseAPI": [], "Fixed commit": "46cbaa710a92cf96efba10c5e2d3b59d4c201b4a", "Url": "https://api.github.com/repos/Earthcomputer/Easy-Editors", "Date": "2016-02-06T13:34:09Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jp.gecko655.bot.fujimiya.FujimiyaReply.getMentionsTimeline(new twitter4j.Paging().count(20))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (replies.isEmpty()) { logger.log(java.util.logging.Level.INFO, \"Not yet replied. Stop.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2680/buggy-version/src.main.java.jp.gecko655.bot.fujimiya.FujimiyaReply.java", "BodyUseAPI": [], "Fixed commit": "5f65868f07af01d83557a3d71f779073c95e04bd", "Url": "https://api.github.com/repos/gecko655/fujimiya", "Date": "2015-04-29T11:54:12Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rs.next()) { trait.setId(((rs.getInt(\"maxid\")) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2417/buggy-version/src.de.pitchMen.server.db.TraitMapper.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(java.lang.String)", "de.pitchMen.shared.bo.Trait.setId(int)"], "Fixed commit": "00097cd716467b489696597f318a612db518b38a", "Url": "https://api.github.com/repos/EleonoraRenz/PitchMen_ITProjektSS17", "Date": "2017-06-17T10:21:57Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.acker.speedshow.MyWindowManager.mobileRecvSpeed) >= 0) { com.acker.speedshow.MyWindowManager.tvMobileRx.setText(com.acker.speedshow.MyWindowManager.showSpeed(com.acker.speedshow.MyWindowManager.mobileRecvSpeed)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2766/buggy-version/SpeedShow.src.com.acker.speedshow.MyWindowManager.java", "BodyUseAPI": [], "Fixed commit": "e7bea24d9287ab96cd72237df8c4339d8d1477e7", "Url": "https://api.github.com/repos/GuoJinyu/AndroidNetworkSpeed", "Date": "2015-03-31T06:58:22Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.acker.speedshow.MyWindowManager.wlanRecvSpeed) >= 0) { com.acker.speedshow.MyWindowManager.tvWlanRx.setText(com.acker.speedshow.MyWindowManager.showSpeed(com.acker.speedshow.MyWindowManager.wlanRecvSpeed)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2766/buggy-version/SpeedShow.src.com.acker.speedshow.MyWindowManager.java", "BodyUseAPI": [], "Fixed commit": "e7bea24d9287ab96cd72237df8c4339d8d1477e7", "Url": "https://api.github.com/repos/GuoJinyu/AndroidNetworkSpeed", "Date": "2015-03-31T06:58:22Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.acker.speedshow.MyWindowManager.mobileSendSpeed) >= 0) { com.acker.speedshow.MyWindowManager.tvMobileTx.setText(com.acker.speedshow.MyWindowManager.showSpeed(com.acker.speedshow.MyWindowManager.mobileSendSpeed)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2766/buggy-version/SpeedShow.src.com.acker.speedshow.MyWindowManager.java", "BodyUseAPI": [], "Fixed commit": "e7bea24d9287ab96cd72237df8c4339d8d1477e7", "Url": "https://api.github.com/repos/GuoJinyu/AndroidNetworkSpeed", "Date": "2015-03-31T06:58:22Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.acker.speedshow.MyWindowManager.wlanSendSpeed) >= 0) { com.acker.speedshow.MyWindowManager.tvWlanTx.setText(com.acker.speedshow.MyWindowManager.showSpeed(com.acker.speedshow.MyWindowManager.wlanSendSpeed)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2766/buggy-version/SpeedShow.src.com.acker.speedshow.MyWindowManager.java", "BodyUseAPI": [], "Fixed commit": "e7bea24d9287ab96cd72237df8c4339d8d1477e7", "Url": "https://api.github.com/repos/GuoJinyu/AndroidNetworkSpeed", "Date": "2015-03-31T06:58:22Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentPosition) != position) { android.os.Bundle arguments = new android.os.Bundle(); android.support.v4.app.Fragment fragment = frags[position]; fragment.setArguments(arguments); getSupportFragmentManager().beginTransaction().replace(R.id.quotation_edit_detail_container, fragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1112/buggy-version/app.src.main.java.com.ebaotech.salesplatform.ui.quotation.QuotationEditActivity.java", "BodyUseAPI": [], "Fixed commit": "ffdd72637faafd39b3bdf566979a42c0e6940ae4", "Url": "https://api.github.com/repos/HaydnChen/SalesPlatform-for-Android", "Date": "2016-03-17T15:43:18Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.restfb.JsonHelper.getStringFrom(jsonArray.get(i))", "com.restfb.Json.parse(json).asArray()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((jsonArray.get(i).isString()) && (innerJson.startsWith(\"[\"))) { innerJson = ('\"' + innerJson) + '\"'; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6416/buggy-version/source.library.com.restfb.DefaultJsonMapper.java", "BodyUseAPI": [], "Fixed commit": "b61643f6c5991310b72d8da13f8f2066940ad768", "Url": "https://api.github.com/repos/restfb/restfb", "Date": "2017-04-25T22:47:58Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((android.widget.EditText) (rootView.findViewById(R.id.newTitle))).getText().toString()", "((android.widget.EditText) (rootView.findViewById(R.id.giveTime))).getText().toString()", "((android.widget.EditText) (rootView.findViewById(R.id.giveDate))).getText().toString()", "((android.widget.EditText) (rootView.findViewById(R.id.newIngredients))).getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (filledInAllFields(title, date, time, ingredients)) { dinner.setTitle(title); dinner.setDate(((date + \" \") + time)); dinner.setIngredients(ingredients); nl.mprog.meeteat.DatabaseHandler databaseHandler = new nl.mprog.meeteat.DatabaseHandler(); databaseHandler.updateDinner(dinner, activity); }else { android.widget.Toast.makeText(activity, R.string.allFields, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5512/buggy-version/Meet-Eat.app.src.main.java.nl.mprog.meeteat.EditDinnerFragment.java", "BodyUseAPI": ["nl.mprog.meeteat.Dinner.setIngredients(java.lang.String)", "nl.mprog.meeteat.Dinner.setDate(java.lang.String)", "nl.mprog.meeteat.Dinner.setTitle(java.lang.String)"], "Fixed commit": "49ae2f44d40d22310aa7dd2822b155da0dd0fb69", "Url": "https://api.github.com/repos/tirzaelise/Meet-Eat", "Date": "2017-02-02T17:10:39Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count >= (maxLines)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2708/buggy-version/src.gui.Reader.java", "BodyUseAPI": [], "Fixed commit": "e2b7ef9f20fac3d48eab2179c154976177b20601", "Url": "https://api.github.com/repos/larskrjo/Online-Document-Aligner", "Date": "2011-12-04T18:07:44Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (chunkingSepBuffer.hasRemaining()) { lastChunkBuffer.put(chunkingSepBuffer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1058/buggy-version/core.src.main.java.io.undertow.conduits.ChunkedStreamSinkConduit.java", "BodyUseAPI": ["java.nio.ByteBuffer.put(java.nio.ByteBuffer)"], "Fixed commit": "aa316605d357a5aeedd77a2e5c5f3a2f05105936", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2014-04-28T18:05:53Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.evercam.Model.getByVendor(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(vendors.isEmpty())) { return io.evercam.Model.getByVendor(vendorId).get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7799/buggy-version/src.main.java.io.evercam.Vendor.java", "BodyUseAPI": [], "Fixed commit": "bbeba51a8ff5964846a03beecc50b435094c757b", "Url": "https://api.github.com/repos/evercam/evercam.java", "Date": "2014-03-26T14:47:18Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_mClosed.get()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3732/buggy-version/src.free.yhc.feeder.appwidget.ViewsFactory.java", "BodyUseAPI": [], "Fixed commit": "de74f4691c1cdeccc2b04af0ab3f70e581a4ef6a", "Url": "https://api.github.com/repos/yhcting/feedhive", "Date": "2013-08-23T12:34:02Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (ty != null) Bugs.LOG.log(binaryExpression.left.beginPosition, \"binary operation can be operated only between a float value and a non-float value\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3395/buggy-version/java.com.oblivm.compiler.type.source.TypeChecker.java", "BodyUseAPI": [], "Fixed commit": "fd16c11f0068ead28f0753efd581fecb6a446c9e", "Url": "https://api.github.com/repos/oblivm/ObliVMLang", "Date": "2015-09-25T14:18:12Z"},
{"Line": "=>491", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (ty != null) Bugs.LOG.log(binaryExpression.right.beginPosition, \"binary operation can be operated only between int values or float values\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3395/buggy-version/java.com.oblivm.compiler.type.source.TypeChecker.java", "BodyUseAPI": [], "Fixed commit": "fd16c11f0068ead28f0753efd581fecb6a446c9e", "Url": "https://api.github.com/repos/oblivm/ObliVMLang", "Date": "2015-09-25T14:18:12Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.edugility.maven.liquibase.AggregateChangeLogGenerator.getCharacterSet()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (characterSet == null) { characterSet = \"UTF-8\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/349/buggy-version/src.main.java.com.edugility.maven.liquibase.AggregateChangeLogGenerator.java", "BodyUseAPI": [], "Fixed commit": "f7c6d349a30d7e102aa884b194f12f42f867b7ef", "Url": "https://api.github.com/repos/ljnelson/maven-liquibase", "Date": "2014-10-18T05:50:32Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.edugility.maven.liquibase.AggregateChangeLogGenerator.getCharacterSet()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (characterSet == null) { characterSet = \"UTF-8\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/349/buggy-version/src.main.java.com.edugility.maven.liquibase.AggregateChangeLogGenerator.java", "BodyUseAPI": [], "Fixed commit": "f7c6d349a30d7e102aa884b194f12f42f867b7ef", "Url": "https://api.github.com/repos/ljnelson/maven-liquibase", "Date": "2014-10-18T05:50:32Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (input.startsWith(JavaDecompilerClassFileEditor.MARK)) { java.lang.String content = input.replace(JavaDecompilerClassFileEditor.MARK, \"\"); parser.setSource(content.toCharArray()); }else { parser.setSource(input.toCharArray()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8600/buggy-version/org.sf.feeling.decompiler.src.org.sf.feeling.decompiler.util.DecompilerOutputUtil.java", "BodyUseAPI": ["java.lang.String.replace(JavaDecompilerClassFileEditor.MARK,java.lang.String)", "java.lang.String.toCharArray()", "org.eclipse.jdt.core.dom.ASTParser.setSource(char[])"], "Fixed commit": "37145f51ea6b14c7c8caeafc2e476f3394ab670b", "Url": "https://api.github.com/repos/cnfree/Eclipse-Class-Decompiler", "Date": "2016-05-12T09:29:45Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["microbat.model.value.VarValue.getStringValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((childStringValue != null) && ((childStringValue.length()) > 300)) { childStringValue = childStringValue.substring(0, 300); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/215/buggy-version/microbat.src.main.microbat.codeanalysis.runtime.variable.VariableValueExtractor.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "bb2868a7fb969d3d727e7d1840657a76be71691d", "Url": "https://api.github.com/repos/llmhyy/microbat", "Date": "2016-08-01T14:51:36Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.eclipse.kura.core.ssl.SslManagerServiceImpl.isDefaultPassword(oldPassword)) { keystore = org.eclipse.kura.core.ssl.SslManagerServiceImpl.loadKeyStore(location, newPassword); }else { keystore = org.eclipse.kura.core.ssl.SslManagerServiceImpl.loadKeyStore(location, oldPassword); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2358/buggy-version/kura.org.eclipse.kura.core.src.main.java.org.eclipse.kura.core.ssl.SslManagerServiceImpl.java", "BodyUseAPI": ["org.eclipse.kura.core.ssl.SslManagerServiceImpl.loadKeyStore(java.lang.String,char[])"], "Fixed commit": "35cd30d8e7e0193bf8ea8ab5caca6a73856bf4cc", "Url": "https://api.github.com/repos/eclipse/kura", "Date": "2015-06-24T12:36:31Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation.equals(\"Unsatisfactory\")) { transaction.endPOS(databaseFile); javax.swing.JOptionPane.showMessageDialog(null, \"Returning items is complete\"); POSSystem sys = new POSSystem(); Cashier_Interface cashier = new Cashier_Interface(sys); cashier.setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE); cashier.setVisible(true); }else { Payment_Interface payment = new Payment_Interface(transaction, databaseFile, operation, phone); payment.setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE); payment.setVisible(true); this.setVisible(false); this.dispose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2653/buggy-version/src.Transaction_Interface.java", "BodyUseAPI": [], "Fixed commit": "d84b4c1ff17cdeed288fe46e7055114cac374a0f", "Url": "https://api.github.com/repos/rafbel/Point-of-Sale-System", "Date": "2015-11-20T02:53:54Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, eu.factorx.awac.models.knowledge.UnitCategory>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (category == null) { play.Logger.warn(\"No unit category defined for unit with symbol: '{}'!\", symbol); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8725/buggy-version/app.eu.factorx.awac.util.data.importer.MyrmexUnitsImporter.java", "BodyUseAPI": [], "Fixed commit": "45055fa748d400a51606052a1ea5269a78f956c2", "Url": "https://api.github.com/repos/Factor-X/awac", "Date": "2014-08-19T10:55:19Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == name) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1717/buggy-version/src.de.markiewb.netbeans.plugins.eclipse.formatter.EclipseFormatter.java", "BodyUseAPI": [], "Fixed commit": "81a18f9afef9e5c53eb4bd9e63f0b7afb875ff6d", "Url": "https://api.github.com/repos/markiewb/eclipsecodeformatter_for_netbeans", "Date": "2013-11-20T15:30:51Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (hopSteps)) counter++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7627/buggy-version/src.gtna.metrics.Routing_HopDegreeDistribution.java", "BodyUseAPI": [], "Fixed commit": "48cbd89d29bf3bf3565273a9f76ccda218e260d7", "Url": "https://api.github.com/repos/stef-roos/GTNA", "Date": "2012-01-19T21:30:19Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.debug.core.ILaunchConfigurationWorkingCopy.launch(ILaunchManager.RUN_MODE,org.eclipse.core.runtime.NullProgressMonitor,boolean,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((myLaunch.getProcesses().length) == 0) { org.erlide.util.ErlLogger.error(\"Tool process was not created?!\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7854/buggy-version/org.erlide.core.src.org.erlide.core.executor.ToolExecutor.java", "BodyUseAPI": [], "Fixed commit": "cb472dac347d68d308c015b6f192dab9a901272c", "Url": "https://api.github.com/repos/erlide/erlide", "Date": "2014-02-18T15:04:25Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.btu.openinfra.backend.db.daos.OpenInfraValueValueDao<TypePojo, TypeModel, TypeModelValue, TypeModelValue2>.read(<nulltype>,java.util.UUID,java.util.UUID,int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((readResult != null) && ((readResult.size()) == 1)) { deletedUuid = ((delete(readResult.get(0).getUuid())) == true) ? readResult.get(0).getUuid() : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6407/buggy-version/openinfra_core.src.main.java.de.btu.openinfra.backend.db.daos.OpenInfraValueValueDao.java", "BodyUseAPI": ["java.util.List<TypePojo>.get(int)", "TypePojo.getUuid()", "de.btu.openinfra.backend.db.daos.OpenInfraValueValueDao<TypePojo, TypeModel, TypeModelValue, TypeModelValue2>.delete(readResult.get(0).getUuid())", "TypePojo.getUuid()", "java.util.List<TypePojo>.get(int)"], "Fixed commit": "77be453cb76c6aaf82fc27d1843d17979b3dd9c2", "Url": "https://api.github.com/repos/OpenInfRA/core", "Date": "2015-11-12T08:36:55Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (categoryId != (com.liferay.portlet.messageboards.model.MBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID)) { com.liferay.portlet.messageboards.model.MBCategory category = mbCategoryPersistence.findByPrimaryKey(categoryId); groupId = category.getGroupId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8214/buggy-version/portal-impl.src.com.liferay.portlet.messageboards.service.impl.MBMessageLocalServiceImpl.java", "BodyUseAPI": ["com.liferay.portlet.messageboards.service.impl.MBMessageLocalServiceImpl.findByPrimaryKey(long)"], "Fixed commit": "899cf2513ef65f8ea7daba93447dd748bb2ebb92", "Url": "https://api.github.com/repos/BryanEngler/liferay-portal", "Date": "2014-06-17T13:30:29Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLocation) == null) { android.widget.Toast toast = android.widget.Toast.makeText(this, \"No last known location...\", Toast.LENGTH_LONG); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1056/buggy-version/app.src.main.java.h.group.sem.bumpingbike.UploadPositionActivity.java", "BodyUseAPI": [], "Fixed commit": "e76275d59c1430caceb14f1813a62b55070d901b", "Url": "https://api.github.com/repos/Declow/BumpingBike", "Date": "2017-11-19T20:59:25Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inMenu) { Gdx.app.exit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6312/buggy-version/sudokil.core.src.com.custardgames.sudokil.ui.EscapeMenu.java", "BodyUseAPI": [], "Fixed commit": "81f5d88979dc353818105d8bc98516b85673dfde", "Url": "https://api.github.com/repos/locknic/Sudokil", "Date": "2016-05-17T10:10:46Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((start > 0) || (end > (-1))) { java.lang.Integer startInteger = java.lang.Integer.valueOf(start); net.sf.mmm.util.value.api.ValueOutOfRangeException.checkRange(startInteger, java.lang.Integer.valueOf(0), java.lang.Integer.valueOf(end), \"start\"); net.sf.mmm.util.value.api.ValueOutOfRangeException.checkRange(java.lang.Integer.valueOf(end), java.lang.Integer.valueOf(start), max, \"end\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8379/buggy-version/mmm-util-core.src.main.java.net.sf.mmm.util.collection.base.ArrayIterator.java", "BodyUseAPI": [], "Fixed commit": "e43d5b1f76acee9859061a279d28afe41af7757b", "Url": "https://api.github.com/repos/m-m-m/util", "Date": "2016-01-02T21:31:41Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["prov.getAnnotationIntrospector().findFormat(((com.fasterxml.jackson.databind.introspect.Annotated) (property.getMember())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (format.hasTimeZone()) { dtf = dtf.withZone(format.getTimeZone().toZoneId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8717/buggy-version/src.main.java.com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase.java", "BodyUseAPI": ["format.getTimeZone().toZoneId()", "java.time.format.DateTimeFormatter.withZone(format.getTimeZone().toZoneId())", "JsonFormat.Value.getTimeZone()"], "Fixed commit": "567a78c7ecbd8bc45e2f1e4c720d892bf309891f", "Url": "https://api.github.com/repos/FasterXML/jackson-datatype-jsr310", "Date": "2016-03-28T12:44:00Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ctxt.getAnnotationIntrospector().findFormat(((com.fasterxml.jackson.databind.introspect.Annotated) (property.getMember())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (format.hasTimeZone()) { df = df.withZone(format.getTimeZone().toZoneId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8717/buggy-version/src.main.java.com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase.java", "BodyUseAPI": ["format.getTimeZone().toZoneId()", "JsonFormat.Value.getTimeZone()", "java.time.format.DateTimeFormatter.withZone(format.getTimeZone().toZoneId())"], "Fixed commit": "567a78c7ecbd8bc45e2f1e4c720d892bf309891f", "Url": "https://api.github.com/repos/FasterXML/jackson-datatype-jsr310", "Date": "2016-03-28T12:44:00Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.platymuus.bukkit.permissions.data.MongoData.getGroupObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (groupObject == null) return entries;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (oldValue == null) { newValue.put(\"permission\", permission); newValue.put(\"allowed\", value); worldPerms.add(newValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.platymuus.bukkit.permissions.data.DBCollection.findOne(com.platymuus.bukkit.permissions.data.BasicDBObject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (obj != null) return ((java.lang.String) (obj.get(\"name\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": ["com.platymuus.bukkit.permissions.data.DBObject.get(java.lang.String)"], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.platymuus.bukkit.permissions.data.MongoData.getGroupObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (groupObject == null) { logInfo((\"No such group: \" + group)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.platymuus.bukkit.permissions.data.MongoData.getGroupObject(java.lang.String)", "com.platymuus.bukkit.permissions.data.MongoData.getGroupObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((childObject == null) || (parentObject == null)) { logInfo(((((\"Group '\" + child) + \"' or '\") + parent) + \"' does not exist\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.equalsIgnoreCase(\"\")) world = \"@global\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>435", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.platymuus.bukkit.permissions.data.BasicDBObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (worldPerms == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getUserObject(user)) != null) { com.platymuus.bukkit.permissions.data.DBCollection usersCollection = db.getCollection(\"users\"); usersCollection.remove(new com.platymuus.bukkit.permissions.data.BasicDBObject().append(\"username\", user)); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": ["com.platymuus.bukkit.permissions.data.BasicDBObject.append(java.lang.String,java.lang.String)", "com.platymuus.bukkit.permissions.data.DBCollection.remove(new com.platymuus.bukkit.permissions.data.BasicDBObject().append(\"username\", user))"], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.platymuus.bukkit.permissions.data.MongoData.getUserObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (user != null) { com.platymuus.bukkit.permissions.data.BasicDBList groups = ((com.platymuus.bukkit.permissions.data.BasicDBList) (user.get(\"groups\"))); if (!(groups.contains(group.toLowerCase()))) { logInfo(\"User isn't in group yet, adding group\"); groups.add(group.toLowerCase()); com.platymuus.bukkit.permissions.data.BasicDBObject query = new com.platymuus.bukkit.permissions.data.BasicDBObject(\"username\", player); com.platymuus.bukkit.permissions.data.BasicDBObject update = new com.platymuus.bukkit.permissions.data.BasicDBObject(\"$set\", new com.platymuus.bukkit.permissions.data.BasicDBObject(\"groups\", groups)); db.getCollection(\"users\").update(query, update); return true; } }else { logInfo(\"No user found, creating new user record\"); user = new com.platymuus.bukkit.permissions.data.BasicDBObject(); user.put(\"username\", player); user.put(\"permissions\", new com.platymuus.bukkit.permissions.data.BasicDBObject()); com.platymuus.bukkit.permissions.data.BasicDBList groups = new com.platymuus.bukkit.permissions.data.BasicDBList(); groups.add(group.toLowerCase()); user.put(\"groups\", groups); db.getCollection(\"users\").insert(user); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": ["com.platymuus.bukkit.permissions.data.BasicDBObject.get(java.lang.String)"], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>391", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.equalsIgnoreCase(\"\")) { world = \"@global\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.platymuus.bukkit.permissions.data.MongoData.getGroupObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (groupObject == null) { logInfo((\"No such group: \" + group)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.platymuus.bukkit.permissions.data.DBObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (perms != null) { for (java.lang.Object perm : perms) { com.platymuus.bukkit.permissions.data.BasicDBObject permInfo = ((com.platymuus.bukkit.permissions.data.BasicDBObject) (perm)); entries.put(permInfo.getString(\"permission\"), permInfo.getBoolean(\"allowed\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.equalsIgnoreCase(\"\")) { world = \"@global\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.platymuus.bukkit.permissions.data.MongoData.getUserObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userObject == null) return entries;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.equalsIgnoreCase(\"\")) world = \"@global\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.platymuus.bukkit.permissions.data.BasicDBObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (groups == null) { groups = new com.platymuus.bukkit.permissions.data.BasicDBList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.platymuus.bukkit.permissions.data.MongoData.getGroupObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (groups.contains(groupObject.getString(\"lowercase_name\"))) { groups.remove(groupObject.getString(\"lowercase_name\")); com.platymuus.bukkit.permissions.data.BasicDBObject query = new com.platymuus.bukkit.permissions.data.BasicDBObject(\"username\", player); com.platymuus.bukkit.permissions.data.BasicDBObject update = new com.platymuus.bukkit.permissions.data.BasicDBObject(\"$set\", new com.platymuus.bukkit.permissions.data.BasicDBObject(\"groups\", groups)); db.getCollection(\"users\").update(query, update); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": ["com.platymuus.bukkit.permissions.data.BasicDBList.remove(groupObject.getString(\"lowercase_name\"))", "com.platymuus.bukkit.permissions.data.BasicDBObject.getString(java.lang.String)"], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.platymuus.bukkit.permissions.data.MongoData.getGroupObject(java.lang.String)", "com.platymuus.bukkit.permissions.data.MongoData.getGroupObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((childObject == null) || (parentObject == null)) { logInfo(((((\"Group '\" + child) + \"' or '\") + parent) + \"' does not exist\")); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (oldValue != null) { com.platymuus.bukkit.permissions.data.BasicDBObject query = new com.platymuus.bukkit.permissions.data.BasicDBObject(\"lowercase_name\", group.toLowerCase()); com.platymuus.bukkit.permissions.data.BasicDBObject update = new com.platymuus.bukkit.permissions.data.BasicDBObject(\"$set\", new com.platymuus.bukkit.permissions.data.BasicDBObject((\"permissions.\" + world), worldPerms)); db.getCollection(\"groups\").update(query, update); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.platymuus.bukkit.permissions.data.DBObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (perms != null) { for (java.lang.Object perm : perms) { com.platymuus.bukkit.permissions.data.BasicDBObject permInfo = ((com.platymuus.bukkit.permissions.data.BasicDBObject) (perm)); entries.put(permInfo.getString(\"permission\"), permInfo.getBoolean(\"allowed\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.platymuus.bukkit.permissions.data.BasicDBObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(parentGroups.contains(parent))) { parentGroups.add(parent); com.platymuus.bukkit.permissions.data.BasicDBObject query = new com.platymuus.bukkit.permissions.data.BasicDBObject(\"lowercase_name\", child.toLowerCase()); com.platymuus.bukkit.permissions.data.BasicDBObject update = new com.platymuus.bukkit.permissions.data.BasicDBObject(\"$set\", new com.platymuus.bukkit.permissions.data.BasicDBObject(\"inherits\", parentGroups)); db.getCollection(\"groups\").update(query, update); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": ["com.platymuus.bukkit.permissions.data.BasicDBList.add(java.lang.String)"], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.platymuus.bukkit.permissions.data.MongoData.getGroupObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (groupObject == null) { logInfo((\"No such group: \" + group)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.platymuus.bukkit.permissions.data.BasicDBObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (worldPerms == null) worldPerms = new com.platymuus.bukkit.permissions.data.BasicDBList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.platymuus.bukkit.permissions.data.BasicDBObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(parentGroups.contains(parent))) { parentGroups.remove(parent); com.platymuus.bukkit.permissions.data.BasicDBObject query = new com.platymuus.bukkit.permissions.data.BasicDBObject(\"lowercase_name\", child.toLowerCase()); com.platymuus.bukkit.permissions.data.BasicDBObject update = new com.platymuus.bukkit.permissions.data.BasicDBObject(\"$set\", new com.platymuus.bukkit.permissions.data.BasicDBObject(\"inherits\", parentGroups)); db.getCollection(\"groups\").update(query, update); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": ["com.platymuus.bukkit.permissions.data.BasicDBList.remove(java.lang.String)"], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.platymuus.bukkit.permissions.data.MongoData.getUserObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userObject == null) { logInfo((\"No such user: \" + player)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8944/buggy-version/src.main.java.com.platymuus.bukkit.permissions.data.MongoData.java", "BodyUseAPI": [], "Fixed commit": "9c63f7dfc15bd15d400869dd87718d9ad8076457", "Url": "https://api.github.com/repos/jfro/PermissionsBukkit", "Date": "2011-08-28T21:13:03Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dungeon.core.creatures.Hero.selectInventoryItem(java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (selectedItem != null) { if (selectedItem.isWeapon()) { equipWeapon(selectedItem); }else { org.dungeon.io.IO.writeString(\"You cannot equip that.\"); } }else { org.dungeon.io.IO.writeString(\"Item not found.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4779/buggy-version/src.org.dungeon.core.creatures.Hero.java", "BodyUseAPI": ["org.dungeon.core.items.Item.isWeapon()", "org.dungeon.core.creatures.Hero.equipWeapon(org.dungeon.core.items.Item)"], "Fixed commit": "be26e913d1769c4c8ee7d846dee8a0f6fc31c2f3", "Url": "https://api.github.com/repos/mafagafogigante/dungeon", "Date": "2014-09-24T00:57:36Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.util.JsonReader.nextName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (name.equals(\"sSearch\")) { name = \"Search\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7731/buggy-version/app.src.main.java.no.ntnu.hallvardpc.loadeddwarvendice.LoadValues.java", "BodyUseAPI": [], "Fixed commit": "4396572c4ead9336bcec0e72101bb7916d0761ab", "Url": "https://api.github.com/repos/ZookTheMagpie/LoadedDwarvenDice.Android", "Date": "2017-11-08T14:18:55Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getCourses().get(0).getStart1()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (time == (-1)) { time = temp; if (((c.getStart2()) != 9999) && ((c.getStart2()) != (-1))) { time = java.lang.Math.min(temp, c.getStart2()); } continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2152/buggy-version/app.src.main.java.uhmanoa.droid_sch.Schedule.java", "BodyUseAPI": [], "Fixed commit": "9ac1ae09bbf3564b4e6e9c083cf108a8a0e6755c", "Url": "https://api.github.com/repos/1andyn/droid_sch", "Date": "2015-04-12T06:04:59Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isDestroyed())) finish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2192/buggy-version/app.src.main.java.com.breadwallet.presenter.activities.PinActivity.java", "BodyUseAPI": [], "Fixed commit": "b245ae9c38c28973cc30eab6720138feaf517478", "Url": "https://api.github.com/repos/breadwallet/breadwallet-android", "Date": "2017-04-20T17:50:08Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.tileentity.TileEntity.getCapability(CapabilityUtil.CAPABILITY_CONSUMER,dir.getOpposite())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cons == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1663/buggy-version/src.main.java.rreeggkk.nuclearsciences.common.util.CompatUtil.java", "BodyUseAPI": [], "Fixed commit": "d30a4b554f9ca55aa8451d69e1790c7ab651266b", "Url": "https://api.github.com/repos/rreeggkk/NuclearSciences", "Date": "2016-08-28T01:32:25Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (seRule == null) { rule = \"\"; }else { rule = seRule; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7866/buggy-version/src.main.java.seedu.typed.storage.XmlAdaptedTask.java", "BodyUseAPI": [], "Fixed commit": "321b332d6a8e3ebeb314bccc8485350944ae1e94", "Url": "https://api.github.com/repos/CS2103JAN2017-W09-B2/main", "Date": "2017-04-09T23:42:36Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rule.equals(\"\")) { return new seedu.typed.schedule.ScheduleElement(date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7866/buggy-version/src.main.java.seedu.typed.schedule.ScheduleElement.java", "BodyUseAPI": [], "Fixed commit": "321b332d6a8e3ebeb314bccc8485350944ae1e94", "Url": "https://api.github.com/repos/CS2103JAN2017-W09-B2/main", "Date": "2017-04-09T23:42:36Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rule.equals(\"\")) { return new seedu.typed.schedule.ScheduleElement(startDate, endDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7866/buggy-version/src.main.java.seedu.typed.schedule.ScheduleElement.java", "BodyUseAPI": [], "Fixed commit": "321b332d6a8e3ebeb314bccc8485350944ae1e94", "Url": "https://api.github.com/repos/CS2103JAN2017-W09-B2/main", "Date": "2017-04-09T23:42:36Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.mapreduce.task.reduce.PaneSpeakerShuffle.computePaneRate(int,long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rate == (org.apache.hadoop.mapreduce.task.reduce.PaneSpeakerShuffle.baseRate)) { endtime = size / rate; if (endtime == 0) { endtime = 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3023/buggy-version/hadoop-mapreduce-project.hadoop-mapreduce-client.hadoop-mapreduce-client-core.src.main.java.org.apache.hadoop.mapreduce.task.reduce.PaneSpeakerShuffle.java", "BodyUseAPI": [], "Fixed commit": "a46b183802676e309e13eed0d41a27502a7ad955", "Url": "https://api.github.com/repos/brownsys/brownsys-hadoop", "Date": "2012-11-18T21:38:13Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkLeft) { uk.co.kiwisoft.tomtom.Node leftNode = nodes.get(leftNodeIndex); if ((leftNode.getColor()) == (node.getColor())) { partOfCountry = partOfCountry | (leftNode.isClaimed()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2142/buggy-version/app.src.main.java.uk.co.kiwisoft.tomtom.CountriesService.java", "BodyUseAPI": [], "Fixed commit": "388123b294cadf1560d0c68102e328a161d2394c", "Url": "https://api.github.com/repos/CanOrhan/CountryCounter", "Date": "2015-07-22T09:08:18Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkUp) { uk.co.kiwisoft.tomtom.Node upNode = nodes.get(upNodeIndex); if ((upNode.getColor()) == (node.getColor())) { partOfCountry = partOfCountry | (upNode.isClaimed()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2142/buggy-version/app.src.main.java.uk.co.kiwisoft.tomtom.CountriesService.java", "BodyUseAPI": [], "Fixed commit": "388123b294cadf1560d0c68102e328a161d2394c", "Url": "https://api.github.com/repos/CanOrhan/CountryCounter", "Date": "2015-07-22T09:08:18Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (name == null) name = ip;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8740/buggy-version/EliteEngine.src.server.ServerUpdater.java", "BodyUseAPI": [], "Fixed commit": "7b41cb8c634da6d07f99ca5ab60dfa5e507b77f3", "Url": "https://api.github.com/repos/Silverjust/Elite-Engine", "Date": "2015-08-31T18:42:30Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(num.equals(\"0\"))) return java.lang.Double.toString(((java.lang.Double.parseDouble(num)) * (-1))); else return \"0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4590/buggy-version/src.project1.calculator.CalculatorFunctions.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "java.lang.Double.toString(double)"], "Fixed commit": "af55d54645cbaaaa085dbc69d425e4f950f8e86f", "Url": "https://api.github.com/repos/jose-acevedoflores/Calculator", "Date": "2011-10-22T03:10:42Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newRadius <= 0) { newRadius = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6586/buggy-version/app.src.main.java.com.selcukcihan.android.sensors.LuminescenceFragment.java", "BodyUseAPI": [], "Fixed commit": "d08835a4a55651a98ac201a0ffdcb5c199df7bc6", "Url": "https://api.github.com/repos/selcukcihan/sensors", "Date": "2016-02-18T15:40:38Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos > (-1)) { pos = pos + 22; java.lang.String url = \"http://www.youtube.com/watch?v=\" + (line.substring(pos, line.indexOf(\"\\\"\", pos))); pos = line.indexOf(\"data-context-item-time=\"); if (pos > (-1)) { pos = pos + 24; java.lang.String time = line.substring(pos, line.indexOf(\"\\\"\", pos)); list.add(new de.zigapeda.flowspring.data.DataNode(new de.zigapeda.flowspring.data.YoutubeVideo(name, url, time), parent, null)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2961/buggy-version/src.de.zigapeda.flowspring.data.YoutubeSearch.java", "BodyUseAPI": [], "Fixed commit": "8abf905a2f471dd374fddc4403745148ba353b19", "Url": "https://api.github.com/repos/zigapeda/flowspring", "Date": "2012-12-06T16:30:54Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.terasology.entitySystem.prefab.Prefab.getComponent(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((culture.residentialZones) != null) { org.terasology.dynamicCities.utilities.Toolbox.stringsToLowerCase(culture.residentialZones); }else { logger.warn((\"No residential zones defined for culture \" + (culture.name))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1040/buggy-version/src.main.java.org.terasology.dynamicCities.population.CultureManager.java", "BodyUseAPI": ["org.slf4j.Logger.warn((\"No residential zones defined for culture \" + (culture.name)))", "org.terasology.dynamicCities.utilities.Toolbox.stringsToLowerCase(culture.residentialZones)"], "Fixed commit": "d90ac76f156d2d14a2c4ce0d18e68b3132754c8e", "Url": "https://api.github.com/repos/Terasology/DynamicCities", "Date": "2016-08-02T21:43:59Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tmp == null) tmp = metaData.get((\"Information|Image|V|View|PositionY #\" + (at + 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4087/buggy-version/src.main.java.spim.fiji.datasetmanager.LightSheetZ1MetaData.java", "BodyUseAPI": [], "Fixed commit": "33c1621d4bc7de0ec2f330b4de61a22f22e3b465", "Url": "https://api.github.com/repos/fiji/SPIM_Registration", "Date": "2016-08-12T12:29:04Z"},
{"Line": "=>343", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tmp == null) tmp = metaData.get((\"Information|Image|V|View|PositionX #\" + (at + 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4087/buggy-version/src.main.java.spim.fiji.datasetmanager.LightSheetZ1MetaData.java", "BodyUseAPI": [], "Fixed commit": "33c1621d4bc7de0ec2f330b4de61a22f22e3b465", "Url": "https://api.github.com/repos/fiji/SPIM_Registration", "Date": "2016-08-12T12:29:04Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tmp == null) tmp = metaData.get((\"Information|Image|V|View|PositionZ #\" + (at + 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4087/buggy-version/src.main.java.spim.fiji.datasetmanager.LightSheetZ1MetaData.java", "BodyUseAPI": [], "Fixed commit": "33c1621d4bc7de0ec2f330b4de61a22f22e3b465", "Url": "https://api.github.com/repos/fiji/SPIM_Registration", "Date": "2016-08-12T12:29:04Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(userQueue.isEmpty())) userQueue.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3866/buggy-version/app.src.main.java.com.example.user.foodforthought.activity.MainActivity.java", "BodyUseAPI": ["java.util.Queue<java.lang.String>.remove()"], "Fixed commit": "bb732b0bc4e867d33a9a105e373867604c999aea", "Url": "https://api.github.com/repos/tygiacalone/SwipesForAdvice", "Date": "2015-03-10T15:36:08Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(userQueue.isEmpty())) userQueue.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3866/buggy-version/app.src.main.java.com.example.user.foodforthought.activity.MainActivity.java", "BodyUseAPI": ["java.util.Queue<java.lang.String>.remove()"], "Fixed commit": "bb732b0bc4e867d33a9a105e373867604c999aea", "Url": "https://api.github.com/repos/tygiacalone/SwipesForAdvice", "Date": "2015-03-10T15:36:08Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values instanceof com.orientechnologies.orient.core.db.record.ridset.sbtree.OIndexRIDContainer) && (((com.orientechnologies.orient.core.db.record.ridset.sbtree.OIndexRIDContainer) (values)).isEmbedded())) snapshot.put(key, values);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7026/buggy-version/core.src.main.java.com.orientechnologies.orient.core.index.OIndexMultiValues.java", "BodyUseAPI": ["java.util.Map<java.lang.Object, java.lang.Object>.put(java.lang.Object,java.util.Set<com.orientechnologies.orient.core.db.record.OIdentifiable>)"], "Fixed commit": "95b4d12fb61bf7757eea37623c773d7b9f0c938b", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2013-11-28T12:06:18Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.bdrc.xmltoldmigration.CommonMigration.getLiteral(org.w3c.dom.Element,java.lang.String,org.apache.jena.rdf.model.Model,java.lang.String,java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (l != null) main.addProperty(prop, l);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3163/buggy-version/src.main.java.io.bdrc.xmltoldmigration.PubinfoMigration.java", "BodyUseAPI": ["org.apache.jena.rdf.model.Resource.addProperty(org.apache.jena.rdf.model.Property,org.apache.jena.rdf.model.Literal)"], "Fixed commit": "687c34d91aede75c84811eac493391a67e1f04ea", "Url": "https://api.github.com/repos/BuddhistDigitalResourceCenter/xmltoldmigration", "Date": "2017-08-10T15:36:09Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(stickers.isEmpty())) { stickers.remove(((stickers.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5242/buggy-version/app.src.main.java.com.littlegeektoys.www.picturepurrfect.CanvasView.java", "BodyUseAPI": ["java.util.ArrayList<com.littlegeektoys.www.picturepurrfect.Sticker>.remove(((stickers.size()) - 1))", "java.util.ArrayList<com.littlegeektoys.www.picturepurrfect.Sticker>.size()"], "Fixed commit": "64a90902ab2db9d361a4986a95c87678533eafe0", "Url": "https://api.github.com/repos/mikarman/PicturePurrfect", "Date": "2016-05-07T03:53:16Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (obj.getString(team14.tacoma.uw.edu.husky_cooking.model.Ingredient.MEASURE_TYPE).equals(\"null\")) { ingredient = new team14.tacoma.uw.edu.husky_cooking.model.Ingredient(obj.getInt(team14.tacoma.uw.edu.husky_cooking.model.Ingredient.ID), obj.getString(team14.tacoma.uw.edu.husky_cooking.model.Ingredient.NAME), obj.getString(team14.tacoma.uw.edu.husky_cooking.model.Ingredient.AMOUNT)); }else { ingredient = new team14.tacoma.uw.edu.husky_cooking.model.Ingredient(obj.getInt(team14.tacoma.uw.edu.husky_cooking.model.Ingredient.ID), obj.getString(team14.tacoma.uw.edu.husky_cooking.model.Ingredient.NAME), obj.getString(team14.tacoma.uw.edu.husky_cooking.model.Ingredient.MEASURE_TYPE), obj.getString(team14.tacoma.uw.edu.husky_cooking.model.Ingredient.AMOUNT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2732/buggy-version/app.src.main.java.team14.tacoma.uw.edu.husky_cooking.model.Ingredient.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getInt(java.lang.String)", "org.json.JSONObject.getInt(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "17513c07cc90fa6a799856c96970fe64831787d4", "Url": "https://api.github.com/repos/mikeFordUWT/Husky_Cooking", "Date": "2016-05-24T01:04:51Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activity.getLocalClassName().equals(\"ActivityMainTab\")) { ((com.roomates.storyquilt.ActivityMainTab) (activity)).onConnectionStatusChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4989/buggy-version/StoryQuilt.src.main.java.com.roomates.storyquilt.UserHandler.java", "BodyUseAPI": [], "Fixed commit": "1da887e2a258ab7458832656562ccde3bd23e70c", "Url": "https://api.github.com/repos/sihrc/Story-Quilt", "Date": "2013-12-14T22:47:40Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { favReposList = data.getStringArrayListExtra(INTENT_FAVOURITES); reposListAdapter.notifyDataSetChanged(); showReposList(); }else loadFavReposList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2075/buggy-version/app.src.main.java.local.imoroz.gitviewer.ReposListActivity.java", "BodyUseAPI": ["android.content.Intent.getStringArrayListExtra(java.lang.String)"], "Fixed commit": "88600692166c216d477519dc6e3181de4ac06de6", "Url": "https://api.github.com/repos/iamoroz/GitViewer", "Date": "2016-12-01T12:06:00Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((DiskSpaceMonitor.DESCRIPTOR) == null) { log.println(\" Could not get Slave Information , Exiting Disk check for this slave\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2518/buggy-version/src.main.java.org.jenkinsci.plugin.Diskcheck.java", "BodyUseAPI": [], "Fixed commit": "2a3ce244a55ee45301db9ee33d8723d9f153ba83", "Url": "https://api.github.com/repos/jenkinsci/diskcheck-plugin", "Date": "2015-02-08T09:02:59Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.legit2.Demigods.DDivineBlocks.getShrines(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (charShrines != null) charShrines.add(location); else { charShrines = new java.util.ArrayList<org.bukkit.Location>(); charShrines.add(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1326/buggy-version/src.com.legit2.Demigods.DDivineBlocks.java", "BodyUseAPI": ["java.util.ArrayList<org.bukkit.Location>.add(org.bukkit.Location)"], "Fixed commit": "dc71bcc730c0f09dff10cad65d5b0215a492e603", "Url": "https://api.github.com/repos/Clashnia/Minecraft-Demigods", "Date": "2013-01-26T03:19:06Z"},
{"Line": "=>971", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userSetting.getGCMKeys()) != null) { for (java.lang.String gcmKey : userSetting.getGCMKeys()) { if (existsGCMKey(gcmKey)) throw new unicopa.copa.server.database.ObjectAlreadyExsistsException(((\"There is already an GCMKey with value=\" + gcmKey) + \" in the database\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/344/buggy-version/src.main.java.unicopa.copa.server.database.DatabaseService.java", "BodyUseAPI": ["unicopa.copa.base.UserSettings.getGCMKeys()"], "Fixed commit": "ef91cd1e0fefc7e5946c7a5c5a7d3626e5ec368f", "Url": "https://api.github.com/repos/UniCopa/CopaServer", "Date": "2013-07-02T10:10:18Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.runtime.Platform.getBundle(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bundle.getState()) != (org.osgi.framework.Bundle.ACTIVE)) try { bundle.start(); } catch (org.osgi.framework.BundleException e) { Log.log.logErr((\"Could not start language plugin \" + pluginId), Log.ALWAYS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5377/buggy-version/language-libraries.base.src.org.sugarj.LanguageLibRegistry.java", "BodyUseAPI": ["org.osgi.framework.Bundle.start()"], "Fixed commit": "9acf8f430acc83ea277184f0a0ce9257b1ef5a9c", "Url": "https://api.github.com/repos/seba--/sugarj", "Date": "2013-06-06T16:12:52Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sugarj.common.FileCommands.dropExtension(outFile.getAbsolutePath())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.sugarj.common.FileCommands.exists(new org.sugarj.common.path.AbsolutePath((noExtPath + \".exe\")))) generatedFiles.add(new org.sugarj.common.path.AbsolutePath((noExtPath + \".exe\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5377/buggy-version/language-libraries.haskell.src.org.sugarj.HaskellLib.java", "BodyUseAPI": ["java.util.List<org.sugarj.common.path.Path>.add(org.sugarj.common.path.AbsolutePath)"], "Fixed commit": "9acf8f430acc83ea277184f0a0ce9257b1ef5a9c", "Url": "https://api.github.com/repos/seba--/sugarj", "Date": "2013-06-06T16:12:52Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sugarj.common.FileCommands.dropExtension(outFile.getAbsolutePath())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.sugarj.common.FileCommands.exists(new org.sugarj.common.path.AbsolutePath((noExtPath + \".hi\")))) generatedFiles.add(new org.sugarj.common.path.AbsolutePath((noExtPath + \".hi\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5377/buggy-version/language-libraries.haskell.src.org.sugarj.HaskellLib.java", "BodyUseAPI": ["java.util.List<org.sugarj.common.path.Path>.add(org.sugarj.common.path.AbsolutePath)"], "Fixed commit": "9acf8f430acc83ea277184f0a0ce9257b1ef5a9c", "Url": "https://api.github.com/repos/seba--/sugarj", "Date": "2013-06-06T16:12:52Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sugarj.common.FileCommands.dropExtension(outFile.getAbsolutePath())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.sugarj.common.FileCommands.exists(new org.sugarj.common.path.AbsolutePath(noExtPath))) generatedFiles.add(new org.sugarj.common.path.AbsolutePath(noExtPath));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5377/buggy-version/language-libraries.haskell.src.org.sugarj.HaskellLib.java", "BodyUseAPI": ["java.util.List<org.sugarj.common.path.Path>.add(org.sugarj.common.path.AbsolutePath)"], "Fixed commit": "9acf8f430acc83ea277184f0a0ce9257b1ef5a9c", "Url": "https://api.github.com/repos/seba--/sugarj", "Date": "2013-06-06T16:12:52Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sugarj.common.FileCommands.dropExtension(outFile.getAbsolutePath())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.sugarj.common.FileCommands.exists(new org.sugarj.common.path.AbsolutePath((noExtPath + \".o\")))) generatedFiles.add(new org.sugarj.common.path.AbsolutePath((noExtPath + \".o\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5377/buggy-version/language-libraries.haskell.src.org.sugarj.HaskellLib.java", "BodyUseAPI": ["java.util.List<org.sugarj.common.path.Path>.add(org.sugarj.common.path.AbsolutePath)"], "Fixed commit": "9acf8f430acc83ea277184f0a0ce9257b1ef5a9c", "Url": "https://api.github.com/repos/seba--/sugarj", "Date": "2013-06-06T16:12:52Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCurrentMatch) != null) { Games.TurnBasedMultiplayer.loadMatch(mGoogleApiClient, mCurrentMatch.getMatchId()).setResultCallback(new com.eyecuelab.survivalists.MainActivity.LoadTurnBasedMatchCallback()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5041/buggy-version/app.src.main.java.com.eyecuelab.survivalists.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a4f01bcffbb802057b0fd2524117c302cd9c32d3", "Url": "https://api.github.com/repos/kcmdouglas/Survivalists", "Date": "2016-05-10T19:35:23Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.accounts.AccountManager.getUserData(accounts[i],AuthenticatorActivity.KEY_EMAIL)", "android.accounts.AccountManager.getUserData(accounts[i],AuthenticatorActivity.KEY_ACCOUNT_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((name != null) && (name.equals(email))) { item.setNameShown(false); item.withName(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/760/buggy-version/app.src.main.java.org.kore.kolabnotes.android.fragment.OverviewFragment.java", "BodyUseAPI": [], "Fixed commit": "c8c59e0fc87e719fc978e86082ed7d8a63420149", "Url": "https://api.github.com/repos/konradrenner/kolabnotes-android", "Date": "2015-07-13T14:04:17Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nysenate.openleg.util.RequestUtils.getSearchString(javax.servlet.http.HttpServletRequest,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(filter.isEmpty())) { term += \" AND \" + filter; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1054/buggy-version/src.main.java.gov.nysenate.openleg.api.servlets.ApiServlet1.java", "BodyUseAPI": [], "Fixed commit": "9ebbac9e3cdbf354357243e372d1a53eca42cf63", "Url": "https://api.github.com/repos/nysenate/OpenLegislation", "Date": "2014-01-23T20:56:18Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != jcdiCtx) { creationalContext = jcdiCtx.getCreationalContext(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7803/buggy-version/appserver.web.weld-integration.src.main.java.org.glassfish.weld.services.JCDIServiceImpl.java", "BodyUseAPI": ["org.glassfish.weld.services.JCDIServiceImpl.JCDIInjectionContextImpl.getCreationalContext()"], "Fixed commit": "2b38b752ea165e357937ba79c8d55b703e416c20", "Url": "https://api.github.com/repos/ankathur/glassfish", "Date": "2017-08-02T09:58:35Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.equals(org.entirej.framework.plugin.reports.reader.ReportHandler.ELEMENT_REPORT_EXPORTTYPE)) { if ((value.length()) > 0) { _reportProperties.setExportType(org.entirej.framework.report.enumerations.EJReportExportType.valueOf(value)); } }else if (name.equals(org.entirej.framework.plugin.reports.reader.ReportHandler.ELEMENT_REPORT_WIDTH)) { if ((value.length()) > 0) { _reportProperties.setReportWidth(java.lang.Integer.parseInt(value)); }else { _reportProperties.setReportWidth(0); } }else if (name.equals(org.entirej.framework.plugin.reports.reader.ReportHandler.ELEMENT_IGNOREPAGINATION)) { if ((value.length()) > 0) { _reportProperties.setIgnorePagination(java.lang.Boolean.parseBoolean(value)); } }else if (name.equals(org.entirej.framework.plugin.reports.reader.ReportHandler.ELEMENT_MARGIN_TOP)) { if ((value.length()) > 0) { _reportProperties.setMarginTop(java.lang.Integer.parseInt(value)); }else { _reportProperties.setMarginTop(1); } }else if (name.equals(org.entirej.framework.plugin.reports.reader.ReportHandler.ELEMENT_MARGIN_BOTTOM)) { if ((value.length()) > 0) { _reportProperties.setMarginBottom(java.lang.Integer.parseInt(value)); }else { _reportProperties.setMarginBottom(1); } }else if (name.equals(org.entirej.framework.plugin.reports.reader.ReportHandler.ELEMENT_HEADER_SECTION_HEIGHT)) { if ((value.length()) > 0) { _reportProperties.setHeaderSectionHeight(java.lang.Integer.parseInt(value)); }else { _reportProperties.setHeaderSectionHeight(0); } }else if (name.equals(org.entirej.framework.plugin.reports.reader.ReportHandler.ELEMENT_FOOTER_SECTION_HEIGHT)) { if ((value.length()) > 0) { _reportProperties.setFooterSectionHeight(java.lang.Integer.parseInt(value)); }else { _reportProperties.setFooterSectionHeight(1); } }else if (name.equals(org.entirej.framework.plugin.reports.reader.ReportHandler.ELEMENT_MARGIN_LEFT)) { if ((value.length()) > 0) { _reportProperties.setMarginLeft(java.lang.Integer.parseInt(value)); }else { _reportProperties.setMarginLeft(1); } }else if (name.equals(org.entirej.framework.plugin.reports.reader.ReportHandler.ELEMENT_MARGIN_RIGHT)) { if ((value.length()) > 0) { _reportProperties.setMarginRight(java.lang.Integer.parseInt(value)); }else { _reportProperties.setMarginRight(1); } }else if (name.equals(org.entirej.framework.plugin.reports.reader.ReportHandler.ELEMENT_ACTION_PROCESSOR)) { _reportProperties.setActionProcessorClassName(value); }else if (name.equals(org.entirej.framework.plugin.reports.reader.ReportHandler.ELEMENT_REPORT_ORIENTATION)) { _reportProperties.setOrientation(EJReportProperties.ORIENTATION.valueOf(value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5096/buggy-version/org.entirej.ide.compatibility.src.org.entirej.framework.plugin.reports.reader.ReportHandler.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "f66432d59acc410f8ef31325b513298867b5d84a", "Url": "https://api.github.com/repos/entirej/plugin", "Date": "2014-11-14T16:11:37Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dialog.isShowing()) { dialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2837/buggy-version/src.com.albaniliu.chuangxindemo.ui.home.HomeActivity.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "133ed706ae8201a1fd03e61a2d343e35b2121f8d", "Url": "https://api.github.com/repos/albaniliu/chuangxindemo", "Date": "2013-04-13T15:01:47Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.nio.file.Path.toAbsolutePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dofile.toString().equals(path)) && (dofile.toFile().exists())) { model.put(\"content\", stataService.loadDoFile(path).getContent()); model.put(\"title\", path); return org.springframework.ui.velocity.VelocityEngineUtils.mergeTemplateIntoString(velocityEngine, \"edit.vm\", \"UTF-8\", model); }else { path = stataService.expandPath(path); dofile = java.nio.file.Paths.get(path).toAbsolutePath(); if (dofile.toFile().exists()) { response.sendRedirect(((\"/edit \\\"\" + (dofile.toAbsolutePath().toString())) + \"\\\"\")); return null; }else { throw new java.nio.file.NoSuchFileException(path); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5586/buggy-version/src.main.java.istata.web.HtmlController.java", "BodyUseAPI": ["stataService.loadDoFile(path).getContent()", "istata.service.StataService.loadDoFile(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,stataService.loadDoFile(path).getContent())", "istata.service.StataService.expandPath(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)"], "Fixed commit": "6826e0e9790cdf73f6a7aee7d0eb300b890e4ff0", "Url": "https://api.github.com/repos/mas802/stata-ux", "Date": "2016-01-19T14:20:40Z"},
{"Line": "=>580", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lhs_t instanceof wyone.core.Type.Ref) && (rhs_t instanceof wyone.core.Type.Ref)) { body = ((\"r\" + lhs) + \" == r\") + rhs; }else { body = (((\"r\" + lhs) + \".equals(r\") + rhs) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8553/buggy-version/modules.wyone.src.wyone.io.JavaFileWriter.java", "BodyUseAPI": [], "Fixed commit": "c2b62d90779721dfd258a8733d991f35c4ccce34", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-10-02T15:52:56Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lhs_t instanceof wyone.core.Type.Ref) && (rhs_t instanceof wyone.core.Type.Ref)) { }else { lhs = coerceFromRef(level, code.lhs, lhs, environment); rhs = coerceFromRef(level, code.rhs, rhs, environment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8553/buggy-version/modules.wyone.src.wyone.io.JavaFileWriter.java", "BodyUseAPI": [], "Fixed commit": "c2b62d90779721dfd258a8733d991f35c4ccce34", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-10-02T15:52:56Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lhs_t instanceof wyone.core.Type.Ref) && (rhs_t instanceof wyone.core.Type.Ref)) { body = ((\"r\" + lhs) + \" != r\") + rhs; }else { body = (((\"!r\" + lhs) + \".equals(r\") + rhs) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8553/buggy-version/modules.wyone.src.wyone.io.JavaFileWriter.java", "BodyUseAPI": [], "Fixed commit": "c2b62d90779721dfd258a8733d991f35c4ccce34", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2012-10-02T15:52:56Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.lover) != null) { this.lover.lover = null; this.lover = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4981/buggy-version/LG_Server.src.main.java.net.zyuiop.loupgarou.server.game.GamePlayer.java", "BodyUseAPI": [], "Fixed commit": "ada21e7bb226c5f785a057e2d63050980ed8c3e5", "Url": "https://api.github.com/repos/zyuiop/LoupGarou", "Date": "2016-05-21T14:34:53Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new java.io.File((((localNode.getWorkAreaRootPath()) + (pipsPublicSource.toString())) + (dipSourcePartial.toString()))).exists()) distributedConversionAdapter.replicateToLocalNode(((pipsPublicSource.toString()) + (dipSourcePartial.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5941/buggy-version/ContentBroker.src.main.java.de.uzk.hki.da.cb.FetchPIPsAction.java", "BodyUseAPI": ["de.uzk.hki.da.utils.Path.toString()", "de.uzk.hki.da.utils.Path.toString()", "de.uzk.hki.da.grid.DistributedConversionAdapter.replicateToLocalNode(((pipsPublicSource.toString()) + (dipSourcePartial.toString())))"], "Fixed commit": "5955a6e44058d55868bc16e8e156b6ff46a60eca", "Url": "https://api.github.com/repos/da-nrw/DNSCore", "Date": "2014-06-05T09:54:34Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new java.io.File((((localNode.getWorkAreaRootPath()) + (pipsInstitutionSource.toString())) + (dipSourcePartial.toString()))).exists()) distributedConversionAdapter.replicateToLocalNode(((pipsInstitutionSource.toString()) + (dipSourcePartial.toString())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5941/buggy-version/ContentBroker.src.main.java.de.uzk.hki.da.cb.FetchPIPsAction.java", "BodyUseAPI": ["de.uzk.hki.da.utils.Path.toString()", "de.uzk.hki.da.utils.Path.toString()", "de.uzk.hki.da.grid.DistributedConversionAdapter.replicateToLocalNode(((pipsInstitutionSource.toString()) + (dipSourcePartial.toString())))"], "Fixed commit": "5955a6e44058d55868bc16e8e156b6ff46a60eca", "Url": "https://api.github.com/repos/da-nrw/DNSCore", "Date": "2014-06-05T09:54:34Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tratta.getStazioniTratta().size()) < 2) { throw new modelloTreni.TrainException(\"La tratta selezionata non e' completa\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6753/buggy-version/ArabicaExpress.src.modelloTreni.TrainManager.java", "BodyUseAPI": [], "Fixed commit": "697b041efe255d575c134aad8fcb14d269efaf70", "Url": "https://api.github.com/repos/GiulioGx/ArabicaExpress", "Date": "2013-01-19T18:17:18Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alertIfFormatNotSupported) { throw new com.axelor.exception.AxelorException(com.axelor.i18n.I18n.get(IExceptionMessage.BANK_STATEMENT_FILE_UNKNOWN_FORMAT), com.axelor.exception.db.IException.INCONSISTENCY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4014/buggy-version/axelor-bank-payment.src.main.java.com.axelor.apps.bankpayment.service.bankstatement.BankStatementService.java", "BodyUseAPI": [], "Fixed commit": "99afecc604496fc5d17261e60d1d0ab7dc52c9cb", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2017-11-09T18:57:14Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((secondEvent.getEnd()) == null) || ((firstEvent.getEnd()) == null)) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5587/buggy-version/app.src.main.java.com.thoughtworks.lhli.lovelive_rock.activity.EventActivity.java", "BodyUseAPI": [], "Fixed commit": "80a5052b8049863a487f4368d07d7ce4215e5da6", "Url": "https://api.github.com/repos/Kevin170113664/lovelive_rock", "Date": "2016-05-02T03:39:18Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (collapser.isCollapsed()) { this.uncollapse(); }else { this.collapse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1783/buggy-version/tagger.src.edu.utsa.tagger.view.Tag.java", "BodyUseAPI": [], "Fixed commit": "b6a8621622ad4867737c0dcbfda1d14c6d73faca", "Url": "https://api.github.com/repos/brandonmcdaniel/tagger", "Date": "2012-11-28T22:38:42Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.world.World.getBlockTileEntity(((int) (p.x)),((int) (p.y)),((int) (p.z)))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(((buildcraft.transport.TileGenericPipe) (tilePipe)).pipe.isPipeConnected(tile))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4857/buggy-version/common.logisticspipes.utils.WorldUtil.java", "BodyUseAPI": [], "Fixed commit": "304b6aa220cdc27a6a7199e8db5f7062fd6c368c", "Url": "https://api.github.com/repos/ArtForz/LogisticsPipes", "Date": "2012-12-23T01:15:13Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((legendImage.getLegendImageWidth()) > 0) && ((legendImage.getLegendImageHeight()) > 0)) { width = ((legendMetadata.getWidth()) <= 0) ? legendImage.getLegendImageWidth() : width; height = ((legendMetadata.getHeight()) <= 0) ? legendImage.getLegendImageHeight() : height; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4540/buggy-version/backend.impl.src.main.java.org.geomajas.internal.service.LegendGraphicServiceImpl.java", "BodyUseAPI": ["org.geomajas.layer.LayerLegendImageSupport.getLegendImageHeight()", "org.geomajas.layer.LayerLegendImageSupport.getLegendImageWidth()"], "Fixed commit": "77342c4237faf6a88d921a8b600a39656ba6906e", "Url": "https://api.github.com/repos/lat-lon/geomajas", "Date": "2013-07-03T10:22:47Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (manageBtn.asXml().contains(\"edit.do?editCourse\")) { loggedIn = manageBtn.click(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1285/buggy-version/src.main.java.Main.java", "BodyUseAPI": ["HtmlAnchor.click()"], "Fixed commit": "e89e2f3cb60dfaf63bdc661b72ec7c5a16ddec7b", "Url": "https://api.github.com/repos/mattmcwaters/RoBot", "Date": "2015-09-22T05:29:47Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<TiledMapTileLayer.Cell>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cell.getTile().getProperties().containsKey(\"wrong\"))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/816/buggy-version/core.src.com.betmansmall.game.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "7083534896a377fc747f138586025486c128c4f1", "Url": "https://api.github.com/repos/BetmanSmall/TowerDefence_GDX", "Date": "2016-01-27T06:13:03Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.p3.ed.sneakerz.Shoe.getImageUri()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (oldUri != null) { java.io.File old = new java.io.File(oldUri.getPath()); if (old.exists()) { old.delete(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6336/buggy-version/app.src.main.java.com.p3.ed.sneakerz.EditShoeFrag.java", "BodyUseAPI": ["android.net.Uri.getPath()"], "Fixed commit": "37f29fe7b1321ac97c6f4f7408102320644e0312", "Url": "https://api.github.com/repos/edjmore/Sneakerz-Android", "Date": "2015-06-06T17:49:52Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.laiqinan.pomodoro.DateProvider.getDate()", "java.text.SimpleDateFormat.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.laiqinan.util.DateUtils.isSameDay(lastOpenDate, current)) { time = java.lang.Integer.parseInt(prop.getProperty(com.laiqinan.pomodoro.PomodoroWork.TIME_STRING, \"0\")); arriveDateString = prop.getProperty(com.laiqinan.pomodoro.PomodoroWork.ARRIVE_TIME); }else { time = 0; arriveDateString = com.laiqinan.pomodoro.PomodoroWork.NOT_BEEN_SET; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3877/buggy-version/src.com.laiqinan.pomodoro.PomodoroWork.java", "BodyUseAPI": [], "Fixed commit": "a29e75526131da3e9f36fce33c8107410f956668", "Url": "https://api.github.com/repos/random34/Pomodoro", "Date": "2013-05-18T10:48:49Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.java_websocket.client.WebSocketClient.getConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tempConnection.getReadyState()) != (WebSocket.READYSTATE.OPEN)) { mClient.connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6702/buggy-version/MyApplication.app.src.main.java.com.xuPATHn.xximdemo.core.XXConnection.java", "BodyUseAPI": [], "Fixed commit": "2d7a5aab1f7594f2e6b08866d07238402226a2d2", "Url": "https://api.github.com/repos/foreverxiongtao/XXIMDEMO", "Date": "2016-08-05T11:00:56Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.camel.component.netty.handlers.ClientChannelHandler.getExchange(org.jboss.netty.channel.ChannelHandlerContext)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (exchange == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8260/buggy-version/components.camel-netty.src.main.java.org.apache.camel.component.netty.handlers.ClientChannelHandler.java", "BodyUseAPI": [], "Fixed commit": "f2bb4a1f88c55063cc0bd868147486fb5ff624e2", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-01-17T02:57:43Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.source) == (net.minecraft.util.DamageSource.outOfWorld)) { player.getEntity().setHealth((-1.0F)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7653/buggy-version/Server.src.main.scala.jk_5.nailed.players.NailedPlayerRegistry.java", "BodyUseAPI": [], "Fixed commit": "ee3f9ffb6bc831def9767bd58ea91366d07497ac", "Url": "https://api.github.com/repos/nailed/nailed-forge", "Date": "2014-06-07T15:07:06Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (currentModels == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2526/buggy-version/src.main.java.edu.ucsf.rbvi.structureViz2.internal.model.StructureManager.java", "BodyUseAPI": [], "Fixed commit": "8adbccba946e40df9461efb76c52e77eb59431b9", "Url": "https://api.github.com/repos/RBVI/structureViz2", "Date": "2014-02-24T00:51:22Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (accessToken != null) { this.headers.put(\"authorization\", (\"bearer \" + accessToken)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6150/buggy-version/kiilib.src.jp.fkmsoft.libs.kiilib.volley.KiiRequest.java", "BodyUseAPI": [], "Fixed commit": "9953726e521012ad4149438e16e412c598811a9d", "Url": "https://api.github.com/repos/fkmhrk/kiilib-android-volley", "Date": "2013-12-15T13:02:40Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (headers != null) { this.headers.putAll(headers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6150/buggy-version/kiilib.src.jp.fkmsoft.libs.kiilib.volley.KiiRequest.java", "BodyUseAPI": [], "Fixed commit": "9953726e521012ad4149438e16e412c598811a9d", "Url": "https://api.github.com/repos/fkmhrk/kiilib-android-volley", "Date": "2013-12-15T13:02:40Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(scrolled)) { this.scrollTo(1, 1); this.scrollTo(0, 0); scrolled = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6266/buggy-version/src.com.evilreader.android.evilcontentcontroller.EvilreaderWebView.java", "BodyUseAPI": [], "Fixed commit": "82926349a4d9158ed64e05c1dc60ce484bd0bc0e", "Url": "https://api.github.com/repos/dainiusjocas/evilreader", "Date": "2013-01-17T15:28:40Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((filter) != null) && ((filter.getNodesCollector()) != null)) { filter.getNodesCollector().stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2784/buggy-version/src.main.java.org.jvnet.hudson.plugins.monitoring.PluginImpl.java", "BodyUseAPI": ["org.jvnet.hudson.plugins.monitoring.HudsonMonitoringFilter.getNodesCollector()", "filter.getNodesCollector().stop()"], "Fixed commit": "5ecb1d9a3854c72270646bc55e362d41685b26ac", "Url": "https://api.github.com/repos/jenkinsci/monitoring-plugin", "Date": "2015-07-19T11:02:22Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.marcin.novaguilds.manager.PlayerManager.getPlayer(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (nPlayer.isAtRegion()) { plugin.getRegionManager().playerExitedRegion(nPlayer.getPlayer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8764/buggy-version/src.main.java.co.marcin.novaguilds.listener.DeathListener.java", "BodyUseAPI": ["co.marcin.novaguilds.api.basic.NovaPlayer.getPlayer()", "plugin.getRegionManager().playerExitedRegion(nPlayer.getPlayer())"], "Fixed commit": "b11cefb8ffabd81df10a3f5733af5b4e664810af", "Url": "https://api.github.com/repos/MarcinWieczorek/NovaGuilds", "Date": "2016-03-12T15:08:48Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchInput.length()) == 0) { doc = fileArray.get(index); fileArray.remove(index); createList(fileArray); }else { doc = searchArray.get(index); searchArray.remove(index); createList(searchArray); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7641/buggy-version/src.com.example.lockdoc.FileListActivity.java", "BodyUseAPI": [], "Fixed commit": "cb7ab19000677cefd8763184429e857cb4351bfb", "Url": "https://api.github.com/repos/camtaylor/LockDoc", "Date": "2014-12-08T20:46:01Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.toLowerCase().contains(\"million\")) { int salIndex = line.indexOf(\"INR\"); int millionIndex = line.indexOf(\" million\"); java.lang.String sal = line.substring(salIndex, millionIndex); java.lang.String currency = sal.substring(0, 3); java.math.BigDecimal bdSal = new java.math.BigDecimal(sal.substring(3)); bdSal = bdSal.multiply(new java.math.BigDecimal(1000000)); attrMap.put(eu.waldonia.ipl.populator.RosterFileProcessor.SALARY, java.lang.String.valueOf(bdSal.intValue())); attrMap.put(eu.waldonia.ipl.populator.RosterFileProcessor.CURRENCY, currency); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5095/buggy-version/src.main.java.eu.waldonia.ipl.populator.RosterFileProcessor.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "9a7776c5608fe78ba6b59bcbddf9867b0fa40981", "Url": "https://api.github.com/repos/sih/ipl-roster", "Date": "2015-08-15T08:43:03Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pandemist.adrundaal.auctions.config.Config.getOptionValue(\"has-normal-lore-in-Views\").equals(\"false\")) { itemForInv = pandemist.adrundaal.auctions.model.Shop.clearLore(itemForInv); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/426/buggy-version/src.pandemist.adrundaal.auctions.model.Shop.java", "BodyUseAPI": [], "Fixed commit": "a646448a9b055e59df705d2eaaf3e306b4d72da2", "Url": "https://api.github.com/repos/Pandemist/AdrundaalAuctions", "Date": "2017-01-17T11:21:52Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p1.isEqual(p2)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8086/buggy-version/src.org.rascalmpl.values.uptr.ProductionAdapter.java", "BodyUseAPI": [], "Fixed commit": "2cd804b9bb9ea03b1577f3e43a439e4c41a19329", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2010-10-10T13:01:17Z"},
{"Line": "=>1727", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sepPos > (-1)) { remotePort = java.lang.Integer.parseInt(serverURL.substring((sepPos + 1))); remoteHost = serverURL.substring(0, sepPos); }else { remotePort = com.orientechnologies.orient.client.remote.OStorageRemote.DEFAULT_PORT; remoteHost = serverURL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2434/buggy-version/client.src.main.java.com.orientechnologies.orient.client.remote.OStorageRemote.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "e5deca53fa85a106644f9de1b1796f1b9c043337", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2017-08-01T12:22:57Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index <= (currentNumLocals)) return currentCompiledMethod.getCompiler().getLocalAddressForGCMap((index - 1), registerLocations, framePtr); else return currentCompiledMethod.getCompiler().getStackAddressForGCMap(((index - 1) - (currentNumLocals)), framePtr);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1184/buggy-version/rvm.src.org.jikesrvm.compilers.baseline.arm.BaselineGCMapIterator.java", "BodyUseAPI": ["currentCompiledMethod.getCompiler().getStackAddressForGCMap(int,org.jikesrvm.compilers.baseline.arm.BaselineGCMapIterator)", "currentCompiledMethod.getCompiler().getLocalAddressForGCMap(int,org.jikesrvm.compilers.baseline.arm.BaselineGCMapIterator,org.jikesrvm.compilers.baseline.arm.BaselineGCMapIterator)"], "Fixed commit": "9cc895b2daf71546a6fe1f651ae5f3d1437a3de7", "Url": "https://api.github.com/repos/dmitry-brizhinev/JikesRVM", "Date": "2016-05-31T06:50:05Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.abs(((market.getPosition().y) - (camera.position.y)))) < 20) { com.tgco.animalBook.handlers.SoundHandler.pauseBackgroundMusic(); gameInstance.setScreen(new com.tgco.animalBook.screens.TutorialMarketScreen(gameInstance, ((com.tgco.animalBook.screens.TutorialScreen) (gameInstance.getScreen())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1174/buggy-version/core.src.com.tgco.animalBook.view.TutorialWorld.java", "BodyUseAPI": [], "Fixed commit": "e831c6ce2d56cb5726325a7623e135c86f58f464", "Url": "https://api.github.com/repos/tgco/animalBook", "Date": "2014-06-11T22:35:02Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirstTime) { myScanner.nextLine(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2348/buggy-version/UrbanParks.src.view.ParkManagerView.java", "BodyUseAPI": [], "Fixed commit": "23bbe0dd8ead71c312ab0ecc69cd175d080f6bf7", "Url": "https://api.github.com/repos/dtm9/UrbanParks", "Date": "2017-03-07T08:24:53Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shareActionProvider) != null) { shareActionProvider.setShareIntent(shareIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1699/buggy-version/Alexandria.app.src.main.java.it.jaschke.alexandria.BookDetail.java", "BodyUseAPI": [], "Fixed commit": "5e3ed9823f789b90102c8684467fea53c7976da5", "Url": "https://api.github.com/repos/dconz13/Super-duo", "Date": "2015-11-17T18:59:26Z"},
{"Line": "=>1105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expectedValue != null) return java.lang.Boolean.FALSE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/881/buggy-version/src.main.java.net.openhft.chronicle.map.ReplicatedChronicleMap.java", "BodyUseAPI": [], "Fixed commit": "afb223be6748a6007ba0648d6324d8b8556c800c", "Url": "https://api.github.com/repos/OpenHFT/Chronicle-Map", "Date": "2014-12-15T15:16:24Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.fragment_main_container)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (frag instanceof com.quartzodev.fragments.BookGridFragment) { ((com.quartzodev.fragments.BookGridFragment) (frag)).refresh(); }else if (frag instanceof com.quartzodev.fragments.ViewPagerFragment) { ((com.quartzodev.fragments.ViewPagerFragment) (frag)).refresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2916/buggy-version/app.src.main.java.com.quartzodev.buddybook.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cbea9dce7911c30e5a2ff42b0283ad4108637eb2", "Url": "https://api.github.com/repos/victoraldir/BuddyBook", "Date": "2017-10-21T03:59:38Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((props) == null) { this.props.load(new java.io.BufferedReader(new java.io.FileReader(PARAMS))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1543/buggy-version/src.main.java.system.mturk.MturkLibrary.java", "BodyUseAPI": [], "Fixed commit": "6d4927b000ad06b8d6fcdf3425d9736375247823", "Url": "https://api.github.com/repos/etosch/SurveyMan", "Date": "2014-05-23T18:54:37Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (old.isDirectory()) { level++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4239/buggy-version/src.main.java.net.xdocc.XPath.java", "BodyUseAPI": [], "Fixed commit": "8ebf1e0b8f1bf16a733fe1c5ed4a1d2770e194a0", "Url": "https://api.github.com/repos/xdocc/xdocc", "Date": "2014-02-04T10:28:32Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((splits.length) > 0) { for (int i = (splits.length) - 1; i > 0; i--) { buf.append(splits[i]); buf.append('.'); } buf.append(splits[0]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3769/buggy-version/src.java.org.apache.nutch.util.TableUtil.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "1f09364ae4db65d8398804eb82bf0e315ec571e4", "Url": "https://api.github.com/repos/jt6211/nutch", "Date": "2012-04-03T19:40:31Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAlarmStop) ua.p2psafety.AudioRecordService.mTimerOn = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4616/buggy-version/p2psafety-android.p2psafety.src.ua.p2psafety.AudioRecordService.java", "BodyUseAPI": [], "Fixed commit": "0e08a4d5a99ed174ed5edef36606e7c0f92cc00a", "Url": "https://api.github.com/repos/42cc/p2psafety", "Date": "2014-02-11T12:52:17Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAlarmStop) mWindowManager.removeView(mSurfaceView);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4616/buggy-version/p2psafety-android.p2psafety.src.ua.p2psafety.VideoRecordService.java", "BodyUseAPI": [], "Fixed commit": "0e08a4d5a99ed174ed5edef36606e7c0f92cc00a", "Url": "https://api.github.com/repos/42cc/p2psafety", "Date": "2014-02-11T12:52:17Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAlarmStop) ua.p2psafety.VideoRecordService.mTimerOn = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4616/buggy-version/p2psafety-android.p2psafety.src.ua.p2psafety.VideoRecordService.java", "BodyUseAPI": [], "Fixed commit": "0e08a4d5a99ed174ed5edef36606e7c0f92cc00a", "Url": "https://api.github.com/repos/42cc/p2psafety", "Date": "2014-02-11T12:52:17Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDate()) != null) { strDate = com.friends.charity.business.logic.CalendarFormat.getStrForDT(getDate()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8217/buggy-version/Charity.src.com.friends.charity.model.farzand.Farzandan.java", "BodyUseAPI": [], "Fixed commit": "2529b184fff6280ee1b95d4cca694662b4965164", "Url": "https://api.github.com/repos/SaKondri/Charity", "Date": "2013-04-25T14:12:14Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((table) == null) { throw new java.lang.IllegalStateException(\"This reference is not yet linked to a table\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1271/buggy-version/ssmt.src.ch.astorm.ssmt.core.indexes.IndexReference.java", "BodyUseAPI": [], "Fixed commit": "621568f32064b434eb8615c94b685edf7f19167d", "Url": "https://api.github.com/repos/ctabin/ssmt", "Date": "2015-08-15T13:26:34Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["clientContext.conversation.getConversation(clientContext.conversation.getCurrentId())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (current != null) { for (final codeu.chat.common.User u : clientContext.user.getUsers()) { if ((!(u.name.equals(clientContext.user.getCurrent().name))) && (!(current.users.contains(u.id)))) { usersList.addElement(u.name); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5780/buggy-version/src.codeu.chat.client.simplegui.ConversationPanel.java", "BodyUseAPI": ["current.users.contains(u.id)"], "Fixed commit": "af077268692aaff2e23964c4d521ef06982b80a0", "Url": "https://api.github.com/repos/mganesh6/codeu_project_2017", "Date": "2017-06-02T01:27:49Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.ibuildthecloud.gdapi.context.ApiContext.getContext().getPolicy()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (policy == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6979/buggy-version/code.iaas.auth-logic.src.main.java.io.cattle.platform.iaas.api.auth.dao.impl.AuthDaoImpl.java", "BodyUseAPI": [], "Fixed commit": "ce0da97d2c0546ce4ae4c86de69cbd5d1def52cb", "Url": "https://api.github.com/repos/hibooboo2/cattle", "Date": "2015-04-07T01:32:49Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opencloudb.backend.PhysicalDBPool.loop(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((dataHostConfig.getSwitchType()) == (org.opencloudb.config.model.DataHostConfig.NOT_SWITCH_DS)) && (j > 0)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6492/buggy-version/src.main.java.org.opencloudb.backend.PhysicalDBPool.java", "BodyUseAPI": [], "Fixed commit": "32b9718db1cd57a946f14d03fad1d28654cbb38a", "Url": "https://api.github.com/repos/magicdoom/Mycat-Server", "Date": "2015-12-04T07:24:55Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mineSquares.add(new com.google.codejam.y2013.Coordinate(offset, (offset + j)))) { mine--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3136/buggy-version/EclipseWorkspace.CodeJam.src.com.google.codejam.y2014.MineSweeper.java", "BodyUseAPI": [], "Fixed commit": "ad36ebeb2c161daf8841f68189405d8a5b8accf6", "Url": "https://api.github.com/repos/tdongsi/java", "Date": "2014-04-14T05:16:22Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mineSquares.add(new com.google.codejam.y2013.Coordinate((offset + i), ((COL - offset) - 1)))) { mine--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3136/buggy-version/EclipseWorkspace.CodeJam.src.com.google.codejam.y2014.MineSweeper.java", "BodyUseAPI": [], "Fixed commit": "ad36ebeb2c161daf8841f68189405d8a5b8accf6", "Url": "https://api.github.com/repos/tdongsi/java", "Date": "2014-04-14T05:16:22Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mineSquares.add(new com.google.codejam.y2013.Coordinate(((ROW - offset) - 1), (offset + j)))) { mine--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3136/buggy-version/EclipseWorkspace.CodeJam.src.com.google.codejam.y2014.MineSweeper.java", "BodyUseAPI": [], "Fixed commit": "ad36ebeb2c161daf8841f68189405d8a5b8accf6", "Url": "https://api.github.com/repos/tdongsi/java", "Date": "2014-04-14T05:16:22Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mineSquares.add(new com.google.codejam.y2013.Coordinate((offset + i), offset))) { mine--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3136/buggy-version/EclipseWorkspace.CodeJam.src.com.google.codejam.y2014.MineSweeper.java", "BodyUseAPI": [], "Fixed commit": "ad36ebeb2c161daf8841f68189405d8a5b8accf6", "Url": "https://api.github.com/repos/tdongsi/java", "Date": "2014-04-14T05:16:22Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itemClickListener) != null) itemClickListener.onItemClick(null, itemView, getLayoutPosition(), 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4547/buggy-version/autoadapter.src.main.java.com.benny.library.autoadapter.AutoRecyclerAdapter.java", "BodyUseAPI": [], "Fixed commit": "c54fe42cc86048a8faa428757f81902a21c6dfc6", "Url": "https://api.github.com/repos/BennyWang/AutoAdapter", "Date": "2016-04-21T09:28:37Z"},
{"Line": "=>852", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.europa.esig.dss.x509.CertificateToken.getRevocationTokens()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (revocationTokens != null) { synchronized(revocationTokens) { if (eu.europa.esig.dss.utils.Utils.isCollectionNotEmpty(revocationTokens)) { for (eu.europa.esig.dss.x509.RevocationToken revocationToken : revocationTokens) { java.lang.String xmlId = (eu.europa.esig.dss.utils.Utils.toHex(certToken.getDigest(DigestAlgorithm.SHA256))) + (eu.europa.esig.dss.utils.Utils.toHex(revocationToken.getDigest(DigestAlgorithm.SHA256))); xmlCert.getRevocations().add(getXmlRevocation(revocationToken, xmlId, usedDigestAlgorithms)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2978/buggy-version/dss-document.src.main.java.eu.europa.esig.dss.validation.DiagnosticDataBuilder.java", "BodyUseAPI": ["eu.europa.esig.dss.utils.Utils.isCollectionNotEmpty(java.util.Set<eu.europa.esig.dss.x509.RevocationToken>)"], "Fixed commit": "d0d700e0b536fd0973afd7885ee0c5f07460c789", "Url": "https://api.github.com/repos/viavansi/dss", "Date": "2017-12-14T10:19:40Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.oracle.truffle.r.runtime.data.RList.getDataAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dataAt == (com.oracle.truffle.r.runtime.data.RNull.instance)) { result = com.oracle.truffle.r.runtime.data.RNull.instance; }else if (((positions[i]) instanceof com.oracle.truffle.r.runtime.data.model.RAbstractContainer) && ((((com.oracle.truffle.r.runtime.data.model.RAbstractContainer) (positions[i])).getLength()) == 0)) { result = com.oracle.truffle.r.runtime.data.RNull.instance; }else { result = extract(i, ((com.oracle.truffle.r.runtime.data.model.RAbstractStringVector) (dataAt)), positions[i], positionProfile[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/436/buggy-version/com.oracle.truffle.r.nodes.src.com.oracle.truffle.r.nodes.access.vector.CachedExtractVectorNode.java", "BodyUseAPI": [], "Fixed commit": "3a3a55e4f7c3b9fbe262724ccef936cd9e37f82c", "Url": "https://api.github.com/repos/oracle/fastr", "Date": "2016-07-12T22:31:58Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sourceClass == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5736/buggy-version/runtime.src.main.java.org.evosuite.runtime.EvoAssertions.java", "BodyUseAPI": [], "Fixed commit": "e28a4daad372eee3e36abf09cad713906c45dabb", "Url": "https://api.github.com/repos/EvoSuite/evosuite", "Date": "2015-12-18T17:50:54Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StackTraceElement.getClassName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sourceClass.equals(name)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5736/buggy-version/runtime.src.main.java.org.evosuite.runtime.EvoAssertions.java", "BodyUseAPI": [], "Fixed commit": "e28a4daad372eee3e36abf09cad713906c45dabb", "Url": "https://api.github.com/repos/EvoSuite/evosuite", "Date": "2015-12-18T17:50:54Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mUpdateSeekBar.isAlive()) mUpdateSeekBar.interrupt();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/284/buggy-version/app.src.main.java.architecture.BaseActivity.java", "BodyUseAPI": ["java.lang.Thread.interrupt()"], "Fixed commit": "0ef693307d1ec65a45cabe22bdb3d9dc43032b48", "Url": "https://api.github.com/repos/DevDoug/BrainBeats", "Date": "2016-09-13T03:21:46Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.getEntity().getCustomName().startsWith(((org.bukkit.ChatColor.RED) + \"Spawned \"))) { mult *= 1.0 / 3.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2452/buggy-version/src.main.java.info.faceland.beast.BeastListener.java", "BodyUseAPI": [], "Fixed commit": "bac57ead490d65fd375a6afda84a08eb334b0c05", "Url": "https://api.github.com/repos/TealCube/beast", "Date": "2015-02-24T08:16:43Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getSpawnReason()) == (CreatureSpawnEvent.SpawnReason.SPAWNER)) { level += 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2452/buggy-version/src.main.java.info.faceland.beast.BeastListener.java", "BodyUseAPI": [], "Fixed commit": "bac57ead490d65fd375a6afda84a08eb334b0c05", "Url": "https://api.github.com/repos/TealCube/beast", "Date": "2015-02-24T08:16:43Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (label != null) { labelName = label.toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1690/buggy-version/src.main.java.com.redhat.foreman.ForemanSharedNodeCloud.java", "BodyUseAPI": ["hudson.model.Label.toString()"], "Fixed commit": "2663d793019c51a7a767333ba1b3023f96b75586", "Url": "https://api.github.com/repos/pjanouse/node-sharing-plugin", "Date": "2016-09-19T10:51:29Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start.equals(end)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3911/buggy-version/mahjong-game-impl.src.main.java.net.anatolich.mahjong.mahjong.MahjongRules.java", "BodyUseAPI": [], "Fixed commit": "7977eebbd1c276b0434f9f7103e7699a1be8f734", "Url": "https://api.github.com/repos/dimasmith/mahjong", "Date": "2013-02-09T13:05:10Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.equals(((clientId) + \":CANCEL\"))) || (message.equals(((clientId) + \":END\")))) { return; }else { java.lang.String[] splStr = message.split(\":\"); if ((splStr.length) == 2) { int x = java.lang.Integer.parseInt(splStr[1].split(\",\")[0].trim()); int y = java.lang.Integer.parseInt(splStr[1].split(\",\")[1].trim()); if (splStr[0].equals(clientId)) { this.grid[x][y] = client.ClientMorpion.SYMBOLES[symbole]; }else { this.grid[x][y] = client.ClientMorpion.SYMBOLES[(((symbole) + 1) % 2)]; } java.lang.System.out.println(this); }else if (((splStr.length) == 3) && (splStr[2].equals(\"WIN\"))) { if (splStr[1].equals(clientId)) { java.lang.System.out.println(((client.ClientMorpion.SYMBOLES[symbole]) + \" gagne!\")); }else { java.lang.System.out.println(((client.ClientMorpion.SYMBOLES[(((symbole) + 1) % 2)]) + \" gagne!\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3846/buggy-version/client.ClientMorpion.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "103c81d311c7d76db67ef66bf833495040a3507b", "Url": "https://api.github.com/repos/Nistof/ServeurDeCommunication", "Date": "2015-01-07T12:35:41Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(storageDir.exists())) { storageDir.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4489/buggy-version/pickimagelib.src.main.java.com.cndroid.pickimagelib.PickupImageActivity.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "294b11d782fa170f04e634261f918bf28398ed2f", "Url": "https://api.github.com/repos/kimlet/AndroidImagePicker", "Date": "2016-07-25T10:03:08Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((playerName.equalsIgnoreCase(\"No Player\")) || (playerName.equals(\"\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6906/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Objects.SignHandler.java", "BodyUseAPI": [], "Fixed commit": "7c86774c0113a8dce8980e7c6d5c03e7aa8f33f3", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2017-02-01T01:38:05Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((amount) > 100) { info = \"TOO LARGE!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3179/buggy-version/src.calculator.Ingredient.java", "BodyUseAPI": [], "Fixed commit": "266bb678368735dbf9842807843be906e7d83f5a", "Url": "https://api.github.com/repos/thume06/RecipeCalculator", "Date": "2017-12-31T19:55:25Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.DataInputStream.readUTF()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (msg.equals(\"EXIT\")) { clientList.removeClient(clientName); socket.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4750/buggy-version/src.ru.denko.SingleServer.java", "BodyUseAPI": [], "Fixed commit": "789f7a32e05a90b32ae7658a4f7aacb42faa798e", "Url": "https://api.github.com/repos/Naraks/SimpleChatServer", "Date": "2017-07-12T07:00:17Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.denko.ClientList.getClientSocket(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (s == null) { writeToClient(clientName, (to + \" not found\")); }else { java.io.DataOutputStream out = new java.io.DataOutputStream(new java.io.BufferedOutputStream(clientList.getClientSocket(to).getOutputStream())); out.writeUTF(msg); out.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4750/buggy-version/src.ru.denko.SingleServer.java", "BodyUseAPI": [], "Fixed commit": "789f7a32e05a90b32ae7658a4f7aacb42faa798e", "Url": "https://api.github.com/repos/Naraks/SimpleChatServer", "Date": "2017-07-12T07:00:17Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (queries != null) { queries.remove(this.request); if (queries.isEmpty()) { com.yellowbkpk.geo.xapi.admin.XapiQueryStats.activeQueries.remove(remoteHost); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/571/buggy-version/src.main.java.com.yellowbkpk.geo.xapi.admin.XapiQueryStats.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.isEmpty()", "java.util.Set<java.lang.String>.remove(java.lang.String)"], "Fixed commit": "13b18d7c524d578103056ffbede355341f191377", "Url": "https://api.github.com/repos/iandees/xapi-servlet", "Date": "2011-05-04T02:31:33Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (queries != null) { queries.remove(this.request); if (queries.isEmpty()) { com.yellowbkpk.geo.xapi.admin.XapiQueryStats.activeQueries.remove(remoteHost); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/571/buggy-version/src.main.java.com.yellowbkpk.geo.xapi.admin.XapiQueryStats.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.remove(java.lang.String)", "java.util.Set<java.lang.String>.isEmpty()"], "Fixed commit": "13b18d7c524d578103056ffbede355341f191377", "Url": "https://api.github.com/repos/iandees/xapi-servlet", "Date": "2011-05-04T02:31:33Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (queries != null) { queries.remove(this.request); if (queries.isEmpty()) { com.yellowbkpk.geo.xapi.admin.XapiQueryStats.activeQueries.remove(remoteHost); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/571/buggy-version/src.main.java.com.yellowbkpk.geo.xapi.admin.XapiQueryStats.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.isEmpty()", "java.util.Set<java.lang.String>.remove(java.lang.String)"], "Fixed commit": "13b18d7c524d578103056ffbede355341f191377", "Url": "https://api.github.com/repos/iandees/xapi-servlet", "Date": "2011-05-04T02:31:33Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((day.length()) > 0) { if ((day.charAt(0)) == '0') { a.append(day.charAt(1)); }else { a.append(day); } a.append(\", \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1294/buggy-version/app.src.main.java.ecez.vndbapp.model.Release.java", "BodyUseAPI": ["java.lang.StringBuilder.append(char)", "java.lang.String.charAt(int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.charAt(int)"], "Fixed commit": "98bd26ccf84c94c95d6f7d4f975903a8943331cd", "Url": "https://api.github.com/repos/John-Teng/vndbapp", "Date": "2017-10-08T22:10:06Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((released.length()) > 7) month = released.substring(5, 7);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1294/buggy-version/app.src.main.java.ecez.vndbapp.model.Release.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "98bd26ccf84c94c95d6f7d4f975903a8943331cd", "Url": "https://api.github.com/repos/John-Teng/vndbapp", "Date": "2017-10-08T22:10:06Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getAction()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (action.equals(AppWidgetManager.ACTION_APPWIDGET_UPDATE)) { if (com.whatafabric.unofficialtuentiwidget.UnofficialTuentiWidget.LOGGING) android.util.Log.d(\"UTuentiW,UnofficialTuentiWidget:onReceive\", \"other update ACTION_APPWIDGET_UPDATE\"); this.onUpdate(context, android.appwidget.AppWidgetManager.getInstance(context), new int[]{ widgetId }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5339/buggy-version/UnofficialTuentiWidget.src.main.java.com.whatafabric.unofficialtuentiwidget.UnofficialTuentiWidget.java", "BodyUseAPI": [], "Fixed commit": "4e1795e9097e7d655e28d3686a4c4f3337a9fd5f", "Url": "https://api.github.com/repos/wilcome/UnofficialTuentiWidget", "Date": "2014-07-20T21:25:11Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hai.tran.mywallet.fragment.AddNewFragment.UPDATE) setTitle(\"Edit\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3575/buggy-version/app.src.main.java.hai.tran.mywallet.fragment.AddNewFragment.java", "BodyUseAPI": [], "Fixed commit": "0cf1815af14ef17b601b4c740382378d7150e006", "Url": "https://api.github.com/repos/honghai78/My-Wallet", "Date": "2016-06-20T02:54:41Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hai.tran.mywallet.data.DataSharedPreferences.getDataSharedPreferences(getContext()).getPreferencesString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((intentDate.length()) > 1) editTextDate.setText(intentDate);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3575/buggy-version/app.src.main.java.hai.tran.mywallet.fragment.AddNewFragment.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "0cf1815af14ef17b601b4c740382378d7150e006", "Url": "https://api.github.com/repos/honghai78/My-Wallet", "Date": "2016-06-20T02:54:41Z"},
{"Line": "=>3312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (JdbcConstants.ORACLE.equals(dbType)) { print(\";\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3217/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SQLASTOutputVisitor.java", "BodyUseAPI": [], "Fixed commit": "fd817a5adfd883498f7ed3be408d68f670a456ea", "Url": "https://api.github.com/repos/qxo/druid", "Date": "2017-05-11T09:31:31Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value != (-1)) { return (value * 10) + (getCardValue(cards[0])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3028/buggy-version/src.PokerHand.java", "BodyUseAPI": [], "Fixed commit": "368fe4df52853b3b203093c28d53bd9ed0ccbe89", "Url": "https://api.github.com/repos/fmmarzoa/CodeWarsJava", "Date": "2017-06-05T11:56:39Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { android.graphics.Bitmap bp = ((android.graphics.Bitmap) (data.getExtras().get(\"data\"))); iv.setImageBitmap(bp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3747/buggy-version/app.src.main.java.ivanandrianto.com.tubes1.Camera.java", "BodyUseAPI": ["android.content.Intent.getExtras()", "data.getExtras().get(java.lang.String)"], "Fixed commit": "d6cfe03ad220fce9492c26f7abacbcc72121b810", "Url": "https://api.github.com/repos/ivanandrianto/IF3111-2016-Tugas1-Android", "Date": "2016-03-22T10:39:46Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (move != null) { move.Print(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1381/buggy-version/chaturaji-ai.src.main.java.ac.ic.chaturaji.ai.PlayerHuman.java", "BodyUseAPI": ["ac.ic.chaturaji.ai.Move_AI.Print()"], "Fixed commit": "5c74f6379544485320f4ddb2eb59901c99661c43", "Url": "https://api.github.com/repos/samirarabbanian/chaturaji", "Date": "2014-03-19T02:26:04Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getChildren().size()) > 0) { out.println((i + \"<UL>\")); for (hu.distributeddocumentor.model.TOCNode child : node.getChildren()) { exportTOCNode(child, out, (indent + 2)); } out.println((i + \"</UL>\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/968/buggy-version/src.main.java.hu.distributeddocumentor.exporters.CHMExporter.java", "BodyUseAPI": ["hu.distributeddocumentor.model.TOCNode.getChildren()"], "Fixed commit": "0a3b108bb6a027885f8e3626e69ef7f8ce663aaa", "Url": "https://api.github.com/repos/vigoo/distributed-documentor", "Date": "2012-02-28T07:03:43Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.type) == (ccre.rconf.RConf.F_AUTO_REFRESH)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3348/buggy-version/PoultryInspector.src.ccre.supercanvas.components.channels.RConfComponent.java", "BodyUseAPI": [], "Fixed commit": "a5f5f7d9bfebb105df9a2e2fbb2fd8cbd815e3f4", "Url": "https://api.github.com/repos/flamingchickens1540/common-chicken-runtime-engine", "Date": "2016-01-20T23:32:49Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pigLogger) != null) { pigLogger.destory(); pigLogger = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7383/buggy-version/src.org.apache.pig.backend.hadoop.executionengine.tez.PigProcessor.java", "BodyUseAPI": [], "Fixed commit": "fa8d8d06070600645b652ffce4ca7852b949bf65", "Url": "https://api.github.com/repos/piaozhexiu/apache-pig", "Date": "2014-04-26T01:40:55Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trainModel) { trainAndStoreModel(aContext); }else { java.io.File file = aContext.getFile(de.tudarmstadt.ukp.dkpro.tc.crfsuite.task.serialization.MODEL_CLASSIFIER, AccessMode.READONLY); java.io.FileInputStream fis = new java.io.FileInputStream(file); java.io.FileOutputStream fos = new java.io.FileOutputStream(new java.io.File(outputFolder, MODEL_CLASSIFIER)); org.apache.commons.io.IOUtils.copy(fis, fos); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2641/buggy-version/dkpro-tc-ml-crfsuite.src.main.java.de.tudarmstadt.ukp.dkpro.tc.crfsuite.task.serialization.CRFSuiteModelSerializationDescription.java", "BodyUseAPI": [], "Fixed commit": "e43927ab375614db2cfc77758870c918542d7ae5", "Url": "https://api.github.com/repos/dkpro/dkpro-tc", "Date": "2016-01-06T15:23:46Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (shortest && (joinedEntities.contains(entity))) { return aliases.get(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5108/buggy-version/src.main.java.me.hurel.hqlbuilder.builder.HQBQueryStringVisitor.java", "BodyUseAPI": ["java.util.Map<java.lang.Object, java.lang.String>.get(java.lang.Object)"], "Fixed commit": "01235690bc8b4c3337a15891fec8b09b1c58c1de", "Url": "https://api.github.com/repos/nhurel/yaqapi", "Date": "2014-03-25T20:47:52Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (baseClass == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2591/buggy-version/src.main.java.tech.cae.javabard.ValueClassSpec.java", "BodyUseAPI": [], "Fixed commit": "15ba8b8820e29864d5dfd890367083c3ad4ea252", "Url": "https://api.github.com/repos/harmanpa/javabard", "Date": "2017-09-01T09:58:05Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (relation != null) inv.add(relation.render(processed));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6589/buggy-version/src.main.java.com.activitystream.Entity.java", "BodyUseAPI": ["com.activitystream.EntityRelation.render(java.util.Set<java.lang.String>)", "java.util.List.add(relation.render(processed))"], "Fixed commit": "0dbc91edba0e41395114ae1f54494d924ae3ecdc", "Url": "https://api.github.com/repos/activitystream/as-sdk-java", "Date": "2015-11-12T09:30:20Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.lwjgl.BufferUtils.createIntBuffer(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((bufferIds.limit()) == 0) { org.terasology.logic.manager.GL11.glReadBuffer(GL11.GL_NONE); org.terasology.logic.manager.GL20.glDrawBuffers(GL11.GL_NONE); }else { org.terasology.logic.manager.GL20.glDrawBuffers(bufferIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/824/buggy-version/src.main.java.org.terasology.logic.manager.DefaultRenderingProcess.java", "BodyUseAPI": ["org.terasology.logic.manager.GL20.glDrawBuffers(java.nio.IntBuffer)"], "Fixed commit": "9c291d752ef0667e531b71975dd227d17c548bc2", "Url": "https://api.github.com/repos/MrBarsack/Terasology", "Date": "2013-06-14T12:23:19Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.resourceList.getItems().size()) > 0) { this.resourceList.getSelectionModel().selectFirst(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6539/buggy-version/src.main.java.lu.innocence.ignis.view.resourceView.ImageView.java", "BodyUseAPI": ["this.resourceList.getSelectionModel().selectFirst()", "this.resourceList.getSelectionModel()"], "Fixed commit": "87beec4c0478e6e01e057ab0bed3f8aec93e51c8", "Url": "https://api.github.com/repos/Meldrion/Ignis2017", "Date": "2016-11-28T12:20:27Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.resourceList.getItems().size()) > 0) { this.resourceList.getSelectionModel().selectFirst(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6539/buggy-version/src.main.java.lu.innocence.ignis.view.resourceView.TilesetResourceView.java", "BodyUseAPI": ["this.resourceList.getSelectionModel()", "this.resourceList.getSelectionModel().selectFirst()"], "Fixed commit": "87beec4c0478e6e01e057ab0bed3f8aec93e51c8", "Url": "https://api.github.com/repos/Meldrion/Ignis2017", "Date": "2016-11-28T12:20:27Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(childFd.getType().equals(\"dir\"))) { childFdNode.setAttribute(\"viewURL\", childFd.getViewURL(viewType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2379/buggy-version/src.hci.gnomex.controller.GetProductOrderDownloadList.java", "BodyUseAPI": ["org.jdom.Element.setAttribute(java.lang.String,childFd.getViewURL(viewType))", "hci.gnomex.utility.FileDescriptor.getViewURL(java.lang.String)"], "Fixed commit": "5293da69730175a7055a852db30eb7b7f506b6e9", "Url": "https://api.github.com/repos/hci-gnomex/gnomex", "Date": "2016-08-30T15:38:54Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((beanInfo.jsonType) != null) { for (java.lang.Class<?> seeAlsoClass : beanInfo.jsonType.seeAlso()) { if (java.lang.Enum.class.isAssignableFrom(seeAlsoClass)) { try { java.lang.Enum<?> e = java.lang.Enum.valueOf(((java.lang.Class<java.lang.Enum>) (seeAlsoClass)), strVal); return ((T) (e)); } catch (java.lang.IllegalArgumentException e) { } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1890/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.java", "BodyUseAPI": ["beanInfo.jsonType.seeAlso()"], "Fixed commit": "df815ad1939fb2f4937ae3568bb1ff66b4767709", "Url": "https://api.github.com/repos/kimmking/fastjson", "Date": "2017-09-11T07:26:15Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((conFontFile) == null) { try { conFontFile = PolyGlot.IOHandler.getFontFileArray(core.getPropertiesManager().getFontCon()); } catch (java.lang.Exception ex) { PolyGlot.CustomControls.InfoBox.warning(\"Font Exception\", \"Unable to find font: check that text appears correctly.\", null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7491/buggy-version/src.PolyGlot.PExportToPDF.java", "BodyUseAPI": [], "Fixed commit": "698960fbc15c06dcf2950218d2b0e1100dd429c0", "Url": "https://api.github.com/repos/DraqueT/PolyGlot", "Date": "2016-10-28T18:18:02Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pathName.startsWith(\"file:\"))) { pathName = \"file:\" + (pathName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8472/buggy-version/core-plugins.src.main.java.co.cask.hydrator.plugin.common.BatchXMLFileFilter.java", "BodyUseAPI": [], "Fixed commit": "b26c0161ed4f655558d483ab21a014515124dd16", "Url": "https://api.github.com/repos/caskdata/hydrator-plugins", "Date": "2017-07-24T23:09:11Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.forgerock.openam.utils.StringUtils.isEmpty(type)) { throw new java.lang.IllegalStateException(\"type parameter is required\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2121/buggy-version/openam-console.src.main.java.com.sun.identity.console.task.model.OAuth2ModelImpl.java", "BodyUseAPI": [], "Fixed commit": "fe57bde3bccef1fb776568d3d43059da0edc73e5", "Url": "https://api.github.com/repos/OpenRock/OpenAM", "Date": "2015-12-09T15:58:51Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.forgerock.openam.utils.StringUtils.isEmpty(type)) { throw new java.lang.IllegalStateException(\"type parameter is required\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2121/buggy-version/openam-console.src.main.java.com.sun.identity.console.task.model.OAuth2ModelImpl.java", "BodyUseAPI": [], "Fixed commit": "fe57bde3bccef1fb776568d3d43059da0edc73e5", "Url": "https://api.github.com/repos/OpenRock/OpenAM", "Date": "2015-12-09T15:58:51Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (status.equals(\"200\")) { username = userArray.getString(\"username\"); token = userArray.getString(\"token\"); parsedUserData[0] = status; parsedUserData[1] = username; parsedUserData[2] = token; }else if (status.equals(\"449\")) { parsedUserData[0] = status; parsedUserData[1] = \"\"; parsedUserData[2] = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5501/buggy-version/Watched.app.src.main.java.pt.rcrdalmeida.watched.Utilities.JsonUtils.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "c305cf4ecfb27705efbe2d99506bdf116974bb45", "Url": "https://api.github.com/repos/rcrdalmeida18/Watched-App", "Date": "2017-02-17T15:03:10Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskStatus.getJsonObject(\"output\").getString(\"status\").equalsIgnoreCase(\"ok\")) { returnState = ConstantApp.DF_STATUS.FINISHED.name(); }else { returnState = ConstantApp.DF_STATUS.FAILED.name(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/166/buggy-version/src.main.java.com.datafibers.util.HelpFunc.java", "BodyUseAPI": [], "Fixed commit": "f89d22fbc2f5caa7aec77b5522d974d99fdd6920", "Url": "https://api.github.com/repos/datafibers-community/df_data_service", "Date": "2017-12-11T16:17:33Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (started) startGame(received); else notStarted();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1688/buggy-version/src.ist.meic.cm.bomberman.gamelobby.GameLobby.java", "BodyUseAPI": [], "Fixed commit": "d5020c25b5d502a53f6081c0c561e90a9dec83a1", "Url": "https://api.github.com/repos/rsn491/ash7qhe200qwe", "Date": "2014-05-03T14:00:54Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (includePermissions) { request.setContentType(com.jaspersoft.jasperserver.jaxrs.client.core.MimeTypeUtil.toCorrectContentMime(sessionStorage.getConfiguration(), \"application/hal+{mime}\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/863/buggy-version/src.main.java.com.jaspersoft.jasperserver.jaxrs.client.apiadapters.attributes.SingleAttributeAdapter.java", "BodyUseAPI": [], "Fixed commit": "601c6e58556d4d3e514ebf22537b88d3de072b24", "Url": "https://api.github.com/repos/TanyaEf/jrs-rest-java-client", "Date": "2015-11-02T15:41:17Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (character instanceof rougelikeLibrary.Player) { foundDoor = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4081/buggy-version/src.rougelikeLibrary.TurnSystem.java", "BodyUseAPI": [], "Fixed commit": "2bd826d97967a60c627dac55cf9b74d02a414140", "Url": "https://api.github.com/repos/benaveld/INTE_Roglike", "Date": "2017-10-25T11:22:21Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (instance.getStatus().equals(ContainerInstanceStatus.DRAINING.name())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1762/buggy-version/src.main.java.com.cloudbees.jenkins.plugins.amazonecs.ECSService.java", "BodyUseAPI": [], "Fixed commit": "cc0f2634af8c15c42ef40a74276338dc9de094f6", "Url": "https://api.github.com/repos/cbamelis/amazon-ecs-plugin", "Date": "2017-11-23T10:25:42Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (girdim == false) { (sorting.Sorting.insertionComparation)++; girdim = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6329/buggy-version/Sorting.src.sorting.Sorting.java", "BodyUseAPI": [], "Fixed commit": "de2c91b7725e41321ea04c361a68043dd7b25b59", "Url": "https://api.github.com/repos/mehmetsirintadik/analysis-of-algorithms", "Date": "2016-03-16T10:50:44Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((binding.getKey().getAnnotation()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2778/buggy-version/jukito.src.main.java.org.jukito.JukitoRunner.java", "BodyUseAPI": [], "Fixed commit": "c7df6c210e935b22a9f04d99d7de46ee02461e76", "Url": "https://api.github.com/repos/ahri/Jukito", "Date": "2013-07-16T21:28:06Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/692/buggy-version/src.main.java.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "97c2a2a64abcc8259cea7613f44a916403d99bbc", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mRecords.length) == 1) { paint.setColor(Color.WHITE); paint.setTextSize(((paint.getTextSize()) * 3)); canvas.drawText(\"Not enough data.\", 10, 50, paint); hideableMenu.clear(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/711/buggy-version/app.src.main.java.net.sf.andbatdog.batterydog.BatteryGraph.java", "BodyUseAPI": [], "Fixed commit": "1b25c7d90d9460e14531e6f5c7deac08a8bec403", "Url": "https://api.github.com/repos/fdroid-revivals/AndroidBatteryDog", "Date": "2016-10-20T15:59:17Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canBeReported) { holder.registerProblem(arguments[3], com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.dateTime.DateTimeSetTimeUsageInspector.message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1522/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.apiUsage.dateTime.DateTimeSetTimeUsageInspector.java", "BodyUseAPI": [], "Fixed commit": "797a8925bd18eb2b756d61f1ed52def60b9aea5b", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2017-10-22T19:12:22Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((isComposite()) && (isNotCompositeState(getSuperMetadataClass(clazz)))) { this.superStateMachineMetadata = null; }else if (isComposite()) { this.superStateMachineMetadata = registry.loadStateMachineMetadata(getSuperMetadataClass(clazz), this); }else if (hasSuperMetadataClass(clazz)) { this.superStateMachineMetadata = registry.loadStateMachineMetadata(getSuperMetadataClass(clazz), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7122/buggy-version/Platform.Lifecycle.src.main.java.net.madz.lifecycle.meta.impl.builder.StateMachineMetaBuilderImpl.java", "BodyUseAPI": ["net.madz.lifecycle.meta.impl.builder.StateMachineMetaBuilderImpl.loadStateMachineMetadata(java.lang.Class<?>,net.madz.lifecycle.meta.impl.builder.StateMachineMetaBuilderImpl)", "net.madz.lifecycle.meta.impl.builder.StateMachineMetaBuilderImpl.getSuperMetadataClass(java.lang.Class<?>)", "net.madz.lifecycle.meta.impl.builder.StateMachineMetaBuilderImpl.getSuperMetadataClass(java.lang.Class<?>)", "net.madz.lifecycle.meta.impl.builder.StateMachineMetaBuilderImpl.hasSuperMetadataClass(java.lang.Class<?>)", "net.madz.lifecycle.meta.impl.builder.StateMachineMetaBuilderImpl.loadStateMachineMetadata(java.lang.Class<?>,net.madz.lifecycle.meta.impl.builder.StateMachineMetaBuilderImpl)"], "Fixed commit": "2d2f3bf73b870e20c74231bea1f96801eb76d2e9", "Url": "https://api.github.com/repos/zhongdj/Swordfish", "Date": "2013-11-12T15:08:06Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.IWorkbenchPage.getActiveEditor()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (editor == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/580/buggy-version/itu.dk.aamj.intentdsl.ui.src.itu.dk.aamj.intentdsl.classes.IntentHandler.java", "BodyUseAPI": [], "Fixed commit": "214d8a1af3126a975c3011dd5794200c124411e4", "Url": "https://api.github.com/repos/jycr753/IntentCore", "Date": "2013-04-23T20:17:11Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2029/buggy-version/MADN.src.de.htwg.madn.controller.MovementController.java", "BodyUseAPI": [], "Fixed commit": "615abffc0285b2336731f6375adb0ec53d5ee54c", "Url": "https://api.github.com/repos/softwareTechnik1213/projekt", "Date": "2013-01-11T11:49:24Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ContentResolver.query(android.net.Uri,java.lang.String[],<nulltype>,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(cursor.moveToNext())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5425/buggy-version/api.src.main.java.com.ichi2.anki.api.AddContentApi.java", "BodyUseAPI": [], "Fixed commit": "94c50c891f96ac35aba6978b18a5b69941921919", "Url": "https://api.github.com/repos/marcardar/Anki-Android", "Date": "2016-03-18T09:17:47Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["in.co.praveenkumar.mdroid.moodlemodel.MoodleSiteInfo.findById(java.lang.Class,long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (site == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3394/buggy-version/src.in.co.praveenkumar.mdroid.task.CourseSyncTask.java", "BodyUseAPI": [], "Fixed commit": "8fcc1e63209f00df93cb617c711a542f216db039", "Url": "https://api.github.com/repos/praveendath92/MDroid", "Date": "2014-10-16T15:05:41Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.pentaho.di.repository.RepositoriesMeta.findRepository(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (repositoryMeta != null) { for (int i = 0; i < (repositoriesMeta.nrRepositories()); i++) { repositoriesMeta.getRepository(i).setDefault(false); } repositoryMeta.setDefault(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3481/buggy-version/plugins.repositories-plugin.src.main.java.org.pentaho.di.ui.repo.RepositoryConnectController.java", "BodyUseAPI": ["org.pentaho.di.repository.RepositoryMeta.setDefault(boolean)"], "Fixed commit": "974e9cdfe6b2b098ae2f850ba2a90d2d14ae5a35", "Url": "https://api.github.com/repos/matthewtckr/pentaho-kettle", "Date": "2016-05-17T19:08:39Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.next) != null) node.next.prev = prev;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1512/buggy-version/src.main.java.org.ljc.april2012.SkipList.java", "BodyUseAPI": [], "Fixed commit": "71be2a04778252ba311a139c5ed3785c6a2a1353", "Url": "https://api.github.com/repos/irpap/skiplist", "Date": "2012-05-19T18:04:05Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ecommerce.rmall.dao.OrderDAO.findByID(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((order.getStatus().equals(\"processing\")) && (null != (order.getShipment()))) { order.getShipment().setStatus(\"finish\"); this.shipmentDao.update(order.getShipment()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7563/buggy-version/rMall.Service.src.main.java.ecommerce.rmall.service.impl.OrderService.java", "BodyUseAPI": ["ecommerce.rmall.domain.Order.getShipment()", "order.getShipment().setStatus(java.lang.String)", "ecommerce.rmall.dao.ShipmentDAO.update(order.getShipment())", "ecommerce.rmall.domain.Order.getShipment()"], "Fixed commit": "b03d296d9aaac1111d169fdfaf360d003253a035", "Url": "https://api.github.com/repos/81554636/RunningMall", "Date": "2015-03-12T12:26:55Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isServiceBound) { boundService.startLocation(smartLocationOptions); }else { bindService(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3645/buggy-version/library.src.com.mobivery.greent.smartlocation.SmartLocation.java", "BodyUseAPI": [], "Fixed commit": "b0dc1168a2be1759d74cf76d1eb806488692e8b1", "Url": "https://api.github.com/repos/mobivery/smart-location-lib", "Date": "2013-07-18T18:04:57Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((withinTime(hour, com.michael.android.budget.CalorieHistory.LUNCH_BOUND, com.michael.android.budget.CalorieHistory.DINNER_BOUND)) && (create_lunch)) { tbl.addView(createHeading(tbl, \"In the daytime:\")); create_lunch = false; }else if ((withinTime(hour, com.michael.android.budget.CalorieHistory.DINNER_BOUND, 24)) && (create_dinner)) { tbl.addView(createHeading(tbl, \"In the evening:\")); create_dinner = false; }else if ((withinTime(hour, com.michael.android.budget.CalorieHistory.MIDNIGHT_BOUND, com.michael.android.budget.CalorieHistory.BREAKFAST_BOUND)) && (create_midnight)) { tbl.addView(createHeading(tbl, \"Past midnight:\")); create_midnight = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4297/buggy-version/src.com.michael.android.budget.CalorieHistory.java", "BodyUseAPI": ["com.michael.android.budget.CalorieHistory.withinTime(int,int,int)", "com.michael.android.budget.CalorieHistory.withinTime(int,int,int)"], "Fixed commit": "54b5f3a17a250d5d453fad37aa9a93cd311ae02a", "Url": "https://api.github.com/repos/michaelkanglu/Daily-Budget-Tracker", "Date": "2012-06-05T21:45:42Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((m.group(i)) != null) { crObject.set((i + \"\"), m.group(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/9004/buggy-version/src.com.newnius.util.CRRegEx.java", "BodyUseAPI": ["com.newnius.util.CRObject.set(java.lang.String,java.lang.String)", "java.util.regex.Matcher.group(int)"], "Fixed commit": "1083c2a7676690137fde2474ad1d57058dc56837", "Url": "https://api.github.com/repos/newnius/util4j", "Date": "2016-05-02T07:04:59Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((running) == null) running = java.lang.Thread.currentThread(); else if ((running) != (java.lang.Thread.currentThread())) { com.nokia.dempsy.messagetransport.blockingqueue.BlockingQueueAdaptor.logger.error(((com.nokia.dempsy.messagetransport.blockingqueue.BlockingQueueAdaptor.class.getSimpleName()) + \" was started in a Runnable more than once. Exiting the additional thread.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6436/buggy-version/lib-dempsyimpl.src.main.java.com.nokia.dempsy.messagetransport.blockingqueue.BlockingQueueAdaptor.java", "BodyUseAPI": [], "Fixed commit": "fb2efbe4d4dc9a8870db9807fdfa08434aa43ff0", "Url": "https://api.github.com/repos/Dempsy/Dempsy", "Date": "2013-02-08T14:49:16Z"},
{"Line": "=>740", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (openOrdersRadio.isChecked()) { if ((searchList.get(i).getPartyName().contains(query)) || (searchList.get(i).getOrderNo().equalsIgnoreCase(query))) { orderModelList.add(searchList.get(i)); foundResult = true; } }else if (closedOrdersRadio.isChecked()) { if ((searchList.get(i).getPartyName().contains(query)) || (searchList.get(i).getInvoiceNo().equalsIgnoreCase(query))) { orderModelList.add(searchList.get(i)); foundResult = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1615/buggy-version/app.src.main.java.com.example.anubhav.vacmet.OrderStatus.java", "BodyUseAPI": [], "Fixed commit": "7935ec2f00ca07460e183d98b6f1502b399a17fa", "Url": "https://api.github.com/repos/jay1493/vacmetOrderStatus", "Date": "2017-11-24T14:29:36Z"},
{"Line": "=>839", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (openOrdersRadio.isChecked()) { collapsingToolbar.setTitle((((getResources().getString(R.string.order_status)) + \" \") + query)); }else if (closedOrdersRadio.isChecked()) { collapsingToolbar.setTitle((((getResources().getString(R.string.delivery_status)) + \" \") + query)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1615/buggy-version/app.src.main.java.com.example.anubhav.vacmet.OrderStatus.java", "BodyUseAPI": [], "Fixed commit": "7935ec2f00ca07460e183d98b6f1502b399a17fa", "Url": "https://api.github.com/repos/jay1493/vacmetOrderStatus", "Date": "2017-11-24T14:29:36Z"},
{"Line": "=>851", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (openOrdersRadio.isChecked()) { collapsingToolbar.setTitle(getResources().getString(R.string.order_status)); }else if (closedOrdersRadio.isChecked()) { collapsingToolbar.setTitle(getResources().getString(R.string.delivery_status)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1615/buggy-version/app.src.main.java.com.example.anubhav.vacmet.OrderStatus.java", "BodyUseAPI": [], "Fixed commit": "7935ec2f00ca07460e183d98b6f1502b399a17fa", "Url": "https://api.github.com/repos/jay1493/vacmetOrderStatus", "Date": "2017-11-24T14:29:36Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(matcher.matches())) return parsed;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5848/buggy-version/src.main.java.net.citizensnpcs.util.StringHelper.java", "BodyUseAPI": [], "Fixed commit": "93378504baa17559355b6ba5e618688627ac3962", "Url": "https://api.github.com/repos/CitizensDev/Citizens2", "Date": "2012-12-02T10:09:22Z"},
{"Line": "=>1642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.vehicle.VehicleDestroyEvent.getVehicle()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(vehicle instanceof org.bukkit.entity.Minecart)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1479/buggy-version/src.main.java.com.untamedears.humbug.Humbug.java", "BodyUseAPI": [], "Fixed commit": "b4e07560930294aee4d7a50434d4a7b5299a98c0", "Url": "https://api.github.com/repos/rourke750/Humbug", "Date": "2013-09-20T01:22:03Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.example.shashank_pc.trial.LPContactsTab.ContactListMap) == null) com.example.shashank_pc.trial.LPContactsTab.ContactListMap = new java.util.HashMap<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4471/buggy-version/app.src.main.java.com.example.shashank_pc.trial.LPContactsTab.java", "BodyUseAPI": [], "Fixed commit": "1d48d099b6ab590182eed861caa195847dea5a04", "Url": "https://api.github.com/repos/ShashankAnantharam/HelloWorldTrial", "Date": "2017-10-08T15:55:41Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (op.getUseDefaultLocation().content()) { com.liferay.ide.gradle.core.workspace.NewLiferayWorkspaceOpMethods.updateLocation(op, workspaceLocation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8755/buggy-version/tools.plugins.com.liferay.ide.gradle.core.src.com.liferay.ide.gradle.core.workspace.NewLiferayWorkspaceOpMethods.java", "BodyUseAPI": ["com.liferay.ide.gradle.core.workspace.NewLiferayWorkspaceOpMethods.updateLocation(com.liferay.ide.gradle.core.workspace.NewLiferayWorkspaceOp,org.eclipse.sapphire.modeling.Path)"], "Fixed commit": "de4b2af5f0fa00229a808cb33c741844cb0cabfd", "Url": "https://api.github.com/repos/lovettli/liferay-ide", "Date": "2016-05-20T02:34:10Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (op.getUseDefaultLocation().content()) { sb.append(((\"\\\"\" + (location.toFile().getAbsolutePath())) + \"\\\" \")); }else { sb.append(((\"\\\"\" + (location.append(wsName).toFile().getAbsolutePath())) + \"\\\" \")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8755/buggy-version/tools.plugins.com.liferay.ide.gradle.core.src.com.liferay.ide.gradle.core.LiferayWorkspaceProjectProvider.java", "BodyUseAPI": [], "Fixed commit": "de4b2af5f0fa00229a808cb33c741844cb0cabfd", "Url": "https://api.github.com/repos/lovettli/liferay-ide", "Date": "2016-05-20T02:34:10Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.dasigns.simpleslots.SlotMachine.isSlotMachinePart(b))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7218/buggy-version/src.main.java.net.dasigns.simpleslots.SlotMachineSequence.java", "BodyUseAPI": [], "Fixed commit": "42274f47042b44fe0914f7ff901bfbb05a517d50", "Url": "https://api.github.com/repos/Mike724/SimpleSlots", "Date": "2013-02-11T20:26:48Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.fileupload.FileItem.getInputStream()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((stream == null) || ((stream.available()) == 0)) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/607/buggy-version/src.com.google.refine.quality.webservices.DiachronWebService.java", "BodyUseAPI": [], "Fixed commit": "12561e5736f71f0fe82b47247c1ab5d9547aca1e", "Url": "https://api.github.com/repos/diachron/quality-extension", "Date": "2015-03-23T00:37:29Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((metrics == null) || ((metrics.size()) == 0)) { throw new java.lang.IllegalArgumentException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/607/buggy-version/src.com.google.refine.quality.webservices.DiachronWebService.java", "BodyUseAPI": [], "Fixed commit": "12561e5736f71f0fe82b47247c1ab5d9547aca1e", "Url": "https://api.github.com/repos/diachron/quality-extension", "Date": "2015-03-23T00:37:29Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useSmartAttack) { donePolling = false; readyToAttack = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/916/buggy-version/src.AttackerNode.java", "BodyUseAPI": [], "Fixed commit": "072118e7a0d05adb7e45ccc4f6ed01822c368e1c", "Url": "https://api.github.com/repos/gougej88/ICNDataCachingSimulator", "Date": "2015-06-13T04:19:10Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n < 0) { throw new java.lang.IllegalArgumentException(\"n < 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2569/buggy-version/src.main.java.com.github.klane.parc.Bezier.java", "BodyUseAPI": [], "Fixed commit": "3e78188096fe65639a72f7af8358d23ed7935882", "Url": "https://api.github.com/repos/klane/parc", "Date": "2015-07-10T06:08:16Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (k < 0) { throw new java.lang.IllegalArgumentException(\"k < 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2569/buggy-version/src.main.java.com.github.klane.parc.Bezier.java", "BodyUseAPI": [], "Fixed commit": "3e78188096fe65639a72f7af8358d23ed7935882", "Url": "https://api.github.com/repos/klane/parc", "Date": "2015-07-10T06:08:16Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n < k) { throw new java.lang.IllegalArgumentException(\"n < k\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2569/buggy-version/src.main.java.com.github.klane.parc.Bezier.java", "BodyUseAPI": [], "Fixed commit": "3e78188096fe65639a72f7af8358d23ed7935882", "Url": "https://api.github.com/repos/klane/parc", "Date": "2015-07-10T06:08:16Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tile == (checkSurroundingTiles(tile, i, j, 1, 0).getTile())) { consecutiveCount = getPathLength(new com.ttt.model.TilePosition(tile, i, j), 1, 0); }else if (tile == (checkSurroundingTiles(tile, i, j, 0, 1).getTile())) { consecutiveCount = getPathLength(new com.ttt.model.TilePosition(tile, i, j), 0, 1); }else if (tile == (checkSurroundingTiles(tile, i, j, 1, 1).getTile())) { consecutiveCount = getPathLength(new com.ttt.model.TilePosition(tile, i, j), 1, 1); }else if (tile == (checkSurroundingTiles(tile, i, j, (-1), 1).getTile())) { consecutiveCount = getPathLength(new com.ttt.model.TilePosition(tile, i, j), (-1), 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3145/buggy-version/src.com.ttt.model.Board.java", "BodyUseAPI": ["com.ttt.model.Board.getPathLength(com.ttt.model.TilePosition,int,int)", "com.ttt.model.Board.checkSurroundingTiles(com.ttt.model.Tile,int,int,int,int)", "com.ttt.model.TilePosition.getTile()", "com.ttt.model.Board.getPathLength(com.ttt.model.TilePosition,int,int)", "com.ttt.model.Board.getPathLength(com.ttt.model.TilePosition,int,int)", "com.ttt.model.TilePosition.getTile()", "com.ttt.model.Board.checkSurroundingTiles(com.ttt.model.Tile,int,int,int,int)", "com.ttt.model.Board.checkSurroundingTiles(com.ttt.model.Tile,int,int,int,int)", "com.ttt.model.Board.getPathLength(com.ttt.model.TilePosition,int,int)", "com.ttt.model.TilePosition.getTile()"], "Fixed commit": "db9c0bb8a0b4a74b996e87f0832d575b8bbcd79c", "Url": "https://api.github.com/repos/jointheleague/tic-tac-toe-ml", "Date": "2016-10-12T03:06:07Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (db.getTransaction().isActive()) db.commit();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4756/buggy-version/core.src.main.java.com.orientechnologies.orient.core.command.script.OCommandExecutorScript.java", "BodyUseAPI": ["com.orientechnologies.orient.core.db.document.ODatabaseDocument.commit()"], "Fixed commit": "05375975c986697dab39cf9ee8db491b66b13f7a", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-01-26T14:42:40Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((counter) == 4) examNextButton.setText(\"Next\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1916/buggy-version/app.src.main.java.com.example.robert.algodat.exam.ExamActivity.java", "BodyUseAPI": [], "Fixed commit": "5a45c51727b249f803f53363ccc137b7c53fc442", "Url": "https://api.github.com/repos/roberteb/AlgoDat", "Date": "2016-06-14T12:51:47Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((childNodesList) != null) { this.next = childNodesList.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/431/buggy-version/modules.ballerina-core.src.main.java.org.ballerinalang.services.dispatchers.uri.parser.Node.java", "BodyUseAPI": [], "Fixed commit": "95d4bc02913e8c3c6b4ecbe50b381204b26eebd6", "Url": "https://api.github.com/repos/Susankha/ballerina", "Date": "2017-04-07T09:36:30Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pos > 0) { methodName = methodName.substring((pos + 1)); pos = methodName.indexOf('$'); if (pos > 0) { methodName = methodName.substring((pos + 1)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8023/buggy-version/code.mettle.app.org.mef.framework.presenters.Presenter.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "e6020ca9554978873f6b5753e7584d57e1968ea5", "Url": "https://api.github.com/repos/ianrae/mettle-framework", "Date": "2014-01-06T01:09:31Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gcm.GCMRegistrar.getRegistrationId(com.fifteen.placeit.MainActivity)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (regId.equals(\"\")) { com.google.android.gcm.GCMRegistrar.register(this, Constant.GCM.SENDER_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6184/buggy-version/src.com.fifteen.placeit.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "93495e6550e05e23a2b98f6116d459e4437eb324", "Url": "https://api.github.com/repos/haymh/Group-15-PlaceIt", "Date": "2014-03-10T05:17:49Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gcm.GCMRegistrar.getRegistrationId(com.fifteen.placeit.MainActivity)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((regId.equals(\"\")) || (regId == null)) android.util.Log.wtf(\"GCM\", \"cannot get it fucker work\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6184/buggy-version/src.com.fifteen.placeit.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "93495e6550e05e23a2b98f6116d459e4437eb324", "Url": "https://api.github.com/repos/haymh/Group-15-PlaceIt", "Date": "2014-03-10T05:17:49Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mMode) == (SlidingMenu.RIGHT)) && (item < 1)) item = 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6457/buggy-version/library.src.com.slidingmenu.lib.CustomViewAbove.java", "BodyUseAPI": [], "Fixed commit": "eb1fd8f39626be1dbd412a548cf06b580b3e0cb7", "Url": "https://api.github.com/repos/saltmueller/SlidingMenu", "Date": "2012-11-22T02:10:04Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mMode) == (SlidingMenu.LEFT)) && (item > 1)) item = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6457/buggy-version/library.src.com.slidingmenu.lib.CustomViewAbove.java", "BodyUseAPI": [], "Fixed commit": "eb1fd8f39626be1dbd412a548cf06b580b3e0cb7", "Url": "https://api.github.com/repos/saltmueller/SlidingMenu", "Date": "2012-11-22T02:10:04Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mMode) == (SlidingMenu.LEFT)) && ((mCurItem) == 2)) mCurItem = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6457/buggy-version/library.src.com.slidingmenu.lib.CustomViewAbove.java", "BodyUseAPI": [], "Fixed commit": "eb1fd8f39626be1dbd412a548cf06b580b3e0cb7", "Url": "https://api.github.com/repos/saltmueller/SlidingMenu", "Date": "2012-11-22T02:10:04Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mMode) == (SlidingMenu.RIGHT)) && ((mCurItem) == 0)) mCurItem = 2;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6457/buggy-version/library.src.com.slidingmenu.lib.CustomViewAbove.java", "BodyUseAPI": [], "Fixed commit": "eb1fd8f39626be1dbd412a548cf06b580b3e0cb7", "Url": "https://api.github.com/repos/saltmueller/SlidingMenu", "Date": "2012-11-22T02:10:04Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((strBuilder.length()) == 0) { strBuilder = new java.lang.StringBuilder(\"There are no actions declared yet.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2432/buggy-version/src.de.fhac.ti.yagi.vm.memory.ActionState.java", "BodyUseAPI": [], "Fixed commit": "a009c96c3a50bf2b1a3c2550a35177593c8009dc", "Url": "https://api.github.com/repos/thensgens/yagi-vm", "Date": "2013-06-24T13:21:21Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((allApples.size()) == 0) { (applesCountToGenerate)++; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1227/buggy-version/src.snake.AppleController.java", "BodyUseAPI": [], "Fixed commit": "5462a6d87674db1e20d04c8875fe009d97d8e5fc", "Url": "https://api.github.com/repos/Leofwin/Snake", "Date": "2017-12-13T08:21:46Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == (net.tridentsdk.server.packets.play.in.PacketPlayInEntityInteract.InteractType.INTERACT_AT)) { double x = ((double) (buf.readFloat())); double y = ((double) (buf.readFloat())); double z = ((double) (buf.readFloat())); this.location = net.tridentsdk.Position.create(null, x, y, z); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5326/buggy-version/src.main.java.net.tridentsdk.server.packets.play.in.PacketPlayInEntityInteract.java", "BodyUseAPI": [], "Fixed commit": "b5900861a6c0ae43eb00cf86bf3d813334ad7cf9", "Url": "https://api.github.com/repos/TridentSDK/Trident", "Date": "2015-07-13T07:26:44Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((\"/\".equalsIgnoreCase(token)) && ((this.resource) == null)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7760/buggy-version/modules.ballerina-core.src.main.java.org.ballerinalang.services.dispatchers.uri.parser.Node.java", "BodyUseAPI": [], "Fixed commit": "bc3840d923246b5e58ced2c040bb5c4e59883212", "Url": "https://api.github.com/repos/shafreenAnfar/ballerina", "Date": "2017-06-23T08:02:17Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hint == (net.sourceforge.vrapper.vim.modes.InsertMode.DONT_LOCK_HISTORY)) { lockHistory = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3774/buggy-version/net.sourceforge.vrapper.core.src.net.sourceforge.vrapper.vim.modes.InsertMode.java", "BodyUseAPI": [], "Fixed commit": "5b062555c19988d88165d920563bd7de270d6507", "Url": "https://api.github.com/repos/vrapper/vrapper", "Date": "2012-05-22T02:44:33Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((keyWrapper.securityKeyType) == (org.osgp.adapter.protocol.dlms.domain.entities.SecurityKeyType.E_METER_AUTHENTICATION)) { conn.changeClientGlobalAuthenticationKey(decryptedKey); }else if ((keyWrapper.securityKeyType) == (org.osgp.adapter.protocol.dlms.domain.entities.SecurityKeyType.E_METER_ENCRYPTION)) { conn.changeClientGlobalEncryptionKey(decryptedKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3738/buggy-version/osgp-protocol-adapter-dlms.src.main.java.org.osgp.adapter.protocol.dlms.domain.commands.ReplaceKeyCommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "9c72f6929188739150513e2ea8260ad29e13e35e", "Url": "https://api.github.com/repos/OSGP/Protocol-Adapter-DLMS", "Date": "2016-06-29T06:23:15Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((thingstohopCol[i]) != 0) && ((thingstohopRow[i]) != 0)) { CheckersClient.pieces[thingstohopCol[i]][thingstohopRow[i]] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8677/buggy-version/CheckersClient.java", "BodyUseAPI": [], "Fixed commit": "127e3cc15b2784f1f5ed4bc288813b2681f77a2d", "Url": "https://api.github.com/repos/philipjeffriespdx/Checkers", "Date": "2017-11-19T22:15:31Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((thingstohopCol[i]) != 0) && ((thingstohopRow[i]) != 0)) { CheckersServer.pieces[thingstohopCol[i]][thingstohopRow[i]] = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8677/buggy-version/CheckersServer.java", "BodyUseAPI": [], "Fixed commit": "127e3cc15b2784f1f5ed4bc288813b2681f77a2d", "Url": "https://api.github.com/repos/philipjeffriespdx/Checkers", "Date": "2017-11-19T22:15:31Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (savedInstanceState != null) { lastDialogFoodNames = savedInstanceState.getStringArray(com.chips.AddFoodActivity.LAST_DIALOG_FOOD_NAMES); lastDialogFoodRecords = ((java.util.ArrayList<com.chips.datarecord.FoodRecord>) (savedInstanceState.getSerializable(com.chips.AddFoodActivity.LAST_DIALOG_FOOD_RECORDS))); if (((lastDialogFoodNames) != null) && ((lastDialogFoodRecords) != null)) { makeSelectFoodDialog(lastDialogFoodNames, lastDialogFoodRecords); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5077/buggy-version/CHIPSApp.src.com.chips.AddFoodActivity.java", "BodyUseAPI": ["android.os.Bundle.getSerializable(java.lang.String)", "android.os.Bundle.getStringArray(java.lang.String)"], "Fixed commit": "959cde00d02890b97647dea7e94c2cd1c625386b", "Url": "https://api.github.com/repos/zh2009/CHIPS", "Date": "2012-03-15T22:54:53Z"},
{"Line": "=>743", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Scarif_stable.MapLocation.distanceTo(Scarif_stable.MY_LOCATION)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dist > (Scarif_stable.GardenerPlayer.MIN_SEPARATION_DIST)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5743/buggy-version/src.Scarif_stable.GardenerPlayer.java", "BodyUseAPI": [], "Fixed commit": "08335cdfb05b0089db591bbad4c763d8e50d94de", "Url": "https://api.github.com/repos/devYaoYH/battlecode2017_edoctablet", "Date": "2017-02-06T04:56:53Z"},
{"Line": "=>778", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closeOnCancel) { org.atmosphere.cpr.AtmosphereResponse.class.cast(response).close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1165/buggy-version/modules.cpr.src.main.java.org.atmosphere.cpr.AtmosphereResourceImpl.java", "BodyUseAPI": [], "Fixed commit": "45312a341bd82fea0d45af60fb1dc449fb4de62a", "Url": "https://api.github.com/repos/Atmosphere/atmosphere", "Date": "2015-03-13T22:23:04Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((executorService) == null) { threadPool.shutdown(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3013/buggy-version/webmagic-core.src.main.java.us.codecraft.webmagic.Spider.java", "BodyUseAPI": [], "Fixed commit": "35f5384a60a35460165037bf215480fcb7bbb164", "Url": "https://api.github.com/repos/l1fan/webmagic", "Date": "2017-09-19T00:38:06Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (oldBodyOfCompanion != null) { java.util.List<cn.nekocode.plugin.parcelablegenerator.KtDeclaration> declarations = oldBodyOfCompanion.getDeclarations(); for (cn.nekocode.plugin.parcelablegenerator.KtDeclaration declaration : declarations) { java.lang.String declarationName = declaration.getName(); if ((declarationName != null) && (!(declarationName.equals(\"CREATOR\")))) { oldBodyText.append(declaration.getText()).append(\"\\n\\n\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6262/buggy-version/src.cn.nekocode.plugin.parcelablegenerator.CodeGenerator.java", "BodyUseAPI": ["cn.nekocode.plugin.parcelablegenerator.KtClassBody.getDeclarations()"], "Fixed commit": "b50b6b311c231d3dee4db8e53b47dd0fda4d93a0", "Url": "https://api.github.com/repos/nekocode/android-parcelable-intellij-plugin-kotlin", "Date": "2016-09-24T03:46:38Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((org.osate.aadl2.NamedElement) (obj)).getName()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8111/buggy-version/org.osate.xtext.aadl2.src.org.osate.xtext.aadl2.naming.Aadl2QualifiedNameProvider.java", "BodyUseAPI": [], "Fixed commit": "861adc97a7abbe14150c0ab64da5dc93bb0c3fd8", "Url": "https://api.github.com/repos/osate/osate2-core", "Date": "2013-10-17T02:41:45Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(obj instanceof org.osate.aadl2.NamedElement)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8111/buggy-version/org.osate.xtext.aadl2.src.org.osate.xtext.aadl2.naming.Aadl2QualifiedNameProvider.java", "BodyUseAPI": [], "Fixed commit": "861adc97a7abbe14150c0ab64da5dc93bb0c3fd8", "Url": "https://api.github.com/repos/osate/osate2-core", "Date": "2013-10-17T02:41:45Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((event.getPropertyName()) == (SELECTED_STOCK_PROPERTY)) { io.craigmiller160.stockmarket.gui.StockHistoryPanel.LOGGER.logp(java.util.logging.Level.FINEST, this.getClass().getName(), \"changeProperty\", \"Changing Property\", new java.lang.Object[]{ \"Property: \" + (event.getPropertyName()) }); resetCombo(); }else if ((event.getPropertyName()) == (SELECTED_STOCK_HISTORY_PROPERTY)) { io.craigmiller160.stockmarket.gui.StockHistoryPanel.LOGGER.logp(java.util.logging.Level.FINEST, this.getClass().getName(), \"changeProperty\", \"Changing Property\", new java.lang.Object[]{ \"Property: \" + (event.getPropertyName()) }); if ((event.getNewValue()) instanceof java.util.List<?>) { setStockHistory(((java.util.List<io.craigmiller160.stockmarket.stock.HistoricalQuote>) (event.getNewValue()))); }else { throw new java.lang.IllegalArgumentException((\"Not valid stock history list: \" + (event.getNewValue()))); } }else if ((event.getPropertyName()) == (PORTFOLIO_STATE_PROPERTY)) { io.craigmiller160.stockmarket.gui.StockHistoryPanel.LOGGER.logp(java.util.logging.Level.FINEST, this.getClass().getName(), \"changeProperty\", \"Changing Property\", new java.lang.Object[]{ \"Property: \" + (event.getPropertyName()) }); if ((event.getNewValue()) instanceof io.craigmiller160.stockmarket.gui.PortfolioState) { portfolioStateChanged(((io.craigmiller160.stockmarket.gui.PortfolioState) (event.getNewValue()))); }else { throw new java.lang.IllegalArgumentException((\"Not instance of PortfolioState: \" + (event.getNewValue()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1730/buggy-version/src.main.java.io.craigmiller160.stockmarket.gui.StockHistoryPanel.java", "BodyUseAPI": ["java.beans.PropertyChangeEvent.getNewValue()", "io.craigmiller160.stockmarket.gui.StockHistoryPanel.setStockHistory(java.lang.Object)", "java.beans.PropertyChangeEvent.getNewValue()", "java.beans.PropertyChangeEvent.getPropertyName()", "io.craigmiller160.stockmarket.gui.StockHistoryPanel.portfolioStateChanged(java.lang.Object)", "java.util.logging.Logger.logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])", "java.beans.PropertyChangeEvent.getNewValue()", "java.util.logging.Logger.logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])", "java.beans.PropertyChangeEvent.getNewValue()", "java.beans.PropertyChangeEvent.getPropertyName()", "java.beans.PropertyChangeEvent.getNewValue()", "java.beans.PropertyChangeEvent.getPropertyName()", "java.util.logging.Logger.logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])", "java.beans.PropertyChangeEvent.getNewValue()", "java.beans.PropertyChangeEvent.getPropertyName()", "java.beans.PropertyChangeEvent.getPropertyName()"], "Fixed commit": "98f057735ebcdf01af0e3a85891e19ee530b75b9", "Url": "https://api.github.com/repos/craigmiller160/StockMarket-2.0", "Date": "2015-09-16T02:48:54Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wordpress.android.fluxc.network.xmlrpc.site.SiteXMLRPCClient.getOption(java.util.Map<?, ?>,java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(\"false\".equals(jetpackClientIdStr))) { jetpackClientId = string2Long(jetpackClientIdStr, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6200/buggy-version/fluxc.src.main.java.org.wordpress.android.fluxc.network.xmlrpc.site.SiteXMLRPCClient.java", "BodyUseAPI": ["org.wordpress.android.fluxc.network.xmlrpc.site.SiteXMLRPCClient.string2Long(java.lang.String,int)"], "Fixed commit": "d3cb77441572711f81ce4ae68816c92564a29c0c", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-FluxC-Android", "Date": "2017-02-02T16:45:54Z"},
{"Line": "=>2539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(stepMode)) && (!(started))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3787/buggy-version/CodenameOne.src.com.codename1.ui.Component.java", "BodyUseAPI": [], "Fixed commit": "ce03e18f547e1f12090cd9c08b8cc4ad0ae624a5", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2016-09-09T05:43:25Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (didRun != (isOn)) { isOn = didRun; world.setBlockState(pos, world.getBlockState(pos).withProperty(BlockThermalGenerator.ACTIVE, isOn)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3138/buggy-version/src.main.java.techreborn.tiles.generator.TileThermalGenerator.java", "BodyUseAPI": [], "Fixed commit": "a4a4042eb19f4b021b576aaa561e3aeb6a80c615", "Url": "https://api.github.com/repos/TechReborn/TechReborn", "Date": "2017-06-13T21:37:03Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (idType == null) { idType = currentClass.getType(name); if (idType == null) { throw new se.kth.hugosa.compiler.typechecking.UndefinedVariableException(name, id.getLine(), id.getColumn()); }else { return idType; } }else { return idType; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3807/buggy-version/src.se.kth.hugosa.compiler.typechecking.TypeChecker.java", "BodyUseAPI": [], "Fixed commit": "7fccddabf9b932193c2440974f9dcb93be46f09a", "Url": "https://api.github.com/repos/hugoflug/compiler", "Date": "2014-03-26T23:29:37Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (null != fragment) { this.runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { recreateFragmentView(fragment); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4970/buggy-version/src.org.openmrs.mobile.activities.PatientDashboardActivity.java", "BodyUseAPI": ["org.openmrs.mobile.activities.PatientDashboardActivity.3.recreateFragmentView(android.support.v4.app.Fragment)", "org.openmrs.mobile.activities.PatientDashboardActivity.runOnUiThread(java.lang.Runnable)"], "Fixed commit": "f98e051094dbf6dd9187bf399da68aba94421032", "Url": "https://api.github.com/repos/ehaligowska/openmrs-contrib-android-client", "Date": "2015-02-02T15:52:43Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inGame) isHighGoal = true; else isHighGoal = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/493/buggy-version/app.src.main.java.com.example.huzheyuan.scout.activities.Frc2017Activity.java", "BodyUseAPI": [], "Fixed commit": "24d525a2cae0ded180f9fc312c5a7863137d71cc", "Url": "https://api.github.com/repos/Chaminade-Application-Development-Club/Scout", "Date": "2017-03-17T16:24:44Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.convertSingleValueToTargetType(java.lang.Class<?>,java.lang.Class<?>,java.lang.Object,de.gebit.integrity.parameter.conversion.UnresolvableVariableHandling,java.util.Set<java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(tempTargetArrayType.isAssignableFrom(tempConvertedValue.getClass()))) { tempTargetArrayType = java.lang.Object.class; java.lang.Object tempOldArray = tempArray; tempArray = java.lang.reflect.Array.newInstance(tempTargetArrayType, java.lang.reflect.Array.getLength(aValue)); java.lang.System.arraycopy(tempOldArray, 0, tempArray, 0, i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5163/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.java", "BodyUseAPI": [], "Fixed commit": "9d294d62c9c66ee7d894acda7eaaa40114e9ef7e", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2013-08-08T12:08:43Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends java.lang.Object>.getComponentType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tempCurrentArrayType == (java.lang.Object.class)) { tempTargetArrayType = java.lang.Object.class; }else { java.lang.Class<? extends de.gebit.integrity.parameter.conversion.Conversion<?, ?>> tempConversionClass = findConversion(tempCurrentArrayType, aTargetType, someVisitedValues); de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.ConversionKey tempKey = conversionToKey.get(tempConversionClass); tempTargetArrayType = tempKey.getTargetType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5163/buggy-version/de.gebit.integrity.dsl.src.de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.java", "BodyUseAPI": ["de.gebit.integrity.parameter.conversion.AbstractModularValueConverter.findConversion(java.lang.Class<?>,java.lang.Class<?>,java.util.Set<java.lang.Object>)"], "Fixed commit": "9d294d62c9c66ee7d894acda7eaaa40114e9ef7e", "Url": "https://api.github.com/repos/integrity-tf/integrity", "Date": "2013-08-08T12:08:43Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xcompwiz.lookingglass.client.proxyworld.ProxyWorldManager.getProxyworld(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((proxyworld.provider.dimensionId) == (net.minecraft.client.Minecraft.getMinecraft().thePlayer.dimension)) proxyworld.removeWorldAccess(view.getRenderGlobal());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7781/buggy-version/src.main.java.com.xcompwiz.lookingglass.client.proxyworld.ProxyWorldManager.java", "BodyUseAPI": ["net.minecraft.client.multiplayer.WorldClient.removeWorldAccess(view.getRenderGlobal())"], "Fixed commit": "b788bf14186ace17eb38c26094bb15ce2b325b64", "Url": "https://api.github.com/repos/Geforce132/LookingGlass", "Date": "2015-11-20T17:10:04Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ibm.commons.util.io.json.JsonJavaObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.ibm.commons.util.StringUtil.isEmpty(apiKey)) { apiKey = ((java.lang.String) (credentials.get(\"api_key\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/331/buggy-version/xpages-fusion-ondisk.Code.Java.com.ibm.xsp.bluemix.util.BluemixContextUtil.java", "BodyUseAPI": [], "Fixed commit": "0708b78312209ae0eee61cbf9d7dd37bd0fbb7d5", "Url": "https://api.github.com/repos/briangleeson/XPages-Fusion-Application", "Date": "2016-05-24T19:52:18Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rCode == 401) { throw new us.monoid.web.RestyAuthenticationException(e.getMessage(), conn.getRequestMethod()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4574/buggy-version/src.us.monoid.web.AbstractResource.java", "BodyUseAPI": [], "Fixed commit": "dca0040f727c90b6c605653277c24a44bbc6c409", "Url": "https://api.github.com/repos/douo/resty-froyo", "Date": "2012-07-31T18:17:13Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sharedPreferences.getBoolean(\"notification_sound_key\", true)) { com.brainydroid.daydreaming.background.Logger.v(com.brainydroid.daydreaming.background.ProbeService.TAG, \"Activating sound\"); flags |= android.app.Notification.DEFAULT_SOUND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/858/buggy-version/daydreaming.src.main.java.com.brainydroid.daydreaming.background.ProbeService.java", "BodyUseAPI": [], "Fixed commit": "6ef27f3e7e577fded48221d3be9f89bb7a2f94a6", "Url": "https://api.github.com/repos/daydreaming-experiment/app", "Date": "2014-09-09T21:00:21Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (successor == null) return null; else return successor.mData;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1377/buggy-version/BinaryTree.java", "BodyUseAPI": [], "Fixed commit": "b83d4bb7b88766b3ab65113768b46bc01955d5d0", "Url": "https://api.github.com/repos/PingChinHuang/java_practice", "Date": "2017-02-18T09:54:47Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (predecessor == null) return null; else return predecessor.mData;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1377/buggy-version/BinaryTree.java", "BodyUseAPI": [], "Fixed commit": "b83d4bb7b88766b3ab65113768b46bc01955d5d0", "Url": "https://api.github.com/repos/PingChinHuang/java_practice", "Date": "2017-02-18T09:54:47Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((treffer_rechts) == false) { Menue.get_game().bomb[((this.x) + x)][this.y].bombe_detonieren(Spieler, bomben_radius); Menue.get_game().bomb[((this.x) + x)][this.y].detoniert = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7638/buggy-version/src.Bombe.java", "BodyUseAPI": [], "Fixed commit": "cff7aa12011705c76944ca6f18fc4c08e2aa7651", "Url": "https://api.github.com/repos/propra12-orga/gruppe23", "Date": "2012-07-04T16:14:55Z"},
{"Line": "=>709", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((treffer_oben) == false) { Menue.get_game().bomb[this.x][((this.y) + y)].bombe_detonieren(Spieler, bomben_radius); Menue.get_game().bomb[this.x][((this.y) + y)].detoniert = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7638/buggy-version/src.Bombe.java", "BodyUseAPI": [], "Fixed commit": "cff7aa12011705c76944ca6f18fc4c08e2aa7651", "Url": "https://api.github.com/repos/propra12-orga/gruppe23", "Date": "2012-07-04T16:14:55Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((treffer_unten) == false) { Menue.get_game().bomb[this.x][((this.y) + y)].bombe_detonieren(Spieler, bomben_radius); Menue.get_game().bomb[this.x][((this.y) + y)].detoniert = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7638/buggy-version/src.Bombe.java", "BodyUseAPI": [], "Fixed commit": "cff7aa12011705c76944ca6f18fc4c08e2aa7651", "Url": "https://api.github.com/repos/propra12-orga/gruppe23", "Date": "2012-07-04T16:14:55Z"},
{"Line": "=>682", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((treffer_links) == false) { Menue.get_game().bomb[((this.x) + x)][this.y].bombe_detonieren(Spieler, bomben_radius); Menue.get_game().bomb[((this.x) + x)][this.y].detoniert = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7638/buggy-version/src.Bombe.java", "BodyUseAPI": [], "Fixed commit": "cff7aa12011705c76944ca6f18fc4c08e2aa7651", "Url": "https://api.github.com/repos/propra12-orga/gruppe23", "Date": "2012-07-04T16:14:55Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((memeStrings.size()) < position) { return convertView; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7611/buggy-version/ASCIICopypasta.app.src.main.java.copy_pasta.admin.asciicopypasta.MemeListFragment.java", "BodyUseAPI": [], "Fixed commit": "0788a6aabbd0f928279e23e03fa344915e23dec2", "Url": "https://api.github.com/repos/MartinMinkov/ASCII-Copypasta", "Date": "2015-09-01T19:28:07Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mCandidateView) == null) || ((mCandidateView) == (mCandidateViewInInputView))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1564/buggy-version/LimeStudio.app.src.main.java.net.toload.main.hd.LIMEService.java", "BodyUseAPI": [], "Fixed commit": "bcf6e9258c8a02d690fdb14a1edf0ad487ad1635", "Url": "https://api.github.com/repos/lime-ime/limeime", "Date": "2015-07-09T14:46:52Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((crlValidity.getIssuerToken()) != null) { this.issuerToken = crlValidity.getIssuerToken(); this.issuerX500Principal = crlValidity.getIssuerToken().getSubjectX500Principal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5515/buggy-version/dss-spi.src.main.java.eu.europa.esig.dss.x509.crl.CRLToken.java", "BodyUseAPI": ["eu.europa.esig.dss.x509.crl.CRLValidity.getIssuerToken()", "eu.europa.esig.dss.x509.crl.CRLValidity.getIssuerToken()", "crlValidity.getIssuerToken().getSubjectX500Principal()"], "Fixed commit": "d206c00d61f22f5ae487d847e49e985d7addf1d2", "Url": "https://api.github.com/repos/openlimit-signcubes/dss", "Date": "2017-03-17T10:11:25Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endDate == null) { dispatchEvent(new be.shad.tl.ui.model.event.TaskStartedEvent(taskEntry.getTaskId())); }else { dispatchEvent(new be.shad.tl.ui.model.event.EntryChangedEvent(entryId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1039/buggy-version/src.main.java.be.shad.tl.ui.form.TimeLoggerController.java", "BodyUseAPI": [], "Fixed commit": "48bdc3264f8cb97d20f11b6eb879821f760ef636", "Url": "https://api.github.com/repos/gert-wijns/TimeLoggerTool", "Date": "2014-09-18T20:09:16Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Expression.Builder.build()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (replacedExpr1.equals(reciever)) return boa.functions.BoaNormalFormIntrinsics.createVariable(\"rcv$\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6632/buggy-version/src.java.boa.functions.BoaNormalFormIntrinsics.java", "BodyUseAPI": [], "Fixed commit": "fbadcbe936a097f21632a80f3e02cdda7c0fc136", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2017-12-16T03:19:53Z"},
{"Line": "=>464", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!mixinFoundOnEntity) { org.occiware.mart.server.model.MixinBase mixinBase = org.eclipse.cmf.occi.core.util.OcciHelper.createMixinBase(entity, mixin); org.occiware.mart.server.model.MixinManager.LOGGER.warn((((\"created mixinbase: \" + (mixinBase.toString())) + \" for mixin tag: \") + mixinTagToApplyId)); mixinBase.getAttributes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/271/buggy-version/org.occiware.mart.server.src.main.java.org.occiware.mart.server.model.MixinManager.java", "BodyUseAPI": [], "Fixed commit": "f5c5e4a6a35578a963bc610112f1299ee2263166", "Url": "https://api.github.com/repos/occiware/MartServer", "Date": "2017-09-06T07:02:14Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ActivityManager.orderComplete) != null) { ActivityManager.orderComplete.finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4858/buggy-version/app.src.main.java.com.megawats.coffeepicker.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "45bfd8591b07a5b0823ef79d1e60d7dfa798d161", "Url": "https://api.github.com/repos/Megawats777/CoffeePicker", "Date": "2016-09-08T21:09:05Z"},
{"Line": "=>837", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portlet.expando.service.impl.ExpandoValueLocalServiceImpl.findByRowId(value.getRowId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (values.isEmpty()) { com.liferay.expando.kernel.model.ExpandoRow row = expandoRowPersistence.fetchByPrimaryKey(value.getRowId()); expandoRowPersistence.remove(row); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6782/buggy-version/portal-impl.src.com.liferay.portlet.expando.service.impl.ExpandoValueLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "e63e864062b2b4e46ee79fe1f1c4e4c0b4e3a868", "Url": "https://api.github.com/repos/cgoncas/liferay-portal", "Date": "2016-11-25T09:04:16Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((club.getTeams().size()) > 0) addAllTeams(club.getTeams(), club);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/9137/buggy-version/src.org.fofo.services.management.ManagementService.java", "BodyUseAPI": ["org.fofo.entity.Club.getTeams()", "org.fofo.services.management.ManagementService.addAllTeams(club.getTeams(),org.fofo.entity.Club)"], "Fixed commit": "819e52eedcb236293436040da08f4f777682ddf8", "Url": "https://api.github.com/repos/josepma/fofo", "Date": "2013-06-11T09:26:57Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node) != null) node.removeClassName(css.selected());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2793/buggy-version/src.main.java.com.googlecode.mgwt.ui.client.widget.CellList.java", "BodyUseAPI": [], "Fixed commit": "940a680b269115e83492d57de2c4d9e1c6f03de1", "Url": "https://api.github.com/repos/dankurka/mgwt", "Date": "2012-05-28T16:53:47Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAddress) != null) { mAddress = mAddress.replace(\"\\\\n\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2405/buggy-version/ristaurants.src.main.java.com.ristaurants.ristaurants.app.MapLocation.java", "BodyUseAPI": [], "Fixed commit": "fe1c458be7c996e81bb77421e2bc233b4b3d9245", "Url": "https://api.github.com/repos/RiStaurants/RiStaurants", "Date": "2014-03-03T22:58:29Z"},
{"Line": "=>782", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) <= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { jp.co.recruit_lifestyle.android.floatingview.TrashView.AnimationHandler.clearClippedChildren(trashView.mRootView); jp.co.recruit_lifestyle.android.floatingview.TrashView.AnimationHandler.clearClippedChildren(trashView.mTrashIconRootView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5423/buggy-version/library.src.main.java.jp.co.recruit_lifestyle.android.floatingview.TrashView.java", "BodyUseAPI": [], "Fixed commit": "ed991f8b616abb291f9e4f6ba6f3ca1e8a5e01a6", "Url": "https://api.github.com/repos/recruit-lifestyle/FloatingView", "Date": "2017-02-02T08:22:11Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isVibrateInThisSession)) { final android.os.Vibrator vibrator = ((android.os.Vibrator) (getContext().getSystemService(Context.VIBRATOR_SERVICE))); vibrator.vibrate(com.txusballesteros.bubbles.BubbleTrashLayout.VIBRATION_DURATION_IN_MS); isVibrateInThisSession = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/736/buggy-version/bubbles.src.main.java.com.txusballesteros.bubbles.BubbleTrashLayout.java", "BodyUseAPI": [], "Fixed commit": "ce0cb01fcb1f1b683a809324317dae93e0bb46ae", "Url": "https://api.github.com/repos/stumi01/bubbles-for-android", "Date": "2017-04-04T09:25:20Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (currentItem != null) return java.util.Collections.singletonList(currentItem); else return java.util.Collections.emptyList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/538/buggy-version/server.src.io.seldon.recommendation.filters.base.CurrentItemFilter.java", "BodyUseAPI": ["java.util.Collections.singletonList(java.lang.Long)"], "Fixed commit": "480620b62bdd419c51f763f860c5051275dfa3d8", "Url": "https://api.github.com/repos/SeldonIO/seldon-server", "Date": "2016-03-16T19:04:51Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.artbeatte.exercises.memorygame.Card>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (c.equals(mCards.get(mFlippedIndex))) { mMatched = true; mCards.set(mFlippedIndex, null); mCards.set(attemptIndex, null); mCardsLeft -= 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5348/buggy-version/src.main.java.com.artbeatte.exercises.memorygame.MemoryGameBoard.java", "BodyUseAPI": ["java.util.ArrayList<com.artbeatte.exercises.memorygame.Card>.set(int,<nulltype>)", "java.util.ArrayList<com.artbeatte.exercises.memorygame.Card>.set(int,<nulltype>)"], "Fixed commit": "e3a291fa99682a23bdc59da76c8cd5c264ff2d0f", "Url": "https://api.github.com/repos/abeatte/Exercises", "Date": "2016-01-22T19:21:19Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (treeNode == null) { java.lang.System.out.println(\"it is root , no parent.\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/869/buggy-version/src.main.java.com.sysu.workflow.env.MulitStateMachineDispatcher.java", "BodyUseAPI": [], "Fixed commit": "a1055bd816ea1d273e71a5f38c79727623db5107", "Url": "https://api.github.com/repos/ThinerZQ/BOWorkflow", "Date": "2016-02-28T14:35:23Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (length > (com.lemondronor.modesbeast.BeastMessageParser.maximumBufferSize)) { readBufferLength = 0; length = bytesRead; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4894/buggy-version/src.main.java.com.lemondronor.modesbeast.BeastMessageParser.java", "BodyUseAPI": [], "Fixed commit": "32e41829616fcd826534090046c69c423eb9db83", "Url": "https://api.github.com/repos/wiseman/java-mode-s-beast", "Date": "2016-06-01T02:52:46Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((arg.charAt(0)) == '-') && (\"sdop\".contains(arg.substring(1, 2)))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/231/buggy-version/src.main.java.com.yogpc.fb.CompilerCaller.java", "BodyUseAPI": [], "Fixed commit": "54eb282977b86845dfd2e8d87ebe13085f94551b", "Url": "https://api.github.com/repos/yogpstop/ForgeBuilder", "Date": "2014-12-30T19:00:34Z"},
{"Line": "=>389", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getAbsolutePath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (path.substring(((path.length()) - 4)).equals(\".map\")) { writer = new java.io.PrintWriter(path, \"UTF-8\"); }else { writer = new java.io.PrintWriter((path + \".map\"), \"UTF-8\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5206/buggy-version/src.komorebi.clyde.map.Map.java", "BodyUseAPI": [], "Fixed commit": "ca360569dcba8cc0d0f815a4d91bca12da30cf43", "Url": "https://api.github.com/repos/aroy99/clydes", "Date": "2016-06-28T02:28:21Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.web.client.RestTemplate.exchange(java.lang.String,HttpMethod.GET,org.springframework.http.HttpEntity<java.lang.String>,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isErrorResponse(org.apache.commons.lang3.StringUtils.trim(response.getBody()))) { throw new pl.edu.icm.saos.importer.commoncourt.judgment.download.SourceCcJudgmentDownloadErrorException(response.getBody()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7291/buggy-version/saos-import.src.main.java.pl.edu.icm.saos.importer.commoncourt.judgment.download.SourceCcjExternalRepository.java", "BodyUseAPI": ["org.springframework.http.ResponseEntity<java.lang.String>.getBody()"], "Fixed commit": "ed635b6fbf7d59c28f600ba5ba7bcab4d7501d2d", "Url": "https://api.github.com/repos/CeON/saos", "Date": "2015-02-05T13:17:07Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tl instanceof org.sbolstandard.core2.Sequence) { if (!(design.removeSequence(design.getSequence(tl.getIdentity())))) { throw new java.lang.Exception(((\"ERROR: \" + (tl.getDisplayId())) + \" didn't get removed\")); } }else if (tl instanceof org.sbolstandard.core2.GenericTopLevel) { if (!(design.removeGenericTopLevel(design.getGenericTopLevel(tl.getIdentity())))) { throw new java.lang.Exception(((\"ERROR: \" + (tl.getDisplayId())) + \" didn't get removed\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5779/buggy-version/src.main.java.edu.utah.ece.async.sboldesigner.sbol.SBOLUtils.java", "BodyUseAPI": ["org.sbolstandard.core2.TopLevel.getIdentity()", "org.sbolstandard.core2.TopLevel.getDisplayId()", "org.sbolstandard.core2.SBOLDocument.getSequence(tl.getIdentity())", "org.sbolstandard.core2.TopLevel.getIdentity()", "org.sbolstandard.core2.TopLevel.getDisplayId()", "org.sbolstandard.core2.SBOLDocument.getGenericTopLevel(tl.getIdentity())", "org.sbolstandard.core2.SBOLDocument.removeSequence(design.getSequence(tl.getIdentity()))", "org.sbolstandard.core2.SBOLDocument.removeGenericTopLevel(design.getGenericTopLevel(tl.getIdentity()))"], "Fixed commit": "d1a9706fed9c28b595af1f721fca766142d9d47f", "Url": "https://api.github.com/repos/SynBioDex/SBOLDesigner", "Date": "2017-09-12T21:42:25Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mForecast) != null) { intent.putExtra(com.example.enes.stormy.UI.MainActivity.Daily_Forecast, mForecast.getDailyForecast()); startActivity(intent); }else { android.widget.Toast.makeText(this, R.string.error_network, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7267/buggy-version/app.src.main.java.com.example.enes.stormy.UI.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a83588aab99563da7525b3f8a21761e9eb47eda8", "Url": "https://api.github.com/repos/eneserciyes/Stormy", "Date": "2016-07-09T18:44:33Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mForecast) != null) { intent.putExtra(com.example.enes.stormy.UI.MainActivity.Hourly_Forecast, mForecast.getHourlyForecast()); startActivity(intent); }else { android.widget.Toast.makeText(this, R.string.error_network, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7267/buggy-version/app.src.main.java.com.example.enes.stormy.UI.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a83588aab99563da7525b3f8a21761e9eb47eda8", "Url": "https://api.github.com/repos/eneserciyes/Stormy", "Date": "2016-07-09T18:44:33Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<mobi.omegacentauri.brainflex.BrainFlex.Data>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n < 2) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3795/buggy-version/src.mobi.omegacentauri.brainflex.BrainFlex.java", "BodyUseAPI": [], "Fixed commit": "c2810f22d84fadc4718cde5f2a2ecaa063d4d82e", "Url": "https://api.github.com/repos/arpruss/brainflex", "Date": "2014-07-23T16:20:18Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<mobi.omegacentauri.brainflex.BrainFlex.Data>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (n < 2) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3795/buggy-version/src.mobi.omegacentauri.brainflex.BrainFlex.java", "BodyUseAPI": [], "Fixed commit": "c2810f22d84fadc4718cde5f2a2ecaa063d4d82e", "Url": "https://api.github.com/repos/arpruss/brainflex", "Date": "2014-07-23T16:20:18Z"},
{"Line": "=>1583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.canUseCommand(\"/cIgnoreRestrictions\"))) { player.sendMessage(((Colors.Rose) + (Cuboids2.msg.messages.get(\"permissionDenied\")))); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5181/buggy-version/src.CommandListener.java", "BodyUseAPI": ["Player.sendMessage(((Colors.Rose) + (Cuboids2.msg.messages.get(\"permissionDenied\"))))"], "Fixed commit": "24869631ba9eab1c42717050db6b8d394f108878", "Url": "https://api.github.com/repos/damagefilter/Cuboids2", "Date": "2012-03-29T12:43:51Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.services.telephony.TelephonyConnection.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (connExtras == null) { connExtras = new android.os.Bundle(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2694/buggy-version/src.com.android.services.telephony.TelephonyConnectionService.java", "BodyUseAPI": [], "Fixed commit": "dd71aeee1569f2290566e985d5d21af12169a27c", "Url": "https://api.github.com/repos/PAC-ROM/android_packages_services_Telephony", "Date": "2015-10-25T03:33:39Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Func == null) || (Func instanceof zen.lang.ZenDefiningFunc)) { this.DefiningFunc = ((zen.lang.ZenDefiningFunc) (Func)); }else { this.DefiningFunc = new zen.lang.ZenDefiningFunc(Func.FuncFlag, Func.FuncName, Func.FuncType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/924/buggy-version/src.zen.parser.ZenNameSpace.java", "BodyUseAPI": [], "Fixed commit": "28dd75ea6015b63b358d157ce02f906102027dc6", "Url": "https://api.github.com/repos/konoha-project/libzen", "Date": "2014-01-15T08:56:15Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subjectProvider) == null) { subjectProvider = new no.hal.pg.runtime.engine.http.AuthHeaderSubjectProvider(engine.getGame()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3778/buggy-version/no.hal.pg.runtime.http.src.no.hal.pg.runtime.engine.http.EngineDataServlet.java", "BodyUseAPI": [], "Fixed commit": "e28d8900085c41bff6cad63d1e360a3023285298", "Url": "https://api.github.com/repos/hallvard/tdt4250", "Date": "2015-11-02T11:55:18Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (selectionAst == null) { return emptyList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/300/buggy-version/org.strategoxt.imp.runtime.src.org.strategoxt.imp.runtime.services.views.properties.PropertiesService.java", "BodyUseAPI": [], "Fixed commit": "197d233dd15dac559b4811133894a29c3647d9c8", "Url": "https://api.github.com/repos/metaborg/spoofax", "Date": "2014-03-27T18:40:33Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) == null) { net.myconbook.android.Log.w(\"UpdateFragment.showError activity is null\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3103/buggy-version/MyConbook.src.main.java.net.myconbook.android.ui.UpdateFragment.java", "BodyUseAPI": [], "Fixed commit": "cb26c63ad680295f5627f523b758b9e379ac8b61", "Url": "https://api.github.com/repos/MyConbook/myconbook-android", "Date": "2014-07-06T19:49:54Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getStage()) != null) getStage().setKeyboardFocus(classPanel.getField());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8709/buggy-version/adventure-editor.src.main.java.com.bladecoder.engineeditor.ui.EditActionDialog.java", "BodyUseAPI": [], "Fixed commit": "1cf62694dae67c55cb9d7a6e4e3347f0cbb597fb", "Url": "https://api.github.com/repos/bladecoder/bladecoder-adventure-engine", "Date": "2016-06-21T17:45:52Z"},
{"Line": "=>558", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((simpleClassName.endsWith(\"$\")) && ((simpleClassName.length()) > 1)) { simpleClassName = simpleClassName.substring(0, ((simpleClassName.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7251/buggy-version/PluginsAndFeatures.azure-toolkit-for-eclipse.com.microsoft.azuretools.hdinsight.src.com.microsoft.azuretools.hdinsight.spark.ui.SparkSubmissionExDialog.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "0327ce8ef9db50bf93885a40b5267bfbc358fcf4", "Url": "https://api.github.com/repos/djlan/azure-tools-for-java", "Date": "2017-11-30T04:28:30Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.IType.getElementName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((simpleClassName == null) || (simpleClassName.isEmpty())) { simpleClassName = unitName.substring(0, ((unitName.length()) - 6)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7251/buggy-version/PluginsAndFeatures.azure-toolkit-for-eclipse.com.microsoft.azuretools.hdinsight.src.com.microsoft.azuretools.hdinsight.spark.ui.SparkSubmissionExDialog.java", "BodyUseAPI": [], "Fixed commit": "0327ce8ef9db50bf93885a40b5267bfbc358fcf4", "Url": "https://api.github.com/repos/djlan/azure-tools-for-java", "Date": "2017-11-30T04:28:30Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(status.canDo(Task.SHENG_LING_QUAN))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/671/buggy-version/src.main.java.com.peace.auto.bl.ShengLingQuan.java", "BodyUseAPI": [], "Fixed commit": "980ead8880a0e79f68630b02ae8ab8716168265f", "Url": "https://api.github.com/repos/peace0phmind/blauto", "Date": "2016-03-24T07:45:09Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pluginSettingService.isActive(channelId, pluginId)) { boolean isChannelActive = setting.isChannelActive(channelId); channelStatus.put(channelId, isChannelActive); channelCheckBoxList.put(channelId, new org.exoplatform.social.portlet.userNotification.UserNotificationSetting.CheckBoxInput(channelId, pluginId, setting.isActive(channelId, pluginId), isChannelActive)); if (UserSetting.EMAIL_CHANNEL.equals(channelId)) { parameters.put(\"emailSelectBox\", new org.exoplatform.social.portlet.userNotification.UserNotificationSetting.SelectBoxInput((channelId + pluginId), options, getValue(setting, pluginId), isChannelActive)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8002/buggy-version/webapp.juzu-portlet.src.main.java.org.exoplatform.social.portlet.userNotification.UserNotificationSetting.java", "BodyUseAPI": ["UserSetting.EMAIL_CHANNEL.equals(java.lang.String)", "org.exoplatform.social.portlet.userNotification.UserNotificationSetting.getValue(org.exoplatform.commons.api.notification.model.UserSetting,java.lang.String)", "org.exoplatform.commons.api.notification.model.UserSetting.isChannelActive(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,org.exoplatform.social.portlet.userNotification.UserNotificationSetting.SelectBoxInput)", "java.util.Map<java.lang.String, java.lang.Boolean>.put(java.lang.String,boolean)", "java.util.Map<java.lang.String, org.exoplatform.social.portlet.userNotification.UserNotificationSetting.CheckBoxInput>.put(java.lang.String,org.exoplatform.social.portlet.userNotification.UserNotificationSetting.CheckBoxInput)", "org.exoplatform.commons.api.notification.model.UserSetting.isActive(java.lang.String,java.lang.String)"], "Fixed commit": "115e98eb0ec1e67e04161302b05b480ab206b372", "Url": "https://api.github.com/repos/exodev/social", "Date": "2014-12-15T07:12:27Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((display) != null) { int cellSize = ((javax.swing.SpinnerNumberModel) (cellSizeSpinner.getModel())).getNumber().intValue(); display.setCellSize(cellSize); scrollContentPane.setScrollIncrement(cellSize); scrollContentPane.setPreferredSize(new java.awt.Dimension((cellSize * (display.getBoard().getWidth())), (cellSize * (display.getBoard().getHeight())))); displayFrame.pack(); display.setImageToDraw(display.getBufferedImage()); displayFrame.revalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4413/buggy-version/src.automata.conwaysgameoflife.support.SetupFrame.java", "BodyUseAPI": [], "Fixed commit": "85d8e3f9de0a318fc4be2f9aca11b34564341717", "Url": "https://api.github.com/repos/UMassCS187HH/project1-automata", "Date": "2016-10-02T21:45:04Z"},
{"Line": "=>862", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mapping == null) { mapping = com.alibaba.fastjson.parser.ParserConfig.global; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/501/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": [], "Fixed commit": "f780cfb16659dcebc6ed238c6687855e9085c04e", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-12-13T13:14:09Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ext.android.permissions.ExtPermissionManager.onPermissionResult(ext.android.permissions.ExtPermission,java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (permissionHandled) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6140/buggy-version/src.main.java.ext.android.permissions.ExtPermissionManager.java", "BodyUseAPI": [], "Fixed commit": "b68f142a5cb78961c8f06dc8bac05279a7f0b179", "Url": "https://api.github.com/repos/java-extensions/ext-android", "Date": "2017-02-23T11:04:56Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((transitionSeqs.size()) == 0) { transitionSeqs.addAll(java.util.Arrays.asList(transitions)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/109/buggy-version/EFSMVisualizer.src.model.Automata.java", "BodyUseAPI": ["java.util.LinkedList<model.Transition>.addAll(java.util.List)"], "Fixed commit": "83df664e1d111c74dc2293b49e7e3ae88584539e", "Url": "https://api.github.com/repos/shwarzes89/EFSM-visualizer", "Date": "2014-12-22T22:06:21Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IFolder.getFile(org.github.pde2virgo.Constants.MANIFEST_MF)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(binaryManifest.exists())) { if (org.github.pde2virgo.Helper.DEBUG) { org.github.pde2virgo.Helper.debug(\"bin/META-INF/MANIFEST.MF does not exist\"); } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3039/buggy-version/plugins.org.github.pde2virgo.src.org.github.pde2virgo.Helper.java", "BodyUseAPI": [], "Fixed commit": "3c786520889cf9930fd54b475ec8cd99ae4fdd33", "Url": "https://api.github.com/repos/giamma/pde2virgo", "Date": "2012-10-05T14:46:30Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key == (-1)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2168/buggy-version/app.src.main.java.movienight.javi.com.movienight.ui.SearchActivity.SearchActivity.java", "BodyUseAPI": [], "Fixed commit": "66338aab69d2999a636f398d51a66e5215dbb476", "Url": "https://api.github.com/repos/JaviMera/MovieNight", "Date": "2016-10-31T18:21:01Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNewUser) { getUserDetailsFromFB(jsonObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3289/buggy-version/app.src.main.java.com.cs180.ucrtinder.ucrtinder.ui.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "51555c7c031b627ec74163fa3c57110dbf35bb2b", "Url": "https://api.github.com/repos/drami025/cs180_project", "Date": "2015-11-05T12:15:08Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ids.size()) > 0) liveOddRepository.aliveReceived(new java.util.Date(), ids);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2354/buggy-version/src.main.java.kz.nmbet.betradar.dao.service.PrivateLiveService.java", "BodyUseAPI": ["kz.nmbet.betradar.dao.repository.GlMatchLiveOddRepository.aliveReceived(java.util.Date,java.util.List<java.lang.Integer>)"], "Fixed commit": "2eb542dd3d04bd2c257c84aa9f13e455dd1861c1", "Url": "https://api.github.com/repos/Parabul/betting-engine-alpha", "Date": "2016-08-18T16:35:59Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((parent.reference.size()) <= (pointer)) { parent.reference.add(pointer, new java.util.HashMap<>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/291/buggy-version/src.main.java.org.m410.config.YamlConfiguration.java", "BodyUseAPI": ["java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.add(int,java.util.HashMap<>)"], "Fixed commit": "53a83b6b0c2b130f7dfd105848e85ba679587254", "Url": "https://api.github.com/repos/m410/commons-configuration-yaml", "Date": "2016-09-12T12:07:03Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (type != null) { switch (type) { case \"Pet\" : r = new org.json.JSONObject(\"{ \\\"id\\\": 0, \\\"category\\\": { \\\"id\\\": 0, \\\"name\\\": \\\"string\\\" }, \\\"name\\\": \\\"doggie\\\", \\\"photoUrls\\\": [ \\\"string\\\" ], \\\"tags\\\": [ { \\\"id\\\": 0, \\\"name\\\": \\\"string\\\" } ], \\\"status\\\": \\\"string\\\" }\"); break; case \"User\" : r = new org.json.JSONObject(\"{ \\\"id\\\": 0, \\\"username\\\": \\\"string\\\", \\\"firstName\\\": \\\"string\\\", \\\"lastName\\\": \\\"string\\\", \\\"email\\\": \\\"string\\\", \\\"password\\\": \\\"string\\\", \\\"phone\\\": \\\"string\\\", \\\"userStatus\\\": 0 }\"); break; default : r = new org.json.JSONObject(\"{ \\\"id\\\": 0, \\\"category\\\": { \\\"id\\\": 0, \\\"name\\\": \\\"string\\\" }, \\\"name\\\": \\\"doggie\\\", \\\"photoUrls\\\": [ \\\"string\\\" ], \\\"tags\\\": [ { \\\"id\\\": 0, \\\"name\\\": \\\"string\\\" } ], \\\"status\\\": \\\"string\\\" }\"); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7172/buggy-version/fuzzing.src.main.java.tp.esir3.vv.Tools.java", "BodyUseAPI": [], "Fixed commit": "d1e221ab25e0893fa82bc2ecf6ed75fd2aa9ba41", "Url": "https://api.github.com/repos/qfdk/fuzzing-api", "Date": "2017-01-02T20:43:02Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (param instanceof io.swagger.models.parameters.PathParameter) { type = ((io.swagger.models.parameters.PathParameter) (param)).getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7172/buggy-version/fuzzing.src.main.java.tp.esir3.vv.Tools.java", "BodyUseAPI": [], "Fixed commit": "d1e221ab25e0893fa82bc2ecf6ed75fd2aa9ba41", "Url": "https://api.github.com/repos/qfdk/fuzzing-api", "Date": "2017-01-02T20:43:02Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (loginMember == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5486/buggy-version/src.tk.c4se.halt.ih31.nimunimu.controller.IndexController.java", "BodyUseAPI": [], "Fixed commit": "f709b0df38a493b939b9d15f604f0d25101720bd", "Url": "https://api.github.com/repos/ne-sachirou/nimunimu", "Date": "2014-03-03T17:08:33Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ev.getItem().getItemMeta().getDisplayName()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2074/buggy-version/src.io.github.yannici.bedwars.Shop.Specials.WarpPowderListener.java", "BodyUseAPI": [], "Fixed commit": "bee519871009e4b0326e093ad26fd08605db45e7", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-06-19T16:28:24Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (powder != null) { player.getInventory().addItem(powder.getStack()); player.updateInventory(); powder.cancelTeleport(true, true); ev.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2074/buggy-version/src.io.github.yannici.bedwars.Shop.Specials.WarpPowderListener.java", "BodyUseAPI": ["io.github.yannici.bedwars.Shop.Specials.WarpPowder.getStack()", "player.getInventory().addItem(powder.getStack())", "io.github.yannici.bedwars.Shop.Specials.WarpPowder.cancelTeleport(boolean,boolean)"], "Fixed commit": "bee519871009e4b0326e093ad26fd08605db45e7", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-06-19T16:28:24Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fd.getFilter()) != null) { for (int i = 0; i < (fd.getFilter().size()); i++) { if (i != ((fd.getFilter().size()) - 1)) { filter_spot = (filter_spot + (fd.getFilter().get(i))) + \", \"; }else { filter_spot = filter_spot + (fd.getFilter().get(i)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4103/buggy-version/ParkHere310.app.src.main.java.com.csci310.ParkHere.DetailedViewActivity.java", "BodyUseAPI": ["fd.getFilter().get(int)", "fd.getFilter().size()", "fd.getFilter().size()", "com.csci310.ParkHere.FeedItem.getFilter()", "com.csci310.ParkHere.FeedItem.getFilter()", "com.csci310.ParkHere.FeedItem.getFilter()", "fd.getFilter().get(int)", "com.csci310.ParkHere.FeedItem.getFilter()"], "Fixed commit": "e58b61d5fc5d09f783e958dc080e55da322a74e8", "Url": "https://api.github.com/repos/curtiszhi/CSCI-310-TeamProject", "Date": "2016-11-01T06:29:51Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((spotPhoto.size()) > 0) { byte[] decodedString = android.util.Base64.decode(spotPhoto.get(0), Base64.DEFAULT); android.graphics.Bitmap b = android.graphics.BitmapFactory.decodeByteArray(decodedString, 0, decodedString.length); image_view.setImageBitmap(b); image_label.setText(((\"1 of \" + (spotPhoto.size())) + \" images\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4103/buggy-version/ParkHere310.app.src.main.java.com.csci310.ParkHere.DetailedViewActivity.java", "BodyUseAPI": ["java.util.Vector<java.lang.String>.size()", "android.util.Base64.decode(java.lang.String,Base64.DEFAULT)", "android.widget.TextView.setText(java.lang.String)", "java.util.Vector<java.lang.String>.get(int)"], "Fixed commit": "e58b61d5fc5d09f783e958dc080e55da322a74e8", "Url": "https://api.github.com/repos/curtiszhi/CSCI-310-TeamProject", "Date": "2016-11-01T06:29:51Z"},
{"Line": "=>3979", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.almalence.opencam.MainScreen.isApplicationStarted())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1637/buggy-version/src.com.almalence.opencam.ui.AlmalenceGUI.java", "BodyUseAPI": [], "Fixed commit": "a82eddae1154e42b2d42e0be6a7da0a86fc6b911", "Url": "https://api.github.com/repos/almalence/OpenCamera", "Date": "2014-12-23T04:44:25Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getClickCount()) == 2) { if ((table.getSelectedRow()) >= 0) { try { java.lang.String pkg_name = table.getValueAt(table.getSelectedRow(), 0).toString(); MainFrame.octavePanel.eval(((\"pkg load \" + pkg_name) + \";\")); MainFrame.octavePanel.evaluate(((\"DomainMath_OctavePackages('\" + (directory)) + \"');\")); reload(); } catch (java.lang.Exception ex) { } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3710/buggy-version/DomainMathIDE.src.org.domainmath.gui.pkgview.PkgViewPanel.java", "BodyUseAPI": [], "Fixed commit": "f2aab92ac96145240d16750406e8881151d4015b", "Url": "https://api.github.com/repos/vinukn/domainmath-ide", "Date": "2013-08-23T11:06:48Z"},
{"Line": "=>1092", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getTarget().equals(f_price)) { org.compiere.model.MOrderLine line = new org.compiere.model.MOrderLine(p_ctx, orderLineId, null); if (line != null) { line.setPrice(new java.math.BigDecimal(f_price.getValue().toString())); line.saveEx(); updateInfo(); } }else if (e.getTarget().equals(f_quantity)) { (cont)++; if ((cont) < 2) { if (e.getName().equals(\"onFocus\")) { setParameter(); org.compiere.pos.WPOSKeyboard keyboard = p_posPanel.getKeyboard(keyLayoutId); keyboard.setVisible(true); keyboard.setWidth(\"280px\"); keyboard.setHeight(\"320px\"); keyboard.setPosTextField(this.f_quantity); org.adempiere.webui.apps.AEnv.showWindow(keyboard); findProduct(); if ((m_table.getRowCount()) > 0) { int row = m_table.getSelectedRow(); if (row < 0) row = 0; m_table.setSelectedIndex(row); } } org.compiere.model.MOrderLine line = new org.compiere.model.MOrderLine(p_ctx, orderLineId, null); if (line != null) { line.setQty(new java.math.BigDecimal(f_quantity.getValue().toString())); line.saveEx(); updateInfo(); } }else { cont = 0; f_bSearch.setFocus(true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1341/buggy-version/zkwebui.WEB-INF.src.org.compiere.pos.WSubOrder.java", "BodyUseAPI": ["e.getName().equals(java.lang.String)", "org.compiere.model.MOrderLine.setPrice(java.math.BigDecimal)", "java.awt.Event.getName()", "java.awt.Event.getTarget()", "f_price.getValue().toString()", "org.zkoss.zul.Doublebox.getValue()", "e.getTarget().equals(org.zkoss.zul.Doublebox)"], "Fixed commit": "b7e91f096de8167f0d2e661eac118a9966831b5b", "Url": "https://api.github.com/repos/mckayERP/adempiere", "Date": "2015-08-04T20:55:38Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.datastax.driver.core.ResultSet.all()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(rows.isEmpty())) { java.lang.System.out.println(\"\\t\\tid\\t\\t\\t\\tname\\t\\trole\"); for (com.datastax.driver.core.Row row : rows) { java.lang.System.out.println((((((row.getUUID(\"id\")) + \"\\t|\\t\") + (row.getString(\"name\"))) + \"\\t|\\t\") + (row.getString(\"role\")))); } }else { java.lang.System.out.println(\"The result set contains no records\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5164/buggy-version/src.main.java.com.sample.cassandra.HomeController.java", "BodyUseAPI": [], "Fixed commit": "9867a944a364bc64ad5530938c352dca85d29949", "Url": "https://api.github.com/repos/claudiustancu/cassandra", "Date": "2014-09-11T08:49:43Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((path == null) || (path.isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/9099/buggy-version/droidium-container.arquillian-droidium-container.src.main.java.org.arquillian.droidium.container.configuration.AndroidContainerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "38c3e03f156dd111135fe82940412945c6555c4e", "Url": "https://api.github.com/repos/arquillian/arquillian-droidium", "Date": "2013-12-03T14:22:24Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (len == 0) return freditor.vector.IntVector.empty;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4845/buggy-version/src.main.java.freditor.vector.IntVector.java", "BodyUseAPI": [], "Fixed commit": "ccd6eb8cd2721057acdbdf108369bc3cc3335455", "Url": "https://api.github.com/repos/fredoverflow/freditor", "Date": "2017-08-07T21:18:22Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<org.eclipse.moquette.spi.impl.events.PublishEvent>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (events == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/298/buggy-version/broker.src.main.java.org.eclipse.moquette.spi.impl.MemoryStorageService.java", "BodyUseAPI": [], "Fixed commit": "33bc23b4e100ff26b5fd2a8fdb35b228f584423e", "Url": "https://api.github.com/repos/wagnerluis1982/moquette", "Date": "2015-09-22T13:55:52Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.cloud.client.loadbalancer.LoadBalancerClient.choose(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (serviceInstance == null) { throw new org.apache.thrift.transport.TTransportException(org.apache.thrift.transport.TTransportException.NOT_OPEN, \"No one service instance is available\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4362/buggy-version/autoconfigure.src.main.java.info.developerblog.spring.thrift.transport.TLoadBalancerClient.java", "BodyUseAPI": [], "Fixed commit": "c8249f29c3b4eb1b432ab498f3d5e51c7e7f06f7", "Url": "https://api.github.com/repos/aatarasoff/spring-thrift-starter", "Date": "2016-07-04T14:12:13Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(active)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6381/buggy-version/core.src.com.leggodt.level.DodgeLevel.java", "BodyUseAPI": [], "Fixed commit": "442151f44584d5558d7ed3ff788cd65e82f0ab61", "Url": "https://api.github.com/repos/desromj/ludumdare40", "Date": "2017-12-02T21:29:42Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (rootUri.isOpaque()) { if (rootUri.getScheme().equalsIgnoreCase(\"jar\")) { rootUri = java.net.URI.create(rootUri.getRawSchemeSpecificPart()); prefix = \"jar\"; }else { throw new java.lang.IllegalArgumentException((\"Unsupported opaque URI: \" + rootUri)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7236/buggy-version/src.main.java.org.dbrain.binder.system.http.server.utils.ResourceSandbox.java", "BodyUseAPI": [], "Fixed commit": "2bd98761a003c0c386ede1019d2675830060d51d", "Url": "https://api.github.com/repos/dbrain-org/binder", "Date": "2015-11-26T06:06:07Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ex) instanceof java.lang.UnsupportedOperationException) { return \"Unsupported operation \" + (ex.getMessage()); }else { return ex.getMessage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6872/buggy-version/src.main.java.ru.stqa.selenium.legrc.runner.steps.ExceptionOutcome.java", "BodyUseAPI": [], "Fixed commit": "4395751d20be9db0e609c404d4a5f9c496262000", "Url": "https://api.github.com/repos/barancev/selenium3-html-suite-runner", "Date": "2016-01-18T06:03:38Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(metricRepository.findMetricById(id).getState().equals(State.Suspended))) { throw new metricapp.service.spec.exception.IllegalStateTransitionException(\"A metric must be Suspended before delete\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3069/buggy-version/src.main.java.metricapp.service.controller.MetricCRUDController.java", "BodyUseAPI": [], "Fixed commit": "4375f21a3f836130266ae572b2fa10fc7dc5daa2", "Url": "https://api.github.com/repos/metricAppTeam/metricapp-server", "Date": "2016-06-09T12:40:18Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((wasTaken) && (distance < 200)) { wasTaken = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2485/buggy-version/BinApp.app.src.main.java.com.yrsbradford.binapp.transmission.Transmit.java", "BodyUseAPI": [], "Fixed commit": "313b0de7565027c47f07f6b5f6c2c44d1fa960d4", "Url": "https://api.github.com/repos/syreel/Wheel-Your-Bin", "Date": "2015-07-29T15:00:00Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ex instanceof org.springframework.http.converter.HttpMessageNotReadableException) { java.lang.Throwable cause = ex.getCause(); if (cause instanceof com.fasterxml.jackson.databind.exc.InvalidFormatException) { }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5051/buggy-version/src.main.java.com.sky.rewards.exception.WebServiceHandlerExceptionResolver.java", "BodyUseAPI": ["java.lang.Exception.getCause()"], "Fixed commit": "db2a9837a3983f414a1bb7b3d307a91f03e18166", "Url": "https://api.github.com/repos/naeemdavis/sky-reward-service", "Date": "2014-09-02T13:29:59Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dtl.citizenstrader_new.traders.ServerTrader.getSelectedItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((item.getSlot()) == (-1)) { item.resetAmounts(event.getCursor().getAmount()); if (this.isBuyModeByWool()) getTraderStock().addItem(false, item); if (this.isSellModeByWool()) getTraderStock().addItem(true, item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1245/buggy-version/src.net.dtl.citizenstrader_new.traders.ServerTrader.java", "BodyUseAPI": ["net.dtl.citizenstrader_new.containers.StockItem.resetAmounts(event.getCursor().getAmount())", "getTraderStock().addItem(boolean,net.dtl.citizenstrader_new.containers.StockItem)", "getTraderStock().addItem(boolean,net.dtl.citizenstrader_new.containers.StockItem)"], "Fixed commit": "693430c80d21791e328285081ab33799e3943755", "Url": "https://api.github.com/repos/Dandielo/DtlCitizensTrader", "Date": "2012-08-26T23:02:56Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getType()) != (cpath.jpa.LogType.FILE)) { li = new java.lang.String[]{ e.getType().toString(), listItemName }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/83/buggy-version/cpath-web-service.src.main.java.cpath.webservice.LogStatsController.java", "BodyUseAPI": ["e.getType().toString()", "cpath.jpa.LogEvent.getType()"], "Fixed commit": "e5f43593f68ce135183e9a311ce4c0bd4c4cfeb3", "Url": "https://api.github.com/repos/PathwayCommons/cpath2", "Date": "2016-01-19T20:04:11Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isForked) { f.sync(); f.channel().closeFuture().sync(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4156/buggy-version/src.main.java.org.kualigan.maven.plugins.AbstractStartRedisMojo.java", "BodyUseAPI": [], "Fixed commit": "6d97de7e977fc3ff6b2fb95d1645f16db764ebfc", "Url": "https://api.github.com/repos/r351574nc3/redis-maven-plugin", "Date": "2013-12-07T17:56:35Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jerry.notes.Utils.NoteUtils.getAllUIDs(<nulltype>,java.util.List<com.jerry.notes.Database.NoteCloud>,NoteUtils.Option.NoteCloud)", "com.jerry.notes.Utils.NoteUtils.getAllUIDs(java.util.List<com.jerry.notes.Database.Note>,<nulltype>,NoteUtils.Option.Note)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(notesUids.equals(noteCloudUids))) { int tmp = 0; for (int i = 0; i < (notesUids.size()); i++) { for (int j = 0; j < (noteCloudUids.size()); j++) { if (notesUids.get(i).equals(noteCloudUids.get(j))) { tmp++; } } if (tmp == (noteCloudUids.size())) { com.jerry.notes.Utils.SyncUtils.uids.add(notesUids.get(i)); tmp = 0; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7189/buggy-version/app.src.main.java.com.jerry.notes.Utils.SyncUtils.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.get(int)", "java.util.List<java.lang.Long>.get(int)", "java.util.List<java.lang.Long>.size()", "java.util.List<java.lang.Long>.size()", "java.lang.Long.equals(java.lang.Long)", "java.util.List<java.lang.Long>.size()", "java.util.List<java.lang.Long>.get(int)", "java.util.List<java.lang.Long>.add(java.lang.Long)"], "Fixed commit": "7bf4e34188f0deacf2a8f9d252e419248b27187b", "Url": "https://api.github.com/repos/JerryJin93/Notes", "Date": "2017-11-05T14:17:07Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(line.contains(\"Version\"))) { signatureBuilder.append(line.trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1970/buggy-version/src.eu.siacs.conversations.crypto.PgpEngine.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "253438e698d4e7f69b97dcc11c07426c03fbc416", "Url": "https://api.github.com/repos/siacs/Conversations", "Date": "2014-09-03T13:33:44Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(lines[i].contains(\"Version\"))) { encryptedMessageBody.append(lines[i].trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1970/buggy-version/src.eu.siacs.conversations.crypto.PgpEngine.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "253438e698d4e7f69b97dcc11c07426c03fbc416", "Url": "https://api.github.com/repos/siacs/Conversations", "Date": "2014-09-03T13:33:44Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attend_shower.sem_start_date.equals(\"\")) { item.setSem_start_date(item0.getSem_start_date()); }else { item.setSem_start_date(attend_shower.sem_start_date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/746/buggy-version/app.src.main.java.com.example.riteshagrawal.sstc_edrp.Users_Data_Saver.java", "BodyUseAPI": [], "Fixed commit": "f80f393d20086f587629bf75c8d9440fa53f8e6a", "Url": "https://api.github.com/repos/kamleshsahu/SSGI_EDRP", "Date": "2017-08-29T19:51:48Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.akquinet.jbosscc.guttenbase.mapping.ColumnMapper.map(de.akquinet.jbosscc.guttenbase.meta.ColumnMetaData,de.akquinet.jbosscc.guttenbase.meta.TableMetaData)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (mapping.getColumns().isEmpty()) { if (mapping.isEmptyColumnListOk()) { rs.getObject(columnIndex); }else { throw new de.akquinet.jbosscc.guttenbase.exceptions.IncompatibleColumnsException(((((\"Cannot map column \" + targetTableMetaData) + \":\") + columnMetaData1) + \": Target column list empty\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1139/buggy-version/src.main.java.de.akquinet.jbosscc.guttenbase.statements.InsertStatementFiller.java", "BodyUseAPI": ["de.akquinet.jbosscc.guttenbase.mapping.ColumnMapper.ColumnMapperResult.isEmptyColumnListOk()"], "Fixed commit": "4903190497736d1ffbc16913a782a2f7f41dcb54", "Url": "https://api.github.com/repos/akquinet/GuttenBase", "Date": "2013-07-01T15:03:20Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cmdClass.getAnnotation(org.apache.cloudstack.api.APICommand.class)) == null) { java.lang.System.out.println(((\"Warning, API Cmd class \" + (cmdClass.getName())) + \" has no APICommand annotation \")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1167/buggy-version/server.src.com.cloud.api.doc.ApiXmlDocWriter.java", "BodyUseAPI": ["java.lang.Class<?>.getName()", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "7943686bc93c6974fde9e695093f221446f5f722", "Url": "https://api.github.com/repos/rsafonseca/cloudstack", "Date": "2015-05-20T01:01:41Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c.getText().matches(searchString)) && ((restriction.equals(\"ALL\")) || (restriction.equals(\"Description\")))) { matches = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/945/buggy-version/AgileReview.src.de.tukl.cs.softech.agilereview.views.commenttable.AgileCommentFilter.java", "BodyUseAPI": [], "Fixed commit": "a53d0d9c0bf31bbb6daf28a1ba44b641c9a8ff16", "Url": "https://api.github.com/repos/AgileReview-Project/AgileReview-Legacy-Plugin", "Date": "2017-12-14T21:50:07Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((timeRemaining) > 0) src.sendMessage(org.spongepowered.api.text.Texts.of(TextColors.DARK_RED, \"Error! \", TextColors.RED, ((\"You must wait \" + (timeRemaining)) + \" seconds before using this Kit again!\"))); else src.sendMessage(org.spongepowered.api.text.Texts.of(TextColors.DARK_RED, \"Error! \", TextColors.RED, \"You must wait before using this Kit again!\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2426/buggy-version/src.main.java.io.github.hsyyid.kits.cmds.KitExecutor.java", "BodyUseAPI": ["org.spongepowered.api.text.Texts.of(TextColors.DARK_RED,java.lang.String,TextColors.RED,java.lang.String)", "org.spongepowered.api.util.command.CommandSource.sendMessage(org.spongepowered.api.text.Texts.of(TextColors.DARK_RED, \"Error! \", TextColors.RED, ((\"You must wait \" + (timeRemaining)) + \" seconds before using this Kit again!\")))"], "Fixed commit": "584e591e889ae7cabdce120cc6269d8b8c1a3779", "Url": "https://api.github.com/repos/hsyyid/Kits", "Date": "2015-10-15T13:26:18Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cb instanceof org.jboss.as.connector.security.CallbackImpl) { if (((org.jboss.as.connector.security.CallbackImpl) (cb)).isElytronEnabled()) workManager.setSecurityIntegration(new org.jboss.as.connector.security.ElytronSecurityIntegration()); workManager.setCallbackSecurity(cb); }else { super.setCallbackSecurity(workManager, cb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5964/buggy-version/connector.src.main.java.org.jboss.as.connector.services.resourceadapters.deployment.AbstractResourceAdapterDeploymentService.java", "BodyUseAPI": ["org.jboss.jca.deployers.common.AbstractResourceAdapterDeployer.setCallbackSecurity(org.jboss.jca.core.api.workmanager.WorkManager,org.jboss.jca.core.spi.security.Callback)", "org.jboss.jca.core.api.workmanager.WorkManager.setCallbackSecurity(org.jboss.jca.core.spi.security.Callback)"], "Fixed commit": "f67ef09866fc82ed36fa3a707804bd46cb8295b9", "Url": "https://api.github.com/repos/wildfly/wildfly", "Date": "2017-01-23T12:42:23Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (tags == null) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3753/buggy-version/src.com.matburt.mobileorg.Parsing.NodeWrapper.java", "BodyUseAPI": [], "Fixed commit": "dbe26fd682b26ffc40d0a758001cb21bb734ddff", "Url": "https://api.github.com/repos/matburt/mobileorg-android", "Date": "2012-03-15T14:03:03Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.preference.PreferenceManager.getDefaultSharedPreferences(parent.getContext()).getBoolean(\"viewDefaultEdit\", true)) runEditNodeActivity(clicked_node_id); else runViewNodeActivity(clicked_node_id);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3753/buggy-version/src.com.matburt.mobileorg.Gui.OutlineActivity.java", "BodyUseAPI": [], "Fixed commit": "dbe26fd682b26ffc40d0a758001cb21bb734ddff", "Url": "https://api.github.com/repos/matburt/mobileorg-android", "Date": "2012-03-15T14:03:03Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (timeLeft > 105714583) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/482/buggy-version/app.src.main.java.edu.asu.fitbitgarden.activities.GameActivity.java", "BodyUseAPI": [], "Fixed commit": "5e3786c2bbf2487407cd3a24179bf8a8f44b3780", "Url": "https://api.github.com/repos/jithin/FitbitGarden", "Date": "2016-04-25T20:54:43Z"},
{"Line": "=>437", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((testValue.length()) > 0) { java.util.regex.Pattern.compile(testValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5612/buggy-version/src.main.java.hudson.plugins.emailext.ExtendedEmailPublisherDescriptor.java", "BodyUseAPI": ["java.util.regex.Pattern.compile(java.lang.String)"], "Fixed commit": "d4876cac36a8e9e51e2ea22d95a1f1777e52bbbc", "Url": "https://api.github.com/repos/kbracey/email-ext-plugin", "Date": "2011-09-06T16:58:52Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.co.nickthecoder.itchy.AbstractRole.getActor()", "uk.co.nickthecoder.itchy.Actor.getAnimation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((actor.getAnimation()) == animation) { actor.setAnimation(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/596/buggy-version/src.main.java.uk.co.nickthecoder.itchy.AbstractRole.java", "BodyUseAPI": ["uk.co.nickthecoder.itchy.Actor.setAnimation(<nulltype>)"], "Fixed commit": "488922a6af72a29fc0317942fed48c9723655562", "Url": "https://api.github.com/repos/nickthecoder/itchy", "Date": "2016-01-09T22:23:20Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ti == null) { ti = new org.robolectric.res.android.ResTableTheme.type_info(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3277/buggy-version/resources.src.main.java.org.robolectric.res.android.ResTableTheme.java", "BodyUseAPI": [], "Fixed commit": "87fe802513ff3b9d9183112f7e92c9f20233e902", "Url": "https://api.github.com/repos/robolectric/robolectric", "Date": "2017-10-02T21:06:47Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((output.session) != null) { com.willshex.blogwt.server.helper.UserHelper.stripPassword(output.session.user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8757/buggy-version/src.main.java.com.willshex.blogwt.server.api.user.UserApi.java", "BodyUseAPI": ["com.willshex.blogwt.server.helper.UserHelper.stripPassword(output.session.user)"], "Fixed commit": "49d2c5f63c127ca80bfe93c04b9298606cb58eb4", "Url": "https://api.github.com/repos/billy1380/blogwt", "Date": "2015-09-25T11:32:26Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.runa.wfe.bot.BotTask.getEmbeddedFile()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((embeddedFile != null) && (org.apache.commons.lang.StringUtils.isNotEmpty(botTask.getEmbeddedFileName()))) { zos.putNextEntry(new java.util.zip.ZipEntry(((PATH_TO_BOTTASK) + (botTask.getEmbeddedFileName())))); zos.write(embeddedFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6806/buggy-version/wfe-web.src.main.java.ru.runa.wf.web.datafile.builder.BotDataFileBuilder.java", "BodyUseAPI": ["java.util.zip.ZipOutputStream.write(byte[])", "java.util.zip.ZipOutputStream.putNextEntry(java.util.zip.ZipEntry)", "ru.runa.wfe.bot.BotTask.getEmbeddedFileName()"], "Fixed commit": "4e5555fb6e9a31c2e1fb95bffa34059ed75823bd", "Url": "https://api.github.com/repos/processtech/runawfe-server", "Date": "2017-09-16T05:59:39Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(botTask.getEmbeddedFileName())) { subElement.addAttribute(AdminScriptConstants.EMBEDDED_FILE_ATTRIBUTE_NAME, ((PATH_TO_BOTTASK) + (botTask.getEmbeddedFileName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6806/buggy-version/wfe-web.src.main.java.ru.runa.wf.web.datafile.builder.BotDataFileBuilder.java", "BodyUseAPI": ["org.dom4j.Element.addAttribute(AdminScriptConstants.EMBEDDED_FILE_ATTRIBUTE_NAME,((PATH_TO_BOTTASK) + (botTask.getEmbeddedFileName())))", "ru.runa.wfe.bot.BotTask.getEmbeddedFileName()"], "Fixed commit": "4e5555fb6e9a31c2e1fb95bffa34059ed75823bd", "Url": "https://api.github.com/repos/processtech/runawfe-server", "Date": "2017-09-16T05:59:39Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(player.getName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (tabname != null) { player.setPlayerListName(tabname); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/319/buggy-version/src.main.java.syam.flaggame.game.Game.java", "BodyUseAPI": ["org.bukkit.entity.Player.setPlayerListName(java.lang.String)"], "Fixed commit": "f7fa2c8b57e526caaa519d1d086a5f946100ce58", "Url": "https://api.github.com/repos/syamn/FlagGame", "Date": "2012-10-21T15:04:13Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["thredds.inventory.partition.TimePartition.getCalendarDate(thredds.inventory.partition.MFile)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cdate == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/412/buggy-version/cdm.src.main.java.thredds.inventory.partition.TimePartition.java", "BodyUseAPI": [], "Fixed commit": "43d66e323776e54c2803db49ec70bb496a9ab99b", "Url": "https://api.github.com/repos/socib/thredds", "Date": "2014-12-24T16:52:35Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.beans.XMLDecoder.readObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((supporters.get(0)) instanceof ch.imedias.rsccfx.view.Supporter)) { throw new java.lang.ClassCastException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/65/buggy-version/src.ch.imedias.rsccfx.view.SupporterHelper.java", "BodyUseAPI": [], "Fixed commit": "69ca4316e103adee3b2851ae78cb8e84c4bafd14", "Url": "https://api.github.com/repos/Kennox/rscc", "Date": "2017-05-14T18:15:37Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Double>.iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (recallIt.hasNext()) { realRec = recallIt.next(); realPrec = precIt.next(); if (recallIt.hasNext()) { nextPrec = precIt.next(); nextRec = recallIt.next(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3741/buggy-version/src.TablePerQuery.java", "BodyUseAPI": ["java.util.Iterator<java.lang.Double>.next()", "java.util.Iterator<java.lang.Double>.hasNext()", "java.util.Iterator<java.lang.Double>.next()"], "Fixed commit": "cb55c07c814f5757fda6f326348fd9a10bc9fa6e", "Url": "https://api.github.com/repos/vcarbune/acse", "Date": "2012-10-23T16:18:04Z"},
{"Line": "=>374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cojen.tupl._UndoLog.roundUpPower2(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (newCap < 0) { newCap = java.lang.Integer.MAX_VALUE; }else { newCap = java.lang.Math.max(((buffer.length) << 1), newCap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6535/buggy-version/src.main.java.org.cojen.tupl._UndoLog.java", "BodyUseAPI": ["java.lang.Math.max(int,int)"], "Fixed commit": "09365e3f2336d4e480d2ded4a612b534d3c84431", "Url": "https://api.github.com/repos/cojen/Tupl", "Date": "2017-03-11T19:35:52Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((device) != null) { message = \" connection=\" + (device.getConnection().getDescription()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3942/buggy-version/NFCommunicator.nfcommunicator.src.main.java.com.neofect.communicator.CommunicationController.java", "BodyUseAPI": [], "Fixed commit": "46f826f864515b5cb849d9acc6c453a55e181ffc", "Url": "https://api.github.com/repos/Neofect/Communicator", "Date": "2017-10-20T13:18:40Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.yamcs.yarch.TupleDefinition.getColumn(pspec.timeColumn)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (cd == null) { throw new org.yamcs.yarch.streamsql.GenericStreamSqlException(((\"time partition specified on a column not part of the primary key: '\" + (pspec.timeColumn)) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8465/buggy-version/yamcs-core.src.main.java.org.yamcs.yarch.TableDefinition.java", "BodyUseAPI": [], "Fixed commit": "cf9a5f2e8b2a12ff14c6a0d418ec9671471a1b36", "Url": "https://api.github.com/repos/yamcs/yamcs", "Date": "2016-03-18T08:52:18Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastLocation) != null) { networkManager.getOtherPeopleTasks(accessToken.getToken(), lastLocation.getLatitude(), lastLocation.getLongitude(), this); }else { android.widget.Toast.makeText(getActivity(), \"You need to start your GPS\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2681/buggy-version/app.src.main.java.com.unibuc.communityhelpv3.fragments.OtherTasksFragment.java", "BodyUseAPI": [], "Fixed commit": "5024ff31b725cae0f86fcbeb70bf9a9336d4b0e2", "Url": "https://api.github.com/repos/TudorRotarus25/CommunityHelp", "Date": "2016-05-23T16:07:03Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt((((disp.x) * (disp.x)) + ((disp.y) * (disp.y))))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((timeEscape == 0) || ((curDis / timeEscape) > 0.1)) distance += curDis;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3178/buggy-version/src.edu.tj.sse.runeveryday.utils.CalcUtil.java", "BodyUseAPI": [], "Fixed commit": "2d55da33cb9225697ba3bc409f6634b86419d79f", "Url": "https://api.github.com/repos/TongjiFellow/RunEveryday", "Date": "2014-05-18T17:43:42Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.developmentontheedge.be5.api.services.OperationExecutor.create(com.developmentontheedge.be5.operation.OperationInfo,java.lang.String[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((operation.getResult().getStatus()) == (com.developmentontheedge.be5.operation.OperationStatus.ERROR)) { if (com.developmentontheedge.be5.api.helpers.UserInfoHolder.isAdminOrSysDev()) { errorModel = getErrorModel(((java.lang.Throwable) (operation.getResult().getDetails())), injector); } operation.setResult(com.developmentontheedge.be5.operation.OperationResult.error(operation.getResult().getMessage().split(java.lang.System.getProperty(\"line.separator\"))[0])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5688/buggy-version/server.src.main.java.com.developmentontheedge.be5.components.Form.java", "BodyUseAPI": ["com.developmentontheedge.be5.operation.Operation.setResult(com.developmentontheedge.be5.operation.OperationResult.error(operation.getResult().getMessage().split(java.lang.System.getProperty(\"line.separator\"))[0]))", "operation.getResult().getMessage().split(java.lang.String)", "com.developmentontheedge.be5.operation.OperationResult.error(operation.getResult().getMessage().split(java.lang.System.getProperty(\"line.separator\"))[0])", "com.developmentontheedge.be5.components.Form.getErrorModel(((java.lang.Throwable) (operation.getResult().getDetails())),com.developmentontheedge.be5.env.Injector)", "com.developmentontheedge.be5.operation.Operation.getResult()", "operation.getResult().getMessage()", "operation.getResult().getDetails()", "com.developmentontheedge.be5.operation.Operation.getResult()"], "Fixed commit": "72da8d2f8441394a503edb86aedd584d83a14183", "Url": "https://api.github.com/repos/DevelopmentOnTheEdge/be5", "Date": "2017-12-07T09:58:08Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (color != null) armyc2.c2sd.renderer.utilities.RendererUtilities.pastIdealOutlineColors.put(color.toInt(), idealColor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1579/buggy-version/Renderer.src.armyc2.c2sd.renderer.utilities.RendererUtilities.java", "BodyUseAPI": ["armyc2.c2sd.renderer.utilities.Color.toInt()", "android.util.SparseArray<armyc2.c2sd.renderer.utilities.Color>.put(color.toInt(),armyc2.c2sd.renderer.utilities.Color)"], "Fixed commit": "49ee717e253d4735600a480d897f4bd9f980af69", "Url": "https://api.github.com/repos/missioncommand/mil-sym-android", "Date": "2015-05-26T20:09:28Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tableStyle == (-1)) { table = new org.teiid.designer.ui.common.table.Table<T>(parent, tableProvider, columnProviders); }else { table = new org.teiid.designer.ui.common.table.Table<T>(parent, tableStyle, tableProvider, columnProviders); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8495/buggy-version/plugins.org.teiid.designer.ui.common.src.org.teiid.designer.ui.common.table.TableAndToolBar.java", "BodyUseAPI": [], "Fixed commit": "08c7a5c9598b221e17ec0cbe7994250a68f2dd10", "Url": "https://api.github.com/repos/mdrillin/teiid-designer", "Date": "2014-08-22T19:29:54Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (tableStyle == (-1)) { viewer = new org.eclipse.jface.viewers.TableViewer(parent); }else { viewer = new org.eclipse.jface.viewers.TableViewer(parent, tableStyle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8495/buggy-version/plugins.org.teiid.designer.ui.common.src.org.teiid.designer.ui.common.table.Table.java", "BodyUseAPI": [], "Fixed commit": "08c7a5c9598b221e17ec0cbe7994250a68f2dd10", "Url": "https://api.github.com/repos/mdrillin/teiid-designer", "Date": "2014-08-22T19:29:54Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fullName.endsWith(\"\u81ea\u6cbb\u53bf\")) || (fullName.endsWith(\"\u81ea\u6cbb\u5dde\"))) { shortName = org.apache.commons.lang3.StringUtils.substring(fullName, 0, ((fullName.length()) - 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5981/buggy-version/src.main.java.com.xiuhao.commons.area.MemAreaDao.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)", "java.lang.String.length()"], "Fixed commit": "f2eded8c148d89fb125e71726df68119c8f75252", "Url": "https://api.github.com/repos/seanlinwang/commons", "Date": "2013-06-21T15:20:55Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Version.SDK_IS_HONEYCOMB_OR_NEWER) intent.setFlags(((android.content.Intent.FLAG_ACTIVITY_NEW_TASK) | (android.content.Intent.FLAG_ACTIVITY_CLEAR_TASK))); else intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6455/buggy-version/src.main.java.at.jclehner.rxdroid.ImportActivity.java", "BodyUseAPI": [], "Fixed commit": "99bfa98931d38845ee198a59e1b00a4dfafd5fd4", "Url": "https://api.github.com/repos/jclehner/rxdroid", "Date": "2014-04-16T18:29:59Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((displayManager.getDelta()) > 0) { scene.loop(displayManager.getDelta()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/152/buggy-version/src.game.Main.java", "BodyUseAPI": ["game.Scenes.GameScene.loop(displayManager.getDelta())", "engine.DisplayManager.getDelta()"], "Fixed commit": "b17e4f44b9c02094a771591aeca9dc0b29174d85", "Url": "https://api.github.com/repos/berksaribas/berkengine", "Date": "2017-12-13T14:06:31Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (theException instanceof ca.uhn.fhir.parser.DataFormatException) { retVal = new ca.uhn.fhir.rest.server.exceptions.InvalidRequestException(theException); }else if (!(theException instanceof ca.uhn.fhir.rest.server.exceptions.BaseServerResponseException)) { retVal = new ca.uhn.fhir.rest.server.exceptions.InternalErrorException(theException); }else { retVal = ((ca.uhn.fhir.rest.server.exceptions.BaseServerResponseException) (theException)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/9097/buggy-version/hapi-fhir-server.src.main.java.ca.uhn.fhir.rest.server.interceptor.ExceptionHandlingInterceptor.java", "BodyUseAPI": [], "Fixed commit": "d0e747d6ecf29fc1ed08dbb3a47853f22c815844", "Url": "https://api.github.com/repos/InfiniteLoop90/hapi-fhir", "Date": "2017-10-23T03:20:48Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((targetFound) && (showDebugTelemetry)) { myOpMode.telemetry.addData(\"DEBUG: \", \"ON\"); myOpMode.telemetry.addData(\"Visible:\", targetName); myOpMode.telemetry.addData(\"RobotX:\", robotX); myOpMode.telemetry.addData(\"RobotY:\", robotY); myOpMode.telemetry.addData(\"robotBearing:\", robotBearing); myOpMode.telemetry.addData(\"targetBearing:\", targetBearing); myOpMode.telemetry.addData(\"relativeBearing:\", relativeBearing); }else if ((targetFound) && (!(showDebugTelemetry))) { myOpMode.telemetry.addData(\"Visible: \", targetName); myOpMode.telemetry.addData(\"Robot: \", \"[X]:[Y] (B) [%5.0fmm]:[%5.0fmm) (%4.0f\u00b0)\", robotX, robotY, robotBearing); myOpMode.telemetry.addData(\"Target: \", \"[R] (B):(RB) [%5.0fmm] (%4.0f\u00b0):(%4.0f\u00b0)\", targetRange, targetBearing, relativeBearing); myOpMode.telemetry.addData(\"Turn: \", \"%s %4.0f\u00b0\", ((relativeBearing) < 0 ? \">>> CW \" : \"<<< CCW\"), java.lang.Math.abs(relativeBearing)); myOpMode.telemetry.addData(\"Strafe: \", \"%s %5.0fmm\", ((robotY) < 0 ? \"LEFT\" : \"RIGHT\"), java.lang.Math.abs(robotY)); myOpMode.telemetry.addData(\"- Distance\", \"%5.0fmm\", java.lang.Math.abs(robotX)); }else { myOpMode.telemetry.addData(\"Visible: \", \"No Targets Found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3951/buggy-version/TeamCode.src.main.java.org.firstinspires.ftc.teamcode.VuforiaCode.Vuforia_Navigation.java", "BodyUseAPI": [], "Fixed commit": "43f341fed20b8fbe7c3e688d8c4feac036c8a1bf", "Url": "https://api.github.com/repos/Omnipotent10496/ftc_app", "Date": "2017-07-01T08:23:41Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ad.getStudio()) != (alert.getStudio())) { mismatch = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/76/buggy-version/baseProject.src.main.java.ch.unibe.ese.team1.controller.service.AlertService.java", "BodyUseAPI": [], "Fixed commit": "cd408c3c9f1926aee69b614fa40defc72a218ed8", "Url": "https://api.github.com/repos/scg-unibe-ch/ese2016-team5", "Date": "2016-11-09T13:50:29Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hallados.isEmpty()) java.lang.System.out.println();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3560/buggy-version/src.Web.BuscadorMedicamentos.java", "BodyUseAPI": [], "Fixed commit": "61192e22a8d6078f005f066cefcc5635a22c3de4", "Url": "https://api.github.com/repos/pinoespinosa/TestWSDL", "Date": "2015-09-11T11:10:11Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasNext())) { throw new NoSuchElementException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1491/buggy-version/MessageLoopIterator.java", "BodyUseAPI": [], "Fixed commit": "e7f6c23c53b8011796e6e4f912fae1bd39fb153e", "Url": "https://api.github.com/repos/apuente93/DisplayEditor", "Date": "2014-03-09T01:09:13Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ShareCompat.IntentReader.getSubject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(title)) title = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7425/buggy-version/app.src.main.java.com.fernandobarillas.linkshare.activities.AddLinkActivity.java", "BodyUseAPI": [], "Fixed commit": "4914b171231f72cf519e3b7be355a40129a7d28f", "Url": "https://api.github.com/repos/fbis251/Linky", "Date": "2017-01-04T03:33:30Z"},
{"Line": "=>1767", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator<com.fasterxml.jackson.databind.JsonNode>.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((child.get(\"type\")) != null) { java.lang.String type = child.get(\"type\").get(\"@name\").asText(); log.info(((((prev + \"/\") + (child.get(\"@name\").textValue())) + \" is a \") + type)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6360/buggy-version/model-based-configurable-nat.src.main.java.org.onosproject.model.based.configurable.nat.StateListenerNew.java", "BodyUseAPI": ["child.get(\"type\").get(java.lang.String)", "com.fasterxml.jackson.databind.node.ObjectNode.get(java.lang.String)", "com.fasterxml.jackson.databind.node.ObjectNode.get(java.lang.String)", "java.util.logging.Logger.info(((((prev + \"/\") + (child.get(\"@name\").textValue())) + \" is a \") + type))", "child.get(\"@name\").textValue()", "child.get(\"type\").get(\"@name\").asText()"], "Fixed commit": "af8a078ca74924d9a9120b5eef4f07953a7604ec", "Url": "https://api.github.com/repos/netgroup-polito/onos-applications", "Date": "2017-05-15T09:46:51Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang.exception.ExceptionUtils.getRootCause(java.lang.Throwable)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cause instanceof restservices.publish.RestPublishException) handleRestPublishException(requestStr, rsr, ((restservices.publish.RestPublishException) (cause))); else if (cause instanceof org.json.JSONException) handleJsonException(requestStr, rsr, ((org.json.JSONException) (cause)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4783/buggy-version/javasource.restservices.publish.RestServiceHandler.java", "BodyUseAPI": [], "Fixed commit": "0a7d861eacab12f91cb99dae2957a4932d0d31d2", "Url": "https://api.github.com/repos/mendix/RestServices", "Date": "2015-01-20T20:47:14Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["restservices.consume.RestConsumer.getFileDocumentFileName(com.mendix.systemwideinterfaces.core.IContext,com.mendix.systemwideinterfaces.core.IMendixObject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((partName == null) || (partName.isEmpty())) throw new java.lang.IllegalArgumentException(\"The filename of a System.FileDocument in a multipart request should reflect the part name and cannot be empty\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4783/buggy-version/javasource.restservices.consume.RestConsumer.java", "BodyUseAPI": [], "Fixed commit": "0a7d861eacab12f91cb99dae2957a4932d0d31d2", "Url": "https://api.github.com/repos/mendix/RestServices", "Date": "2015-01-20T20:47:14Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(patient.isNull())) patientId = patient.get(\"id\").asLong(); else patientId = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7326/buggy-version/app.controllers.Application.java", "BodyUseAPI": ["com.fasterxml.jackson.databind.JsonNode.get(java.lang.String)", "patient.get(\"id\").asLong()"], "Fixed commit": "66f97580850bfe834722141c75331fc0363e5509", "Url": "https://api.github.com/repos/SINTEF-SIT/emht", "Date": "2015-07-08T08:40:20Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(dao.getAll().iterator().hasNext())) dao.insert(dto); else dao.update(dto);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4243/buggy-version/inventory-tracker.src.persistence.SqlitePersistence.java", "BodyUseAPI": ["persistence.RemovedItemsDAO.insert(persistence.DataTransferObject)", "persistence.RemovedItemsDAO.update(persistence.DataTransferObject)"], "Fixed commit": "ada79f14989a64e9228022b43dbcc4ea8c1d8081", "Url": "https://api.github.com/repos/l3370x/byu-340-hit", "Date": "2013-08-07T19:40:36Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((i5.las2peer.services.codeGenerationService.CodeGenerationService) (i5.las2peer.api.Context.getCurrent().getService())).getLocalGitPath()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((localGitPath != null) && ((localGitPath.length()) > 0)) localPath = new java.io.File((localGitPath + name)); else localPath = java.io.File.createTempFile(name, \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/9161/buggy-version/src.main.i5.las2peer.services.codeGenerationService.generators.Generator.java", "BodyUseAPI": [], "Fixed commit": "7c9bb5a553e1fbdd82feaa494fe4cd8d8821168e", "Url": "https://api.github.com/repos/rwth-acis/CAE-Code-Generation-Service", "Date": "2017-10-04T16:23:31Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > ((size) - 1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3615/buggy-version/src.deck.Hand.java", "BodyUseAPI": [], "Fixed commit": "4e6e4127cc64ccc07586e1e0e67f94aa5bd4c623", "Url": "https://api.github.com/repos/tlucsci434/Hufflepuff", "Date": "2015-04-23T01:55:06Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > ((size) - 1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3615/buggy-version/src.deck.Hand.java", "BodyUseAPI": [], "Fixed commit": "4e6e4127cc64ccc07586e1e0e67f94aa5bd4c623", "Url": "https://api.github.com/repos/tlucsci434/Hufflepuff", "Date": "2015-04-23T01:55:06Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.cruxframework.crux.smartfaces.client.grid.PageableDataGrid.getDataProvider()) != null) { handleSortEvents(column, headerWrapper); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4268/buggy-version/src.main.java.org.cruxframework.crux.smartfaces.client.grid.PageableDataGrid.java", "BodyUseAPI": [], "Fixed commit": "0d8dd884583fc6362335c3d66aadeefad8e352da", "Url": "https://api.github.com/repos/CruxFramework/crux-smart-faces", "Date": "2016-05-11T14:57:55Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(initialized)) { initialized = true; addDefaultProcessors(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/115/buggy-version/MyJojoXUtils.src.de.johmat.myjojox.utils.log.Logger.java", "BodyUseAPI": [], "Fixed commit": "0bb6df3e63f24e837552469dd70aa11d1f5d5a97", "Url": "https://api.github.com/repos/MyJojoX/MyJojoXUtils", "Date": "2017-06-24T08:12:37Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wso2.carbon.registry.core.session.UserRegistry.getUserName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((currentUser != null) && (currentUser.equals(username))) { org.wso2.carbon.registry.common.beans.utils.SubscriptionInstance subscriptionInstance = org.wso2.carbon.registry.info.services.utils.SubscriptionBeanPopulator.populate(testPath, subscription); if (subscriptionInstance != null) { subscriptionInstance.setOwner(username); subscriptionInstances.add(subscriptionInstance); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8438/buggy-version/components.registry.org.wso2.carbon.registry.info.src.main.java.org.wso2.carbon.registry.info.services.utils.SubscriptionBeanPopulator.java", "BodyUseAPI": ["org.wso2.carbon.registry.common.beans.utils.SubscriptionInstance.setOwner(java.lang.String)"], "Fixed commit": "7502f315d95990ec896d625fefe41befb2b97259", "Url": "https://api.github.com/repos/cnapagoda/carbon-registry", "Date": "2016-07-18T08:04:08Z"},
{"Line": "=>999", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isVisible)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7847/buggy-version/src.org.gk.render.HyperEdge.java", "BodyUseAPI": [], "Fixed commit": "3fedbfe990f31327cf6efea43a20f62c1c01c01d", "Url": "https://api.github.com/repos/reactome/CuratorTool", "Date": "2017-05-10T00:38:13Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MarioAI.MarioControls.jumpTime) <= 0) { moveInfo = MarioAI.MarioControls.getMovementInformationFromEdge(marioXPos, marioYPos, next.target, next, MarioAI.MarioControls.currentXSpeed); }else { moveInfo = MarioAI.MarioControls.getMovementInformationFromEdge(marioXPos, marioYPos, next.target.x, MarioAI.MarioControls.currentXSpeed, MarioAI.MarioControls.holdJumpTime, MarioAI.MarioControls.jumpTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/253/buggy-version/src.MarioAI.MarioControls.java", "BodyUseAPI": [], "Fixed commit": "95be91ff251ea833808bf50792615b791a7c4a69", "Url": "https://api.github.com/repos/TheAIBot/MarioAI", "Date": "2017-04-01T03:07:19Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MarioAI.MarioControls.holdJumpTime) > 0) { action[ch.idsia.mario.engine.sprites.Mario.KEY_JUMP] = true; (MarioAI.MarioControls.holdJumpTime)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/253/buggy-version/src.MarioAI.MarioControls.java", "BodyUseAPI": [], "Fixed commit": "95be91ff251ea833808bf50792615b791a7c4a69", "Url": "https://api.github.com/repos/TheAIBot/MarioAI", "Date": "2017-04-01T03:07:19Z"},
{"Line": "=>621", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (module instanceof org.python.pydev.editor.codecompletion.revisited.modules.AbstractModule) { module = decorateModule(((org.python.pydev.editor.codecompletion.revisited.modules.AbstractModule) (module)), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/542/buggy-version/plugins.org.python.pydev.src_completions.org.python.pydev.editor.codecompletion.revisited.ModulesManager.java", "BodyUseAPI": [], "Fixed commit": "4f885989fff1d721f5510914e208e85bcf1420fd", "Url": "https://api.github.com/repos/aptana/Pydev", "Date": "2011-09-18T23:25:29Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (code instanceof wyil.lang.Code.Return) { transformer.transform(((wyil.lang.Code.Return) (code)), this); break; }else if (code instanceof wyil.lang.Code.Throw) { transformer.transform(((wyil.lang.Code.Throw) (code)), this); break; }else { dispatch(transformer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8749/buggy-version/modules.wyil.src.wyil.checks.VerificationBranch.java", "BodyUseAPI": [], "Fixed commit": "2b796a45712409dc94a0f99b06cf0d8f11315235", "Url": "https://api.github.com/repos/DavePearce/Whiley", "Date": "2013-01-16T13:43:12Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 16) setBackground(null); else setBackgroundDrawable(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3973/buggy-version/Backbone.src.main.java.me.toolify.backbone.ui.widgets.TransparentNonFocusableButtonItem.java", "BodyUseAPI": [], "Fixed commit": "09e7ada091a1d30b840e4979aead389671928630", "Url": "https://api.github.com/repos/Toolify/Backbone", "Date": "2013-07-19T23:08:12Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mDatePicker.isAdded())) mDatePicker.show(getFragmentManager(), \"datepicker\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3035/buggy-version/src.joeyp.bwslippa.BWSlippa.java", "BodyUseAPI": ["joeyp.bwslippa.view.CalendarDialog.show(getFragmentManager(),java.lang.String)"], "Fixed commit": "e58edbcd39cf50ec1ce0fd53b0cf167931d658d5", "Url": "https://api.github.com/repos/joeyps/bwslippa-android", "Date": "2014-05-08T06:35:08Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((newUser.getUserType().equals(SQLConstants.Staff)) || (newUser.getUserType().equals(SQLConstants.Finance))) || (newUser.getUserType().equals(SQLConstants.Legal))) { success = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/9174/buggy-version/hospital.src.java.org.hospital.servlet.UserCreationServlet.java", "BodyUseAPI": [], "Fixed commit": "10037cc40ecb6355c9b682be544a26dbd99a8ad3", "Url": "https://api.github.com/repos/davidjeong/ece356", "Date": "2014-11-25T19:48:14Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<T>.getSimpleName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clazzName.equals(\"Activity\")) { keyWordCrit = org.hibernate.criterion.Restrictions.ilike(\"event\", keyw, MatchMode.ANYWHERE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7351/buggy-version/src.main.java.coproject.cpweb.utils.db.daos.BaseDao.java", "BodyUseAPI": [], "Fixed commit": "88fa83bb01645b86ca4b196f7e1eb3e7b9b05ba2", "Url": "https://api.github.com/repos/CollectiveOne/CollectiveOneWebapp", "Date": "2016-10-06T14:21:22Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (way.isPolygon()) { this.addWayToPolygon(null, wktBuilder, way); wktBuilder.append(\") \"); if (nextOutside || lastLoop) { polygonIDs.add(\"-1\"); polygonWKT.add(((\"SRID=4326;POLYGON(\" + (wktBuilder.toString())) + \")\")); wktBuilder = null; firstNode = null; } }else { if (lastLoop) { this.failed(wktBuilder, \"3\"); } firstNode = way.getNodeIter().next(); this.addWayToPolygon(firstNode, wktBuilder, way); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7304/buggy-version/src.inter2ohdm.OSMRelation.java", "BodyUseAPI": ["inter2ohdm.OSMWay.getNodeIter()", "inter2ohdm.OSMRelation.addWayToPolygon(inter2ohdm.OSMNode,java.lang.StringBuilder,inter2ohdm.OSMWay)", "inter2ohdm.OSMRelation.addWayToPolygon(<nulltype>,java.lang.StringBuilder,inter2ohdm.OSMWay)", "way.getNodeIter().next()"], "Fixed commit": "fadf38d03fa944d21629cf348c53fd932b4345f6", "Url": "https://api.github.com/repos/OpenHistoricalDataMap/OSMImportUpdate", "Date": "2017-03-27T13:27:11Z"},
{"Line": "=>1421", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWantSwipeBack) { if ((getChildCount()) > 0) { android.view.View childAt = getChildAt(((getChildCount()) - 1)); l = childAt.getLeft(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/197/buggy-version/uiview.src.main.java.com.angcyo.uiview.container.UILayoutImpl.java", "BodyUseAPI": [], "Fixed commit": "223f8475efc040c58b6b24768d823b09d7fdae34", "Url": "https://api.github.com/repos/angcyo/RLibrary", "Date": "2017-04-12T02:40:52Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((setting.getFirstResult()) == (-1)) { return ((Q) (normalCb.page(0, setting.getMaxResults()))); }else { return ((Q) (normalCb.page(setting.getFirstResult(), setting.getMaxResults()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3387/buggy-version/entity-view.impl.src.main.java.com.blazebit.persistence.view.impl.EntityViewSettingHelper.java", "BodyUseAPI": ["com.blazebit.persistence.view.EntityViewSetting<T, Q>.getMaxResults()", "com.blazebit.persistence.CriteriaBuilder<T>.page(setting.getFirstResult(),setting.getMaxResults())", "com.blazebit.persistence.view.EntityViewSetting<T, Q>.getFirstResult()", "com.blazebit.persistence.view.EntityViewSetting<T, Q>.getMaxResults()", "com.blazebit.persistence.CriteriaBuilder<T>.page(int,setting.getMaxResults())"], "Fixed commit": "0e911daeb6c223153d7ef1ff80f3288825c64a6f", "Url": "https://api.github.com/repos/Blazebit/blaze-persistence", "Date": "2015-07-29T15:42:35Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.list()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files == null) { net.mloehr.mango.WebUser.logger.info(\"no extensions found\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6789/buggy-version/src.main.java.net.mloehr.mango.WebUser.java", "BodyUseAPI": [], "Fixed commit": "5819be69c4a4f0e8b22a1cabd800b5fc2994bfe1", "Url": "https://api.github.com/repos/mlohr/mango", "Date": "2014-07-21T13:57:25Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((codec) != null) { codec.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5873/buggy-version/AudioPlayer.src.jbull.audioplayer.Deck.java", "BodyUseAPI": [], "Fixed commit": "3354e8d9a7dfda21c0f774204d29209e0b59bd1a", "Url": "https://api.github.com/repos/jordangb/AudioPlayer", "Date": "2013-02-07T05:48:13Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((codec) != null) { codec.destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5873/buggy-version/AudioPlayer.src.jbull.audioplayer.Deck.java", "BodyUseAPI": [], "Fixed commit": "3354e8d9a7dfda21c0f774204d29209e0b59bd1a", "Url": "https://api.github.com/repos/jordangb/AudioPlayer", "Date": "2013-02-07T05:48:13Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Program.rate) > (Program.money)) { startButton.setDisable(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7568/buggy-version/src.Program.java", "BodyUseAPI": [], "Fixed commit": "f94c47d46de7813008b6977fa22a040c42a939d4", "Url": "https://api.github.com/repos/VladOliinyk/RacerTotalizator", "Date": "2016-09-05T16:02:38Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (matcher.find()) { ids.add(recipes.get(i).getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/872/buggy-version/src.ca.c301.t03_model.RecipeManager.java", "BodyUseAPI": [], "Fixed commit": "3c045ca8d698238f63495466a6d906a140d8cda4", "Url": "https://api.github.com/repos/CMPUT301W13T03/classproject", "Date": "2013-03-11T01:56:18Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((formName) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4321/buggy-version/opensrp-app.src.main.java.org.ei.opensrp.view.fragment.DisplayFormFragment.java", "BodyUseAPI": [], "Fixed commit": "0197fe4c1e2d19df205684c39bace70b48b33752", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client", "Date": "2017-04-12T14:31:31Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ei.opensrp.view.fragment.DisplayFormFragment.readFileAssets(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (modelString == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4321/buggy-version/opensrp-app.src.main.java.org.ei.opensrp.view.fragment.DisplayFormFragment.java", "BodyUseAPI": [], "Fixed commit": "0197fe4c1e2d19df205684c39bace70b48b33752", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client", "Date": "2017-04-12T14:31:31Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((harvString.trim().length()) == 2) || ((farmString.trim().length()) == 4)) { for (java.lang.String tel : phones) smsService.sendSMS(tel, java.lang.String.format(ConstProtocol.CONNECTION_MESSAGE, farmName, harvName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3907/buggy-version/src.server.ProtocolResponder.java", "BodyUseAPI": [], "Fixed commit": "2878506d5bfbbd0252239e4ea7f6aadbd8d59bdb", "Url": "https://api.github.com/repos/yjham2002/TCP_CONN_WITH_SPARK", "Date": "2017-09-29T08:02:09Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((harvString.trim().length()) == 2) || ((farmString.trim().length()) == 4)) { for (java.lang.String tel : phones) { smsService.sendSMS(tel, java.lang.String.format(ConstProtocol.CONNECTION_MESSAGE, farmName, harvName)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3907/buggy-version/src.server.ProtocolResponder.java", "BodyUseAPI": [], "Fixed commit": "2878506d5bfbbd0252239e4ea7f6aadbd8d59bdb", "Url": "https://api.github.com/repos/yjham2002/TCP_CONN_WITH_SPARK", "Date": "2017-09-29T08:02:09Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (target == null) { throw new org.zkoss.zk.ui.ComponentNotFoundException((\"EL evaluated to null: \" + path)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5488/buggy-version/zk.src.org.zkoss.zk.ui.sys.ComponentsCtrl.java", "BodyUseAPI": [], "Fixed commit": "99ddf64e8195d653fa3b7a9befb8b3a9e2c51250", "Url": "https://api.github.com/repos/DevChu/zk", "Date": "2015-05-18T08:23:40Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentProgress) != null) { progressDialog.setIndeterminate(false); progressDialog.setProgress(currentProgress.getProgress()); progressDialog.setMessage(currentProgress.getMessage()); }else { progressDialog.setIndeterminate(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2663/buggy-version/app.src.main.java.org.digitalcampus.oppia.task.DownloadTasksController.java", "BodyUseAPI": [], "Fixed commit": "4dc00ce1a56f7d542ba38271b7e9207081493a42", "Url": "https://api.github.com/repos/jjoseba/oppia-mobile-android", "Date": "2015-05-29T23:33:12Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (entryAttributes != null) { for (org.wso2.charon.core.attributes.Attribute subEntry : entryAttributes.values()) { if (subEntry instanceof org.wso2.charon.core.attributes.SimpleAttribute) { org.wso2.charon.core.attributes.SimpleAttribute simpleAttribute = ((org.wso2.charon.core.attributes.SimpleAttribute) (subEntry)); if ((simpleAttribute.getValue()) != null) { claimsMap.put(subEntry.getAttributeURI(), org.wso2.charon.core.util.AttributeUtil.getStringValueOfAttribute(simpleAttribute.getValue(), simpleAttribute.getDataType())); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6781/buggy-version/components.org.wso2.carbon.identity.scim.common.src.main.java.org.wso2.carbon.identity.scim.common.utils.AttributeMapper.java", "BodyUseAPI": ["java.util.Map<java.lang.String, org.wso2.charon.core.attributes.Attribute>.values()"], "Fixed commit": "b3b062d5a6a584c467209bf88dd2e9f23babbd88", "Url": "https://api.github.com/repos/supunharsha/identity-inbound-provisioning-scim", "Date": "2017-07-17T04:30:38Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((objTab.probe(a.name)) != null) { semantError().format(\"%s:%s: Attribute %s is multiply defined in class.\\n\", curClass.filename, a.lineNumber, a.name); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6273/buggy-version/semant.ClassTable.java", "BodyUseAPI": ["java.io.PrintStream.format(java.lang.String,curClass.filename,a.lineNumber,a.name)"], "Fixed commit": "fbf9a8df53f7a2eed6a3eb5959d5dbf351a916d1", "Url": "https://api.github.com/repos/YunshengWei/Compilers", "Date": "2015-03-05T08:18:53Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((methodTab.probe(m.name)) != null) { semantError().format(\"%s:%s: Method %s is multiply defined in class.\\n\", curClass.filename, m.lineNumber, m.name); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6273/buggy-version/semant.ClassTable.java", "BodyUseAPI": ["java.io.PrintStream.format(java.lang.String,curClass.filename,m.lineNumber,m.name)"], "Fixed commit": "fbf9a8df53f7a2eed6a3eb5959d5dbf351a916d1", "Url": "https://api.github.com/repos/YunshengWei/Compilers", "Date": "2015-03-05T08:18:53Z"},
{"Line": "=>2643", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.vnxe.models.StorageResource.getBlockHostAccess()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((hostAccesses != null) && (!(hostAccesses.isEmpty()))) { for (com.emc.storageos.vnxe.models.BlockHostAccess hostAccess : hostAccesses) { hostAccess.setAccessMask(HostLUNAccessEnum.NOACCESS.getValue()); } lunParam.setHostAccess(hostAccesses); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6996/buggy-version/exportLibraries.vnxe.src.main.java.com.emc.storageos.vnxe.VNXeApiClient.java", "BodyUseAPI": ["com.emc.storageos.vnxe.models.LunParam.setHostAccess(java.util.List<com.emc.storageos.vnxe.models.BlockHostAccess>)"], "Fixed commit": "61d112afb0ee00c3deaff8445c4d565a5747ff02", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2017-01-23T21:08:33Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (updatedResource != null) { return android.support.v4.content.LocalBroadcastManager.getInstance(this).sendBroadcast(new android.content.Intent(com.cloudinary.android.sample.app.CloudinaryService.ACTION_RESOURCE_MODIFIED).putExtra(\"resource\", updatedResource)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/345/buggy-version/sample.src.main.java.com.cloudinary.android.sample.app.CloudinaryService.java", "BodyUseAPI": ["android.support.v4.content.LocalBroadcastManager.getInstance(this).sendBroadcast(new android.content.Intent(com.cloudinary.android.sample.app.CloudinaryService.ACTION_RESOURCE_MODIFIED).putExtra(\"resource\", updatedResource))", "android.content.Intent.putExtra(java.lang.String,com.cloudinary.android.sample.model.Resource)"], "Fixed commit": "3c6ef257525c87f13e765884cbffb121a7014408", "Url": "https://api.github.com/repos/cloudinary/cloudinary_android", "Date": "2017-09-18T12:03:25Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (unprocessed < 0.0) unprocessed = 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/7159/buggy-version/src.main.MainComponent.java", "BodyUseAPI": [], "Fixed commit": "3f675fa6caf0d43743bcbfb30c8b2dae63165dc1", "Url": "https://api.github.com/repos/tommai78101/PokemonWalking", "Date": "2014-04-01T12:09:21Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasNestedObjectReference(tmpRI)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1511/buggy-version/sql.src.main.java.io.crate.analyze.relations.AbstractTableRelation.java", "BodyUseAPI": [], "Fixed commit": "1335a5cb911fad307ce6ea5ecbb2e08b29c9a39a", "Url": "https://api.github.com/repos/EvilMcJerkface/crate", "Date": "2016-08-22T12:34:54Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) == sampleId) { tumultsReadyMap.put(entry.getKey(), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3631/buggy-version/app.src.main.java.de.hs_hannover.emerker.tumultimate.TumultPool.java", "BodyUseAPI": ["java.util.Map.Entry<de.hs_hannover.emerker.tumultimate.Tumult, java.lang.Integer>.getKey()", "java.util.HashMap<de.hs_hannover.emerker.tumultimate.Tumult, java.lang.Boolean>.put(entry.getKey(),boolean)"], "Fixed commit": "52607109a44b69c2c675af8f814b368a27f73298", "Url": "https://api.github.com/repos/YertleTurtleGit/Tumultimate", "Date": "2017-12-05T23:03:50Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["imperial.modaclouds.monitoring.datacollectors.basic.Config.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((config.getVmId()) != null) { dcDescriptor.addMonitoredResource(imperial.modaclouds.monitoring.datacollectors.monitors.ModacloudsMonitor.getInfrastructureMetrics(), imperial.modaclouds.monitoring.datacollectors.monitors.ModacloudsMonitor.buildExternalComponent(config)); dcDescriptor.addResource(imperial.modaclouds.monitoring.datacollectors.monitors.ModacloudsMonitor.buildExternalComponent(config)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6600/buggy-version/src.main.java.imperial.modaclouds.monitoring.datacollectors.monitors.ModacloudsMonitor.java", "BodyUseAPI": ["it.polimi.tower4clouds.model.data_collectors.DCDescriptor.addMonitoredResource(java.util.Set<java.lang.String>,it.polimi.tower4clouds.model.ontology.Resource)", "it.polimi.tower4clouds.model.data_collectors.DCDescriptor.addResource(it.polimi.tower4clouds.model.ontology.Resource)", "imperial.modaclouds.monitoring.datacollectors.monitors.ModacloudsMonitor.buildExternalComponent(imperial.modaclouds.monitoring.datacollectors.basic.Config)", "imperial.modaclouds.monitoring.datacollectors.monitors.ModacloudsMonitor.buildExternalComponent(imperial.modaclouds.monitoring.datacollectors.basic.Config)"], "Fixed commit": "9de56bb23fbd8e269adf805473412d8a2f7e296e", "Url": "https://api.github.com/repos/imperial-modaclouds/modaclouds-data-collectors", "Date": "2015-06-05T17:18:46Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["imperial.modaclouds.monitoring.datacollectors.basic.Config.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((config.getInternalComponentId()) != null) { dcDescriptor.addMonitoredResource(imperial.modaclouds.monitoring.datacollectors.monitors.ModacloudsMonitor.getApplicationMetrics(), imperial.modaclouds.monitoring.datacollectors.monitors.ModacloudsMonitor.buildInternalComponent(config)); dcDescriptor.addResource(imperial.modaclouds.monitoring.datacollectors.monitors.ModacloudsMonitor.buildInternalComponent(config)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6600/buggy-version/src.main.java.imperial.modaclouds.monitoring.datacollectors.monitors.ModacloudsMonitor.java", "BodyUseAPI": ["imperial.modaclouds.monitoring.datacollectors.monitors.ModacloudsMonitor.buildInternalComponent(imperial.modaclouds.monitoring.datacollectors.basic.Config)", "it.polimi.tower4clouds.model.data_collectors.DCDescriptor.addMonitoredResource(java.util.Set<java.lang.String>,it.polimi.tower4clouds.model.ontology.Resource)", "it.polimi.tower4clouds.model.data_collectors.DCDescriptor.addResource(it.polimi.tower4clouds.model.ontology.Resource)", "imperial.modaclouds.monitoring.datacollectors.monitors.ModacloudsMonitor.buildInternalComponent(imperial.modaclouds.monitoring.datacollectors.basic.Config)"], "Fixed commit": "9de56bb23fbd8e269adf805473412d8a2f7e296e", "Url": "https://api.github.com/repos/imperial-modaclouds/modaclouds-data-collectors", "Date": "2015-06-05T17:18:46Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subNode.value) == null) { ++(this.size); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6648/buggy-version/src.main.java.com.github.veqryn.collect.AbstractBinaryTrie.java", "BodyUseAPI": [], "Fixed commit": "87b09a2080f767866a6045dd29af21be32bf21f8", "Url": "https://api.github.com/repos/veqryn/cidr-ip-trie", "Date": "2015-10-16T03:54:22Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((board[i][a]) <= 10) { ans += \" \" + (board[i][a]); }else { ans += \" \" + (board[i][a]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6141/buggy-version/02KnightsTour.KnightsTour.java", "BodyUseAPI": [], "Fixed commit": "a32abfee79c75e80d28b15ec4d39975ec3a26ddc", "Url": "https://api.github.com/repos/XWilliamY/APHW07", "Date": "2015-02-27T00:21:51Z"},
{"Line": "=>415", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cfg.abortAfterCG) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4171/buggy-version/wala.joana.wala.core.src.edu.kit.joana.wala.core.SDGBuilder.java", "BodyUseAPI": [], "Fixed commit": "8a8fc5eebe9e04675c84bbca7651250af64aa184", "Url": "https://api.github.com/repos/joana-team/joana", "Date": "2015-11-19T10:00:07Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.zcu.kiv.os.core.device.IInputDevice.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (s != null) { historyArea.append((s + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3646/buggy-version/src.cz.zcu.kiv.os.terminal.SwingTerminal.java", "BodyUseAPI": ["javax.swing.JTextArea.append(java.lang.String)"], "Fixed commit": "5844cb69cc48d1a19949dbfce6400a8948a529c5", "Url": "https://api.github.com/repos/bydga/kiv.os", "Date": "2012-11-05T15:34:08Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(workingDir.endsWith(cz.zcu.kiv.os.core.filesystem.FileManager.SEPARATOR))) { result.append(cz.zcu.kiv.os.core.filesystem.FileManager.SEPARATOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/3646/buggy-version/src.cz.zcu.kiv.os.core.filesystem.FileManager.java", "BodyUseAPI": ["java.lang.StringBuffer.append(java.lang.String)"], "Fixed commit": "5844cb69cc48d1a19949dbfce6400a8948a529c5", "Url": "https://api.github.com/repos/bydga/kiv.os", "Date": "2012-11-05T15:34:08Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == (fi.vincit.jmobster.processor.frameworks.backbone.BackboneModelProcessor.Mode.JSON)) { getWriter().setJSONmode(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6846/buggy-version/src.main.java.fi.vincit.jmobster.processor.frameworks.backbone.BackboneModelProcessor.java", "BodyUseAPI": [], "Fixed commit": "ff960f10d49cf6eaa8171dd8cf4fddd690d02528", "Url": "https://api.github.com/repos/juhasipo/JMobster", "Date": "2013-03-09T08:09:23Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((to % 2) == 0) { to++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6571/buggy-version/src.Core.Generator.Generator.java", "BodyUseAPI": [], "Fixed commit": "e605b7844e9922a52a98ee939ebd78c2639abfb5", "Url": "https://api.github.com/repos/louay-hesham/ScheduleGenerator", "Date": "2017-02-06T22:13:19Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.currentSchedule[to][t.day].equals(this.emptyPeriod)) { visited[to][t.day] = true; }else if (this.currentSchedule[(to - 1)][t.day].equals(this.emptyPeriod)) { visited[(to - 1)][t.day] = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6571/buggy-version/src.Core.Generator.Generator.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "e605b7844e9922a52a98ee939ebd78c2639abfb5", "Url": "https://api.github.com/repos/louay-hesham/ScheduleGenerator", "Date": "2017-02-06T22:13:19Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((!(args[0].equalsIgnoreCase(\"region\"))) && (!(args[0].equalsIgnoreCase(\"local\")))) && (!(args[0].equalsIgnoreCase(\"reset_region\")))) && (!(args[0].equalsIgnoreCase(\"reset_local\")))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5278/buggy-version/src.com.github.catageek.ByteCart.BytecartCommandExecutor.java", "BodyUseAPI": [], "Fixed commit": "e733dd30385a2cbc0058681b41a8a0cd8de8293a", "Url": "https://api.github.com/repos/catageek/ByteCart", "Date": "2013-01-20T15:10:31Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (g != null) generator = g.clone();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2787/buggy-version/Tavernspiel.src.blob.ParticleEffect.java", "BodyUseAPI": [], "Fixed commit": "73acb66230a0e18675994f004057c0c103bf0127", "Url": "https://api.github.com/repos/punk4eva/Tavernspiel", "Date": "2017-12-07T20:57:50Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (connection != null) { try { connection.close(); } catch (java.sql.SQLException ex) { java.util.logging.Logger.getLogger((\"Error in SQL Exeception for closing connection: \" + (edu.emory.cci.aiw.cvrg.eureka.cas.SQLStringGenerator.class.getName()))).log(java.util.logging.Level.SEVERE, null, ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8468/buggy-version/src.main.java.edu.emory.cci.aiw.cvrg.eureka.cas.SQLStringGenerator.java", "BodyUseAPI": ["java.sql.Connection.close()"], "Fixed commit": "3ef321494bb997fa4822d9ddcd278bd9a7c50395", "Url": "https://api.github.com/repos/arpost/cas", "Date": "2016-01-25T18:30:42Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getConfiguration().getInclusionStrategies().getNodeInclusionStrategy().include(node)) && (nodeToBeConsideredByModule(node))) { assignUuid(node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1087/buggy-version/src.main.java.com.graphaware.module.uuid.UuidModule.java", "BodyUseAPI": ["com.graphaware.module.uuid.UuidModule.2.assignUuid(org.neo4j.graphdb.Node)"], "Fixed commit": "f08b7c3708ed1439856672f4a09e66d45d982611", "Url": "https://api.github.com/repos/graphaware/neo4j-uuid", "Date": "2014-08-18T23:00:15Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (keyCode == (android.view.KeyEvent.KEYCODE_MENU)) { this.alertDialog.show(); android.view.Window window = this.alertDialog.getWindow(); window.setContentView(new com.dingpw.android.setting.about.AboutView(this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8727/buggy-version/b-f-setting-sample.src.main.java.com.dingpw.android.setting.sample.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "73b99d4ebb3aadaaa8f522635608ef897bcc09ba", "Url": "https://api.github.com/repos/QQ1350995917/b-f-setting", "Date": "2014-08-16T06:52:59Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.evilengineers.templates4j.Interpreter.trace) || (debug)) trace(scope, ip);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4223/buggy-version/templates4j-core.src.main.java.net.evilengineers.templates4j.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "d21d47cc56680b464c92aef8f5701aae00329803", "Url": "https://api.github.com/repos/danishdynamite/templates4j", "Date": "2014-04-25T21:41:00Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.commcare.xml.CaseXmlParser.getAttributeValue(<nulltype>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (relationship == null) { relationship = org.commcare.cases.model.CaseIndex.RELATIONSHIP_CHILD; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/287/buggy-version/backend.src.org.commcare.xml.CaseXmlParser.java", "BodyUseAPI": [], "Fixed commit": "6dcb0d777909a5f591f57e3abf125165aa572df3", "Url": "https://api.github.com/repos/dimagi/commcare-core", "Date": "2015-01-08T15:47:03Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sampleRate) != null) { sb.append(\" \").append(sampleRate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2536/buggy-version/core.src.main.java.com.statful.client.core.message.MessageBuilder.java", "BodyUseAPI": [], "Fixed commit": "acb1e9e6238c9f558b4875ae4157d03aed330da3", "Url": "https://api.github.com/repos/statful/statful-client-java", "Date": "2017-01-12T16:08:53Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((skill.displayName) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1041/buggy-version/src.com.smartaleq.bukkit.dwarfcraft.Dwarf.java", "BodyUseAPI": [], "Fixed commit": "b31dbc73b85591b53deb18cff38be6c89fc1213c", "Url": "https://api.github.com/repos/smartaleq/DwarfCraft_orig", "Date": "2011-02-27T03:54:27Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(evt.getValueIsAdjusting())) { pcs.firePropertyChange(\"subcategoryChange\", null, list.getSelectedValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8900/buggy-version/iMat.src.imat.SubcategoryList.java", "BodyUseAPI": [], "Fixed commit": "0963da7e33546919879307943e0cdb7cfc33fd4f", "Url": "https://api.github.com/repos/Vilddjur/DAT216_Projekt", "Date": "2015-03-03T22:22:30Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) == null) { recyclerView.setAdapter(new com.akash.vachana.fragment.MyVachanaListRecyclerViewAdapter(new java.util.ArrayList<com.akash.vachana.dbUtil.VachanaMini>(), mListener, listType)); }else { recyclerView.setAdapter(adapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/18/buggy-version/app.src.main.java.com.akash.vachana.fragment.VachanaListFragment.java", "BodyUseAPI": [], "Fixed commit": "69b7d3e11545e6504e0b3cd924d68d434bc5c4aa", "Url": "https://api.github.com/repos/akash-akya/vachana-app", "Date": "2016-10-14T21:30:51Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myAdapter) == null) { recyclerView.setAdapter(new com.akash.vachana.fragment.MyKathruListRecyclerViewAdapter(new java.util.ArrayList<com.akash.vachana.dbUtil.KathruMini>(), mListener, listType)); }else { recyclerView.setAdapter(myAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/18/buggy-version/app.src.main.java.com.akash.vachana.fragment.KathruListFragment.java", "BodyUseAPI": [], "Fixed commit": "69b7d3e11545e6504e0b3cd924d68d434bc5c4aa", "Url": "https://api.github.com/repos/akash-akya/vachana-app", "Date": "2016-10-14T21:30:51Z"},
{"Line": "=>983", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fightInProgress) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5317/buggy-version/src.net.slipcor.pvparena.arena.Arena.java", "BodyUseAPI": [], "Fixed commit": "d825b7036bbcd7135071b7cdf3bb742f61c9193e", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2012-06-25T21:54:14Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cpw.mods.fml.common.Loader.isModLoaded(\"BuildCraft|Silicon\")) { BuildcraftRecipeRegistry.assemblyTable.addRecipe(recipeId, 8000, facade6, new net.minecraft.item.ItemStack(buildcraft.BuildCraftTransport.pipeStructureCobblestone, 3), itemStack); BuildcraftRecipeRegistry.assemblyTable.addRecipe((recipeId + \":hollow\"), 8000, facade6Hollow, new net.minecraft.item.ItemStack(buildcraft.BuildCraftTransport.pipeStructureCobblestone, 3), itemStack); BuildcraftRecipeRegistry.assemblyTable.addRecipe((recipeId + \":toHollow\"), 160, facadeHollow, facade); BuildcraftRecipeRegistry.assemblyTable.addRecipe((recipeId + \":fromHollow\"), 160, facade, facadeHollow); }else { cpw.mods.fml.common.registry.GameRegistry.addShapedRecipe(facade6, \"t \", \"ts\", \"t \", 't', itemStack, 's', BuildCraftTransport.pipeStructureCobblestone); cpw.mods.fml.common.registry.GameRegistry.addShapedRecipe(facade6Hollow, \"t \", \" s\", \"t \", 't', itemStack, 's', BuildCraftTransport.pipeStructureCobblestone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2202/buggy-version/common.buildcraft.transport.ItemFacade.java", "BodyUseAPI": [], "Fixed commit": "9363e6478ce225a1977cea3d30d6ff9b1bf1ac19", "Url": "https://api.github.com/repos/BuildCraft/BuildCraft", "Date": "2015-04-01T16:07:33Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (destinationObject.getShape().equals(Shape.BOX)) { java.lang.System.out.println(\"kommer\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5448/buggy-version/src.group3.world.Rules.java", "BodyUseAPI": [], "Fixed commit": "9d1189f7e59b23396db99f9aedbce280febba0e8", "Url": "https://api.github.com/repos/Chefenmike/AI", "Date": "2014-05-14T14:28:49Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasTrainModel)) { trackModel.SetExecutionMultiplier(multiplier); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5483/buggy-version/Central.Central.java", "BodyUseAPI": [], "Fixed commit": "c81a53a7d3fb06dabd1c9fc1c6e8301bf90df7c2", "Url": "https://api.github.com/repos/Kuhnmeister/Trains---Third-Rail", "Date": "2017-12-13T01:08:20Z"},
{"Line": "=>2245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ofbiz.entity.Delegator.findByPrimaryKey(java.lang.String,org.ofbiz.base.util.UtilMisc.toMap(\"productFeatureId\", productSizeId))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((org.ofbiz.base.util.UtilValidate.isEmpty(sizeFeature)) && (productSizeId.equals(\"F\"))) { productSizeId = \"F\"; }else { productSizeId = ((java.lang.String) (sizeFeature.get(\"description\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5452/buggy-version/hot-deploy.zuczugcommon.src.com.zuczug.product.ZuczugProductServices.java", "BodyUseAPI": ["org.ofbiz.entity.GenericValue.get(java.lang.String)"], "Fixed commit": "a7dac29462edbae3d9a1b5cf67fe3831c9aaa426", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-08-19T09:31:42Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (c.getName().equalsIgnoreCase(\"nogame\")) { net.net76.joedevelopment.ActiveGame.nogame(sender); }else if (c.getName().equalsIgnoreCase(\"spawnoverride\")) { getServer().dispatchCommand(getServer().getConsoleSender(), (\"spawn \" + (sender.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/9110/buggy-version/src.net.net76.joedevelopment.Mainplugin.java", "BodyUseAPI": ["c.getName().equalsIgnoreCase(java.lang.String)", "org.bukkit.command.Command.getName()"], "Fixed commit": "3a0dc53459de83f7f7ee35aa3c450e02703641f3", "Url": "https://api.github.com/repos/JoeDevelopment/CastleClash", "Date": "2014-10-21T21:53:25Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((board[lowestRow][col]) == 0) { board[lowestRow][col] = player.getID(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/990/buggy-version/src.team.abhayumar.connect.Game.java", "BodyUseAPI": [], "Fixed commit": "36048b939d21f00bb54d2b77491c389211fee6c0", "Url": "https://api.github.com/repos/umar-ahmed/ConnectFour", "Date": "2016-03-25T22:21:12Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isLocalcacheUsableWhenConnectionBroken)) && (isConnectionBroken)) { throw new java.lang.IllegalStateException(\"zookeeper is down !\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/9133/buggy-version/zookeeperMap.src.main.java.com.babyduncan.zookeeperMap.ZookeeperMap.java", "BodyUseAPI": [], "Fixed commit": "bc6414e15adc5b837bef33e334fe60c9ff6c4bea", "Url": "https://api.github.com/repos/BabyDuncan/zookeeperMap", "Date": "2013-07-22T11:13:33Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.springframework.util.StringUtils.hasText(id)) { vdcs.add(java.lang.Integer.parseInt(id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2523/buggy-version/server.src.main.java.com.abiquo.abiserver.persistence.dao.virtualappliance.hibernate.VirtualApplianceDAOHibernate.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.util.Collection<java.lang.Integer>.add(int)"], "Fixed commit": "918daee9da2cf11cb6ca1290976fd01261c964be", "Url": "https://api.github.com/repos/abiquo/abiquo", "Date": "2011-05-30T15:13:44Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javafx.util.Pair<application.Task, java.lang.String>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (completedTask != null) { application.Undo undo = new application.Undo(application.Command.COMPLETE, completedTask, targetId); Main.undos.push(undo); Main.redos.clear(); systemMsg = Constant.MSG_COMPLETE_SUCCESS.replace(Constant.DELIMETER_REPLACE, completedTask.getId()); }else { systemMsg = Constant.MSG_ITEM_NOT_FOUND; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8285/buggy-version/ToDooo.src.application.Command.java", "BodyUseAPI": ["Constant.MSG_COMPLETE_SUCCESS.replace(Constant.DELIMETER_REPLACE,completedTask.getId())", "application.Task.getId()"], "Fixed commit": "bbcb7ed299df0be262ffbc1a4c555f5b5e84c1fe", "Url": "https://api.github.com/repos/cs2103jan2015-f09-3j/main", "Date": "2015-03-26T12:51:35Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.siberika.idea.pascal.lang.psi.impl.PasStructTypeImpl.MemberBuilder.getFirstChild()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((child.getClass()) == (com.siberika.idea.pascal.lang.psi.impl.PasVisibilityImpl.class)) { visibility = getVisibility(child); }else if ((child.getClass()) == (com.siberika.idea.pascal.lang.psi.impl.PasRecordVariantImpl.class)) { addFields(res, child, PasField.FieldType.VARIABLE, visibility); }else if (((child.getClass()) == (com.siberika.idea.pascal.lang.psi.impl.PasNamedIdentImpl.class)) && ((this) instanceof com.siberika.idea.pascal.lang.psi.PasRecordDecl)) { addField(res, ((com.siberika.idea.pascal.lang.psi.PascalNamedElement) (child)), PasField.FieldType.VARIABLE, visibility); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1398/buggy-version/plugin.src.lang.psi.impl.PasStructTypeImpl.java", "BodyUseAPI": ["com.siberika.idea.pascal.lang.psi.impl.PasStructTypeImpl.MemberBuilder.addFields(com.siberika.idea.pascal.lang.psi.impl.Members,com.intellij.psi.PsiElement,PasField.FieldType.VARIABLE,PasField.Visibility)", "com.siberika.idea.pascal.lang.psi.impl.PasStructTypeImpl.MemberBuilder.getVisibility(com.intellij.psi.PsiElement)", "com.intellij.psi.PsiElement.getClass()", "com.intellij.psi.PsiElement.getClass()"], "Fixed commit": "e9d5c63a53aed750218dda0fadfc40476fc8ba85", "Url": "https://api.github.com/repos/casteng/i-pascal", "Date": "2017-02-21T23:39:42Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cell.getNumericCellValue()) > 42370) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(\"yyyy/M/d\"); java.lang.String strDate = (sdf.format(cell.getDateCellValue())) + \" 22:00\"; logger.trace((\"DDDD = \" + strDate)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2682/buggy-version/WEB-INF.src.hoge.ExcelHandler.java", "BodyUseAPI": ["java.text.SimpleDateFormat.format(cell.getDateCellValue())", "org.apache.poi.ss.usermodel.Cell.getDateCellValue()"], "Fixed commit": "40b36ac99e408fbfd3191d8cdb216bca5075efc0", "Url": "https://api.github.com/repos/tsunabit/ConvertExceltoCSV", "Date": "2016-12-14T16:02:51Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args[0]) == null) { api.getLogger().severe(\"A critical command error occurred.\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5995/buggy-version/src.bukkit.java.com.worldcretornica.plotme_core.bukkit.BukkitCommand.java", "BodyUseAPI": [], "Fixed commit": "1819ae6e494647d5bcf402e8471973875c7b597f", "Url": "https://api.github.com/repos/WorldCretornica/PlotMe-Core", "Date": "2015-04-12T22:21:30Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) > 1) { throw new com.worldcretornica.plotme_core.commands.BadUsageException(getUsage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5995/buggy-version/src.main.java.com.worldcretornica.plotme_core.commands.CmdAddTime.java", "BodyUseAPI": [], "Fixed commit": "1819ae6e494647d5bcf402e8471973875c7b597f", "Url": "https://api.github.com/repos/WorldCretornica/PlotMe-Core", "Date": "2015-04-12T22:21:30Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((map.get(\"distance\")) instanceof java.lang.Integer) { distance = 1.0 * ((int) (map.get(\"distance\"))); }else { distance = ((double) (map.get(\"distance\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5254/buggy-version/src.main.java.com.example.personalspace.Preference.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Fixed commit": "e81ddf34c98a9648a6e549e069e57e0ddb138ceb", "Url": "https://api.github.com/repos/hakku276/personalspace-rest", "Date": "2017-07-02T15:48:17Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.xSpeed) == 0) { this.xSpeed = this.defaultMvtSize; }else { this.xSpeed *= -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/5435/buggy-version/open-jill-object-background.src.main.java.org.jill.game.entities.obj.CrabManager.java", "BodyUseAPI": [], "Fixed commit": "1aa2e8818534ee87313ec216a6517fadc1038fa9", "Url": "https://api.github.com/repos/bubulemaster/openjill", "Date": "2015-08-10T18:31:49Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (days > 0) { text += days + \"d \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/4384/buggy-version/src.net.avedo.seekampf.AuctionListFragment.java", "BodyUseAPI": [], "Fixed commit": "0afd366dde1626432a001df843746e5b4b760983", "Url": "https://api.github.com/repos/Avedo/SeeKampf", "Date": "2014-07-06T22:20:52Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.getType()) == (intervals.PointType.EXACT)) && ((point.getType()) != (intervals.PointType.EXACT))) { return point.include(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6317/buggy-version/src.intervals.utils.ExactPoint.java", "BodyUseAPI": ["intervals.utils.ExactPoint.include(intervals.utils.ExactPoint)"], "Fixed commit": "e6d0695eed16bb04b89fa7df4a033f5d4ecfb1b6", "Url": "https://api.github.com/repos/jcombarros/Interval-Refactoring", "Date": "2015-04-10T17:27:07Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.getType()) == (intervals.PointType.EXACT)) && ((point.getType()) != (intervals.PointType.EXACT))) { return point.include(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6317/buggy-version/src.intervals.utils.ExactPoint.java", "BodyUseAPI": ["intervals.utils.UntilPoint.include(intervals.utils.ExactPoint)"], "Fixed commit": "e6d0695eed16bb04b89fa7df4a033f5d4ecfb1b6", "Url": "https://api.github.com/repos/jcombarros/Interval-Refactoring", "Date": "2015-04-10T17:27:07Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.getType()) == (intervals.PointType.EXACT)) && ((point.getType()) != (intervals.PointType.EXACT))) { return point.include(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/6317/buggy-version/src.intervals.utils.ExactPoint.java", "BodyUseAPI": ["intervals.utils.FromPoint.include(intervals.utils.ExactPoint)"], "Fixed commit": "e6d0695eed16bb04b89fa7df4a033f5d4ecfb1b6", "Url": "https://api.github.com/repos/jcombarros/Interval-Refactoring", "Date": "2015-04-10T17:27:07Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((newProjectName) == null) && ((getSerializationArtefact()) != null)) { java.lang.String computedName = null; if ((getSerializationArtefact()) instanceof java.io.File) { computedName = ((java.io.File) (getSerializationArtefact())).getName(); }else if ((getSerializationArtefact()) instanceof org.openflexo.rm.InJarResourceImpl) { computedName = ((org.openflexo.rm.InJarResourceImpl) (getSerializationArtefact())).getName(); }else { computedName = getSerializationArtefact().toString(); } if (computedName.endsWith(FlexoProjectResourceFactory.PROJECT_SUFFIX)) { return computedName.substring(0, computedName.lastIndexOf(FlexoProjectResourceFactory.PROJECT_SUFFIX)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/1817/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.action.CreateProject.java", "BodyUseAPI": [], "Fixed commit": "a536734c41423f5a948b40e795e352e85736369e", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2017-12-01T13:37:09Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(me.ccrama.redditslide.SettingValues.smallTag)) && (!full)) { title.setVisibility(View.GONE); }else { title.setText(\"SELF\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8612/buggy-version/app.src.main.java.me.ccrama.redditslide.SubmissionViews.HeaderImageLinkView.java", "BodyUseAPI": [], "Fixed commit": "ff95c16b49b9adf2e846654f2ad17ef226a66893", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-03-15T04:12:06Z"},
{"Line": "=>1982", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAsyncGetSubreddit) != null) { mAsyncGetSubreddit.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8612/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ff95c16b49b9adf2e846654f2ad17ef226a66893", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-03-15T04:12:06Z"},
{"Line": "=>1379", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["me.ccrama.redditslide.Views.ToggleSwipeViewPager.getCurrentItem()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((currentComment) == page) page -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/8612/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "ff95c16b49b9adf2e846654f2ad17ef226a66893", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-03-15T04:12:06Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(jsonObject.isNull(\"Bid\"))) batchOperations.add(com.sam_chordas.android.stockhawk.rest.Utils.buildBatchOperation(jsonObject));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/591/buggy-version/StockHawk-master.app.src.main.java.com.sam_chordas.android.stockhawk.rest.Utils.java", "BodyUseAPI": ["java.util.ArrayList<android.content.ContentProviderOperation>.add(android.content.ContentProviderOperation)", "com.sam_chordas.android.stockhawk.rest.Utils.buildBatchOperation(org.json.JSONObject)"], "Fixed commit": "74d86670c26bbc2d01da7fcbec33b8a974bbb9ac", "Url": "https://api.github.com/repos/MangeshKadam/Stock-Hawk", "Date": "2016-06-15T18:49:07Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, taskExecution.GroovyFutureTask>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (futureTask == null) returnTask.setTaskStatus(TaskStatus.FAILED); else { taskExecution.GroovyTaskThread executingThread = futureTask.getGroovyThread(); if (executingThread == null) { returnTask.setTaskStatus(TaskStatus.FAILED); }else returnTask.setTaskStatus(TaskStatus.EXECUTING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V4/2643/buggy-version/src.taskExecution.TaskExecutionHelper.java", "BodyUseAPI": ["taskExecution.GroovyFutureTask.getGroovyThread()"], "Fixed commit": "8b8d110439313be2ca8ba4ae294f57b6c36d625c", "Url": "https://api.github.com/repos/PaulKh/Test-groovy-task-executor", "Date": "2015-08-18T07:49:22Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (min <= 0) updatedTime = sec + \" sec ago\"; else updatedTime = ((min + \" min \") + sec) + \" sec ago\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5259/buggy-version/src.app.vlnvv.friendFinder.MapViewFragment.java", "BodyUseAPI": [], "Fixed commit": "6817ec4097d166726da94835a0110f0550255063", "Url": "https://api.github.com/repos/vlnvv/friendFinder", "Date": "2014-10-23T21:33:52Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["VoteCategory.find.byId(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((voteCat.type) == (VoteCategory.VOTE_TYPE.STAR)) { q = q.eq(\"project_id\", projectId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3105/buggy-version/app.controllers.ApiVoteController.java", "BodyUseAPI": [], "Fixed commit": "0c2d25acafb09e7e9ffd79025f02e0183cefe720", "Url": "https://api.github.com/repos/SSD2015/TeamGG", "Date": "2015-03-24T08:33:14Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (returnMap.containsKey(studScoreRoundedDown.toString())) { numCurrentScore = returnMap.get(studScoreRoundedDown.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7276/buggy-version/trunk.implementation.model.graph.Graph.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.lang.Integer.toString()"], "Fixed commit": "6c87702fb972e3358abcebc8ed4e95d6d880f186", "Url": "https://api.github.com/repos/jjfazio/308Grader", "Date": "2014-03-10T21:49:06Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((connection) != null) { connection.disconnect(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6383/buggy-version/components.camel-mqtt.src.main.java.org.apache.camel.component.mqtt.MQTTEndpoint.java", "BodyUseAPI": [], "Fixed commit": "857c66b7b7433bb768e321948da4e6f1af50bd11", "Url": "https://api.github.com/repos/apache/camel", "Date": "2017-11-03T16:36:56Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2649/buggy-version/src.main.java.com.mridang.fielder.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "b90c68ba6ba87fa309842ad8745cc381a52a49f8", "Url": "https://api.github.com/repos/mridang/dashclock-fielder", "Date": "2015-03-29T09:10:20Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((jcPlayerService) != null) jcPlayerService.registerInvalidPathListener(invalidPathListener);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2607/buggy-version/jcplayer.src.main.java.com.example.jean.jcplayer.JcAudioPlayer.java", "BodyUseAPI": [], "Fixed commit": "868a9c96ceb618df01fd43802cbca08cfbebde8e", "Url": "https://api.github.com/repos/joielechong/JcPlayer", "Date": "2016-12-04T19:05:01Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (mainClass != null) { classTree.add(mainClass); newlyAdded.add(mainClass); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2038/buggy-version/src.jarshrink.ClassTreeBuilder.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "16ea93f518cb358ac08a52d12c8499a5287c4109", "Url": "https://api.github.com/repos/Deconimus/JarShrink", "Date": "2017-01-11T16:53:03Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((parts.length) > 1) { clazz = parts[1].substring(1).replace(\"/\", \".\").replace(\".class\", \"\"); }else { clazz = url.getFile().substring(1).replace(\"/\", \".\").replace(\".class\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2942/buggy-version/environments.osgi.core.integration.src.main.java.org.jboss.weld.environment.osgi.impl.integration.discovery.bundle.BundleBeanDeploymentArchiveFactory.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "587f282d352670c9fb2cd153557196a9129b9b99", "Url": "https://api.github.com/repos/mathieuancelin/core", "Date": "2011-09-29T11:50:01Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((parts.length) > 1) { clazz = parts[1].substring(1).replace(\"/\", \".\").replace(\".class\", \"\"); }else { clazz = zipEntryPath.substring(1).replace(\"/\", \".\").replace(\".class\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2942/buggy-version/environments.osgi.core.integration.src.main.java.org.jboss.weld.environment.osgi.impl.integration.discovery.bundle.BundleBeanDeploymentArchiveFactory.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "587f282d352670c9fb2cd153557196a9129b9b99", "Url": "https://api.github.com/repos/mathieuancelin/core", "Date": "2011-09-29T11:50:01Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((d == null) || ((d.getSummary()) == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9020/buggy-version/RequirementsDiscussionAnalyzer.src.main.java.org.computer.knauss.reqtDiscussion.ui.uiModel.DiscussionTableModel.java", "BodyUseAPI": [], "Fixed commit": "c54f2c12101c70814ac84474d218e7ae46c7acd8", "Url": "https://api.github.com/repos/oerich/ReqtDisc", "Date": "2012-11-13T20:16:38Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((c1 == null) ^ (c2 == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1038/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.colourpicker.ColourPickerUtil.java", "BodyUseAPI": [], "Fixed commit": "543558461ecd639d28f1cd0eb60691b14552d0f7", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2017-07-04T03:55:42Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.openmicroscopy.shoola.util.CommonsLangUtils.isNotEmpty(model.getLUT())) fireChangeEvent(PaintPotUI.LUT_PROPERTY); else fireChangeEvent(PaintPotUI.COLOUR_CHANGED_PROPERTY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1038/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.colourpicker.RGBControl.java", "BodyUseAPI": [], "Fixed commit": "543558461ecd639d28f1cd0eb60691b14552d0f7", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2017-07-04T03:55:42Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dr.inference.operators.AdaptableVarianceMultivariateNormalOperator.DEBUG) { java.lang.System.err.println((\"Current logJacobian = \" + logJacobian)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5860/buggy-version/src.dr.inference.operators.AdaptableVarianceMultivariateNormalOperator.java", "BodyUseAPI": [], "Fixed commit": "a9dccdfa9e5d19cc25ba985a4c417d532ad7cc56", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2016-02-12T04:32:33Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dr.inference.operators.AdaptableVarianceMultivariateNormalOperator.DEBUG) { java.lang.System.err.println((((((\"x[\" + currentIndex) + \"] = \") + (x[currentIndex])) + \" -> \") + (transformedX[currentIndex]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5860/buggy-version/src.dr.inference.operators.AdaptableVarianceMultivariateNormalOperator.java", "BodyUseAPI": [], "Fixed commit": "a9dccdfa9e5d19cc25ba985a4c417d532ad7cc56", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2016-02-12T04:32:33Z"},
{"Line": "=>429", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dr.inference.operators.AdaptableVarianceMultivariateNormalOperator.DEBUG) { java.lang.System.err.println((\"Current logJacobian = \" + logJacobian)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5860/buggy-version/src.dr.inference.operators.AdaptableVarianceMultivariateNormalOperator.java", "BodyUseAPI": [], "Fixed commit": "a9dccdfa9e5d19cc25ba985a4c417d532ad7cc56", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2016-02-12T04:32:33Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (evt != null) { main.plugin.getServer().getPluginManager().callEvent(evt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5755/buggy-version/MarioKart.src.net.stormdev.ucars.race.Race.java", "BodyUseAPI": ["main.plugin.getServer().getPluginManager().callEvent(net.stormdev.ucars.utils.RaceEndEvent)"], "Fixed commit": "ef823435720019f350c30a5a8598301675f50ff4", "Url": "https://api.github.com/repos/storm345dev/MarioKart", "Date": "2013-11-25T18:18:49Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.charAt(0)) != c) set.addAll(com.bajetii.proiecttc.Utils.first(s.charAt(0)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5459/buggy-version/ProiectTC.src.main.java.com.bajetii.proiecttc.Utils.java", "BodyUseAPI": ["java.lang.String.charAt(int)", "java.util.HashSet<java.lang.Character>.addAll(java.util.Set<java.lang.Character>)", "com.bajetii.proiecttc.Utils.first(char)"], "Fixed commit": "802c491df93ca7fa53199b9bd1e18408a3715706", "Url": "https://api.github.com/repos/Gabor132/ProiectTC", "Date": "2017-04-23T17:10:17Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id.length()) <= 0) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3621/buggy-version/shivas-server.src.main.java.org.shivas.server.core.waypoints.WaypointList.java", "BodyUseAPI": [], "Fixed commit": "64c4866b488a17915eb1a0f5a8ccc1ead4eed028", "Url": "https://api.github.com/repos/Emudofus/Shivas", "Date": "2012-09-12T09:37:00Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (NfcAdapter.ACTION_TECH_DISCOVERED.equals(getIntent().getAction())) processIntent(getIntent());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5555/buggy-version/app.src.main.java.com.bakabaka.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0e60a92f572cff25e4f5fc2957201b9300d21f40", "Url": "https://api.github.com/repos/flylai/WaterCard_RW_forAndroid", "Date": "2015-10-31T05:30:24Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bitmapUrl == null) || (!(bitmapUrl.equals(url)))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6115/buggy-version/makemoji-sdk-android.src.main.java.com.makemoji.mojilib.gif.GifImageView.java", "BodyUseAPI": [], "Fixed commit": "43b71fbda1452865d2eaf1e741356012f1192c95", "Url": "https://api.github.com/repos/makemoji/MakemojiSDK-Android", "Date": "2017-10-20T04:43:32Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRefreshing()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3419/buggy-version/app.src.main.java.com.nancyberry.wepost.ui.timeline.FriendTimelineActivity.java", "BodyUseAPI": [], "Fixed commit": "ba28180bf507bc276439107cb9512df0b472c141", "Url": "https://api.github.com/repos/AndroidBeatsMe/WePost", "Date": "2016-04-12T13:41:16Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shouldLoadGUI) { if ((event.gui) instanceof net.minecraft.client.gui.GuiMainMenu) { if (((ConfigHandler.displayGuiOnLaunch) && (cpw.mods.fml.common.Loader.isModLoaded(ConfigHandler.modToFind))) || ((ConfigHandler.enableUpdateChecker) && (main.launchgui.Utils.isUpdateAvailable()))) { event.gui = new main.launchgui.StartupGui(); shouldLoadGUI = false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6158/buggy-version/src.main.java.main.launchgui.GuiEventHandler.java", "BodyUseAPI": [], "Fixed commit": "75042cb6e62389089d20880f694f956bf7bc54af", "Url": "https://api.github.com/repos/TehNut/LaunchGui", "Date": "2015-02-08T06:01:22Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (flag != (getIsVariableDeclaration())) { if (flag) { if (org.openflexo.toolbox.StringUtils.isEmpty(getVariableName())) { setVariableName(\"newVariable\"); } }else { if (org.openflexo.toolbox.StringUtils.isNotEmpty(getVariableName())) { setVariableName(null); getAssignation().reset(); } } org.openflexo.foundation.viewpoint.editionaction.AssignableAction.AssignableActionImpl.getPropertyChangeSupport().firePropertyChange(\"isVariableDeclaration\", (!flag), flag); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7845/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.viewpoint.editionaction.AssignableAction.java", "BodyUseAPI": ["org.openflexo.foundation.viewpoint.editionaction.AssignableAction.AssignableActionImpl.getPropertyChangeSupport().firePropertyChange(java.lang.String,boolean,boolean)"], "Fixed commit": "badb72cceda1728d731748f7b63696a2cc514e13", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2014-02-07T10:25:13Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((result.has(\"blacklist\")) && (result.getJSONObject(\"blacklist\").has(\"patterns\"))) { pattern_array = new org.json.JSONObject(getbody).getJSONObject(\"url-filtering-profile\").getJSONObject(\"blacklist\").getJSONArray(\"patterns\"); }else { pattern_array = new org.json.JSONArray(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7879/buggy-version/src.main.java.com.prodevans.zeno.dao.impl.CategoryListDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "74482c08aecfd34cca83789570a4e81523da8188", "Url": "https://api.github.com/repos/prodevans/Zeno", "Date": "2017-10-06T09:42:57Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((reservationDTO.getMembreDTO()) == null) { reservationDTO.setMembreDTO(new ca.qc.collegeahuntsic.bibliotheque.dto.MembreDTO()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/308/buggy-version/bibliotheque-03-MySQL.src.ca.qc.collegeahuntsic.bibliotheque.Bibliotheque.java", "BodyUseAPI": ["ca.qc.collegeahuntsic.bibliotheque.dto.ReservationDTO.setMembreDTO(ca.qc.collegeahuntsic.bibliotheque.dto.MembreDTO)"], "Fixed commit": "b5a1d452bb440ce05776980a62d820207f3a281c", "Url": "https://api.github.com/repos/mehdi-payday/payday", "Date": "2016-10-17T20:41:17Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((reservationDTO.getLivreDTO()) == null) { reservationDTO.setLivreDTO(new ca.qc.collegeahuntsic.bibliotheque.dto.LivreDTO()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/308/buggy-version/bibliotheque-03-MySQL.src.ca.qc.collegeahuntsic.bibliotheque.Bibliotheque.java", "BodyUseAPI": ["ca.qc.collegeahuntsic.bibliotheque.dto.ReservationDTO.setLivreDTO(ca.qc.collegeahuntsic.bibliotheque.dto.LivreDTO)"], "Fixed commit": "b5a1d452bb440ce05776980a62d820207f3a281c", "Url": "https://api.github.com/repos/mehdi-payday/payday", "Date": "2016-10-17T20:41:17Z"},
{"Line": "=>1150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listLayout.getVisibility()) == (android.view.View.VISIBLE)) { pharmacyListFragment.setData(pharmaciesListItems); pharmacyListFragment.updateData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4617/buggy-version/Calendula.src.main.java.es.usc.citius.servando.calendula.pharmacies.activities.PharmaciesMapActivity.java", "BodyUseAPI": [], "Fixed commit": "c733698118ff25ab4217a7e8906b42bd649e95ea", "Url": "https://api.github.com/repos/isaaccf/calendula", "Date": "2017-01-06T10:27:50Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj == null) { return \"null\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4875/buggy-version/HW_08.src.main.java.by.dm13y.study.JsonMaker.java", "BodyUseAPI": [], "Fixed commit": "90768df1f7adb30d99b3e2e7fed66e5af99f5ccf", "Url": "https://api.github.com/repos/DmitryevichD/otus-java-2017-10-dm13y", "Date": "2017-12-16T18:53:57Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wisc.my.portlets.dmp.beans.MenuItem.getGroups()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == groupsAuthorizedToSeeRootMenuItem) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7480/buggy-version/src.main.java.edu.wisc.my.portlets.dmp.dao.filter.FilteringMenuDao.java", "BodyUseAPI": [], "Fixed commit": "a1ff1bf392ce6351bf4a3fd610a4b0e320b0a2a8", "Url": "https://api.github.com/repos/apetro/DynamicMenuPortlet", "Date": "2015-06-11T17:54:39Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == userGroups) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7480/buggy-version/src.main.java.edu.wisc.my.portlets.dmp.dao.filter.FilteringMenuDao.java", "BodyUseAPI": [], "Fixed commit": "a1ff1bf392ce6351bf4a3fd610a4b0e320b0a2a8", "Url": "https://api.github.com/repos/apetro/DynamicMenuPortlet", "Date": "2015-06-11T17:54:39Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.devplan.dao.UserDao.tousTaches(userSession.getEmail())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((taches.size()) > 0) { download(taches); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5805/buggy-version/src.com.devplan.servlets.DownloadTaches.java", "BodyUseAPI": ["com.devplan.servlets.DownloadTaches.download(java.util.ArrayList<com.devplan.models.Tache>)"], "Fixed commit": "af6345ff29f37de7ce87acfc99a0f757c7040ed3", "Url": "https://api.github.com/repos/mendy2607/Devplan-JEE", "Date": "2017-12-02T22:06:08Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(((mPkg) == (not.mPkg)) || (((mPkg) != null) && (mPkg.equals(not.mPkg))))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6676/buggy-version/src.com.github.grimpy.botifier.Botification.java", "BodyUseAPI": [], "Fixed commit": "3bedf81bf3d2c4d438439bcb4fe18976111d9e4c", "Url": "https://api.github.com/repos/grimpy/Botifier", "Date": "2013-09-10T19:37:52Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mId) != (not.mId)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6676/buggy-version/src.com.github.grimpy.botifier.Botification.java", "BodyUseAPI": [], "Fixed commit": "3bedf81bf3d2c4d438439bcb4fe18976111d9e4c", "Url": "https://api.github.com/repos/grimpy/Botifier", "Date": "2013-09-10T19:37:52Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getIntExtra(BluetoothAdapter.EXTRA_STATE,BluetoothAdapter.ERROR)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (btState == (android.bluetooth.BluetoothAdapter.STATE_ON)) onBluetoothEnabled(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6388/buggy-version/src.hk.edu.cuhk.ymll.vps.RfidSensorActivity.java", "BodyUseAPI": [], "Fixed commit": "7a6f5e6c777113d6e052d3cbe920ec7404fc2817", "Url": "https://api.github.com/repos/ymll/VPS", "Date": "2014-06-02T06:52:39Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mFragments.get(0)) != null) && ((mFragments.get(1)) != null)) { ((com.ericfabreu.wearflashcards.fragments.SetListFragment) (mFragments.get(0))).refresh(); ((com.ericfabreu.wearflashcards.fragments.FolderListFragment) (mFragments.get(1))).refresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/584/buggy-version/Mobile.src.main.java.com.ericfabreu.wearflashcards.activities.MainActivity.java", "BodyUseAPI": ["((com.ericfabreu.wearflashcards.fragments.FolderListFragment) (mFragments.get(1))).refresh()", "android.util.SparseArray<android.support.v4.app.Fragment>.get(int)", "android.util.SparseArray<android.support.v4.app.Fragment>.get(int)", "((com.ericfabreu.wearflashcards.fragments.SetListFragment) (mFragments.get(0))).refresh()"], "Fixed commit": "721e146fc9a88afc934e3b1ec1a788ebf0219283", "Url": "https://api.github.com/repos/ericfabreu/WearFlashcards", "Date": "2016-08-18T23:24:06Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entity.getId()) < 0) { java.util.List<java.lang.Readable> list = entityLists.get(entity.getClass()); if (list != null) list.add(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4438/buggy-version/src.bn.blaszczyk.roseapp.controller.HibernateController.java", "BodyUseAPI": ["bn.blaszczyk.rose.model.Writable.getClass()", "java.util.Map<java.lang.Class<?>, java.util.List<java.lang.Readable>>.get(entity.getClass())", "java.util.List<java.lang.Readable>.add(bn.blaszczyk.rose.model.Writable)"], "Fixed commit": "5ba4d07a88c5a00c90c865703a894cbf220e8641", "Url": "https://api.github.com/repos/blaszczyk/rose-app", "Date": "2017-01-16T21:27:08Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mUserScore) != null) { currentScoreValue = mUserScore.getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8663/buggy-version/src.fr.utc.lo23.sharutc.ui.SongDetailController.java", "BodyUseAPI": [], "Fixed commit": "c2ace2af188a92945c7d58546cb1100b6b83d79a", "Url": "https://api.github.com/repos/SharUTC/SharUTC", "Date": "2013-12-01T15:58:37Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mUserScore) != null) { currrentScoreValue = mMusic.getScore(mAppModel.getProfile().getUserInfo().getPeerId()).getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8663/buggy-version/src.fr.utc.lo23.sharutc.ui.SongDetailController.java", "BodyUseAPI": [], "Fixed commit": "c2ace2af188a92945c7d58546cb1100b6b83d79a", "Url": "https://api.github.com/repos/SharUTC/SharUTC", "Date": "2013-12-01T15:58:37Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (matched.isEmpty()) { if (qsPos == (-1)) { return new io.undertow.servlet.handlers.ServletPathMatch(handler, path, null); }else { return new io.undertow.servlet.handlers.ServletPathMatch(handler, path.substring(0, qsPos), null); } }else { return new io.undertow.servlet.handlers.ServletPathMatch(handler, matched, remaining); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4065/buggy-version/servlet.src.main.java.io.undertow.servlet.handlers.ServletPathMatches.java", "BodyUseAPI": [], "Fixed commit": "36eac1907e9e8f2d7b8a87972cdc4ac59da5d11b", "Url": "https://api.github.com/repos/stuartwdouglas/undertow", "Date": "2013-03-11T22:37:19Z"},
{"Line": "=>1063", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((appSettings.getJFrameDimensions().isEmpty()) == false) { this.setBounds(appSettings.getJFrameDimensions()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2550/buggy-version/src.main.java.org.lz1aq.aaacontroller.App.java", "BodyUseAPI": ["org.lz1aq.aaacontroller.App.setBounds(appSettings.getJFrameDimensions())", "org.lz1aq.aaacontroller.AppSettings.getJFrameDimensions()"], "Fixed commit": "d25092c5badcbdef960e6a54869442b550beb181", "Url": "https://api.github.com/repos/potty-dzmeia/AaaController", "Date": "2016-11-27T19:15:46Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mChapterSpinner) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5354/buggy-version/app.src.main.java.org.gdg.frisbee.android.onboarding.FirstStartStep1Fragment.java", "BodyUseAPI": [], "Fixed commit": "7e57ac114fa1c2ebd5351dcc186d009ebc310efd", "Url": "https://api.github.com/repos/gdg-x/frisbee", "Date": "2016-01-08T19:06:02Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((useMemory) && ((mMemoryCache) != null)) { mMemoryCache.resize(size); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/52/buggy-version/mvvm2.src.main.java.com.arialyy.frame.cache.AbsCache.java", "BodyUseAPI": [], "Fixed commit": "6f373606e3b27a1da42d27e5ee4ab13ffe67ece5", "Url": "https://api.github.com/repos/AriaLyy/MVVM", "Date": "2017-02-13T08:07:34Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (resultList != null) { results = new java.util.ArrayList<T>(resultList); }else { results = new java.util.ArrayList<T>(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5730/buggy-version/src.main.java.com.omertron.themoviedbapi.results.TmdbResultsList.java", "BodyUseAPI": [], "Fixed commit": "17815b9ffc701099b3441c55acc65e283d9e70e7", "Url": "https://api.github.com/repos/Omertron/api-themoviedb", "Date": "2013-05-20T09:36:01Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((site.getSiteStatus()) == (SiteStatus.FAILED)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6161/buggy-version/src.TransactionManager.java", "BodyUseAPI": [], "Fixed commit": "67b85112d692a05dde578799357e00cf7c3d80e7", "Url": "https://api.github.com/repos/Purnima01/Distributed-Database", "Date": "2015-12-06T21:39:20Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ch.status) != (javax.servlet.http.HttpServletResponse.SC_OK)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3422/buggy-version/bw-note-bwconnector.src.main.java.org.bedework.notifier.cnctrs.bedework.BedeworkConnectorInstance.java", "BodyUseAPI": [], "Fixed commit": "0c4aa10f30e7de7cd971ee02f4cdd0e8b2002d5e", "Url": "https://api.github.com/repos/Bedework/bw-notifier", "Date": "2015-10-21T19:14:50Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fieldValues.get(i)) != null) { columns.put(fields[i], fieldValues.get(i)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7477/buggy-version/src.kundera-redis.src.main.java.com.impetus.client.redis.RedisClient.java", "BodyUseAPI": ["java.util.Map<byte[], byte[]>.put(byte[],byte[])", "java.util.List<byte[]>.get(int)"], "Fixed commit": "5d0a65fb7908b345f8bc1ce3ba81db178994ca96", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2013-10-30T07:22:39Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (drawer != null) mDrawerGroup = ((com.michael.attackpoint.drawer.NavGroupUsers) (drawer.getGroup(NavGroupUsers.GROUP_NAME)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8671/buggy-version/app.src.main.java.com.michael.attackpoint.account.Login.java", "BodyUseAPI": [], "Fixed commit": "aa9ae60f950531ab546c1422cfa0627af2263412", "Url": "https://api.github.com/repos/miclaraia/attackpoint", "Date": "2016-02-19T18:15:13Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getActivity()) instanceof mobi.cangol.mobile.base.BaseNavigationFragmentActivity) { setMenuEnable(isCleanStack()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7293/buggy-version/uiframe.src.main.java.mobi.cangol.mobile.base.BaseContentFragment.java", "BodyUseAPI": [], "Fixed commit": "4e375bd5cb32c148ada9ca8cb8f6fc195943beb4", "Url": "https://api.github.com/repos/Cangol/Cangol-uiframe", "Date": "2017-01-20T10:40:37Z"},
{"Line": "=>535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.bfh.monopoly.common.Board.castTileToProperty(ch.bfh.monopoly.common.Tile)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (prop instanceof ch.bfh.monopoly.common.Terrain) { ch.bfh.monopoly.common.Terrain terrain = ((ch.bfh.monopoly.common.Terrain) (prop)); if (((terrain.getHotelCount()) != 0) || ((terrain.getHouseCount()) != 0)) throw new ch.bfh.monopoly.exception.TransactionException(rb.getString(\"inOrderToMortgage\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4061/buggy-version/monopoly.src.ch.bfh.monopoly.common.Board.java", "BodyUseAPI": [], "Fixed commit": "b66b003660fa08b996e729ef6ef70f879298e6e4", "Url": "https://api.github.com/repos/slackeater/monopoly", "Date": "2012-06-05T20:50:10Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getCompletionTarget()) != null) && ((getCompletionTarget().getScene()) != null)) { super.showPopup(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6386/buggy-version/libs.application-jpa.src.main.java.de.ks.selection.CustomAutoCompletionBinding.java", "BodyUseAPI": [], "Fixed commit": "988296192851c2b0d6be02b1e58a40508509fb3e", "Url": "https://api.github.com/repos/krampenschiesser/idnadrev", "Date": "2014-11-01T16:12:45Z"},
{"Line": "=>1765", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((availableHeight <= 0) || (availableWidth <= 0)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4117/buggy-version/weeklibrary.src.main.java.com.alamkanak.weekview.WeekView.java", "BodyUseAPI": [], "Fixed commit": "4a12886b05c9775881e0514e8206e1182e67c2d1", "Url": "https://api.github.com/repos/husongzhen/Android-Week-View", "Date": "2017-06-24T09:16:58Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((H2HManager.INSTANCE.getNode()) != null) && (H2HManager.INSTANCE.getNode().isConnected())) { goBack = org.controlsfx.dialog.Dialogs.create().title(\"Delete the network?\").message((\"If you go back, your peer will be shut down \" + \"and your network deleted. Continue?\")).showConfirm(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4244/buggy-version/peerbox.src.main.java.org.peerbox.presenter.CreateNetworkController.java", "BodyUseAPI": [], "Fixed commit": "cf5c73c7d4a8dc5d1c817d62b5ee82cb442aa903", "Url": "https://api.github.com/repos/Hive2Hive/PeerBox", "Date": "2014-07-18T09:30:55Z"},
{"Line": "=>959", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((mUpdateThetaList.size()) > 0) && (!(mIsGalleryMode))) || (((mUpdateAppList.size()) > 0) && (mIsGalleryMode))) { mStatusView.setVisibility(View.GONE); }else { mStatusView.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5243/buggy-version/dConnectDevicePlugin.dConnectDeviceTheta.app.src.main.java.org.deviceconnect.android.deviceplugin.theta.fragment.ThetaGalleryFragment.java", "BodyUseAPI": [], "Fixed commit": "d910b182dc88817415cc3b0065f2e0c659ef215a", "Url": "https://api.github.com/repos/TakayukiHoshi1984/DeviceConnect-Android", "Date": "2015-12-15T01:07:11Z"},
{"Line": "=>1304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!result) { actionBarLayout.presentFragment(fragment, false, forceWithoutAnimation, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2177/buggy-version/TMessagesProj.src.main.java.org.telegram.ui.LaunchActivity.java", "BodyUseAPI": [], "Fixed commit": "2fcef37b9ed73d1bee19eef8b06d73ddd7903274", "Url": "https://api.github.com/repos/DrKLO/Telegram", "Date": "2015-01-23T21:59:15Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getBackground()) != null) { getBackground().setAlpha(230); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2177/buggy-version/TMessagesProj.src.main.java.org.telegram.ui.Cells.StickerCell.java", "BodyUseAPI": [], "Fixed commit": "2fcef37b9ed73d1bee19eef8b06d73ddd7903274", "Url": "https://api.github.com/repos/DrKLO/Telegram", "Date": "2015-01-23T21:59:15Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((tableList.size()) == 1) { try { tableList.get(0).setNextTable(tableList.get(0)); } catch (java.rmi.RemoteException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5553/buggy-version/src.shared.MasterImpl.java", "BodyUseAPI": ["java.util.List<shared.Table>.get(int)", "tableList.get(0).setNextTable(tableList.get(0))", "java.util.List<shared.Table>.get(int)"], "Fixed commit": "2260d35d2d25b0b994436ed3cc1aa2aada866d84", "Url": "https://api.github.com/repos/Mirar1103/VerteilteSysteme", "Date": "2016-06-21T22:39:24Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9079/buggy-version/src.main.java.com.mridang.updates.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "548553ee620b2cb6c2020e5beff122b75cf2355a", "Url": "https://api.github.com/repos/mridang/dashclock-updates", "Date": "2015-03-29T09:12:27Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.griefcraft.lwc.LWC.findProtection(org.bukkit.block.Block)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((current != null) && ((current.getProtectionFinder()) != null)) { current.getProtectionFinder().fullMatchBlocks(); lwc.getProtectionCache().add(current); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9108/buggy-version/src.main.java.com.griefcraft.listeners.LWCBlockListener.java", "BodyUseAPI": ["com.griefcraft.model.Protection.getProtectionFinder()", "current.getProtectionFinder().fullMatchBlocks()", "lwc.getProtectionCache().add(com.griefcraft.model.Protection)"], "Fixed commit": "865a93e7bda06e2e54b5ddf7f855f24616148ff4", "Url": "https://api.github.com/repos/Hidendra/LWC", "Date": "2012-04-02T00:03:18Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(serverConnectionWorker.isAlive())) serverConnectionWorker.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3903/buggy-version/src.ass.server.multirequest.ThreadPool.java", "BodyUseAPI": ["ass.server.ServerConnectionProcessing.start()"], "Fixed commit": "c9361aed6eb57219547dd93afbe957dde5b0cb5b", "Url": "https://api.github.com/repos/wojtaw/ASS-Semestralka", "Date": "2012-04-02T20:33:10Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kepler.header.Headers.get(Trace.TRACE,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (trace != null) { org.apache.log4j.MDC.put(Trace.TRACE, trace); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8567/buggy-version/kepler-trace.src.main.java.com.kepler.trace.Log4jProcessor.java", "BodyUseAPI": ["org.apache.log4j.MDC.put(Trace.TRACE,java.lang.String)"], "Fixed commit": "7b773d0d164d70bc16c3757b71413eb5bcdd61b7", "Url": "https://api.github.com/repos/Kepler-Framework/Kepler-Trace", "Date": "2016-06-30T10:41:14Z"},
{"Line": "=>982", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["b.instructions.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ssaInst.id) == 58) { java.lang.System.err.println(\"asd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6466/buggy-version/project.src.com.uci.cs241.pl241.backend.DLXGenerator.java", "BodyUseAPI": [], "Fixed commit": "13c75de8bdd9048389b81ce5c6d0d93eda9683e1", "Url": "https://api.github.com/repos/chris-wood/PL241-Compiler", "Date": "2014-03-15T01:03:41Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bInst.opcode) == (com.uci.cs241.pl241.ir.PLIRInstruction.InstructionType.BEQ)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6466/buggy-version/project.src.com.uci.cs241.pl241.ir.PLIRBasicBlock.java", "BodyUseAPI": [], "Fixed commit": "13c75de8bdd9048389b81ce5c6d0d93eda9683e1", "Url": "https://api.github.com/repos/chris-wood/PL241-Compiler", "Date": "2014-03-15T01:03:41Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (loc > (com.uci.cs241.pl241.ir.PLStaticSingleAssignment.instructions.size())) { loc = com.uci.cs241.pl241.ir.PLStaticSingleAssignment.instructions.size(); com.uci.cs241.pl241.ir.PLStaticSingleAssignment.instructions.add(inst); }else { com.uci.cs241.pl241.ir.PLStaticSingleAssignment.instructions.add(loc, inst); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6466/buggy-version/project.src.com.uci.cs241.pl241.ir.PLStaticSingleAssignment.java", "BodyUseAPI": ["java.util.ArrayList<com.uci.cs241.pl241.ir.PLIRInstruction>.add(com.uci.cs241.pl241.ir.PLIRInstruction)", "java.util.ArrayList<com.uci.cs241.pl241.ir.PLIRInstruction>.size()", "java.util.ArrayList<com.uci.cs241.pl241.ir.PLIRInstruction>.add(int,com.uci.cs241.pl241.ir.PLIRInstruction)"], "Fixed commit": "13c75de8bdd9048389b81ce5c6d0d93eda9683e1", "Url": "https://api.github.com/repos/chris-wood/PL241-Compiler", "Date": "2014-03-15T01:03:41Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (oindex > 0) { int left = sql.indexOf(\"(\", oindex); int right = sql.indexOf(\")\", oindex); if ((right < 0) || ((left > 0) && (left < right))) { countSql = countSql.substring(0, oindex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6843/buggy-version/src.ipageplugin.src.main.java.com.impler.ipage.plugin.MybatisPagePlugin.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String,int)", "java.lang.String.indexOf(java.lang.String,int)"], "Fixed commit": "1ffc0abffba02693d6bd9c629ce6c21f15a32f58", "Url": "https://api.github.com/repos/wxdong5211/ipageplugin", "Date": "2012-11-28T06:43:12Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 2) { sender.sendMessage(((org.bukkit.ChatColor.RED) + \"You need to supply a radius as well as the disguise\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8698/buggy-version/src.me.libraryaddict.disguise.commands.RadiusDisguiseCommand.java", "BodyUseAPI": [], "Fixed commit": "bad4f555cfbf3d2bd8f90ad78baebd45a24c1dbf", "Url": "https://api.github.com/repos/libraryaddict/LibsDisguises", "Date": "2016-09-10T12:05:25Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array.length) == 0) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5280/buggy-version/src.ch.usi.inf.splab.smartlist.SmartList.java", "BodyUseAPI": [], "Fixed commit": "f667247230181614cd67e29e8070414bfc309605", "Url": "https://api.github.com/repos/EricBotter/SmartList", "Date": "2016-10-26T15:31:03Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(user.getRole().equals(User.NORMAL_USER_ROLE))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6177/buggy-version/DailyCookApp.src.main.java.com.vn.dailycookapp.cache.user.UserCache.java", "BodyUseAPI": [], "Fixed commit": "9e13233de0095e64db620697e5a8784dfc29d1a8", "Url": "https://api.github.com/repos/duyetpt/dailycook_restructe", "Date": "2015-12-03T16:44:51Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((submitParameter != null) && (submitParameter.equals(\"Submit\"))) { if (!(error)) { java.lang.System.out.println(\"submitted\"); target = \"/Result.jspx\"; } }else { java.lang.System.out.println(\"first time\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5781/buggy-version/src.ctrl.Start.java", "BodyUseAPI": [], "Fixed commit": "cff221cd495e2cad870413a573e02b79cb3a83d9", "Url": "https://api.github.com/repos/zinamaki/StudentCalc3", "Date": "2017-02-11T21:47:58Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)", "java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((org.apache.usergrid.utils.StringUtils.isEmpty(username)) || (org.apache.usergrid.utils.StringUtils.isEmpty(password))) { transport.connect(host, null, null); }else { transport.connect(host, username, password); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7439/buggy-version/stack.core.src.main.java.org.apache.usergrid.utils.MailUtils.java", "BodyUseAPI": ["javax.mail.Transport.connect(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "cdc417d98deecc2e28229cec519a7b5a8d8794f2", "Url": "https://api.github.com/repos/apache/usergrid", "Date": "2016-11-05T20:01:41Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.hasPermission((type + \"vote.cmd\")))) { msg(player, Language.ERROR_NOPERMISSION.toString()); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8801/buggy-version/src.net.slipcor.banvote.BanVotePlugin.java", "BodyUseAPI": ["net.slipcor.banvote.BanVotePlugin.msg(org.bukkit.entity.Player,Language.ERROR_NOPERMISSION.toString())"], "Fixed commit": "0d0d89aeceb1ceb5429ce2dfcba68e1f238897f9", "Url": "https://api.github.com/repos/slipcor/BanVote", "Date": "2013-02-13T20:08:48Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(ndDays.getText())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(ndDaysText)) { ndDaysText = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1849/buggy-version/app.src.main.java.com.drarchita.datecalculator.activities.NextDateActivity.java", "BodyUseAPI": [], "Fixed commit": "d3fccb0738b0fc5c81cdbafcd6afe33b5f0a6ddb", "Url": "https://api.github.com/repos/shagunakarsh/DrArchita", "Date": "2017-11-06T19:53:08Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isBlank(ndWeeks.getText())) { ndWeeksText = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1849/buggy-version/app.src.main.java.com.drarchita.datecalculator.activities.NextDateActivity.java", "BodyUseAPI": [], "Fixed commit": "d3fccb0738b0fc5c81cdbafcd6afe33b5f0a6ddb", "Url": "https://api.github.com/repos/shagunakarsh/DrArchita", "Date": "2017-11-06T19:53:08Z"},
{"Line": "=>3530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cardsToDraw > 0) && (currentPlayer.getMinusOneCardToken())) { game.drawToHand(context, this, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/465/buggy-version/vdom.src.com.vdom.core.ActionCardImpl.java", "BodyUseAPI": [], "Fixed commit": "3cbf37dff4ebb4456fa885ee0a15603f4cd710b4", "Url": "https://api.github.com/repos/dominionator/androminion", "Date": "2016-02-09T04:32:00Z"},
{"Line": "=>2032", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cardsToDraw > 0) && (currentPlayer.getMinusOneCardToken())) { game.drawToHand(context, this, (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/465/buggy-version/vdom.src.com.vdom.core.ActionCardImpl.java", "BodyUseAPI": [], "Fixed commit": "3cbf37dff4ebb4456fa885ee0a15603f4cd710b4", "Url": "https://api.github.com/repos/dominionator/androminion", "Date": "2016-02-09T04:32:00Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location instanceof uk.ac.ebi.interpro.scan.io.match.writer.HmmerLocation) { score = java.lang.Double.toString(((uk.ac.ebi.interpro.scan.io.match.writer.HmmerLocation) (location)).getEvalue()); }else if (location instanceof uk.ac.ebi.interpro.scan.io.match.writer.HmmerLocationWithSites) { score = java.lang.Double.toString(((uk.ac.ebi.interpro.scan.io.match.writer.HmmerLocationWithSites) (location)).getEvalue()); }else if (location instanceof uk.ac.ebi.interpro.scan.io.match.writer.BlastProDomMatch.BlastProDomLocation) { score = java.lang.Double.toString(((uk.ac.ebi.interpro.scan.io.match.writer.BlastProDomMatch.BlastProDomLocation) (location)).getEvalue()); }else if (location instanceof uk.ac.ebi.interpro.scan.io.match.writer.ProfileScanMatch.ProfileScanLocation) { score = java.lang.Double.toString(((uk.ac.ebi.interpro.scan.io.match.writer.ProfileScanMatch.ProfileScanLocation) (location)).getScore()); }else if (location instanceof uk.ac.ebi.interpro.scan.io.match.writer.RPSBlastMatch.RPSBlastLocation) { score = java.lang.Double.toString(((uk.ac.ebi.interpro.scan.io.match.writer.RPSBlastMatch.RPSBlastLocation) (location)).getEvalue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/272/buggy-version/core.io.src.main.java.uk.ac.ebi.interpro.scan.io.match.writer.ProteinMatchesTSVResultWriter.java", "BodyUseAPI": [], "Fixed commit": "d03f89bfdfc97306688c9e376e8b6f53bb3bbfce", "Url": "https://api.github.com/repos/ebi-pf-team/interproscan", "Date": "2016-11-01T16:33:22Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location instanceof uk.ac.ebi.interpro.scan.io.match.writer.HmmerLocation) { score = java.lang.Double.toString(((uk.ac.ebi.interpro.scan.io.match.writer.HmmerLocation) (location)).getEvalue()); }else if (location instanceof uk.ac.ebi.interpro.scan.io.match.writer.HmmerLocationWithSites) { score = java.lang.Double.toString(((uk.ac.ebi.interpro.scan.io.match.writer.HmmerLocationWithSites) (location)).getEvalue()); }else if (location instanceof uk.ac.ebi.interpro.scan.io.match.writer.BlastProDomMatch.BlastProDomLocation) { score = java.lang.Double.toString(((uk.ac.ebi.interpro.scan.io.match.writer.BlastProDomMatch.BlastProDomLocation) (location)).getEvalue()); }else if (location instanceof uk.ac.ebi.interpro.scan.io.match.writer.ProfileScanMatch.ProfileScanLocation) { score = java.lang.Double.toString(((uk.ac.ebi.interpro.scan.io.match.writer.ProfileScanMatch.ProfileScanLocation) (location)).getScore()); }else if (location instanceof uk.ac.ebi.interpro.scan.io.match.writer.RPSBlastMatch.RPSBlastLocation) { score = java.lang.Double.toString(((uk.ac.ebi.interpro.scan.io.match.writer.RPSBlastMatch.RPSBlastLocation) (location)).getEvalue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/272/buggy-version/core.io.src.main.java.uk.ac.ebi.interpro.scan.io.match.writer.ProteinMatchesGFFResultWriter.java", "BodyUseAPI": [], "Fixed commit": "d03f89bfdfc97306688c9e376e8b6f53bb3bbfce", "Url": "https://api.github.com/repos/ebi-pf-team/interproscan", "Date": "2016-11-01T16:33:22Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (location instanceof uk.ac.ebi.interpro.scan.io.match.writer.HmmerLocation) { score = java.lang.Double.toString(((uk.ac.ebi.interpro.scan.io.match.writer.HmmerLocation) (location)).getEvalue()); }else if (location instanceof uk.ac.ebi.interpro.scan.io.match.writer.HmmerLocationWithSites) { score = java.lang.Double.toString(((uk.ac.ebi.interpro.scan.io.match.writer.HmmerLocationWithSites) (location)).getEvalue()); }else if (location instanceof uk.ac.ebi.interpro.scan.io.match.writer.BlastProDomMatch.BlastProDomLocation) { score = java.lang.Double.toString(((uk.ac.ebi.interpro.scan.io.match.writer.BlastProDomMatch.BlastProDomLocation) (location)).getEvalue()); }else if (location instanceof uk.ac.ebi.interpro.scan.io.match.writer.ProfileScanMatch.ProfileScanLocation) { score = java.lang.Double.toString(((uk.ac.ebi.interpro.scan.io.match.writer.ProfileScanMatch.ProfileScanLocation) (location)).getScore()); }else if (location instanceof uk.ac.ebi.interpro.scan.io.match.writer.RPSBlastMatch.RPSBlastLocation) { score = java.lang.Double.toString(((uk.ac.ebi.interpro.scan.io.match.writer.RPSBlastMatch.RPSBlastLocation) (location)).getEvalue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/272/buggy-version/core.io.src.main.java.uk.ac.ebi.interpro.scan.io.match.writer.ProteinMatchesTSVProResultWriter.java", "BodyUseAPI": [], "Fixed commit": "d03f89bfdfc97306688c9e376e8b6f53bb3bbfce", "Url": "https://api.github.com/repos/ebi-pf-team/interproscan", "Date": "2016-11-01T16:33:22Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.netty.channel.MessageEvent.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (message.hasSessionId()) { session = com.orange.game.traffic.server.GameEventExecutor.getInstance().getSessionManager().findSessionById(((int) (message.getSessionId()))); if (((session != null) && ((session.getStatus()) != (GameSession.SessionStatus.PLAYING.ordinal()))) && ((session.getStatus()) != (GameSession.SessionStatus.ACTUAL_PLAYING.ordinal()))) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5368/buggy-version/src.com.orange.game.zjh.server.ZjhGameServerHandler.java", "BodyUseAPI": ["com.orange.network.game.protocol.message.GameMessageProtos.GameMessage.getSessionId()", "com.orange.game.traffic.server.GameEventExecutor.getInstance().getSessionManager().findSessionById(((int) (message.getSessionId())))"], "Fixed commit": "03582cba33549d362627f1b333620ff166abec5e", "Url": "https://api.github.com/repos/gckjdev/ZJHTrafficServer", "Date": "2012-11-20T07:38:19Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jw.jzbot.fact.functions.conditional.IfFunction.findValueOrNull(arguments.resolveString(0))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (result != null) { if (result.equals(java.lang.Boolean.TRUE)) sink.write(\"true\"); else if (result.equals(java.lang.Boolean.FALSE)) sink.write(\"false\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2733/buggy-version/src.jw.jzbot.fact.functions.json._JsonDotBFunction.java", "BodyUseAPI": ["java.lang.Boolean.equals(java.lang.Boolean)", "java.lang.Boolean.equals(java.lang.Boolean)"], "Fixed commit": "04cd533d3df45269977f97589efab927f3dcba83", "Url": "https://api.github.com/repos/javawizard/jzbot", "Date": "2015-01-18T13:02:28Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (contacts.isEmpty()) { mView.showNoContent(); }else { mView.showContacts(contacts); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5458/buggy-version/app.src.main.java.nz.co.roobics.contacts.contacts.ContactsPresenter.java", "BodyUseAPI": ["ContactsContract.View.showContacts(java.util.List<nz.co.roobics.contacts.models.Contact>)"], "Fixed commit": "f64c8ce3d5b690541e2db294cb10d02ae91c47b9", "Url": "https://api.github.com/repos/naderz/Contacts", "Date": "2016-09-10T11:26:45Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.mdb.wingit.wingit.modelClasses.Pin>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (pin.getRating().equals(\"\")) { ratingBar.setVisibility(View.GONE); }else { ratingBar.setEnabled(false); float rating = java.lang.Float.parseFloat(pin.getRating()); ratingBar.setRating(rating); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/185/buggy-version/app.src.main.java.com.mdb.wingit.wingit.activities.CarouselAdapter.java", "BodyUseAPI": ["com.mdb.wingit.wingit.modelClasses.Pin.getRating()", "java.lang.Float.parseFloat(pin.getRating())"], "Fixed commit": "84383f41fd8440a578799ee9b36a420c78f73c45", "Url": "https://api.github.com/repos/MobileDevelopersOfBerkeley/WingIt", "Date": "2017-04-19T05:20:22Z"},
{"Line": "=>1010", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((m1.matches()) && (applName.equalsIgnoreCase(\"SFLD\"))) { uk.ac.ebi.interpro.scan.jms.main.Run.addApplVersionToUserMap(userAnalysesMap, inputErrorMessages, SignatureLibrary.SFLD.getName(), applVersion); }else { inputErrorMessages.add((parsedAnalysis + \" not a valid input.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/68/buggy-version/core.jms-implementation.src.main.java.uk.ac.ebi.interpro.scan.jms.main.Run.java", "BodyUseAPI": [], "Fixed commit": "ef51a67cb073790c33f4b18d1392985b5c16b766", "Url": "https://api.github.com/repos/ebi-pf-team/interproscan", "Date": "2016-09-21T12:03:09Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (query.matches(\"^\\\\p{ASCII}*$\")) { filteredNowShowingList = filterNowShowing(nowShowingMovieList, query); searchTask = new org.example.team_pigeon.movie_pigeon.RecommendationFragment.Task(); searchTask.execute(\"search\", query); }else { android.widget.Toast.makeText(getActivity(), \"Please use English alphabets to search.\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/705/buggy-version/frontend.Movie_Pigeon.app.src.main.java.org.example.team_pigeon.movie_pigeon.RecommendationFragment.java", "BodyUseAPI": ["org.example.team_pigeon.movie_pigeon.RecommendationFragment.Task.execute(java.lang.String,java.lang.String)", "org.example.team_pigeon.movie_pigeon.RecommendationFragment.1.filterNowShowing(java.util.ArrayList<org.example.team_pigeon.movie_pigeon.models.Movie>,java.lang.String)"], "Fixed commit": "199a74a20fb7fdded684356cc0731692959e1f32", "Url": "https://api.github.com/repos/nus-mtp/movie-pigeon-android", "Date": "2017-03-22T05:17:24Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sejda.impl.sambox.component.PDFTextRedactingStreamEngine.findNameOf(org.sejda.sambox.pdmodel.PDResources,org.sejda.sambox.pdmodel.graphics.form.PDFormXObject)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (existingFormName == null) { resources = getCurrentPage().getResources(); existingFormName = findNameOf(resources, form); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/857/buggy-version/sejda-sambox.src.main.java.org.sejda.impl.sambox.component.PDFTextRedactingStreamEngine.java", "BodyUseAPI": [], "Fixed commit": "ac8f1fabdf5bd8ca6a027e7a2bd856ac4b964936", "Url": "https://api.github.com/repos/torakiki/sejda", "Date": "2016-09-28T08:40:09Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rankMask1 & flag) != 0) rankMask2 |= flag; else rankMask1 |= flag;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5091/buggy-version/gridpoker.core.src.main.java.gridpoker.core.Rules.java", "BodyUseAPI": [], "Fixed commit": "eb618f12ee63936909166e81e6a863be10aacdb5", "Url": "https://api.github.com/repos/samskivert/mashups", "Date": "2013-05-28T00:05:48Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pennapps2014f.posch.MainActivity.storage.getBoolean(\"challengeFinished\", false)) { pennapps2014f.posch.MainActivity.progressFragment.setDateIncomplete(cal.getTime()); }else { pennapps2014f.posch.MainActivity.progressFragment.setDateComplete(cal.getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1452/buggy-version/app.src.main.java.pennapps2014f.posch.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "90d8960155d2ee95db120b1612b253d5e431a7df", "Url": "https://api.github.com/repos/churichard/Posch", "Date": "2014-09-14T12:54:28Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((android.text.TextUtils.isEmpty(mEntity.getStr())) || (!(mEntity.getStr().equals(str)))) { mEntity.setStr(str); mEntity.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5843/buggy-version/Aria.src.main.java.com.arialyy.aria.core.inf.AbsTarget.java", "BodyUseAPI": ["ENTITY.setStr(java.lang.String)", "ENTITY.save()"], "Fixed commit": "f4e2202033414598ef6609fe61a9d097a26b598e", "Url": "https://api.github.com/repos/AriaLyy/Aria", "Date": "2017-07-31T02:52:01Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(str)) return ((TARGET) (this));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5843/buggy-version/Aria.src.main.java.com.arialyy.aria.core.inf.AbsTarget.java", "BodyUseAPI": [], "Fixed commit": "f4e2202033414598ef6609fe61a9d097a26b598e", "Url": "https://api.github.com/repos/AriaLyy/Aria", "Date": "2017-07-31T02:52:01Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bizfit.bizfit.DailyProgress.prepForDataBase()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((l.get(j).id) != (-1)) { values.put(\"id\", l.get(j).id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3652/buggy-version/app.src.main.java.com.bizfit.bizfit.DBHelper.java", "BodyUseAPI": ["android.content.ContentValues.put(java.lang.String,l.get(j).id)", "java.util.List<DailyProgress.DaySingle>.get(int)"], "Fixed commit": "8ab534d968b9335c638e0be49312690acdb6e8f4", "Url": "https://api.github.com/repos/nyyppa/BizFit", "Date": "2016-04-20T16:33:12Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.ClassLoader.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (resource == null) { throw new org.jboss.errai.codegen.exception.GenerationException((((\"Failed to load bundle \" + bundlePath) + \" defined on class \") + (bundleClass.getFullyQualifiedName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3357/buggy-version/errai-ui.src.main.java.org.jboss.errai.ui.rebind.TranslationServiceGenerator.java", "BodyUseAPI": [], "Fixed commit": "883117ce16dafd2675f14ba5d404d8dfe4a4902e", "Url": "https://api.github.com/repos/errai/errai", "Date": "2014-07-31T17:36:14Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value != null) { setText(((com.github.peholmst.fenix.planner.model.Organizer) (value)).getFullName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/321/buggy-version/src.main.java.com.github.peholmst.fenix.planner.ui.components.OrganizerComboBox.java", "BodyUseAPI": [], "Fixed commit": "7b963838536177d8d67a868c526f4699f3398176", "Url": "https://api.github.com/repos/peholmst/FenixPlanner", "Date": "2013-11-04T11:14:34Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (networkIsAvailable()) { android.content.Intent intent = new android.content.Intent(this, ua.mirskidev.rainy.ui.HourlyForecastActivity.class); intent.putExtra(ua.mirskidev.rainy.ui.MainActivity.HOURLY_FORECAST, mForecast.getHourlyForecast()); startActivity(intent); }else { android.widget.Toast.makeText(this, R.string.network_unavailable_message, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8732/buggy-version/app.src.main.java.ua.mirskidev.rainy.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "acd8fb40433e09f89b8e00a07ba80be07416700c", "Url": "https://api.github.com/repos/ymirski/Rainy", "Date": "2015-12-18T12:35:27Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (networkIsAvailable()) { android.content.Intent intent = new android.content.Intent(this, ua.mirskidev.rainy.ui.DailyForecastActivity.class); intent.putExtra(ua.mirskidev.rainy.ui.MainActivity.DAILY_FORECAST, mForecast.getDailyForecast()); startActivity(intent); }else { android.widget.Toast.makeText(this, R.string.network_unavailable_message, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8732/buggy-version/app.src.main.java.ua.mirskidev.rainy.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "acd8fb40433e09f89b8e00a07ba80be07416700c", "Url": "https://api.github.com/repos/ymirski/Rainy", "Date": "2015-12-18T12:35:27Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (simulate) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8441/buggy-version/tools.ecloud-cleaner.src.main.java.eu.europeana.cloud.cleaner.ECloudCleaner.java", "BodyUseAPI": [], "Fixed commit": "5e52e18c63d0711ebccbe44512acb2312b3d49b1", "Url": "https://api.github.com/repos/europeana/Europeana-Cloud", "Date": "2017-08-31T06:59:08Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (simulate) { representations = new java.util.ArrayList<eu.europeana.cloud.common.model.Representation>(); }else { representations = mcs.getRepresentations(cloudId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8441/buggy-version/tools.ecloud-cleaner.src.main.java.eu.europeana.cloud.cleaner.ECloudCleaner.java", "BodyUseAPI": [], "Fixed commit": "5e52e18c63d0711ebccbe44512acb2312b3d49b1", "Url": "https://api.github.com/repos/europeana/Europeana-Cloud", "Date": "2017-08-31T06:59:08Z"},
{"Line": "=>857", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.HeaderFooterDB.getHeaderFooter(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((headerfooter != null) && (headerfooter.hasPicture())) { return ok(controllers.HeaderFooterDB.getHeaderFooter(1).getHeaderImage()).as(\"image/jpeg\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8035/buggy-version/app.controllers.Application.java", "BodyUseAPI": [], "Fixed commit": "32deb4f08b537718c640bf9732bc2fa60d3360ff", "Url": "https://api.github.com/repos/OpenRainGarden/OpenRainGarden", "Date": "2014-04-23T05:41:12Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ability.getId().equals(test.getId())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3232/buggy-version/Mage.src.mage.abilities.AbilitiesImpl.java", "BodyUseAPI": [], "Fixed commit": "391c3db02e616be549ee96ed66921c2ed41874c1", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-02-20T23:15:11Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ability.getOriginalId().equals(test.getId())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3232/buggy-version/Mage.src.mage.abilities.AbilitiesImpl.java", "BodyUseAPI": [], "Fixed commit": "391c3db02e616be549ee96ed66921c2ed41874c1", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2013-02-20T23:15:11Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.postingsMap.containsKey(term)) { postingList.addAll(this.postingsMap.get(term)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/24/buggy-version/src.BiWordIndex.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.util.Set<java.lang.String>>.get(java.lang.String)", "java.util.List<java.lang.String>.addAll(java.util.Set<java.lang.String>)"], "Fixed commit": "4758221812f1c2ec61d0f2af3b216e36bb6b94d5", "Url": "https://api.github.com/repos/nishanthsiva/inforetrieval", "Date": "2016-04-29T00:39:41Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((config.getOutputFileExtension().equals(\"so\")) && (java.lang.System.getProperty(\"os.name\").toLowerCase(java.util.Locale.US).replace(' ', '-').startsWith(\"mac-\"))) { config.setOutputFileExtension(\"jnilib\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3067/buggy-version/native-maven-plugin.src.main.java.org.codehaus.mojo.natives.plugin.NativeLinkMojo.java", "BodyUseAPI": ["org.codehaus.mojo.natives.linker.LinkerConfiguration.setOutputFileExtension(java.lang.String)"], "Fixed commit": "f520d77086a2ea54db3eccb0ab6f6777c5401d3e", "Url": "https://api.github.com/repos/campino/maven-native", "Date": "2013-03-04T13:36:32Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new java.io.File(filename).exists()) { java.util.Set<java.nio.file.attribute.PosixFilePermission> perms = new java.util.HashSet<java.nio.file.attribute.PosixFilePermission>(); perms.add(java.nio.file.attribute.PosixFilePermission.OWNER_READ); perms.add(java.nio.file.attribute.PosixFilePermission.OWNER_WRITE); java.nio.file.Files.setPosixFilePermissions(java.nio.file.Paths.get(filename), perms); }else { if (com.vmware.bdd.utils.CommonUtil.logger.isDebugEnabled()) { com.vmware.bdd.utils.CommonUtil.logger.debug((\"file not exists: \" + filename)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3642/buggy-version/common.src.main.java.com.vmware.bdd.utils.CommonUtil.java", "BodyUseAPI": ["java.nio.file.Files.setPosixFilePermissions(java.nio.file.Path,java.util.Set<java.nio.file.attribute.PosixFilePermission>)", "org.apache.log4j.Logger.debug(java.lang.String)", "java.nio.file.Paths.get(java.lang.String)"], "Fixed commit": "f3c4512478fd11510860617a5ce57609cb9ed788", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2015-09-23T02:59:58Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(stack.empty())) { stack.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7357/buggy-version/src.Parentheses.java", "BodyUseAPI": ["java.util.Stack<java.lang.Character>.pop()"], "Fixed commit": "8b7a503fb42ccb1bebb8599850d8629533ce7ed3", "Url": "https://api.github.com/repos/Sonampasi/data-structures", "Date": "2017-02-02T08:24:47Z"},
{"Line": "=>395", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dr.app.realtime.CheckPointTreeModifier.checkCurrentTreeNodes(dr.evolution.tree.NodeRef,treeModel.getRoot())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (offset == 0.0) { treeModel.setNodeHeight(newTaxon, 0.0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3786/buggy-version/src.dr.app.realtime.CheckPointTreeModifier.java", "BodyUseAPI": [], "Fixed commit": "4fd434c5ee7a91f77933a185e5dbd82285a04db4", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2017-04-18T17:39:41Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((world) == null) world = this.getServer().getWorlds().get(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7281/buggy-version/src.com.github.sashman.MC_tehboyz_survival.MC_tehboyz_survival.java", "BodyUseAPI": [], "Fixed commit": "104278f404996ef4da52bfc1a76073b4647e017a", "Url": "https://api.github.com/repos/sashman/MC_tehboyz_survival", "Date": "2012-05-20T23:14:46Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (characterString.equals(GncXmlHelper.KEY_NOTES)) { mIsNote = true; }else if (characterString.equals(GncXmlHelper.KEY_DEFAULT_TRANSFER_ACCOUNT)) { mInDefaultTransferAccount = true; }else if (characterString.equals(GncXmlHelper.KEY_EXPORTED)) { mInExported = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1213/buggy-version/app.src.org.gnucash.android.importer.GncXmlHandler.java", "BodyUseAPI": ["java.lang.String.equals(GncXmlHelper.KEY_DEFAULT_TRANSFER_ACCOUNT)", "java.lang.String.equals(GncXmlHelper.KEY_EXPORTED)"], "Fixed commit": "8166c303db555ea13c87a8a3b3d255d9ad663d8c", "Url": "https://api.github.com/repos/fefe982/gnucash-android", "Date": "2014-09-06T02:57:48Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.geniem.rnble.ScanRecord.getManufacturerSpecificData()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (manufacturerData != null) { advertisement.putString(\"manufacturerData\", java.util.Arrays.toString(manufacturerData)); }else { advertisement.putNull(\"manufacturerData\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8142/buggy-version/android.src.main.java.com.geniem.rnble.RNBLEModule.java", "BodyUseAPI": ["java.util.Arrays.toString(byte[])", "com.facebook.react.bridge.WritableMap.putString(java.lang.String,java.lang.String)"], "Fixed commit": "dd7961763fefab4e1d6ca881a98225275783d785", "Url": "https://api.github.com/repos/jacobrosenthal/react-native-ble", "Date": "2016-05-08T21:34:32Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (anyAreSet(channelState, ((org.jboss.remoting3.remote.RemoteConnectionHandler.RECEIVED_CLOSE_REQ) | (org.jboss.remoting3.remote.RemoteConnectionHandler.SENT_CLOSE_REQ)))) { pendingChannels.remove(pendingChannel); result.setCancelled(); return org.xnio.IoUtils.nullCancellable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9219/buggy-version/src.main.java.org.jboss.remoting3.remote.RemoteConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "09ccf4c99ce69d3ff55b7bb3c2f5bba10fcbe96a", "Url": "https://api.github.com/repos/jboss-remoting/jboss-remoting", "Date": "2016-01-28T18:13:55Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (executeMiddlewares(context, map)) { handler.handle(context, map); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6688/buggy-version/src.main.java.fr.litarvan.krobot.command.Command.java", "BodyUseAPI": ["fr.litarvan.krobot.command.CommandHandler.handle(fr.litarvan.krobot.command.CommandContext,java.util.Map<java.lang.String, fr.litarvan.krobot.command.SuppliedArgument>)"], "Fixed commit": "bc9ad2367376506f4f946dd28b22e5d014996be7", "Url": "https://api.github.com/repos/krobot-framework/krobot", "Date": "2017-04-11T01:54:18Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (err == null) { if ((handler.providedProcedures) != null) { proc = handler.providedProcedures.get(unreg.registrationId); } if (proc == null) { err = ApplicationError.NO_SUCH_REGISTRATION; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/387/buggy-version/src.main.java.ws.wamp.jawampa.WampRouter.java", "BodyUseAPI": [], "Fixed commit": "7ee75725b1c03c33121c02899a4ee796547a5963", "Url": "https://api.github.com/repos/Matthias247/jawampa", "Date": "2014-11-18T09:36:31Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handler.pendingInvocations) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/387/buggy-version/src.main.java.ws.wamp.jawampa.WampRouter.java", "BodyUseAPI": [], "Fixed commit": "7ee75725b1c03c33121c02899a4ee796547a5963", "Url": "https://api.github.com/repos/Matthias247/jawampa", "Date": "2014-11-18T09:36:31Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handler.pendingInvocations) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/387/buggy-version/src.main.java.ws.wamp.jawampa.WampRouter.java", "BodyUseAPI": [], "Fixed commit": "7ee75725b1c03c33121c02899a4ee796547a5963", "Url": "https://api.github.com/repos/Matthias247/jawampa", "Date": "2014-11-18T09:36:31Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) != null) { mAdapter.registerDataSetObserver(mDataSetObserver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/742/buggy-version/src.com.yiqivr.tinderswipe.widget.SwipeFlingAdapterView.java", "BodyUseAPI": [], "Fixed commit": "8ffd2ef5a1d0179312f3e0328108cd33c2bd816f", "Url": "https://api.github.com/repos/lvning/TinderSwipe", "Date": "2014-09-26T06:50:24Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (arg2 == null) throw new org.araqne.logdb.QueryParseException(\"90772\", (-1), (-1), null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9223/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.query.expr.Split.java", "BodyUseAPI": [], "Fixed commit": "4cfd847cf813f9dbb30789cf801b8ba326dc3358", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-12-17T02:41:48Z"},
{"Line": "=>721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resource.equals(com.codename1.ui.util.Resources.systemResourceLocation)) { return r; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/895/buggy-version/CodenameOne.src.com.codename1.ui.util.Resources.java", "BodyUseAPI": [], "Fixed commit": "cb2e8d84f42e646cd1c26869fdd682c14b3e8480", "Url": "https://api.github.com/repos/skyHALud/codenameone", "Date": "2014-01-12T11:18:06Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nz.co.lolnet.james137137.FactionChat.FactionChatAPI.prefixAndSuffix) == null) { nz.co.lolnet.james137137.FactionChat.FactionChatAPI.IncludePrefix = false; nz.co.lolnet.james137137.FactionChat.FactionChatAPI.IncludeSuffix = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2865/buggy-version/src.main.java.nz.co.lolnet.james137137.FactionChat.FactionChatAPI.java", "BodyUseAPI": [], "Fixed commit": "f40d8df7e55e9a4dc86a35b1b1d9f63208d44b29", "Url": "https://api.github.com/repos/James137137/FactionChat", "Date": "2014-11-28T02:06:06Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (curr == null) curr = 0L;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/504/buggy-version/src.jvm.storm.bdconsistency.CounterTopology.java", "BodyUseAPI": [], "Fixed commit": "2a02ece155225b09a722e5c33c6ec9a9279bd5c5", "Url": "https://api.github.com/repos/lbhat1/BDConsistency", "Date": "2013-10-14T21:14:08Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (indicesStr.startsWith(\"/\")) indicesStr = indicesStr.substring(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2766/buggy-version/src.main.java.edu.cmu.ml.rtw.generic.data.store.StoredCollectionFileSystem.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "7e49fae33affa26dc62e1e9cabab2971e5187dac", "Url": "https://api.github.com/repos/cmunell/micro-util", "Date": "2016-03-07T01:32:13Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((shot.getPreset()) != null) { nl.tudelft.contextproject.saveLoad.SaveScript.writer.add(nl.tudelft.contextproject.saveLoad.SaveScript.eventFactory.createCharacters(((shot.getPreset().getId()) + \"\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1658/buggy-version/src.main.java.nl.tudelft.contextproject.saveLoad.SaveScript.java", "BodyUseAPI": ["javax.xml.stream.XMLEventWriter.add(javax.xml.stream.events.Characters)", "shot.getPreset().getId()", "javax.xml.stream.XMLEventFactory.createCharacters(((shot.getPreset().getId()) + \"\"))", "nl.tudelft.contextproject.script.Shot.getPreset()"], "Fixed commit": "9895549321b69661518b40c4f51be260f99852b1", "Url": "https://api.github.com/repos/TH3steven/Context-TFP", "Date": "2016-05-29T20:29:22Z"},
{"Line": "=>924", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!showChan) event.chan = name;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2728/buggy-version/src.com.irccloud.android.MessageViewFragment.java", "BodyUseAPI": [], "Fixed commit": "066a5763eccd971bd24dbd31c13000896daab07d", "Url": "https://api.github.com/repos/irccloud/android", "Date": "2013-10-01T15:34:59Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getContext()) != null) ((tw.gov.tycg.app.android.etransportation.ui.BaseActivity) (getContext())).setOnBackPressedListener(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2589/buggy-version/app.src.main.java.tw.gov.tycg.app.android.etransportation.ui.fragment.BaseFragment.java", "BodyUseAPI": [], "Fixed commit": "862f9c420b0b7b94dc9d5593ce92ab456c625c2f", "Url": "https://api.github.com/repos/Stillwildman/TYGO", "Date": "2016-12-14T06:52:39Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mContainer.getMeasuredWidth()) > 0) && ((mContainer.getMeasuredHeight()) > 0)) { targetViewWidth = mContainer.getMeasuredWidth(); targetViewHeight = mContainer.getMeasuredHeight(); android.view.ViewGroup.LayoutParams targetParams = mTargetView.getLayoutParams(); targetParams.width = targetViewWidth; targetParams.height = targetViewHeight; mTargetView.setLayoutParams(targetParams); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8589/buggy-version/library.src.main.java.com.meg7.widget.RippleView.java", "BodyUseAPI": ["android.widget.FrameLayout.getMeasuredHeight()", "android.widget.FrameLayout.getMeasuredWidth()"], "Fixed commit": "f4f0946160ff6afd50699ba45de623a87c41c097", "Url": "https://api.github.com/repos/MostafaGazar/Widgets", "Date": "2014-07-17T21:43:35Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cards.isEmpty()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8550/buggy-version/src.graham.connor.cards.Deck.java", "BodyUseAPI": [], "Fixed commit": "ce4979ca7c79bf299d385e4c8e57ffcff936eaf1", "Url": "https://api.github.com/repos/ConnorGraham/JavaCards", "Date": "2015-01-07T02:27:35Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(cards.isEmpty())) { result = cards.pop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8550/buggy-version/src.graham.connor.cards.Deck.java", "BodyUseAPI": ["java.util.Stack<graham.connor.cards.Card>.pop()"], "Fixed commit": "ce4979ca7c79bf299d385e4c8e57ffcff936eaf1", "Url": "https://api.github.com/repos/ConnorGraham/JavaCards", "Date": "2015-01-07T02:27:35Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.eventor.internal.EventorCollections.newList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (refs.isEmpty()) { return new com.eventor.api.Invokable() { @java.lang.Override public java.lang.Object invoke(java.lang.Object arg, java.lang.Object invoker) { log.debug(\"Nothing to invoke on {}\", arg); return null; } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7485/buggy-version/framework.src.main.java.com.eventor.internal.Akka.java", "BodyUseAPI": [], "Fixed commit": "9d929288b664a5a9ed90afb141cc8af5a88c64be", "Url": "https://api.github.com/repos/st-kurilin/eventor", "Date": "2014-03-03T13:28:14Z"},
{"Line": "=>1026", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((extras.getInt(fr.gouv.etalab.mastodon.activities.INTENT_ACTION)) == (ADD_USER_INTENT)) { this.recreate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7420/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.activities.BaseMainActivity.java", "BodyUseAPI": [], "Fixed commit": "68262542c8037eab503df698b1a657cfee08fb1e", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-12-08T06:22:42Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ayros.historycleaner.cleaning.items._Firefox_LocalStorage.getFirefoxDataPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.stericson.RootTools.RootTools.exists((path + \"/webappsstore.sqlite\")))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4490/buggy-version/app.src.com.ayros.historycleaner.cleaning.items._Firefox_LocalStorage.java", "BodyUseAPI": [], "Fixed commit": "55db3461967dd0807a3f57f95bd9cd3ad5f54da7", "Url": "https://api.github.com/repos/JohnNPhillips/HistoryCleanerPro", "Date": "2014-04-01T22:22:52Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < (Build.VERSION_CODES.JELLY_BEAN)) { mapView.getViewTreeObserver().removeGlobalOnLayoutListener(this); }else { mapView.getViewTreeObserver().removeOnGlobalLayoutListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3780/buggy-version/app.src.main.java.com.hooapps.pca.cvilleart.artfinder.fragment.TransportationFragment.java", "BodyUseAPI": [], "Fixed commit": "085de86311b1933adc66b4842f328d36582e98f5", "Url": "https://api.github.com/repos/sdgennari/artfinder", "Date": "2014-11-28T21:30:12Z"},
{"Line": "=>903", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.tidisventures.drummersightread.SightReader.syncoFlag) && ((com.tidisventures.drummersightread.SightReader.difficulty) < 1)) com.tidisventures.drummersightread.SightReader.syncoFlag = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/364/buggy-version/app.src.main.java.com.tidisventures.drummersightread.SightReader.java", "BodyUseAPI": [], "Fixed commit": "bacd5fe33b453d489b66242d3e98658199f6d535", "Url": "https://api.github.com/repos/jinyu112/DrummerSightRead", "Date": "2016-11-29T04:22:34Z"},
{"Line": "=>646", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((com.tidisventures.drummersightread.SightReader.timeNum) == 3) && ((com.tidisventures.drummersightread.SightReader.timeDen) == 8)) && ((com.tidisventures.drummersightread.SightReader.difficulty) == 0)) com.tidisventures.drummersightread.SightReader.difficulty = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/364/buggy-version/app.src.main.java.com.tidisventures.drummersightread.SightReader.java", "BodyUseAPI": [], "Fixed commit": "bacd5fe33b453d489b66242d3e98658199f6d535", "Url": "https://api.github.com/repos/jinyu112/DrummerSightRead", "Date": "2016-11-29T04:22:34Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((longer.getTail().getNext()) != null) { algorithms.disjointSets.DisjointSetNode<T> tmp = longer.getTail().getNext(); while ((tmp.getNext()) != null) { tmp = tmp.getNext(); } longer.setTail(tmp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2855/buggy-version/src.algorithms.disjointSets.DisjointSetHelper.java", "BodyUseAPI": ["algorithms.disjointSets.DisjointSet<T>.setTail(algorithms.disjointSets.DisjointSetNode<T>)", "longer.getTail().getNext()", "algorithms.disjointSets.DisjointSet<T>.getTail()"], "Fixed commit": "f734c402ee75c07c8354a9f3f93344c7a865e136", "Url": "https://api.github.com/repos/nking/curvature-scale-space-corners-and-transformations", "Date": "2015-09-13T08:42:58Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((offset + count) > (cdata.length())) { count = (cdata.length()) - offset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1016/buggy-version/src.org.exist.dom.persistent.AbstractCharacterData.java", "BodyUseAPI": ["org.exist.util.XMLString.length()"], "Fixed commit": "78198fc1cb39432203e0ddf505c6caf856c67421", "Url": "https://api.github.com/repos/adamretter/exist", "Date": "2017-08-07T15:20:30Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.canWrite())) { f.setWritable(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3848/buggy-version/src.com.my.pkg.Search.java", "BodyUseAPI": ["java.io.File.setWritable(boolean)"], "Fixed commit": "20d95e3dbe02d2d7cb13b5008e33fe6e1d9e8b1a", "Url": "https://api.github.com/repos/vaibhawj/movielib", "Date": "2014-04-17T06:18:38Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.canRead())) { f.setReadable(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3848/buggy-version/src.com.my.pkg.Search.java", "BodyUseAPI": ["java.io.File.setReadable(boolean)"], "Fixed commit": "20d95e3dbe02d2d7cb13b5008e33fe6e1d9e8b1a", "Url": "https://api.github.com/repos/vaibhawj/movielib", "Date": "2014-04-17T06:18:38Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!withOrigin) { java.util.Iterator<org.motechproject.carereporting.domain.ComputedFieldEntity> iterator = computedFieldEntities.iterator(); while (iterator.hasNext()) { if (iterator.next().getOrigin()) { iterator.remove(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1063/buggy-version/src.main.java.org.motechproject.carereporting.service.impl.ComputedFieldServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "9b841518652ab1b62bc778780122471f6fac8a5a", "Url": "https://api.github.com/repos/motech/ananya-care-reports", "Date": "2013-09-02T12:43:06Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((sender.isOp()) || (sender.hasPermission(\"thirst.command.update\"))) || (sender.hasPermission(\"thirst.*\"))) { if (!(com.gamerking195.dev.thirst.autoupdater.VersionChecker.getInstance().getLatestVersionName().equalsIgnoreCase(com.gamerking195.dev.thirst.Main.getInstance().getDescription().getVersion()))) { if (sender instanceof org.bukkit.entity.Player) { com.gamerking195.dev.thirst.autoupdater.VersionChecker.getInstance().update(((org.bukkit.entity.Player) (sender))); }else { com.gamerking195.dev.thirst.autoupdater.VersionChecker.getInstance().update(null); } }else { sender.sendMessage(net.md_5.bungee.api.ChatColor.translateAlternateColorCodes('&', ((\"&8[&1Thirst&8] &cYour version, V\" + (com.gamerking195.dev.thirst.Main.getInstance().getDescription().getVersion())) + \" is up to date!\"))); } }else { sender.sendMessage(net.md_5.bungee.api.ChatColor.translateAlternateColorCodes('&', com.gamerking195.dev.thirst.Main.getInstance().getYAMLConfig().NoPermissionMesage)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3604/buggy-version/src.main.java.com.gamerking195.dev.thirst.command.ThirstCommand.java", "BodyUseAPI": ["org.bukkit.command.CommandSender.sendMessage(net.md_5.bungee.api.ChatColor.translateAlternateColorCodes('&', ((\"&8[&1Thirst&8] &cYour version, V\" + (com.gamerking195.dev.thirst.Main.getInstance().getDescription().getVersion())) + \" is up to date!\")))", "org.bukkit.command.CommandSender.sendMessage(net.md_5.bungee.api.ChatColor.translateAlternateColorCodes('&', com.gamerking195.dev.thirst.Main.getInstance().getYAMLConfig().NoPermissionMesage))"], "Fixed commit": "5b2d2012361523923ad41726fad35b7b74e58b46", "Url": "https://api.github.com/repos/fl0gic/Thirst", "Date": "2017-04-20T02:13:16Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ProjectKorra.plugin.getConfig().getString(\"Storage.engine\").equalsIgnoreCase(\"mysql\")) { DBConnection.sql.modifyQuery((((((\"INSERT INTO pk_presets (uuid, name) VALUES ('\" + (uuid.toString())) + \"', '\") + (name)) + \"') \") + \"ON DUPLICATE KEY UPDATE name=VALUES(name)\")); }else { DBConnection.sql.modifyQuery(((((\"INSERT OR REPLACE INTO pk_presets (uuid, name) VALUES ('\" + (uuid.toString())) + \"', '\") + (name)) + \"')\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7135/buggy-version/src.com.projectkorra.ProjectKorra.Objects.Preset.java", "BodyUseAPI": [], "Fixed commit": "d63a76f401b36bb2b94da258945fd43537c93ccf", "Url": "https://api.github.com/repos/ProjectKorra/ProjectKorra", "Date": "2015-06-10T03:24:11Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (itemIn == (gunn.modcurrency.mod.ModCurrency.tabCurrency)) { for (int i = 0; i < (gunn.modcurrency.mod.item.ItemBanknote.noteLength); i++) { net.minecraft.item.ItemStack stack = new net.minecraft.item.ItemStack(this, 1, i); tab.add(stack); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3943/buggy-version/src.main.java.gunn.modcurrency.mod.item.ItemBanknote.java", "BodyUseAPI": [], "Fixed commit": "3cf38ad1035b46a64bc07fcf5204c1aa96ac8427", "Url": "https://api.github.com/repos/BeardlessBrady/Currency-Mod", "Date": "2017-07-03T23:28:01Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (endIndex == (-1)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/623/buggy-version/app.src.main.java.look.myapplication.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "13dc4ef8f96c0aa511ea9a445a23133fb1a36839", "Url": "https://api.github.com/repos/kheilma/307-Team-30", "Date": "2017-04-06T21:29:01Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.es.netshell.configuration.NetShellConfiguration.instance) == null) { net.es.netshell.configuration.NetShellConfiguration.instance = tmp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1025/buggy-version/kernel.src.main.java.net.es.netshell.configuration.NetShellConfiguration.java", "BodyUseAPI": [], "Fixed commit": "b7d6ff78fc3a8ebe8cfdfa7a3e51ce35201709fc", "Url": "https://api.github.com/repos/esnet/netshell", "Date": "2016-04-22T20:17:09Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.es.netshell.configuration.NetShellConfiguration.instance) == null) { net.es.netshell.configuration.NetShellConfiguration.instance = new net.es.netshell.configuration.NetShellConfiguration(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1025/buggy-version/kernel.src.main.java.net.es.netshell.configuration.NetShellConfiguration.java", "BodyUseAPI": [], "Fixed commit": "b7d6ff78fc3a8ebe8cfdfa7a3e51ce35201709fc", "Url": "https://api.github.com/repos/esnet/netshell", "Date": "2016-04-22T20:17:09Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (container instanceof es.fap.simpleled.led.CCC) { return new es.fap.simpleled.validation.SimpleEntidadValidator(container, \"CCC\", false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1866/buggy-version/fap.compiler.src.es.fap.simpleled.src.es.fap.simpleled.validation.LedElementValidator.java", "BodyUseAPI": [], "Fixed commit": "43500961e72fb4aa357c479ad3cb312b3d0fae54", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-09-12T11:56:50Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gr.sepals.eshop.util.device.DeviceOptionsHandler.checkAvailableExternalMemory(getActivity())) == (-1)) { memoryOption.removeView(removable); }else { removable.setTypeface(descFont); removable.setOnClickListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4725/buggy-version/Sepals.src.gr.sepals.eshop.info.gui.SyncSlidePageFragment.java", "BodyUseAPI": [], "Fixed commit": "5f306b1b0bf8e1ad5773353dc4e382f342d0dbf1", "Url": "https://api.github.com/repos/BILLyTheLiTTle/Sepals", "Date": "2014-10-30T13:43:46Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (str_array == null) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4725/buggy-version/Sepals.src.gr.sepals.eshop.util.device.DeviceOptionsHandler.java", "BodyUseAPI": [], "Fixed commit": "5f306b1b0bf8e1ad5773353dc4e382f342d0dbf1", "Url": "https://api.github.com/repos/BILLyTheLiTTle/Sepals", "Date": "2014-10-30T13:43:46Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(addresses.isEmpty())) { presenter.saveCity(addresses); }else { askUserToProvideDefaultCity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8615/buggy-version/app.src.main.java.com.bookcrossing.mobile.ui.main.MainFragment.java", "BodyUseAPI": ["com.bookcrossing.mobile.presenters.MainPresenter.saveCity(java.util.List<android.location.Address>)"], "Fixed commit": "41e7cdecf9d52aae7ef0295f276f730166f0ee46", "Url": "https://api.github.com/repos/fobo66/BookcrossingMobile", "Date": "2017-10-20T17:38:30Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.smartexpo.controls.GetInfo.getDescriptionByItemID(selectedItem.getItemId())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((descriptions == null) || (descriptions.isEmpty())) { selectedDescription = new com.smartexpo.models.Description(); }else { selectedDescription = descriptions.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5945/buggy-version/SmartEXPO_Proj_new.src.java.com.smartexpo.temp.ItemViewManagedBean.java", "BodyUseAPI": ["java.util.List<com.smartexpo.models.Description>.get(int)"], "Fixed commit": "135dd1ae38f03869269d58e10820bd9c681a4f50", "Url": "https://api.github.com/repos/SmartEXPO/SmartEXPO", "Date": "2013-06-16T15:49:36Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gh4a.Gh4Application.getAuthLogin()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (login == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/553/buggy-version/src.com.gh4a.loader.IsCollaboratorLoader.java", "BodyUseAPI": [], "Fixed commit": "dd99a6355292825f7c01ed098abf0be148083cf6", "Url": "https://api.github.com/repos/jmue/gh4a", "Date": "2015-06-03T11:03:16Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osgi.framework.BundleContext.getService(org.osgi.framework.ServiceReference<org.eclipse.osgi.service.environment.EnvironmentInfo>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (info != null) { java.lang.String productVersion = com.aptana.core.util.EclipseUtil.getProductVersion(); if (productVersion == null) { productVersion = com.aptana.core.util.StringUtil.EMPTY; } info.setProperty(\"eclipse.buildId\", productVersion); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6891/buggy-version/plugins.com.aptana.rcp.src.com.aptana.rcp.IDEWorkbenchAdvisor.java", "BodyUseAPI": ["org.eclipse.osgi.service.environment.EnvironmentInfo.setProperty(java.lang.String,java.lang.String)"], "Fixed commit": "2b962ba91e2b72cd136a28345d49c1645f808399", "Url": "https://api.github.com/repos/sgtcoolguy/studio3-rcp", "Date": "2014-08-06T13:23:04Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osgi.framework.BundleContext.getServiceReference(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (ref == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6891/buggy-version/plugins.com.aptana.rcp.src.com.aptana.rcp.IDEWorkbenchAdvisor.java", "BodyUseAPI": [], "Fixed commit": "2b962ba91e2b72cd136a28345d49c1645f808399", "Url": "https://api.github.com/repos/sgtcoolguy/studio3-rcp", "Date": "2014-08-06T13:23:04Z"},
{"Line": "=>675", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files == null) || ((files.size()) == 0)) { errList.add(\"File list was null or empty. This should not happen. Please report this bug.\"); }else { for (java.io.File source : files) { if (source.getName().endsWith(\".xml\")) { java.lang.System.out.println(source.getName()); net.jeremybrooks.readsy.gui.workers.InstallFileWorker worker = new net.jeremybrooks.readsy.gui.workers.InstallFileWorker(source); net.jeremybrooks.common.gui.WorkerDialog wd = new net.jeremybrooks.common.gui.WorkerDialog(this, worker, bundle.getString(\"worker.installingFile\"), \"\"); wd.executeAndShowDialog(); if ((worker.getError()) != null) { errList.add((((source.getAbsolutePath()) + \" - \") + (worker.getError().getMessage()))); } }else { errList.add(((source.getAbsolutePath()) + \" - not a valid file format.\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4959/buggy-version/src.main.java.net.jeremybrooks.readsy.gui.MainWindow.java", "BodyUseAPI": [], "Fixed commit": "9e2a17144dbd1423e92c2d3a076f5df2d102a8e3", "Url": "https://api.github.com/repos/jeremybrooks/readsy-desktop", "Date": "2013-12-18T06:23:09Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (version >= 21) { sleepImage = getResources().getDrawable(R.drawable.ic_sleep, getTheme()); coffeeImage = getResources().getDrawable(R.drawable.ic_coffee, getTheme()); workImage = getResources().getDrawable(R.drawable.ic_work, getTheme()); homeImage = getResources().getDrawable(R.drawable.ic_home, getTheme()); }else { sleepImage = getResources().getDrawable(R.drawable.ic_sleep); coffeeImage = getResources().getDrawable(R.drawable.ic_coffee); workImage = getResources().getDrawable(R.drawable.ic_work); homeImage = getResources().getDrawable(R.drawable.ic_home); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/494/buggy-version/app.src.main.java.gepalcreations.canwemeet.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3c140925ef8921f7c9ae36ed4377d21a92b23189", "Url": "https://api.github.com/repos/renegens/Can-We-Meet", "Date": "2015-05-12T22:09:57Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((d + (v / 2)) > m) d = m - (v / 2);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7179/buggy-version/src.cpsc599.controller.CameraController.java", "BodyUseAPI": [], "Fixed commit": "87ff958b798185da0a58922d344a737a9daec6c1", "Url": "https://api.github.com/repos/Senney/CPSC599-RPG", "Date": "2014-03-04T18:03:40Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["worldObj.getBlockState(currentPosition).getBlock()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (testBlock != (currentBlock)) { currentBlock = testBlock; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8855/buggy-version/src.main.java.com.vanhal.progressiveautomation.entities.miner.TileMiner.java", "BodyUseAPI": [], "Fixed commit": "f44dbed755472374381f70ce35ecbf9921441659", "Url": "https://api.github.com/repos/MikeSingularity/ProgressiveAutomation", "Date": "2016-09-01T00:11:29Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4738/buggy-version/azure-mgmt-resources.src.main.java.com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.java", "BodyUseAPI": [], "Fixed commit": "e149b727022e6bd3027bea1dc82779d81d30f37a", "Url": "https://api.github.com/repos/martinsawicki/azure-sdk-for-java", "Date": "2016-12-20T01:34:03Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (id == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4738/buggy-version/azure-mgmt-resources.src.main.java.com.microsoft.azure.management.resources.fluentcore.arm.ResourceUtils.java", "BodyUseAPI": [], "Fixed commit": "e149b727022e6bd3027bea1dc82779d81d30f37a", "Url": "https://api.github.com/repos/martinsawicki/azure-sdk-for-java", "Date": "2016-12-20T01:34:03Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(stop.substring(0, 16).equals(\"simplePrediction\"))) stop = ((stop.substring(0, 6)) + \"Prediction\") + (stop.substring(20));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7183/buggy-version/src.com.vishnurajeevan.android.PredictionDisplay.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "97ecea956a374505f5e35d53d4deb0c6245fb82b", "Url": "https://api.github.com/repos/burntcookie90/android-nextbus", "Date": "2012-06-26T19:19:06Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edu.utexas.cs.nn.MMNEAT.MMNEAT.actualFitnessFunctions) == null) { edu.utexas.cs.nn.MMNEAT.MMNEAT.actualFitnessFunctions = new java.util.ArrayList<java.lang.Integer>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5845/buggy-version/src.edu.utexas.cs.nn.MMNEAT.MMNEAT.java", "BodyUseAPI": [], "Fixed commit": "121a037a479252ea87b2b59daae863e7e257c00c", "Url": "https://api.github.com/repos/schrum2/MM-NEATv2", "Date": "2016-06-29T15:01:49Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (saxoncfg != null) { schemaAware = this.schemaAware; proctype = saxonProcessor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3055/buggy-version/src.com.xmlcalabash.core.XProcConfiguration.java", "BodyUseAPI": [], "Fixed commit": "0ede5a71d4688236a726935c1945b556e37d2147", "Url": "https://api.github.com/repos/ndw/xmlcalabash1", "Date": "2014-02-11T15:42:08Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((word.length()) > 1) keywords = (keywords + word) + \" \";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6893/buggy-version/src.main.java.com.pratilipi.common.util.PratilipiContentUtil.java", "BodyUseAPI": [], "Fixed commit": "2508f0d2499826a3cd8f259160395f9428061187", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-07-14T07:19:06Z"},
{"Line": "=>838", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVisible()) { for (eu.mihosoft.vrl.workflow.SkinFactory<? extends eu.mihosoft.vrl.workflow.ConnectionSkin, ? extends eu.mihosoft.vrl.workflow.VNodeSkin> skinFactory : getSkinFactories()) { eu.mihosoft.vrl.workflow.VNodeSkin<eu.mihosoft.vrl.workflow.VNode> skin = getNodeSkin(skinFactory, flowNode.getId()); eu.mihosoft.vrl.workflow.SkinFactory<? extends eu.mihosoft.vrl.workflow.ConnectionSkin, ? extends eu.mihosoft.vrl.workflow.VNodeSkin> childFactory = null; if (skinFactory != null) { childFactory = skinFactory.createChild(skin); childFactories.add(childFactory); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/974/buggy-version/VWorkflows-Core.src.eu.mihosoft.vrl.workflow.VFlowImpl.java", "BodyUseAPI": [], "Fixed commit": "6418ada6ebee7579b26a15f62699ae7fb9a1ecbc", "Url": "https://api.github.com/repos/miho/VWorkflows", "Date": "2013-12-24T13:29:24Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((ticketModel.getTypeKaart().getId()) != 2) && ((ticketModel.getTypeKaart().getId()) != 4)) { calculatePrice(); }else if ((ticketModel.getTypeKaart().getId()) == 2) { ticketModel.setPrijs(6); }else if ((ticketModel.getTypeKaart().getId()) == 4) { ticketModel.setPrijs(50); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4988/buggy-version/src.controller.TicketController.java", "BodyUseAPI": ["controller.Ticket.setPrijs(int)", "controller.Ticket.getTypeKaart()", "ticketModel.getTypeKaart().getId()", "controller.Ticket.getTypeKaart()", "ticketModel.getTypeKaart().getId()", "controller.Ticket.setPrijs(int)"], "Fixed commit": "04639533244035f5471262c2e14a54878c9ca29e", "Url": "https://api.github.com/repos/manishsharmastudent/softwareproject", "Date": "2017-01-02T19:33:58Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((target.sprite) != null) fx(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1533/buggy-version/core.src.main.java.com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Buff.java", "BodyUseAPI": [], "Fixed commit": "1fbaa27f5b80fe6558e9e72eff52df9115c748f5", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2017-11-13T04:30:57Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type instanceof haskell.complex.ast.ASTVariable) { assumptions.put(((haskell.complex.ast.ASTVariable) (type)), var); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6922/buggy-version/src.lambda.type.TypeChecker.java", "BodyUseAPI": [], "Fixed commit": "2959d2a12ed078ecabfd774956d186b3f9aee141", "Url": "https://api.github.com/repos/DavidWz/Haskell-Interpreter", "Date": "2016-12-20T12:30:24Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((++(sdmx2rdf.Sdmx2Rdf.observationCounter)) % 10000) == 0) { logger.info(\"Converting observations..\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8705/buggy-version/src.main.java.sdmx2rdf.Sdmx2Rdf.java", "BodyUseAPI": [], "Fixed commit": "984070cc087306a137ab186977b682076e21b782", "Url": "https://api.github.com/repos/digital-agenda-data/sdmx2rdf", "Date": "2015-05-15T14:03:33Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (frame != 0) { listener.onStatusUpdate(frame, framerate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7511/buggy-version/src.net.mms_projects.tostream.FfmpegWrapper.java", "BodyUseAPI": ["net.mms_projects.tostream.EncoderOutputListener.onStatusUpdate(int,int)"], "Fixed commit": "208f9d238f2337a4f05d5eca28facfc63cc91d33", "Url": "https://api.github.com/repos/MMS-Projects/2stream", "Date": "2012-10-03T04:39:32Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bc.clsName.equals(\"java_text_DateFormat\")) { bc.markDependent(lst); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/961/buggy-version/vm.ByteCodeTranslator.src.com.codename1.tools.translator.ByteCodeClass.java", "BodyUseAPI": ["com.codename1.tools.translator.ByteCodeClass.markDependent(java.util.List<com.codename1.tools.translator.ByteCodeClass>)"], "Fixed commit": "aa14c8921ee4785bff992e2a08ef988f2c9b7186", "Url": "https://api.github.com/repos/JrmyDev/CodenameOne", "Date": "2015-08-21T05:35:43Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(presentationNames.contains(presentationName))) { org.bigbluebutton.conference.service.presentation.PresentationRoom.log.debug(((\"Adding [\" + presentationName) + \"] to list of presentations.\")); presentationNames.add(presentationName); }else { org.bigbluebutton.conference.service.presentation.PresentationRoom.log.debug(((\"[\" + presentationName) + \"] is already in list of presentations.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8746/buggy-version/bigbluebutton-apps.src.main.java.org.bigbluebutton.conference.service.presentation.PresentationRoom.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)", "org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "daf6874278e5fe5fb37b423403fe866e5f8fd981", "Url": "https://api.github.com/repos/capilkey/bigbluebutton", "Date": "2013-07-04T15:08:09Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mc.getLayout().equals(MagicCard.LAYOUT.Token.toString())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/751/buggy-version/src.org.magic.services.CockatriceTokenProvider.java", "BodyUseAPI": [], "Fixed commit": "cfae75a169ed05431f483363598c5bd52b1b38f7", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-05-05T15:33:45Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.ImmutableList.copyOf(java.util.List<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((parsedResponse.size()) == 3) { usedNick = parsedResponse.get(1); if (parsedResponse.get(0).equals(\"*\")) { doAutoNickChange = true; } }else { usedNick = parsedResponse.get(0); if (!(bot.loggedIn)) { doAutoNickChange = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4115/buggy-version/src.main.java.org.pircbotx.InputParser.java", "BodyUseAPI": ["com.google.common.collect.ImmutableList<java.lang.String>.get(int)", "parsedResponse.get(0).equals(java.lang.String)", "com.google.common.collect.ImmutableList<java.lang.String>.get(int)", "com.google.common.collect.ImmutableList<java.lang.String>.get(int)"], "Fixed commit": "7d32bd8fbc109069085789f86ff725c092fb9c5e", "Url": "https://api.github.com/repos/awaters1/pircbotx", "Date": "2015-09-07T08:12:48Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["oscar.eform.EFormUtil.removeQuotes(oscar.eform.EFormUtil.getAttribute(\"type\", fieldHeader))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (null == type) { type = \"text\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2833/buggy-version/src.main.java.oscar.eform.data.EForm.java", "BodyUseAPI": [], "Fixed commit": "969a808d025785d634e79ae1fd74928798fc30b9", "Url": "https://api.github.com/repos/scoophealth/oscar", "Date": "2015-02-25T17:25:16Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["priceText.getText().toString()", "itemNameText.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((itemName.isEmpty()) || (price.isEmpty())) { android.widget.Toast.makeText(d.getContext(), getResources().getString(R.string.fill_blanks), Toast.LENGTH_SHORT).show(); }else { com.nwhacks.billsplitter.MainActivity callingActivity = ((com.nwhacks.billsplitter.MainActivity) (getActivity())); callingActivity.addFoodItem(itemName, price); d.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4755/buggy-version/app.src.main.java.com.nwhacks.billsplitter.addFood.java", "BodyUseAPI": ["com.nwhacks.billsplitter.MainActivity.addFoodItem(java.lang.String,java.lang.String)"], "Fixed commit": "b22a519af9c0588c33092c00449a18ec28f02608", "Url": "https://api.github.com/repos/robyn3choi/Bill-Splitter", "Date": "2016-03-05T06:09:34Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (evaluationContext instanceof org.eclipse.e4.core.commands.ExpressionContext) { org.eclipse.e4.core.commands.ExpressionContext exc = ((org.eclipse.e4.core.commands.ExpressionContext) (evaluationContext)); defaultVariable = exc.getDefaultVariable(); }else if (evaluationContext instanceof org.eclipse.core.expressions.EvaluationContext) { org.eclipse.core.expressions.EvaluationContext context = ((org.eclipse.core.expressions.EvaluationContext) (evaluationContext)); defaultVariable = context.getDefaultVariable(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/550/buggy-version/main.plugins.org.talend.mdm.repository.validate.src.org.talend.mdm.repository.ui.validate.JumpToSourceLineHandler.java", "BodyUseAPI": [], "Fixed commit": "03f6e6c525a36bf8be18d037bae49487ac34205b", "Url": "https://api.github.com/repos/Talend/tmdm-studio-se", "Date": "2015-04-14T06:49:35Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.jdbc.core.JdbcTemplate.queryForRowSet(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((sqlRowSet.next()) && (!(sqlRowSet.wasNull()))) { java.math.BigDecimal tmpResult = sqlRowSet.getBigDecimal(1); if (tmpResult != null) { result = tmpResult; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/344/buggy-version/src.main.java.org.motechproject.carereporting.indicator.DailyValueCalculator.java", "BodyUseAPI": ["org.springframework.jdbc.support.rowset.SqlRowSet.getBigDecimal(int)"], "Fixed commit": "4fe5156562a2dd9eb948da99c2843a236a9cf5e0", "Url": "https://api.github.com/repos/motech/ananya-care-reports", "Date": "2013-08-28T13:08:45Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dbRecordsDataCache) != null) { dbRecordsDataCache.invalidate(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9152/buggy-version/proxl_web_app.src.org.yeastrc.xlink.www.searcher_via_cached_data.cached_data_holders.Cached_Search_Core_DTO.java", "BodyUseAPI": [], "Fixed commit": "2813664dc7e551d5db20bc8187746da0d418641e", "Url": "https://api.github.com/repos/yeastrc/proxl-web-app", "Date": "2017-08-10T20:25:56Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dbRecordsDataCache) != null) { dbRecordsDataCache.invalidate(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9152/buggy-version/proxl_web_app.src.org.yeastrc.xlink.www.searcher_via_cached_data.cached_data_holders.Cached_ProjectTblSubPartsForProjectLists.java", "BodyUseAPI": [], "Fixed commit": "2813664dc7e551d5db20bc8187746da0d418641e", "Url": "https://api.github.com/repos/yeastrc/proxl-web-app", "Date": "2017-08-10T20:25:56Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dbRecordsDataCache) != null) { dbRecordsDataCache.invalidate(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9152/buggy-version/proxl_web_app.src.org.yeastrc.xlink.www.searcher_via_cached_data.cached_data_holders.Cached_ReportedPeptideDTO.java", "BodyUseAPI": [], "Fixed commit": "2813664dc7e551d5db20bc8187746da0d418641e", "Url": "https://api.github.com/repos/yeastrc/proxl-web-app", "Date": "2017-08-10T20:25:56Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dbRecordsDataCache) != null) { dbRecordsDataCache.invalidate(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9152/buggy-version/proxl_web_app.src.org.yeastrc.xlink.www.searcher_via_cached_data.cached_data_holders.Cached_PeptideDTO.java", "BodyUseAPI": [], "Fixed commit": "2813664dc7e551d5db20bc8187746da0d418641e", "Url": "https://api.github.com/repos/yeastrc/proxl-web-app", "Date": "2017-08-10T20:25:56Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((to >= 0) && (to < (GDE.size()))) { drawnData.addAll(GDE.subList(0, to)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/771/buggy-version/src.Graphing.GraphLayer.java", "BodyUseAPI": ["GenericLog.GenericDataElement.subList(int,int)", "java.util.LinkedList<java.lang.Double>.addAll(GDE.subList(0, to))"], "Fixed commit": "30455194e7bb017e41d66c1727acccc664090830", "Url": "https://api.github.com/repos/fredcooke/OpenLogViewer", "Date": "2011-03-12T08:46:04Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.isDirectory()) { java.util.List<java.lang.Object> contentFiles = ((java.util.List<java.lang.Object>) (virtualFile.getMethod(\"getChildrenRecursively\").invoke(content))); for (java.lang.Object child : contentFiles) { virtualFile.getMethod(\"getPhysicalFile\").invoke(child); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9134/buggy-version/src.main.java.org.reflections.vfs.Vfs.java", "BodyUseAPI": [], "Fixed commit": "229c325a59f69dc3215adf336ec96ff526abd454", "Url": "https://api.github.com/repos/doychin/reflections", "Date": "2017-08-16T23:05:32Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cosTheta < (-1.0)) { cosTheta = -1.0; }else if (cosTheta > 1.0) { cosTheta = 1.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1241/buggy-version/Legacy.util.src.main.java.org.doube.geometry.Trig.java", "BodyUseAPI": [], "Fixed commit": "ce74ae7e3f14913a03cd1296c114f721035f01fd", "Url": "https://api.github.com/repos/bonej-org/BoneJ2", "Date": "2016-04-22T17:01:40Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(annotatedPageRole.equals(org.jboss.errai.ui.nav.rebind.DefaultPage.class))) ctor.append(org.jboss.errai.codegen.util.Stmt.nestedCall(org.jboss.errai.codegen.util.Refs.get(\"pagesByRole\")).invoke(\"put\", annotatedPageRole, org.jboss.errai.codegen.util.Refs.get(fieldName)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4594/buggy-version/errai-navigation.src.main.java.org.jboss.errai.ui.nav.rebind.NavigationGraphGenerator.java", "BodyUseAPI": ["org.jboss.errai.codegen.util.Stmt.nestedCall(org.jboss.errai.codegen.util.Refs.get(\"pagesByRole\")).invoke(java.lang.String,java.lang.Class<? extends org.jboss.errai.ui.nav.rebind.PageRole>,org.jboss.errai.codegen.util.Refs.get(fieldName))", "org.jboss.errai.codegen.builder.ConstructorBlockBuilder<?>.append(org.jboss.errai.codegen.util.Stmt.nestedCall(org.jboss.errai.codegen.util.Refs.get(\"pagesByRole\")).invoke(\"put\", annotatedPageRole, org.jboss.errai.codegen.util.Refs.get(fieldName)))"], "Fixed commit": "8f0f0856ae12bfa627b78c23ebab398e4e5cfb14", "Url": "https://api.github.com/repos/errai/errai", "Date": "2014-02-26T15:16:42Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.fs.Path.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pathName.split(\"=\").length) != 2) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7148/buggy-version/indexing-hadoop.src.main.java.io.druid.indexer.path.PartitionPathSpec.java", "BodyUseAPI": [], "Fixed commit": "5993791eaa107bd5edef4804833dba1d90037d04", "Url": "https://api.github.com/repos/sirpkt/druid", "Date": "2016-05-10T07:10:58Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.reflect.Modifier.isStatic(mods))) { java.lang.Object o = f.get(this); java.lang.String name = f.getName(); java.lang.String obj = (o == null) ? \"null\" : o.toString(); sb.append(\" \").append(name).append(\" = \").append(obj).append(Log.eol); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4291/buggy-version/src.com.makechip.stdf2xls4.stdf.StdfRecord.java", "BodyUseAPI": [], "Fixed commit": "9f6c4d8864d6f8ccc979df2f9bd6fccbdcd2d2af", "Url": "https://api.github.com/repos/makechip/stdf2xls4", "Date": "2017-08-30T15:50:36Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ca.ubc.ctlt.blackboardb2util.GradeAdapter<T>.gradeToBbScore(T,java.util.List<blackboard.data.course.CourseMembership>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (score != null) { failedGrades.add(grade); }else { scores.add(score); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3532/buggy-version/src.ca.ubc.ctlt.blackboardb2util.B2Util.java", "BodyUseAPI": ["java.util.List<blackboard.data.gradebook.Score>.add(blackboard.data.gradebook.Score)"], "Fixed commit": "66836136aec56a5284a2df4adad4cf85dd90efbb", "Url": "https://api.github.com/repos/ubc/blackboard-b2-util", "Date": "2014-01-29T06:17:59Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isDistributing) { java.lang.System.out.println(\"isDistributing\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7826/buggy-version/src.main.java.com.omegajak.compressedbuilding.tileentities.TileEntityCompactor.java", "BodyUseAPI": [], "Fixed commit": "e3977badce8b0ff1975e520723bc64dfe7af86f8", "Url": "https://api.github.com/repos/OmegaJak/Compressed_Building", "Date": "2014-05-07T23:38:57Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.jimple.FieldRef.getField()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (soottocfg.soot.util.SootTranslationHelpers.v().isWrittenOnce(field)) { if (!(field.isStatic())) { soottocfg.cfg.expression.TupleAccessExpression tae = new soottocfg.cfg.expression.TupleAccessExpression(loc, base.getVariable(), field.getName()); this.statementSwitch.push(new soottocfg.cfg.statement.AssignStatement(loc, left, tae)); return; }else { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5941/buggy-version/soottocfg.src.main.java.soottocfg.soot.memory_model.NewMemoryModel.java", "BodyUseAPI": ["soot.SootField.getName()", "soot.SootField.isStatic()"], "Fixed commit": "67078a1867f8f3e8a9cccf537d074bccdc3a577f", "Url": "https://api.github.com/repos/jayhorn/jayhorn", "Date": "2016-12-25T22:54:00Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.Value.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((baseType instanceof soot.RefType) && (((soot.RefType) (baseType)).getSootClass().equals(containingClass))) { soot.SootField f = ((soot.jimple.InstanceFieldRef) (vb.getValue())).getField(); if (f.isFinal()) { instanceFields.remove(f); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5941/buggy-version/soottocfg.src.main.java.soottocfg.soot.SootToCfg.java", "BodyUseAPI": [], "Fixed commit": "67078a1867f8f3e8a9cccf537d074bccdc3a577f", "Url": "https://api.github.com/repos/jayhorn/jayhorn", "Date": "2016-12-25T22:54:00Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (storedSelection != null) { storedInspections.remove(storedSelection); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1576/buggy-version/uk.ac.diamond.scisoft.analysis.rcp.src.uk.ac.diamond.scisoft.analysis.rcp.inspector.DatasetInspector.java", "BodyUseAPI": ["java.util.Map<uk.ac.diamond.scisoft.analysis.rcp.inspector.DatasetSelection, uk.ac.diamond.scisoft.analysis.rcp.inspector.DatasetInspector.Inspection>.remove(uk.ac.diamond.scisoft.analysis.rcp.inspector.DatasetSelection)"], "Fixed commit": "658c552536e0728bea8b179876023a32aa61ac0e", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2017-10-18T10:45:43Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["uk.ac.diamond.scisoft.analysis.rcp.inspector.DatasetSelection.getFileName()", "java.util.Map.Entry<uk.ac.diamond.scisoft.analysis.rcp.inspector.DatasetSelection, uk.ac.diamond.scisoft.analysis.rcp.inspector.DatasetInspector.Inspection>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (file.equals(stored.getFileName())) { storedSelection = stored; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1576/buggy-version/uk.ac.diamond.scisoft.analysis.rcp.src.uk.ac.diamond.scisoft.analysis.rcp.inspector.DatasetInspector.java", "BodyUseAPI": [], "Fixed commit": "658c552536e0728bea8b179876023a32aa61ac0e", "Url": "https://api.github.com/repos/DawnScience/scisoft-ui", "Date": "2017-10-18T10:45:43Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Camera2VideoImageActivity.arraylistcall) { com.yorku.mstew.camera2videoimage.SettingsActivity.newarraylist = new java.util.ArrayList<android.util.Size>(Camera2VideoImageActivity.arraylist); Camera2VideoImageActivity.arraylistcall = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5524/buggy-version/app.src.main.java.com.yorku.mstew.camera2videoimage.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "7078dfde39375073fc379909c4a61c194ee254ab", "Url": "https://api.github.com/repos/mstewart2525/Camera2Video1", "Date": "2017-06-17T15:40:51Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list.isEmpty()) { getLog().warn(((cucumberOutput.getAbsolutePath()) + \" does not exist.\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3705/buggy-version/src.main.java.net.masterthought.cucumber.CucumberReportGeneratorMojo.java", "BodyUseAPI": [], "Fixed commit": "664ff1340684c054f1663d9d56ef845b1417c2c3", "Url": "https://api.github.com/repos/damianszczepanik/maven-cucumber-reporting", "Date": "2014-12-13T22:23:38Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (word.endsWith(suffix)) { w = word.substring(0, ((word.length()) - (suffix.length()))); index = java.util.Arrays.binarySearch(wordsArray, new mkoffeine.wordsunk.controller.extra.WordInfo(w, 0, 0)); if ((index > 0) && (index < (wordsArray.length))) { li.addWord(wordsArray[index]); } for (java.lang.String suffix2 : SUFFIXES) { java.lang.String w2 = w + suffix2; index = java.util.Arrays.binarySearch(wordsArray, new mkoffeine.wordsunk.controller.extra.WordInfo(w2, 0, 0)); if ((index > 0) && (index < (wordsArray.length))) { li.addWord(wordsArray[index]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1085/buggy-version/src.main.java.mkoffeine.wordsunk.controller.PriorityWordsController.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.length()"], "Fixed commit": "ac9cf60b23604666ce47752dc017911296d3433f", "Url": "https://api.github.com/repos/mkoffeine/wordsUnknown", "Date": "2015-06-18T21:47:48Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buffer == null) || ((buffer.position()) == 0)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5587/buggy-version/servlet.src.main.java.io.undertow.servlet.spec.ServletOutputStreamImpl.java", "BodyUseAPI": [], "Fixed commit": "ffd55bea0c39b2e236eff09106cd34b1e8260f4e", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2013-06-19T22:50:12Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((buffersToWrite) == null) { if (flushBufferAsync()) { channel.shutdownWrites(); state |= io.undertow.servlet.spec.ServletOutputStreamImpl.FLAG_DELEGATE_SHUTDOWN; if (!(channel.flush())) { resumeWrites(); } }else { resumeWrites(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5587/buggy-version/servlet.src.main.java.io.undertow.servlet.spec.ServletOutputStreamImpl.java", "BodyUseAPI": [], "Fixed commit": "ffd55bea0c39b2e236eff09106cd34b1e8260f4e", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2013-06-19T22:50:12Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(world.isRemote)) { chunkloader.placedChunkLoader(world, x, y, z); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8605/buggy-version/srccustomores.minecraft_server.customore.block.COChunkLoaderBlock.java", "BodyUseAPI": ["customore.entity.COChunkLoaderTileEntity.placedChunkLoader(net.minecraft.src.World,int,int,int)"], "Fixed commit": "133f8b52770d856df14a930d6c561e0a0d0c5654", "Url": "https://api.github.com/repos/BioLogisch/Soulforge", "Date": "2013-09-01T13:57:39Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(world.isRemote)) { chunkloader.destroyedChunkLoader(world, x, y, z); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8605/buggy-version/srccustomores.minecraft_server.customore.block.COChunkLoaderBlock.java", "BodyUseAPI": ["customore.entity.COChunkLoaderTileEntity.destroyedChunkLoader(net.minecraft.src.World,int,int,int)"], "Fixed commit": "133f8b52770d856df14a930d6c561e0a0d0c5654", "Url": "https://api.github.com/repos/BioLogisch/Soulforge", "Date": "2013-09-01T13:57:39Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(world.isRemote)) { chunkloader.placedChunkLoader(world, x, y, z); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8605/buggy-version/srccustomores.minecraft.customore.block.COChunkLoaderBlock.java", "BodyUseAPI": ["customore.entity.COChunkLoaderTileEntity.placedChunkLoader(net.minecraft.src.World,int,int,int)"], "Fixed commit": "133f8b52770d856df14a930d6c561e0a0d0c5654", "Url": "https://api.github.com/repos/BioLogisch/Soulforge", "Date": "2013-09-01T13:57:39Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(world.isRemote)) { chunkloader.destroyedChunkLoader(world, x, y, z); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8605/buggy-version/srccustomores.minecraft.customore.block.COChunkLoaderBlock.java", "BodyUseAPI": ["customore.entity.COChunkLoaderTileEntity.destroyedChunkLoader(net.minecraft.src.World,int,int,int)"], "Fixed commit": "133f8b52770d856df14a930d6c561e0a0d0c5654", "Url": "https://api.github.com/repos/BioLogisch/Soulforge", "Date": "2013-09-01T13:57:39Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNullOrEmpty(track.getSong().getDownloadURL())) { throw new java.lang.IllegalStateException(\"no download location - maybe this song is not available for your country\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5480/buggy-version/src.main.java.groovejames.service.DownloadService.java", "BodyUseAPI": [], "Fixed commit": "6497317a81eaf6b1afa824d7694d0ec138a43cc7", "Url": "https://api.github.com/repos/groovejames/groovejames", "Date": "2016-03-17T16:48:35Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.symeda.sormas.app.rest.RetroProvider.init(this)) { android.content.Intent intent = new android.content.Intent(this, de.symeda.sormas.app.caze.CasesActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7585/buggy-version/sormas-app.app.src.main.java.de.symeda.sormas.app.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "a426dba100b69f5a99d7cd502bdec04291326417", "Url": "https://api.github.com/repos/hzi-braunschweig/SORMAS-Project", "Date": "2017-06-01T07:11:15Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (toolSelectionMode.equals(org.iplantc.core.uiapps.client.presenter.NewToolRequestFormPresenterImpl.SELECTION_MODE.UPLOAD)) { if (testDataSelectionMode.equals(org.iplantc.core.uiapps.client.presenter.NewToolRequestFormPresenterImpl.SELECTION_MODE.UPLOAD)) { valid = (!(areUploadsSame(view.getToolBinaryUploader(), view.getTestDataUploader()))) && valid; } if (otherDataSelectionMode.equals(org.iplantc.core.uiapps.client.presenter.NewToolRequestFormPresenterImpl.SELECTION_MODE.UPLOAD)) { valid = (!(areUploadsSame(view.getToolBinaryUploader(), view.getOtherDataUploader()))) && valid; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2353/buggy-version/src.main.java.org.iplantc.core.uiapps.client.presenter.NewToolRequestFormPresenterImpl.java", "BodyUseAPI": ["org.iplantc.core.uiapps.client.presenter.NewToolRequestFormPresenterImpl.SELECTION_MODE.equals(org.iplantc.core.uiapps.client.presenter.NewToolRequestFormPresenterImpl.SELECTION_MODE)", "org.iplantc.core.uiapps.client.presenter.NewToolRequestFormPresenterImpl.SELECTION_MODE.equals(org.iplantc.core.uiapps.client.presenter.NewToolRequestFormPresenterImpl.SELECTION_MODE)"], "Fixed commit": "ba562be543528e8ade9f36f38db48aa214815702", "Url": "https://api.github.com/repos/iPlantCollaborativeOpenSource/ui-applications-module", "Date": "2013-07-31T23:09:08Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (otherDataSelectionMode.equals(org.iplantc.core.uiapps.client.presenter.NewToolRequestFormPresenterImpl.SELECTION_MODE.UPLOAD)) { if (toolSelectionMode.equals(org.iplantc.core.uiapps.client.presenter.NewToolRequestFormPresenterImpl.SELECTION_MODE.UPLOAD)) { valid = (!(areUploadsSame(view.getToolBinaryUploader(), view.getOtherDataUploader()))) && valid; } if (testDataSelectionMode.equals(org.iplantc.core.uiapps.client.presenter.NewToolRequestFormPresenterImpl.SELECTION_MODE.UPLOAD)) { valid = (!(areUploadsSame(view.getTestDataUploader(), view.getOtherDataUploader()))) && valid; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2353/buggy-version/src.main.java.org.iplantc.core.uiapps.client.presenter.NewToolRequestFormPresenterImpl.java", "BodyUseAPI": ["org.iplantc.core.uiapps.client.presenter.NewToolRequestFormPresenterImpl.SELECTION_MODE.equals(org.iplantc.core.uiapps.client.presenter.NewToolRequestFormPresenterImpl.SELECTION_MODE)", "org.iplantc.core.uiapps.client.presenter.NewToolRequestFormPresenterImpl.SELECTION_MODE.equals(org.iplantc.core.uiapps.client.presenter.NewToolRequestFormPresenterImpl.SELECTION_MODE)"], "Fixed commit": "ba562be543528e8ade9f36f38db48aa214815702", "Url": "https://api.github.com/repos/iPlantCollaborativeOpenSource/ui-applications-module", "Date": "2013-07-31T23:09:08Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listStates.isEmpty()) { wrappingOut.setIndent(org.sqsh.MarkdownFormatter.TEXT_INDENT); }else { wrappingOut.setIndent(getListWrappingIndent()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3877/buggy-version/jsqsh-core.src.main.java.org.sqsh.MarkdownFormatter.java", "BodyUseAPI": [], "Fixed commit": "83f6051a2930bc5c0c7c2442a55192ca7a86ba1f", "Url": "https://api.github.com/repos/scgray/jsqsh", "Date": "2017-02-12T15:52:06Z"},
{"Line": "=>1913", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (owner instanceof org.osate.aadl2.ListValue) owner = owner.getOwner();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7583/buggy-version/org.osate.xtext.aadl2.properties.src.org.osate.xtext.aadl2.properties.linking.PropertiesLinkingService.java", "BodyUseAPI": ["org.osate.aadl2.Element.getOwner()"], "Fixed commit": "6c676dace2f7d03bff18b974eb1d6e74819cb15f", "Url": "https://api.github.com/repos/osate/osate2-core", "Date": "2013-08-19T20:17:43Z"},
{"Line": "=>2138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.getMetaData()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (metadata == null) { metadata = r.getMetaData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1633/buggy-version/core.src.org.pentaho.di.core.database.Database.java", "BodyUseAPI": [], "Fixed commit": "0d0890aa216f52f086513f8edb72c783b256ecbd", "Url": "https://api.github.com/repos/mdamour1976/pentaho-kettle", "Date": "2015-01-13T21:20:37Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (typeConverterDefinition.getDbTypeName().equals(com.squareup.javapoet.ClassName.get(com.raizlabs.android.dbflow.data.Blob.class))) { newCursorAccess = java.lang.String.format(\"new Blob(%s)\", newCursorAccess); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/72/buggy-version/dbflow-processor.src.main.java.com.raizlabs.android.dbflow.processor.definition.column.TypeConverterAccess.java", "BodyUseAPI": [], "Fixed commit": "eb95ddf4f8cbaa92fddca6c58b5d61afe7e3ad90", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2015-11-15T22:28:49Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(generateBubbles(1))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8985/buggy-version/src.com.soontobe.joinpay.fragment.TransactionFragment.java", "BodyUseAPI": [], "Fixed commit": "e951b1ea74ff93cc33cdab2a0c409b45e9374735", "Url": "https://api.github.com/repos/idailylife/JoinPay", "Date": "2014-11-13T05:07:17Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(generateBubbles(1))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8985/buggy-version/src.com.soontobe.joinpay.fragment.TransactionFragment.java", "BodyUseAPI": [], "Fixed commit": "e951b1ea74ff93cc33cdab2a0c409b45e9374735", "Url": "https://api.github.com/repos/idailylife/JoinPay", "Date": "2014-11-13T05:07:17Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2561/buggy-version/src.main.java.com.mridang.storage.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "81ee026fa005122f5ba8a507b7f80e0d6f1be415", "Url": "https://api.github.com/repos/mridang/dashclock-storage", "Date": "2015-03-29T09:12:11Z"},
{"Line": "=>1023", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clazz == (java.lang.String.class)) && (map instanceof com.alibaba.fastjson.JSONObject)) { return ((T) (map.toString())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1209/buggy-version/src.main.java.com.alibaba.fastjson.util.TypeUtils.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.toString()"], "Fixed commit": "07e273de7524f95fd5e9b438457942fd8b86a9c1", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2017-05-02T13:20:19Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resultClass.isEnum()) { return ((T) (java.lang.Enum.valueOf(((java.lang.Class<java.lang.Enum>) (resultClass)), ((java.lang.String) (map.get(Defaults.VALUE_COL)))))); }else { return resultClass.cast(map.get(Defaults.VALUE_COL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7217/buggy-version/conserve.src.com.github.conserveorm.tools.ObjectFactory.java", "BodyUseAPI": ["java.lang.Class<T>.cast(java.lang.Object)"], "Fixed commit": "85cc4f8f50a8e383d6835c1784e8740e6d4fba35", "Url": "https://api.github.com/repos/ConserveORM/main", "Date": "2017-08-04T13:19:07Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bean.getVideoPath()) != null) { com.education.db.entity.CourseEntity entity = courses.get(0); entity.setVideoPath(bean.getVideoPath()); courseRepository.save(entity); return entity.getId(); }else if ((bean.getTitleImagePath()) != null) { com.education.db.entity.CourseEntity entity = courses.get(0); entity.setTitleImagePath(bean.getTitleImagePath()); courseRepository.save(entity); return entity.getId(); }else { throw new javax.ws.rs.BadRequestException((\"duplicate course name \" + (bean.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2526/buggy-version/src.main.java.com.education.service.CourseService.java", "BodyUseAPI": ["com.education.ws.CourseRegisterBean.getVideoPath()", "com.education.db.entity.CourseEntity.setTitleImagePath(bean.getTitleImagePath())", "com.education.db.entity.CourseEntity.setVideoPath(bean.getVideoPath())", "com.education.ws.CourseRegisterBean.getTitleImagePath()", "com.education.ws.CourseRegisterBean.getName()", "com.education.ws.CourseRegisterBean.getTitleImagePath()"], "Fixed commit": "2f0a0e1a65364452d5c83ba1e82f92f681a3eb9d", "Url": "https://api.github.com/repos/zhaoyi0113/zaozao", "Date": "2015-12-11T08:56:08Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ex instanceof java.io.FileNotFoundException) { newMessage = \"FileNotFoundException means that the credentials Jenkins is using is probably wrong. Or the user account does not have write access to the repo.\"; }else { newMessage = \"Could not update commit status of the Pull Request on GitHub.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8813/buggy-version/src.main.java.org.jenkinsci.plugins.ghprb.GhprbRepository.java", "BodyUseAPI": [], "Fixed commit": "f5bdc3e59f51707e06bf77caaae67dca797cd32c", "Url": "https://api.github.com/repos/jenkinsci/ghprb-plugin", "Date": "2015-05-07T14:36:04Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nextToken(false).equalsIgnoreCase(\")\")) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1238/buggy-version/src.com.github.taffy128s.tlcdbms.sqlparsers.SQLParser.java", "BodyUseAPI": [], "Fixed commit": "fe3320069a0350e7b52b9461a56e367b59d5adcb", "Url": "https://api.github.com/repos/taffy128s/TLC_DBMS", "Date": "2017-03-08T13:40:42Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 < l) { l = level; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/750/buggy-version/src.donnu.zolotarev.SpaceShip.Units.EnemySingleGun.java", "BodyUseAPI": [], "Fixed commit": "740680f7e98621a248f70c8ad9bfa405e5b29b4b", "Url": "https://api.github.com/repos/MrVilkaman/SpaceshipsBattle", "Date": "2014-11-03T19:33:44Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (g.getColor().equals(java.awt.Color.GREEN)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8445/buggy-version/KPSmart.src.gui.RouteViewIDWindow.java", "BodyUseAPI": [], "Fixed commit": "c9e87bf9059e6c1e81b07063b65a55e3fd8d618e", "Url": "https://api.github.com/repos/keyaral/SwenProject", "Date": "2014-05-21T10:45:57Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((background) != null) background.draw(delta, getX(), getY(), getWidth(), getHeight());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5752/buggy-version/src.com.osreboot.ridhvl.menu.component.HvlSlider.java", "BodyUseAPI": [], "Fixed commit": "1ac862abbdd58e236cbf4828e8c06b64bee62972", "Url": "https://api.github.com/repos/osreboot/Ridhvl", "Date": "2015-06-27T23:53:45Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cycle_remaining == 0) { cycle_remaining = 20; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2089/buggy-version/app.src.main.java.ca.nosrecettes.d3bba.diabloiiibountybonusact.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "7bcc5bd05a5ca464a0361dc09ace857c86250aed", "Url": "https://api.github.com/repos/algritz/Diablo-III-Bounty-Bonus-Act", "Date": "2016-05-29T19:37:43Z"},
{"Line": "=>832", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((code.op((emptyElseEnd - 1))) == (Op.JMP)) { int stackSize = stack.size(); emptyElseEnd = (emptyElseEnd - stackSize) + 1; if ((code.op((emptyElseEnd - 1))) == (Op.JMP)) { currentBranch.end = emptyElseEnd; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1270/buggy-version/src.unluac.decompile.Decompiler.java", "BodyUseAPI": ["unluac.decompile.Code.op(int)"], "Fixed commit": "b86670d2df84e70b5ec3a282571e3527ba57538b", "Url": "https://api.github.com/repos/trarck/unluac", "Date": "2014-08-25T10:34:24Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Dungeon.hero.buff(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (regenBuff != null) spend(((com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Regeneration.REGENERATION_DELAY) - (regenBuff.level()))); else spend(com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Regeneration.REGENERATION_DELAY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3776/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Regeneration.java", "BodyUseAPI": ["com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Regeneration.spend(((com.shatteredpixel.shatteredpixeldungeon.actors.buffs.Regeneration.REGENERATION_DELAY) - (regenBuff.level())))", "ChaliceOfBlood.chaliceRegen.level()"], "Fixed commit": "9224f1539a7c8ec8b5760b03c50a8f3773b500dd", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2014-08-29T23:32:30Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(maxNode.equals(\"-1\"))) { s.add(maxNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6109/buggy-version/src.cn.shawn.iem.ReverseEfficiencySampling.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "5537ec452f066e36254587e7707d22003479101f", "Url": "https://api.github.com/repos/zhuPATHng/InfluenceEfficiencyMaximization", "Date": "2016-05-13T17:32:05Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (stack.getItem().getUnlocalizedName().equals(VoidRPGItems.armorChestplate.getUnlocalizedName())) { return wurmatron.voidrpg.common.utils.DataHelper.getDataFromStack(stack, NBT.BODY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5851/buggy-version/src.main.java.wurmatron.voidrpg.common.utils.DataHelper.java", "BodyUseAPI": ["wurmatron.voidrpg.common.utils.DataHelper.getDataFromStack(net.minecraft.item.ItemStack,NBT.BODY)"], "Fixed commit": "757804fbce198785780db42f5ca89b89eb48f8ea", "Url": "https://api.github.com/repos/Wurmatron/VoidRPG", "Date": "2017-04-26T21:00:00Z"},
{"Line": "=>1014", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((specTopic.getRevision()) != null) && (!(specTopic.getRemoveTags(false).isEmpty()))) { log.error(java.lang.String.format(ProcessorConstants.WARN_TAGS_IGNORE_MSG, \"Revision\", specTopic.getLineNumber(), specTopic.getText())); valid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8126/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.processor.ContentSpecValidator.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.contentspec.utils.logging.ErrorLogger.error(java.lang.String)", "org.jboss.pressgang.ccms.contentspec.SpecTopic.getLineNumber()", "org.jboss.pressgang.ccms.contentspec.SpecTopic.getText()", "java.lang.String.format(ProcessorConstants.WARN_TAGS_IGNORE_MSG,java.lang.String,specTopic.getLineNumber(),specTopic.getText())"], "Fixed commit": "dd17bbd8f8a6aa5d1a6648a5a0e790a4ed0d9c26", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpecProcessor", "Date": "2013-09-01T22:42:34Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null != (getActivity())) && (this.isAdded())) { android.widget.Toast.makeText(getActivity(), R.string.network_err, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7915/buggy-version/lemon.lemon.src.main.java.com.PATHoningmeng.fragment.AblumDetailPlayListFragment.java", "BodyUseAPI": [], "Fixed commit": "c984a2233681b4ca06651bfb8968d2e25ef7ef8f", "Url": "https://api.github.com/repos/lemonstory/android", "Date": "2016-11-29T02:31:09Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstInputActive.get()) { calculateSecondInput(); }else { calculateFirstInput(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9126/buggy-version/app.src.main.java.com.pgssoft.mvvm.views.widgets.ExchangeWidget.java", "BodyUseAPI": [], "Fixed commit": "c073bec854d037185ed19664e29030e958c400b3", "Url": "https://api.github.com/repos/PGSSoft/AndroidMVVM", "Date": "2017-02-25T15:17:02Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.name) == null) || ((this.email) == null)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4661/buggy-version/app.src.main.java.com.zulip.android.models.Person.java", "BodyUseAPI": [], "Fixed commit": "f03a2a70815831c9500525d70798edea8bc0a328", "Url": "https://api.github.com/repos/Swati4star/zulip-android", "Date": "2016-10-01T19:39:47Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.googlecode.flickrjandroid.oauth.OAuthUtils.hasSigned()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (signed) { parameters.add(new com.googlecode.flickrjandroid.Parameter(com.googlecode.flickrjandroid.oauth.OAuthInterface.PARAM_OAUTH_CONSUMER_KEY, apiKey)); }else { parameters.add(new com.googlecode.flickrjandroid.Parameter(\"api_key\", apiKey)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3874/buggy-version/flickrj-android.src.main.java.com.googlecode.flickrjandroid.photosets.PhotosetsInterface.java", "BodyUseAPI": [], "Fixed commit": "cadd17cb3cc4b932a78bd83d4fea884c61bc981b", "Url": "https://api.github.com/repos/yuyang226/FlickrjApi4Android", "Date": "2013-01-18T03:54:01Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.googlecode.flickrjandroid.oauth.OAuthUtils.hasSigned()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (signed) { com.googlecode.flickrjandroid.oauth.OAuthUtils.addOAuthToken(parameters); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3874/buggy-version/flickrj-android.src.main.java.com.googlecode.flickrjandroid.photosets.PhotosetsInterface.java", "BodyUseAPI": [], "Fixed commit": "cadd17cb3cc4b932a78bd83d4fea884c61bc981b", "Url": "https://api.github.com/repos/yuyang226/FlickrjApi4Android", "Date": "2013-01-18T03:54:01Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getLineNo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (lineNo == 1) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4281/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck.java", "BodyUseAPI": [], "Fixed commit": "b9f232ffe08853fbfd0239d53d683d4fe5c6b817", "Url": "https://api.github.com/repos/alex-zuy/checkstyle", "Date": "2015-03-06T11:55:43Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (loaded) { fillLocationsAndResourceGrps(currentSub); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5467/buggy-version/PluginsAndFeatures.azure-toolkit-for-eclipse.com.microsoft.azuretools.azureexplorer.src.com.microsoft.azuretools.azureexplorer.forms.createrediscache.CreateRedisCacheForm.java", "BodyUseAPI": [], "Fixed commit": "49b84e330c92e865eca910e9d0291915d1eaf692", "Url": "https://api.github.com/repos/jdneo/azure-tools-for-java", "Date": "2017-05-21T12:16:08Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lobby.GameRoomManager.getRoomContainingUser(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (lvRoom.players.isEmpty()) rooms.remove(lvRoom);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1541/buggy-version/DemocracyPong_Dana.src.lobby.GameRoomManager.java", "BodyUseAPI": ["java.util.List<lobby.LobbyState.Room>.remove(lobby.LobbyState.Room)"], "Fixed commit": "3d071c528753ae7eada925b0d1876f89b87cc9c9", "Url": "https://api.github.com/repos/kcorman/cse461", "Date": "2013-12-13T05:28:11Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.verapdf.gf.model.impl.cos.COSObject.getDirectBase()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((reqArray.getType()) == (COSObjType.COS_ARRAY)) { return org.verapdf.gf.model.impl.cos.GFCosDocument.getRequirementsString(((org.verapdf.gf.model.impl.cos.COSArray) (reqArray))); }else if ((reqArray.getType()) == (COSObjType.COS_DICT)) { return org.verapdf.gf.model.impl.cos.GFCosDocument.getRequirementsString(((org.verapdf.gf.model.impl.cos.COSDictionary) (reqArray))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/556/buggy-version/validation-model.src.main.java.org.verapdf.gf.model.impl.cos.GFCosDocument.java", "BodyUseAPI": ["org.verapdf.gf.model.impl.cos.COSBase.getType()"], "Fixed commit": "cd79cda91217f692e23be14ffe61e076db048b08", "Url": "https://api.github.com/repos/veraPDF/veraPDF-validation", "Date": "2017-06-22T11:24:54Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (usePathFinder) { velocity2D.set(currentTile.getPosition()).sub(position2D).setLength(currentSpeed); this.setArriveTarget(currentTile); this.followExactPath = true; }else { this.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3837/buggy-version/core.src.com.esbjon.entities.MovingEntity.java", "BodyUseAPI": [], "Fixed commit": "10d2d3fd83ee44f3f59065005dbd2dee6caa5f74", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2016-03-13T18:45:04Z"},
{"Line": "=>527", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (usePathFinder) { this.followPath(); this.allowYchange = true; }else if (!(currentTile.isConnected(nextTile))) { if ((this) instanceof com.esbjon.entities.Squad) { java.lang.System.out.println(\"Moving entity Warning: moving into a map edge\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3837/buggy-version/core.src.com.esbjon.entities.MovingEntity.java", "BodyUseAPI": [], "Fixed commit": "10d2d3fd83ee44f3f59065005dbd2dee6caa5f74", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2016-03-13T18:45:04Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((table_1.getSelectedRow()) == (-1)) { javax.swing.JOptionPane.showMessageDialog(null, \"Voza\u010d nije izabran\", \"Info\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }else { vozniPark.View.PrikazAktivnostiVozaca prikaz = new vozniPark.View.PrikazAktivnostiVozaca(data.get(table_1.getSelectedRow())); prikaz.main(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9127/buggy-version/vozniPark.src.main.java.vozniPark.View.PregledVozaca.java", "BodyUseAPI": ["java.util.Vector<java.util.Vector<java.lang.String>>.get(int)", "javax.swing.JTable.getSelectedRow()"], "Fixed commit": "e26a9d8053d3050c71a3204378d68e1e86eec2ae", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim7", "Date": "2016-05-18T15:14:32Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((table_1.getSelectedRow()) == (-1)) { javax.swing.JOptionPane.showMessageDialog(null, \"Voza\u010d nije izabran\", \"Info\", javax.swing.JOptionPane.INFORMATION_MESSAGE); }else { vozniPark.View.PodaciOVozacu podaci = new vozniPark.View.PodaciOVozacu(table_1.getSelectedRow()); podaci.main(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9127/buggy-version/vozniPark.src.main.java.vozniPark.View.PregledVozaca.java", "BodyUseAPI": ["javax.swing.JTable.getSelectedRow()"], "Fixed commit": "e26a9d8053d3050c71a3204378d68e1e86eec2ae", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/SI2015Tim7", "Date": "2016-05-18T15:14:32Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (controllers.Secured.isLoggedIn(ctx())) { models.UserInfoDB.viewSurfer(controllers.Secured.getUserInfo(ctx()), surferFormData.slug); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7202/buggy-version/app.controllers.Application.java", "BodyUseAPI": [], "Fixed commit": "8778070f94a7c1cdb038c776bcf9e09c5a1ecc16", "Url": "https://api.github.com/repos/RobNamahoe/surferpedia", "Date": "2013-12-18T11:33:27Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (controllers.Secured.isLoggedIn(ctx())) { models.UserInfoDB.viewSurfer(controllers.Secured.getUserInfo(ctx()), slug); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7202/buggy-version/app.controllers.Application.java", "BodyUseAPI": [], "Fixed commit": "8778070f94a7c1cdb038c776bcf9e09c5a1ecc16", "Url": "https://api.github.com/repos/RobNamahoe/surferpedia", "Date": "2013-12-18T11:33:27Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((configProvider.invalidator()) == null) return getDataFromLoader(configProvider, record); else if (configProvider.invalidator().invalidate()) return getDataFromLoader(configProvider, record); else throw new java.lang.RuntimeException((((Locale.NOT_DATA_RETURN_WHEN_CALLING_OBSERVABLE_LOADER) + \" \") + (configProvider.getKey())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1517/buggy-version/rx_cache.src.main.java.io.rx_cache.internal.ProxyProviders.java", "BodyUseAPI": ["io.rx_cache.internal.ProxyProviders.3.getDataFromLoader(ProxyTranslator.ConfigProvider,io.rx_cache.Record)", "io.rx_cache.internal.ProxyProviders.3.getDataFromLoader(ProxyTranslator.ConfigProvider,io.rx_cache.Record)", "configProvider.invalidator().invalidate()", "ProxyTranslator.ConfigProvider.getKey()", "ProxyTranslator.ConfigProvider.invalidator()"], "Fixed commit": "c4e3bc33abf29a04e214347d909e13fa9ac96489", "Url": "https://api.github.com/repos/VictorAlbertos/RxCache", "Date": "2016-02-02T12:29:55Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ac.il.technion.twc.api.interfaces.ITweetsRepository.getRootTweet(ac.il.technion.twc.api.models.Tweet)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (rootTweet == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2361/buggy-version/twitter8.src.main.java.ac.il.technion.twc.impl.models.partB.TweetsRetweetsAmountQueryHandler.java", "BodyUseAPI": [], "Fixed commit": "25f49d83261ab61c62d4c54a0e76386ea71de387", "Url": "https://api.github.com/repos/snudler6/softwareDesignHW4", "Date": "2014-06-20T13:55:52Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasToken) { dest.writeString(token.getClass().getName()); dest.writeParcelable(token, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/719/buggy-version/libary.src.com.cocosw.undobar.UndoBarController.java", "BodyUseAPI": [], "Fixed commit": "9e7d8154c2fe8cf7fc0443cdd1bd59004a78fff3", "Url": "https://api.github.com/repos/heavyplayer/UndoBar", "Date": "2013-11-20T10:48:44Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (hasToken) { try { token = source.readParcelable(java.lang.Class.forName(source.readString()).getClassLoader()); } catch (java.lang.ClassNotFoundException e) { throw new java.lang.IllegalStateException(\"Undo token class not found.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/719/buggy-version/libary.src.com.cocosw.undobar.UndoBarController.java", "BodyUseAPI": [], "Fixed commit": "9e7d8154c2fe8cf7fc0443cdd1bd59004a78fff3", "Url": "https://api.github.com/repos/heavyplayer/UndoBar", "Date": "2013-11-20T10:48:44Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getSecurityManager()) == null) { classLoader = java.lang.Module.class.getClassLoader(); }else { classLoader = java.security.AccessController.doPrivileged(new java.security.PrivilegedAction<java.lang.ClassLoader>() { @java.lang.Override public java.lang.ClassLoader run() { return java.lang.Module.class.getClassLoader(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4966/buggy-version/api.src.main.java.org.jboss.marshalling.ModularClassResolver.java", "BodyUseAPI": [], "Fixed commit": "a8e62a97271e302c7ef8d66311cfb0992b18974c", "Url": "https://api.github.com/repos/ropalka/jboss-marshalling", "Date": "2016-01-11T00:57:00Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getSecurityManager()) == null) { classLoader = module.getClassLoader(); }else { classLoader = java.security.AccessController.doPrivileged(new java.security.PrivilegedAction<java.lang.ClassLoader>() { @java.lang.Override public java.lang.ClassLoader run() { return module.getClassLoader(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4966/buggy-version/api.src.main.java.org.jboss.marshalling.ModularClassResolver.java", "BodyUseAPI": [], "Fixed commit": "a8e62a97271e302c7ef8d66311cfb0992b18974c", "Url": "https://api.github.com/repos/ropalka/jboss-marshalling", "Date": "2016-01-11T00:57:00Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getSecurityManager()) == null) { classLoader = java.lang.Module.class.getClassLoader(); }else { classLoader = java.security.AccessController.doPrivileged(new java.security.PrivilegedAction<java.lang.ClassLoader>() { @java.lang.Override public java.lang.ClassLoader run() { return java.lang.Module.class.getClassLoader(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4966/buggy-version/api.src.main.java.org.jboss.marshalling.ModularClassResolver.java", "BodyUseAPI": [], "Fixed commit": "a8e62a97271e302c7ef8d66311cfb0992b18974c", "Url": "https://api.github.com/repos/ropalka/jboss-marshalling", "Date": "2016-01-11T00:57:00Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getIndexOpPreviousElement(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (resultAst == null) { whitespaceFollowedAst = ast; }else { whitespaceFollowedAst = com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getIndexOpPreviousElement(ast); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6706/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": [], "Fixed commit": "4f1bd876b608da6e614f384b10ed5838de18cdd1", "Url": "https://api.github.com/repos/sergileon/checkstyle", "Date": "2017-08-30T08:52:53Z"},
{"Line": "=>368", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getExpandedState()) == (bibliothek.gui.dock.toolbar.expand.ExpandedState.EXPANDED)) && ((getDockableCount()) == 1)) { station = getDockable(0).asDockStation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7588/buggy-version/docking-frames-ext-toolbar.src.bibliothek.gui.dock.AbstractToolbarDockStation.java", "BodyUseAPI": [], "Fixed commit": "b8fc10ceaf65e29dc144d617288450f396ff363a", "Url": "https://api.github.com/repos/Benoker/DockingFrames", "Date": "2012-11-21T18:57:22Z"},
{"Line": "=>371", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (station == null) { station = this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7588/buggy-version/docking-frames-ext-toolbar.src.bibliothek.gui.dock.AbstractToolbarDockStation.java", "BodyUseAPI": [], "Fixed commit": "b8fc10ceaf65e29dc144d617288450f396ff363a", "Url": "https://api.github.com/repos/Benoker/DockingFrames", "Date": "2012-11-21T18:57:22Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fechaInicio.equals(fechaFin)) { SQL_WHERE += (\" AND fecha='\" + fechaInicio) + \"'\"; }else { SQL_WHERE += (((\" AND fecha BETWEEN '\" + fechaInicio) + \"' AND '\") + fechaFin) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/554/buggy-version/src.main.java.com.tienda.dao.GenericDAOImpl.java", "BodyUseAPI": [], "Fixed commit": "060e0992c4b8150b05f7ecc04de5a54ae9b48f32", "Url": "https://api.github.com/repos/jefe10jav/SuperTienda-Hibernate", "Date": "2017-08-23T05:11:26Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) != null) { if ((classes.size()) == 0) { classes.add(\"Select Class\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6946/buggy-version/TurboTask.app.src.main.java.com.example.monil.turbotask.AddTaskFragment.java", "BodyUseAPI": [], "Fixed commit": "f50dbfc7d1e261b9e6415d591212b94a1d332085", "Url": "https://api.github.com/repos/monilpatel/TurboTask", "Date": "2017-04-30T22:55:56Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type == (com.alibaba.fastjson.JSON.class)) || (type == (com.alibaba.fastjson.JSONObject.class))) { return ((T) (parser.parse())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4733/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "d25d29efd6cca59c81a002e7809832e8d4ec9f70", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2014-11-19T03:02:40Z"},
{"Line": "=>927", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((picDimsArray.length) == 1) { mImageReader = android.media.ImageReader.newInstance(mPreviewSize.getWidth(), mPreviewSize.getHeight(), ImageFormat.JPEG, 2); }else { java.lang.String picWidth = picDimsArray[0]; java.lang.String picHeight = picDimsArray[1]; mImageReader = android.media.ImageReader.newInstance(java.lang.Integer.parseInt(picWidth), java.lang.Integer.parseInt(picHeight), ImageFormat.JPEG, 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5313/buggy-version/app.src.main.java.com.alexhart.maglev2.PreviewFrag.java", "BodyUseAPI": [], "Fixed commit": "2fba5a342c5e1087c30276f0659eb11d0359f8e0", "Url": "https://api.github.com/repos/harta55/MagLev2", "Date": "2015-12-31T22:49:41Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((outputFormat.equals(FileOutputFormat.SVG)) && (!(archiveSVGOutput))) { outputPath = java.nio.file.Files.createDirectories(outputPath); }else { outputPath = java.nio.file.Files.createFile(outputPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5502/buggy-version/core.management.src.main.java.uk.ac.ebi.interpro.scan.management.model.implementations.WriteOutputStep.java", "BodyUseAPI": [], "Fixed commit": "b0ea90d840cc38ef403e0dc657f00a77c49a45df", "Url": "https://api.github.com/repos/ebi-pf-team/interproscan", "Date": "2016-04-13T14:31:52Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (method.equals(SupportedMethod.json)) { serializationProperties.put(SerializationProperty.MEDIA_TYPE, (((InternetMediaType.APPLICATION_JSON.getMediaType()) + \"; charset=\") + (getDefaultEncoding()))); }else if (method.equals(SupportedMethod.binary)) { serializationProperties.put(SerializationProperty.MEDIA_TYPE, InternetMediaType.APPLICATION_OCTET_STREAM.getMediaType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8498/buggy-version/exquery-restxq.src.main.java.org.exquery.restxq.impl.serialization.AbstractRestXqServiceSerializer.java", "BodyUseAPI": ["org.exquery.serialization.annotation.MethodAnnotation.SupportedMethod.equals(SupportedMethod.binary)"], "Fixed commit": "47552f3ab2705ba0bf2f3d711df55012ddfe3dbe", "Url": "https://api.github.com/repos/exquery/exquery", "Date": "2013-01-21T21:50:37Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(object instanceof org.xtremeware.iudex.entity.CourseEntity)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5905/buggy-version/src.main.java.org.xtremeware.iudex.entity.ConfirmationKeyEntity.java", "BodyUseAPI": [], "Fixed commit": "63fc1b2c1ad80517c6f0cfc6cb6981c9c414f86e", "Url": "https://api.github.com/repos/saaperezru/iudex", "Date": "2012-05-31T14:52:48Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.wso2.carbon.repository.api.utils.METHODS, java.util.Set<org.wso2.carbon.repository.api.handlers.Handler>>.get(org.wso2.carbon.repository.api.utils.METHODS)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (handlers != null) { handlers.remove(handler); handlerMap.put(method, handlers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3551/buggy-version/repository.src.main.java.org.wso2.carbon.repository.core.handlers.HandlerManager.java", "BodyUseAPI": ["java.util.Set<org.wso2.carbon.repository.api.handlers.Handler>.remove(org.wso2.carbon.repository.api.handlers.Handler)", "java.util.Map<org.wso2.carbon.repository.api.utils.METHODS, java.util.Set<org.wso2.carbon.repository.api.handlers.Handler>>.put(org.wso2.carbon.repository.api.utils.METHODS,java.util.Set<org.wso2.carbon.repository.api.handlers.Handler>)"], "Fixed commit": "1f30da346b31322baa47cfcbf93a1e641da7ee6e", "Url": "https://api.github.com/repos/erandasooriyabandara/Repository", "Date": "2014-04-07T21:12:27Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userSavedForms) { now.setYear(((now.getYear()) - 5)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1471/buggy-version/src.java.com.idega.block.form.presentation.SavedForms.java", "BodyUseAPI": [], "Fixed commit": "c59e7cfe8ef8234f9d6b475feee74873cf7f5020", "Url": "https://api.github.com/repos/idega/com.idega.block.form", "Date": "2014-03-10T08:15:49Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ex.getName().equals(getString(R.string.no_exercise_choosen))) de.skubware.opentraining.ExerciseType.removeExerciseType(ex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3804/buggy-version/src.de.skubware.opentraining.SelectExercisesActivity.java", "BodyUseAPI": ["de.skubware.opentraining.ExerciseType.removeExerciseType(de.skubware.opentraining.ExerciseType)"], "Fixed commit": "f38c6c0fdbb121dc56d13d97de38cd24e2063937", "Url": "https://api.github.com/repos/chaosbastler/opentraining", "Date": "2012-08-23T10:16:24Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((RoomCMP(newRoom, me)) || (list.contains(newRoom)))) { list.add(newRoom); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7773/buggy-version/Group9_Deadwood.Tile.java", "BodyUseAPI": ["java.util.ArrayList<Group9_Deadwood.Room>.add(Group9_Deadwood.Room)"], "Fixed commit": "06cae01c1fe7e5c60d77edd4bed362c348096023", "Url": "https://api.github.com/repos/GrahamRobertsW/projectDeadwood", "Date": "2016-02-22T19:54:07Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pos) < 2) { Group9_Deadwood.Tile Temp = board.getTile(((pos) + 2)); for (int i : doors) { switch (i) { case 0 : insertIntoDoors(outDoors[6], list, R); break; case 1 : insertIntoDoors(outDoors[5], list, R); break; case 4 : insertIntoDoors(Temp.getRoom(1), list, R); insertIntoDoors(outDoors[1], list, R); break; case 5 : insertIntoDoors(Temp.getRoom(0), list, R); insertIntoDoors(outDoors[0], list, R); break; default : break; } } }else { Group9_Deadwood.Tile Temp = board.getTile(((pos) - 2)); for (int i : doors) { switch (i) { case 0 : insertIntoDoors(Temp.getRoom(6), list, R); insertIntoDoors(outDoors[6], list, R); break; case 1 : insertIntoDoors(Temp.getRoom(5), list, R); insertIntoDoors(outDoors[5], list, R); break; case 5 : insertIntoDoors(outDoors[1], list, R); break; case 6 : insertIntoDoors(outDoors[0], list, R); break; default : break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7773/buggy-version/Group9_Deadwood.Tile.java", "BodyUseAPI": ["Group9_Deadwood.Board.getTile(int)", "Group9_Deadwood.Board.getTile(int)"], "Fixed commit": "06cae01c1fe7e5c60d77edd4bed362c348096023", "Url": "https://api.github.com/repos/GrahamRobertsW/projectDeadwood", "Date": "2016-02-22T19:54:07Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dungeon.debug.DebugTools.give(issuedCommand.getArguments()[1])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (gaveItem) { return new org.dungeon.debug.DebugCommandResult(0, true); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2179/buggy-version/src.main.java.org.dungeon.debug.DebugTools.java", "BodyUseAPI": [], "Fixed commit": "3ae41caf2b444b1e5d600faa3377facc826d00a4", "Url": "https://api.github.com/repos/bernardosulzbach/dungeon", "Date": "2015-06-13T06:00:15Z"},
{"Line": "=>547", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currenttag) != null) { currentJournal.setmTagID(currenttag.getmTagID()); currentJournal.setmTagName(currenttag.getmTagName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8512/buggy-version/MyEveryDay.app.src.main.java.compsci290.edu.duke.myeveryday.notes.JournalEditorFragment.java", "BodyUseAPI": [], "Fixed commit": "9accfc4f4549fa71cfbb0ecb12c11ef707e6e115", "Url": "https://api.github.com/repos/lesswifi/Everyday", "Date": "2017-04-28T18:47:09Z"},
{"Line": "=>1751", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.min(int,long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (waitTime > 0) { wait(waitTime); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8489/buggy-version/src.freenet.node.RequestSender.java", "BodyUseAPI": ["freenet.node.RequestSender.wait(int)"], "Fixed commit": "5b93eac90ab4906b497521f0194f9562f5288459", "Url": "https://api.github.com/repos/freenet/fred", "Date": "2011-08-03T00:34:34Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { showLogin(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8878/buggy-version/javaplay.app.src.main.java.com.levigilad.javaplay.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "09a15f17b6b253cc3502bbfa88c5cbc887825a8e", "Url": "https://api.github.com/repos/idanlv/JavaPlay_Android", "Date": "2016-10-24T09:41:36Z"},
{"Line": "=>854", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m_teamspeak) != null) o = callMethod(m_teamspeak, java.lang.String.join(\"/\", args)); else o = new com.SIMRacingApps.Data(path, ((\"ERROR: (\" + path) + \") TeamSpeak not loaded\"), \"String\", com.SIMRacingApps.Data.State.ERROR);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5982/buggy-version/src.com.SIMRacingApps.SIMPlugin.java", "BodyUseAPI": [], "Fixed commit": "41a1f1c49b17a07fd9e3b82eeba44f996b1bfc85", "Url": "https://api.github.com/repos/SIMRacingApps/SIMRacingAppsServer", "Date": "2017-06-26T01:40:41Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isWhiteSpace(ch)) { return getNextToken(); }else if (isComment(ch)) { char c = ((char) (tryRead(in))); while (!(isEndOfLine(c))) { c = ((char) (tryRead(in))); } return getNextToken(); }else if (ch == '(') return new csc4101.Token(Token.LPAREN); else if (ch == ')') return new csc4101.Token(Token.RPAREN); else if (ch == '.') return new csc4101.Token(Token.DOT); else if (ch == '#') { try { bite = in.read(); } catch (java.io.IOException e) { java.lang.System.err.println((\"We fail: \" + (e.getMessage()))); } if (bite == (-1)) { java.lang.System.err.println(\"Unexpected EOF following #\"); return null; } ch = ((char) (bite)); if (ch == 't') return new csc4101.Token(Token.TRUE); else if (ch == 'f') return new csc4101.Token(Token.FALSE); else { java.lang.System.err.println(((\"Illegal character '\" + ((char) (ch))) + \"' following #\")); return getNextToken(); } }else if (isQuote(ch)) { int i = 0; char c = ((char) (tryRead(in))); while (!(isQuote(c))) { if (c == '\\\\') { char escaped = ((char) (tryRead(in))); if (isEscapedChar(c, escaped)) { buf[i] = ((byte) (escaped)); }else { java.lang.System.err.println(\"Illegal character encountered in string, returning error string\"); return new csc4101.StrToken(\"Error: String Format Exception\"); } }else { buf[i] = ((byte) (c)); } i++; c = ((char) (tryRead(in))); } java.lang.String quotedString = new java.lang.String(java.util.Arrays.copyOfRange(buf, 0, i)); return new csc4101.StrToken(quotedString); }else if (isNumber(ch)) { char[] intChars = new char[20]; intChars[0] = ch; int i = 1; char c = ((char) (tryRead(in))); while (!(isDelimiter(c))) { if (i == (intSize)) throw new java.lang.ArrayIndexOutOfBoundsException(); intChars[i] = c; c = ((char) (tryRead(in))); i++; } int tokenValue = java.lang.Integer.parseInt(new java.lang.String(java.util.Arrays.copyOfRange(intChars, 0, i))); tryUnread(in, c); return new csc4101.IntToken(tokenValue); }else if ((((ch == '+') || (ch == '-')) || (ch == '/')) || (ch == '*')) return new csc4101.IdentToken(java.lang.Character.toString(ch)); else if (isValidInitial(ch)) { buf[0] = ((byte) (ch)); int i = 1; char c = ((char) (tryRead(in))); while (isValidSubsequent(c)) { buf[i] = ((byte) (c)); c = ((char) (tryRead(in))); if (i == ((bufSize) - 1)) throw new java.lang.ArrayIndexOutOfBoundsException(); i++; } java.lang.String ident = new java.lang.String(java.util.Arrays.copyOfRange(buf, 0, i)); buf = new byte[bufSize]; tryUnread(in, c); return new csc4101.IdentToken(ident); }else { java.lang.System.err.println(((\"Illegal input character '\" + ((char) (ch))) + '\\'')); return getNextToken(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/922/buggy-version/src.csc4101.Scanner.java", "BodyUseAPI": ["csc4101.Scanner.isComment(char)"], "Fixed commit": "cf930bb83033fe2da26aff59fa1181ee8ae6cc88", "Url": "https://api.github.com/repos/kcamer2/schemeinterpreter", "Date": "2014-10-02T00:15:18Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((call.getNumberOfUses()) > parameterIndex) { int p = call.getUse(parameterIndex); com.ibm.wala.ipa.slicer.Statement s = new com.ibm.wala.ipa.slicer.ParamCaller(caller, i, p); addNode(s); result.add(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4120/buggy-version/com.ibm.wala.core.src.com.ibm.wala.ipa.slicer.SDG.java", "BodyUseAPI": ["com.ibm.wala.ssa.SSAAbstractInvokeInstruction.getUse(int)"], "Fixed commit": "30bc2858c4008b042fbc0d77209e114c7767c038", "Url": "https://api.github.com/repos/Pfarrer/WALA", "Date": "2016-08-24T00:59:08Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (node == null) { node = org.talend.repository.model.RepositoryNodeUtilities.getRepositoryNode(((org.talend.repository.model.IRepositoryNode) (view.getRoot())), curNode, view, expanded); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7683/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.repository.model.RepositoryNodeUtilities.java", "BodyUseAPI": [], "Fixed commit": "8adc470b1797c5c8a8c0340cf9c1ed5b1a82b6d5", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-07-02T08:44:27Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["view.getRoot().getRootRepositoryNode(curNode.getRepositoryObjectType())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (nodeFromType != null) { node = org.talend.repository.model.RepositoryNodeUtilities.getRepositoryNode(nodeFromType, curNode, view, expanded); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7683/buggy-version/main.plugins.org.talend.core.runtime.src.main.java.org.talend.repository.model.RepositoryNodeUtilities.java", "BodyUseAPI": ["org.talend.repository.model.RepositoryNodeUtilities.getRepositoryNode(org.talend.repository.model.IRepositoryNode,org.talend.core.model.repository.IRepositoryViewObject,org.talend.repository.ui.views.IRepositoryView,boolean)"], "Fixed commit": "8adc470b1797c5c8a8c0340cf9c1ed5b1a82b6d5", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-07-02T08:44:27Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.isCancelled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3521/buggy-version/src.tv.mineinthebox.bukkit.essentials.events.players.AfkChecks.java", "BodyUseAPI": [], "Fixed commit": "320a704a1475ca76739e9132b72a476b2adf4d51", "Url": "https://api.github.com/repos/xEssentials/xEssentials", "Date": "2014-11-23T18:41:33Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.isCancelled()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3521/buggy-version/src.tv.mineinthebox.bukkit.essentials.events.players.AfkChecks.java", "BodyUseAPI": [], "Fixed commit": "320a704a1475ca76739e9132b72a476b2adf4d51", "Url": "https://api.github.com/repos/xEssentials/xEssentials", "Date": "2014-11-23T18:41:33Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((errorLabelPosX) > 0) { canvas.save(); canvas.translate(((textPaint.measureText(error.toString())) + ((getWidth()) / 2)), 0); canvas.drawText(error.toString(), ((startX + (rightLeftSpinnerPadding)) - (errorLabelPosX)), startYErrorLabel, textPaint); canvas.restore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4809/buggy-version/library.src.main.java.fr.ganfra.materialspinner.MaterialSpinner.java", "BodyUseAPI": ["android.graphics.Canvas.drawText(java.lang.String,int,int,android.text.TextPaint)"], "Fixed commit": "9672c51e4781aea02255eca8773685202036a203", "Url": "https://api.github.com/repos/ganfra/MaterialSpinner", "Date": "2015-10-13T08:14:42Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.exists()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (exists) { f.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1330/buggy-version/android-geth.src.main.java.com.sqli.blockchain.android_geth.Utils.java", "BodyUseAPI": [], "Fixed commit": "474c2b4895ca3e25006b2310d3c65db983e04af3", "Url": "https://api.github.com/repos/ethmobile/ethdroid", "Date": "2017-01-21T10:06:00Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getBooleanExtra(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resetDatadir) { deleteDatadir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1330/buggy-version/android-geth.src.main.java.com.sqli.blockchain.android_geth.EthereumService.java", "BodyUseAPI": [], "Fixed commit": "474c2b4895ca3e25006b2310d3c65db983e04af3", "Url": "https://api.github.com/repos/ethmobile/ethdroid", "Date": "2017-01-21T10:06:00Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((relPath.charAt(0)) != '.') { relPath = \"./\".concat(relPath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1465/buggy-version/src.jballant.CommonJSAutoComplete.completion.JSRequireCompletionProvider.java", "BodyUseAPI": ["java.lang.String.concat(java.lang.String)"], "Fixed commit": "e2a3ace39564150f1f4311c76433019f0942b0da", "Url": "https://api.github.com/repos/jballant/CommonJSAutoComplete", "Date": "2014-07-31T20:09:38Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Object>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (value != null) { entries.put(whitelistedKeys.get(i), value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5402/buggy-version/src.main.java.com.github.jpoetker.spike.session.CustomRedisHttpSessionConfiguration.java", "BodyUseAPI": ["java.util.Map<java.lang.Object, java.lang.Object>.put(java.lang.Object,java.lang.Object)"], "Fixed commit": "525d89c929aa55f1a8562e13e9e1c7cb79976a4c", "Url": "https://api.github.com/repos/jpoetker/session", "Date": "2017-08-10T13:29:48Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((finishedJobs.size()) > 0) average = totaltime / (finishedJobs.size());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5530/buggy-version/src.org.cloudsicle.master.Monitor.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.Integer, org.cloudsicle.messages.JobMetaData>.size()"], "Fixed commit": "a36798fc65efa47adb2f312a29e6d1691b29317f", "Url": "https://api.github.com/repos/ChrisTitos/CloudSicle", "Date": "2013-10-30T10:53:03Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isMaterializeLoaded())) { injectDebugJs(MaterialDebugResources.INSTANCE.materializeJsDebug()); injectDebugJs(MaterialDebugResources.INSTANCE.animationJsDebug()); injectDebugJs(MaterialDebugResources.INSTANCE.shrinkJsDebug()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8833/buggy-version/gwt-material.src.main.java.gwt.material.design.client.MaterialDesignDebugBase.java", "BodyUseAPI": [], "Fixed commit": "dbde51bb7e2a9e9cd4f95957cd0c93b80770f3da", "Url": "https://api.github.com/repos/GwtMaterialDesign/gwt-material", "Date": "2017-01-05T02:56:40Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gwt.material.design.client.MaterialDesignBase.isMaterializeLoaded())) { gwt.material.design.client.MaterialDesignBase.injectJs(MaterialResources.INSTANCE.materializeJs()); gwt.material.design.client.MaterialDesignBase.injectJs(MaterialResources.INSTANCE.animationJs()); gwt.material.design.client.MaterialDesignBase.injectJs(MaterialResources.INSTANCE.shrinkJs()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8833/buggy-version/gwt-material.src.main.java.gwt.material.design.client.MaterialDesignBase.java", "BodyUseAPI": [], "Fixed commit": "dbde51bb7e2a9e9cd4f95957cd0c93b80770f3da", "Url": "https://api.github.com/repos/GwtMaterialDesign/gwt-material", "Date": "2017-01-05T02:56:40Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (name != null) postDataParams.put(\"name\", name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1211/buggy-version/app.src.main.java.cz.tmapy.android.iredoviewer.gcm.GcmRegistrationService.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "6d87f2691477499c1b66a5b6c025588e6907b799", "Url": "https://api.github.com/repos/T-MAPY/IREDOViewer", "Date": "2016-03-01T09:23:41Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (email != null) postDataParams.put(\"email\", email);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1211/buggy-version/app.src.main.java.cz.tmapy.android.iredoviewer.gcm.GcmRegistrationService.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "6d87f2691477499c1b66a5b6c025588e6907b799", "Url": "https://api.github.com/repos/T-MAPY/IREDOViewer", "Date": "2016-03-01T09:23:41Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameOver) == true) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4781/buggy-version/Woo.java", "BodyUseAPI": [], "Fixed commit": "53e4b2790dcd634930eab9b48fe3d02c1034abce", "Url": "https://api.github.com/repos/shivasuryan-vummidi/Solid-FOURtress", "Date": "2017-01-13T03:01:56Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((PassedDataContainer.bscMscMed) == true) { progress = android.app.ProgressDialog.show(this, \"Hole Daten\", \"Bitte warten.\", true); com.example.uzhvorlesungen.threading.ParsingMedLecturesAsyncTask asyncTask = new com.example.uzhvorlesungen.threading.ParsingMedLecturesAsyncTask(this, link); asyncTask.execute(); }else { progress = android.app.ProgressDialog.show(this, \"Hole Daten\", \"Bitte warten.\", true); com.example.uzhvorlesungen.threading.ParsingLecturesAsyncTask asyncTask = new com.example.uzhvorlesungen.threading.ParsingLecturesAsyncTask(link, this); asyncTask.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4962/buggy-version/src.com.example.uzhvorlesungen.activity.majorminor.MajorMinorActivity.java", "BodyUseAPI": [], "Fixed commit": "e2cb05ab46a76ff5a6adbc08f31efbcb485a5b97", "Url": "https://api.github.com/repos/gmazlami/UZHVorlesungenApp", "Date": "2014-10-01T00:04:30Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["textView.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((title.contains(\"Bachelor\")) && (title.contains(\"Humanmedizin\"))) { com.example.uzhvorlesungen.activity.majorminor.PassedDataContainer.bscMscMed = true; }else if ((title.contains(\"Master\")) && (title.contains(\"Humanmedizin\"))) { com.example.uzhvorlesungen.activity.majorminor.PassedDataContainer.bscMscMed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4962/buggy-version/src.com.example.uzhvorlesungen.activity.TitlesActivity.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "e2cb05ab46a76ff5a6adbc08f31efbcb485a5b97", "Url": "https://api.github.com/repos/gmazlami/UZHVorlesungenApp", "Date": "2014-10-01T00:04:30Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_facetCountCollector) != null) { collectTotalGrous(); _facetCountCollector = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2332/buggy-version/bobo-browse.src.com.browseengine.bobo.sort.SortCollectorImpl.java", "BodyUseAPI": [], "Fixed commit": "2cf9fcb94668d28bdce0c6a6e707dd7ddc3e02ba", "Url": "https://api.github.com/repos/wonlay/bobo", "Date": "2011-08-29T17:21:15Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((ss[i].substring(0)) == \"\\\"\") & ((ss[i].substring(((ss[i].length()) - 1))) == \"\\\"\")) ss[i] = ss[i].substring(1, ((ss[i].length()) - 2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8871/buggy-version/src.com.dcc.unsas.main.unsas.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "44d5bfb02442c0d9f2b90237ab2b3d233142add2", "Url": "https://api.github.com/repos/harrysouthworth/unsas", "Date": "2015-10-06T12:09:29Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["database.DBConnection.ExecuteQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (rs.next()) id = rs.getInt(1); else java.lang.System.err.println(\"Failed to obtain question id of created question.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9056/buggy-version/Quizicle.src.quiz.QuestionBank.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(int)"], "Fixed commit": "3f9f42e2cca5c5941be86ab890d161e1b6d4ac1c", "Url": "https://api.github.com/repos/brianch5351/Quizicle", "Date": "2011-11-30T17:08:42Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((columnIndex - 1) >= 0) && (sites[rowIndex][(columnIndex - 1)])) { int gridIndexOfLeft = gridIndexFromXY(rowIndex, (j - 1)); grid.union(gridIndexOfCurrent, gridIndexOfLeft); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4199/buggy-version/Percolation.src.Percolation.java", "BodyUseAPI": ["Percolation.gridIndexFromXY(int,int)"], "Fixed commit": "4c0ccaeac5173b42985d703414f903d42dca68f1", "Url": "https://api.github.com/repos/raosid/ApplicationsOfAlgorithms", "Date": "2014-12-17T08:13:03Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(stack.empty())) { throw new ru.mipt.java2016.homework.base.task1.ParsingException(\"StackTrace\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/495/buggy-version/homework-g597-shirokova.src.main.java.ru.mipt.java2016.homework.g597.shirokova.task1.MyPerfectCalculator.java", "BodyUseAPI": [], "Fixed commit": "b85cda4cdf6d5a5eef74ca4062f6baf1fbe6452b", "Url": "https://api.github.com/repos/fediq/mipt-java-2016", "Date": "2016-10-14T05:07:51Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.tbd.appprototype.MyListsActivity.getApplication()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((app.getCurrentUser().getImageURL().length()) > 0) { util.BlobImageLoaderUtil imageLoader = new util.BlobImageLoaderUtil(); imageLoader.loadImage(app.getCurrentUser().getImageURL(), profileImage, 550); }else { android.graphics.Bitmap bm = android.graphics.BitmapFactory.decodeResource(getResources(), R.drawable.no_image_icon); java.lang.String encodedString = util.ConvertToBlobUtil.convertToBlob(bm, \"png\", this); util.BlobImageLoaderUtil imageLoader = new util.BlobImageLoaderUtil(); imageLoader.loadImage(encodedString, profileImage, 550); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7824/buggy-version/AppPrototype.app.src.main.java.com.tbd.appprototype.MyListsActivity.java", "BodyUseAPI": ["util.BlobImageLoaderUtil.loadImage(app.getCurrentUser().getImageURL(),android.widget.ImageView,int)", "app.getCurrentUser().getImageURL()", "com.tbd.appprototype.TBDApplication.getCurrentUser()"], "Fixed commit": "2041e5db85d890f2ab3fd94211ea813750a6885e", "Url": "https://api.github.com/repos/ethanln/CS456TBD", "Date": "2016-04-01T02:02:04Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((swarmInformation.getType().getType()) == (type.getType())) inspireDirection += (globalIncrement * (weights[0])) * ((swarmInformation.getBestPosition()[i]) - (position[i]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2669/buggy-version/src.pl.edu.agh.mpso.species.SpeciesParticleUpdate.java", "BodyUseAPI": ["pl.edu.agh.mpso.swarm.SwarmInformation.getBestPosition()"], "Fixed commit": "ce5e9617bde7aadde9d99c3c46490bc1d0c15f8f", "Url": "https://api.github.com/repos/zuzannachrzastek/multispecies-PSO", "Date": "2017-05-18T17:19:06Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((car.dir) > 0) { (segmentFlow[car.segment])++; }else { (segmentFlow[car.segment])--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9067/buggy-version/oneway.dumb.Player.java", "BodyUseAPI": [], "Fixed commit": "c0721a66ed5a7d9016642468d1b8ed425df47f54", "Url": "https://api.github.com/repos/rubyrobinson/oneway", "Date": "2013-10-05T15:14:40Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((portfolios.size()) > 0) { portfolioListAdapter = new ru.sergjav.android.micexportfolio.adapters.PortfolioListAdapter(getContext(), portfolios); portfoliosView.setAdapter(portfolioListAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3420/buggy-version/app.src.main.java.ru.sergjav.android.micexportfolio.PortfolioListFragment.java", "BodyUseAPI": [], "Fixed commit": "67bd4a0a775fd4586f81071e5c234ec6256a4ec6", "Url": "https://api.github.com/repos/SergJ4/MICEXPortfolio", "Date": "2016-09-04T06:34:57Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsCheater) { savedInstanceState.putBoolean(com.bignerdranch.android.geoquiz.QuizActivity.IS_A_CHEATER, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6850/buggy-version/app.src.main.java.com.bignerdranch.android.geoquiz.QuizActivity.java", "BodyUseAPI": [], "Fixed commit": "b11ed6dc2fccf14c78363df83e8b23953f0e36f5", "Url": "https://api.github.com/repos/john-mckillip/GeoQuiz_Android_App", "Date": "2015-01-20T19:19:01Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["grisu.gricli.command.AttachCommand.getAllFiles(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((files.length) == 0) { throw new grisu.gricli.GricliRuntimeException(\"no files attached\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4428/buggy-version/src.main.java.grisu.gricli.command.AttachCommand.java", "BodyUseAPI": [], "Fixed commit": "f17b2b4b622bbdbdff9dd6c8bb059656ff917e46", "Url": "https://api.github.com/repos/grisu/gricli", "Date": "2011-06-07T21:07:32Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.lang.Character.isISOControl(chr)) { sb.append(\"&#x\"); sb.append(java.lang.Integer.toHexString(chr)); sb.append(';'); }else { sb.append(chr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8984/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.XMLLogger.java", "BodyUseAPI": ["java.lang.Integer.toHexString(char)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(char)"], "Fixed commit": "4d788093f107f41c4983042c11d61b3b2fd5b3df", "Url": "https://api.github.com/repos/rnveach/checkstyle", "Date": "2017-09-29T14:32:46Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((post.getAuthor()) != null) this.author = new com.revature.dto.AuthorDTO(post.getAuthor()); else this.author = new com.revature.dto.AuthorDTO();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3609/buggy-version/src.main.java.com.revature.dto.BlogPostDTO.java", "BodyUseAPI": [], "Fixed commit": "3c22515d2d6faf15eee45a053ade6d80cfe5ac06", "Url": "https://api.github.com/repos/revaturelabs/revblogs", "Date": "2016-09-02T15:41:59Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentDataTuple) == null) { initNewDataTuple(streamId); }else if (!(currentDataTuple.getStream().getId().equals(streamId))) { flushRemaining(); initNewDataTuple(streamId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6225/buggy-version/heron.instance.src.java.com.twitter.heron.instance.OutgoingTupleCollection.java", "BodyUseAPI": [], "Fixed commit": "7cf2c515301e885769809c469701078963ed31fa", "Url": "https://api.github.com/repos/supunkamburugamuve/heron", "Date": "2017-05-22T03:17:17Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(drinkFinishedCheckBox.isChecked())) && (drinkStartedCalendar.after(drinkFinishedCalendar))) { android.widget.Toast.makeText(getContext(), \"End time must be after start time\", Toast.LENGTH_SHORT).show(); return false; }else if (((edu.augustana.csc490.bac_calculator.utils.CalculatorManager.getDrinkLogSize()) > 0) && (drinkStartedCalendar.before(edu.augustana.csc490.bac_calculator.utils.CalculatorManager.getDrink(((edu.augustana.csc490.bac_calculator.utils.CalculatorManager.getDrinkLogSize()) - 1)).getDrinkStartedCalendar()))) { android.widget.Toast.makeText(getContext(), \"Drink time must be after previous drink\", Toast.LENGTH_SHORT).show(); return false; }else { android.widget.Toast.makeText(getContext(), \"Drink Added\", Toast.LENGTH_SHORT).show(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8996/buggy-version/app.src.main.java.edu.augustana.csc490.bac_calculator.AddDrinkDialog.java", "BodyUseAPI": ["java.util.Calendar.before(edu.augustana.csc490.bac_calculator.utils.CalculatorManager.getDrink(((edu.augustana.csc490.bac_calculator.utils.CalculatorManager.getDrinkLogSize()) - 1)).getDrinkStartedCalendar())"], "Fixed commit": "731ec38dc3e695a701b3394fb3831687610680b7", "Url": "https://api.github.com/repos/AugustanaCSC490Spring2015/SealTeamSixBACCalculator", "Date": "2015-05-18T20:17:07Z"},
{"Line": "=>339", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 16) { peekLayout.setBackground(null); peekLayout.setBackground(new android.graphics.drawable.BitmapDrawable(builder.activity.getResources(), com.peekandpop.shalskar.peekandpop.BlurBuilder.blur(contentView))); }else { peekLayout.setBackgroundDrawable(null); peekLayout.setBackgroundDrawable(new android.graphics.drawable.BitmapDrawable(builder.activity.getResources(), com.peekandpop.shalskar.peekandpop.BlurBuilder.blur(contentView))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8464/buggy-version/library.src.main.java.com.peekandpop.shalskar.peekandpop.PeekAndPop.java", "BodyUseAPI": [], "Fixed commit": "7402e2f380d092d2a6d33c69541ebecabf9b7de3", "Url": "https://api.github.com/repos/shalskar/PeekAndPop", "Date": "2016-06-09T08:08:05Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(view.hasOnClickListeners())) { view.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8464/buggy-version/library.src.main.java.com.peekandpop.shalskar.peekandpop.PeekAndPop.java", "BodyUseAPI": ["android.view.View.setOnClickListener(android.view.View.OnClickListener)"], "Fixed commit": "7402e2f380d092d2a6d33c69541ebecabf9b7de3", "Url": "https://api.github.com/repos/shalskar/PeekAndPop", "Date": "2016-06-09T08:08:05Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.ovgu.featureide.fm.ui.wizards.NewFeatureModelFileFormatPage.getFormat()", "de.ovgu.featureide.fm.ui.wizards.NewFeatureModelFileLocationPage.getFileName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(fileName.contains((\".\" + (format.getSuffix()))))) { fileName = (fileName + \".\") + (format.getSuffix()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2012/buggy-version/plugins.de.ovgu.featureide.fm.ui.src.de.ovgu.featureide.fm.ui.wizards.NewFeatureModelWizard.java", "BodyUseAPI": ["de.ovgu.featureide.fm.core.io.IFeatureModelFormat.getSuffix()"], "Fixed commit": "8f89d693e2de2d806a10e8feda7b623bbacc4c69", "Url": "https://api.github.com/repos/DawidSA2017/FeatureIDE", "Date": "2017-10-12T10:40:04Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scenario.equals(Scenario.fourserv)) || (scenario.equals(Scenario.both))) { copy.setProperty(\"gp.fs.0.size\", \"14\"); }else { copy.setProperty(\"gp.fs.0.size\", \"13\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/77/buggy-version/src.main.java.ecj.Adaptor.java", "BodyUseAPI": [], "Fixed commit": "4406a6c7aa9a23a0d323bdbd9441e1548230075a", "Url": "https://api.github.com/repos/ZackC/AdaptiveSystemsGeneticProgrammingPlanner", "Date": "2017-03-16T04:05:35Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.objectweb.asm.Type.getClassName()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (typeString.contains(\".\")) { typeString = typeString.substring(this.type.getClassName().lastIndexOf(\".\")); }else if (typeString.contains(\"/\")) { typeString = typeString.substring(this.type.getClassName().lastIndexOf(\"/\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3394/buggy-version/src.problem.asm.FieldData.java", "BodyUseAPI": ["java.lang.String.substring(this.type.getClassName().lastIndexOf(\".\"))", "java.lang.String.substring(this.type.getClassName().lastIndexOf(\"/\"))", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "57583d16f45148afb3da6b106ccf7b3e774f9a41", "Url": "https://api.github.com/repos/LoganErexson/CSSE374TeamProject", "Date": "2016-01-07T01:46:45Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["client.map.Municipality.getOwner()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ownerRef.equals(client.misc.ClientManager.getLocalPlayer())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5573/buggy-version/src.client.map.MapController.java", "BodyUseAPI": [], "Fixed commit": "165a2332148b115c7ec7c7a95fc2c1f41c7862b5", "Url": "https://api.github.com/repos/Beefster09/cs340-catan", "Date": "2015-10-26T19:38:26Z"},
{"Line": "=>879", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.xiuxiuchat.easeim.EaseUserCacheManager.getInstance().getBeanById(username)) == null) { new java.lang.Thread(new java.lang.Runnable() { @java.lang.Override public void run() { com.xiuxiuchat.api.XiuxiuApi.queryUserInfoSyn(username); } }).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5620/buggy-version/app.src.main.java.com.xiuxiuchat.easeim.ImHelper.java", "BodyUseAPI": ["java.lang.Thread.start()", "com.xiuxiuchat.api.XiuxiuApi.queryUserInfoSyn(java.lang.String)"], "Fixed commit": "73ddfbf76b2bc36e1cb60a93de602a2555a5731c", "Url": "https://api.github.com/repos/seedzi/new_heixiu", "Date": "2016-10-07T03:57:48Z"},
{"Line": "=>696", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (listItem.contains(item)) { listItem.get(listItem.indexOf(item)).addFriend(); android.util.Log.d(\"HUSTLE\", (((item.getName()) + \" altra volta; \") + (actual.name))); }else { item.addFriend(); listItem.add(item); android.util.Log.d(\"HUSTLE\", (((((item.getName()) + \" prima volta: \") + (item.getFriends())) + \" ; \") + (actual.name))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8659/buggy-version/app.src.main.java.it.asg.hustle.MainActivity.java", "BodyUseAPI": ["java.util.ArrayList<it.asg.hustle.GridItem>.indexOf(it.asg.hustle.GridItem)", "it.asg.hustle.GridItem.addFriend()", "java.util.ArrayList<it.asg.hustle.GridItem>.add(it.asg.hustle.GridItem)", "it.asg.hustle.GridItem.getFriends()", "listItem.get(listItem.indexOf(item)).addFriend()", "java.util.ArrayList<it.asg.hustle.GridItem>.get(listItem.indexOf(item))", "android.util.Log.d(java.lang.String,(((((item.getName()) + \" prima volta: \") + (item.getFriends())) + \" ; \") + (actual.name)))", "android.util.Log.d(java.lang.String,(((item.getName()) + \" altra volta; \") + (actual.name)))", "it.asg.hustle.GridItem.getName()", "it.asg.hustle.GridItem.getName()"], "Fixed commit": "8f4a480f8d143d57173afb0e515901edbf8956bc", "Url": "https://api.github.com/repos/sarapal/HaveUSeenTheLastEpisode", "Date": "2015-09-21T16:48:30Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.repository.ITaskRepository.findByTaskGuid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (taskEntity == null) { return new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.NO_CONTENT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3645/buggy-version/src.main.java.com.rest.TaskRest.java", "BodyUseAPI": [], "Fixed commit": "fc89036db3ed0cf2ea038a4b8c03a2c3b7d937da", "Url": "https://api.github.com/repos/Laesod/restService-seed", "Date": "2015-12-14T17:57:07Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.repository.ITaskRepository.findByTaskGuid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(CurrentUserInfo.userName.equals(taskEntity.getCreatedByUser()))) { return new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.FORBIDDEN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3645/buggy-version/src.main.java.com.rest.TaskRest.java", "BodyUseAPI": [], "Fixed commit": "fc89036db3ed0cf2ea038a4b8c03a2c3b7d937da", "Url": "https://api.github.com/repos/Laesod/restService-seed", "Date": "2015-12-14T17:57:07Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.repository.ITaskRepository.findByTaskGuid(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(CurrentUserInfo.userName.equals(taskEntity.getCreatedByUser()))) { return new org.springframework.http.ResponseEntity(org.springframework.http.HttpStatus.FORBIDDEN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3645/buggy-version/src.main.java.com.rest.TaskRest.java", "BodyUseAPI": [], "Fixed commit": "fc89036db3ed0cf2ea038a4b8c03a2c3b7d937da", "Url": "https://api.github.com/repos/Laesod/restService-seed", "Date": "2015-12-14T17:57:07Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(input.isAllowedFor(documentType))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7861/buggy-version/dspace-xmlui.src.main.java.org.dspace.app.xmlui.aspect.submission.submit.DescribeStep.java", "BodyUseAPI": [], "Fixed commit": "f20e94cab5506275658c382f64a9a892d209516c", "Url": "https://api.github.com/repos/sandropinna/DSpace", "Date": "2013-11-01T17:11:22Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((submission.getItem().getMetadata(\"dc.type\")) != null) && ((submission.getItem().getMetadata(\"dc.type\").length) > 0)) { documentType = submission.getItem().getMetadata(\"dc.type\")[0].value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7861/buggy-version/dspace-xmlui.src.main.java.org.dspace.app.xmlui.aspect.submission.submit.DescribeStep.java", "BodyUseAPI": ["submission.getItem().getMetadata(java.lang.String)", "org.dspace.app.xmlui.aspect.submission.submit.DescribeStep.getItem()"], "Fixed commit": "f20e94cab5506275658c382f64a9a892d209516c", "Url": "https://api.github.com/repos/sandropinna/DSpace", "Date": "2013-11-01T17:11:22Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intent == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4524/buggy-version/app.src.main.java.souch.smp.MusicService.java", "BodyUseAPI": [], "Fixed commit": "16f677bbe1470ce0f6b861d3e8b2e6f116ce8bb6", "Url": "https://api.github.com/repos/souch/SMP", "Date": "2015-04-06T11:15:56Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (idx >= 0) prefFold.setSummary(foldEntries[idx]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4524/buggy-version/app.src.main.java.souch.smp.Settings.java", "BodyUseAPI": ["android.preference.ListPreference.setSummary(java.lang.String)"], "Fixed commit": "16f677bbe1470ce0f6b861d3e8b2e6f116ce8bb6", "Url": "https://api.github.com/repos/souch/SMP", "Date": "2015-04-06T11:15:56Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trackingType == (org.iabako.shared.entity.enumeration.TrackingType.deliveryOrderDelete)) { org.iabako.server.serviceimpl.business.DeliveryOrder deliveryOrder = ((org.iabako.server.serviceimpl.business.DeliveryOrder) (trackingObject)); return \"- \" + (messages.getLabel(\"tracking_delivery_delete_comment\", org.iabako.shared.tools.GenericTools.formatDate(deliveryOrder.getDeliveryDate()), org.iabako.shared.tools.GenericTools.formatTime(new java.util.Date()))); }else if (trackingType == (org.iabako.shared.entity.enumeration.TrackingType.communicationDelete)) { org.iabako.server.serviceimpl.business.Communication communication = ((org.iabako.server.serviceimpl.business.Communication) (trackingObject)); java.lang.String subject = ((communication.getSubject()) != null) ? communication.getSubject() : \"\"; return \"- \" + (messages.getLabel(\"tracking_communication_delete_comment\", subject, org.iabako.shared.tools.GenericTools.formatTime(new java.util.Date()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7917/buggy-version/src.main.java.org.iabako.server.serviceimpl.business.TrackingServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "9366bf3742cfa145c8e9108fac42f5e01628ac3b", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2017-09-18T04:10:31Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trackingObject instanceof org.iabako.server.serviceimpl.business.DeliveryOrder) { object.setDelivery0rder(((org.iabako.server.serviceimpl.business.DeliveryOrder) (trackingObject))); }else if (trackingObject instanceof org.iabako.server.serviceimpl.business.Supplier) { object.setSupplier(((org.iabako.server.serviceimpl.business.Supplier) (trackingObject))); }else if (trackingObject instanceof org.iabako.server.serviceimpl.business.Communication) { object.setCommunication(((org.iabako.server.serviceimpl.business.Communication) (trackingObject))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7917/buggy-version/src.main.java.org.iabako.server.serviceimpl.business.TrackingServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "9366bf3742cfa145c8e9108fac42f5e01628ac3b", "Url": "https://api.github.com/repos/iabakoproject/iabako", "Date": "2017-09-18T04:10:31Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(decl instanceof AppleCoreCompiler.Semantics.ConstDecl)) { insertDecl.insert(decl, globalSymbols); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7487/buggy-version/Compiler.java.AppleCoreCompiler.Semantics.AttributionPass.java", "BodyUseAPI": ["AppleCoreCompiler.Semantics.AttributionPass.InsertDecl.insert(AppleCoreCompiler.Semantics.Declaration,java.util.Map<java.lang.String, AppleCoreCompiler.AST.Node>)"], "Fixed commit": "dcb04165c554ab52cc87f32cd11490d7adaa03fe", "Url": "https://api.github.com/repos/bocchino/AppleCore", "Date": "2011-12-10T04:29:41Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.box.androidsdk.content.models.BoxItem.getPropertyAsStringArray(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (accessStrList == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1973/buggy-version/box-content-sdk.src.main.java.com.box.androidsdk.content.models.BoxItem.java", "BodyUseAPI": [], "Fixed commit": "14e631d16fc94f4c19f5b4b09f42171261153a65", "Url": "https://api.github.com/repos/box/box-android-sdk", "Date": "2016-12-05T23:13:23Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(((org.bukkit.entity.LivingEntity) (event.getEntity())).isLeashed())) || (!((((org.bukkit.entity.LivingEntity) (event.getEntity())).getLeashHolder()) instanceof org.bukkit.entity.LeashHitch))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5499/buggy-version/src.main.java.com.sk89q.craftbook.mech.BetterLeads.java", "BodyUseAPI": [], "Fixed commit": "970a38b878b19e83b8e56213b0122bad0d1b011f", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2013-08-12T07:41:31Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (command.contains(\" @a \")) { org.bukkit.entity.Player[] players = org.bukkit.Bukkit.getOnlinePlayers(); for (org.bukkit.entity.Player p : players) { org.bukkit.Bukkit.dispatchCommand(sender, command.replaceAll(\" @a \", ((\" \" + (p.getName())) + \" \"))); } }else { org.bukkit.Bukkit.dispatchCommand(sender, command); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7118/buggy-version/src.main.java.com.github.ucchyocean.et.ExpTimer.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,((\" \" + (p.getName())) + \" \"))", "org.bukkit.Bukkit.dispatchCommand(org.bukkit.command.CommandSender,java.lang.String)", "org.bukkit.Bukkit.dispatchCommand(org.bukkit.command.CommandSender,java.lang.String)"], "Fixed commit": "c971127bcb14a2b21be01c5e436409a747ded6b0", "Url": "https://api.github.com/repos/ucchyocean/ExpTimer", "Date": "2013-10-12T06:26:17Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prevM != null) prevM.next = revHead;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2936/buggy-version/mysolutions.src.reverseLinkedListII.ReverseLinkedListII.java", "BodyUseAPI": [], "Fixed commit": "29240cbe55965326c0e735fbbf7b09340cc8b098", "Url": "https://api.github.com/repos/asraf209/leetcode", "Date": "2016-04-30T06:00:37Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m > 1) return head; else return revHead;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2936/buggy-version/mysolutions.src.reverseLinkedListII.ReverseLinkedListII.java", "BodyUseAPI": [], "Fixed commit": "29240cbe55965326c0e735fbbf7b09340cc8b098", "Url": "https://api.github.com/repos/asraf209/leetcode", "Date": "2016-04-30T06:00:37Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) > 9) { android.os.StrictMode.ThreadPolicy policy = new android.os.StrictMode.ThreadPolicy.Builder().permitAll().build(); android.os.StrictMode.setThreadPolicy(policy); sendData(joysend); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5607/buggy-version/app.src.main.java.com.kudakoding.aaizat.kraider.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "73a1ba9ef21c6fd5a647ca36c7ad1a2641188e46", "Url": "https://api.github.com/repos/aizatrosli/KRaider", "Date": "2017-08-01T16:14:06Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((100 - (probabilities.get(0))) - (probabilities.get(1))) < 10) probBuilder.append(\"0\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8548/buggy-version/src.main.java.com.elex.bigdata.jgibblda.ResultEtl.java", "BodyUseAPI": [], "Fixed commit": "a9a7574dde23149acd1f3d752f17b27a5e39609d", "Url": "https://api.github.com/repos/elex-bigdata/jgibblda", "Date": "2014-03-28T02:30:42Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((probabilities.get(0)) < 10) probBuilder.append(\"0\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8548/buggy-version/src.main.java.com.elex.bigdata.jgibblda.ResultEtl.java", "BodyUseAPI": [], "Fixed commit": "a9a7574dde23149acd1f3d752f17b27a5e39609d", "Url": "https://api.github.com/repos/elex-bigdata/jgibblda", "Date": "2014-03-28T02:30:42Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((probabilities.get(1)) < 10) probBuilder.append(\"0\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8548/buggy-version/src.main.java.com.elex.bigdata.jgibblda.ResultEtl.java", "BodyUseAPI": [], "Fixed commit": "a9a7574dde23149acd1f3d752f17b27a5e39609d", "Url": "https://api.github.com/repos/elex-bigdata/jgibblda", "Date": "2014-03-28T02:30:42Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((password) != null ? !(password.equals(that.password)) : (that.password) != null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1391/buggy-version/app.src.main.java.se.alkohest.irkksome.model.impl.IrkksomeConnectionEB.java", "BodyUseAPI": [], "Fixed commit": "669e10b1fa54e64f1d270be9216e75000caaf839", "Url": "https://api.github.com/repos/hedmanw/irkksome", "Date": "2014-11-07T07:37:33Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((micdoodle8.mods.galacticraft.planets.venus.blocks.BlockBasicVenus.EnumBlockBasicVenus) (state.getValue(micdoodle8.mods.galacticraft.planets.venus.blocks.BlockBasicVenus.BASIC_TYPE_VENUS))) == (micdoodle8.mods.galacticraft.planets.venus.blocks.BlockBasicVenus.EnumBlockBasicVenus.ROCK_MAGMA)) { worldIn.setBlockState(pos, Blocks.flowing_lava.getDefaultState()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/422/buggy-version/src.main.java.micdoodle8.mods.galacticraft.planets.venus.blocks.BlockBasicVenus.java", "BodyUseAPI": [], "Fixed commit": "8f9192037979ca0f890a74fc01017729287b34f0", "Url": "https://api.github.com/repos/SteveKunG/Galacticraft", "Date": "2017-06-29T00:07:00Z"},
{"Line": "=>451", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.length) == 1) return org.openehealth.ipf.gazelle.validation.core.GazelleProfileRule.isEmpty(input[0]) ? java.util.Collections.<T>emptySet() : java.util.Collections.singleton(input[0]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2465/buggy-version/commons.core.src.main.java.org.openehealth.ipf.gazelle.validation.core.GazelleProfileRule.java", "BodyUseAPI": ["org.openehealth.ipf.gazelle.validation.core.GazelleProfileRule.isEmpty(T)", "java.util.Collections.singleton(T)"], "Fixed commit": "8b725e481ffaa8f08295398732533497157f3073", "Url": "https://api.github.com/repos/oehf/ipf-gazelle", "Date": "2015-03-12T16:36:02Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((v instanceof org.openehealth.ipf.gazelle.validation.core.Composite) && (v.getClass().getName().endsWith(\".TS\"))) { org.openehealth.ipf.gazelle.validation.core.Composite ts = ((org.openehealth.ipf.gazelle.validation.core.Composite) (v)); return org.openehealth.ipf.gazelle.validation.core.GazelleProfileRule.isEmpty(ts.getComponent(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2465/buggy-version/commons.core.src.main.java.org.openehealth.ipf.gazelle.validation.core.GazelleProfileRule.java", "BodyUseAPI": [], "Fixed commit": "8b725e481ffaa8f08295398732533497157f3073", "Url": "https://api.github.com/repos/oehf/ipf-gazelle", "Date": "2015-03-12T16:36:02Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.length) == 0) return java.util.Collections.<T>emptySet();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2465/buggy-version/commons.core.src.main.java.org.openehealth.ipf.gazelle.validation.core.GazelleProfileRule.java", "BodyUseAPI": [], "Fixed commit": "8b725e481ffaa8f08295398732533497157f3073", "Url": "https://api.github.com/repos/oehf/ipf-gazelle", "Date": "2015-03-12T16:36:02Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["etFoodName.getText().toString()", "etFoodExpiration.getText().toString()", "etFoodOwner.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((FoodName.matches(\"\")) || (OwnerName.matches(\"\"))) || (expirationDate.matches(\"\"))) { if (FoodName.matches(\"\")) { android.widget.Toast.makeText(this, \"You forgot to enter your food!\", Toast.LENGTH_SHORT).show(); return; }else if (OwnerName.matches(\"\")) { android.widget.Toast.makeText(this, \"You forgot to enter your name!\", Toast.LENGTH_SHORT).show(); return; }else { android.widget.Toast.makeText(this, \"You forgot to enter expiration date!\", Toast.LENGTH_SHORT).show(); return; } }else { FoodName = wordCaseStandardized(FoodName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7763/buggy-version/FridgeV1.app.src.main.java.com.example.mowolfvillageon.fridgev1.InsertActivity.java", "BodyUseAPI": ["com.example.mowolfvillageon.fridgev1.InsertActivity.wordCaseStandardized(java.lang.String)", "java.lang.String.matches(java.lang.String)", "java.lang.String.matches(java.lang.String)"], "Fixed commit": "886e71393011cfe17db3d23b39dce6d4aaa00bd0", "Url": "https://api.github.com/repos/ucsdCSE110wi16/CSE110M260T10", "Date": "2016-03-07T21:09:21Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (viewMode.equals(\"perItem\")) { if (operation.equals(\"viewLiveTransactions\")) { java.sql.Statement transStmt = conn.createStatement(); JSONBuilder.JSONBuilder jb = new JSONBuilder.JSONBuilder(); int userid = java.lang.Integer.parseInt(request.getParameter(\"userid\")); java.sql.ResultSet transactionSet = transStmt.executeQuery((((((\"SELECT t.transid, t.name, t._date, t.total_amount, d.owesuserid FROM \" + \"transactions t INNER JOIN debt d on t.transid = d.transid WHERE (d. userid = \") + userid) + \" OR d.owesuserid = \") + userid) + \") AND t.total_paid_off = false GROUP BY t.transid, t.name, t._date, t.total_amount, d.owesuserid ORDER BY t._date DESC\")); if (!(transactionSet.isBeforeFirst())) { writer.println(getReturnCode(jb, 4)); }else { jb.beginObject().append(\"returnCode\", 1).beginArray(); while (transactionSet.next()) { int transId = transactionSet.getInt(\"transid\"); java.lang.String transName = transactionSet.getString(\"name\"); java.lang.String transDate = transactionSet.getString(\"_date\"); java.lang.Double transAmount = transactionSet.getDouble(\"total_amount\"); jb.beginObject().append(\"transid\", transId).append(\"name\", transName).append(\"total_amount\", transAmount).append(\"_date\", transDate).endObject(); } jb.endArray().endObject(); writer.println(jb.build()); } }else if (operation.equals(\"viewDeadTransactions\")) { java.sql.Statement transStmt = conn.createStatement(); JSONBuilder.JSONBuilder jb = new JSONBuilder.JSONBuilder(); int userid = java.lang.Integer.parseInt(request.getParameter(\"userid\")); java.sql.ResultSet transactionSet = transStmt.executeQuery((((((\"SELECT t.transid, t.name, t.complete_date, t.total_amount, d.owesuserid FROM \" + \"transactions t INNER JOIN debt d on (t.transid = d.transid) WHERE (d.userid = \") + userid) + \" OR d.owesuserid = \") + userid) + \") AND t.total_paid_off = true GROUP BY t.transid, t.name, t.complete_date, t.total_amount,t._date, d.owesuserid ORDER BY t._date DESC\")); if (!(transactionSet.isBeforeFirst())) { writer.println(getReturnCode(jb, 4)); }else { jb.beginObject().append(\"returnCode\", 1).beginArray(); while (transactionSet.next()) { int transId = transactionSet.getInt(\"transid\"); java.lang.String transName = transactionSet.getString(\"name\"); java.lang.String transCompleteDate = transactionSet.getString(\"complete_date\"); double transAmount = transactionSet.getDouble(\"total_amount\"); jb.beginObject().append(\"transid\", transId).append(\"name\", transName).append(\"total_amount\", transAmount).append(\"complete_date\", transCompleteDate).endObject(); } jb.endArray().endObject(); writer.println(jb.build()); } }else if (operation.equals(\"transactionDetails\")) { java.sql.Statement detailsStmt = conn.createStatement(); java.sql.Statement debtsStmt = conn.createStatement(); JSONBuilder.JSONBuilder jbDetails = new JSONBuilder.JSONBuilder(); JSONBuilder.JSONBuilder jbDebt = new JSONBuilder.JSONBuilder(); int userid = java.lang.Integer.parseInt(request.getParameter(\"userid\")); int transid = java.lang.Integer.parseInt(request.getParameter(\"transid\")); java.sql.ResultSet detailsSet = detailsStmt.executeQuery(((\"SELECT * FROM transactions WHERE transid = \" + transid) + \" ;\")); java.sql.ResultSet debtSet = debtsStmt.executeQuery((((\"SELECT d.transid, d.amount, a.userid, a.firstname, a.surname, amount FROM\" + (\" debt d INNER JOIN appuser a ON (d.owesuserid = a.userid OR d.userid = a.userid)\" + \" AND d.transid = \")) + transid) + \" ;\")); if ((!(detailsSet.isBeforeFirst())) || (!(debtSet.isBeforeFirst()))) { writer.println(getReturnCode(jbDebt, 4)); } int details_transid = detailsSet.getInt(\"transid\"); java.lang.String details_name = detailsSet.getString(\"name\"); double details_amount = detailsSet.getDouble(\"total_amount\"); java.lang.String details_date = detailsSet.getString(\"_date\"); int details_urgency = detailsSet.getInt(\"urgency\"); java.lang.String details_complete_date = detailsSet.getString(\"complete_date\"); java.lang.String details_description = detailsSet.getString(\"description\"); java.lang.String details_paid_off = detailsSet.getString(\"total_paid_off\"); boolean deletable = userid == (debtSet.getInt(\"userid\")); jbDetails.beginObject().append(\"transid\", details_transid).append(\"name\", details_name).append(\"total_amount\", details_amount).append(\"date\", details_date).append(\"urgency\", details_urgency).append(\"description\", details_description).append(\"complete_date\", details_complete_date).append(\"total_paid_off\", details_paid_off).append(\"can_delete\", deletable); jbDetails.endObject(); writer.println(jbDetails.build()); while (debtSet.next()) { int transId = debtSet.getInt(\"transid\"); double amount = debtSet.getDouble(\"amount\"); int friendid = debtSet.getInt(\"userid\"); java.lang.String friendfname = debtSet.getString(\"firstname\"); jbDebt.beginObject().append(\"transid\", transId).append(\"userid\", friendid).append(\"firstname\", friendfname).append(\"amount\", amount).endObject(); } jbDebt.endArray().endObject(); writer.println(jbDebt.build()); } }else if (viewMode.equals(\"perPerson\")) { if (operation.equals(\"getFriendsList\")) { java.sql.Statement getFriendsStmt = conn.createStatement(); JSONBuilder.JSONBuilder jb = new JSONBuilder.JSONBuilder(); int userid = java.lang.Integer.parseInt(request.getParameter(\"userid\")); java.sql.ResultSet friendsList = getFriendsStmt.executeQuery((((\"SELECT f.friendid, a.firstname, a.surname FROM friends f \" + \"INNER JOIN appuser a on f.friendid = a.userid WHERE f.userid = \") + userid) + \";\")); if (friendsList.next()) { jb.beginObject().append(\"returnCode\", 1).beginArray(); do { jb.beginObject().append(\"friendid\", friendsList.getInt(\"friendid\")).append(\"firstname\", friendsList.getString(\"firstname\")).append(\"surname\", friendsList.getString(\"surname\")).endObject(); } while (friendsList.next() ); jb.endArray().endObject(); writer.println(jb.build()); }else { writer.println(getReturnCode(jb, 4)); } } if (operation.equals(\"viewFriendsOwe\")) { java.sql.Statement friendsGetStmt = conn.createStatement(); int userid = java.lang.Integer.parseInt(request.getParameter(\"userid\")); JSONBuilder.JSONBuilder jb = new JSONBuilder.JSONBuilder(); java.sql.ResultSet debtSet = friendsGetStmt.executeQuery(((((((\"SELECT d.userid, d.owesuserid, d.amount, d.partial_pay \" + (\"FROM transactions t INNER JOIN debt d on (t.transid=d.transid)\" + \"WHERE (d.owesuserid = \")) + userid) + \" OR d.userid = \") + userid) + \")\") + \"AND total_paid_off=false;\")); if (!(debtSet.isBeforeFirst())) { writer.println(getReturnCode(jb, 20)); return; } jb.beginObject().append(\"returnCode\", 1).beginArray(); while (debtSet.next()) { java.lang.Double debtAmount = debtSet.getDouble(\"amount\"); java.lang.Double partial_pay = debtSet.getDouble(\"partial_pay\"); jb.beginObject().append(\"userid\", debtSet.getInt(\"userid\")).append(\"owesuserid\", debtSet.getInt(\"owesuserid\")).append(\"amount\", debtAmount).append(\"partial_pay\", partial_pay).endObject(); } jb.endArray().endObject(); writer.println(jb.build()); }else if (operation.equals(\"viewFriendsProfile\")) { java.sql.Statement friendsProfStmt = conn.createStatement(); JSONBuilder.JSONBuilder jb = new JSONBuilder.JSONBuilder(); int friendid = java.lang.Integer.parseInt(request.getParameter(\"friendid\")); java.sql.ResultSet friendSet = friendsProfStmt.executeQuery((((\"SELECT userid as friendid, firstname, surname \" + (\"FROM appuser \" + \"WHERE userid = \")) + friendid) + \";\")); if (!(friendSet.isBeforeFirst())) { writer.println(getReturnCode(jb, 4)); }else if (friendSet.next()) { jb.beginObject().append(\"returnCode\", 1); int friend_id = friendSet.getInt(\"friendid\"); java.lang.String friend_firstname = friendSet.getString(\"firstname\"); java.lang.String friend_surname = friendSet.getString(\"surname\"); jb.beginObject().append(\"friend_id\", friend_id).append(\"friend_firstname\", friend_firstname).append(\"friend_surname\", friend_surname).endObject(); jb.endObject(); writer.println(jb.build()); } }else if (operation.equals(\"viewFriendsLog\")) { java.sql.Statement friendsLogStmt = conn.createStatement(); int friendid = java.lang.Integer.parseInt(request.getParameter(\"friendid\")); int userid = java.lang.Integer.parseInt(request.getParameter(\"userid\")); JSONBuilder.JSONBuilder jb = new JSONBuilder.JSONBuilder(); java.sql.ResultSet friendsTrans = friendsLogStmt.executeQuery(((((((((((((((((((((((((((\"SELECT d.transid, t.name, d.userid,d.owesuserid, d.amount, d.partial_pay, t._date \" + ((\"FROM debt d INNER JOIN transactions t \" + \"ON (t.transid = d.transid) \") + \"WHERE (d.owesuserid = \")) + friendid) + \" AND d.userid =\") + userid) + \") \") + \"OR (d.userid = \") + friendid) + \" AND d.owesuserid = \") + userid) + \") \") + \"AND total_paid_off = false\") + \" UNION \") + \"SELECT d.transid, t.name, d.userid,d.owesuserid, d.amount, d.partial_pay, t._date \") + \"FROM debt d INNER JOIN transactions t \") + \"ON (t.transid = d.transid) \") + \"WHERE (d.owesuserid = \") + userid) + \" AND d.userid =\") + userid) + \") \") + \"OR (d.userid = \") + userid) + \" AND d.owesuserid = \") + friendid) + \") \") + \"AND total_paid_off = false;\")); if (!(friendsTrans.isBeforeFirst())) { writer.println(getReturnCode(jb, 4)); }else { jb.beginObject().append(\"returnCode\", 1).beginArray(); while (friendsTrans.next()) { java.lang.String transId = friendsTrans.getString(\"transid\"); java.lang.String transName = friendsTrans.getString(\"name\"); java.lang.String transUserid = friendsTrans.getString(\"userid\"); java.lang.String transOwesuserid = friendsTrans.getString(\"owesuserid\"); java.lang.String transAmount = friendsTrans.getString(\"amount\"); java.lang.String transPartial = friendsTrans.getString(\"partial_pay\"); java.lang.String transDate = friendsTrans.getString(\"_date\"); jb.beginObject().append(\"transid\", transId).append(\"name\", transName).append(\"userid\", transUserid).append(\"owesuserid\", transOwesuserid).append(\"amount\", transAmount).append(\"partial_pay\", transPartial).append(\"date\", transDate).endObject(); } jb.endArray().endObject(); writer.println(jb.build()); } }else if (operation.equals(\"remindFriend\")) { java.sql.Statement msgStmt = conn.createStatement(); java.sql.Statement transStmt = conn.createStatement(); java.sql.Statement lookupStmt = conn.createStatement(); JSONBuilder.JSONBuilder jb = new JSONBuilder.JSONBuilder(); int userid = java.lang.Integer.parseInt(request.getParameter(\"userid\")); int friendid = java.lang.Integer.parseInt(request.getParameter(\"friendid\")); java.lang.String user_firstname = request.getParameter(\"firstname\"); int transid = java.lang.Integer.parseInt(request.getParameter(\"transid\")); java.lang.String date_today = request.getParameter(\"date\"); java.lang.String time_now = request.getParameter(\"time\"); java.sql.ResultSet trans = transStmt.executeQuery((((((((\"SELECT t.name, d.amount, d.partial_pay \" + (\"FROM debt d INNER JOIN transactions t on \" + \"(t.transid = d.transid) WHERE (d.userid = \")) + userid) + \" AND d.owesuserid = \") + friendid) + \"AND t.transid = \") + transid) + \";\")); double total = (trans.getDouble(\"amount\")) - (trans.getDouble(\"partial_pay\")); java.lang.String msg = (((((((\"Yo \" + \", \") + user_firstname) + \" needs his money from \") + (trans.getString(\"name\"))) + \". This comes to \") + total) + \" pounds. Pay it back soon or \") + \"I'll come and smash your legs bro.\"; java.sql.ResultSet conversation = lookupStmt.executeQuery((((((((((((\"SELECT conversationid FROM message \" + \"WHERE (user1 = \") + userid) + \" \") + \"AND user2 = \") + friendid) + \") OR (user1 = \") + userid) + \" \") + \"AND user2 = \") + friendid) + \");\")); if (!(conversation.isBeforeFirst())) { }else { int conversationid = conversation.getInt(\"conversationid\"); int rs = msgStmt.executeUpdate(((((((((((\"INSERT INTO messagecontent VALUES (\" + msg) + \", \") + date_today) + \", \") + time_now) + \", \") + conversationid) + \", \") + userid) + \";\")); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/281/buggy-version/MoneyDatabase.src.Transaction.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "8ee4b531509bbcc70ca20e31a50073b6c4240e0e", "Url": "https://api.github.com/repos/js3611/WebApp", "Date": "2013-06-16T18:07:23Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mainFragment) != null) && (mainFragment.isVisible())) { android.content.Intent startMain = new android.content.Intent(android.content.Intent.ACTION_MAIN); startMain.addCategory(Intent.CATEGORY_HOME); startMain.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); startActivity(startMain); }else { super.onBackPressed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8408/buggy-version/app.src.main.java.free.rm.skytube.gui.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "aa3cd2b6ee3df1cb0dbd61cc1db120261b4e7ea2", "Url": "https://api.github.com/repos/Generator/SkyTube", "Date": "2017-05-16T18:26:02Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(loadedFields.containsKey(fieldName))) { java.lang.Object docValue = doc.field(fieldName); if ((docValue != null) && (!(docValue.equals(value)))) { value = lazyLoadField(self, fieldName, docValue); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2569/buggy-version/object.src.main.java.com.orientechnologies.orient.object.enhancement.OObjectProxyMethodHandler.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String)", "com.orientechnologies.orient.object.enhancement.OObjectProxyMethodHandler.lazyLoadField(java.lang.Object,java.lang.String,java.lang.Object)"], "Fixed commit": "e0aa4ee1ed37c1f59b15b44b91c479e85c05851b", "Url": "https://api.github.com/repos/nuvolabase/orientdb", "Date": "2012-06-01T09:18:44Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["watch.fight.android.fightbrowser.Brackets.models.Match.getPlayerOneId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (p1 != null) { addActivePlayer(p1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8540/buggy-version/app.src.main.java.watch.fight.android.fightbrowser.Brackets.ParticipantsHolder.java", "BodyUseAPI": ["watch.fight.android.fightbrowser.Brackets.ParticipantsHolder.addActivePlayer(java.lang.String)"], "Fixed commit": "f96dd3c9b8468b2d35872104107f8315dcf1ef0c", "Url": "https://api.github.com/repos/thingdeux/FightWatchAndroidApplication", "Date": "2015-10-20T09:55:18Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["watch.fight.android.fightbrowser.Brackets.models.Match.getPlayerTwoId()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (p2 != null) { addActivePlayer(p2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8540/buggy-version/app.src.main.java.watch.fight.android.fightbrowser.Brackets.ParticipantsHolder.java", "BodyUseAPI": ["watch.fight.android.fightbrowser.Brackets.ParticipantsHolder.addActivePlayer(java.lang.String)"], "Fixed commit": "f96dd3c9b8468b2d35872104107f8315dcf1ef0c", "Url": "https://api.github.com/repos/thingdeux/FightWatchAndroidApplication", "Date": "2015-10-20T09:55:18Z"},
{"Line": "=>412", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.instance) != null) { if (this.pack.hasDeleteArguments(true, this.version.getVersion())) { java.util.List<java.io.File> fileDeletes = this.pack.getDeletes(true, this.version.getVersion(), this.instance); for (java.io.File file : fileDeletes) { if (file.exists()) { com.atlauncher.utils.Utils.delete(file); } } } if (this.pack.hasDeleteArguments(false, this.version.getVersion())) { java.util.List<java.io.File> fileDeletes = this.pack.getDeletes(false, this.version.getVersion(), this.instance); for (java.io.File file : fileDeletes) { if (file.exists()) { com.atlauncher.utils.Utils.delete(file); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6016/buggy-version/src.main.java.com.atlauncher.workers.InstanceInstaller.java", "BodyUseAPI": [], "Fixed commit": "05e5d3febeb9e182610eb6e4c020d74a1ebb3a4b", "Url": "https://api.github.com/repos/ATLauncher/ATLauncher", "Date": "2014-06-13T05:49:51Z"},
{"Line": "=>419", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (is == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6363/buggy-version/src.Cyber.Listener.java", "BodyUseAPI": [], "Fixed commit": "9817f29d621b796adfb44fe32e0cb2f732485bd4", "Url": "https://api.github.com/repos/FoxZOolm/Cyber", "Date": "2014-05-25T01:41:01Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.agiletec.aps.system.common.entity.model.AttributeFieldError.getMessage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((null != message) && ((message.trim().length()) > 0)) { return message; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/431/buggy-version/src.main.java.com.agiletec.apsadmin.system.entity.attribute.manager.AbstractAttributeManager.java", "BodyUseAPI": [], "Fixed commit": "3f097d7a30ff5111a282ff329dc9d2f43ef0669d", "Url": "https://api.github.com/repos/entando/entando-core-engine", "Date": "2012-03-17T21:23:51Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.app.ActivityCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.INTERNET }, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6859/buggy-version/app.src.main.java.aggrathon.a360video.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "49b337fe719434d34ad0c7b9fdaab63f55576b61", "Url": "https://api.github.com/repos/Aggrathon/360-Video-Player", "Date": "2016-11-26T19:22:33Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (savedInstanceState != null) { historyTextView.setText(savedInstanceState.getCharSequence(\"history\")); answerTextView.setText(savedInstanceState.getCharSequence(\"answer\")); equalsPressed = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6183/buggy-version/src.com.app.Calcutron.MyActivity.java", "BodyUseAPI": ["android.os.Bundle.getCharSequence(java.lang.String)", "android.os.Bundle.getCharSequence(java.lang.String)", "android.widget.TextView.setText(savedInstanceState.getCharSequence(\"history\"))", "android.widget.TextView.setText(savedInstanceState.getCharSequence(\"answer\"))"], "Fixed commit": "07b4140c14713117efffdd31a5e2cb05dff28528", "Url": "https://api.github.com/repos/danielboros/Calcutron", "Date": "2014-02-28T02:06:40Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(userId)) { recommendList = userStoreDao.getRecommendList(java.lang.Integer.parseInt(type)); }else { recommendList = userStoreDao.getRecommendList(java.lang.Integer.parseInt(userId), java.lang.Integer.parseInt(type)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1974/buggy-version/src.com.apollo.cbb.servlet.store.ListFoodRecommendServlet.java", "BodyUseAPI": ["com.apollo.cbb.dao.UserStoreDaoImpl.getRecommendList(int,int)", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "8168c57b09767353d39f4956b317d4a5e3d49832", "Url": "https://api.github.com/repos/yqpan1991/cbb-server", "Date": "2016-03-11T14:53:16Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (decrypt) { try { org.apache.activemq.jaas.EncryptionSupport.decrypt(org.apache.activemq.jaas.PropertiesLoginModule.users.getPrincipals()); } catch (java.lang.NoClassDefFoundError e) { decrypt = false; org.apache.activemq.jaas.PropertiesLoginModule.LOG.info(\"jasypt is not on the classpath: password decryption disabled.\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6457/buggy-version/activemq-jaas.src.main.java.org.apache.activemq.jaas.PropertiesLoginModule.java", "BodyUseAPI": [], "Fixed commit": "bc470202dac2d9efe35170ce70a7a810de76f1fb", "Url": "https://api.github.com/repos/apache/activemq", "Date": "2014-03-27T17:09:42Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCategories) == null) { mCategories = mCategoryDao.loadAllCategories(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4414/buggy-version/app.src.main.java.android.support.v17.leanback.supportleanbackshowcase.app.room.db.repo.VideosRepository.java", "BodyUseAPI": [], "Fixed commit": "365284e426bd9bc348e9460da024cbcdac736139", "Url": "https://api.github.com/repos/lijingjiang/leanback-showcase-1", "Date": "2017-09-08T22:48:31Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (className.startsWith(\"[\")) { className = \"java.lang.Object\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2262/buggy-version/teavm-core.src.main.java.org.teavm.dependency.DependencyGraphBuilder.java", "BodyUseAPI": [], "Fixed commit": "d9b7a87784376d3b307217f8e69946503113ba22", "Url": "https://api.github.com/repos/konsoletyper/teavm", "Date": "2013-12-12T12:35:12Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((rule.status()) != (org.sonar.api.rule.RuleStatus.REMOVED)) { rules.add(toRule(rule)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2925/buggy-version/sonar-server.src.main.java.org.sonar.server.rule.DefaultRuleFinder.java", "BodyUseAPI": ["java.util.List<org.sonar.api.rules.Rule>.add(org.sonar.api.rules.Rule)", "org.sonar.server.rule.DefaultRuleFinder.toRule(org.sonar.server.rule.Rule)"], "Fixed commit": "27dbb408e9ddeb6145c99d7df1b42712afc62de6", "Url": "https://api.github.com/repos/SonarSource/sonarqube", "Date": "2014-06-30T15:43:27Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mustRollback) environment.rollbackTransaction(txn); else environment.commitTransaction(txn);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5360/buggy-version/ServerV0000.src.org.reldb.rel.v0.storage.TransactionRunner.java", "BodyUseAPI": [], "Fixed commit": "74ea2060a7f1533a82147831b5fc946764d7284f", "Url": "https://api.github.com/repos/DaveVoorhis/Rel", "Date": "2017-08-27T10:14:55Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<User.Command>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (thisCommand == (User.Command.VIEWITEM)) { viewItems(); }else if (thisCommand == (User.Command.GOBACK)) { goBackState(); }else { myUser.ExecuteCommand(thisCommand, ProgramLoop.myCalendar, myCurrentAuction, myCurrentItem); if (((myUser.getUserType()) == (User.UserType.NPO)) && (thisCommand == (User.Command.ADDAUCTION))) { myCurrentAuction = ((NonProfit) (myUser)).getAuction(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5326/buggy-version/ProgramLoop.java", "BodyUseAPI": ["User.ExecuteCommand(User.Command,Calendar,Auction,Item)"], "Fixed commit": "d8af74b8fefdcf702941d0009ad6c9fa17266a1a", "Url": "https://api.github.com/repos/TCSS360group5/AuctionCentral", "Date": "2015-11-17T06:15:32Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (axmlBytes != null) { parser.axml.Parser parser = new parser.axml.Parser(axmlBytes, arscBytes); manifestInfo = parser.getManifestInfo(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6091/buggy-version/core.src.main.java.parser.apk.APK.java", "BodyUseAPI": [], "Fixed commit": "97d25e07c3b12f6e973ccdcfd7303cf86ef1b5d4", "Url": "https://api.github.com/repos/acgmohu/android-toolkit", "Date": "2014-07-03T08:41:04Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Config.debugMode1) iCoLand.info(((me.slaps.iCoLand.LandDBH2.cp.getActiveConnections()) + \" active connections\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5589/buggy-version/src.me.slaps.iCoLand.LandDBH2.java", "BodyUseAPI": [], "Fixed commit": "b83a5590ca521df8769086aba44c2f8d1221ee83", "Url": "https://api.github.com/repos/iConomy/iCoLand", "Date": "2011-04-10T17:29:07Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((me.slaps.iCoLand.iCoLand.landMgr) == null) { me.slaps.iCoLand.iCoLand.info(\"Initializing land manager...\"); me.slaps.iCoLand.iCoLand.landMgr = new me.slaps.iCoLand.LandManager(((me.slaps.iCoLand.LandDB) (new me.slaps.iCoLand.LandDBH2((((me.slaps.iCoLand.iCoLand.pluginDirectory) + (java.io.File.separator)) + (Config.h2DBFile)))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5589/buggy-version/src.me.slaps.iCoLand.iCoLand.java", "BodyUseAPI": [], "Fixed commit": "b83a5590ca521df8769086aba44c2f8d1221ee83", "Url": "https://api.github.com/repos/iConomy/iCoLand", "Date": "2011-04-10T17:29:07Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.geniatech.client_box.Summary.get(com.geniatech.client_box.BoxActivity,info.getSSID(),NetworkInfo.DetailedState)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((str == null) || (str == \"\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7822/buggy-version/src.com.geniatech.client_box.BoxActivity.java", "BodyUseAPI": [], "Fixed commit": "879a0c39ff9e25cc665e1fca7ac8abea31643e10", "Url": "https://api.github.com/repos/manyuan/Client_box", "Date": "2013-04-24T10:51:39Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((audioLine) != null) audioLine.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4160/buggy-version/src.main.java.com.shuffle.scplayer.core.AudioPlayer.java", "BodyUseAPI": [], "Fixed commit": "6596899987741852a9955eafcc3178d35eeb4a6a", "Url": "https://api.github.com/repos/LeanderK/scplayer", "Date": "2015-11-07T18:51:46Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Parse.mon) == null) { java.lang.System.out.println(\"You cannot use this item right now!\"); }else { Parse.character.getItem(\"toilet paper\").useInFight(Parse.character, Parse.mon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8353/buggy-version/Parse.java", "BodyUseAPI": [], "Fixed commit": "f1a7ef97121e62a034981b426249b11612a5087c", "Url": "https://api.github.com/repos/sophialiu16/The-pinnacle-of-humanity", "Date": "2015-05-28T05:29:41Z"},
{"Line": "=>688", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(moduleName)) { appDirName = (appDirName + (java.io.File.separator)) + moduleName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3013/buggy-version/phresco-framework-web.src.main.java.com.photon.phresco.framework.rest.api.ConfigurationService.java", "BodyUseAPI": [], "Fixed commit": "fd564bcc658b422384cccee37005882a280362f6", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2013-11-06T10:01:22Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (separatorIndex != (-1)) { pageFrom = content.substring(0, separatorIndex); pageTo = content.substring((separatorIndex + 1)); }else { pageFrom = content; pageTo = content; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4387/buggy-version/DblpSplitter.src.main.java.PagesFilter.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.substring(int,int)"], "Fixed commit": "9a0367390a83f796d0fb808076724775917b310e", "Url": "https://api.github.com/repos/ClemensDaCoder/DKEPraktikum", "Date": "2013-11-03T15:50:45Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prefixName.equals(\"ig\")) { if (fileName.startsWith(\"iga\")) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8178/buggy-version/src.main.java.jp.igapyon.diary.v3.parser.IgapyonMdTitleParser.java", "BodyUseAPI": [], "Fixed commit": "837c4c5856dade1ab6006bfe0347149d7e3c51a2", "Url": "https://api.github.com/repos/igapyon/igapyonv3", "Date": "2017-01-08T03:22:39Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((url.contains(\"http\")) || (url.contains(\"https\")))) { url = \"http://\" + url; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/147/buggy-version/src.StockChecker.Controller.java", "BodyUseAPI": [], "Fixed commit": "b6e59221760b705d5f0d6568d42f10216836fe52", "Url": "https://api.github.com/repos/superzjn/StockChecker", "Date": "2017-03-09T01:59:25Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag == 0) { query = \" \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/716/buggy-version/src.search.windows.MainGUI.java", "BodyUseAPI": [], "Fixed commit": "23e05efdb1a5253d7f65db4f815e1ec2eb96edec", "Url": "https://api.github.com/repos/RaspyDuke694/Search", "Date": "2017-01-20T17:16:24Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((dateFrom != null) && (dateTo != null)) { params.add(new com.idega.core.persistence.Param(com.idega.user.data.bean.GroupRelation.PARAM_DATE_FROM, dateFrom)); params.add(new com.idega.core.persistence.Param(com.idega.user.data.bean.GroupRelation.PARAM_DATE_TO, dateTo)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7969/buggy-version/src.java.com.idega.user.dao.impl.GroupRelationDAOImpl.java", "BodyUseAPI": ["java.util.List<com.idega.core.persistence.Param>.add(com.idega.core.persistence.Param)", "java.util.List<com.idega.core.persistence.Param>.add(com.idega.core.persistence.Param)"], "Fixed commit": "def75aa868608ac265f7c6b4bdbb969e1ebfacd7", "Url": "https://api.github.com/repos/idega/com.idega.core", "Date": "2015-12-17T06:51:24Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(modelList.isEmpty())) { for (int i = start - 1; i < end; i++) { frostillicus.xsp.model.ModelObject model = modelList.get(i); writer.startArrayItem(); writer.startObject(); frostillicus.xsp.model.servlet.resources.ResourceUtils.writeModelObject(model, managerName, hidden, writer); writer.endObject(); writer.endArrayItem(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7396/buggy-version/frostillicus.framework.src.frostillicus.xsp.model.servlet.resources.ModelResource.java", "BodyUseAPI": ["frostillicus.xsp.model.AbstractModelList<? extends frostillicus.xsp.model.ModelObject>.get(int)"], "Fixed commit": "9cb5c4665a4f2cbc90e296f42b737d0e9eaa9748", "Url": "https://api.github.com/repos/jesse-gallagher/XPages-Scaffolding", "Date": "2014-07-09T19:07:08Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sds.util.AccessFlags.checkFlag(accessFlag, sds.util.AccessFlags.ACC_STATIC)) sb.append(\"static \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7566/buggy-version/src.main.java.sds.util.AccessFlags.java", "BodyUseAPI": [], "Fixed commit": "e75762ee99394374311b2a3ae0ee073dad67bb71", "Url": "https://api.github.com/repos/g1144146/SDS", "Date": "2016-04-29T02:59:06Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jetbrains.jet.lang.diagnostics.rendering.ConstraintSystemImpl.getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((typeParameterDescriptor == null) && (status.hasConflictingConstraints())) { return org.jetbrains.jet.lang.diagnostics.rendering.Renderers.renderConflictingSubstitutionsInferenceError(inferenceErrorData, result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/309/buggy-version/compiler.frontend.src.org.jetbrains.jet.lang.diagnostics.rendering.Renderers.java", "BodyUseAPI": [], "Fixed commit": "9f8eded004e7edb06c6fe157a646ec0059624ef0", "Url": "https://api.github.com/repos/JetBrains/kotlin", "Date": "2013-12-24T10:52:58Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(getPersonType())) { personType = org.openmrs.util.OpenmrsConstants.PERSON_TYPE.valueOf(getPersonType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/493/buggy-version/web.src.main.java.org.openmrs.web.taglib.ForEachDisplayAttributeTag.java", "BodyUseAPI": [], "Fixed commit": "71aa3fffc0f3a391404e8dfc6d308032965de9d7", "Url": "https://api.github.com/repos/aj-jaswanth/openmrs-core", "Date": "2015-10-22T19:32:01Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(getDisplayType())) { viewType = org.openmrs.api.PersonService.ATTR_VIEW_TYPE.valueOf(getDisplayType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/493/buggy-version/web.src.main.java.org.openmrs.web.taglib.ForEachDisplayAttributeTag.java", "BodyUseAPI": [], "Fixed commit": "71aa3fffc0f3a391404e8dfc6d308032965de9d7", "Url": "https://api.github.com/repos/aj-jaswanth/openmrs-core", "Date": "2015-10-22T19:32:01Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mediaUrl.getPort()) != (-1)) { url = com.github.cypher.sdk.api.Util.UrlBuilder(session.getHomeServer(), Endpoint.MEDIA_THUMBNAIL, new java.lang.Object[]{ ((mediaUrl.getHost()) + \":\") + (mediaUrl.getPort()), mediaUrl.getPath().replaceFirst(\"/\", \"\") }, parameters); }else { url = com.github.cypher.sdk.api.Util.UrlBuilder(session.getHomeServer(), Endpoint.MEDIA_DOWNLOAD, new java.lang.Object[]{ mediaUrl.getHost(), mediaUrl.getPath().replaceFirst(\"/\", \"\") }, parameters); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7522/buggy-version/src.main.java.com.github.cypher.sdk.api.MatrixApiLayer.java", "BodyUseAPI": ["java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "java.lang.String.replaceFirst(java.lang.String,java.lang.String)", "com.github.cypher.sdk.api.Util.UrlBuilder(session.getHomeServer(),Endpoint.MEDIA_THUMBNAIL,java.lang.Object[],java.util.Map<java.lang.String, java.lang.String>)", "java.net.URL.getPath()", "com.github.cypher.sdk.api.Util.UrlBuilder(session.getHomeServer(),Endpoint.MEDIA_DOWNLOAD,java.lang.Object[],java.util.Map<java.lang.String, java.lang.String>)", "java.net.URL.getHost()", "java.net.URL.getHost()", "java.net.URL.getPath()", "java.net.URL.getPort()"], "Fixed commit": "a9853cd0a60ac9610b60a92510f9ec3a0cc2aa31", "Url": "https://api.github.com/repos/Gurgy/Cypher", "Date": "2017-05-21T11:25:17Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((avatar.getValue()) == null) { setAvatar(contentObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7522/buggy-version/src.main.java.com.github.cypher.sdk.User.java", "BodyUseAPI": [], "Fixed commit": "a9853cd0a60ac9610b60a92510f9ec3a0cc2aa31", "Url": "https://api.github.com/repos/Gurgy/Cypher", "Date": "2017-05-21T11:25:17Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7333/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "a4997d685728cec1b9b64d99db873dd77529a301", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!existing) { config.addProperty(\"include-and-override\", \"portal-developer.properties\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/255/buggy-version/tools.plugins.com.liferay.ide.server.core.src.com.liferay.ide.server.core.portal.PortalServerBehavior.java", "BodyUseAPI": [], "Fixed commit": "27beecd831e94293cbdc90967fb9108554cb7695", "Url": "https://api.github.com/repos/AndyWu2015/liferay-ide", "Date": "2017-06-19T03:28:01Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos == (-1)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2308/buggy-version/app.src.main.java.com.ivanchug.moneytracker.ItemsAdapter.java", "BodyUseAPI": [], "Fixed commit": "647a8b7269bb2e30ef1dc8503f47967a634a6aa6", "Url": "https://api.github.com/repos/IChugunov/MoneyTracker", "Date": "2017-07-14T16:22:12Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displayList) != 0) org.lwjgl.opengl.GL11.glDeleteLists(displayList, 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6377/buggy-version/src.net.lodoma.lime.mask.Mask.java", "BodyUseAPI": [], "Fixed commit": "24122c997a1626cf637fc4b1d0c1ea44ef44d4b4", "Url": "https://api.github.com/repos/LoDoMa/Lime", "Date": "2014-07-18T11:27:21Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((displayList) == 0) compile();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6377/buggy-version/src.net.lodoma.lime.mask.Mask.java", "BodyUseAPI": [], "Fixed commit": "24122c997a1626cf637fc4b1d0c1ea44ef44d4b4", "Url": "https://api.github.com/repos/LoDoMa/Lime", "Date": "2014-07-18T11:27:21Z"},
{"Line": "=>695", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileVersion.isInTrash()) { title = com.liferay.portlet.trash.util.TrashUtil.getOriginalTitle(fileEntry.getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9037/buggy-version/portal-impl.src.com.liferay.portlet.documentlibrary.util.DLImpl.java", "BodyUseAPI": [], "Fixed commit": "d7facb03525b89e0991fa3594103e3e86257b902", "Url": "https://api.github.com/repos/hhuijser/liferay-portal", "Date": "2013-03-21T10:01:53Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!((config.get(entry)) instanceof org.bukkit.configuration.MemorySection)) tree.set(entry, config.get(entry).toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3803/buggy-version/src.core.net.citizensnpcs.properties.CachedYAMLHandler.java", "BodyUseAPI": ["net.citizensnpcs.properties.SettingsTree.set(java.lang.String,config.get(entry).toString())", "config.get(entry).toString()", "org.bukkit.configuration.file.FileConfiguration.get(java.lang.String)"], "Fixed commit": "c4d4111f598e3be999bc0160f946b3979b2eddd2", "Url": "https://api.github.com/repos/CitizensDev/Citizens", "Date": "2011-10-28T15:00:06Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getDialog().findViewById(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (titleDivider != null) { titleDivider.setBackgroundColor(getResources().getColor(R.color.treehacks_red)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5758/buggy-version/app.src.main.java.com.treehacks.treehacks.ScheduleFragment.java", "BodyUseAPI": ["android.view.View.setBackgroundColor(getResources().getColor(R.color.treehacks_red))"], "Fixed commit": "c7f9b208985180e5ae92fc256f770fa942e0646e", "Url": "https://api.github.com/repos/2015HackNTU/Android-App", "Date": "2015-06-04T16:20:44Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == cursor) || (0 == (cursor.getCount()))) return java.util.Collections.emptyList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1806/buggy-version/app.src.main.java.com.nikolaykul.gradebook.data.local.db.Db.java", "BodyUseAPI": [], "Fixed commit": "27babcd126fd3926b3b7453b6c53fe7ab20909f7", "Url": "https://api.github.com/repos/NikolayKul/Gradebook", "Date": "2015-11-02T09:45:06Z"},
{"Line": "=>827", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.getMethod().equals(HTTPConstants.HEADER_GET)) { org.apache.axis2.transport.http.util.RESTUtil.processURLRequest(messageContext, response.getOutputStream(), null); }else { org.apache.axis2.transport.http.util.RESTUtil.processURLRequest(messageContext, response.getOutputStream(), request.getContentType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1585/buggy-version/modules.transport.http.src.org.apache.axis2.transport.http.AxisServlet.java", "BodyUseAPI": ["org.apache.axis2.transport.http.util.RESTUtil.processURLRequest(org.apache.axis2.context.MessageContext,response.getOutputStream(),request.getContentType())", "javax.servlet.http.HttpServletRequest.getContentType()"], "Fixed commit": "12db274312d8b2a1129e75718825c65ce3e52154", "Url": "https://api.github.com/repos/manoj-kumara/wso2-axis2", "Date": "2015-07-18T08:28:39Z"},
{"Line": "=>570", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parameters) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/159/buggy-version/WikipediaCleaner.src.org.wikipediacleaner.api.data.PageElementTemplate.java", "BodyUseAPI": [], "Fixed commit": "02e0d0212e80fa36044097ea12748e6adc29bf38", "Url": "https://api.github.com/repos/WPCleaner/wpcleaner", "Date": "2015-12-24T17:05:13Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((temp.getImage()) != null) { temp.getImage().flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2625/buggy-version/core.src.main.java.cn.ieclipse.smartim.callback.impl.DefaultLoginCallback.java", "BodyUseAPI": [], "Fixed commit": "6de62ab78db801fc5671a8040ddf63ccbeccc7e9", "Url": "https://api.github.com/repos/Jamling/SmartIM", "Date": "2017-11-02T09:57:56Z"},
{"Line": "=>1424", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inJail()) { result.append(\" - Behind Bars!\"); }else if (((location.index) == 10) && (!(inJail()))) { result.append(\" - Just Visiting.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4804/buggy-version/Genetic_Algorithm_Monopoly.src.edu.uccs.ecgs.players.AbstractPlayer.java", "BodyUseAPI": [], "Fixed commit": "17d1812813f832514ddf9db56f8edf5da71f98c0", "Url": "https://api.github.com/repos/kmukhar/GAMonopoly", "Date": "2013-03-05T18:07:13Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gameboi.GBMem.readByte(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isSet(lcdc, 1)) { drawSprites(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8100/buggy-version/src.gameboi.GPU.java", "BodyUseAPI": [], "Fixed commit": "8f08515db4db1912f54eb38d5499426c3060ea5a", "Url": "https://api.github.com/repos/tomis007/gameboi", "Date": "2016-07-05T21:03:59Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sorcer.util.GenericUtil.isWindows()) && (configs[i].contains(\" \"))) configs[i] = (\"\\\"\" + (configs[i])) + \"\\\"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7770/buggy-version/sos.sorcer-api.src.main.java.sorcer.core.deploy.Deployment.java", "BodyUseAPI": [], "Fixed commit": "27dd68d764c302b29943a1e1b13867ab2da3be29", "Url": "https://api.github.com/repos/sorcersoft/sorcer", "Date": "2014-05-27T08:59:56Z"},
{"Line": "=>614", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (attachments == null) { this.attachments = null; }else { this.attachments = java.util.Arrays.copyOf(attachments, attachments.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5839/buggy-version/genie-common.src.main.java.com.netflix.genie.common.model.JobInfoElement.java", "BodyUseAPI": ["java.util.Arrays.copyOf(com.netflix.genie.common.model.FileAttachment[],attachments.length)"], "Fixed commit": "ca0182c5c9338b0848af2e4b2fb1a44c6dcc743d", "Url": "https://api.github.com/repos/Netflix/genie", "Date": "2013-09-25T23:35:08Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (limitInt <= 0) { throw new java.lang.IllegalArgumentException(java.lang.String.format(\"Found invalid Limit: '%1$s'. Limit must be a positive integer.\", limit)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1000/buggy-version/java.src.main.java.monasca.api.infrastructure.persistence.PersistUtils.java", "BodyUseAPI": [], "Fixed commit": "3dd9e7c629e0524390c738c745c7416ae7b44031", "Url": "https://api.github.com/repos/openstack/monasca-api", "Date": "2015-05-06T16:59:00Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (maxQueryLimit <= 0) { this.maxQueryLimit = DEFAULT_MAX_QUERY_LIMIT; }else { this.maxQueryLimit = maxQueryLimit; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1000/buggy-version/java.src.main.java.monasca.api.infrastructure.persistence.PersistUtils.java", "BodyUseAPI": [], "Fixed commit": "3dd9e7c629e0524390c738c745c7416ae7b44031", "Url": "https://api.github.com/repos/openstack/monasca-api", "Date": "2015-05-06T16:59:00Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDestroy) { super.onBackPressed(); }else { getSupportFragmentManager().popBackStack(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4493/buggy-version/app.src.main.java.example.zj.com.animation.fragment.FragmentAnimActivity.java", "BodyUseAPI": [], "Fixed commit": "38f3abf0a53c995a40f23211e22e7c9d895cfaa1", "Url": "https://api.github.com/repos/zhengjiong/ZJ_Animation", "Date": "2015-08-14T08:41:49Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!duplicate) { item.setBlog(blog); itemRepository.save(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5049/buggy-version/src.main.java.cz.jiripinkas.jba.service.BlogService.java", "BodyUseAPI": [], "Fixed commit": "f28578d1fa7679d56352ee133f6f9959a78e7513", "Url": "https://api.github.com/repos/jirkapinkas/java-blog-aggregator", "Date": "2015-03-18T19:58:50Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(itemRepository.findByBlogAndLink(blog, item.getLink()).isEmpty())) { duplicate = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5049/buggy-version/src.main.java.cz.jiripinkas.jba.service.BlogService.java", "BodyUseAPI": [], "Fixed commit": "f28578d1fa7679d56352ee133f6f9959a78e7513", "Url": "https://api.github.com/repos/jirkapinkas/java-blog-aggregator", "Date": "2015-03-18T19:58:50Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Boolean.TRUE.equals(blog.getAggregator())) && (!(itemRepository.findByTitleIgnoreCase(item.getTitle()).isEmpty()))) { duplicate = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5049/buggy-version/src.main.java.cz.jiripinkas.jba.service.BlogService.java", "BodyUseAPI": [], "Fixed commit": "f28578d1fa7679d56352ee133f6f9959a78e7513", "Url": "https://api.github.com/repos/jirkapinkas/java-blog-aggregator", "Date": "2015-03-18T19:58:50Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (shareContainer.needAnonymousShares()) { entries.addAll(anonymousShareEntryService.create(actor, owner, shareContainer)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5428/buggy-version/src.main.java.org.linagora.linshare.core.service.impl.ShareServiceImpl.java", "BodyUseAPI": ["java.util.Set<org.linagora.linshare.core.domain.entities.Entry>.addAll(anonymousShareEntryService.create(actor, owner, shareContainer))", "org.linagora.linshare.core.service.AnonymousShareEntryService.create(org.linagora.linshare.core.domain.entities.Account,org.linagora.linshare.core.domain.entities.User,org.linagora.linshare.core.domain.objects.ShareContainer)"], "Fixed commit": "71dde914e97b0d2c772cf8e19e001bc20ee1ecad", "Url": "https://api.github.com/repos/linagora/linshare-core", "Date": "2015-07-29T15:34:03Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(event.isCancelled())) { ((org.bukkit.entity.Player) (attacker)).sendMessage(((org.bukkit.ChatColor.DARK_RED) + \"You are not an Assassin.\")); event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1023/buggy-version/src.com.me.tft_02.assassin.Listeners.EntityListener.java", "BodyUseAPI": ["org.bukkit.event.entity.EntityDamageByEntityEvent.setCancelled(boolean)"], "Fixed commit": "0fd70dabaae7a341007e5f04e11144c9e3e60c35", "Url": "https://api.github.com/repos/TfT-02/Assassin", "Date": "2013-02-06T15:12:22Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jarConfig.exists()) { return jarConfig; }else { return new java.io.File(((java.lang.System.getProperty(\"user.home\")) + \"/pladipus/config\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/736/buggy-version/Pladipus-core.src.main.java.com.compomics.pladipus.core.model.properties.NetworkProperties.java", "BodyUseAPI": [], "Fixed commit": "4d9278388eee243483168fce8b5cf3b249a969de", "Url": "https://api.github.com/repos/compomics/pladipus", "Date": "2016-02-11T12:36:25Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.children()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tds.size()) != 8) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2887/buggy-version/src.main.java.com.tianyl.filmManage.service.crawler.Mp4baCrawler.java", "BodyUseAPI": [], "Fixed commit": "d7fa56e715c5c32e3bb248deead177f18d83ac0d", "Url": "https://api.github.com/repos/tianyl1984/film-manage", "Date": "2016-02-16T13:41:43Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((config.getKeys(((\"custom-drops.\" + key) + \".rewards\"))) != null) { for (java.lang.String reward : config.getKeys(((\"custom-drops.\" + key) + \".rewards\"))) { java.lang.String rewardType = config.getString(((((\"custom-drops.\" + key) + \".rewards.\") + reward) + \".type\"), \"None\"); com.sk89q.craftbook.mechanics.drops.rewards.DropReward dropReward = null; if (rewardType.equalsIgnoreCase(\"money\")) { double amount = config.getDouble(((((\"custom-drops.\" + key) + \".rewards.\") + reward) + \".amount\"), 10); dropReward = new com.sk89q.craftbook.mechanics.drops.rewards.MonetaryDropReward(reward, amount); } if (dropReward == null) continue; rewards.add(dropReward); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8294/buggy-version/src.main.java.com.sk89q.craftbook.mechanics.drops.CustomDrops.java", "BodyUseAPI": ["com.sk89q.util.yaml.YAMLProcessor.getString(java.lang.String,java.lang.String)", "com.sk89q.util.yaml.YAMLProcessor.getKeys(java.lang.String)", "com.sk89q.util.yaml.YAMLProcessor.getDouble(java.lang.String,int)"], "Fixed commit": "563dcdc28c20031b18c0d222356a56419a37a376", "Url": "https://api.github.com/repos/sk89q/CraftBook", "Date": "2014-08-08T05:53:57Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.loanStatus) != null) { from = org.mifosng.platform.loan.domain.LoanStatus.fromInt(this.loanStatus); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2084/buggy-version/mifosng-provider.src.main.java.org.mifosng.platform.loan.domain.Loan.java", "BodyUseAPI": [], "Fixed commit": "ccfd8a09e09f35488b5c220352fd18ba1a0b97d4", "Url": "https://api.github.com/repos/madhukar547/mifosx", "Date": "2012-08-18T10:21:18Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentAccessToken()) != null) { com.facebook.login.LoginManager.getInstance().logOut(); }else { android.content.Intent loginActivity = new android.content.Intent(this, com.gppmds.tra.temremdioa.controller.LogInActivity.class); startActivity(loginActivity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/160/buggy-version/TemRemedioAi.app.src.main.java.com.gppmds.tra.temremdioa.controller.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "503881baa6aa95281c1ff04dc3f64958c1a7dc2e", "Url": "https://api.github.com/repos/tecProgTemRemedioAi/2016.1-TemRemedioAi", "Date": "2016-10-23T16:17:04Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((de.azapps.mirakel.helper.ChangeLog.API_LEVEL) < (Build.VERSION_CODES.HONEYCOMB)) { wv = new android.webkit.WebView(new android.view.ContextThemeWrapper(this.context, R.style.Dialog)); }else { wv = new android.webkit.WebView(this.context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7287/buggy-version/src.de.azapps.mirakel.helper.ChangeLog.java", "BodyUseAPI": [], "Fixed commit": "9836189996d00d5e1b072fd67b3a71d630fedc21", "Url": "https://api.github.com/repos/azapps/mirakel-android", "Date": "2013-06-06T16:57:49Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inVip()) || ((getRandom().nextDouble()) < (harvestOdds))) { investigateHarvesting(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3159/buggy-version/src.edu.mtu.wup.nipf.EcosystemsAgent.java", "BodyUseAPI": [], "Fixed commit": "a9dbb64157abadf9793b3d9a554adc273a7fcce4", "Url": "https://api.github.com/repos/rjzupkoii/forestsim", "Date": "2017-05-16T20:23:53Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != (proc)) { ajcOptions.add((\"-proc:\" + (proc))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7291/buggy-version/src.main.java.org.codehaus.mojo.aspectj.AbstractAjcCompiler.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "8e49d40a1400e994ea6f2d090e2241d07788f7fb", "Url": "https://api.github.com/repos/mojohaus/aspectj-maven-plugin", "Date": "2015-08-25T18:02:42Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (localA.equals(localB)) { r = localA; }else { r = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7682/buggy-version/src.main.java.ReclamationProject.java", "BodyUseAPI": [], "Fixed commit": "27666cfea77a0d65105d1e212ef0e089cd202287", "Url": "https://api.github.com/repos/juliass2/Lab4", "Date": "2017-09-26T20:48:41Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == (LockMode.NO_LOCK)) { org.exist.storage.lock.ReentrantReadWriteLock.LOG.warn(\"Released with LockMode.NO_LOCK!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2133/buggy-version/src.org.exist.storage.lock.ReentrantReadWriteLock.java", "BodyUseAPI": [], "Fixed commit": "72a615dcc18bdc66da7cc5bbd02aca2feec984fc", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2016-12-23T01:32:40Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == (LockMode.NO_LOCK)) { org.exist.storage.lock.ReentrantReadWriteLock.LOG.warn(\"Attempted acquire with LockMode.NO_LOCK!\"); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2133/buggy-version/src.org.exist.storage.lock.ReentrantReadWriteLock.java", "BodyUseAPI": [], "Fixed commit": "72a615dcc18bdc66da7cc5bbd02aca2feec984fc", "Url": "https://api.github.com/repos/eXist-db/exist", "Date": "2016-12-23T01:32:40Z"},
{"Line": "=>925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((split.length) > 5) { m = java.lang.Double.parseDouble(split[5]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2694/buggy-version/swg.gui.resources.SWGHarvestingTab.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "b557849a5516a38df1455444ac9d3b630a9fd6a7", "Url": "https://api.github.com/repos/twistedatrocity/SWGAide-NGE", "Date": "2017-11-14T21:10:28Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.undeadscythes.udsplugin.commands.WorldFlag.getByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (flag == null) flag = com.undeadscythes.udsplugin.commands.RegionFlag.getByName(name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3605/buggy-version/src.com.undeadscythes.udsplugin.commands.ErrorReporter.java", "BodyUseAPI": [], "Fixed commit": "3f77f106e999910ac7c7d3c2e03aa481f44fc34b", "Url": "https://api.github.com/repos/UDSMinecraft/UDSPlugin", "Date": "2013-08-12T12:43:39Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (controller.GetHitNotes().contains(note)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1940/buggy-version/RythmGame.src.game.MyJPanel.java", "BodyUseAPI": [], "Fixed commit": "8d1c874661959f52c86644c97bf8a3bff3df367e", "Url": "https://api.github.com/repos/SaschaLK/P2_GroupProject", "Date": "2017-02-18T05:02:35Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (error >= (188 - ((3 * (controller.getHitDifficulty())) * 2))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1940/buggy-version/RythmGame.src.game.Play.java", "BodyUseAPI": [], "Fixed commit": "8d1c874661959f52c86644c97bf8a3bff3df367e", "Url": "https://api.github.com/repos/SaschaLK/P2_GroupProject", "Date": "2017-02-18T05:02:35Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n instanceof edacc.parameterspace.graph.OrNode) L.add(((edacc.parameterspace.graph.OrNode) (n)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5482/buggy-version/src.edacc.parameterspace.graph.ParameterGraph.java", "BodyUseAPI": [], "Fixed commit": "a71ef7b9b36870d385fcee56e0d329324849075a", "Url": "https://api.github.com/repos/ceari/edacc_api", "Date": "2012-12-07T14:47:36Z"},
{"Line": "=>664", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mStarSubscriptions) != null) { while ((mStarSubscriptions.size()) > 0) { rx.Subscription subscription = ((rx.Subscription) (mStarSubscriptions.removeFirst())); if ((subscription != null) && (!(subscription.isUnsubscribed()))) { subscription.unsubscribe(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7656/buggy-version/app.src.main.java.com.wilee8.coyotereader2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6b5d2ad9062c7f1574eb5251fc928f8ba2914a3b", "Url": "https://api.github.com/repos/wilee8/CoyoteReader2", "Date": "2015-09-06T04:06:15Z"},
{"Line": "=>654", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMarkArticleReadSubscriptions) != null) { while ((mMarkArticleReadSubscriptions.size()) > 0) { rx.Subscription subscription = ((rx.Subscription) (mMarkArticleReadSubscriptions.removeFirst())); if ((subscription != null) && (!(subscription.isUnsubscribed()))) { subscription.unsubscribe(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7656/buggy-version/app.src.main.java.com.wilee8.coyotereader2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6b5d2ad9062c7f1574eb5251fc928f8ba2914a3b", "Url": "https://api.github.com/repos/wilee8/CoyoteReader2", "Date": "2015-09-06T04:06:15Z"},
{"Line": "=>644", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMarkAllReadSubscriptions) != null) { while ((mMarkAllReadSubscriptions.size()) > 0) { rx.Subscription subscription = ((rx.Subscription) (mMarkAllReadSubscriptions.removeFirst())); if ((subscription != null) && (!(subscription.isUnsubscribed()))) { subscription.unsubscribe(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7656/buggy-version/app.src.main.java.com.wilee8.coyotereader2.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6b5d2ad9062c7f1574eb5251fc928f8ba2914a3b", "Url": "https://api.github.com/repos/wilee8/CoyoteReader2", "Date": "2015-09-06T04:06:15Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(split.contains(token))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1742/buggy-version/src.main.java.org.jbei.ice.lib.dto.entry.AutoCompleteFieldValues.java", "BodyUseAPI": [], "Fixed commit": "6f46938107cbef53154d51a42d973c0a9b823e96", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2016-06-22T19:47:09Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (token.isEmpty()) return new java.util.ArrayList<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1742/buggy-version/src.main.java.org.jbei.ice.lib.dto.entry.AutoCompleteFieldValues.java", "BodyUseAPI": [], "Fixed commit": "6f46938107cbef53154d51a42d973c0a9b823e96", "Url": "https://api.github.com/repos/JBEI/ice", "Date": "2016-06-22T19:47:09Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((feedback.getScore()) < (org.eyeseetea.malariacare.utils.Constants.MAX_AMBER)) textView.setTextColor(org.eyeseetea.malariacare.database.utils.PreferencesState.getInstance().getContext().getResources().getColor(R.color.amber)); else textView.setTextColor(org.eyeseetea.malariacare.database.utils.PreferencesState.getInstance().getContext().getResources().getColor(R.color.lightGreen));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3182/buggy-version/app.src.main.java.org.eyeseetea.malariacare.layout.adapters.survey.FeedbackAdapter.java", "BodyUseAPI": [], "Fixed commit": "a6e4c9be20d0df8b9dea52584a218681d375cad2", "Url": "https://api.github.com/repos/EyeSeeTea/malariapp", "Date": "2016-03-24T13:19:48Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (EncryptionConstants.ALGO_ID_KEYTRANSPORT_RSA15.equals(algorithm)) { return null; }else { org.apache.xml.security.encryption.XMLCipherUtil.log.debug(\"Saw non-AES-GCM mode block cipher, returning IvParameterSpec: {}\", algorithm); return new javax.crypto.spec.IvParameterSpec(iv); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8424/buggy-version/src.main.java.org.apache.xml.security.encryption.XMLCipherUtil.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,java.lang.String)"], "Fixed commit": "6b580c56a3ecedc67a9783e59d9e1e05772b8631", "Url": "https://api.github.com/repos/Legostaev/xmlsec-gost", "Date": "2016-12-18T11:22:02Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.createNewFile()) { Sanguimancy.logger.info((((\"Creating \" + name) + \" in \") + (java.lang.String.valueOf(net.minecraftforge.common.DimensionManager.getCurrentSaveRootDirectory())))); }else { throw new java.io.IOException((\"Failed to create directory \" + (file.getParent()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3936/buggy-version/src.main.java.tombenpotter.sanguimancy.util.LocationsHandler.java", "BodyUseAPI": ["java.io.File.getParent()"], "Fixed commit": "71b0f971c41104e81a0ff5bb6aff65f9b8c6cd41", "Url": "https://api.github.com/repos/Tombenpotter/Sanguimancy", "Date": "2014-11-19T19:54:26Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!((userService.checkErExists(erId)) || (userService.checkHrExists(hrId)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8626/buggy-version/src.main.java.com.spidernet.dashboard.controller.CapabilityBController.java", "BodyUseAPI": [], "Fixed commit": "473bed6b5383158ee4c7650a21aaaec874c97239", "Url": "https://api.github.com/repos/nick-cwb/SpiderNet", "Date": "2017-03-17T08:34:13Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.internalNode.hasLabel(LabelDef.ENTITY))) { this.internalNode.addLabel(LabelDef.ENTITY); this.internalNode.setProperty(app.Entity.GUID, app.Token.randomToken().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/376/buggy-version/src.app.Entity.java", "BodyUseAPI": ["app.Node.addLabel(LabelDef.ENTITY)", "app.Node.setProperty(java.lang.String,app.Token.randomToken().toString())"], "Fixed commit": "9268f0b6d763cd59f293f00c8263d0c77b1b45e2", "Url": "https://api.github.com/repos/jamesmiller5/app", "Date": "2013-09-18T21:33:52Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (tag != null) ru.rutube.RutubeApp.MainApplication.getInstance().openFeed(tag.href, getActivity(), tag.title); else ((ru.rutube.RutubeApp.MainApplication) (ru.rutube.RutubeApp.MainApplication.getInstance())).reportError(getActivity(), java.lang.String.format(\"empty tag onClick at %s\", java.lang.String.valueOf(view)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4883/buggy-version/RutubeApp.src.ru.rutube.RutubeApp.ui.feed.RutubeRelatedFeedFragment.java", "BodyUseAPI": ["ru.rutube.RutubeApp.MainApplication.getInstance().openFeed(tag.href,getActivity(),tag.title)"], "Fixed commit": "4e3a944407f8cf4c5c3a0b9c2668f7769ff7928e", "Url": "https://api.github.com/repos/tumb1er/RutubeAppProject", "Date": "2013-12-24T09:50:52Z"},
{"Line": "=>277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.internal.corext.refactoring.structure.ASTNodeSearchUtil.getMethodDeclarationNode(org.eclipse.jdt.core.IMethod,org.eclipse.jdt.core.dom.CompilationUnit)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (declaration != null) { org.eclipse.jdt.core.dom.Block body = declaration.getBody(); if (body != null) { @java.lang.SuppressWarnings(\"rawtypes\") java.util.List statements = body.statements(); if (!(statements.isEmpty())) { edu.cuny.citytech.defaultrefactoring.core.refactorings.MigrateSkeletalImplementationToInterfaceRefactoring.addWarning(status, Messages.MigrateSkeletalImplementationToInferfaceRefactoring_NoMethodsWithStatements, method); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1130/buggy-version/edu.cuny.citytech.defaultrefactoring.core.src.edu.cuny.citytech.defaultrefactoring.core.refactorings.MigrateSkeletalImplementationToInterfaceRefactoring.java", "BodyUseAPI": ["org.eclipse.jdt.core.dom.MethodDeclaration.getBody()"], "Fixed commit": "d2a6221fd139b0ea860998cf42b0b32ccbfbd37e", "Url": "https://api.github.com/repos/ponder-lab/Migrate-Skeletal-Implementation-to-Interface-Refactoring", "Date": "2015-07-14T22:40:15Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLocation) != null) executeSaving(); else alert(\"\uc704\uce58 \uc815\ubcf4\ub97c \uac00\uc838\uc624\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3295/buggy-version/src.com.nexters.vobble.activity.ConfirmVobbleActivity.java", "BodyUseAPI": [], "Fixed commit": "9ef6941e64f6d86f46d16a9487b23fdd2bd8bb13", "Url": "https://api.github.com/repos/NextersAppFactory/Vobble.Android", "Date": "2014-02-26T09:26:55Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<com.github.dandelion.core.asset.Asset>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((_assets.isEmpty()) && (parentScope != null)) { assetsStorage.store(null, scope, parentScope); }else { for (com.github.dandelion.core.asset.Asset _asset : _assets) { storeAsset(_asset, scope, parentScopesByScope.get(scope)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8032/buggy-version/dandelion-core.src.main.java.com.github.dandelion.core.asset.AssetsConfigurator.java", "BodyUseAPI": ["com.github.dandelion.core.asset.AssetsStorage.AssetsStorage.store(<nulltype>,java.lang.String,java.lang.String)"], "Fixed commit": "0904f8dda89f7b2ab6b8b5e70a8547899f6d44ca", "Url": "https://api.github.com/repos/dandelion/dandelion", "Date": "2013-11-18T22:39:41Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.clintonhealthaccess.lmis.app.services.AllocationService.filter(java.util.Collection<org.clintonhealthaccess.lmis.app.models.CommodityActionValue>,com.google.common.base.Predicate<org.clintonhealthaccess.lmis.app.models.CommodityActionValue>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((filteredForAllocationId == null) || ((filteredForAllocationId.size()) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7301/buggy-version/app.src.main.java.org.clintonhealthaccess.lmis.app.services.AllocationService.java", "BodyUseAPI": [], "Fixed commit": "0ea3a576c19a4a662be5d4894025bd1abe3f27f5", "Url": "https://api.github.com/repos/clintonhealthaccess/chailmis-android", "Date": "2015-05-04T09:40:55Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(result.equals(null))) return result; else return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1515/buggy-version/src.com.roketgamer.util.PlayerUtils.java", "BodyUseAPI": [], "Fixed commit": "9e925c1d194d95f8f486a188aeecda6d0bcc9adc", "Url": "https://api.github.com/repos/JPII/NavalBattle", "Date": "2012-12-21T23:11:06Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(result.equals(null))) return java.lang.Integer.parseInt(result); else return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1515/buggy-version/src.com.roketgamer.util.PlayerUtils.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "9e925c1d194d95f8f486a188aeecda6d0bcc9adc", "Url": "https://api.github.com/repos/JPII/NavalBattle", "Date": "2012-12-21T23:11:06Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arg == 7) { if (((ref.id.decl) instanceof miniJava.CodeGenerator.FieldDecl) && (((miniJava.CodeGenerator.FieldDecl) (ref.id.decl)).isArrayLength)) { CodeGenError((\"Invalid: Cannot asign to length field of array at\" + (ref.posn.toString()))); }else if (((ref.id.decl) instanceof miniJava.CodeGenerator.FieldDecl) && (((miniJava.CodeGenerator.FieldDecl) (ref.id.decl)).isStatic)) { miniJava.CodeGenerator.ObjectAddress addr = ((miniJava.CodeGenerator.KnownAddress) (ref.id.decl.runtimeEntity)).address; return addr.displacement; }else { ref.ref.visit(this, 5); miniJava.CodeGenerator.ObjectAddress addr = ((miniJava.CodeGenerator.KnownAddress) (ref.id.decl.runtimeEntity)).address; mJAM.Machine.emit(Op.LOADL, addr.displacement); } }else { CodeGenError((((((\"unreconized fetch store arg \" + arg) + \" in qualified ref \") + (ref.getName())) + \" at\") + (ref.posn.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7041/buggy-version/miniJava.src.miniJava.CodeGenerator.Encoder.java", "BodyUseAPI": ["miniJava.CodeGenerator.Encoder.CodeGenError((((((\"unreconized fetch store arg \" + arg) + \" in qualified ref \") + (ref.getName())) + \" at\") + (ref.posn.toString())))"], "Fixed commit": "738ff627e46d8fc83d85d6dcf21b60c57e4b5f64", "Url": "https://api.github.com/repos/pintianz/COMP520", "Date": "2015-04-12T18:45:32Z"},
{"Line": "=>964", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bottomNavigationBehavior) == null) { bottomNavigationBehavior = new com.aurelhubert.ahbottomnavigation.AHBottomNavigationBehavior(behaviorTranslationEnabled); }else { bottomNavigationBehavior.setBehaviorTranslationEnabled(behaviorTranslationEnabled); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7172/buggy-version/ahbottomnavigation.src.main.java.com.aurelhubert.ahbottomnavigation.AHBottomNavigation.java", "BodyUseAPI": [], "Fixed commit": "85cc5f9b9778e0b4b2e460531d3176dcd02973eb", "Url": "https://api.github.com/repos/aurelhubert/ahbottomnavigation", "Date": "2016-05-25T09:43:04Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(behaviorTranslationEnabled)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7172/buggy-version/ahbottomnavigation.src.main.java.com.aurelhubert.ahbottomnavigation.AHBottomNavigationBehavior.java", "BodyUseAPI": [], "Fixed commit": "85cc5f9b9778e0b4b2e460531d3176dcd02973eb", "Url": "https://api.github.com/repos/aurelhubert/ahbottomnavigation", "Date": "2016-05-25T09:43:04Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (holder.isPoolPreparedStatements()) { try { rawStatement.clearParameters(); } catch (java.sql.SQLException ex) { com.alibaba.druid.pool.DruidPooledConnection.LOG.error(\"clear parameter error\", ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2699/buggy-version/src.main.java.com.alibaba.druid.pool.DruidPooledConnection.java", "BodyUseAPI": [], "Fixed commit": "0ffda4f76f9dcf1526c9f08e2c86382e8cce4aca", "Url": "https://api.github.com/repos/wenshao/druid", "Date": "2012-12-24T09:32:20Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endLineIndex < 0) endLineIndex = text.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4313/buggy-version/src.main.java.pipetableformatter.TableDetector.java", "BodyUseAPI": [], "Fixed commit": "fdbde29d4239d027654528ea2b55cf71f0dc4efa", "Url": "https://api.github.com/repos/anton-dev-ua/PipeTableFormatter", "Date": "2014-09-05T17:22:02Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getErrors()[0]) != null) { log.info(\"First Error {}\", e.getErrors()[0].getMessage()); }else { log.info(\"No error messages were set for this Validation Exception.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/768/buggy-version/email.src.main.java.com.meltmedia.cadmium.email.jersey.EmailResource.java", "BodyUseAPI": ["com.meltmedia.cadmium.email.jersey.ValidationException.getErrors()", "e.getErrors()[0].getMessage()", "org.slf4j.Logger.info(java.lang.String,e.getErrors()[0].getMessage())"], "Fixed commit": "08ba35e47e61f150029d330224e92dcf9f1fc9ee", "Url": "https://api.github.com/repos/meltmedia/cadmium", "Date": "2013-05-23T22:58:45Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)", "javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if ((inlatitude != null) && (inlongitude != null)) { float distance = calcDistance(java.lang.Double.parseDouble(inlatitude), java.lang.Double.parseDouble(inlongitude), latitude, longitude); if (distance <= 1) { com.google.gson.JsonObject obj = new com.google.gson.JsonObject(); obj.addProperty(\"id\", id); obj.addProperty(\"name\", name); obj.addProperty(\"address\", address); obj.addProperty(\"city\", city); obj.addProperty(\"state\", state); obj.addProperty(\"latitude\", latitude); obj.addProperty(\"longitude\", longitude); obj.addProperty(\"phone\", phone); obj.addProperty(\"website\", website); obj.addProperty(\"distance\", distance); jsarr.add(obj); } }else { com.google.gson.JsonObject obj = new com.google.gson.JsonObject(); obj.addProperty(\"id\", id); obj.addProperty(\"name\", name); obj.addProperty(\"address\", address); obj.addProperty(\"city\", city); obj.addProperty(\"state\", state); obj.addProperty(\"latitude\", latitude); obj.addProperty(\"longitude\", longitude); obj.addProperty(\"phone\", phone); obj.addProperty(\"website\", website); obj.addProperty(\"distance\", (-1.0)); jsarr.add(obj); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/665/buggy-version/cse190.src.com.cse190.restaurant.findRestaurants.java", "BodyUseAPI": ["java.lang.Double.parseDouble(java.lang.String)", "com.cse190.restaurant.findRestaurants.calcDistance(double,double,double,double)", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "dd0ec5adbbefe2d8391c1d4465a0d878be096f14", "Url": "https://api.github.com/repos/carter213/cse190", "Date": "2013-05-01T17:46:38Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (key == null) key = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/665/buggy-version/cse190.src.com.cse190.restaurant.findRestaurants.java", "BodyUseAPI": [], "Fixed commit": "dd0ec5adbbefe2d8391c1d4465a0d878be096f14", "Url": "https://api.github.com/repos/carter213/cse190", "Date": "2013-05-01T17:46:38Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.code()) == 409) { okhttp3.ResponseBody errorBody = response.errorBody(); if (errorBody != null) { introActivity.showMessage(getString(R.string.email_already_used)); }else { introActivity.showMessage(getString(R.string.response_error_body_null)); } }else { introActivity.showMessage(getString(R.string.unknown_error)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5092/buggy-version/Waiter.app.src.main.java.com.waiter.SignupEmailFragment.java", "BodyUseAPI": ["retrofit2.Response<okhttp3.ResponseBody>.errorBody()"], "Fixed commit": "f1ccad7249e27363f8eb9f86524246672e97c010", "Url": "https://api.github.com/repos/waiter-project/waiter-android", "Date": "2017-06-24T01:17:41Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.gk.model.GKInstance.getAttributeValue(ReactomeJavaConstants.normalPathway)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (normalPathway == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3461/buggy-version/src.org.gk.pathwaylayout.DiagramGeneratorFromDB.java", "BodyUseAPI": [], "Fixed commit": "633fa36f28c352b07a956e40e2c1fc24970f0a6d", "Url": "https://api.github.com/repos/reactome/CuratorTool", "Date": "2014-12-17T18:36:15Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value > 1000) { return (\" \" + ((java.lang.Math.round((value / 10))) / 100)) + \"K\"; }else { return \" \" + value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2000/buggy-version/achartengine.src.org.achartengine.chart.AbstractChart.java", "BodyUseAPI": ["java.lang.Math.round(double)"], "Fixed commit": "86bf7e77172c73eca9792bff74568eb81774774f", "Url": "https://api.github.com/repos/codlab/android_network_inspect_library", "Date": "2013-05-23T11:50:51Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["aether.net.NetMgr.receive()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((req.getSourceId()) == (aether.conf.ConfigMgr.getNodeId())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5122/buggy-version/src.aether.io.FileCoOrdinator.java", "BodyUseAPI": [], "Fixed commit": "e65af744d826274d402efd82a8fd32bfe77c9fb7", "Url": "https://api.github.com/repos/vivitsu/Aether", "Date": "2013-12-11T08:23:28Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.andrill.conop.core.util.TimerUtils.thread.isAlive())) { try { org.andrill.conop.core.util.TimerUtils.lock.lock(); if (!(org.andrill.conop.core.util.TimerUtils.thread.isAlive())) { org.andrill.conop.core.util.TimerUtils.thread.start(); } } finally { org.andrill.conop.core.util.TimerUtils.lock.unlock(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2109/buggy-version/core.src.main.java.org.andrill.conop.core.util.TimerUtils.java", "BodyUseAPI": ["org.andrill.conop.core.util.TimerUtils.CounterThread.isAlive()", "org.andrill.conop.core.util.TimerUtils.CounterThread.start()"], "Fixed commit": "85c2c51e1b6eae28c39ce92ca0516d15bed4d5fc", "Url": "https://api.github.com/repos/joshareed/conop4j", "Date": "2014-08-03T02:34:23Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((current != null) && ((current.getAssociation()) == (php.runtime.common.Association.RIGHT))) && (!(current.isBinary()))) && ((prev) instanceof org.develnext.jphp.core.tokenizer.token.expr.OperatorExprToken)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9191/buggy-version/jphp-core.src.org.develnext.jphp.core.compiler.common.ASMExpression.java", "BodyUseAPI": [], "Fixed commit": "c813f805ee397d71827e69135505a9147829ea61", "Url": "https://api.github.com/repos/POPSuL/jphp", "Date": "2014-04-15T10:42:55Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (killersPlayerId > (-1)) { killingSpree = (killingSprees.get(killersPlayerId)) + 1; killingSprees.put(killersPlayerId, killingSpree); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6730/buggy-version/src.arkhados.gamemode.DeathMatch.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, java.lang.Integer>.put(int,int)", "java.util.HashMap<java.lang.Integer, java.lang.Integer>.get(int)"], "Fixed commit": "832601866e320c5207df7b5d509e736563b2aa18", "Url": "https://api.github.com/repos/dnyarri/Arkhados", "Date": "2014-11-14T19:29:13Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<com.pratilipi.data.type.Comment>>.get(review.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (reviewCommentList == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8139/buggy-version/src.main.java.com.pratilipi.data.util.PratilipiDocUtil.java", "BodyUseAPI": [], "Fixed commit": "24bcd9f6510d62d5c03f2bce1780cd28f6591469", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-06-07T14:48:00Z"},
{"Line": "=>257", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"127.0.0.1\".equals(entry.getValue()))) { app.getRoutingTable().routeAdd(org.jims.modules.crossbow.objectmodel.filters.address.IpAddress.fromString(((entry.getKey()) + \"/24\")), org.jims.modules.crossbow.objectmodel.filters.address.IpAddress.fromString(entry.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8046/buggy-version/code.jims.jims-crossbow.jims-crossbow-infrastructure.src.main.java.org.jims.modules.crossbow.infrastructure.worker.Worker.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "app.getRoutingTable().routeAdd(org.jims.modules.crossbow.objectmodel.filters.address.IpAddress.fromString(((entry.getKey()) + \"/24\")),org.jims.modules.crossbow.objectmodel.filters.address.IpAddress.fromString(entry.getValue()))", "org.jims.modules.crossbow.objectmodel.filters.address.IpAddress.fromString(java.lang.String)", "org.jims.modules.crossbow.objectmodel.filters.address.IpAddress.fromString(java.lang.String)"], "Fixed commit": "9c388ee656602ab66a1d4de6fedd173a54e54122", "Url": "https://api.github.com/repos/robertboczek/solaris-crossbow", "Date": "2011-05-30T23:09:30Z"},
{"Line": "=>1015", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSearchView) != null) { outState.putBoolean(com.owncloud.android.ui.activity.FileDisplayActivity.KEY_IS_SEARCH_OPEN, (!(mSearchView.isIconified()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5271/buggy-version/src.main.java.com.owncloud.android.ui.activity.FileDisplayActivity.java", "BodyUseAPI": [], "Fixed commit": "2c7d9a0d1cb51b81e1e131634cbaedf6eefc1a3e", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-23T10:00:13Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addEvent()) finish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7120/buggy-version/app.src.main.java.com.comp.ninti.sportsmanager.EventDetail.java", "BodyUseAPI": [], "Fixed commit": "fadab8ce8ae07519e73915ea619ba1702c8e52dd", "Url": "https://api.github.com/repos/Nintinugga/SportsManager", "Date": "2017-06-08T10:57:09Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Module>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((test.getModuleType()) == (ModuleType.PLAIN)) plain++; else if ((test.getModuleType()) == (ModuleType.POWER)) power++; else if ((test.getModuleType()) == (ModuleType.SANITATION)) sanitation++; else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1447/buggy-version/MHCS.src.com.venice.mhcs.data.client.Configuration.java", "BodyUseAPI": ["java.lang.Module.getModuleType()", "java.lang.Module.getModuleType()"], "Fixed commit": "949bd47b62bce4366e04a2c3b05913d0f34c4234", "Url": "https://api.github.com/repos/maxronning/VENICE", "Date": "2015-04-29T19:21:07Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == (RetrieveFeedsAsyncTask.Type.FAVOURITES)) { this.statuses.addAll(statuses); }else { for (fr.gouv.etalab.mastodon.client.Entities.Status tmpStatus : statuses) { if (((this.statuses.size()) == 0) || ((java.lang.Long.parseLong(tmpStatus.getId())) < (java.lang.Long.parseLong(this.statuses.get(((this.statuses.size()) - 1)).getId())))) { if (((((type) == (RetrieveFeedsAsyncTask.Type.HOME)) && (firstLoad)) && ((lastReadStatus) != null)) && ((java.lang.Long.parseLong(tmpStatus.getId())) > (java.lang.Long.parseLong(lastReadStatus)))) { tmpStatus.setNew(true); (fr.gouv.etalab.mastodon.activities.MainActivity.countNewStatus)++; }else { tmpStatus.setNew(false); } this.statuses.add(tmpStatus); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8848/buggy-version/app.src.main.java.fr.gouv.etalab.mastodon.fragments.DisplayStatusFragment.java", "BodyUseAPI": [], "Fixed commit": "eddfc6f67ec485b322a25cc191bcb5e2f6f95d3b", "Url": "https://api.github.com/repos/stom79/mastalab", "Date": "2017-12-03T17:58:41Z"},
{"Line": "=>907", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((x.getParent()) instanceof com.alibaba.druid.sql.ast.expr.SQLAggregateExpr) { com.alibaba.druid.sql.ast.expr.SQLAggregateExpr aggregateExpr = ((com.alibaba.druid.sql.ast.expr.SQLAggregateExpr) (x.getParent())); if (\"count\".equalsIgnoreCase(aggregateExpr.getMethodName())) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7152/buggy-version/src.main.java.com.alibaba.druid.sql.visitor.SchemaStatVisitor.java", "BodyUseAPI": ["com.alibaba.druid.sql.ast.expr.SQLAllColumnExpr.getParent()"], "Fixed commit": "643ff31da2ee8c6a7a021191c344bae99ed0dea9", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2016-03-12T03:07:17Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.limelight.nvstream.NvVideoStream.currentTimeUs()) >= nextFrameTimeUs) { render = true; nextFrameTimeUs = computePresentationTime(60); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5672/buggy-version/src.com.limelight.nvstream.NvVideoStream.java", "BodyUseAPI": [], "Fixed commit": "10165f31669355bf3fa7349870938d19d1961756", "Url": "https://api.github.com/repos/cgutman/limelight", "Date": "2013-11-16T04:42:00Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getIntExtra(SendServiceHelper.EXTRA_RESULT_CODE,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (resultCode != 200) { handleResponseErrors(resultCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/145/buggy-version/app.src.main.java.jat.imview.ui.activity.CommentsActivity.java", "BodyUseAPI": ["jat.imview.ui.activity.CommentsActivity.1.handleResponseErrors(int)"], "Fixed commit": "bc6cdf7334173ef7b652816f0a6f174adab4b06d", "Url": "https://api.github.com/repos/YetAnotherTeam/ImView", "Date": "2016-01-16T14:33:36Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_activeTool) != null) { _activeTool.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/523/buggy-version/src.metro.GameUI.MainView.MainView.java", "BodyUseAPI": [], "Fixed commit": "8be06f5e102cb7330f9651f3dddd6fbb5029e7cc", "Url": "https://api.github.com/repos/hauke96/METRO", "Date": "2016-12-23T21:38:34Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.obiba.magma.Value.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (list2 == null) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2900/buggy-version/magma-api.src.main.java.org.obiba.magma.type.PolygonType.java", "BodyUseAPI": [], "Fixed commit": "9d20570ce2e1e030fa27aa259af19494aa68aff2", "Url": "https://api.github.com/repos/emorency/magma", "Date": "2013-10-17T14:13:26Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.obiba.magma.Value.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (list1 == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2900/buggy-version/magma-api.src.main.java.org.obiba.magma.type.PolygonType.java", "BodyUseAPI": [], "Fixed commit": "9d20570ce2e1e030fa27aa259af19494aa68aff2", "Url": "https://api.github.com/repos/emorency/magma", "Date": "2013-10-17T14:13:26Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.obiba.magma.Value.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (coordinate1 == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2900/buggy-version/magma-api.src.main.java.org.obiba.magma.type.PointType.java", "BodyUseAPI": [], "Fixed commit": "9d20570ce2e1e030fa27aa259af19494aa68aff2", "Url": "https://api.github.com/repos/emorency/magma", "Date": "2013-10-17T14:13:26Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.obiba.magma.Value.getValue()", "org.obiba.magma.Value.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (coordinate1 == coordinate2) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2900/buggy-version/magma-api.src.main.java.org.obiba.magma.type.PointType.java", "BodyUseAPI": [], "Fixed commit": "9d20570ce2e1e030fa27aa259af19494aa68aff2", "Url": "https://api.github.com/repos/emorency/magma", "Date": "2013-10-17T14:13:26Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.obiba.magma.Value.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (coordinate2 == null) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2900/buggy-version/magma-api.src.main.java.org.obiba.magma.type.PointType.java", "BodyUseAPI": [], "Fixed commit": "9d20570ce2e1e030fa27aa259af19494aa68aff2", "Url": "https://api.github.com/repos/emorency/magma", "Date": "2013-10-17T14:13:26Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == null) { throw new java.lang.IllegalArgumentException(\"attempt to determine type of null object\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8396/buggy-version/cxio.src.main.java.org.cxio.aspects.datamodels.AbstractAttributesAspectElement.java", "BodyUseAPI": [], "Fixed commit": "55cac25314d45086900c6b3bcf04c4a7b86b866d", "Url": "https://api.github.com/repos/cytoscape/cxio", "Date": "2015-10-15T22:44:45Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (e instanceof java.lang.String) { return org.cxio.aspects.datamodels.AbstractAttributesAspectElement.ATTRIBUTE_DATA_TYPE.LIST_OF_STRING; }else if (e instanceof java.lang.Boolean) { return org.cxio.aspects.datamodels.AbstractAttributesAspectElement.ATTRIBUTE_DATA_TYPE.LIST_OF_BOOLEAN; }else if (e instanceof java.lang.Double) { return org.cxio.aspects.datamodels.AbstractAttributesAspectElement.ATTRIBUTE_DATA_TYPE.LIST_OF_DOUBLE; }else if (e instanceof java.lang.Integer) { return org.cxio.aspects.datamodels.AbstractAttributesAspectElement.ATTRIBUTE_DATA_TYPE.LIST_OF_INTEGER; }else if (e instanceof java.lang.Long) { return org.cxio.aspects.datamodels.AbstractAttributesAspectElement.ATTRIBUTE_DATA_TYPE.LIST_OF_LONG; }else if (e instanceof java.lang.Float) { return org.cxio.aspects.datamodels.AbstractAttributesAspectElement.ATTRIBUTE_DATA_TYPE.LIST_OF_FLOAT; }else if (e instanceof java.lang.Short) { return org.cxio.aspects.datamodels.AbstractAttributesAspectElement.ATTRIBUTE_DATA_TYPE.LIST_OF_SHORT; }else if (e instanceof java.lang.Byte) { return org.cxio.aspects.datamodels.AbstractAttributesAspectElement.ATTRIBUTE_DATA_TYPE.LIST_OF_BYTE; }else if (e instanceof java.lang.Character) { return org.cxio.aspects.datamodels.AbstractAttributesAspectElement.ATTRIBUTE_DATA_TYPE.LIST_OF_CHAR; }else { throw new java.lang.IllegalArgumentException(((\"type '\" + (o.getClass())) + \"' is not supported\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8396/buggy-version/cxio.src.main.java.org.cxio.aspects.datamodels.AbstractAttributesAspectElement.java", "BodyUseAPI": [], "Fixed commit": "55cac25314d45086900c6b3bcf04c4a7b86b866d", "Url": "https://api.github.com/repos/cytoscape/cxio", "Date": "2015-10-15T22:44:45Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (icon) this.setIconImage(java.awt.Toolkit.getDefaultToolkit().getImage(this.getClass().getResource(\"icon.png\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1600/buggy-version/src.com.flipturnapps.kevinLibrary.newgui.UserIOFrame.java", "BodyUseAPI": [], "Fixed commit": "ee47d01cf3edd83745bcda5bbdc0b6b6b85f54d3", "Url": "https://api.github.com/repos/kkevlar/FlipTurnApps-KevinLibrary", "Date": "2015-01-21T23:25:46Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cpuNumber < 0) { invalidParams.add((\"cpuNumPerNode=\" + cpuNumber)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6477/buggy-version/cli.src.main.java.com.vmware.bdd.cli.commands.ClusterCommands.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "c5d764e5fda1d2685168292846b8a00e93ba1978", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-11-14T10:42:24Z"},
{"Line": "=>647", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (instanceNum < 0) { invalidParams.add((\"instanceNum=\" + instanceNum)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6477/buggy-version/cli.src.main.java.com.vmware.bdd.cli.commands.ClusterCommands.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "c5d764e5fda1d2685168292846b8a00e93ba1978", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-11-14T10:42:24Z"},
{"Line": "=>653", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (memory < 0) { invalidParams.add((\"memCapacityMbPerNode=\" + memory)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6477/buggy-version/cli.src.main.java.com.vmware.bdd.cli.commands.ClusterCommands.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "c5d764e5fda1d2685168292846b8a00e93ba1978", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2013-11-14T10:42:24Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (trackDuration >= 1000) res = new ru.bmstu.wundermusik.models.Track(trackId, trackTitle, trackDuration, trackFormat, contentSize, streamUrl, singer, imageUrl);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4586/buggy-version/app.src.main.java.ru.bmstu.wundermusik.models.parsers.TrackJsonParser.java", "BodyUseAPI": [], "Fixed commit": "382bc754cdedf479cf0a7c9b3a1013905397c369", "Url": "https://api.github.com/repos/WunderMusik/WunderMusik", "Date": "2016-04-25T20:25:57Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBlank) return 256;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4442/buggy-version/src.com.powerje.nyan.sprites.NyanDroid.java", "BodyUseAPI": [], "Fixed commit": "9ac39a2234bd8be0977605a9921f37b771e4a9a7", "Url": "https://api.github.com/repos/powerje/NyanDroid", "Date": "2013-04-17T01:33:48Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isBlank) return 256;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4442/buggy-version/src.com.powerje.nyan.sprites.NyanDroid.java", "BodyUseAPI": [], "Fixed commit": "9ac39a2234bd8be0977605a9921f37b771e4a9a7", "Url": "https://api.github.com/repos/powerje/NyanDroid", "Date": "2013-04-17T01:33:48Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tachyon.client.WritableBlockChannel.write(java.nio.ByteBuffer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (r > 0) { mWritten.addAndGet(r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3254/buggy-version/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicLong.addAndGet(int)"], "Fixed commit": "c35fb03e741afc4b3ef8850c1f6390aade01bae7", "Url": "https://api.github.com/repos/dcapwell/tachyon", "Date": "2014-09-11T03:46:38Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fragment == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1328/buggy-version/src.main.java.eu.forcom.android.publiccore.util.ActivityUtil.java", "BodyUseAPI": [], "Fixed commit": "030d937666ec51c7f969d0239aac98eae34d74eb", "Url": "https://api.github.com/repos/kosiara/android-public-core", "Date": "2015-06-01T11:41:39Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDividerWidth) != 0) { canvas.drawLine(getPaddingLeft(), (top - ((mVerticalSpacing) / 2)), ((getWidth()) - (getPaddingRight())), (top - ((mVerticalSpacing) / 2)), mDividerPaint); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4776/buggy-version/app.src.main.java.wang.mogujun.widget.FlowLayout.java", "BodyUseAPI": [], "Fixed commit": "1a216685ea0127296a71cf15c3d38b89e5764d3d", "Url": "https://api.github.com/repos/yisizhu520/FlowLayout", "Date": "2017-01-13T07:22:13Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Float.class.equals(resultClass)) && (json instanceof java.lang.Long)) return ((java.lang.Long) (json)).floatValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3557/buggy-version/de.neo.rmi.src.de.neo.rmi.api.JSONUtils.java", "BodyUseAPI": [], "Fixed commit": "4a7168c02ae9106b434700dadb33371313d6ed62", "Url": "https://api.github.com/repos/dabastynator/SmartHome", "Date": "2017-01-07T21:23:45Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Long.class.equals(resultClass)) && (json instanceof java.lang.Long)) return ((java.lang.Long) (json)).longValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3557/buggy-version/de.neo.rmi.src.de.neo.rmi.api.JSONUtils.java", "BodyUseAPI": [], "Fixed commit": "4a7168c02ae9106b434700dadb33371313d6ed62", "Url": "https://api.github.com/repos/dabastynator/SmartHome", "Date": "2017-01-07T21:23:45Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Integer.class.equals(resultClass)) && (json instanceof java.lang.Long)) return ((java.lang.Long) (json)).intValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3557/buggy-version/de.neo.rmi.src.de.neo.rmi.api.JSONUtils.java", "BodyUseAPI": [], "Fixed commit": "4a7168c02ae9106b434700dadb33371313d6ed62", "Url": "https://api.github.com/repos/dabastynator/SmartHome", "Date": "2017-01-07T21:23:45Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Double.class.equals(resultClass)) && (json instanceof java.lang.Double)) return ((java.lang.Long) (json)).doubleValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3557/buggy-version/de.neo.rmi.src.de.neo.rmi.api.JSONUtils.java", "BodyUseAPI": [], "Fixed commit": "4a7168c02ae9106b434700dadb33371313d6ed62", "Url": "https://api.github.com/repos/dabastynator/SmartHome", "Date": "2017-01-07T21:23:45Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (priorityBox.isSelected()) { priority = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8832/buggy-version/src.no.ntnu.iie.stud.cateringstorm.gui.dialogs.AddOrderDialog.java", "BodyUseAPI": [], "Fixed commit": "b9789058db970bf1fc8e757d3ed967b547f73927", "Url": "https://api.github.com/repos/AudunWA/systemutvikling-1", "Date": "2016-04-26T10:06:31Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(data.getColumnIndex(AlexandriaContract.AuthorEntry.AUTHOR))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(it.jaschke.alexandria.UtilClass.isEmptyOrNull(authors))) { java.lang.String[] authorsArr = authors.split(\",\"); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setLines(authorsArr.length); ((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(authors.replace(\",\", \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2743/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.AddBookFragment.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "((android.widget.TextView) (rootView.findViewById(R.id.authors))).setText(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "ebab1469ae7f222126c6e55c0abf45cc051dfdf5", "Url": "https://api.github.com/repos/smajeti/SuperDuo", "Date": "2015-10-19T16:53:54Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((shareActionProvider) != null) { shareActionProvider.setShareIntent(shareIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2743/buggy-version/alexandria.app.src.main.java.it.jaschke.alexandria.BookDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "ebab1469ae7f222126c6e55c0abf45cc051dfdf5", "Url": "https://api.github.com/repos/smajeti/SuperDuo", "Date": "2015-10-19T16:53:54Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((minSkuId) != null) && (minSkuId.equals(maxSkuId))) { throw new atg.commerce.inventory.InventoryException((\"Inventory not found for \" + id)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2718/buggy-version/opencommercesearch-common.src.main.java.org.opencommercesearch.inventory.SequentialInMemoryInventoryManager.java", "BodyUseAPI": [], "Fixed commit": "9a0f132b2a5784b7e245270df9ed4949b573af45", "Url": "https://api.github.com/repos/rmerizalde/opencommercesearch", "Date": "2013-03-08T21:25:34Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x >= w) || (y >= h)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6278/buggy-version/Main.java", "BodyUseAPI": [], "Fixed commit": "af7606156263cfcc0ac1f015a7e12de169ca0772", "Url": "https://api.github.com/repos/kuanyingchou/test-fill-color", "Date": "2014-02-05T15:33:10Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (customName.equals(\"ricky\")) { java.lang.System.out.println(\"PUSH THE FUCKING WAVE YOU FUCK\\nNTNF\"); }else { java.lang.System.out.println((userName + \"? Wow, what a stupid name\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4522/buggy-version/src.GuessGame.java", "BodyUseAPI": [], "Fixed commit": "61eb849f15ed34b5a54101d6011339f9d67111ed", "Url": "https://api.github.com/repos/RaySoyama/Guess-Game", "Date": "2017-11-06T23:23:21Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sender == null) { PVPArena.instance.getLogger().warning(\"Player null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6275/buggy-version/src.net.slipcor.pvparena.arena.Arena.java", "BodyUseAPI": [], "Fixed commit": "69ac6d8da40ac84849235466959a405da5381299", "Url": "https://api.github.com/repos/slipcor/pvparena", "Date": "2012-10-08T15:00:15Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) return new ReturnObjectImpl(ErrorMessage.EMPTY_STRUCTURE, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/477/buggy-version/src.ArrayList.java", "BodyUseAPI": [], "Fixed commit": "876feb4620f875fc2da2944945a979442838e09e", "Url": "https://api.github.com/repos/BBK-PiJ-2014-01/cw3", "Date": "2014-12-26T10:29:23Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) return new ReturnObjectImpl(ErrorMessage.EMPTY_STRUCTURE, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/477/buggy-version/src.ArrayList.java", "BodyUseAPI": [], "Fixed commit": "876feb4620f875fc2da2944945a979442838e09e", "Url": "https://api.github.com/repos/BBK-PiJ-2014-01/cw3", "Date": "2014-12-26T10:29:23Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ancestor) != null) ancestor.updateFieldDistance(fieldDistance);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1518/buggy-version/src.main.java.randoop.util.heapcanonicalization.CanonicalClass.java", "BodyUseAPI": [], "Fixed commit": "2eb25f95886031689fb775025789ed07fbaa03b2", "Url": "https://api.github.com/repos/nmaguirre/randoop", "Date": "2017-07-24T04:12:53Z"},
{"Line": "=>3403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.db.client.model.Volume.getConsistencyGroup()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.emc.storageos.db.client.util.NullColumnValueGetter.isNullURI(cgURI)) { result = false; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2399/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.VPlexBlockServiceApiImpl.java", "BodyUseAPI": [], "Fixed commit": "b8cac3c1bd5d4ecb3c7b2993ce381731ea4d7ca9", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-07T16:53:06Z"},
{"Line": "=>3408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.util.VPlexUtil.getVPLEXBackendVolume(com.emc.storageos.db.client.model.Volume,boolean,com.emc.storageos.api.service.impl.resource.VPlexBlockServiceApiImpl,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (srcVol == null) { result = false; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2399/buggy-version/apisvc.src.main.java.com.emc.storageos.api.service.impl.resource.VPlexBlockServiceApiImpl.java", "BodyUseAPI": [], "Fixed commit": "b8cac3c1bd5d4ecb3c7b2993ce381731ea4d7ca9", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-07T16:53:06Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getSerializableExtra(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (date != null) { dibbit.setDate(date); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5080/buggy-version/app.src.main.java.com.example.finalapp.dibbitz.DibbitPagerActivity.java", "BodyUseAPI": ["com.example.finalapp.dibbitz.Dibbit.setDate(java.util.Date)"], "Fixed commit": "89d47763844d40ba4a070e87fe23e471cff871e2", "Url": "https://api.github.com/repos/mwilli10/Dibbitz", "Date": "2015-12-20T17:53:00Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getInt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (count > 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2529/buggy-version/src.service.users.DatabaseHandler.java", "BodyUseAPI": [], "Fixed commit": "43c119001219cc2c09abbe2bcb4faad02548acde", "Url": "https://api.github.com/repos/Decl001/Frodo-s-Amazing-Weather-Machine", "Date": "2017-12-23T17:20:52Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mujava.api.MutantsInformationHolder.verbose) { java.lang.System.out.println((((((\"(\" + (mutOp.toString())) + \" | \") + (original.toFlattenString())) + \" ==> \") + (mutant.toFlattenString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1743/buggy-version/src.mujava.api.MutantsInformationHolder.java", "BodyUseAPI": [], "Fixed commit": "5b48dba5a1f54d00d2b1b43b8308deba3151597f", "Url": "https://api.github.com/repos/saiema/MuJava", "Date": "2015-10-14T00:38:32Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (user != null) { if ((i == 0) && ((qh.getUserID()) == (user.getId()))) am.updateAchievements(user, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6180/buggy-version/src.Servlets.QuizResultsServlet.java", "BodyUseAPI": ["Accounts.AccountManager.updateAchievements(Accounts.Account,boolean)", "Accounts.Account.getId()"], "Fixed commit": "4633f1c1c89f73c598c6885b373b3ea84830f889", "Url": "https://api.github.com/repos/Fchaubard/CS108FinalProject", "Date": "2013-03-16T03:03:13Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(javax.swing.SwingUtilities.isEventDispatchThread())) { try { javax.swing.SwingUtilities.invokeAndWait(() -> { }); } catch (java.lang.Exception ex) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1251/buggy-version/src.main.java.ch.psi.pshell.plot.PlotBase.java", "BodyUseAPI": [], "Fixed commit": "dacc2225eb88dd985935c7f1319ed2d3382a6697", "Url": "https://api.github.com/repos/paulscherrerinstitute/pshell", "Date": "2017-12-14T09:37:30Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(android.app.Activity)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (sharedPref.getBoolean(Settings.DEBUG_ENABLED, false)) { c_beamUrl = sharedPref.getString(Settings.C_BEAM_URL, org.c_base.c_beam.domain.C_beam.C_BEAM_URL); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2797/buggy-version/src.org.c_base.c_beam.domain.C_beam.java", "BodyUseAPI": ["android.content.SharedPreferences.getString(Settings.C_BEAM_URL,java.lang.String)"], "Fixed commit": "2513fa7669050278ae2ba3a615b26b8492c0582b", "Url": "https://api.github.com/repos/c-base/c-beam-droid", "Date": "2013-12-09T16:33:18Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.batfish.main.Settings.getJobLogicBloxHostnamePath()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (jobLogicBloxHostnamePath != null) { java.lang.String lbHostname = readFile(new java.io.File(jobLogicBloxHostnamePath)); _settings.setConnectBloxHost(lbHostname); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6986/buggy-version/projects.batfish.src.org.batfish.main.Batfish.java", "BodyUseAPI": ["org.batfish.main.Batfish.readFile(java.io.File)"], "Fixed commit": "94b397c9ad4da52e81e2dbe506f739078597f2d4", "Url": "https://api.github.com/repos/batfish/batfish", "Date": "2015-04-02T20:35:33Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!initMode) { main.Status.print(\"WARNING: inconsistent sync state\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8104/buggy-version/src.contact.Contacts.java", "BodyUseAPI": [], "Fixed commit": "6cec4296ef4d23f431abb1b6d62ee1e8b311c2d7", "Url": "https://api.github.com/repos/somedevelopment/CardDAVSyncOutlook", "Date": "2014-07-12T17:37:42Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.location.places.PlaceLikelihood.getPlace()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((placeGoogle.getAttributions()) != null) { place.setDescription(placeGoogle.getAttributions().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3941/buggy-version/app.src.main.java.com.carelife.infogo.ui.LocationInfoFragment.java", "BodyUseAPI": ["com.google.android.gms.location.places.Place.getAttributions()", "placeGoogle.getAttributions().toString()", "com.google.android.gms.location.places.Place.setDescription(placeGoogle.getAttributions().toString())"], "Fixed commit": "0e74e88ebae2d449525747607db564b7eca33214", "Url": "https://api.github.com/repos/chenzhu33/InfoGo", "Date": "2016-10-20T09:19:47Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.android.gms.location.places.PlaceLikelihood.getPlace()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((placeGoogle.getAddress()) != null) { place.setAddress(placeGoogle.getAddress().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3941/buggy-version/app.src.main.java.com.carelife.infogo.ui.LocationInfoFragment.java", "BodyUseAPI": ["com.google.android.gms.location.places.Place.setAddress(placeGoogle.getAddress().toString())", "placeGoogle.getAddress().toString()", "com.google.android.gms.location.places.Place.getAddress()"], "Fixed commit": "0e74e88ebae2d449525747607db564b7eca33214", "Url": "https://api.github.com/repos/chenzhu33/InfoGo", "Date": "2016-10-20T09:19:47Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.momia.service.course.base.Course.getEndTime()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (endTime != null) times.add(endTime);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5782/buggy-version/course.service-course.src.main.java.cn.momia.service.course.web.ctrl.SubjectController.java", "BodyUseAPI": ["java.util.List<java.util.Date>.add(java.util.Date)"], "Fixed commit": "a3e7b0b88e9154bd7e5fc5d00034992519e8c9ee", "Url": "https://api.github.com/repos/lovemomia/service", "Date": "2015-10-26T07:43:04Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cn.momia.service.course.base.Course.getStartTime()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (startTime != null) times.add(startTime);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5782/buggy-version/course.service-course.src.main.java.cn.momia.service.course.web.ctrl.SubjectController.java", "BodyUseAPI": ["java.util.List<java.util.Date>.add(java.util.Date)"], "Fixed commit": "a3e7b0b88e9154bd7e5fc5d00034992519e8c9ee", "Url": "https://api.github.com/repos/lovemomia/service", "Date": "2015-10-26T07:43:04Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inputSql == null) { return org.apache.commons.lang3.tuple.Pair.of(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3982/buggy-version/core-metadata.src.main.java.org.apache.kylin.metadata.model.tool.CalciteParser.java", "BodyUseAPI": [], "Fixed commit": "1f7980625092a34b157df2cbea21f766a88e8037", "Url": "https://api.github.com/repos/xixi-zero/kylin", "Date": "2017-07-21T06:14:00Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (favTeamId != null) { tvFavTeam.setText(favTeam.getName()); ivFavTeam.setImageResource(favTeam.getImage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3397/buggy-version/app.src.main.java.se.mah.ab7558.p3.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6070828dad008221f06c9ede5adda164f7a1a6fe", "Url": "https://api.github.com/repos/Lhadalo/P3", "Date": "2016-10-26T20:49:37Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (table.isEditing()) { table.getCellEditor().stopCellEditing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8106/buggy-version/src.es.udc.cartolab.gvsig.fonsagua.alternativas.ui.SelectElementForAlternativeDialog.java", "BodyUseAPI": ["javax.swing.table.TableCellEditor.stopCellEditing()", "javax.swing.JTable.getCellEditor()"], "Fixed commit": "4136cd5616568a99f550cbbc4e7797e9ceb7fdea", "Url": "https://api.github.com/repos/fonsagua/fonsagua", "Date": "2013-08-30T13:55:49Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (database.getTransaction().isActive()) { return new com.orientechnologies.orient.server.distributed.task.OUpdateRecordTask.VersionPlaceholder(loadedRecord); }else { return loadedRecord.getVersion(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5964/buggy-version/server.src.main.java.com.orientechnologies.orient.server.distributed.task.OUpdateRecordTask.java", "BodyUseAPI": [], "Fixed commit": "02e96c2ce4777439a5547579c7ca1f727ad430dd", "Url": "https://api.github.com/repos/mcculls/orientdb", "Date": "2015-11-12T14:01:22Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (aModule != null) { org.openflexo.GeneralPreferences.setFavoriteModuleName(aModule.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1883/buggy-version/flexodesktop.GUI.flexo.src.main.java.org.openflexo.ApplicationData.java", "BodyUseAPI": ["org.openflexo.GeneralPreferences.setFavoriteModuleName(java.lang.String)", "java.lang.Module.getName()"], "Fixed commit": "f3f5345733adbabf45f497bc7e787bc532bd3d59", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2011-11-24T22:19:44Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Module.getModule(org.openflexo.GeneralPreferences.getFavoriteModuleName())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (returned == null) { returned = WKF_MODULE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1883/buggy-version/flexodesktop.GUI.flexo.src.main.java.org.openflexo.ApplicationData.java", "BodyUseAPI": [], "Fixed commit": "f3f5345733adbabf45f497bc7e787bc532bd3d59", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2011-11-24T22:19:44Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Enumeration.nextElement()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(_DontProxyHeaders.containsKey(hdr))) { httpReq.addRequestHeader(hdr, val); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2568/buggy-version/src.main.java.org.browsermob.proxy.BrowserMobProxyHandler.java", "BodyUseAPI": ["org.browsermob.proxy.BrowserMobHttpRequest.addRequestHeader(java.lang.String,java.lang.String)"], "Fixed commit": "9d8635e5ab12dab505ba3890a62c51a84a81e28e", "Url": "https://api.github.com/repos/webmetrics/browsermob-proxy", "Date": "2013-04-21T19:18:43Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(response.isCommitted())) { controller.FoodOrderController foodOrderController = new controller.FoodOrderController(); if (foodOrderController.checkForExistingOrder(emp, period)) { session.setAttribute(\"warningPersist\", \"An existing order has already been placed. You will not be able to checkout food again.\"); } response.sendRedirect(\"/eureka_webservice/pages/homepage.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7194/buggy-version/src.servlet.process.user.ProcessLoginServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletResponse.sendRedirect(java.lang.String)"], "Fixed commit": "460c05d3cf94c8892da56972dcb3b3b9c9bc9588", "Url": "https://api.github.com/repos/tweetweetarnold/eureka_webservice", "Date": "2016-03-19T09:44:37Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((enviornment == null) || (enviornment.isEmpty())) enviornment = \"SAG_ENV_IS_UNDEFINED\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7054/buggy-version/SecureAppGenerator.src.main.java.org.benetech.secureapp.generator.SecureAppGeneratorApplication.java", "BodyUseAPI": [], "Fixed commit": "e79827f47064fd13b601bb8aaaffed2c3c6f0182", "Url": "https://api.github.com/repos/benetech/Secure-App-Generator", "Date": "2016-02-11T19:41:23Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(score)) { this.score = 0.0; }else { this.score = score; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9087/buggy-version/src.shared.Document.java", "BodyUseAPI": [], "Fixed commit": "9bd273f6e1aa2e964d8ab34740f14da061a4762b", "Url": "https://api.github.com/repos/Rpronk91/IR", "Date": "2013-12-15T12:02:15Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (e == null) article.lead = \"\"; else article.lead = e.text();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/297/buggy-version/app.src.main.java.com.peter.parttime.managershare.WebArticleActivity.java", "BodyUseAPI": ["org.jsoup.nodes.Element.text()"], "Fixed commit": "b7c93dc8cd0ac947bf0b6acf7f654415699da703", "Url": "https://api.github.com/repos/XJianfei/ManagerShare", "Date": "2016-04-06T07:23:42Z"},
{"Line": "=>829", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashSet<java.lang.Integer>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (planes == 1) { int[][] vertex4 = new int[4][2]; int i = 0; java.util.HashSet<java.lang.Integer> verts = new java.util.HashSet<java.lang.Integer>(); for (java.lang.Integer tri : commonTriangles) { verts.add(((int) (triangles[tri][0]))); verts.add(((int) (triangles[tri][1]))); verts.add(((int) (triangles[tri][2]))); } vertex4[0][0] = centerVertexID; vertex4[2][0] = targetVertexID; for (java.lang.Integer v : verts) { if ((v != centerVertexID) && (v != targetVertexID)) { vertex4[1][0] = v; break; } } for (java.lang.Integer v : verts) { if (((v != centerVertexID) && (v != targetVertexID)) && (v != (vertex4[1][0]))) { vertex4[3][0] = v; break; } } foundSolution = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1682/buggy-version/src.org.nschmidt.ldparteditor.data.GDataCSG.java", "BodyUseAPI": [], "Fixed commit": "17404d235039bd63bba5a7017b8ac9fdd3344011", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2015-07-23T07:00:12Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRefreshing.compareAndSet(true, false)) { killWatchdog(); notifyParametersReceiptEnd(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8045/buggy-version/ClientLib.src.main.java.org.droidplanner.services.android.impl.core.drone.profiles.ParameterManager.java", "BodyUseAPI": [], "Fixed commit": "4a6274ae0dca7dbe17739c45a7651e16da7745fc", "Url": "https://api.github.com/repos/dronekit/dronekit-android", "Date": "2016-08-21T21:59:48Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isRefreshing.get())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8045/buggy-version/ClientLib.src.main.java.org.droidplanner.services.android.impl.core.drone.profiles.ParameterManager.java", "BodyUseAPI": [], "Fixed commit": "4a6274ae0dca7dbe17739c45a7651e16da7745fc", "Url": "https://api.github.com/repos/dronekit/dronekit-android", "Date": "2016-08-21T21:59:48Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((status[0]) & 1) != 1) { return com.team1458.turtleshell2.util.types.Distance.error; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8757/buggy-version/TurtwigBot.src.com.team1458.turtleshell2.sensor.LIDARLite.java", "BodyUseAPI": [], "Fixed commit": "779e62a3904a3b9ef2482ab71d274d57db76ffd3", "Url": "https://api.github.com/repos/FRC1458/turtleshell", "Date": "2017-02-17T05:47:25Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (step != null) { for (java.lang.Object obj : step) { addSound(obj, me.libraryaddict.disguise.utilities.DisguiseSound.SoundType.STEP); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6095/buggy-version/src.me.libraryaddict.disguise.utilities.DisguiseSound.java", "BodyUseAPI": [], "Fixed commit": "c6ad0c146677678c08533811daffbc40f9bad5ab", "Url": "https://api.github.com/repos/Sitmobedaf/LibsDisguises", "Date": "2016-12-14T21:25:27Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pUrl.startsWith(((org.borademir.eksici.conf.EksiciResourceUtil.getHeaderReferrer()) + \"?q=\"))) { pUrl = (org.borademir.eksici.conf.EksiciResourceUtil.getHeaderReferrer()) + (response.url().getPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5800/buggy-version/api-service.src.main.java.org.borademir.eksici.api.impl.EksiServiceJsoupImpl.java", "BodyUseAPI": [], "Fixed commit": "e1d6f1c2ab3f16bf9d29c39476373dd2968722cc", "Url": "https://api.github.com/repos/borademir/eksi", "Date": "2017-05-12T13:33:46Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mousePointIndex) >= 0) { final main.GraphicObject graphicObject = world.getCurrentObject(); graphicObject.alterPointAt(mousePointIndex, current); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4073/buggy-version/CG-N3.src.main.controller.WorldController.java", "BodyUseAPI": [], "Fixed commit": "f5a070a03d85402f440b478334490349c49b3799", "Url": "https://api.github.com/repos/GabrielBiz/cg-n3", "Date": "2016-04-10T22:34:51Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((task) != null) task.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8143/buggy-version/src.main.java.com.turt2live.antishare.metrics.Metrics.java", "BodyUseAPI": [], "Fixed commit": "97a279a746c5415853c85c2b9fbe9176c294acc3", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2012-12-08T07:29:37Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selectPanel.getAddToConditional()) { Moves.conditionalMove conMove = ((Moves.conditionalMove) (whileMove.getMoveList().get(((whileMove.getMoveList().size()) - 1)))); conMove.moveList.add(toAdd); }else { whileMove.moveList.add(toAdd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3094/buggy-version/src.ActionListeners.moveAdderAL.java", "BodyUseAPI": [], "Fixed commit": "6218a0f9417a0d2ecd7dc99b6a7847034500ba18", "Url": "https://api.github.com/repos/ThunderCats160/SocialGood", "Date": "2015-04-28T03:41:18Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hypodiabetic.happ.BolusWizard.bw(this.getBaseContext(),java.lang.Double)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (bw.has(\"suggested_bolus\")) { if ((bw.getDouble(\"suggested_bolus\")) > 0) { bolusTreatment.datetime = dateNow.getTime(); bolusTreatment.datetime_display = dateNow.toString(); bolusTreatment.note = \"bolus\"; bolusTreatment.type = \"Insulin\"; bolusTreatment.value = bw.getDouble(\"suggested_bolus\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1854/buggy-version/app.src.main.java.com.hypodiabetic.happ.BolusWizardActivity.java", "BodyUseAPI": ["org.json.JSONObject.getDouble(java.lang.String)", "org.json.JSONObject.getDouble(java.lang.String)"], "Fixed commit": "e002820aa75322a0896c40c64d66034eff2b7d1f", "Url": "https://api.github.com/repos/LadyViktoria/HAPP", "Date": "2015-10-24T11:47:13Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cx != null) || (cy != null)) { c.add(org.hibernate.criterion.Restrictions.sqlRestriction(getWhereClause(q))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1384/buggy-version/medsavant-shard.src.main.java.org.ut.biolab.medsavant.shard.variant.ShardedVariantManagerHelper.java", "BodyUseAPI": [], "Fixed commit": "6e3814738b8ae55c329c40f7538d9157571ecd6b", "Url": "https://api.github.com/repos/compbio-UofT/medsavant", "Date": "2013-08-06T20:18:16Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hqw) < 0) return 0; else return hqw;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5657/buggy-version/agent.hotel.HotelAuction.java", "BodyUseAPI": [], "Fixed commit": "d06e08a406a2ccc9b289de3e325e36de742a0d07", "Url": "https://api.github.com/repos/aelred/TheGreaterFool", "Date": "2014-12-11T21:45:08Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin.InnerShellExecutor.getMajorAndMinorNumber(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (null != majorMinorNumber) { java.lang.String[] mmn = majorMinorNumber.split(\":\"); this.aliasMap.put(majorMinorNumber, aliasName); list.add(new org.apache.hadoop.yarn.server.nodemanager.containermanager.linux.resources.fpga.FpgaResourceAllocator.FpgaDevice(getFpgaType(), java.lang.Integer.parseInt(mmn[0]), java.lang.Integer.parseInt(mmn[1]), null, fields[0], aliasName, fields[1], fields[2], fields[3])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8223/buggy-version/hadoop-yarn-project.hadoop-yarn.hadoop-yarn-server.hadoop-yarn-server-nodemanager.src.main.java.org.apache.hadoop.yarn.server.nodemanager.containermanager.resourceplugin.fpga.IntelFpgaOpenclPlugin.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "20d7c687934a3ecc35c1c5ebd594703e89862a15", "Url": "https://api.github.com/repos/tangzhankun/hadoop", "Date": "2017-11-22T12:40:36Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cam72cam.immersiverailroading.entity.EntityCoupleableRollingStock.getCouplerFor(cam72cam.immersiverailroading.entity.EntityCoupleableRollingStock)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (coupler == null) { prev.decouple(this); this.decouple(prev); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5615/buggy-version/src.main.java.cam72cam.immersiverailroading.entity.EntityCoupleableRollingStock.java", "BodyUseAPI": [], "Fixed commit": "f5834f3ee52979144972e8a24f92d8d38f3bc153", "Url": "https://api.github.com/repos/cam72cam/ImmersiveRailroading", "Date": "2017-09-15T21:15:25Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (nfa == null) { nfa = createNFA(getClass(className)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5600/buggy-version/src.RegExpFunc.java", "BodyUseAPI": [], "Fixed commit": "b3263e40348ebc8e7d371d3d5273f9b7efe39830", "Url": "https://api.github.com/repos/nybblr/cs3240-compiler", "Date": "2013-04-06T21:01:22Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((link) == null) { return (other.link) == null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2875/buggy-version/src.main.java.org.mcsoxford.rss.RSSBase.java", "BodyUseAPI": [], "Fixed commit": "8190f566c6b7e01798f142b265dc486845971f55", "Url": "https://api.github.com/repos/ahorn/android-rss", "Date": "2011-02-12T17:10:01Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((link) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2875/buggy-version/src.main.java.org.mcsoxford.rss.RSSBase.java", "BodyUseAPI": [], "Fixed commit": "8190f566c6b7e01798f142b265dc486845971f55", "Url": "https://api.github.com/repos/ahorn/android-rss", "Date": "2011-02-12T17:10:01Z"},
{"Line": "=>633", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.compiere.model.MWarehousePrice.get(org.compiere.model.MProduct,int,int,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (result != null) p_posPanel.f_curLine.setPrice(result.getPriceStd()); else p_posPanel.f_curLine.setPrice(Env.ZERO);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6901/buggy-version/client.src.org.compiere.pos.SubCurrentLine.java", "BodyUseAPI": ["p_posPanel.f_curLine.setPrice(result.getPriceStd())", "org.compiere.model.MWarehousePrice.getPriceStd()"], "Fixed commit": "71a9ea8ed55fba8460fb2e730c3e24ee096a1ffe", "Url": "https://api.github.com/repos/erpcya/AD-POS-WebUI", "Date": "2015-09-03T22:30:45Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wrap) { java.lang.String match = m.group(1); boolean hitStart = (m.start()) > 0; boolean hitEnd = (m.end()) < (str.length()); java.lang.String rep = (\"eval(attrs, \\\"attrs.\" + match) + \"\\\")\"; if (hitStart) { rep = \"\\\" + \" + rep; } if (hitEnd) { rep = rep + \" + \\\"\"; } java.lang.String str1 = m.replaceFirst(rep); if (hitStart) { str1 = \"\\\"\" + str1; } if (hitEnd) { str1 = str1 + \"\\\"\"; } str = str1; }else { str = m.replaceFirst(((\"eval(attrs, \\\"attrs.\" + (m.group(1))) + \"\\\")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/213/buggy-version/core.src.main.java.com.jukta.jtahoe.handlers.AbstractHandler.java", "BodyUseAPI": [], "Fixed commit": "95905935177e90daf2eea254bcb3effd387a52f8", "Url": "https://api.github.com/repos/jukta/j-tahoe", "Date": "2016-05-19T06:44:15Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (\"@class\".equals(fieldName)) { com.orientechnologies.orient.core.record.impl.ODocumentInternal.fillClassNameIfNeeded(((com.orientechnologies.orient.core.record.impl.ODocument) (iRecord)), value.toString()); }else { record.field(fieldName, value, type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/646/buggy-version/core.src.main.java.com.orientechnologies.orient.core.serialization.serializer.record.string.ORecordSerializerSchemaAware2CSV.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String,java.lang.Object,com.orientechnologies.orient.core.metadata.schema.OType)"], "Fixed commit": "16749f800c390d701c2d41057f197ec262717cf2", "Url": "https://api.github.com/repos/larvinion/orientdb", "Date": "2016-11-11T13:22:19Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.db.ebean.Model.Finder.byId(allowance.id)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((oldAllowance.remainder) == 0) { allowance.remainder = allowance.allowance; }else if ((allowance.allowance) < (oldAllowance.allowance)) { allowance.remainder = (oldAllowance.remainder) - ((oldAllowance.allowance) - (allowance.allowance)); }else if ((allowance.allowance) > (oldAllowance.allowance)) { allowance.remainder = (oldAllowance.remainder) + ((allowance.allowance) - (oldAllowance.allowance)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9243/buggy-version/app.controllers.AllowanceController.java", "BodyUseAPI": [], "Fixed commit": "7947f7c3439eda6e52f7b077f1918d4c4b3dbd76", "Url": "https://api.github.com/repos/samwar/allowance_tracker", "Date": "2013-09-20T04:42:21Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((diningHalls.size()) > 0) { no_results.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6904/buggy-version/PennMobile.src.main.java.com.pennapps.labs.pennmobile.DiningFragment.java", "BodyUseAPI": [], "Fixed commit": "f23493e6101968af7e5a2ae903db57a5a4dfa750", "Url": "https://api.github.com/repos/pennlabs/penn-mobile-android", "Date": "2017-09-25T03:50:19Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newAmt < 0) newAmt = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7733/buggy-version/src.com.nisovin.magicspells.castmodifiers.Modifier.java", "BodyUseAPI": [], "Fixed commit": "3ddee771f7d61538474aa90fbd2c18af9b5d7347", "Url": "https://api.github.com/repos/nisovin/MagicSpells", "Date": "2014-12-13T02:08:38Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newAmt > (maxMana)) newAmt = maxMana;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7733/buggy-version/src.com.nisovin.magicspells.mana.ManaBar.java", "BodyUseAPI": [], "Fixed commit": "3ddee771f7d61538474aa90fbd2c18af9b5d7347", "Url": "https://api.github.com/repos/nisovin/MagicSpells", "Date": "2014-12-13T02:08:38Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newAmt < 0) newAmt = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7733/buggy-version/src.com.nisovin.magicspells.mana.ManaBar.java", "BodyUseAPI": [], "Fixed commit": "3ddee771f7d61538474aa90fbd2c18af9b5d7347", "Url": "https://api.github.com/repos/nisovin/MagicSpells", "Date": "2014-12-13T02:08:38Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entry.getKey().equals(\"Host\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5153/buggy-version/moco-core.src.main.java.com.github.dreamhead.moco.handler.ProxyResponseHandler.java", "BodyUseAPI": [], "Fixed commit": "70a388715f0b343b6ef591c4c64931f9166700dd", "Url": "https://api.github.com/repos/hkliya/moco", "Date": "2013-08-01T09:48:03Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alpacaList.getSelectedValue()) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4834/buggy-version/src.com.pacatraca.main.GUI.java", "BodyUseAPI": [], "Fixed commit": "f2e9be90d2d8095c93f52cead1190799f417645c", "Url": "https://api.github.com/repos/albtop/pacatraca", "Date": "2014-04-27T16:05:46Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mDebug) != null) mDebug.Reset(newGame);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3673/buggy-version/core.src.com.kegelapps.palace.engine.Logic.java", "BodyUseAPI": [], "Fixed commit": "1524e13632700315b5ab35eae845ef868146c8bc", "Url": "https://api.github.com/repos/primetime00/PalaceGame", "Date": "2016-08-24T20:03:39Z"},
{"Line": "=>1035", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dmdirc.parser.irc.IRCParser.tokeniseLine(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((bits.length) > 4) { channelName = bits[4]; forwardLine = checkAllowLine(myParser.getChannel(bits[4]), bits[1]); }else { myAccount.sendBotMessage(\"Invalid 353 Response: %s\", data); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7033/buggy-version/src.uk.org.dataforce.dfbnc.servers.irc.IRCConnectionHandler.java", "BodyUseAPI": ["uk.org.dataforce.dfbnc.servers.irc.IRCConnectionHandler.checkAllowLine(myParser.getChannel(bits[4]),java.lang.String)", "com.dmdirc.parser.interfaces.Parser.getChannel(java.lang.String)"], "Fixed commit": "a42366c2d47b70407e2111369be1a68aa25fcade", "Url": "https://api.github.com/repos/ShaneMcC/DFBnc", "Date": "2013-12-09T04:11:14Z"},
{"Line": "=>972", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dmdirc.parser.irc.IRCParser.tokeniseLine(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((bits.length) == 1) { myAccount.sendBotMessage(\"Invalid looking line from server, ignored: %s\", data); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7033/buggy-version/src.uk.org.dataforce.dfbnc.servers.irc.IRCConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "a42366c2d47b70407e2111369be1a68aa25fcade", "Url": "https://api.github.com/repos/ShaneMcC/DFBnc", "Date": "2013-12-09T04:11:14Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((persistenceManager.getRootPath()) != null) { java.lang.String relativePath = persistenceManager.getFile(parent, fStoredObjectMap).getAbsolutePath().replace(persistenceManager.getRootPath(), \"\"); folder.getProperties().put(PropertyIds.PATH, new org.apache.chemistry.opencmis.commons.impl.dataobjects.PropertyStringImpl(org.apache.chemistry.opencmis.commons.PropertyIds.PATH, ((relativePath + \"/\") + (folder.getName())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1767/buggy-version/src.main.java.org.apache.chemistry.opencmis.inmemory.storedobj.impl.ObjectStoreImpl.java", "BodyUseAPI": ["org.apache.chemistry.opencmis.utils.PersistenceManager.getRootPath()", "org.apache.chemistry.opencmis.utils.PersistenceManager.getFile(org.apache.chemistry.opencmis.inmemory.storedobj.api.Folder,java.util.Map<java.lang.String, org.apache.chemistry.opencmis.inmemory.storedobj.api.StoredObject>)", "persistenceManager.getFile(parent, fStoredObjectMap).getAbsolutePath().replace(persistenceManager.getRootPath(),java.lang.String)", "persistenceManager.getFile(parent, fStoredObjectMap).getAbsolutePath()"], "Fixed commit": "96d6866d2d82d29f46ac1cd99e8c092b3baa8ea9", "Url": "https://api.github.com/repos/MGDIS/lightweightCMISserver", "Date": "2016-08-01T08:07:32Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getCollided())) { endX = ((float) ((startX) - ((SIZE) * (org.newdawn.slick.util.FastTrig.sin(java.lang.Math.toRadians(facingAngle)))))); endY = ((float) ((startY) - ((SIZE) * (org.newdawn.slick.util.FastTrig.cos(java.lang.Math.toRadians(facingAngle)))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/262/buggy-version/org.org.diediedie.actors.Arrow.java", "BodyUseAPI": [], "Fixed commit": "80ad33f4754882f16af51e6cbdb96e53a4f9b917", "Url": "https://api.github.com/repos/beltsonata/DieDieDie", "Date": "2011-08-28T22:27:02Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getResources().getConfiguration().orientation) == (android.content.res.Configuration.ORIENTATION_LANDSCAPE)) { android.view.ViewGroup.LayoutParams lp = this.alarmlist.getLayoutParams(); android.util.DisplayMetrics metrics = this.getResources().getDisplayMetrics(); int max_width = ((int) (android.util.TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 500, metrics))); lp.width = ((metrics.widthPixels) > max_width) ? max_width : ViewGroup.LayoutParams.MATCH_PARENT; this.alarmlist.setLayoutParams(lp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/730/buggy-version/app.src.main.java.org.maowtm.android.tagalarm.AlarmActivity.java", "BodyUseAPI": [], "Fixed commit": "29b384612014f8d1949c0d77339b16be2fa9d400", "Url": "https://api.github.com/repos/micromaomao/TagAlarm", "Date": "2016-06-20T06:42:27Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isCancelEditing)) { saveAlarm(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8617/buggy-version/src.com.liteon.icampusguardian.fragment.AlarmEditingFragment.java", "BodyUseAPI": [], "Fixed commit": "1b7a9e9a9a729ddf61503175efa1a0076de35281", "Url": "https://api.github.com/repos/tel3342311/ICG", "Date": "2017-09-12T05:54:48Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<javaforce.gl.GLUVMap>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (uvcnt > 1) { javaforce.gl.GL.glEnableVertexAttribArray(scene.tca[1]); }else { javaforce.gl.GL.glDisableVertexAttribArray(scene.tca[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/202/buggy-version/src.javaforce.gl.GLObject.java", "BodyUseAPI": [], "Fixed commit": "e7c85356f5bf105fee20e8209bcf6b7ee76e3586", "Url": "https://api.github.com/repos/pquiring/javaforce", "Date": "2015-06-13T22:54:16Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((string.charAt(i)) == '(') { if ((i - 1) < 0) continue; if (((string.charAt((i - 1))) >= '0') && ((string.charAt((i - 1))) <= '9')) this.correctedExpression += \" * (\"; else this.correctedExpression += string.charAt(i); i++; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2155/buggy-version/src.com.ACM.Conversions.StringCheck.java", "BodyUseAPI": [], "Fixed commit": "c4449c7f268faa33d2668abf57a4ddbf056b3424", "Url": "https://api.github.com/repos/SigMobile/BinaryCalculator", "Date": "2013-12-08T18:58:36Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (decl instanceof com.redhat.ceylon.compiler.typechecker.model.Method) { com.redhat.ceylon.compiler.typechecker.model.Method m = ((com.redhat.ceylon.compiler.typechecker.model.Method) (decl)); if (!(m.getTypeParameters().isEmpty())) { typeArgs = new java.util.ArrayList<com.redhat.ceylon.compiler.typechecker.model.ProducedType>(m.getTypeParameters().size()); for (com.redhat.ceylon.compiler.typechecker.model.TypeParameter p : m.getTypeParameters()) { com.redhat.ceylon.compiler.typechecker.model.ProducedType pt = p.getType(); typeArgs.add(pt); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3117/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.AbstractTransformer.java", "BodyUseAPI": [], "Fixed commit": "9ea1c35786194f56bd76b327399ba9e286ade627", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2013-08-13T15:46:36Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.motechproject.util.StringUtil.isNullOrEmpty(exception.getMessage()))) errorMessage += \" : \" + (exception.getMessage());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8144/buggy-version/ananya-reference-data-web.src.main.java.org.motechproject.ananya.referencedata.web.controller.HomeController.java", "BodyUseAPI": ["java.lang.Exception.getMessage()"], "Fixed commit": "147fe7920f2c66b5af2b159552e81fb821fcf95e", "Url": "https://api.github.com/repos/motech/ananya-reference-data", "Date": "2012-11-20T09:55:47Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((!(jsonObject.getString(\"Bid\").equals(\"null\"))) && (!(jsonObject.getString(\"ChangeinPercent\").equals(\"null\")))) && (!(jsonObject.getString(\"Change\").equals(\"null\")))) { batchOperations.add(com.sam_chordas.android.stockhawk.rest.Utils.buildBatchOperation(jsonObject)); }else { android.util.Log.e(com.sam_chordas.android.stockhawk.rest.Utils.LOG_TAG, \" No stock found\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4922/buggy-version/app.src.main.java.com.sam_chordas.android.stockhawk.rest.Utils.java", "BodyUseAPI": ["com.sam_chordas.android.stockhawk.rest.Utils.buildBatchOperation(org.json.JSONObject)", "java.util.ArrayList<android.content.ContentProviderOperation>.add(android.content.ContentProviderOperation)"], "Fixed commit": "0e7afa6e77a731014472b432ad7ad1c7b77931ec", "Url": "https://api.github.com/repos/sagar15795/StockHawk", "Date": "2016-07-25T08:12:14Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attribute.startsWith(\"container_type\")) return new net.aufdemrand.denizen.objects.Element(getContainer().getType()).getAttribute(attribute.fulfill(1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4459/buggy-version/src.main.java.net.aufdemrand.denizen.objects.dScript.java", "BodyUseAPI": ["net.aufdemrand.denizen.objects.Element.getAttribute(attribute.fulfill(1))", "net.aufdemrand.denizen.tags.Attribute.fulfill(int)"], "Fixed commit": "29998c4711d1260be2d8894033776a43e40d1d20", "Url": "https://api.github.com/repos/aufdemrand/Denizen", "Date": "2013-08-10T19:25:10Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (task.hasInitialized()) { progress = task.getProgress(); if (sendCounters) { counters = task.getCounters(); stats = task.getTaskStatistics(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7348/buggy-version/llap-server.src.java.org.apache.hadoop.hive.llap.daemon.impl.LlapTaskReporter.java", "BodyUseAPI": ["org.apache.tez.runtime.RuntimeTask.getProgress()", "org.apache.tez.runtime.RuntimeTask.getCounters()", "org.apache.tez.runtime.RuntimeTask.getTaskStatistics()"], "Fixed commit": "581d3bbc39ecddb180ecb4fb9795a3c663af6e2a", "Url": "https://api.github.com/repos/apache/hive", "Date": "2015-04-29T15:45:22Z"},
{"Line": "=>2046", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.Graphics2D.getRenderingHint(java.awt.RenderingHints.Key)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (value != null) { savedHints.put(key, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9128/buggy-version/src.com.jidesoft.swing.JideSwingUtilities.java", "BodyUseAPI": ["java.util.Map.put(java.awt.RenderingHints.Key,java.lang.Object)"], "Fixed commit": "3499b3aac7330b73a82a417b3e95fe05c7dfc719", "Url": "https://api.github.com/repos/jidesoft/jide-oss", "Date": "2013-02-06T22:21:41Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((flag) == 1) { org.pathvisio.wpclient.PathwaySearchPanel.SearchTableModel model = ((org.pathvisio.wpclient.PathwaySearchPanel.SearchTableModel) (target.getModel())); java.io.File tmpDir = new java.io.File(plugin.getTmpDir(), org.pathvisio.wpclient.WikiPathwaysClientPlugin.shortClientName(model.clientName)); tmpDir.mkdirs(); flag = 0; plugin.openPathwayWithProgress(plugin.getClients().get(model.clientName), model.getValueAt(row, 0).toString(), 0, tmpDir); }else { org.pathvisio.wpclient.ResultTableModel model = ((org.pathvisio.wpclient.ResultTableModel) (target.getModel())); java.io.File tmpDir = new java.io.File(plugin.getTmpDir(), org.pathvisio.wpclient.WikiPathwaysClientPlugin.shortClientName(model.clientName)); tmpDir.mkdirs(); plugin.openPathwayWithProgress(plugin.getClients().get(model.clientName), model.getValueAt(row, 0).toString(), 0, tmpDir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6670/buggy-version/src.org.pathvisio.wpclient.PathwaySearchPanel.java", "BodyUseAPI": [], "Fixed commit": "7b0a710efb9daceb91c64b4f1ae91f00338b508a", "Url": "https://api.github.com/repos/SravanthiSinha/org.pathvisio.wpclient", "Date": "2013-08-19T14:56:45Z"},
{"Line": "=>744", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.smartdata.server.rule.parser.TreeNode.getOperatorType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (optype == (OperatorType.MATCHES)) { ropStr = ropStr.replace(\"*\", \"%\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9114/buggy-version/smart-server.src.main.java.org.smartdata.server.rule.parser.SmartRuleVisitTranslator.java", "BodyUseAPI": [], "Fixed commit": "8d89676f427936b6426213404476cc3c5a242672", "Url": "https://api.github.com/repos/qiyuangong/SSM", "Date": "2017-06-06T07:04:42Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<? extends javax.servlet.ServletContainerInitializer>.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (handlesTypes != null) { for (java.lang.Class<?> type : handlesTypes.value()) { if (type.isAnnotation()) { types.addAll(annotationDatabase.getTypes(((java.lang.Class<? extends java.lang.annotation.Annotation>) (type)))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5715/buggy-version/module-servlet.src.main.java.de.chkal.backset.module.servlet.init.ServletContainerInitializerEnricher.java", "BodyUseAPI": ["javax.servlet.annotation.HandlesTypes.value()"], "Fixed commit": "b9f09d1d73c131f73c8b3ac98624b2342b1504a2", "Url": "https://api.github.com/repos/chkal/backset", "Date": "2015-01-23T07:28:33Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orctom.rmq.QueueStore.iter(com.orctom.rmq.Queue)", "java.lang.String.getBytes()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (java.util.Arrays.equals(offsetBytes, iterator.key())) { iterator.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1484/buggy-version/src.main.java.com.orctom.rmq.Queue.java", "BodyUseAPI": ["org.rocksdb.RocksIterator.next()"], "Fixed commit": "7b2393b7e34f1e89f3a97f5a3d3df2ee574d2f4d", "Url": "https://api.github.com/repos/orctom/rmq", "Date": "2017-01-08T14:19:01Z"},
{"Line": "=>792", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (daysInYearToUse) { periodsInOneYear = this.daysInYearType.getValue().longValue(); }else { periodsInOneYear = calculator.calculate(this.repaymentPeriodFrequencyType).longValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4900/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.loanaccount.loanschedule.domain.LoanApplicationTerms.java", "BodyUseAPI": [], "Fixed commit": "5384067737e3c5cfc2326ae8e4ab6aa61a0c503c", "Url": "https://api.github.com/repos/tonic889/mifosx", "Date": "2015-12-04T20:32:31Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (transpose != null) { filters.add(transpose); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8057/buggy-version/app.src.main.java.com.github.crazyorr.ffmpegrecorder.FFmpegRecordActivity.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "e3cfd6e7b20cb10a80e4d33005aa12c48e2930da", "Url": "https://api.github.com/repos/CrazyOrr/FFmpegRecorder", "Date": "2016-03-04T02:54:10Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.salesforce.androidsdk.ui.LoginActivity.getActionBar()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (ab != null) { ab.setTitle(loginUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3375/buggy-version/libs.SalesforceSDK.src.com.salesforce.androidsdk.ui.LoginActivity.java", "BodyUseAPI": ["android.app.ActionBar.setTitle(java.lang.String)"], "Fixed commit": "9f09898a5cfadf8fa68d739bb1752729f128bedc", "Url": "https://api.github.com/repos/bhariharan/SalesforceMobileSDK-Android", "Date": "2017-06-12T22:13:10Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((key.indexOf(SetProcessor.HIVECONF_PREFIX)) == 0) { var = key.substring(SetProcessor.HIVECONF_PREFIX.length()); }else { var = key; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3998/buggy-version/grill-server.src.main.java.com.inmobi.grill.server.session.HiveSessionService.java", "BodyUseAPI": ["java.lang.String.substring(SetProcessor.HIVECONF_PREFIX.length())"], "Fixed commit": "d18c8f2da1c6b5522bef2f8ba576803ad67f4d3e", "Url": "https://api.github.com/repos/InMobi/grill", "Date": "2014-08-04T10:14:13Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(result.isClosed())) { android.util.Log.d(FLDataLoader.FLOCAL_APP_SIGN, (\"reusing socket :) \" + url)); return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7568/buggy-version/Flocal.src.main.java.ru.ith.lib.webcrawl.ConnectionFactory.java", "BodyUseAPI": [], "Fixed commit": "f5a68145fdebbc8e152851d7800a6b41e3030a91", "Url": "https://api.github.com/repos/infthi/flocalapp", "Date": "2014-07-26T16:53:51Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["singleton.SingletonWorker.gameData().activePlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((block.intercects(player)) && ((leftPressed) ^ (rightPressed))) { block.hit(gamedata.activePlayer()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5930/buggy-version/src.gameController.GameControllerThread.java", "BodyUseAPI": ["gameView.ingame.Block.hit(gamedata.activePlayer())"], "Fixed commit": "2ab3e1013a8e20e93c17ce792b6e052fed42b8a0", "Url": "https://api.github.com/repos/Kostronor/digsite", "Date": "2013-04-28T22:06:34Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mProgressAnimation.isStarted()) { for (int polygonIndex = 1; polygonIndex <= (mNumberOfPolygons); polygonIndex++) { drawProgressBarAnimation(canvas, (((float) (polygonIndex)) / (mNumberOfPolygons)), polygonIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7644/buggy-version/polygonprogressbar.src.main.java.arthur.hexagonprogressanimation.PolygonProgressBar.java", "BodyUseAPI": [], "Fixed commit": "9c65c265a55836762820915fdc6dc65e5efb4317", "Url": "https://api.github.com/repos/Arthez/PolygonProgressBar_ver1", "Date": "2015-12-14T18:09:04Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(initialValueSet)) { java.lang.String presumableSiteName = findAccountName(info.packageName); @java.lang.SuppressWarnings(\"unchecked\") android.widget.ArrayAdapter<java.lang.String> adapter = ((android.widget.ArrayAdapter<java.lang.String>) (siteSpinner.getAdapter())); if ((adapter.getPosition(presumableSiteName)) == (-1)) { adapter.add(presumableSiteName); } siteSpinner.setSelection(adapter.getPosition(presumableSiteName)); initialValueSet = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4724/buggy-version/mobile.src.main.java.com.kduborenko.mypassword.MyPasswordIME.java", "BodyUseAPI": [], "Fixed commit": "cd5420fba1b04fb2f77c2ef33b8803095cf5d516", "Url": "https://api.github.com/repos/kduborenko/mypassword", "Date": "2017-07-21T02:48:47Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n > 0) { java.util.Iterator<tudresden.mobilecartography.hestoric_dreasen.hestoric_dresden.AttractionResult> attractions_iter = attractions.iterator(); java.lang.String[] result = new java.lang.String[n]; int m = 0; while (attractions_iter.hasNext()) { tudresden.mobilecartography.hestoric_dreasen.hestoric_dresden.AttractionResult attr_result = attractions_iter.next(); result[m] = (((\"Attraction Name: \" + (attr_result.getAttr().getName())) + \" \\nDistance: \") + ((long) (attr_result.getDistance()))) + \" metres\"; m = m + 1; } android.widget.ArrayAdapter<java.lang.String> adapter = new android.widget.ArrayAdapter<java.lang.String>(this, R.layout.whatsherelist, result); setListAdapter(adapter); }else { android.app.AlertDialog alertDialog = new android.app.AlertDialog.Builder(this).create(); alertDialog.setTitle(\"Sorry !\"); alertDialog.setMessage(\"No nearby attractions..\"); alertDialog.setIcon(R.drawable.sorry); alertDialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6052/buggy-version/app.src.main.java.tudresden.mobilecartography.hestoric_dreasen.hestoric_dresden.WhatsHereActivity.java", "BodyUseAPI": [], "Fixed commit": "e50fe62b3f03b2fa03f15764e5c4f48294612b8b", "Url": "https://api.github.com/repos/ahussein/Hestoric_Dresden", "Date": "2016-01-05T15:10:56Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getParentFile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (parent != null) parent.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1820/buggy-version/src.LchClient.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "9a41e09e4f541130ac0c1b32ddee3b0d56ebcc0f", "Url": "https://api.github.com/repos/kirakira/lch", "Date": "2014-12-11T16:09:16Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((observableResult.get().length()) != (Const.ZERO_VALUE)) && (!(observableResult.get().equals(Const.ZERO)))) { mCurrentValue = observableResult.get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3641/buggy-version/app.src.main.java.kultprosvet.com.calculator.Calculator.java", "BodyUseAPI": ["android.databinding.ObservableField<java.lang.String>.get()"], "Fixed commit": "4f5bc2e17ad3b1bd85eeebc3f6d80cd86992455a", "Url": "https://api.github.com/repos/roma-sck/Calculator", "Date": "2016-07-08T22:51:19Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((symbols) != null) { if (coyote.commons.StringUtil.isNotBlank(getStatus())) { symbols.put(Symbols.CONTEXT_STATUS, getStatus()); }else { symbols.put(Symbols.CONTEXT_STATUS, \"No status information found in context\"); } if (coyote.commons.StringUtil.isNotBlank(getErrorMessage())) { symbols.put(Symbols.CONTEXT_ERROR, getErrorMessage()); }else { symbols.put(Symbols.CONTEXT_ERROR, \"No error message found in context\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4467/buggy-version/CoyoteDX.src.main.java.coyote.dx.context.OperationalContext.java", "BodyUseAPI": [], "Fixed commit": "01c89586a7112d82fd4fcccd168d150ad8651fcd", "Url": "https://api.github.com/repos/sdcote/coyote", "Date": "2017-06-27T15:50:18Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Class<? extends agent.Information>, agent.InformationMap<? extends agent.Information>>.get(java.lang.Class<? extends agent.Information>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (informationMap == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3195/buggy-version/WildFire.src.agent.Belief.java", "BodyUseAPI": [], "Fixed commit": "c5b294cd3ae5ca442547b0ef934e2b27a881ff3e", "Url": "https://api.github.com/repos/Runner-Runner/dke-firefighters", "Date": "2015-11-21T22:00:19Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastDescription) != null) { super.fireTestFinished(lastDescription); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/345/buggy-version/thucydides-junit.src.main.java.net.thucydides.junit.runners.RetryFilteringRunNotifier.java", "BodyUseAPI": [], "Fixed commit": "50e1e6e5c18211e622f80ce2f8f7ef2ebdd6a976", "Url": "https://api.github.com/repos/tomakehurst/thucydides", "Date": "2014-04-03T12:17:53Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (component)) { component.revalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7308/buggy-version/swing.src.net.sf.openrocket.gui.scalefigure.ScaleScrollPane.java", "BodyUseAPI": [], "Fixed commit": "4ab54d051eaf4cd197aae45859c41c8c6cb94604", "Url": "https://api.github.com/repos/teyrana/openrocket", "Date": "2016-05-01T19:03:23Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((it.polimi.stopit.activities.FirstLoginSettingsActivity.hourOfDayLast) - (it.polimi.stopit.activities.FirstLoginSettingsActivity.hourOfDayFirst)) < 6) { android.widget.Toast.makeText(getActivity(), \"Really?\", Toast.LENGTH_SHORT).show(); }else { it.polimi.stopit.activities.FirstLoginSettingsActivity.hourOfDayFirst = hourOfDay; it.polimi.stopit.activities.FirstLoginSettingsActivity.minuteFirst = minute; android.widget.Button lastC = ((android.widget.Button) (getActivity().findViewById(R.id.button))); lastC.setEnabled(true); android.widget.TextView F = ((android.widget.TextView) (getActivity().findViewById(R.id.firstSizza))); F.setText((((it.polimi.stopit.activities.FirstLoginSettingsActivity.hourOfDayFirst) + \":\") + (it.polimi.stopit.activities.FirstLoginSettingsActivity.minuteFirst))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4956/buggy-version/mobile.src.main.java.it.polimi.stopit.activities.FirstLoginSettingsActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "25186dacca781479a5924a142b5319682ccd853e", "Url": "https://api.github.com/repos/matteopasina/StopItv0.2", "Date": "2015-12-12T22:08:51Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((it.polimi.stopit.activities.FirstLoginSettingsActivity.hourOfDayLast) - (it.polimi.stopit.activities.FirstLoginSettingsActivity.hourOfDayFirst)) < 6) { android.widget.Toast.makeText(getActivity(), \"Really?\", Toast.LENGTH_SHORT).show(); }else { it.polimi.stopit.activities.FirstLoginSettingsActivity.hourOfDayLast = hourOfDay; it.polimi.stopit.activities.FirstLoginSettingsActivity.minuteLast = minute; android.widget.Button done = ((android.widget.Button) (getActivity().findViewById(R.id.done))); done.setEnabled(true); android.widget.TextView L = ((android.widget.TextView) (getActivity().findViewById(R.id.lastSizza))); L.setText((((it.polimi.stopit.activities.FirstLoginSettingsActivity.hourOfDayLast) + \":\") + (it.polimi.stopit.activities.FirstLoginSettingsActivity.minuteLast))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4956/buggy-version/mobile.src.main.java.it.polimi.stopit.activities.FirstLoginSettingsActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "25186dacca781479a5924a142b5319682ccd853e", "Url": "https://api.github.com/repos/matteopasina/StopItv0.2", "Date": "2015-12-12T22:08:51Z"},
{"Line": "=>998", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.getPrimary_care_doctor_id()) != \"false\") { if ((java.lang.Integer.valueOf(p.getPrimary_care_doctor_id())) == party_id) { relevantList.add(p); p.prepareDateFormat(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1835/buggy-version/src.main.java.eu.neq.mais.connector.gnuhealth.GNUHealthConnectorImpl.java", "BodyUseAPI": ["eu.neq.mais.domain.gnuhealth.PatientGnu.getPrimary_care_doctor_id()", "eu.neq.mais.domain.gnuhealth.PatientGnu.prepareDateFormat()", "java.lang.Integer.valueOf(p.getPrimary_care_doctor_id())", "java.util.ArrayList<eu.neq.mais.domain.gnuhealth.PatientGnu>.add(eu.neq.mais.domain.gnuhealth.PatientGnu)"], "Fixed commit": "a669c16340e52c8f0c4d699139414a5d0b54b1da", "Url": "https://api.github.com/repos/NeqHealthcare/neq_server", "Date": "2012-05-04T16:58:18Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((listView) != null) && (nics != null)) { nicListAdapter = new org.ovirt.mobile.movirt.ui.NicListAdapter(getActivity(), 0, nics); listView.setAdapter(nicListAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6232/buggy-version/moVirt.src.main.java.org.ovirt.mobile.movirt.ui.NicDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "f2c85242ec0943cc1848f34479d172d7e8effe6d", "Url": "https://api.github.com/repos/zyx0225/moVirt", "Date": "2015-03-25T14:16:17Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((listView) != null) && (disks != null)) { diskListAdapter = new org.ovirt.mobile.movirt.ui.DiskListAdapter(getActivity(), 0, disks); listView.setAdapter(diskListAdapter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6232/buggy-version/moVirt.src.main.java.org.ovirt.mobile.movirt.ui.DiskDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "f2c85242ec0943cc1848f34479d172d7e8effe6d", "Url": "https://api.github.com/repos/zyx0225/moVirt", "Date": "2015-03-25T14:16:17Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (checkInterval) { this.interval = eu.menzerath.util.Helper.parseInt(interval); this.createLog = createLog; run(); }else { java.lang.System.out.println((((new org.fusesource.jansi.Ansi().bold().fg(Ansi.Color.RED).a(\"[ERROR]\").reset()) + \" \") + (eu.menzerath.util.Messages.INVALID_PARAMETERS))); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1498/buggy-version/src.main.java.eu.menzerath.imwd.ConsoleApplication.java", "BodyUseAPI": [], "Fixed commit": "8e6a6985203352c24b0c08d82f9f7e265b482ff7", "Url": "https://api.github.com/repos/MarvinMenzerath/IsMyWebsiteDown", "Date": "2015-01-30T10:21:26Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((dokutoku.lead.zotonic.crop.seed.PolySeeds) (seed)).getPolyType()) == (EnumCropType.NETHER)) this.iconArray[i] = par1IconRegister.registerIcon(((((dokutoku.lead.zotonic.lib.Reference.MOD_ID) + \":\") + \"nether_\") + i)); else if ((((dokutoku.lead.zotonic.crop.seed.PolySeeds) (seed)).getPolyType()) == (EnumCropType.OVERWORLD)) this.iconArray[i] = par1IconRegister.registerIcon((\"carrots_\" + i)); else if ((((dokutoku.lead.zotonic.crop.seed.PolySeeds) (seed)).getPolyType()) == (EnumCropType.LAVA)) this.iconArray[i] = par1IconRegister.registerIcon(((((dokutoku.lead.zotonic.lib.Reference.MOD_ID) + \":\") + \"lava_\") + i)); else if ((((dokutoku.lead.zotonic.crop.seed.PolySeeds) (seed)).getPolyType()) == (EnumCropType.END)) this.iconArray[i] = par1IconRegister.registerIcon(((((dokutoku.lead.zotonic.lib.Reference.MOD_ID) + \":\") + \"end_\") + i));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5152/buggy-version/dokutoku.lead.zotonic.crop.PolyCrop.java", "BodyUseAPI": ["net.minecraft.item.ItemSeeds.getPolyType()", "net.minecraft.item.ItemSeeds.getPolyType()", "net.minecraft.item.ItemSeeds.getPolyType()"], "Fixed commit": "1e23b6da62ed5c531100d2a78407b8282b676296", "Url": "https://api.github.com/repos/AtomFusion/LeadZotonic", "Date": "2013-06-14T17:19:50Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getSession().getAttribute(Constants.USER_IN_SESSION_KEY)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (currentUser == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4126/buggy-version/src.Servlets.NotificationTypeCounterServlet.java", "BodyUseAPI": [], "Fixed commit": "4f4333697655ca572fbfb9c170226fd29db6980d", "Url": "https://api.github.com/repos/Nop1ks/Immutable", "Date": "2017-07-18T07:38:07Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.mhus.osgi.vaadinbridge.Resource.getPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (path == null) return \"text/plain\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7503/buggy-version/vaadinbridge.vaadinosgibridge.src.main.java.de.mhus.osgi.vaadinbridge.Resource.java", "BodyUseAPI": [], "Fixed commit": "4168c0a2a6207435546d0366d5564b623a9f4856", "Url": "https://api.github.com/repos/mhus/mhus-osgi-tools", "Date": "2015-08-06T19:58:40Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAsync) { if ((listener) != null) { listener.onGetData(userData); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8673/buggy-version/22x.jlibdpa22x-byteaccess.src.main.java.com.microrisc.dpa22x.byteaccess.network.udp.UdpNetworkLayer.java", "BodyUseAPI": [], "Fixed commit": "16b328011f027197b60c80553a36371440363bd8", "Url": "https://api.github.com/repos/iqrfsdk/jlibdpa", "Date": "2016-09-22T13:52:23Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((l != null) && (r != null)) { int compare = java.text.Collator.getInstance(java.util.Locale.getDefault()).compare(l, r); if (compare != 0) { return compare; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6165/buggy-version/src.com.github.yuukis.businessmap.utils.ContactsItemComparator.java", "BodyUseAPI": ["java.text.Collator.compare(java.lang.String,java.lang.String)"], "Fixed commit": "cf245676d19ba368efbee63d2c33cd736273f56d", "Url": "https://api.github.com/repos/yuukis/businessmap", "Date": "2013-10-22T15:41:00Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((l == null) && (r != null)) { return 1; }else if ((l != null) && (r == null)) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6165/buggy-version/src.com.github.yuukis.businessmap.utils.ContactsItemComparator.java", "BodyUseAPI": [], "Fixed commit": "cf245676d19ba368efbee63d2c33cd736273f56d", "Url": "https://api.github.com/repos/yuukis/businessmap", "Date": "2013-10-22T15:41:00Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (messageReader == null) { throw org.apache.drill.common.exceptions.UserException.validationError().message(\"Message reader configured '%s' does not implement '%s'\", org.apache.drill.exec.store.kafka.decoders.MessageReader.class.getName()).build(org.apache.drill.exec.store.kafka.decoders.MessageReaderFactory.logger); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6713/buggy-version/contrib.storage-kafka.src.main.java.org.apache.drill.exec.store.kafka.decoders.MessageReaderFactory.java", "BodyUseAPI": [], "Fixed commit": "d21f4a1b6a2f299dfdc88834eeb2aef371485904", "Url": "https://api.github.com/repos/akumarb2010/drill", "Date": "2017-11-21T05:42:53Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.whydah.identity.application.ApplicationDao.getApplication(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (app != null) { java.lang.String appid = app.getId(); java.lang.String appname = app.getName(); java.lang.String secret = app.getSecurity().getSecret(); applicationCredential = new net.whydah.sso.application.types.ApplicationCredential(appid, appname, secret); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3495/buggy-version/src.main.java.net.whydah.identity.application.ApplicationCredentialRepository.java", "BodyUseAPI": ["net.whydah.sso.application.types.Application.getSecurity()", "net.whydah.sso.application.types.Application.getName()", "app.getSecurity().getSecret()", "net.whydah.sso.application.types.Application.getId()"], "Fixed commit": "41dfe58f209d3cda942e54d5f3b9b0c848308836", "Url": "https://api.github.com/repos/Cantara/Whydah-UserIdentityBackend", "Date": "2015-11-23T09:13:50Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (memberId.contentEquals(\"0\")) { com.hehehey.ghost.bot.ZhihuBot.logger.warning(\"Anonymous user.\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6550/buggy-version/src.main.java.com.hehehey.ghost.bot.ZhihuBot.java", "BodyUseAPI": [], "Fixed commit": "615ecd235103b566f7c6953e0c3dca5cfe832582", "Url": "https://api.github.com/repos/dickrd/ghost", "Date": "2017-08-29T06:43:05Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((node.point().compareTo(newNode.point())) == 0) { return node; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1588/buggy-version/src.week5.KdTree.java", "BodyUseAPI": [], "Fixed commit": "8e1a391f21255d92f9c173e915e15059771c520d", "Url": "https://api.github.com/repos/johnttan/algorithms_in_java", "Date": "2015-02-24T22:06:26Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((elementColors.size()) == 0) de.ovgu.featureide.ui.projectExplorer.ProjectExplorerLabelProvider.SPACE_STRING = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4861/buggy-version/plugins.de.ovgu.featureide.ui.src.de.ovgu.featureide.ui.projectExplorer.ProjectExplorerLabelProvider.java", "BodyUseAPI": [], "Fixed commit": "d5d16ec93227a7def00eafa1e05e8ec1fa18f5bd", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-10-05T14:52:27Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((elementColors.size()) == 0) de.ovgu.featureide.ui.projectExplorer.ProjectExplorerLabelProvider.SPACE_STRING = \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4861/buggy-version/plugins.de.ovgu.featureide.ui.src.de.ovgu.featureide.ui.projectExplorer.ProjectExplorerLabelProvider.java", "BodyUseAPI": [], "Fixed commit": "d5d16ec93227a7def00eafa1e05e8ec1fa18f5bd", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2016-10-05T14:52:27Z"},
{"Line": "=>719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((child = _multiAttrStatement(parent, data, \"file\", railo.transformer.cfml.script.CTX_OTHER, false, true)) != null) return child; else if ((child = _singleAttrStatement(parent, data, \"flush\", \"interval\", ATTR_TYPE_OPTIONAL, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"ftp\", railo.transformer.cfml.script.CTX_OTHER, false, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"http\", railo.transformer.cfml.script.CTX_OTHER, true, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"httpparam\", railo.transformer.cfml.script.CTX_OTHER, false, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"imap\", railo.transformer.cfml.script.CTX_OTHER, false, true)) != null) return child; else if ((child = _singleAttrStatement(parent, data, \"import\", \"path\", ATTR_TYPE_REQUIRED, false)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"index\", railo.transformer.cfml.script.CTX_OTHER, false, true)) != null) return child; else if ((child = _singleAttrStatement(parent, data, \"include\", \"template\", ATTR_TYPE_REQUIRED, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"interface\", railo.transformer.cfml.script.CTX_INTERFACE, true, false)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"ldap\", railo.transformer.cfml.script.CTX_OTHER, true, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"lock\", railo.transformer.cfml.script.CTX_LOCK, true, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"loop\", railo.transformer.cfml.script.CTX_LOOP, true, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"login\", railo.transformer.cfml.script.CTX_OTHER, true, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"loginuser\", railo.transformer.cfml.script.CTX_OTHER, false, true)) != null) return child; else if ((child = _singleAttrStatement(parent, data, \"logout\", null, ATTR_TYPE_NONE, false)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"mail\", railo.transformer.cfml.script.CTX_OTHER, true, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"mailpart\", railo.transformer.cfml.script.CTX_OTHER, true, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"mailparam\", railo.transformer.cfml.script.CTX_OTHER, false, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"module\", railo.transformer.cfml.script.CTX_OTHER, true, true)) != null) return child; else if ((child = _singleAttrStatement(parent, data, \"pageencoding\", \"pageencoding\", ATTR_TYPE_OPTIONAL, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"param\", railo.transformer.cfml.script.CTX_OTHER, false, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"pdf\", railo.transformer.cfml.script.CTX_OTHER, true, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"pdfparam\", railo.transformer.cfml.script.CTX_OTHER, false, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"procparam\", railo.transformer.cfml.script.CTX_OTHER, false, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"procresult\", railo.transformer.cfml.script.CTX_OTHER, false, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"query\", railo.transformer.cfml.script.CTX_QUERY, true, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"queryparam\", railo.transformer.cfml.script.CTX_OTHER, false, true)) != null) return child; else if ((child = _singleAttrStatement(parent, data, \"rethrow\", null, ATTR_TYPE_NONE, false)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"savecontent\", railo.transformer.cfml.script.CTX_SAVECONTENT, true, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"schedule\", railo.transformer.cfml.script.CTX_OTHER, false, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"search\", railo.transformer.cfml.script.CTX_OTHER, false, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"setting\", railo.transformer.cfml.script.CTX_OTHER, false, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"stopwatch\", railo.transformer.cfml.script.CTX_OTHER, true, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"storedproc\", railo.transformer.cfml.script.CTX_OTHER, true, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"thread\", railo.transformer.cfml.script.CTX_THREAD, true, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"trace\", railo.transformer.cfml.script.CTX_OTHER, true, true)) != null) return child; else if ((child = _singleAttrStatement(parent, data, \"throw\", \"message\", ATTR_TYPE_OPTIONAL, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"transaction\", railo.transformer.cfml.script.CTX_TRANSACTION, true, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"wddx\", railo.transformer.cfml.script.CTX_OTHER, false, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"zip\", railo.transformer.cfml.script.CTX_ZIP, true, true)) != null) return child; else if ((child = _multiAttrStatement(parent, data, \"zipparam\", railo.transformer.cfml.script.CTX_ZIP, false, true)) != null) return child;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5128/buggy-version/railo-java.railo-core.src.railo.transformer.cfml.script.CFMLScriptTransformer.java", "BodyUseAPI": ["railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_SAVECONTENT,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_TRANSACTION,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_LOCK,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._singleAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,java.lang.String,int,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._singleAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,<nulltype>,int,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._singleAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,java.lang.String,int,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._singleAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,<nulltype>,int,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_ZIP,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_ZIP,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_THREAD,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._singleAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,java.lang.String,int,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_INTERFACE,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._singleAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,java.lang.String,int,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._singleAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,java.lang.String,int,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_QUERY,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_LOOP,boolean,boolean)", "railo.transformer.cfml.script.CFMLScriptTransformer._multiAttrStatement(railo.transformer.bytecode.Body,railo.transformer.cfml.script.Data,java.lang.String,railo.transformer.cfml.script.CTX_OTHER,boolean,boolean)"], "Fixed commit": "ef802227e5c8c1081090d0a1fe5d179fba216854", "Url": "https://api.github.com/repos/ringgi/railo", "Date": "2011-01-17T11:02:51Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cs.wpisuitetng.modules.requirementmanager.view.MainView.getComponentAt(int)", "edu.wpi.cs.wpisuitetng.modules.requirementmanager.view.MainView.getComponentAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (toBeRemoved == compAtIndex) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5888/buggy-version/RequirementManager.src.edu.wpi.cs.wpisuitetng.modules.requirementmanager.view.ViewEventController.java", "BodyUseAPI": [], "Fixed commit": "899e11e3cf11ed8dd94ec745c5a100b22ad1b622", "Url": "https://api.github.com/repos/djkirby/wpi-suite-tng", "Date": "2013-04-12T04:46:26Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ships[row][column].shootAt(row, column)) { (hitCount)++; return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8401/buggy-version/src.battleships.Ocean.java", "BodyUseAPI": [], "Fixed commit": "2efd6c8ac44d9028997124bbe5a925f3bc0fc9c1", "Url": "https://api.github.com/repos/jbliss02/sp2-cw4-2014", "Date": "2015-03-14T16:03:26Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(viewModel.getQuantity()))) { etLotAmount.setText(viewModel.getQuantity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6972/buggy-version/app.src.main.java.org.openlmis.core.view.holder.LotMovementViewHolder.java", "BodyUseAPI": ["android.widget.EditText.setText(viewModel.getQuantity())", "org.openlmis.core.view.viewmodel.LotMovementViewModel.getQuantity()"], "Fixed commit": "63e9713deaa27c05080e09495fe3b03a5b8b7131", "Url": "https://api.github.com/repos/SIGLUS/lmis-moz-mobile", "Date": "2016-10-26T07:08:54Z"},
{"Line": "=>530", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (true == (mRepeat)) { setPausedModifier(false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6821/buggy-version/android.src.main.java.com.brentvatne.react.ReactVideoView.java", "BodyUseAPI": [], "Fixed commit": "5b7a9d801e27b7003cdc1079a5f8f40dedf68d21", "Url": "https://api.github.com/repos/8fit/react-native-video", "Date": "2017-09-14T09:37:21Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.endsWith(\"src\")) { path = path.substring(0, ((path.length()) - 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/5317/buggy-version/src.Main.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "7e4ba18c945ea768b6e8ed678f6a36c3d1b466a7", "Url": "https://api.github.com/repos/ebull1985/csc4340", "Date": "2017-03-27T03:42:42Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedPeopleList.size()) == 0) { navigator.goToPersonDetails(person); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1243/buggy-version/app.src.main.java.com.lucasurbas.masterdetail.ui.people.PeoplePresenter.java", "BodyUseAPI": [], "Fixed commit": "dc73c733aed7e340546478e7f4c3fdbb1119b04a", "Url": "https://api.github.com/repos/bohsen/MaterialMasterDetail", "Date": "2017-09-18T08:03:35Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sagebionetworks.bridge.config.BridgeConfigFactory.getConfig().getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((adminUser != null) && (adminUser.equals(account.getEmail()))) { user.setConsent(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4649/buggy-version/app.org.sagebionetworks.bridge.services.AuthenticationServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "8623cad0996a50173d5639d3109a407e30d0a57b", "Url": "https://api.github.com/repos/eric-wu/BridgePF", "Date": "2014-10-04T04:15:38Z"},
{"Line": "=>763", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(con.getAutoCommit())) { con.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/7772/buggy-version/src.tuffy.db.RDB.java", "BodyUseAPI": ["java.sql.Connection.commit()"], "Fixed commit": "1653b2d4171c95e47eff3e296b20a3bb1e4ab9a5", "Url": "https://api.github.com/repos/cosmoharrigan/tuffy", "Date": "2014-02-15T07:09:08Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.runtime.op.Caster.toString(java.lang.Object,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet, IfNull]", "Content": "=>if (str != null) return (railo.runtime.type.util.ArrayUtil.arrayContainsIgnoreEmpty(array, str, false)) + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1425/buggy-version/railo-java.railo-core.src.railo.runtime.functions.arrays.ArrayContains.java", "BodyUseAPI": ["railo.runtime.type.util.ArrayUtil.arrayContainsIgnoreEmpty(railo.runtime.type.Array,java.lang.String,boolean)"], "Fixed commit": "a867ceb0db914f20dd7160c1dd2a4d3157fa7195", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-08-27T14:06:56Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["railo.runtime.op.Caster.toString(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (str != null) return (railo.runtime.type.util.ArrayUtil.arrayContainsIgnoreEmpty(array, value, true)) + 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1425/buggy-version/railo-java.railo-core.src.railo.runtime.functions.arrays.ArrayContainsNoCase.java", "BodyUseAPI": [], "Fixed commit": "a867ceb0db914f20dd7160c1dd2a4d3157fa7195", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2012-08-27T14:06:56Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mob.targetTasks) != null) { mob.targetTasks.addTask(3, new net.minecraft.entity.ai.EntityAINearestAttackableTarget(mob, sq.entity.EntityHuman.class, 0, true)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/9140/buggy-version/src.main.java.sq.core.forge.EventHooksForge.java", "BodyUseAPI": ["mob.targetTasks.addTask(int,net.minecraft.entity.ai.EntityAINearestAttackableTarget)"], "Fixed commit": "2e9e9884f00efb5bfac89e983acff2ae9110e7b5", "Url": "https://api.github.com/repos/WildBamaBoy/spider-queen", "Date": "2015-07-05T04:33:56Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.alliknow.podcatcher.model.EpisodeManager.getResumeAt(net.alliknow.podcatcher.model.types.Episode)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (resumeAt > (getCurrentPosition())) player.seekTo(resumeAt); else playNext();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1322/buggy-version/src.net.alliknow.podcatcher.services.PlayEpisodeService.java", "BodyUseAPI": ["android.media.MediaPlayer.seekTo(int)"], "Fixed commit": "08485c57097685eba76f84aff5205560f5f487a6", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2014-01-06T10:31:58Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adView) != null) { adView.resume(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4800/buggy-version/app.src.main.java.com.alequinonboard.simplemoodlight.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "35337b70cbe7bd1bc44b372c3fbce2b0983885fc", "Url": "https://api.github.com/repos/Alequin/simple-mood-light", "Date": "2017-02-19T10:05:28Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adView) != null) { adView.pause(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4800/buggy-version/app.src.main.java.com.alequinonboard.simplemoodlight.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "35337b70cbe7bd1bc44b372c3fbce2b0983885fc", "Url": "https://api.github.com/repos/Alequin/simple-mood-light", "Date": "2017-02-19T10:05:28Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arrayNew.getInitialiList().isEmpty()) return java.lang.String.format(\"new %s[%s]\", arrayNew.getType(), org.apache.commons.lang.StringUtils.join(arrayNew.getDimesExpressions(), \", \"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/346/buggy-version/src.gool.generator.common.CommonCodeGenerator.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,arrayNew.getType(),org.apache.commons.lang.StringUtils.join(arrayNew.getDimesExpressions(), \", \"))", "org.apache.commons.lang.StringUtils.join(arrayNew.getDimesExpressions(),java.lang.String)", "gool.ast.core.ArrayNew.getType()", "gool.ast.core.ArrayNew.getDimesExpressions()"], "Fixed commit": "22311cc3fb8a6de269c47886866cec3acdf063bc", "Url": "https://api.github.com/repos/lublud/GOOL", "Date": "2015-03-14T20:53:51Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (arrayNew.getInitialiList().isEmpty()) { java.lang.String ret = \"None\"; for (gool.ast.core.Expression e : arrayNew.getDimesExpressions()) ret = java.lang.String.format(\"[%s]*%s\", ret, e); return (\"(\" + ret) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/346/buggy-version/src.gool.generator.python.PythonGenerator.java", "BodyUseAPI": ["gool.ast.core.ArrayNew.getDimesExpressions()"], "Fixed commit": "22311cc3fb8a6de269c47886866cec3acdf063bc", "Url": "https://api.github.com/repos/lublud/GOOL", "Date": "2015-03-14T20:53:51Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((nextTick[row][col]) != null) { nextTick[row][col].tick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/67/buggy-version/src.blir.engine.game.GenericGame.java", "BodyUseAPI": ["nextTick[row][col].tick()"], "Fixed commit": "a1553162c494bb1e723e25c4258578f6f8d0750f", "Url": "https://api.github.com/repos/Blir/BlirEngine", "Date": "2014-01-05T00:44:05Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((source.getEndDate()) != null) { endDate = source.getEndDate().value; }else { endDate = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4385/buggy-version/src.main.java.typetask.storage.XmlAdaptedTask.java", "BodyUseAPI": [], "Fixed commit": "0d228eb77eb6c3acb7645faef084fc02f2808851", "Url": "https://api.github.com/repos/CS2103JAN2017-T09-B2/main", "Date": "2017-03-28T07:26:40Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((source.getEndTime()) != null) { endTime = source.getEndTime().value; }else { endTime = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/4385/buggy-version/src.main.java.typetask.storage.XmlAdaptedTask.java", "BodyUseAPI": [], "Fixed commit": "0d228eb77eb6c3acb7645faef084fc02f2808851", "Url": "https://api.github.com/repos/CS2103JAN2017-T09-B2/main", "Date": "2017-03-28T07:26:40Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.positives()) == 0) || ((this.negatives()) == 0)) return 0.0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8531/buggy-version/src.machine.learning.tdidt.Table.java", "BodyUseAPI": [], "Fixed commit": "98910fcdb47be9ccc72bc5d723918f99976de0c3", "Url": "https://api.github.com/repos/RaduAlexandru/Machine-Learning-TDIDT", "Date": "2015-11-18T10:20:25Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (page == (Controller.PAGE.RESET)) startIndex = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2248/buggy-version/BestBuyDBGUI.src.model.SQLQuery.java", "BodyUseAPI": [], "Fixed commit": "bf074339f5a9fb5baa96dbf99e6c7ec219c73d28", "Url": "https://api.github.com/repos/versemonger/BestBuyDatabase", "Date": "2016-04-29T06:22:45Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDebug) { java.lang.System.out.print(\"Result: \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6766/buggy-version/src.main.java.sum.SumLauncher.java", "BodyUseAPI": [], "Fixed commit": "124c2baf10649125c8179baf475cf592661c4e21", "Url": "https://api.github.com/repos/javaronok/Summator", "Date": "2017-07-30T10:53:00Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (buyCarCookie == null) { return \"/iwow/cart/showcartcontent\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1601/buggy-version/src.main.java.tw.com.iwow.web.ShoppingCartController.java", "BodyUseAPI": [], "Fixed commit": "ff298299b96f847f06fec5a90f5fd1e3c8de8063", "Url": "https://api.github.com/repos/FaGao/iwow_test", "Date": "2017-04-23T07:02:58Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((previousMessage.getSubject()) != null) subject.setText(getString(R.string.mail_re, previousMessage.getSubject()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/315/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.SendMessage.java", "BodyUseAPI": ["me.ccrama.redditslide.Activities.SendMessage.getString(R.string.mail_re,previousMessage.getSubject())", "net.dean.jraw.models.PrivateMessage.getSubject()", "android.widget.EditText.setText(getString(R.string.mail_re, previousMessage.getSubject()))"], "Fixed commit": "16e48ca0844f6e10b20602e48f335d5b7ab3d9eb", "Url": "https://api.github.com/repos/mscg82/Slide", "Date": "2017-09-26T19:46:23Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((emptyView) == null) { emptyView = view.findViewById(android.R.id.empty); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8077/buggy-version/rsandroid-recyclerview.src.main.java.io.reactivesprint.android.recyclerview.support.RecyclerFragment.java", "BodyUseAPI": [], "Fixed commit": "eb6f939d6d67092cccb32119f28400e9e55d98f0", "Url": "https://api.github.com/repos/ReactiveSprint/RsAndroid", "Date": "2016-08-10T23:25:54Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((recyclerView) == null) { recyclerView = ((android.support.v7.widget.RecyclerView) (view.findViewById(android.R.id.list))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8077/buggy-version/rsandroid-recyclerview.src.main.java.io.reactivesprint.android.recyclerview.support.RecyclerFragment.java", "BodyUseAPI": [], "Fixed commit": "eb6f939d6d67092cccb32119f28400e9e55d98f0", "Url": "https://api.github.com/repos/ReactiveSprint/RsAndroid", "Date": "2016-08-10T23:25:54Z"},
{"Line": "=>588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((projectTbl.getSelectedRow()) == (-1)) { for (int i = 0; i < (projectTbl.getRowCount()); i++) { if ((projectTbl.getModel().getValueAt(i, 0)) == (selectedProject.getID())) { projectTbl.changeSelection(i, 0, false, false); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3539/buggy-version/src.de.mpa.client.ui.panels.ProjectPanel.java", "BodyUseAPI": ["org.jdesktop.swingx.JXTable.changeSelection(int,int,boolean,boolean)", "org.jdesktop.swingx.JXTable.getRowCount()", "projectTbl.getModel().getValueAt(int,int)", "org.jdesktop.swingx.JXTable.getModel()"], "Fixed commit": "cb4ccba25dab80f38f2bdfb333a1b232bc45cd7d", "Url": "https://api.github.com/repos/compomics/meta-proteome-analyzer", "Date": "2017-03-06T08:12:13Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((instances.size()) > 2) { rSquare = alg.embed3d.EmbedUtil.computeRSquare(positions, instances, features, dataset); ccc = alg.embed3d.EmbedUtil.computeCCC(positions, instances, features, dataset); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/2506/buggy-version/src.alg.embed3d.Random3DEmbedder.java", "BodyUseAPI": ["alg.embed3d.EmbedUtil.computeRSquare(java.util.List<javax.vecmath.Vector3f>,java.util.List<dataInterface.MolecularPropertyOwner>,java.util.List<dataInterface.MoleculeProperty>,data.DatasetFile)", "alg.embed3d.EmbedUtil.computeCCC(java.util.List<javax.vecmath.Vector3f>,java.util.List<dataInterface.MolecularPropertyOwner>,java.util.List<dataInterface.MoleculeProperty>,data.DatasetFile)"], "Fixed commit": "cbd3222156d9b5cb5a844a89b7a2892df6328871", "Url": "https://api.github.com/repos/mguetlein/CheS-Map", "Date": "2013-05-16T12:19:31Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (detailEntity)) { if ((detailEntity.getTicketOk()) || (detailEntity.getFree())) { com.bzh.dytt.detail.DetailPresenter.DownloadFilmTaskSubscriber downloadFilmTaskSubscriber = new com.bzh.dytt.detail.DetailPresenter.DownloadFilmTaskSubscriber(v); com.bzh.data.repository.Repository.getInstance().downloadFilm(detailEntity.getViewkey(), com.bzh.common.utils.DeviceUtils.getUniqueId(getBaseActivity())).doOnSubscribe(downloadFilmTaskSubscriber).subscribeOn(rx.schedulers.Schedulers.io()).unsubscribeOn(rx.android.schedulers.AndroidSchedulers.mainThread()).observeOn(rx.android.schedulers.AndroidSchedulers.mainThread()).subscribe(downloadFilmTaskSubscriber); }else { android.widget.Toast.makeText(getBaseActivity(), \"\u8d2d\u4e70\u89c2\u5f71\u5238\u540e\u5373\u53ef\u4e0b\u8f7d\u8be5\u89c6\u9891\", Toast.LENGTH_SHORT).show(); } }else { android.widget.Toast.makeText(getBaseActivity(), \"\u6570\u636e\u52a0\u8f7d\u4e2d\uff0c\u8bf7\u7a0d\u540e\u518d\u8bd5\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/3902/buggy-version/app.src.main.java.com.bzh.dytt.detail.DetailPresenter.java", "BodyUseAPI": [], "Fixed commit": "f9b5011e88190205fde43496e3d689ef5e17b006", "Url": "https://api.github.com/repos/linzuk/DYTT", "Date": "2017-11-08T03:06:10Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((shortName == null) || ((shortName.length()) == 0)) shortName = \"Unknown\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/8398/buggy-version/src.main.java.orca.flukes.ndl.RequestLoader.java", "BodyUseAPI": [], "Fixed commit": "acb512447d38f5252cdfc7e9fc0a4250c6fc4fd7", "Url": "https://api.github.com/repos/RENCI-NRIG/flukes", "Date": "2015-09-25T17:22:50Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tokenClickStyle) == (com.tokenautocomplete.TokenCompleteTextView.TokenClickStyle.None)) { handled = super.onTouchEvent(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1216/buggy-version/SplitwiseTokenExample.src.main.java.com.tokenautocomplete.TokenCompleteTextView.java", "BodyUseAPI": [], "Fixed commit": "c225f47c7163e304870ea79c2abe4f0689c98dc0", "Url": "https://api.github.com/repos/splitwise/TokenAutoComplete", "Date": "2013-10-10T21:32:53Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!handled) && ((tokenClickStyle) != (com.tokenautocomplete.TokenCompleteTextView.TokenClickStyle.None))) { handled = super.onTouchEvent(event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/1216/buggy-version/SplitwiseTokenExample.src.main.java.com.tokenautocomplete.TokenCompleteTextView.java", "BodyUseAPI": [], "Fixed commit": "c225f47c7163e304870ea79c2abe4f0689c98dc0", "Url": "https://api.github.com/repos/splitwise/TokenAutoComplete", "Date": "2013-10-10T21:32:53Z"},
{"Line": "=>381", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ClassLibrary.Concord.getConcord()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (words.containsKey(word)) { wordExists = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6258/buggy-version/src.ClassLibrary.CmdRepl.java", "BodyUseAPI": [], "Fixed commit": "41825623400bb99b175740d637b68eaa26590b85", "Url": "https://api.github.com/repos/askewseth/Concordanator", "Date": "2016-03-03T01:24:43Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (wordExists == false) { java.lang.System.out.println(((\"Word: \" + word) + \" not found in the text.\")); }else { java.lang.System.out.println(\"TOO MANY ENTRIES: The word you are searching for is too common. Please be more specific.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6258/buggy-version/src.ClassLibrary.CmdRepl.java", "BodyUseAPI": [], "Fixed commit": "41825623400bb99b175740d637b68eaa26590b85", "Url": "https://api.github.com/repos/askewseth/Concordanator", "Date": "2016-03-03T01:24:43Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (side != (-1)) { this.side = net.minecraft.util.EnumFacing.values()[stream.readByte()]; }else { this.side = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6941/buggy-version/src.main.java.appeng.core.sync.packets.PacketClick.java", "BodyUseAPI": [], "Fixed commit": "9c69352f9a7846790d626aac8fbc4f6d905bb01e", "Url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2", "Date": "2016-10-15T11:23:45Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (side == null) { data.writeByte((-1)); }else { data.writeByte(side.ordinal()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V5/6941/buggy-version/src.main.java.appeng.core.sync.packets.PacketClick.java", "BodyUseAPI": [], "Fixed commit": "9c69352f9a7846790d626aac8fbc4f6d905bb01e", "Url": "https://api.github.com/repos/AppliedEnergistics/Applied-Energistics-2", "Date": "2016-10-15T11:23:45Z"},
{"Line": "=>754", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LocationServices.FusedLocationApi.getLastLocation(com.google.android.gms.common.api.GoogleApiClient)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (userLastLocation == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3026/buggy-version/app.src.main.java.com.bahpps.cahue.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "e5231d111fd2b97a1728c2a05a86adf79ab73d8c", "Url": "https://api.github.com/repos/fgatti675/cahueAndroid", "Date": "2014-09-29T09:32:29Z"},
{"Line": "=>591", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getCarPosition()) != null) && ((directions) != null)) addDirections();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3026/buggy-version/app.src.main.java.com.bahpps.cahue.MapsActivity.java", "BodyUseAPI": [], "Fixed commit": "e5231d111fd2b97a1728c2a05a86adf79ab73d8c", "Url": "https://api.github.com/repos/fgatti675/cahueAndroid", "Date": "2014-09-29T09:32:29Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((image_dir.listFiles().length) == 0) { javax.swing.JOptionPane.showMessageDialog(this, (\"No hay imagenes; tomare el directorio \" + \"predetermindado: (./images/)\")); image_dir = new java.io.File(\"images/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3323/buggy-version/com.edsand.Eview.java", "BodyUseAPI": [], "Fixed commit": "b0d8ae16e207ca1b99225633d4c07c106bb5bb05", "Url": "https://api.github.com/repos/ed-sand/Eview", "Date": "2017-10-23T23:55:09Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((xmppmsg.getType()) != (org.jivesoftware.smack.packet.Message.Type.normal)) { mAckExecutor.post(new com.magnet.mmx.client.common.MessageManager.SendAck(packet)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8167/buggy-version/common.src.main.java.com.magnet.mmx.client.common.MessageManager.java", "BodyUseAPI": [], "Fixed commit": "d097e6d2af97ee8b65c71be7c70f532451f9ee15", "Url": "https://api.github.com/repos/magnetsystems/message-sdk-java-android", "Date": "2015-11-03T20:58:34Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rootView == null) { rootView = android.view.LayoutInflater.from(getContext()).inflate(R.layout.list_item_track, parent, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/914/buggy-version/app.src.main.java.com.willgates.spotifystreamer.utils.TrackAdapter.java", "BodyUseAPI": [], "Fixed commit": "cfb5358cf86583fc6a4de4aa2e8ad7f9223a96f1", "Url": "https://api.github.com/repos/willgates/AND-Spotify-Streamer", "Date": "2015-07-13T11:28:22Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rootView == null) { rootView = android.view.LayoutInflater.from(getContext()).inflate(R.layout.list_item_artist, parent, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/914/buggy-version/app.src.main.java.com.willgates.spotifystreamer.utils.ArtistAdapter.java", "BodyUseAPI": [], "Fixed commit": "cfb5358cf86583fc6a4de4aa2e8ad7f9223a96f1", "Url": "https://api.github.com/repos/willgates/AND-Spotify-Streamer", "Date": "2015-07-13T11:28:22Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (undo) { mAdapter.onItemDismiss(position); }else { mAdapter.remove(position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1567/buggy-version/app.src.main.java.com.github.jmitchell38488.todo.app.ui.fragment.ListFragment.java", "BodyUseAPI": [], "Fixed commit": "fdcf02b5d3e398e427c1042603c4f93724d97596", "Url": "https://api.github.com/repos/jmitchell38488/android-todo-app", "Date": "2016-11-15T20:41:14Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(field.getText().isEmpty())) { categories.add(field.getText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/852/buggy-version/src.gui.sysadmin.annotationview.SysadminAnnotationPopup.java", "BodyUseAPI": ["javax.swing.JTextField.getText()", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "b7dbddab7426a59d5823833bbf15c5f48c69c2a7", "Url": "https://api.github.com/repos/genomizer/genomizer-desktop", "Date": "2014-05-16T09:19:20Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(lives[i].unUsed())) addObject(lives[i], ((xL[i]) + t), yL[i]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5001/buggy-version/MyWorld.java", "BodyUseAPI": ["MyWorld.addObject(lives[i],int,int)"], "Fixed commit": "0c76efd04e0cac353ec61449035b92da18ea35f5", "Url": "https://api.github.com/repos/shibunath/CMPE202-The-Walking-Dead", "Date": "2016-05-03T05:39:54Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (state == null) { labelText = getResources().getString(R.string.mobile_data_state_unknown); }else if (state == (org.chris.android.tool.mobiledata.DataConnectionState.CONNECTED)) { labelText = networkType.getLabel(); }else { labelText = getResources().getString(state.getLabelTextId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/690/buggy-version/src.org.chris.android.tool.MainActivity.java", "BodyUseAPI": ["getResources().getString(state.getLabelTextId())", "org.chris.android.tool.mobiledata.DataConnectionState.getLabelTextId()"], "Fixed commit": "98561ffe7bc8e7f104569cc58f6b18edb8b54a19", "Url": "https://api.github.com/repos/kaklakariada/androidtool", "Date": "2014-03-11T15:54:38Z"},
{"Line": "=>713", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (type != null) { uriBuilder.append(type.toLowerCase()); uriBuilder.append(\"s/\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3001/buggy-version/structr.structr-core.src.main.java.org.structr.core.servlet.JsonRestServlet.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "1e1dcc5afd232094eda2f41cc9471fffdb32191b", "Url": "https://api.github.com/repos/structr/structr", "Date": "2011-10-17T18:25:33Z"},
{"Line": "=>483", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (division_is_done) { return finishedTasks.cardinality(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8876/buggy-version/src.main.java.org.magellan.faleiro.MagellanJob.java", "BodyUseAPI": [], "Fixed commit": "5d933796193f76a302fc27559518b48e64dc9daa", "Url": "https://api.github.com/repos/mesos-magellan/faleiro", "Date": "2016-03-26T21:31:35Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.jackson.map.ObjectMapper.readValue(java.lang.String,org.codehaus.jackson.type.TypeReference<java.util.Map<java.lang.String, java.lang.String>>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(result.containsKey(com.uppidy.android.sdk.api.impl.UppidyErrorHandler.ERROR_TYPE))) { result.put(com.uppidy.android.sdk.api.impl.UppidyErrorHandler.ERROR_TYPE, com.uppidy.android.sdk.api.impl.UppidyErrorHandler.ERROR_TYPE_OAUTH); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2114/buggy-version/src.main.java.com.uppidy.android.sdk.api.impl.UppidyErrorHandler.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "57459891f4e9a6862d07be78691e742984146e6d", "Url": "https://api.github.com/repos/uppidy/uppidy-android-sdk", "Date": "2012-09-11T01:06:52Z"},
{"Line": "=>706", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (newHighScores != null) { synchronized(gameController.getHighScores()) { gameController.getHighScores().clear(); for (int i = 0; i < (newHighScores.length()); ++i) { try { gameController.getHighScores().add(new com.example.itsatrap.app.PlayerInfo(newHighScores.getJSONObject(i))); } catch (org.json.JSONException e) { e.printStackTrace(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1908/buggy-version/ItsATrap.app.src.main.java.com.example.itsatrap.app.MapActivity.java", "BodyUseAPI": ["org.json.JSONArray.getJSONObject(int)", "gameController.getHighScores().add(com.example.itsatrap.app.PlayerInfo)", "org.json.JSONArray.length()"], "Fixed commit": "eb516248e7cbde859e023a84382a6f795b2aa0c1", "Url": "https://api.github.com/repos/Its-a-Trap/My-Face-Android", "Date": "2014-06-01T19:28:07Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((editTextBrand.getText()) != null) { genericPart.setBrand(editTextBrand.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2234/buggy-version/app.src.main.java.sk.berops.android.fueller.gui.common.ActivityGenericPartAdd.java", "BodyUseAPI": ["sk.berops.android.fueller.dataModel.maintenance.GenericPart.setBrand(editTextBrand.getText().toString())", "editTextBrand.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "42bf1d563c40d37fa236829561f0d8390ad1d72f", "Url": "https://api.github.com/repos/gazoo4/vehiculum", "Date": "2016-10-03T17:53:32Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((editTextCarmakerPartId) != null) && ((editTextCarmakerPartId.getText()) != null)) { genericPart.setCarmakerPartID(editTextCarmakerPartId.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2234/buggy-version/app.src.main.java.sk.berops.android.fueller.gui.common.ActivityGenericPartAdd.java", "BodyUseAPI": ["android.widget.EditText.getText()", "sk.berops.android.fueller.dataModel.maintenance.GenericPart.setCarmakerPartID(editTextCarmakerPartId.getText().toString())", "editTextCarmakerPartId.getText().toString()"], "Fixed commit": "42bf1d563c40d37fa236829561f0d8390ad1d72f", "Url": "https://api.github.com/repos/gazoo4/vehiculum", "Date": "2016-10-03T17:53:32Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((editTextProducerPartId) != null) && ((editTextProducerPartId.getText()) != null)) { genericPart.setProducerPartID(editTextProducerPartId.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2234/buggy-version/app.src.main.java.sk.berops.android.fueller.gui.common.ActivityGenericPartAdd.java", "BodyUseAPI": ["android.widget.EditText.getText()", "editTextProducerPartId.getText().toString()", "sk.berops.android.fueller.dataModel.maintenance.GenericPart.setProducerPartID(editTextProducerPartId.getText().toString())"], "Fixed commit": "42bf1d563c40d37fa236829561f0d8390ad1d72f", "Url": "https://api.github.com/repos/gazoo4/vehiculum", "Date": "2016-10-03T17:53:32Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((editTextQuantity.getText()) == null) { genericPart.setQuantity(1); }else { genericPart.setQuantity(sk.berops.android.fueller.gui.common.GuiUtils.extractInteger(editTextQuantity)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2234/buggy-version/app.src.main.java.sk.berops.android.fueller.gui.common.ActivityGenericPartAdd.java", "BodyUseAPI": ["sk.berops.android.fueller.gui.common.GuiUtils.extractInteger(android.widget.EditText)", "sk.berops.android.fueller.dataModel.maintenance.GenericPart.setQuantity(sk.berops.android.fueller.gui.common.GuiUtils.extractInteger(editTextQuantity))"], "Fixed commit": "42bf1d563c40d37fa236829561f0d8390ad1d72f", "Url": "https://api.github.com/repos/gazoo4/vehiculum", "Date": "2016-10-03T17:53:32Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.probedock.client.common.config.Configuration.getInstance().getCurrentUid()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((uid != null) && (!(uid.isEmpty()))) { testRun.setUid(uid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8946/buggy-version/src.main.java.io.probedock.client.common.model.v1.ModelFactory.java", "BodyUseAPI": ["io.probedock.client.common.model.v1.TestRun.setUid(java.lang.String)"], "Fixed commit": "12148518eab892e61a31a165c59a099bf5c11dc8", "Url": "https://api.github.com/repos/probedock/probedock-java", "Date": "2015-06-01T11:00:59Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["lombok.javac.JavacNode.get()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((type.sym) != null) && ((type.sym.members_field) != null)) { type.sym.members_field.remove(((com.sun.tools.javac.tree.JCTree.JCMethodDecl) (def)).sym); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8201/buggy-version/src.core.lombok.javac.handlers.JavacHandlerUtil.java", "BodyUseAPI": ["com.sun.tools.javac.code.Scope.WriteableScope.remove(com.sun.tools.javac.code.Symbol.MethodSymbol)"], "Fixed commit": "dbe96eb74a8b0304bafcc72ae9a952e722d32912", "Url": "https://api.github.com/repos/rzwitserloot/lombok", "Date": "2012-03-26T22:00:14Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.Ebean.find(models.Address.class).select(\"*\").where().eq(\"user_id\", user.id).findUnique()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (oldAddress != null) { controllers.Ebean.delete(oldAddress); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3512/buggy-version/app.controllers.Registration.java", "BodyUseAPI": ["controllers.Ebean.delete(models.Address)"], "Fixed commit": "7ad4edc5b4f8d3e3cb2b7ab2f1449064d70159ac", "Url": "https://api.github.com/repos/sharukhhasan/swe-project", "Date": "2016-05-02T19:58:29Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (drainAmount > (oppTower.getRemainingStrength())) { drainAmount = oppTower.getRemainingStrength(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2016/buggy-version/framework.src.org.aimas.craftingquest.core.ActionEngine.java", "BodyUseAPI": ["org.aimas.craftingquest.state.objects.Tower.getRemainingStrength()"], "Fixed commit": "11fc4b81a20dfaffb5e9466d04c46b37dfc8ee7e", "Url": "https://api.github.com/repos/asorici/cq3", "Date": "2013-02-18T11:31:05Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((unit.energy) > drainAmount) { unit.energy -= drainAmount; }else { unit.energy = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2016/buggy-version/framework.src.org.aimas.craftingquest.core.ActionEngine.java", "BodyUseAPI": [], "Fixed commit": "11fc4b81a20dfaffb5e9466d04c46b37dfc8ee7e", "Url": "https://api.github.com/repos/asorici/cq3", "Date": "2013-02-18T11:31:05Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTablet) { com.huhx0015.spotifystreamer.ui.actionbar.SSActionBar.setupActionBar(\"TRACKS\", currentArtist, currentArtist, false, this); }else { com.huhx0015.spotifystreamer.ui.actionbar.SSActionBar.setupActionBar(\"TRACKS\", currentArtist, currentArtist, true, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5338/buggy-version/app.src.main.java.com.huhx0015.spotifystreamer.activities.SSMainActivity.java", "BodyUseAPI": [], "Fixed commit": "8c51807cecbc5392b8d5fd0769536f9ce5f57ec8", "Url": "https://api.github.com/repos/huhx0015/AN12_SpotifyStreamer", "Date": "2015-08-31T08:43:25Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRootFolder(resourceUri)) { request.setAccept(ResourceMediaType.FOLDER_JSON); }else { request.setAccept(ResourceMediaType.FILE_JSON); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/478/buggy-version/src.main.java.com.jaspersoft.jasperserver.jaxrs.client.apiadapters.resources.SingleResourceAdapter.java", "BodyUseAPI": [], "Fixed commit": "2dfa0546a031c0251d1382078695effc2ebca283", "Url": "https://api.github.com/repos/TanyaEf/jrs-rest-java-client", "Date": "2015-10-12T09:13:48Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maybe == null) { return new java.util.ArrayList<>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1924/buggy-version/Project.src.main.java.com.helpme.app.utils.maybe.Maybe.java", "BodyUseAPI": [], "Fixed commit": "e1e784077763993d41c8d64d6f2d3d992da951ca", "Url": "https://api.github.com/repos/ElloP/HELP-ME-THIS-IS-NOT-A-JOKE-THEY-HAVE-KIDNAPPED-ME", "Date": "2017-05-23T00:34:52Z"},
{"Line": "=>416", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (elapsed >= 60000) { logger.warn(\"araqne rpc: connection [{}] timeout, give up initialization\", channel.getRemoteAddress()); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1351/buggy-version/araqne-rpc.src.main.java.org.araqne.rpc.impl.RpcHandler.java", "BodyUseAPI": [], "Fixed commit": "4081ce2ecb2cb1cb3192ffcb5e38708ce65e7dbe", "Url": "https://api.github.com/repos/araqne/rpc", "Date": "2015-07-16T07:16:34Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["swift.client.model.Metadata.prefix()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (name.toLowerCase().startsWith(prefix.toLowerCase())) { name = name.substring(prefix.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2998/buggy-version/src.main.java.swift.client.model.Metadata.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()"], "Fixed commit": "877c2548f48f7fdf17371f330292c48533f1dd15", "Url": "https://api.github.com/repos/xtman/java-swift-client", "Date": "2016-11-21T13:42:33Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getImageFileName()) == null) { com.ditagis.hcm.docsotanhoa.utities.MySnackBar.make(mRootView, \"Ch\u01b0a c\u00f3 h\u00ecnh \u1ea3nh\", false); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7935/buggy-version/app.src.main.java.com.ditagis.hcm.docsotanhoa.DocSo.java", "BodyUseAPI": [], "Fixed commit": "ba8e89171443f7ef73c8305cf60ddd4f02ac9ebc", "Url": "https://api.github.com/repos/DITAGIS/HCM_TanHoa_DocSo_Android", "Date": "2017-11-03T08:01:12Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEntityEvent.getRightClicked()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (entity instanceof org.bukkit.entity.LivingEntity) { if ((!(entity instanceof org.bukkit.entity.Player)) || (permissions.canLaunchPlayers(player))) { org.bukkit.util.Vector entityVelocity = entity.getVelocity(); entityVelocity.setY(2); entity.setVelocity(entityVelocity); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5353/buggy-version/com.disabledhamster.bukkit.rocketboots.RBPlayerListener.java", "BodyUseAPI": ["org.bukkit.entity.Entity.getVelocity()", "org.bukkit.entity.Entity.setVelocity(org.bukkit.util.Vector)"], "Fixed commit": "d6a54a2ea3773e8fb373391533431811b89e52cb", "Url": "https://api.github.com/repos/brianewing/RocketBoots", "Date": "2011-05-30T02:00:29Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(value[j].toString())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5967/buggy-version/admin.broadleaf-open-admin-platform.src.main.java.org.broadleafcommerce.openadmin.web.rulebuilder.DataDTOToMVELTranslator.java", "BodyUseAPI": [], "Fixed commit": "549705a35450c5579156224ccb41957ba6b4f92f", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2014-07-29T21:51:35Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bids.getBids().isEmpty()) { return 0; }else { return this.bids.getHighestBid().getBidAmount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/410/buggy-version/GlamorousBorrowingWhaleApp.app.src.main.java.ualberta.cmput301w16t16.glamorousborrowingwhaleapp.Item.java", "BodyUseAPI": [], "Fixed commit": "49e2e614114525a9b3eaae990b7e111d1bd61bde", "Url": "https://api.github.com/repos/CMPUT301W16T16/GlamorousBorrowingWhaleApp", "Date": "2016-03-13T01:49:04Z"},
{"Line": "=>977", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dexPatch) { patchBundleInfo.setName(artifactBundleInfo.getPkgName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6837/buggy-version/atlas-gradle-plugin.dexpatch.src.main.java.com.taobao.android.TPatchTool.java", "BodyUseAPI": [], "Fixed commit": "715b5b634f67d4bbbf6e5c5aec2fb86c126b2251", "Url": "https://api.github.com/repos/alibaba/atlas", "Date": "2017-09-14T00:14:27Z"},
{"Line": "=>1135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (original.contains(\"bbspink.com\")) { url = org.monazilla.v2c.V2CHttpUtil.str2URL(original); return org.monazilla.v2c.V2CHttpUtil.updateDatFile(url, 0, 0L, null, v2cbbsthreadres, v2cbbs, false, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/340/buggy-version/src.org.monazilla.v2c.V2CHttpUtil.java", "BodyUseAPI": ["org.monazilla.v2c.V2CHttpUtil.str2URL(java.lang.String)"], "Fixed commit": "ff6c382eee5929b90c0d6160c2df4ea87a048cbf", "Url": "https://api.github.com/repos/v2c-patch/V2C_api", "Date": "2015-03-13T16:39:56Z"},
{"Line": "=>873", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portlet.expando.service.impl.ExpandoValueLocalServiceImpl.findByRowId(value.getRowId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (values.isEmpty()) { com.liferay.expando.kernel.model.ExpandoRow row = expandoRowPersistence.fetchByPrimaryKey(value.getRowId()); if (row != null) { expandoRowPersistence.remove(row); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5987/buggy-version/portal-impl.src.com.liferay.portlet.expando.service.impl.ExpandoValueLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "6667bdb897fc371f4f0ea38ae35f60da1860f4b4", "Url": "https://api.github.com/repos/cgoncas/liferay-portal", "Date": "2016-11-25T09:04:16Z"},
{"Line": "=>1325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.db.record.ODatabaseRecord.getClusterIdByName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (clusterId == (-1)) clusterId = getDatabase().addCluster(name, OStorage.CLUSTER_TYPE.PHYSICAL);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7019/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OClassImpl.java", "BodyUseAPI": [], "Fixed commit": "b209928741ff966f0226f5e657021d4dae34c97d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-07-10T07:51:41Z"},
{"Line": "=>1321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(abstractClass)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7019/buggy-version/core.src.main.java.com.orientechnologies.orient.core.metadata.schema.OClassImpl.java", "BodyUseAPI": [], "Fixed commit": "b209928741ff966f0226f5e657021d4dae34c97d", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-07-10T07:51:41Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((loginS.isEmpty()) || (passS.isEmpty())) { android.widget.Toast.makeText(ctx, ctx.getString(R.string.txtInfoAddUser), Toast.LENGTH_LONG).show(); buttonSend.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/3344/buggy-version/app.src.main.java.openfoodfacts.github.scrachx.openfood.fragments.OfflineEditFragment.java", "BodyUseAPI": [], "Fixed commit": "c4a1ad20a7fc80d057e3fe273a9f36d38ff65b8c", "Url": "https://api.github.com/repos/openfoodfacts/openfoodfacts-androidapp", "Date": "2015-05-10T22:17:26Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNetworkAvailable()) { mProgressDialog.show(); }else { doWhenNoNetwork(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5726/buggy-version/app.src.main.java.com.learnera.app.fragments.AttendanceFragment.java", "BodyUseAPI": [], "Fixed commit": "cf90428a6e7face051dd08f10bedb9cc812f9710", "Url": "https://api.github.com/repos/Kuttipishaash/LearnERA1", "Date": "2017-07-01T17:30:34Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) instanceof com.learnera.app.MarksActivity) { fragment = new com.learnera.app.fragments.MarksFragment(); fragmentTransaction.replace(R.id.marks_fragment, fragment); }else if ((getActivity()) instanceof com.learnera.app.AnnouncementsActivity) { }else if ((getActivity()) instanceof com.learnera.app.AttendanceActivity) { fragment = new com.learnera.app.fragments.AttendanceFragment(); fragmentTransaction.replace(R.id.fragment_attendance, fragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5726/buggy-version/app.src.main.java.com.learnera.app.fragments.NetworkNotAvailableFragment.java", "BodyUseAPI": [], "Fixed commit": "cf90428a6e7face051dd08f10bedb9cc812f9710", "Url": "https://api.github.com/repos/Kuttipishaash/LearnERA1", "Date": "2017-07-01T17:30:34Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getFreeSpace()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (freeSpace < 0) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1199/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.cache.local.OWOWCache.java", "BodyUseAPI": [], "Fixed commit": "4f86ca2deab94634404efdcdf69e19d8de606b5f", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2016-09-14T10:59:54Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getFreeSpace()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (freeSpace < 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1199/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.cache.local.OWOWCache.java", "BodyUseAPI": [], "Fixed commit": "4f86ca2deab94634404efdcdf69e19d8de606b5f", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2016-09-14T10:59:54Z"},
{"Line": "=>938", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.getFreeSpace()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (freeSpace < 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1199/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.paginated.wal.ODiskWriteAheadLog.java", "BodyUseAPI": [], "Fixed commit": "4f86ca2deab94634404efdcdf69e19d8de606b5f", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2016-09-14T10:59:54Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { mPlaybackPosition = 0; player.setPlayWhenReady(mAutoplay); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6401/buggy-version/src.com.owncloud.android.ui.preview.PreviewVideoFragment.java", "BodyUseAPI": [], "Fixed commit": "bc2b010968719a658a27a4a6539ee3fc78a39193", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2017-03-17T09:59:24Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player) != null) { outState.putBoolean(com.owncloud.android.ui.preview.PreviewVideoFragment.EXTRA_AUTOPLAY, mAutoplay); outState.putLong(com.owncloud.android.ui.preview.PreviewVideoFragment.EXTRA_PLAY_POSITION, player.getCurrentPosition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/6401/buggy-version/src.com.owncloud.android.ui.preview.PreviewVideoFragment.java", "BodyUseAPI": [], "Fixed commit": "bc2b010968719a658a27a4a6539ee3fc78a39193", "Url": "https://api.github.com/repos/owncloud/android", "Date": "2017-03-17T09:59:24Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.cask.cdap.etl.batch.DefaultJoinerContext.getJoinInputRecordClass()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (inputRecordClass == null) { inputRecordClass = co.cask.cdap.etl.common.TypeChecker.getJoinInputRecordClass(batchJoiner); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/672/buggy-version/cdap-app-templates.cdap-etl.cdap-etl-batch.src.main.java.co.cask.cdap.etl.batch.mapreduce.ETLMapReduce.java", "BodyUseAPI": [], "Fixed commit": "c09df27d4cf8460c43ccdc33bb5000292c9760be", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2017-05-14T00:11:02Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (researcher1Stack.isEmpty()) { java.lang.System.out.println(((Ancestor.NAME_NOT_FOUND_MESSAGE) + name1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/789/buggy-version/src.Ancestor.java", "BodyUseAPI": [], "Fixed commit": "88fa72fdb4e2bbbbbd32e74e85da06e3eda960d5", "Url": "https://api.github.com/repos/takeshi19/Genealogy-Tree", "Date": "2017-11-18T23:01:09Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (o != null) s += o + \"\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/39/buggy-version/src.com.aedan.jterminal.packages.defaultpackage.executors.commands.For.java", "BodyUseAPI": [], "Fixed commit": "a257649e326eab4759d1abea1ea6562d5eb0e299", "Url": "https://api.github.com/repos/aedans/JTerminal", "Date": "2016-12-23T01:35:55Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action == (android.view.MotionEvent.ACTION_DOWN)) { selected.startEditing(scaleFactor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7233/buggy-version/CaliSmall.src.edu.uci.calismall.BubbleMenu.java", "BodyUseAPI": [], "Fixed commit": "58be7009132ee04d7f2dbe98424550b32d37f692", "Url": "https://api.github.com/repos/uci-sdcl/CaliSmall", "Date": "2012-10-02T01:22:43Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (action == (android.view.MotionEvent.ACTION_UP)) { selected.applyTransform(); touched = null; lastPosition = new android.graphics.PointF(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7233/buggy-version/CaliSmall.src.edu.uci.calismall.BubbleMenu.java", "BodyUseAPI": [], "Fixed commit": "58be7009132ee04d7f2dbe98424550b32d37f692", "Url": "https://api.github.com/repos/uci-sdcl/CaliSmall", "Date": "2012-10-02T01:22:43Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nokia.dempsy.router.DecentralizedRoutingStrategy.fillMapFromActiveSlots(java.util.Map<java.lang.Integer, com.nokia.dempsy.router.DecentralizedRoutingStrategy.DefaultRouterSlotInfo>,com.nokia.dempsy.cluster.ClusterInfoSession,com.nokia.dempsy.config.ClusterId,com.nokia.dempsy.router.DecentralizedRoutingStrategy.Outbound)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (newtotalAddressCounts == 0) com.nokia.dempsy.router.DecentralizedRoutingStrategy.logger.info(((\"The cluster \" + (com.nokia.dempsy.internal.util.SafeString.valueOf(clusterId))) + \" seems to be missing from the cluster info manager (zookeeper).\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/5694/buggy-version/lib-dempsyimpl.src.main.java.com.nokia.dempsy.router.DecentralizedRoutingStrategy.java", "BodyUseAPI": [], "Fixed commit": "316e1355389adf7ef89d41de31780ae1bd487fb8", "Url": "https://api.github.com/repos/jimfcarroll/Dempsy", "Date": "2012-09-28T11:33:56Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (state != null) { if ((state.getStatus()) != null) setStatus(state.getStatus()); if ((state.getStatus()) == (com.wasser.spotify.remote.player.Status.STOPPED)) setMetadata(new com.wasser.spotify.remote.player.Track()); else if ((state.getTrack()) != null) setMetadata(state.getTrack()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/2509/buggy-version/src.com.wasser.spotify.remote.activities.MainActivity.java", "BodyUseAPI": ["com.wasser.spotify.remote.player.PlayerProperties.getStatus()", "com.wasser.spotify.remote.activities.MainActivity.setMetadata(state.getTrack())", "com.wasser.spotify.remote.activities.MainActivity.setStatus(state.getStatus())", "com.wasser.spotify.remote.player.PlayerProperties.getTrack()", "com.wasser.spotify.remote.player.PlayerProperties.getTrack()", "com.wasser.spotify.remote.player.PlayerProperties.getStatus()", "com.wasser.spotify.remote.player.PlayerProperties.getStatus()"], "Fixed commit": "c2ccf9ff231a8f7b183c77431fb9f264ab02ab77", "Url": "https://api.github.com/repos/WasserX/SpotifyRemote", "Date": "2012-03-28T21:00:15Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(user.getNickName())) { user.setNickName((\"\u51b0\u8c46\u7528\u6237\" + (user.getCpId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/1727/buggy-version/projects.bingdou-core.src.main.java.com.bingdou.core.service.user.UserBaseService.java", "BodyUseAPI": ["com.bingdou.core.model.User.getCpId()", "com.bingdou.core.model.User.setNickName((\"\u51b0\u8c46\u7528\u6237\" + (user.getCpId())))"], "Fixed commit": "9352dce1adc59bf077408bda0d8fdf1ac89d452c", "Url": "https://api.github.com/repos/magichill/sdk", "Date": "2017-03-09T01:19:27Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (p.isRoot()) { child_parse_items.add(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7582/buggy-version/src.main.java.jacoco.report.internal.AbstractHighlightGroupVisitor.java", "BodyUseAPI": [], "Fixed commit": "d5ef99f47bd70d00c5ea3552a1b22a8257e859af", "Url": "https://api.github.com/repos/h2oai/jacocoHighlight", "Date": "2016-08-15T22:36:32Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (pi.isRoot()) { java.util.Collection<jacoco.report.internal.html.parse.NewParseItem> l = new java.util.ArrayList<jacoco.report.internal.html.parse.NewParseItem>(1); l.add(pi); jacoco.report.internal.html.highlighter.NodeHighlighter.highlightTotal(n, l, tree); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/7582/buggy-version/src.main.java.jacoco.report.internal.html.highlighter.NodeHighlighter.java", "BodyUseAPI": ["java.util.Collection<jacoco.report.internal.html.parse.NewParseItem>.add(jacoco.report.internal.html.parse.NewParseItem)"], "Fixed commit": "d5ef99f47bd70d00c5ea3552a1b22a8257e859af", "Url": "https://api.github.com/repos/h2oai/jacocoHighlight", "Date": "2016-08-15T22:36:32Z"},
{"Line": "=>1372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (selected) currentCamera.switchToOrbiterView();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V6/8252/buggy-version/core.src.com.esbjon.entities.Shuttle.java", "BodyUseAPI": [], "Fixed commit": "a6f0aa7a5682ba5de480767e20dc37aa4929de4f", "Url": "https://api.github.com/repos/k-o-r-t-o/gdxDune", "Date": "2017-11-24T16:20:36Z"}]}
