{"UNKNOWN to If":[{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springfield.fs.Fs.getNode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (node != null) { return node.getProperty(propertyname); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1936/buggy-version/src.org.springfield.lou.model.DomainModel.java", "BodyUseAPI": ["org.springfield.fs.FsNode.getProperty(java.lang.String)"], "Fixed commit": "75e18ebf687feddb21d58e899c06604b0b780cfa", "Url": "https://api.github.com/repos/Noterik/lou3", "Date": "2016-09-14T14:47:23Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.startsWith(\"/shared/\")) { return org.springfield.lou.model.Model.sharedmodel.getProperty(path); }else if (path.startsWith(\"/app/\")) { return amodel.getProperty(path); }else if (path.startsWith(\"/domain/\")) { return org.springfield.lou.model.Model.dmodel.getProperty(path.substring(8)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1936/buggy-version/src.org.springfield.lou.model.Model.java", "BodyUseAPI": ["org.springfield.lou.model.AppModel.getProperty(java.lang.String)", "org.springfield.lou.model.DomainModel.getProperty(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.substring(int)", "org.springfield.lou.model.SharedModel.getProperty(java.lang.String)", "java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "75e18ebf687feddb21d58e899c06604b0b780cfa", "Url": "https://api.github.com/repos/Noterik/lou3", "Date": "2016-09-14T14:47:23Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (clazzName.equals(\"date\")) { return java.util.Date.class; }else if (clazzName.equals(\"timestamp\")) { return java.sql.Timestamp.class; }else if (clazzName.equals(\"char\")) { return char.class; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1966/buggy-version/src.main.java.com.weidian.bges.reflect.ReflectValue.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "0140166f66604bcf3343318853c17a754bc068e3", "Url": "https://api.github.com/repos/jiangfuqiang/bges", "Date": "2017-12-20T08:35:45Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value == null) || (\"\".equals(value))) { throw new java.lang.IllegalArgumentException(\"value is null for char\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1966/buggy-version/src.main.java.com.weidian.bges.reflect.ReflectValue.java", "BodyUseAPI": [], "Fixed commit": "0140166f66604bcf3343318853c17a754bc068e3", "Url": "https://api.github.com/repos/jiangfuqiang/bges", "Date": "2017-12-20T08:35:45Z"},
{"Line": "=>706", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["openlModule.getExtension().getDependencies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dependenciesList != null) { for (java.lang.String dependency : dependenciesList) { dependencies.add(new org.openl.syntax.code.Dependency(org.openl.syntax.code.DependencyType.MODULE, new org.openl.syntax.impl.IdentifierNode(IXlsTableNames.DEPENDENCY, null, dependency, null))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5109/buggy-version/STUDIO.org.openl.extension.xmlrules.src.org.openl.extension.xmlrules.XmlRulesParser.java", "BodyUseAPI": [], "Fixed commit": "1aad38e552c77d1684c42f106d9be12f8ae0a1df", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2015-10-20T15:22:09Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sourceCodeModule.getModule().getExtension().getDependencies()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dependencies != null) { for (java.lang.String dependency : dependencies) { gridBuilder.addCell(\"dependency\").addCell(dependency).nextRow(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5109/buggy-version/STUDIO.org.openl.extension.xmlrules.src.org.openl.extension.xmlrules.XmlRulesParser.java", "BodyUseAPI": [], "Fixed commit": "1aad38e552c77d1684c42f106d9be12f8ae0a1df", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2015-10-20T15:22:09Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { file.mkdir(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7756/buggy-version/cassandra-repair-scheduler.src.main.java.org.ayache.cassandra.repair.scheduler.jaxrs.ClusterServiceFactory.java", "BodyUseAPI": ["java.io.File.mkdir()"], "Fixed commit": "8c3aeea0ef4b1d02d5b2ed90e2fbf0a70f9aba8b", "Url": "https://api.github.com/repos/olivierayache/cassandra-admin-tools", "Date": "2016-11-11T01:07:02Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (baseElement instanceof org.activiti.bpmn.model.FlowElement) { org.activiti.editor.language.json.converter.BpmnJsonConverterUtil.convertListenersToJson(((org.activiti.bpmn.model.FlowElement) (baseElement)).getExecutionListeners(), true, propertiesNode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7360/buggy-version/modules.flowable-json-converter.src.main.java.org.activiti.editor.language.json.converter.BaseBpmnJsonConverter.java", "BodyUseAPI": [], "Fixed commit": "4286abd7b15737db19564e03680bdc2a9c0ebffd", "Url": "https://api.github.com/repos/flowable/flowable-engine", "Date": "2016-11-24T11:21:22Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (iterationType == (IterationType.KEY)) { result = (comparable1.hashCode()) - (comparable2.hashCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3365/buggy-version/hazelcast.src.main.java.com.hazelcast.util.SortingUtil.java", "BodyUseAPI": [], "Fixed commit": "be0bee9f49e2e740f554d600e4c3d56d6bdd5e45", "Url": "https://api.github.com/repos/mdogan/hazelcast", "Date": "2014-08-20T12:44:08Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (dataSourcePath != null) { this.dataSourcePath = dataSourcePath.toString(); }else { this.dataSourcePath = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2961/buggy-version/Experimental.src.org.sleuthkit.autopsy.experimental.autoingest.Manifest.java", "BodyUseAPI": [], "Fixed commit": "00c5da738c2b0c48be4a552d38edb314d3954862", "Url": "https://api.github.com/repos/sleuthkit/autopsy", "Date": "2017-06-05T19:25:49Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((equipped.stackSize) > 1) { net.minecraft.item.ItemStack filled = blusunrize.immersiveengineering.common.util.Utils.copyStackWithAmount(equipped, 1); equipped.stackSize -= 1; fill = container.fill(filled, tankFluid, true); if (!(player.inventory.addItemStackToInventory(filled))) player.func_146097_a(filled, false, true); }else { fill = container.fill(equipped, tankFluid, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/461/buggy-version/src.main.java.blusunrize.immersiveengineering.common.util.Utils.java", "BodyUseAPI": ["blusunrize.immersiveengineering.common.util.Utils.copyStackWithAmount(net.minecraft.item.ItemStack,int)", "net.minecraftforge.fluids.IFluidContainerItem.fill(net.minecraft.item.ItemStack,net.minecraftforge.fluids.FluidStack,boolean)"], "Fixed commit": "822a817cb6f9cdba9890fcac5aadd09cb662c93a", "Url": "https://api.github.com/repos/UnwrittenFun/ImmersiveEngineering", "Date": "2015-11-18T19:33:47Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((handler.fill(ForgeDirection.UNKNOWN, fluid, false)) > 0) { if (world.isRemote) return true; int fill = handler.fill(ForgeDirection.UNKNOWN, fluid, true); if ((equipped.stackSize) > 1) { net.minecraft.item.ItemStack emptied = blusunrize.immersiveengineering.common.util.Utils.copyStackWithAmount(equipped, 1); equipped.stackSize -= 1; container.drain(emptied, fill, true); if (!(player.inventory.addItemStackToInventory(emptied))) player.func_146097_a(emptied, false, true); }else { container.drain(equipped, fill, true); } player.openContainer.detectAndSendChanges(); ((net.minecraft.entity.player.EntityPlayerMP) (player)).sendContainerAndContentsToPlayer(player.openContainer, player.openContainer.getInventory()); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/461/buggy-version/src.main.java.blusunrize.immersiveengineering.common.util.Utils.java", "BodyUseAPI": ["net.minecraftforge.fluids.IFluidHandler.fill(ForgeDirection.UNKNOWN,net.minecraftforge.fluids.FluidStack,boolean)"], "Fixed commit": "822a817cb6f9cdba9890fcac5aadd09cb662c93a", "Url": "https://api.github.com/repos/UnwrittenFun/ImmersiveEngineering", "Date": "2015-11-18T19:33:47Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.zoxweb.shared.util.SharedStringUtil.isEmpty(name))) properties.put(name, value);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/813/buggy-version/src.main.java.org.zoxweb.shared.data.ApplicationConfigDAO.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "e1ce71dacea517055370a372a2e8039d71bcdb1f", "Url": "https://api.github.com/repos/fidusio/zoxweb-core", "Date": "2017-03-27T15:12:57Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getIntent().getData()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((data != null) && ((!(com.schibsted.android.sdk.SPiDClient.getInstance().isAuthorized())) || (com.schibsted.android.sdk.SPiDClient.getInstance().isClientToken()))) { com.schibsted.android.sdk.logger.SPiDLogger.log(\"Received app redirect\"); com.schibsted.android.sdk.SPiDClient.getInstance().handleIntent(data, new com.schibsted.android.example.SPiDNativeAppLogin.LoginListener(this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/183/buggy-version/SPiDNativeApp.src.com.schibsted.android.example.SPiDNativeAppLogin.java", "BodyUseAPI": ["com.schibsted.android.sdk.SPiDClient.getInstance().handleIntent(android.net.Uri,com.schibsted.android.example.SPiDNativeAppLogin.LoginListener)"], "Fixed commit": "aac4d93ea51bfa456d47fde76ad1044fb1b84c76", "Url": "https://api.github.com/repos/schibsted/sdk-android", "Date": "2013-07-08T13:08:15Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request.getParameter(\"page\")) == null) { response.sendRedirect(((ua.nure.radchenkom.Routes.ADMIN_USER_LIST) + \"?page=1\")); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7741/buggy-version/src.ua.nure.radchenkom.servlets.admin.UserList.java", "BodyUseAPI": [], "Fixed commit": "61ee45abd9e076fc48fdc2b6f4297d48e420c7f7", "Url": "https://api.github.com/repos/MaximRad/ServiceProvider", "Date": "2015-07-30T17:03:36Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (code == null) { code = 500; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7741/buggy-version/src.ua.nure.radchenkom.servlets.ErrorPage.java", "BodyUseAPI": [], "Fixed commit": "61ee45abd9e076fc48fdc2b6f4297d48e420c7f7", "Url": "https://api.github.com/repos/MaximRad/ServiceProvider", "Date": "2015-07-30T17:03:36Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((active) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4044/buggy-version/src.main.java.site.model.Sponsor.java", "BodyUseAPI": [], "Fixed commit": "3154091b339da3e0e7c8ac37b2961a7ba096970a", "Url": "https://api.github.com/repos/bgjug/jprime", "Date": "2016-03-09T21:48:51Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((--elementsToDepthIncrease) == 0) { if ((++currentDepth) > treeDepth) { break; } elementsToDepthIncrease = nextElementsToDepthIncrease; nextElementsToDepthIncrease = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5931/buggy-version/src.main.java.controller.CategoryTreeGenerator.java", "BodyUseAPI": [], "Fixed commit": "06e68bd4a71452ec6499d66ff8a4d66441b697c1", "Url": "https://api.github.com/repos/fmoghaddam/CategoryTreeGeneration", "Date": "2017-09-12T16:08:54Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!firstLineIsHeaders) { csvReader.setHeadersRead(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2712/buggy-version/collect-core.src.main.java.org.openforis.collect.io.metadata.collectearth.CollectEarthGridTemplateGenerator.java", "BodyUseAPI": [], "Fixed commit": "fd18210d5a3111b55e580192ce141c3f8ffd4c15", "Url": "https://api.github.com/repos/openforis/collect", "Date": "2016-12-08T16:28:16Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v7.app.AppCompatDelegate.getDefaultNightMode()) == (android.support.v7.app.AppCompatDelegate.MODE_NIGHT_YES)) menuItem.setTitle(R.string.day_mode); else menuItem.setTitle(R.string.night_mode);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8027/buggy-version/app.src.main.java.com.paulliu.zhihudaily.ui.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "90ce1aa43f4b14f963f62f5e47c725e9ece3279e", "Url": "https://api.github.com/repos/LevineLiu/ZhihuDaily", "Date": "2017-02-16T08:38:46Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["loci.formats.in.SDTReader.getSizeX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((paddedWidth > sizeX) && ((planeSize * (getSizeC())) > blockSize)) && ((((planeSize / paddedWidth) * sizeX) * (getSizeC())) <= blockSize)) { paddedWidth = sizeX; planeSize = ((sizeX * sizeY) * times) * bpp; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8317/buggy-version/components.formats-gpl.src.loci.formats.in.SDTReader.java", "BodyUseAPI": [], "Fixed commit": "a0bb6003ac1047566920c6a4ca1009ef4aaf607a", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-02-22T03:01:31Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((compileLatch.await(1, java.util.concurrent.TimeUnit.SECONDS)) == false) { android.util.Log.e(com.lolboxen.ni.NIWebView.NI_LOG_TAG, \"script did not compile\"); return returnValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7003/buggy-version/NIWebView.java", "BodyUseAPI": [], "Fixed commit": "0a1bced30542317fc8a993d9eacd67382edb3931", "Url": "https://api.github.com/repos/lolboxen/AndroidNIWebView", "Date": "2012-11-20T20:10:30Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.strategy.PhpPsiElement.getParent()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parent instanceof com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.strategy.AssignmentExpression) { final com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.strategy.AssignmentExpression assignment = ((com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.strategy.AssignmentExpression) (parent)); final com.intellij.psi.PsiElement candidate = assignment.getVariable(); if ((candidate instanceof com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.strategy.Variable) && (((com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.strategy.Variable) (candidate)).getName().equals(parameterName))) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9134/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.strategy.NullableParameterStrategy.java", "BodyUseAPI": [], "Fixed commit": "147979d56495b61838024f545675f499b13d9ed2", "Url": "https://api.github.com/repos/rentalhost/phpinspectionsea", "Date": "2017-04-14T13:56:10Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.strategy.PhpPsiElement.getParent()", "com.jetbrains.php.codeInsight.controlFlow.instructions.PhpAccessVariableInstruction.getAnchor()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.strategy.OpenapiTypesUtil.isFunctionReference(parent)) && (variable == (parent.getFirstChild()))) { holder.registerProblem(variable, com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.strategy.NullableParameterStrategy.message, ProblemHighlightType.GENERIC_ERROR_OR_WARNING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9134/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.strategy.NullableParameterStrategy.java", "BodyUseAPI": ["com.intellij.codeInspection.ProblemsHolder.registerProblem(com.kalessil.phpStorm.phpInspectionsEA.inspectors.semanticalAnalysis.npe.strategy.PhpPsiElement,java.lang.String,ProblemHighlightType.GENERIC_ERROR_OR_WARNING)"], "Fixed commit": "147979d56495b61838024f545675f499b13d9ed2", "Url": "https://api.github.com/repos/rentalhost/phpinspectionsea", "Date": "2017-04-14T13:56:10Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index < 0) || (index >= (list.size()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5244/buggy-version/src.main.java.ch.digitalmeat.grid.util.Table.java", "BodyUseAPI": [], "Fixed commit": "482a0af2cb29899aab41c921e82fd89915a5587e", "Url": "https://api.github.com/repos/tomvangreen/tilegrid", "Date": "2014-11-16T21:59:15Z"},
{"Line": "=>1443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openstack.atlas.adapter.zxtm.ZxtmAdapterImpl.arrayElementSearch(serviceStubs.getVirtualServerBinding().getVirtualServerNames(),java.lang.String)", "org.openstack.atlas.adapter.zxtm.ZxtmAdapterImpl.arrayElementSearch(serviceStubs.getVirtualServerBinding().getVirtualServerNames(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isSecureServer && isRedirectServer) { vsNames = new java.lang.String[2]; vsNames[0] = virtualRedirectServerName; vsNames[1] = virtualSecureServerName; }else if (isSecureServer) { vsNames = new java.lang.String[2]; vsNames[0] = virtualServerName; vsNames[1] = virtualSecureServerName; }else if (isRedirectServer) { vsNames = new java.lang.String[2]; vsNames[0] = virtualServerName; vsNames[1] = virtualRedirectServerName; }else { vsNames = new java.lang.String[1]; vsNames[0] = virtualServerName; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7792/buggy-version/adapter.zxtm-service.src.main.java.org.openstack.atlas.adapter.zxtm.ZxtmAdapterImpl.java", "BodyUseAPI": [], "Fixed commit": "693b4af9d28f70675f210f3ae4ebcb7b7ac3cbc4", "Url": "https://api.github.com/repos/rackerlabs/atlas-lb", "Date": "2014-05-28T21:27:17Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entry.getKey().equals(EDBConstants.MODEL_VERSION)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7777/buggy-version/components.edb.src.main.java.org.openengsb.core.edb.internal.JPADatabase.java", "BodyUseAPI": [], "Fixed commit": "f7cb924216c3b29a90cca2eff50883f32889402b", "Url": "https://api.github.com/repos/openengsb/openengsb-framework", "Date": "2012-03-11T19:28:41Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(FileUtils.TEMP_DIRECTORY.exists())) { return \"Temp folder is already purged!\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/674/buggy-version/src.main.java.br.com.francispimentel.filerenamer.controller.PurgeController.java", "BodyUseAPI": [], "Fixed commit": "5e682e58c7d771dd2dedf71bccdb404805ed93c5", "Url": "https://api.github.com/repos/francispimentel/file-renamer", "Date": "2017-07-23T16:21:27Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dancedeets.android.EventUIAdapter.translatePosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (translatedPosition < 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/766/buggy-version/app.src.main.java.com.dancedeets.android.EventListFragment.java", "BodyUseAPI": [], "Fixed commit": "15fae2cce3268a831653cdaf527a4af7ae5c8347", "Url": "https://api.github.com/repos/mikelambert/dancedeets-newdroid", "Date": "2015-10-08T04:02:27Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((walletTracker) == 1) && (!(player1.getBag().contains(wallet)))) { java.lang.System.out.println(\"You entered western part of Lem!\"); }else if ((walletTracker) == 1) { java.lang.System.out.println(\"You entered the western part of Lem! You see a man looking for his wallet. Maybe i should just avoid him\"); }else if (((walletTracker) == 0) && (player1.getBag().contains(wallet))) { java.lang.System.out.println(\"You entered the westen part of Lem! You see a man looking for his wallet. Maybe it's his wallet that i found?\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6833/buggy-version/GameWorldsOOP.src.LemGame.Game.java", "BodyUseAPI": ["LemGame.Player.getBag()", "player1.getBag().contains(LemGame.Prop)"], "Fixed commit": "f618e3d694d0c7eaf29fbe48787027e2257b3101", "Url": "https://api.github.com/repos/ZygoteDeLux/GameWorldOOP", "Date": "2017-11-02T16:46:21Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (diffH == 1) { if (c != null) { tmp += (diffH + \" \") + (c.getString(R.string.hour_ago)); }else { tmp += (diffH + \" \") + \"hour ago\"; } }else { if (c != null) { tmp += (diffH + \" \") + (c.getString(R.string.hours_ago)); }else { tmp += (diffH + \" \") + \"hours ago\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4460/buggy-version/app.src.main.java.com.zilche.zilche.Util.java", "BodyUseAPI": [], "Fixed commit": "f02c31e8926d8fd20ffd95c84bad8472ffcde55f", "Url": "https://api.github.com/repos/tan126/Zilche", "Date": "2015-08-20T06:48:22Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sk89q.craftbook.mech.Elevator.findDestination(com.sk89q.craftbook.mech.Elevator.Direction,org.bukkit.block.BlockFace,event.getBlock())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (destination == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1878/buggy-version/src.main.java.com.sk89q.craftbook.mech.Elevator.java", "BodyUseAPI": [], "Fixed commit": "7cc61f6b4137ee31a06f32815114b8c9d88919f4", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2014-04-19T00:24:11Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sk89q.craftbook.mech.Elevator.findDestination(com.sk89q.craftbook.mech.Elevator.Direction,org.bukkit.block.BlockFace,event.getClickedBlock())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (destination == null) { localPlayer.printError(\"mech.lift.no-destination\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1878/buggy-version/src.main.java.com.sk89q.craftbook.mech.Elevator.java", "BodyUseAPI": [], "Fixed commit": "7cc61f6b4137ee31a06f32815114b8c9d88919f4", "Url": "https://api.github.com/repos/sk89q/craftbook", "Date": "2014-04-19T00:24:11Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(PatientName.equals(r.getPatient()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/351/buggy-version/src.database.Database.java", "BodyUseAPI": [], "Fixed commit": "d8a98fd02c5ebae46a045a5880d97f65ea0a69b1", "Url": "https://api.github.com/repos/gifflarn/EIT060", "Date": "2015-03-03T11:09:25Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (executedMethod == null) { throw new com.devicehive.exceptions.HiveException((\"Unknown action requested: \" + action)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/919/buggy-version/src.main.java.com.devicehive.websockets.Endpoint.java", "BodyUseAPI": [], "Fixed commit": "786e275613c5996a78d63309c10e5392bdd07437", "Url": "https://api.github.com/repos/devicehive/devicehive-java", "Date": "2013-08-10T07:22:36Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.tuple.Pair<java.lang.Class, java.lang.String>, java.lang.reflect.Method>.get(org.apache.commons.lang3.tuple.ImmutablePair<java.lang.Class, java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (executedMethod == null) { for (final java.lang.reflect.Method method : handler.getClass().getMethods()) { if (method.isAnnotationPresent(com.devicehive.websockets.handlers.annotations.Action.class)) { if (method.getAnnotation(com.devicehive.websockets.handlers.annotations.Action.class).value().equals(action)) { executedMethod = method; methodsCache.put(key, method); break; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/919/buggy-version/src.main.java.com.devicehive.websockets.Endpoint.java", "BodyUseAPI": [], "Fixed commit": "786e275613c5996a78d63309c10e5392bdd07437", "Url": "https://api.github.com/repos/devicehive/devicehive-java", "Date": "2013-08-10T07:22:36Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (executedMethod.getAnnotation(com.devicehive.websockets.handlers.annotations.Action.class).needsAuth()) { handler.ensureAuthorised(request, session); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/919/buggy-version/src.main.java.com.devicehive.websockets.Endpoint.java", "BodyUseAPI": [], "Fixed commit": "786e275613c5996a78d63309c10e5392bdd07437", "Url": "https://api.github.com/repos/devicehive/devicehive-java", "Date": "2013-08-10T07:22:36Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.parent) != null) { if ((this.parent.getId()) != (message.getSender().getId())) { com.syncsys.Message messageToParent = new com.syncsys.Message(com.syncsys.enums.MessageType.NOTPARENT_ACKNOWLEDGE, this); this.links.get(parent.getId()).getOutQueueFor(this).add(messageToParent); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7877/buggy-version/src.com.syncsys.ProcessNode.java", "BodyUseAPI": [], "Fixed commit": "b2e56e51196ef507fcc313177f30e46c96363d3f", "Url": "https://api.github.com/repos/antonrogo1/SynchronousSystem", "Date": "2017-04-01T01:30:03Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scoreP < 0.0F) scoreP = 0.0F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1914/buggy-version/Learning2Rank.src.main.java.com.technion.ir.LanguageModels.AbsoluteDiscount.java", "BodyUseAPI": [], "Fixed commit": "78dbe27cb56cf160c5a11d57a19f3162aa299eaa", "Url": "https://api.github.com/repos/Eilons/Learning2Rank", "Date": "2015-12-28T19:01:35Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.dataLen) > 0) { listener.onError(new java.lang.String(data.data), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2196/buggy-version/src.main.java.lmo.tcp.bridge.client.BridgeClient.java", "BodyUseAPI": ["lmo.tcp.bridge.listener.BridgeClientListener.onError(java.lang.String,<nulltype>)"], "Fixed commit": "3edc7c56aa63b258b87f91285c11f43ff6cbf877", "Url": "https://api.github.com/repos/lmo0731/tcp-bridge", "Date": "2016-05-02T09:34:13Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.dataLen) > 0) { listener.onError(new java.lang.String(data.data), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2196/buggy-version/src.main.java.lmo.tcp.bridge.client.BridgeClient.java", "BodyUseAPI": ["lmo.tcp.bridge.listener.BridgeClientListener.onError(java.lang.String,<nulltype>)"], "Fixed commit": "3edc7c56aa63b258b87f91285c11f43ff6cbf877", "Url": "https://api.github.com/repos/lmo0731/tcp-bridge", "Date": "2016-05-02T09:34:13Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((splitOnFragement.length) > 1) { sb.append('#').append(splitOnFragement[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7062/buggy-version/csrfguard.src.main.java.org.owasp.csrfguard.http.InterceptRedirectResponse.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "406f9bbe05e423b3794cd0c13429c986147831b5", "Url": "https://api.github.com/repos/eduong/OWASP-CSRFGuard", "Date": "2016-09-12T17:59:15Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (this.needsCompleteSelflet) { this.selfletTemplate = it.polimi.elet.selflet.istantiator.SelfletIstantiatorThread.COMPLETE_TEMPLATE; }else { this.selfletTemplate = it.polimi.elet.selflet.istantiator.SelfletIstantiatorThread.DEFAULT_TEMPLATE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7981/buggy-version/src.main.java.it.polimi.elet.selflet.istantiator.SelfletIstantiatorThread.java", "BodyUseAPI": [], "Fixed commit": "8c51437d1fa7e486e409f4f8a10286f10cb2d420", "Url": "https://api.github.com/repos/ncalca/selflet-request-dispatcher", "Date": "2014-07-24T13:43:53Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getDamager()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9083/buggy-version/src.net.thecobix.openwsk.listener.FightListener.java", "BodyUseAPI": [], "Fixed commit": "8ecff95310dc38fe390cf4e7bd47f36c1bd497df", "Url": "https://api.github.com/repos/Exceptionflug/OpenWSK", "Date": "2016-02-15T13:01:30Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((diskCache) == null) { diskCache = new com.bumptech.glide.resize.cache.DiskCacheAdapter(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5013/buggy-version/library.src.com.bumptech.glide.resize.ImageManager.java", "BodyUseAPI": [], "Fixed commit": "fc7d4e9980c7530cf05628a750565ed897895beb", "Url": "https://api.github.com/repos/bumptech/glide", "Date": "2013-08-30T22:13:39Z"},
{"Line": "=>990", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((longpoll) == false) { getworkRefresh = 120000; longpoll = true; debug(\"Enabling long poll support\"); new java.lang.Thread(new com.diablominer.DiabloMiner.DiabloMiner.DeviceState.ExecutionState.GetWorkParser.getWorkAsync(), (\"DiabloMiner Long Poll for \" + (java.lang.Thread.currentThread().getName().replace(\"DiabloMiner \", \"\")))).start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/441/buggy-version/src.main.java.com.diablominer.DiabloMiner.DiabloMiner.java", "BodyUseAPI": [], "Fixed commit": "aa214265a6337636043cc4e3a658c215cd280c88", "Url": "https://api.github.com/repos/Diablo-D3/DiabloMiner", "Date": "2011-05-18T05:08:42Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((in.peek()) == (com.google.gson.stream.JsonToken.STRING)) { value.append(((\"\\\"\" + (in.nextString())) + \"\\\"\")); }else { readValueObject(value, in); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6801/buggy-version/restconf.sal-rest-connector.src.main.java.org.opendaylight.restconf.jersey.providers.JsonToPATCHBodyReader.java", "BodyUseAPI": ["com.google.gson.stream.JsonReader.nextString()", "java.lang.StringBuffer.append(((\"\\\"\" + (in.nextString())) + \"\\\"\"))", "org.opendaylight.restconf.jersey.providers.JsonToPATCHBodyReader.readValueObject(java.lang.StringBuffer,com.google.gson.stream.JsonReader)"], "Fixed commit": "2e25d21d8e2499d62730bb2722f2b19b325306cc", "Url": "https://api.github.com/repos/opendaylight/netconf", "Date": "2017-03-17T21:46:49Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((in.peek()) == (com.google.gson.stream.JsonToken.STRING)) { value.append(((\"\\\"\" + (in.nextString())) + \"\\\"\")); }else { readValueObject(value, in); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6801/buggy-version/restconf.sal-rest-connector.src.main.java.org.opendaylight.restconf.jersey.providers.JsonToPATCHBodyReader.java", "BodyUseAPI": ["com.google.gson.stream.JsonReader.nextString()", "java.lang.StringBuffer.append(((\"\\\"\" + (in.nextString())) + \"\\\"\"))", "org.opendaylight.restconf.jersey.providers.JsonToPATCHBodyReader.readValueObject(java.lang.StringBuffer,com.google.gson.stream.JsonReader)"], "Fixed commit": "2e25d21d8e2499d62730bb2722f2b19b325306cc", "Url": "https://api.github.com/repos/opendaylight/netconf", "Date": "2017-03-17T21:46:49Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((in.peek()) == (com.google.gson.stream.JsonToken.STRING)) { value.append(((\"\\\"\" + (in.nextString())) + \"\\\"\")); }else { readValueObject(value, in); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6801/buggy-version/restconf.sal-rest-connector.src.main.java.org.opendaylight.netconf.sal.rest.impl.JsonToPATCHBodyReader.java", "BodyUseAPI": ["org.opendaylight.netconf.sal.rest.impl.JsonToPATCHBodyReader.readValueObject(java.lang.StringBuffer,com.google.gson.stream.JsonReader)", "com.google.gson.stream.JsonReader.nextString()", "java.lang.StringBuffer.append(((\"\\\"\" + (in.nextString())) + \"\\\"\"))"], "Fixed commit": "2e25d21d8e2499d62730bb2722f2b19b325306cc", "Url": "https://api.github.com/repos/opendaylight/netconf", "Date": "2017-03-17T21:46:49Z"},
{"Line": "=>324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((in.peek()) == (com.google.gson.stream.JsonToken.STRING)) { value.append(((\"\\\"\" + (in.nextString())) + \"\\\"\")); }else { readValueObject(value, in); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6801/buggy-version/restconf.sal-rest-connector.src.main.java.org.opendaylight.netconf.sal.rest.impl.JsonToPATCHBodyReader.java", "BodyUseAPI": ["com.google.gson.stream.JsonReader.nextString()", "java.lang.StringBuffer.append(((\"\\\"\" + (in.nextString())) + \"\\\"\"))", "org.opendaylight.netconf.sal.rest.impl.JsonToPATCHBodyReader.readValueObject(java.lang.StringBuffer,com.google.gson.stream.JsonReader)"], "Fixed commit": "2e25d21d8e2499d62730bb2722f2b19b325306cc", "Url": "https://api.github.com/repos/opendaylight/netconf", "Date": "2017-03-17T21:46:49Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((gp.getChildAt(i)) instanceof android.view.ViewGroup) { boolean value = recurseGroup(((android.content.Context) (context)), ((android.view.ViewGroup) (gp.getChildAt(i)))); if (value) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6483/buggy-version/android.src.com.freshplanet.nativeExtensions.LocalNotificationService.java", "BodyUseAPI": ["android.view.ViewGroup.getChildAt(int)", "com.freshplanet.nativeExtensions.LocalNotificationService.recurseGroup(android.content.Context,((android.view.ViewGroup) (gp.getChildAt(i))))"], "Fixed commit": "87e174f050e3499da0be3710caece244ac5cf6a0", "Url": "https://api.github.com/repos/rozdonmobile/ANE-Push-Notification", "Date": "2013-03-11T22:43:54Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["model.area.TileCoordinate.getY()", "model.area.TileCoordinate.getY()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (targetY > chosenY) { return utilities.Angle.DOWN; }else if (targetX > chosenX) { return utilities.Angle.UP_RIGHT; }else if (targetX < chosenX) { return utilities.Angle.UP_LEFT; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7875/buggy-version/src.utilities.Angle.java", "BodyUseAPI": [], "Fixed commit": "38d529357ed0917e14b1422a858b36cf43be1fc5", "Url": "https://api.github.com/repos/Iteration-3/Code", "Date": "2015-04-19T20:46:02Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (head_m_atxy > 180.0) { head_m_atxy -= 360.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8524/buggy-version/org.usfirst.frc.team1719.robot.commands.MoveToPosition.java", "BodyUseAPI": [], "Fixed commit": "7ff6fda8b38641b1eb1548e5b4307620e4d46c0a", "Url": "https://api.github.com/repos/FRCTeam1719/2017Robot", "Date": "2017-01-28T20:16:09Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (head_m_atxy < (-180.0)) { head_m_atxy += 360.0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8524/buggy-version/org.usfirst.frc.team1719.robot.commands.MoveToPosition.java", "BodyUseAPI": [], "Fixed commit": "7ff6fda8b38641b1eb1548e5b4307620e4d46c0a", "Url": "https://api.github.com/repos/FRCTeam1719/2017Robot", "Date": "2017-01-28T20:16:09Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == (RESULT_CANCELED)) { if ((mSite) == null) { com.mercadopago.mptracker.MPTracker.getInstance().trackEvent(\"GUESSING_CARD\", \"CANCELED\", 2, mPublicKey, BuildConfig.VERSION_NAME, this); }else { com.mercadopago.mptracker.MPTracker.getInstance().trackEvent(\"GUESSING_CARD\", \"CANCELED\", 2, mPublicKey, mSite.getId(), BuildConfig.VERSION_NAME, this); } setResult(com.mercadopago.RESULT_CANCELED, data); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1346/buggy-version/sdk.src.main.java.com.mercadopago.CardVaultActivity.java", "BodyUseAPI": [], "Fixed commit": "da1b2b2f5beb322f7db872615afa3ac65f1d1416", "Url": "https://api.github.com/repos/mercadopago/px-android", "Date": "2016-08-04T17:13:48Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(values.contains(e))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4818/buggy-version/ThisIsBetter.app.src.main.java.s3.thisisbetter.adapters.EventInvitedArrayAdapter.java", "BodyUseAPI": [], "Fixed commit": "6e0e894b5c7a9078232d40dfabbe6f221f91fe41", "Url": "https://api.github.com/repos/chloehale/ThisIsBetter", "Date": "2016-04-08T23:09:42Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ed.tn.TemplateCatalogGenerics.getShapeTemplates(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (shapeTemplates == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/129/buggy-version/tetranominos.src.main.java.org.ed.tn.TemplateCatalogGenerics.java", "BodyUseAPI": [], "Fixed commit": "9d9658c7d2267489062b0a6f940d31fd91895cd0", "Url": "https://api.github.com/repos/eugeniodurand/Tetranominos", "Date": "2016-05-28T13:44:24Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prefix != null) { inputPrefix = prefix; }else { inputPrefix = ch.se.inf.ethz.jcd.batman.cli.CommandLineInterface.CLI_INPUT_PREFIX_NO_DISK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9118/buggy-version/src.ch.se.inf.ethz.jcd.batman.cli.CommandLineInterface.java", "BodyUseAPI": [], "Fixed commit": "54961d3ffeecc5fa8b8bdcb3acaa74eef352e0c7", "Url": "https://api.github.com/repos/groggi/eth-jcd", "Date": "2013-03-24T16:29:01Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Thread.getContextClassLoader()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (defaultClassLoader == null) defaultClassLoader = com.mchange.v2.naming.ReferenceableUtils.class.getClassLoader();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1927/buggy-version/src.main.java.com.mchange.v2.naming.ReferenceableUtils.java", "BodyUseAPI": [], "Fixed commit": "b06c30dcadb83dfbc6d74aed6c44a0555bf84759", "Url": "https://api.github.com/repos/sebasbaumh/mchange-commons-java", "Date": "2014-04-02T11:01:40Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (l == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6230/buggy-version/karma-common.src.main.java.edu.isi.karma.modeling.alignment.GraphBuilderTopK.java", "BodyUseAPI": [], "Fixed commit": "548f1d723a8f56bad905124218d401d10a27d744", "Url": "https://api.github.com/repos/usc-isi-i2/Web-Karma", "Date": "2015-06-18T19:51:53Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foodCount < 50) { double foodIncrProb = getConfiguration().getFoodAmountIncrese(); java.util.Random rng = new java.util.Random(); for (; foodCount > 0; foodCount--) { if (foodIncrProb > (rng.nextDouble())) { entities.add(new hu.unideb.inf.prt.petriDish.FoodEntity(rng.nextInt(((conf.getWorldSize()) + 1)), rng.nextInt(((conf.getWorldSize()) + 1)))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1628/buggy-version/src.main.java.hu.unideb.inf.prt.petriDish.GameWorld.java", "BodyUseAPI": [], "Fixed commit": "f146b2db13c517eb686ff74179d5b70e58ccdbf4", "Url": "https://api.github.com/repos/BFeri92/petriDish", "Date": "2014-05-24T18:25:09Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (faulty()) v = fault();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5523/buggy-version/exercise_1.src.exercise_3.Agreement.java", "BodyUseAPI": [], "Fixed commit": "e6c42767842a42927ff63159eee520c6f55a4868", "Url": "https://api.github.com/repos/ntimal/IN4150_Distributed_Algorithms", "Date": "2013-06-07T09:18:12Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (podcastManager.contains(newPodcast)) onPodcastLoaded(newPodcast); else podcastManager.load(newPodcast);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8973/buggy-version/src.net.alliknow.podcatcher.AddPodcastActivity.java", "BodyUseAPI": ["net.alliknow.podcatcher.AddPodcastActivity.load(net.alliknow.podcatcher.model.types.Podcast)", "net.alliknow.podcatcher.AddPodcastActivity.onPodcastLoaded(net.alliknow.podcatcher.model.types.Podcast)"], "Fixed commit": "0e123433696e408b43bcc5d7a92f2fcb2c889e8c", "Url": "https://api.github.com/repos/salema/PodCatcher-Deluxe-Android", "Date": "2013-08-23T13:11:40Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.dankito.appdownloader.downloader.ApkLeecherPlayStoreAppDownloader.parseAppDetails(net.dankito.appdownloader.app.AppInfo,org.jsoup.nodes.Document)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (downloadInfo.isFileChecksumSet()) { appToDownload.addDownloadUrl(downloadInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9181/buggy-version/AppDownloaderLib.src.main.java.net.dankito.appdownloader.downloader.ApkLeecherPlayStoreAppDownloader.java", "BodyUseAPI": ["net.dankito.appdownloader.app.AppInfo.addDownloadUrl(net.dankito.appdownloader.app.AppDownloadInfo)"], "Fixed commit": "75b68863be3de9ab7b7bcb10d9c4419bbca451fb", "Url": "https://api.github.com/repos/dankito/AppDownloader", "Date": "2016-11-20T15:37:22Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (persistentConnection) { exchange.terminateRequest(); exchange.addRequestWrapper(io.undertow.server.HttpTransferEncodingHandler.emptyStreamSourceChannelWrapper()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6109/buggy-version/core.src.main.java.io.undertow.server.HttpTransferEncodingHandler.java", "BodyUseAPI": [], "Fixed commit": "5c2e15e97ef3db197e26beafc665b6d566620d2d", "Url": "https://api.github.com/repos/dmlloyd/undertow", "Date": "2012-08-08T06:26:02Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (persistentConnection) { exchange.addResponseWrapper(io.undertow.server.HttpTransferEncodingHandler.responseWrapper(persistentConnection)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6109/buggy-version/core.src.main.java.io.undertow.server.HttpTransferEncodingHandler.java", "BodyUseAPI": ["io.undertow.server.HttpServerExchange.addResponseWrapper(io.undertow.server.ChannelWrapper<org.xnio.channels.StreamSinkChannel>)", "io.undertow.server.HttpTransferEncodingHandler.responseWrapper(boolean)"], "Fixed commit": "5c2e15e97ef3db197e26beafc665b6d566620d2d", "Url": "https://api.github.com/repos/dmlloyd/undertow", "Date": "2012-08-08T06:26:02Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Config.DEBUG) { debugRenderer = new com.badlogic.gdx.physics.box2d.Box2DDebugRenderer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7388/buggy-version/core.src.com.martinimoe.projektkarpador.ProjektKarpador.java", "BodyUseAPI": [], "Fixed commit": "6bb76e942a16c17b1f79bbef09aa4a24c65db0e6", "Url": "https://api.github.com/repos/MartiniMoe/ProjektKarpador", "Date": "2014-10-09T19:39:11Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.team3637.controller.analytics.TeamService.getTeamByNumber(match.getTeam())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (team != null) designations += (designationGenerator.generateDesignation(team.getTeam(), team.getAvgscore(), tags)) + \"\\n\"; else designations += (designationGenerator.generateDesignation(match.getTeam(), (-1), tags)) + \"\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1720/buggy-version/src.com.team3637.controller.analytics.AnalyticsController.java", "BodyUseAPI": ["com.team3637.model.Team.getAvgscore()", "com.team3637.analytics.TagDesignationGenerator.generateDesignation(team.getTeam(),team.getAvgscore(),java.util.List<com.team3637.model.Tag>)", "com.team3637.model.Team.getTeam()"], "Fixed commit": "30238a2f272ab9d732474181ce4d720b03f7315f", "Url": "https://api.github.com/repos/FRC-3637-Daleks/ScoutingApp", "Date": "2016-03-17T04:13:53Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getExternalId()) != null) && (getExternalId().equals(\"\"))) { builder.deleteExternalId(); }else { builder.updateExternalId(getExternalId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4884/buggy-version/src.main.java.org.osiam.addons.administration.model.command.UpdateGroupCommand.java", "BodyUseAPI": [], "Fixed commit": "cd816a4126e218e17611fd3ec112686d403e0bb3", "Url": "https://api.github.com/repos/osiam/addon-administration", "Date": "2014-08-28T08:51:40Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mData.get(position).getRequestDeliverBy()) != null) { java.lang.String s = \"\" + (android.text.format.DateUtils.getRelativeTimeSpanString(mData.get(position).getRequestDeliverBy().getTime(), java.lang.System.currentTimeMillis(), 0)); s = s.replace(\"minute\", \"min\"); holder.deliveredBy.setText(s); }else { holder.deliveredBy.setText(\"N/A\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5331/buggy-version/artisell_ecommerce.src.main.java.com.coep.puneet.artisell_ecommerce.UI.Adapter.RequestAdapter.java", "BodyUseAPI": ["java.util.List<com.coep.puneet.artisell_ecommerce.ParseObjects.Request>.get(int)", "mData.get(position).getRequestDeliverBy().getTime()", "mData.get(position).getRequestDeliverBy()", "android.text.format.DateUtils.getRelativeTimeSpanString(mData.get(position).getRequestDeliverBy().getTime(),long,int)"], "Fixed commit": "03440a32443fc9d1e55e708d7bba580f6c5cab85", "Url": "https://api.github.com/repos/PuneetKohli/InOut_Artisell", "Date": "2015-11-01T11:09:13Z"},
{"Line": "=>515", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (url == null) url = listenUrl; else { int pos; java.lang.String port; if ((pos = listenUrl.lastIndexOf(\":\")) != (-1)) { port = listenUrl.substring(pos); }else { port = \"2424\"; } url += \":\" + port; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2227/buggy-version/distributed.src.main.java.com.orientechnologies.orient.server.hazelcast.OHazelcastPlugin.java", "BodyUseAPI": [], "Fixed commit": "8b82b6e0f756fff13c41b05c74956c51911b29c2", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-09-27T17:33:27Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mp) != null) { mp.stop(); mp.reset(); mp.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3769/buggy-version/app.src.main.java.com.aptitudes.jay.jayandroidassignment.JayResultActivity.java", "BodyUseAPI": [], "Fixed commit": "a20e9fc2195552b3662fbda3823156e1c6ba74f9", "Url": "https://api.github.com/repos/jaykumarH/JayAndroidAssignment", "Date": "2016-08-16T15:04:07Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mp) != null) { mp.stop(); mp.reset(); mp.release(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3769/buggy-version/app.src.main.java.com.aptitudes.jay.jayandroidassignment.JayGameActivity.java", "BodyUseAPI": [], "Fixed commit": "a20e9fc2195552b3662fbda3823156e1c6ba74f9", "Url": "https://api.github.com/repos/jaykumarH/JayAndroidAssignment", "Date": "2016-08-16T15:04:07Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jehutyno.hiraganaedittext.HiraganaEditText.1.toHiragana(s.toString())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((japText.length()) > 0) setSelection(((((position) + (japText.length())) - (sizeBefore)) + ((japText.length()) < (sizeBefore) ? 1 : 0)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2874/buggy-version/hiraganaedittext.src.main.java.com.jehutyno.hiraganaedittext.HiraganaEditText.java", "BodyUseAPI": ["java.lang.String.length()", "com.jehutyno.hiraganaedittext.HiraganaEditText.1.setSelection(int)", "java.lang.String.length()"], "Fixed commit": "1b1f0562ee47159fa52da8108647f87920f8c972", "Url": "https://api.github.com/repos/jehutyno/hiraganaedittext", "Date": "2016-09-15T10:45:53Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.corpus.survey.SurveyActivity.getSystemService(Context.INPUT_METHOD_SERVICE)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((null != inputManager) && (null != (this.getCurrentFocus()))) { inputManager.hideSoftInputFromWindow(this.getCurrentFocus().getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5772/buggy-version/app.src.main.java.com.corpus.survey.SurveyActivity.java", "BodyUseAPI": ["android.view.inputmethod.InputMethodManager.hideSoftInputFromWindow(this.getCurrentFocus().getWindowToken(),InputMethodManager.HIDE_NOT_ALWAYS)"], "Fixed commit": "38d2cb12266b2d76d28b0a40032544452c33d7a0", "Url": "https://api.github.com/repos/devadastv/Survey", "Date": "2016-06-22T10:00:32Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(worldObj.isRemote)) { if (te != null) { valveX = te.xCoord; valveY = te.yCoord; valveZ = te.zCoord; }else { valveX = 0; valveY = 0; valveZ = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8560/buggy-version/src.pneumaticCraft.common.tileentity.TileEntityPressureChamberWall.java", "BodyUseAPI": [], "Fixed commit": "a16093aa5b28de5d239fdfdb69c50eb46655c1a7", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-07-13T20:57:23Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.getGeneratedKeys()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (resultSet.next()) { id = ((I) (resultSet.getObject(1))); }else if (orUpdate) { id = element.getElementId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2181/buggy-version/server.src.main.java.io.craigmiller160.orgbuilder.server.data.jdbc.AbstractJdbcDao.java", "BodyUseAPI": ["java.sql.ResultSet.getObject(int)"], "Fixed commit": "a05fbf93cc13549a63b1e2a68666ce00a915afa6", "Url": "https://api.github.com/repos/craigmiller160/OrgBuilder", "Date": "2017-06-03T22:11:51Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.floor(((panel.getElement().getClientWidth()) / columnWidthInPixels))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (columnLimit <= 0) { columnLimit = org.activityinfo.ui.client.pageView.formClass.TableView.DEFAULT_MAX_COLUMN_COUNT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3632/buggy-version/server.src.main.java.org.activityinfo.ui.client.pageView.formClass.TableView.java", "BodyUseAPI": [], "Fixed commit": "a770569d8c9e6723772c85d4d801618020244c3f", "Url": "https://api.github.com/repos/bedatadriven/activityinfo", "Date": "2014-03-20T15:44:23Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.getType()) == 0) { return scaleOp.filter(input, new java.awt.image.BufferedImage(newWidth, newHeight, 5)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3136/buggy-version/ImageDN.java", "BodyUseAPI": ["java.awt.image.AffineTransformOp.filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)"], "Fixed commit": "caf05b41cf327f5a262f3b16cdb82425c0e7b0a4", "Url": "https://api.github.com/repos/moog500/FinalProjJavaSem1", "Date": "2016-01-19T00:58:27Z"},
{"Line": "=>1160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (this.taxonomy.roots.contains(newchild)) this.taxonomy.roots.remove(newchild);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8923/buggy-version/org.opentreeoflife.smasher.Taxon.java", "BodyUseAPI": ["this.taxonomy.roots.remove(org.opentreeoflife.smasher.Taxon)"], "Fixed commit": "8af840efb19a6ba79ecaa85c313ad3949fcb7f78", "Url": "https://api.github.com/repos/OpenTreeOfLife/reference-taxonomy", "Date": "2014-09-26T15:04:33Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (str == null) { return str; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3698/buggy-version/specrunner-core.src.main.java.org.specrunner.util.string.core.StringNormalizerDefault.java", "BodyUseAPI": [], "Fixed commit": "3938d81a6e255fc8fe7393cb9d90b8559d57e717", "Url": "https://api.github.com/repos/thiagolvlsantos/specrunner", "Date": "2015-10-06T12:07:49Z"},
{"Line": "=>922", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, java.util.List<geomatrix.business.models.binary.HorizontalSegment>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (myHorizontalEdgesAtY != null) { for (geomatrix.business.models.binary.HorizontalSegment myEdge : myHorizontalEdgesAtY) { if (otherEdge.intersects(myEdge)) { intersectionPoints.add(myEdge.getIntersection(otherEdge)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4966/buggy-version/src.geomatrix.business.models.binary.geomatrix.Geomatrix.java", "BodyUseAPI": [], "Fixed commit": "631cbf47785f3cf6b7f9ea359d87a4884dbf35af", "Url": "https://api.github.com/repos/nmamano/geomatrix", "Date": "2013-06-21T23:37:16Z"},
{"Line": "=>898", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Integer, java.util.List<geomatrix.business.models.binary.HorizontalSegment>>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (otherHorizontalEdgesAtY != null) { for (geomatrix.business.models.binary.HorizontalSegment otherEdge : otherHorizontalEdgesAtY) { if (myEdge.intersects(otherEdge)) { intersectionPoints.add(myEdge.getIntersection(otherEdge)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4966/buggy-version/src.geomatrix.business.models.binary.geomatrix.Geomatrix.java", "BodyUseAPI": [], "Fixed commit": "631cbf47785f3cf6b7f9ea359d87a4884dbf35af", "Url": "https://api.github.com/repos/nmamano/geomatrix", "Date": "2013-06-21T23:37:16Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (br.com.animvs.koalory.Configurations.DEBUG_COLOR_ALWAYS_FILLED) return 1.0F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7928/buggy-version/codigo.core.src.br.com.animvs.koalory.controller.GameController.java", "BodyUseAPI": [], "Fixed commit": "598ac4de7ec6fd9e0209c985eb8da6f77770eeb2", "Url": "https://api.github.com/repos/animvs/koalory", "Date": "2016-02-10T21:46:43Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["au.edu.uq.cmm.eccles.UserDetails.getHumanReadableName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (hrName == null) { hrName = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4707/buggy-version/eccles.src.main.java.au.edu.uq.cmm.eccles.EcclesUserDetailsManager.java", "BodyUseAPI": [], "Fixed commit": "d852c3f7c8f15abd1ef5d5c4d0545eade1edb274", "Url": "https://api.github.com/repos/UQ-CMM-Mirage/CMM-data-grabber", "Date": "2013-05-31T05:31:58Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["au.edu.uq.cmm.eccles.UserDetails.getOrgName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (orgName == null) { orgName = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4707/buggy-version/eccles.src.main.java.au.edu.uq.cmm.eccles.EcclesUserDetailsManager.java", "BodyUseAPI": [], "Fixed commit": "d852c3f7c8f15abd1ef5d5c4d0545eade1edb274", "Url": "https://api.github.com/repos/UQ-CMM-Mirage/CMM-data-grabber", "Date": "2013-05-31T05:31:58Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((compareObject.latitude) == 0) && ((compareObject.longitude) == 0)) distanceCompareObject = java.lang.Double.MAX_VALUE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1920/buggy-version/GQ_Android.src.edu.bonn.mobilegaming.geoquest.gameaccess.GameItem.java", "BodyUseAPI": [], "Fixed commit": "62cd537911c4b0065c24cb93cf2edaa7fc7e5a8c", "Url": "https://api.github.com/repos/geoquest/android", "Date": "2013-03-30T15:42:36Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((entityListeners == null) && ((entityClass.getSuperclass()) != null)) { entityListeners = entityClass.getSuperclass().getAnnotation(javax.persistence.EntityListeners.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7737/buggy-version/src.jpa-engine.core.src.main.java.com.impetus.kundera.metadata.processor.EntityListenersProcessor.java", "BodyUseAPI": ["java.lang.Class<? super ?>.getAnnotation(java.lang.Class)", "java.lang.Class<?>.getSuperclass()"], "Fixed commit": "aa8e43ce05b80230ea8fe1ca491898bf2a4ec69b", "Url": "https://api.github.com/repos/Impetus/Kundera", "Date": "2017-01-03T07:06:05Z"},
{"Line": "=>811", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.capnproto.ListPointer.elementCount(long)", "org.capnproto.WireHelpers.followBuilderFars(long,int,org.capnproto.SegmentBuilder)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((size == 0) || ((resolved.segment.buffer.get(((((resolved.ptr) * (Constants.BYTES_PER_WORD)) + size) - 1))) != 0)) { throw new org.capnproto.DecodeException(\"Text blob missing NUL terminator.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8680/buggy-version/runtime.src.main.java.org.capnproto.WireHelpers.java", "BodyUseAPI": [], "Fixed commit": "2b1d5c201eb45677e6053cce9c2e4baee3e0ff07", "Url": "https://api.github.com/repos/pahjbo/capnproto-java", "Date": "2015-03-09T00:09:56Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (view == null) { return super.onKeyDown(keyCode, event); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2628/buggy-version/serenity-app.src.main.java.us.nineworlds.serenity.ui.browser.tv.seasons.TVShowSeasonBrowserActivity.java", "BodyUseAPI": [], "Fixed commit": "207232f29a3e56894fab3d4993c883c2dd0faadb", "Url": "https://api.github.com/repos/kingargyle/serenity-android", "Date": "2013-10-06T18:43:45Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ultra) > 0) { builder.append(\"Ultra: \").append(NuclearThrone.ULTRAS.get(((character) - 1)).get(((ultra) - 1))).append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3233/buggy-version/src.main.java.com.ugcleague.ops.domain.document.NuclearRun.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "NuclearThrone.ULTRAS.get(((character) - 1)).get(int)", "java.lang.StringBuilder.append(NuclearThrone.ULTRAS.get(((character) - 1)).get(((ultra) - 1)))"], "Fixed commit": "6dc7e4c7ab1c5f4ff58f0516abb9711e1b49e589", "Url": "https://api.github.com/repos/quanticc/ugc-bot-redux", "Date": "2016-05-23T06:24:37Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((crown) > 0) { builder.append(\"Crown: \").append(NuclearThrone.CROWNS.get(((crown) - 1))).append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3233/buggy-version/src.main.java.com.ugcleague.ops.domain.document.NuclearRun.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(NuclearThrone.CROWNS.get(((crown) - 1)))", "NuclearThrone.CROWNS.get(int)"], "Fixed commit": "6dc7e4c7ab1c5f4ff58f0516abb9711e1b49e589", "Url": "https://api.github.com/repos/quanticc/ugc-bot-redux", "Date": "2016-05-23T06:24:37Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cachedAttributes.keySet().contains(name))) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7426/buggy-version/faims-android-app.src.au.org.intersect.faims.android.beanshell.AttributeHelper.java", "BodyUseAPI": [], "Fixed commit": "2dfb3c916e6e5a1d24cb06e0e950af2d6d95e8e0", "Url": "https://api.github.com/repos/IntersectAustralia/faims-android", "Date": "2015-05-22T00:12:52Z"},
{"Line": "=>1321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrentToken().getText().compareTo(\"{\")) == 0) level++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3695/buggy-version/src.com.ftl.derived.FetalParser.java", "BodyUseAPI": [], "Fixed commit": "cbca01b88aea2813e8c07d8f3bdf8ccfcbba7675", "Url": "https://api.github.com/repos/tmarcoe/Fetal", "Date": "2017-10-14T00:56:11Z"},
{"Line": "=>1324", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((level == 0) || ((getCurrentToken().getText().compareTo(\"<EOF>\")) == 0)) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3695/buggy-version/src.com.ftl.derived.FetalParser.java", "BodyUseAPI": [], "Fixed commit": "cbca01b88aea2813e8c07d8f3bdf8ccfcbba7675", "Url": "https://api.github.com/repos/tmarcoe/Fetal", "Date": "2017-10-14T00:56:11Z"},
{"Line": "=>361", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(pathsSet.contains(\"/usr/local/bin\"))) { paths = \"/usr/local/bin:\" + paths; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5461/buggy-version/src.lavit.Env.java", "BodyUseAPI": [], "Fixed commit": "0b33da23a35de96d5274542473f205ade65eec20", "Url": "https://api.github.com/repos/lmntal/lavit", "Date": "2015-10-31T14:15:18Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<java.lang.Integer>.size()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tower == (fromTower)) && (j == 1)) { g.setColor(SELECTED_DISK_COLOR); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1332/buggy-version/src.edu.ucsb.cs56.projects.games.towers_of_hanoi.utility.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "0a3f183052e6abe9bdc96cbf31e8abe2e7feed76", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-towers-of-hanoi", "Date": "2016-11-08T05:37:46Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toUpperCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ret.length()) == 4) { ret = \"00\" + ret; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3160/buggy-version/src.me.hyunbin.colors.ColorParse.java", "BodyUseAPI": [], "Fixed commit": "900589c03ff2b272657b465433f937e91c87aa2c", "Url": "https://api.github.com/repos/hyunbin/MaterialColors", "Date": "2015-06-21T23:34:04Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toUpperCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((ret.length()) == 4) { ret = \"00\" + ret; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3160/buggy-version/src.me.hyunbin.colors.ColorParse.java", "BodyUseAPI": [], "Fixed commit": "900589c03ff2b272657b465433f937e91c87aa2c", "Url": "https://api.github.com/repos/hyunbin/MaterialColors", "Date": "2015-06-21T23:34:04Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key.toString().trim().isEmpty()) { if ((g.getRoundedDistance()) >= maxDistance) filteredResult.add(g); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3028/buggy-version/GarageSaleF.src.nz.co.gsf.garagesale.GarageSaleFilter.java", "BodyUseAPI": [], "Fixed commit": "7420e2b2bf029ddd490f1a95f671af70f1af45a9", "Url": "https://api.github.com/repos/renatomen/nz.co.gsf", "Date": "2014-06-11T02:28:28Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (attacker.isDead()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/797/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.skill.BloodPaint.java", "BodyUseAPI": [], "Fixed commit": "9a003446300af949e3560a5ab5058f2472f8e6fb", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-01-30T16:00:31Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((shortDescriptionFragment.getVisibility()) == (android.view.View.GONE)) { shortDescriptionFragment.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7841/buggy-version/app.src.main.java.com.byobdev.kamal.InitiativesActivity.java", "BodyUseAPI": ["android.widget.FrameLayout.setVisibility(View.VISIBLE)"], "Fixed commit": "9301dbb2b2e0d5322111c70e32b2e3f9fd04b2a1", "Url": "https://api.github.com/repos/archidemus/kamal", "Date": "2017-08-07T20:57:30Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((typeSpinner.getSelectedItemPosition()) > (typeSpinner.getCount())) { spinnerContent = getString(R.string.other_type); }else { spinnerContent = typeSpinner.getSelectedItem().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4031/buggy-version/ShoppingList.app.src.main.java.com.example.alex.shoppinglist.MainActivity.java", "BodyUseAPI": ["android.widget.Spinner.getSelectedItem()", "typeSpinner.getSelectedItem().toString()"], "Fixed commit": "75252935856bde1ecd260b4b1782d771f7f75c61", "Url": "https://api.github.com/repos/AleksandarHr/MobileDev", "Date": "2017-05-05T22:04:35Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.svnavigatoru600.domain.users.User.getAuthorities()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (currentAuthorities != null) { authoritiesChanged = !(com.svnavigatoru600.service.util.CheckboxUtils.areSame(com.svnavigatoru600.service.util.AuthorityUtils.getArrayOfCheckIndicators(checkedAuthorities), com.svnavigatoru600.service.util.AuthorityUtils.getArrayOfCheckIndicators(currentAuthorities))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7995/buggy-version/SVNavigatoru-Maven.src.main.java.com.svnavigatoru600.domain.users.User.java", "BodyUseAPI": ["com.svnavigatoru600.service.util.AuthorityUtils.getArrayOfCheckIndicators(java.util.Collection<org.springframework.security.core.GrantedAuthority>)", "com.svnavigatoru600.service.util.CheckboxUtils.areSame(com.svnavigatoru600.service.util.AuthorityUtils.getArrayOfCheckIndicators(checkedAuthorities),com.svnavigatoru600.service.util.AuthorityUtils.getArrayOfCheckIndicators(currentAuthorities))"], "Fixed commit": "056be31e5437bc24ab80f68ccb45f4819a77d693", "Url": "https://api.github.com/repos/tomas-skalicky/Spring-SVNavigatoru600", "Date": "2013-01-06T00:53:58Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONArray.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(\"0\".equals(data.get(\"FloodArea\")))) { java.lang.String name = ((java.lang.String) (data.get(\"AreaName\"))); if (map.containsKey(name)) { map.put(name, ((map.get(name)) + 1)); }else { map.put(name, 1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3799/buggy-version/src.main.java.com.adc.disasterforecast.task.RainfallTask.java", "BodyUseAPI": ["org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "0c1753d691cf68ce9a6de9a691d82df7b94f1106", "Url": "https://api.github.com/repos/Victor-ZHC/weathervisualization", "Date": "2017-12-16T10:01:20Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (provFactory != null) { prov = provFactory.createExchangeRateProvider(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1809/buggy-version/money-api.provider.src.main.java.javax.money.provider.Monetary.java", "BodyUseAPI": ["javax.money.convert.spi.ExchangeRateProviderDefaultFactorySpi.createExchangeRateProvider(javax.money.convert.ExchangeRateType)"], "Fixed commit": "a23d222c7fdffd9690ddbae0fd2c129e2d361678", "Url": "https://api.github.com/repos/JavaMoney/javamoney", "Date": "2013-02-23T19:47:05Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (provFactory != null) { prov = provFactory.createCurrencyConverter(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1809/buggy-version/money-api.provider.src.main.java.javax.money.provider.Monetary.java", "BodyUseAPI": ["javax.money.convert.spi.CurrencyConverterDefaultFactorySpi.createCurrencyConverter(javax.money.convert.ExchangeRateType)"], "Fixed commit": "a23d222c7fdffd9690ddbae0fd2c129e2d361678", "Url": "https://api.github.com/repos/JavaMoney/javamoney", "Date": "2013-02-23T19:47:05Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (writeConcern.isAcknowledged()) { throw e; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9158/buggy-version/driver-core.src.main.com.mongodb.connection.WriteProtocol.java", "BodyUseAPI": [], "Fixed commit": "e21c375dc9d7fb4f2957d65311d04686e82a7aff", "Url": "https://api.github.com/repos/matfur92/mongo-java-driver", "Date": "2015-09-16T15:10:37Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((note.getProject()) == null) || (note.getRISDokumentnummer().equals(\"\"))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/383/buggy-version/RPMS.src.beans.NoteManagerBean.java", "BodyUseAPI": [], "Fixed commit": "c85031117eb14cadaf2b58d92a55b2dca08527a9", "Url": "https://api.github.com/repos/serlachner/sw14_free_12", "Date": "2014-06-15T12:31:00Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (paletteCallback != null) { paletteCallback.onFailure(error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1593/buggy-version/app.src.main.java.cs446.mezzo.art.AlbumArtManager.java", "BodyUseAPI": ["cs446.mezzo.data.Callback<android.support.v7.graphics.Palette>.onFailure(java.lang.Exception)"], "Fixed commit": "3ca22e3a99ce4ba4565d5cd7eaf1fb965cb6bc3f", "Url": "https://api.github.com/repos/cckroets/Mezzo", "Date": "2015-03-01T19:42:32Z"},
{"Line": "=>509", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((d.getUnitNumber()) != null) && ((d.getUnitUnit()) != null)) d.addFlexibleField(\"Amount\", (((d.getUnitNumber()) + \" \") + (d.getUnitUnit()))); else if ((d.getUnitNumber()) != null) d.addFlexibleField(\"Amount\", ((d.getUnitNumber()) + \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1324/buggy-version/de.bund.bfr.knime.openkrise.db.src.de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.TraceImporter.java", "BodyUseAPI": ["de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.Delivery.addFlexibleField(java.lang.String,(((d.getUnitNumber()) + \" \") + (d.getUnitUnit())))", "de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.Delivery.getUnitNumber()", "de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.Delivery.addFlexibleField(java.lang.String,((d.getUnitNumber()) + \"\"))", "de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.Delivery.getUnitNumber()", "de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.Delivery.getUnitUnit()", "de.bund.bfr.knime.openkrise.db.imports.custom.bfrnewformat.Delivery.getUnitNumber()"], "Fixed commit": "29783688f8aa458e71b9edcd8103d8a6e6d59206", "Url": "https://api.github.com/repos/SiLeBAT/BfROpenLab", "Date": "2017-06-20T10:10:12Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (((parsedDates != null) || (dateCriteria != null)) && isEventStatusProvided) { seedu.todo.controllers.concerns.Renderer.renderDisambiguation(seedu.todo.controllers.ListController.LIST_DATE_SYNTAX, seedu.todo.controllers.ListController.MESSAGE_DATE_CONFLICT); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/648/buggy-version/src.main.java.seedu.todo.controllers.ListController.java", "BodyUseAPI": [], "Fixed commit": "ee2b661ed1f858f2e07c0bfec68bfe241580e52f", "Url": "https://api.github.com/repos/ChaseTiong/main", "Date": "2016-11-05T11:43:14Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.lorenzoingrilli.icarus.impl.SessionPrincipalResolver._getUserPrincipal(javax.servlet.http.HttpServletRequest)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (principal != null) { it.lorenzoingrilli.icarus.impl.SessionPrincipalResolver.logger.debug((\"Unset principal \" + (principal.getName()))); session.removeAttribute(it.lorenzoingrilli.icarus.impl.SessionPrincipalResolver.PRINCIPAL_SESSION_ATTRIBUTE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7361/buggy-version/src.main.java.it.lorenzoingrilli.icarus.impl.SessionPrincipalResolver.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)", "java.security.Principal.getName()"], "Fixed commit": "1898ff427128c7439414cfdcc0d8502617cfc735", "Url": "https://api.github.com/repos/lorenzoingrilli/icarus", "Date": "2017-10-04T01:16:11Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.simple.JSONArray.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((event.get(\"RepeatFrequency\")) == null) { frequency = \"\"; }else { frequency = event.get(\"RepeatFrequency\").toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2379/buggy-version/src.main.jarvas.Storage.java", "BodyUseAPI": ["event.get(\"RepeatFrequency\").toString()", "org.json.simple.JSONObject.get(java.lang.String)"], "Fixed commit": "f4df52ac144f0d356fc1f8cd4e985f81c7c7f58b", "Url": "https://api.github.com/repos/cs2103aug2015-f09-1j/main", "Date": "2015-11-06T00:45:55Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getStartDate()) == null) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2379/buggy-version/src.main.jarvas.TaskToDo.java", "BodyUseAPI": [], "Fixed commit": "f4df52ac144f0d356fc1f8cd4e985f81c7c7f58b", "Url": "https://api.github.com/repos/cs2103aug2015-f09-1j/main", "Date": "2015-11-06T00:45:55Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sdPath.exists())) { sdPath.mkdirs(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6044/buggy-version/core.src.in.srain.cube.cache.DiskFileUtils.java", "BodyUseAPI": ["java.io.File.mkdirs()"], "Fixed commit": "7272daa88c2f555932e7623566d475a14581c27e", "Url": "https://api.github.com/repos/liaohuqiu/cube-sdk", "Date": "2015-03-07T05:54:13Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.rapla.entities.configuration.Preferences.getEntry(RaplaComponent.PLUGIN_CONFIG)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (pluginConfig != null) { pluginClassConfig = pluginConfig.find(\"class\", className); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5831/buggy-version/src.org.rapla.gui.DefaultPluginOption.java", "BodyUseAPI": ["org.rapla.entities.configuration.RaplaConfiguration.find(java.lang.String,java.lang.String)"], "Fixed commit": "5823ea8cd6c230d0ba507bdd0b72a911960c2855", "Url": "https://api.github.com/repos/rapla/rapla", "Date": "2015-02-04T19:31:22Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (indexLinkedBroker != (-1)) { it.trade.android.sdk.TradeItSDK.getLinkedBrokerManager().getLinkedBrokers().remove(indexLinkedBroker); it.trade.android.sdk.TradeItSDK.getLinkedBrokerManager().getLinkedBrokers().add(indexLinkedBroker, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/394/buggy-version/tradeit-android-sdk.src.main.java.it.trade.android.sdk.model.TradeItLinkedBrokerParcelable.java", "BodyUseAPI": [], "Fixed commit": "56cce20431bcc2ed7bbf680a476b1235953718c5", "Url": "https://api.github.com/repos/tradingticket/AndroidSDK", "Date": "2017-08-29T15:14:26Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((p.getOpenInventory().getTopInventory()) != null) { p.closeInventory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2601/buggy-version/src.org.fatecrafters.plugins.listeners.PlayerListener.java", "BodyUseAPI": ["org.bukkit.entity.Player.closeInventory()"], "Fixed commit": "a350f673adbda80996e4e1583bea133e43fa1979", "Url": "https://api.github.com/repos/slayr288/RealisticBackpacks", "Date": "2013-11-21T21:20:59Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((acc_lev >= 4) && (acc_lev <= 7)) { acc_lev = acc_lev - 3; int k = java.lang.Integer.parseInt(tempYear.substring(2, 3)); if (k == acc_lev) { yearTutor = true; }else { } }else { yearTutor = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/649/buggy-version/ProjectFolder.src.java.Models.StaffClassModel.java", "BodyUseAPI": [], "Fixed commit": "76eb4e729e2b134bc96e2da5ed10367617d1ffe7", "Url": "https://api.github.com/repos/mmalone136/AgileWebSpace", "Date": "2016-03-18T14:54:06Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jenkins == null) { return config; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/176/buggy-version/src.main.java.com.ribose.jenkins.plugin.awscodecommittrigger.factories.SQSFactoryImpl.java", "BodyUseAPI": [], "Fixed commit": "30010b03c44df806c08776e1102d8a3fc80c63e9", "Url": "https://api.github.com/repos/phuonghuynh/aws-codecommit-trigger-plugin", "Date": "2017-07-17T16:02:37Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jenkins == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/176/buggy-version/src.main.java.com.ribose.jenkins.plugin.awscodecommittrigger.matchers.model.ScmJobEventTriggerMatcher.java", "BodyUseAPI": [], "Fixed commit": "30010b03c44df806c08776e1102d8a3fc80c63e9", "Url": "https://api.github.com/repos/phuonghuynh/aws-codecommit-trigger-plugin", "Date": "2017-07-17T16:02:37Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jenkins.model.Jenkins.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jenkins == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/176/buggy-version/src.main.java.com.ribose.jenkins.plugin.awscodecommittrigger.matchers.model.ScmJobEventTriggerMatcher.java", "BodyUseAPI": [], "Fixed commit": "30010b03c44df806c08776e1102d8a3fc80c63e9", "Url": "https://api.github.com/repos/phuonghuynh/aws-codecommit-trigger-plugin", "Date": "2017-07-17T16:02:37Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (null != intent) { java.lang.String action = intent.getAction(); com.zhaoyan.common.util.Log.d(com.zhaoyan.communication.FileTransferService.TAG, (\"onStartCommand: action = \" + action)); if (com.zhaoyan.communication.FileTransferService.ACTION_CANCEL_SEND.equals(action)) { handleCancelSendRequest(intent); }else if (com.zhaoyan.communication.FileTransferService.ACTION_CANCEL_RECEIVE.equals(action)) { handleCancelReceiveRequest(intent); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5673/buggy-version/src.com.zhaoyan.communication.FileTransferService.java", "BodyUseAPI": ["android.content.Intent.getAction()", "com.zhaoyan.communication.FileTransferService.handleCancelReceiveRequest(android.content.Intent)", "com.zhaoyan.communication.FileTransferService.handleCancelSendRequest(android.content.Intent)"], "Fixed commit": "17f9e11fe5acb5568582e3b39d34af4505df84ea", "Url": "https://api.github.com/repos/liangPATHofei1100/ZhaoYanJuYou", "Date": "2013-12-16T02:08:28Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (co.cask.cdap.etl.batch.StructuredRecordWritable.schemaCache.containsKey(schemaBytes)) { schema = co.cask.cdap.etl.batch.StructuredRecordWritable.schemaCache.get(schemaBytes); }else { java.lang.String schemaStr = co.cask.cdap.api.common.Bytes.toString(schemaBytes); schema = co.cask.cdap.api.data.schema.Schema.parseJson(schemaStr); co.cask.cdap.etl.batch.StructuredRecordWritable.schemaCache.put(schemaBytes, schema); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6290/buggy-version/cdap-app-templates.cdap-etl.cdap-etl-batch.src.main.java.co.cask.cdap.etl.batch.StructuredRecordWritable.java", "BodyUseAPI": ["java.util.Map<byte[], co.cask.cdap.api.data.schema.Schema>.put(byte[],co.cask.cdap.api.data.schema.Schema)", "java.util.Map<byte[], co.cask.cdap.api.data.schema.Schema>.get(byte[])", "co.cask.cdap.api.common.Bytes.toString(byte[])"], "Fixed commit": "ea4f6e36cbf59e4445ba3a44edcd6d575b5fa705", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2017-09-02T00:41:49Z"},
{"Line": "=>719", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(urlString)) { return filename; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5098/buggy-version/library.src.main.java.com.leo.cache.CacheLoader.java", "BodyUseAPI": [], "Fixed commit": "ad04861daee1a893b87c8f99771451c292332117", "Url": "https://api.github.com/repos/cumtkangyi/FastImageLoader", "Date": "2017-12-25T07:57:16Z"},
{"Line": "=>574", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(url)) { return filename; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5098/buggy-version/library.src.main.java.com.leo.cache.CacheLoader.java", "BodyUseAPI": [], "Fixed commit": "ad04861daee1a893b87c8f99771451c292332117", "Url": "https://api.github.com/repos/cumtkangyi/FastImageLoader", "Date": "2017-12-25T07:57:16Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.amazonaws.services.dynamodbv2.document.Table.getItem(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((studyItem.get(org.sagebionetworks.bridge.exporter.dynamo.DynamoHelper.STUDY_INFO_KEY_PROJECT_ID)) != null) { studyInfoBuilder.withSynapseProjectId(studyItem.getString(org.sagebionetworks.bridge.exporter.dynamo.DynamoHelper.STUDY_INFO_KEY_PROJECT_ID)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/642/buggy-version/src.main.java.org.sagebionetworks.bridge.exporter.dynamo.DynamoHelper.java", "BodyUseAPI": ["StudyInfo.Builder.withSynapseProjectId(studyItem.getString(org.sagebionetworks.bridge.exporter.dynamo.DynamoHelper.STUDY_INFO_KEY_PROJECT_ID))", "com.amazonaws.services.dynamodbv2.document.Item.getString(java.lang.String)"], "Fixed commit": "d1a354c010c2d735f4e281ae6d5e05164bb47d55", "Url": "https://api.github.com/repos/DwayneJengSage/Bridge-Exporter-1", "Date": "2016-01-28T02:43:56Z"},
{"Line": "=>564", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xwiki.configuration.ConfigurationSource.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(cardType)) { cardType = \"summary\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9102/buggy-version/component.src.main.java.com.celements.blog.article.Article.java", "BodyUseAPI": [], "Fixed commit": "b3d412c1430eb1ca86f7c508c4297c93c81dc2ab", "Url": "https://api.github.com/repos/celements/celements-blog", "Date": "2017-03-13T11:16:24Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParent()) instanceof net.fathomsoft.nova.tree.Parameter) { net.fathomsoft.nova.tree.Parameter param = ((net.fathomsoft.nova.tree.Parameter) (getParent())); if ((param.getDefaultValue()) == (this)) { return ((net.fathomsoft.nova.tree.ClosureDeclaration) (param)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1191/buggy-version/src.net.fathomsoft.nova.tree.Closure.java", "BodyUseAPI": [], "Fixed commit": "5b2f1d901f350c37723efcf1ac141605784bdd99", "Url": "https://api.github.com/repos/NovaFoundation/Nova", "Date": "2016-10-21T09:30:34Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.mostlyoriginal.game.api.pathfinding.GridGraph.get(int,int)", "net.mostlyoriginal.game.api.pathfinding.GridGraph.get(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((cellA == null) || (cellB == null)) { finished = true; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8919/buggy-version/core.src.net.mostlyoriginal.game.system.logic.analysis.RouteCalculationSystem.java", "BodyUseAPI": [], "Fixed commit": "0c7766c151c5b4e4e8e43d5066f1ee7465091b7b", "Url": "https://api.github.com/repos/DaanVanYperen/ns2-scc-profiler", "Date": "2015-01-25T21:17:57Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 == top) { draggableView.requestLayout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1455/buggy-version/draggablepanel.src.main.java.com.github.pedrovgs.DraggableViewCallback.java", "BodyUseAPI": [], "Fixed commit": "96d58cb495e78ca9600cc3efc618b91939b4709b", "Url": "https://api.github.com/repos/Fiddl3/DraggablePanel", "Date": "2014-12-05T17:56:46Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tournamentServer.getNumOfChallenges()) == (tournamentServer.getNumOfChallengesComplete())) { tournamentPlayer.sendMessageToPlayer(\"END OF CHALLENGES\"); java.lang.System.out.println(\"end of challenges\"); }else { tournamentPlayer.sendMessageToPlayer(\"PLEASE WAIT FOR THE NEXT CHALLENGE TO BEGIN\"); java.lang.System.out.println(\"still more challenges\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5057/buggy-version/src.com.tigerzone.fall2016server.tournament.Challenge.java", "BodyUseAPI": [], "Fixed commit": "029f50b1a151bd164ebf74bf77f4a71f430ed080", "Url": "https://api.github.com/repos/chausen/TigerZoneServer", "Date": "2016-12-02T02:08:56Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount > (getBalance())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9115/buggy-version/src.coinpurse.Purse.java", "BodyUseAPI": [], "Fixed commit": "f32c54e7434b8456d1ed23f875467c8c7d767609", "Url": "https://api.github.com/repos/ziveso/coinpurse", "Date": "2017-04-21T11:27:43Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (redirect != null) { return \"redirect:/\" + redirect; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6373/buggy-version/src.main.java.com.app.controller.LoginController.java", "BodyUseAPI": [], "Fixed commit": "1ed9ae1acfb4037fbbd3d1d3957f7544c1dce79b", "Url": "https://api.github.com/repos/AnkitAti/app", "Date": "2016-12-20T17:38:41Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["k4unl.minecraft.Hydraulicraft.lib.helperClasses.Location.getTE(net.minecraft.world.World)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (teleporter == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9122/buggy-version/java.k4unl.minecraft.Hydraulicraft.blocks.gow.BlockPortalTeleporter.java", "BodyUseAPI": [], "Fixed commit": "2bd9883c7e8d22a7c5581de4dab6c8e6daad2f73", "Url": "https://api.github.com/repos/K-4U/Hydraulicraft", "Date": "2014-07-27T21:26:55Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["k4unl.minecraft.Hydraulicraft.lib.helperClasses.Location.getTE(net.minecraft.world.World)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((teleporter.getPortalBase()) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9122/buggy-version/java.k4unl.minecraft.Hydraulicraft.blocks.gow.BlockPortalTeleporter.java", "BodyUseAPI": [], "Fixed commit": "2bd9883c7e8d22a7c5581de4dab6c8e6daad2f73", "Url": "https://api.github.com/repos/K-4U/Hydraulicraft", "Date": "2014-07-27T21:26:55Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.jbossset.bugclerk.bugzilla.ReportViolationToBzEngine.filterViolationsAlreadyReported(bugViolation.getValue(),commentsByBugId.get(bugViolation.getKey().toString()))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(newViolationToReport.isEmpty())) { newViolationToReport = keepsOnlyErrors(newViolationToReport); if (!(newViolationToReport.isEmpty())) return bugzillaClient.addPrivateCommentTo(bugViolation.getKey(), messageBody(newViolationToReport, new java.lang.StringBuffer(header)).append(footer).toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/257/buggy-version/src.main.java.org.jboss.jbossset.bugclerk.bugzilla.ReportViolationToBzEngine.java", "BodyUseAPI": ["org.jboss.jbossset.bugclerk.bugzilla.ReportViolationToBzEngine.keepsOnlyErrors(java.util.List<org.jboss.jbossset.bugclerk.Violation>)"], "Fixed commit": "540384416b6a8bdce5e5a50875d73301bed103b9", "Url": "https://api.github.com/repos/jboss-set/bug-clerk", "Date": "2015-05-22T10:35:52Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.splitLength) > 0) this.splitLength -= (org.apache.tinkerpop.gremlin.hadoop.structure.io.gryo.GryoRecordReader.seekToHeader(this.inputStream, start)) - start;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5697/buggy-version/hadoop-gremlin.src.main.java.org.apache.tinkerpop.gremlin.hadoop.structure.io.gryo.GryoRecordReader.java", "BodyUseAPI": [], "Fixed commit": "93f430e145b43aad4cf2b64ae55f908bc88700ee", "Url": "https://api.github.com/repos/apache/tinkerpop", "Date": "2016-02-04T14:33:19Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.Long, com.munger.budgettrack.view.CashFlowBase.IncomeViewStruct>.get(tr.id)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (view != null) view.setEditable(editable);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4428/buggy-version/app.src.main.java.com.munger.budgettrack.view.CashFlowBase.java", "BodyUseAPI": ["com.munger.budgettrack.view.CashFlowBase.IncomeViewStruct.setEditable(boolean)"], "Fixed commit": "df97b1bf1034c9979d4a11964e7b7752f4524e13", "Url": "https://api.github.com/repos/fPonias/BudgetTrack", "Date": "2016-02-11T02:02:19Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hankextensions.Core.log) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4106/buggy-version/FtcRobotController.src.main.java.hankextensions.threading.ComplexTask.java", "BodyUseAPI": [], "Fixed commit": "8f21316eadbf1be579a166a7b201778833772a75", "Url": "https://api.github.com/repos/RoboNatick3737/2017-18", "Date": "2017-11-07T19:23:50Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hankextensions.Core.log) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4106/buggy-version/FtcRobotController.src.main.java.hankextensions.threading.ComplexTask.java", "BodyUseAPI": [], "Fixed commit": "8f21316eadbf1be579a166a7b201778833772a75", "Url": "https://api.github.com/repos/RoboNatick3737/2017-18", "Date": "2017-11-07T19:23:50Z"},
{"Line": "=>1623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sun.source.tree.ExpressionTree.toString()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((literalDiscovered) != null) || (caseExpression.contains(\".\"))) { expr = direct(caseExpression); }else { expr = ref(caseExpression); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3371/buggy-version/declex.src.com.dspot.declex.action.ActionsProcessor.java", "BodyUseAPI": ["com.dspot.declex.action.ActionsProcessor.direct(java.lang.String)", "com.dspot.declex.action.ActionsProcessor.ref(java.lang.String)"], "Fixed commit": "401e81bcbb1c8baedb01c0387d644312f8f678b7", "Url": "https://api.github.com/repos/smaugho/declex", "Date": "2017-03-20T02:55:55Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sourceType) == (SourceTypeEnum.FAVORITES.ordinal())) { return new com.npi.muzeiflickr.db.FavoriteSource(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1683/buggy-version/MuzeiFlickr.src.main.java.com.npi.muzeiflickr.db.Photo.java", "BodyUseAPI": [], "Fixed commit": "fd3bc8dd8d67a792c4b32ac80cd86a5624fdab27", "Url": "https://api.github.com/repos/PomepuyN/muzei-flickr", "Date": "2014-02-25T06:33:31Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lower >= upper) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6584/buggy-version/tic-tac-toe.Board.java", "BodyUseAPI": [], "Fixed commit": "59f57e66465dea822503ff79a79de262291f0904", "Url": "https://api.github.com/repos/JTurcotti/MKS21X", "Date": "2016-12-29T03:13:05Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (b == null) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6584/buggy-version/tic-tac-toe.Board.java", "BodyUseAPI": [], "Fixed commit": "59f57e66465dea822503ff79a79de262291f0904", "Url": "https://api.github.com/repos/JTurcotti/MKS21X", "Date": "2016-12-29T03:13:05Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(basePath.equals(dir))) { createFolder(dir); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6915/buggy-version/structr-ui.src.main.java.org.structr.web.maintenance.deploy.FileImportVisitor.java", "BodyUseAPI": ["org.structr.web.maintenance.deploy.FileImportVisitor.createFolder(java.nio.file.Path)"], "Fixed commit": "4eaf3f62361dbaf8af924f1fdeada1b9d7281978", "Url": "https://api.github.com/repos/structr/structr", "Date": "2017-12-15T14:51:34Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["se.yarin.cbhlib.entities.EntityNode<T>.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((foundEntity.compareTo(entity)) == 0) { return foundEntity; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6085/buggy-version/src.main.java.se.yarin.cbhlib.entities.EntityStorageImpl.java", "BodyUseAPI": [], "Fixed commit": "74f4556ca65f0e0987ed97b02c3afb21c99eac37", "Url": "https://api.github.com/repos/Yarin78/cbhlib", "Date": "2016-07-18T17:08:36Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.avelar.wlws.data.WeatherDataDao.findAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (all.isEmpty()) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6039/buggy-version/src.main.java.br.com.avelar.wlws.data.WeatherDataService.java", "BodyUseAPI": [], "Fixed commit": "afc1c44c8e32e5aaf2b1d424ed5c93ab8c254e15", "Url": "https://api.github.com/repos/geovannyAvelar/WeatherLoggerWebService", "Date": "2017-01-25T23:34:39Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (htmlIOf != (-1)) { htmlIOf = (sb.indexOf(\">\", sb.indexOf(\"<html\"))) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9035/buggy-version/src.main.java.com.github.bedrin.jdbc.sniffer.servlet.HtmlInjector.java", "BodyUseAPI": [], "Fixed commit": "c1b6d5aaf0a06b876967af5a0ebfe70ef0796296", "Url": "https://api.github.com/repos/sniffy/sniffy", "Date": "2015-10-29T06:06:43Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (headIOf != (-1)) { headIOf = (sb.indexOf(\">\", sb.indexOf(\"<head\"))) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9035/buggy-version/src.main.java.com.github.bedrin.jdbc.sniffer.servlet.HtmlInjector.java", "BodyUseAPI": [], "Fixed commit": "c1b6d5aaf0a06b876967af5a0ebfe70ef0796296", "Url": "https://api.github.com/repos/sniffy/sniffy", "Date": "2015-10-29T06:06:43Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (doctypeIOf != (-1)) { doctypeIOf = (sb.indexOf(\">\", sb.indexOf(\"<!doctype\"))) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9035/buggy-version/src.main.java.com.github.bedrin.jdbc.sniffer.servlet.HtmlInjector.java", "BodyUseAPI": [], "Fixed commit": "c1b6d5aaf0a06b876967af5a0ebfe70ef0796296", "Url": "https://api.github.com/repos/sniffy/sniffy", "Date": "2015-10-29T06:06:43Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.rey.material.widget.TabPageIndicator.getTabView(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (tv != null) { java.lang.CharSequence title = adapter.getPageTitle(i); if (title == null) title = \"NULL\"; tv.setText(title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1832/buggy-version/lib.src.main.java.com.rey.material.widget.TabPageIndicator.java", "BodyUseAPI": ["android.widget.TextView.setText(java.lang.CharSequence)"], "Fixed commit": "38ba1d228c2884c6b8b3fabd1345971a723c7269", "Url": "https://api.github.com/repos/rey5137/material", "Date": "2015-11-10T08:12:56Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((listFragment) == null) listFragment = new com.bathem.vocabpower.Fragment.ListFragment();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5151/buggy-version/app.src.main.java.com.bathem.vocabpower.Activity.VocabListActivity.java", "BodyUseAPI": [], "Fixed commit": "b1fb45cfa7b0cb3d2dcf9829ce7197dcc886d258", "Url": "https://api.github.com/repos/mehtabghani/VocabPower", "Date": "2016-08-31T12:14:15Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.example.codetribe.my_kid.kids_Activities.Kids>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(kids.getProfilePic().equals(\"\"))) { com.bumptech.glide.Glide.with(context).load(kids.getProfilePic()).thumbnail(0.5F).crossFade().diskCacheStrategy(DiskCacheStrategy.ALL).into(kidsImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7521/buggy-version/app.src.main.java.com.example.codetribe.my_kid.kids_Activities.KidsArray.java", "BodyUseAPI": ["com.bumptech.glide.Glide.with(context).load(kids.getProfilePic())", "com.bumptech.glide.Glide.with(context).load(kids.getProfilePic()).thumbnail(0.5F).crossFade()", "com.bumptech.glide.Glide.with(context).load(kids.getProfilePic()).thumbnail(float)", "com.bumptech.glide.Glide.with(context).load(kids.getProfilePic()).thumbnail(0.5F).crossFade().diskCacheStrategy(DiskCacheStrategy.ALL)", "com.bumptech.glide.Glide.with(context).load(kids.getProfilePic()).thumbnail(0.5F).crossFade().diskCacheStrategy(DiskCacheStrategy.ALL).into(android.widget.ImageView)", "com.example.codetribe.my_kid.kids_Activities.Kids.getProfilePic()"], "Fixed commit": "0fe577c1a3c2be7424139ef9dfb65acf6740f334", "Url": "https://api.github.com/repos/MasheshaInnovatorz/My-Kid-", "Date": "2017-12-04T12:19:04Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i1.getLowerBound()) == (intervals.Interval.NEGATIVE_INF)) upper = intervals.Interval.POSITIVE_INF;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8454/buggy-version/SwAnalysisProj.src.intervals.Interval.java", "BodyUseAPI": [], "Fixed commit": "20c308bfd33f672e7ff3d2398a4b2826198bcd0e", "Url": "https://api.github.com/repos/arizigler/arraychecker", "Date": "2013-03-13T07:31:38Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i1.getLowerBound()) == (intervals.Interval.POSITIVE_INF)) upper = intervals.Interval.NEGATIVE_INF;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8454/buggy-version/SwAnalysisProj.src.intervals.Interval.java", "BodyUseAPI": [], "Fixed commit": "20c308bfd33f672e7ff3d2398a4b2826198bcd0e", "Url": "https://api.github.com/repos/arizigler/arraychecker", "Date": "2013-03-13T07:31:38Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i1.getUpperBound()) == (intervals.Interval.NEGATIVE_INF)) lower = intervals.Interval.POSITIVE_INF;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8454/buggy-version/SwAnalysisProj.src.intervals.Interval.java", "BodyUseAPI": [], "Fixed commit": "20c308bfd33f672e7ff3d2398a4b2826198bcd0e", "Url": "https://api.github.com/repos/arizigler/arraychecker", "Date": "2013-03-13T07:31:38Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i1.getUpperBound()) == (intervals.Interval.POSITIVE_INF)) lower = intervals.Interval.NEGATIVE_INF;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8454/buggy-version/SwAnalysisProj.src.intervals.Interval.java", "BodyUseAPI": [], "Fixed commit": "20c308bfd33f672e7ff3d2398a4b2826198bcd0e", "Url": "https://api.github.com/repos/arizigler/arraychecker", "Date": "2013-03-13T07:31:38Z"},
{"Line": "=>287", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (closed) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7349/buggy-version/java.FRCDS-Java-Comm.src.org.anidev.frcds.proto.FRCCommunication.java", "BodyUseAPI": [], "Fixed commit": "e627f7413369604033fccbaba7ad494aba52e5aa", "Url": "https://api.github.com/repos/anidev/frc-driverstation", "Date": "2013-03-29T12:29:48Z"},
{"Line": "=>1999", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isDraft) { com.vinsol.sms_scheduler.utils.Log.d(\"Case going ahead to change pi firetime\"); if ((mdba.getCurrentPiFiretime()) == (-1)) { handlePiUpdate(com.vinsol.sms_scheduler.activities.ScheduleSms.AbstractScheduleSms.Recipients.get(i).displayName, smsId, receivedRecipientId, cal.getTimeInMillis()); }else if ((cal.getTimeInMillis()) < (mdba.getCurrentPiFiretime())) { handlePiUpdate(com.vinsol.sms_scheduler.activities.ScheduleSms.AbstractScheduleSms.Recipients.get(i).displayName, smsId, receivedRecipientId, cal.getTimeInMillis()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6952/buggy-version/src.com.vinsol.sms_scheduler.activities.ScheduleSms.AbstractScheduleSms.java", "BodyUseAPI": [], "Fixed commit": "6b750e68862df9a64f11bf430f49ced8bea594d7", "Url": "https://api.github.com/repos/vinsol/sms-scheduler", "Date": "2014-08-01T07:14:35Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ekitCore.getDocumentBody().trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (text.startsWith(\"<p style=\\\"margin-top: 0\\\">\")) { text = text.replace(\"<p style=\\\"margin-top: 0\\\">\", \"\").replace(\" </p>\", \"\").trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2174/buggy-version/src.edu.stanford.smi.protegex.owl.ui.widget.HTMLEditorPanel.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "e29e8d4e88ffa1100616bea3a8d2ec3ae423120a", "Url": "https://api.github.com/repos/ubbdst/protege-owl-plugin", "Date": "2017-08-02T12:55:07Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (availableWidth > textWidth) return text;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3878/buggy-version/storagecrypt-desktop.src.main.java.fr.petrus.tools.storagecrypt.desktop.swt.TextShortener.java", "BodyUseAPI": [], "Fixed commit": "eddaf87e28e34b9fd360fba69e662043632bbbdc", "Url": "https://api.github.com/repos/petrus-dev/storagecrypt", "Date": "2016-08-24T22:36:19Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (relations != null) { for (com.impetus.kundera.db.RelationHolder rh : relations) { columnFamilyNames.add(rh.getRelationName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4678/buggy-version/kundera-hbase.src.main.java.com.impetus.client.hbase.HBaseClient.java", "BodyUseAPI": [], "Fixed commit": "dc58c63aa157b4b4daa2a3293aa374d45c705e92", "Url": "https://api.github.com/repos/Impetus/Kundera", "Date": "2011-12-07T10:21:17Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.phunware.datacollector.datastore.db.WeatherDBManager.getWeatherByZipCode(weather.getZipCode().getZipCode())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (oldWeather != null) { dbManager.getClient().delete(oldWeather); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6020/buggy-version/src.main.java.com.phunware.datacollector.datastore.db.WeatherDBManager.java", "BodyUseAPI": ["dbManager.getClient().delete(com.phunware.datacollector.domain.Weather)"], "Fixed commit": "701e7f68339307e78625f6c676076fda8842fefd", "Url": "https://api.github.com/repos/dlohith/Yahoo-Weather-Service", "Date": "2014-11-16T04:50:53Z"},
{"Line": "=>737", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (order != 0) { return order; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/422/buggy-version/src.main.java.teammates.common.datatransfer.FeedbackSessionResultsBundle.java", "BodyUseAPI": [], "Fixed commit": "e5db817e7fddb0b7aea876a0147c5a417ed42de5", "Url": "https://api.github.com/repos/TEAMMATES/repo", "Date": "2014-07-23T04:16:15Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.druid.indexing.overlord.RemoteTaskRunnerWorkQueue.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (workItem != null) { taskComplete(workItem, null, io.druid.indexing.common.TaskStatus.failure(taskId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6795/buggy-version/indexing-service.src.main.java.io.druid.indexing.overlord.RemoteTaskRunner.java", "BodyUseAPI": ["io.druid.indexing.overlord.RemoteTaskRunner.3.taskComplete(io.druid.indexing.overlord.RemoteTaskRunnerWorkItem,<nulltype>,io.druid.indexing.common.TaskStatus.failure(taskId))"], "Fixed commit": "5f85ede66164b9f4f4732b70610ef175671b342e", "Url": "https://api.github.com/repos/himanshug/druid", "Date": "2016-04-19T03:59:41Z"},
{"Line": "=>736", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (immutableZkWorker.isPresent()) { runPendingTasks(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6795/buggy-version/indexing-service.src.main.java.io.druid.indexing.overlord.RemoteTaskRunner.java", "BodyUseAPI": [], "Fixed commit": "5f85ede66164b9f4f4732b70610ef175671b342e", "Url": "https://api.github.com/repos/himanshug/druid", "Date": "2016-04-19T03:59:41Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resObj.has(\"newImagePath\")) { newImagePath = ((java.lang.String) (resObj.get(\"newImagePath\"))); com.cisco.dse.global.migration.config.FrameworkUtils.log.debug((\"Updated dam Image path : \" + newImagePath)); }else { com.cisco.dse.global.migration.config.FrameworkUtils.log.debug(\"No 'newImagePath' found in service response.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6866/buggy-version/src.main.com.cisco.dse.global.migration.config.FrameworkUtils.java", "BodyUseAPI": ["org.apache.sling.commons.json.JSONObject.get(java.lang.String)"], "Fixed commit": "9b9d73fdcd3bcb2782b2fe4360e32dd8d0429af6", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2015-12-10T10:38:38Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (resObj.has(\"error\")) { error = ((java.lang.String) (resObj.get(\"error\"))); if (org.apache.commons.lang.StringUtils.isNotBlank(newImagePath)) { com.cisco.dse.global.migration.config.FrameworkUtils.log.debug((\"Error in updating dam path : \" + error)); } }else { com.cisco.dse.global.migration.config.FrameworkUtils.log.debug(\"No 'error' found in service response.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6866/buggy-version/src.main.com.cisco.dse.global.migration.config.FrameworkUtils.java", "BodyUseAPI": ["org.apache.sling.commons.json.JSONObject.get(java.lang.String)"], "Fixed commit": "9b9d73fdcd3bcb2782b2fe4360e32dd8d0429af6", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2015-12-10T10:38:38Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["schemaContext.getCurrentContext().findModuleByNamespaceAndRevision(java.net.URI,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (module == null) { throw new org.opendaylight.netconf.api.NetconfDocumentedException((\"Unable to find module by namespace: \" + namespace), org.opendaylight.controller.config.util.xml.DocumentedException.ErrorType.application, org.opendaylight.controller.config.util.xml.DocumentedException.ErrorTag.unknown_namespace, org.opendaylight.controller.config.util.xml.DocumentedException.ErrorSeverity.error); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3329/buggy-version/opendaylight.netconf.mdsal-netconf-connector.src.main.java.org.opendaylight.netconf.mdsal.connector.ops.EditConfig.java", "BodyUseAPI": [], "Fixed commit": "fb680dfdc0b4f5a27e31dac1cc9c10ad7e012fda", "Url": "https://api.github.com/repos/opendaylight/netconf", "Date": "2016-02-02T16:28:25Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t > (range)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7809/buggy-version/example.src.tomcat.example.PullPushLayout.java", "BodyUseAPI": [], "Fixed commit": "47429a58a290195112265ee9706027a0bff850d3", "Url": "https://api.github.com/repos/teisun/Android-PullPushScrollView", "Date": "2015-06-15T08:39:49Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((article.getType()) == (it.cnr.isti.hpc.wikipedia.article.Article.Type.ARTICLE)) && ((article.getText().length()) == 0)) article.setType(Type.UNKNOWN);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8023/buggy-version/src.main.java.it.cnr.isti.hpc.wikipedia.parser.ArticleParser.java", "BodyUseAPI": ["it.cnr.isti.hpc.wikipedia.article.Article.setType(Type.UNKNOWN)"], "Fixed commit": "e228768f2963205e84ed62e7bba57682f8fb084f", "Url": "https://api.github.com/repos/naveenmadhire/json-wikipedia-dbspotlight", "Date": "2015-08-16T04:04:46Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.InetAddress.getHostAddress()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((remoteIP.indexOf(\"%\")) != (-1)) { remoteIP = remoteIP.substring(0, remoteIP.indexOf(\"%\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6183/buggy-version/src.main.java.eu.spitfire_project.smart_service_proxy.backends.coap.CoapBackend.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)"], "Fixed commit": "f2a313016874119f7d93d0f363cd5445e0e9202a", "Url": "https://api.github.com/repos/smartsantander/smart-service-proxy", "Date": "2012-04-24T15:04:05Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.hearthsim.event.deathrattle.DeathrattleAction.performAction(com.hearthsim.card.Card,com.hearthsim.model.PlayerSide,com.hearthsim.util.tree.HearthTreeNode)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (toRet == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4621/buggy-version/src.main.java.com.hearthsim.event.deathrattle.DeathrattleCardDrawAction.java", "BodyUseAPI": [], "Fixed commit": "4665fac571ad19cf6441c0f281d392873a9cb660", "Url": "https://api.github.com/repos/oyachai/HearthSim", "Date": "2015-07-01T19:10:40Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(org.bridgedb.sql.SYSCODE_COLUMN_NAME)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (sysCode.startsWith(\"_\")) { java.lang.String fullName = sysCode.substring(1); dataSource = org.bridgedb.DataSource.getByFullName(fullName); }else { dataSource = org.bridgedb.DataSource.getBySystemCode(sysCode); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9075/buggy-version/org.bridgedb.sql.src.org.bridgedb.sql.SQLIdMapper.java", "BodyUseAPI": ["java.lang.String.substring(int)", "org.bridgedb.DataSource.getBySystemCode(java.lang.String)"], "Fixed commit": "c9470cd42c54622357f6b712043b334bd3782fd1", "Url": "https://api.github.com/repos/openphacts/BridgeDb", "Date": "2013-03-08T16:06:21Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.util.SparseBooleanArray.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value) { int indexOfKey = checked.indexOfKey(i); if (indexOfKey >= 0) { android.util.Log.d(\"MainActivity\", (\"Selected = \" + (types.get(checked.indexOfKey(i))))); selectedTypes.add(types.get(checked.indexOfKey(i)).toLowerCase()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6602/buggy-version/app.src.main.java.at.tugraz.beislrallye.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "99cd18c1ba159b8c4e41cbc7b31b9c068a53c954", "Url": "https://api.github.com/repos/arminh/Beislrallye", "Date": "2015-05-09T12:38:06Z"},
{"Line": "=>924", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((progressStatus.getError()) != null) { exceptionHolder.set(progressStatus.getError()); }else { progressMonitor.updateProgress(progressStatus); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6832/buggy-version/plugin-docker.che-plugin-docker-client.src.main.java.org.eclipse.che.plugin.docker.client.DockerConnector.java", "BodyUseAPI": ["org.eclipse.che.plugin.docker.client.json.ProgressStatus.getError()", "org.eclipse.che.plugin.docker.client.ProgressMonitor.updateProgress(org.eclipse.che.plugin.docker.client.json.ProgressStatus)", "org.eclipse.che.api.core.util.ValueHolder<java.lang.String>.set(progressStatus.getError())"], "Fixed commit": "cbcb6d6c38fef15ebf3cb2534399f24f6ddfe3f8", "Url": "https://api.github.com/repos/codenvy-legacy/che-plugins", "Date": "2015-12-22T14:47:58Z"},
{"Line": "=>943", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((exceptionHolder.get()) != null) { throw new org.eclipse.che.plugin.docker.client.DockerException(exceptionHolder.get(), 500); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6832/buggy-version/plugin-docker.che-plugin-docker-client.src.main.java.org.eclipse.che.plugin.docker.client.DockerConnector.java", "BodyUseAPI": ["org.eclipse.che.api.core.util.ValueHolder<java.lang.String>.get()"], "Fixed commit": "cbcb6d6c38fef15ebf3cb2534399f24f6ddfe3f8", "Url": "https://api.github.com/repos/codenvy-legacy/che-plugins", "Date": "2015-12-22T14:47:58Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dir instanceof org.apache.blur.store.hdfs_v2.JoinDirectory) { org.apache.blur.store.hdfs_v2.JoinDirectory directory = ((org.apache.blur.store.hdfs_v2.JoinDirectory) (dir)); return directory.getSymlinkDirectory(); }else { throw new java.io.IOException(((\"Directory [\" + dir) + \"] is not HdfsDirectory or DirectoryDecorator\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1552/buggy-version/blur-core.src.main.java.org.apache.blur.manager.writer.IndexImporter.java", "BodyUseAPI": [], "Fixed commit": "df2526723f40065d9d6594c477042ec2755d2953", "Url": "https://api.github.com/repos/apache/incubator-blur", "Date": "2015-08-12T15:55:23Z"},
{"Line": "=>676", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cascading.tap.hadoop.Hfs.getIdentifier()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if ((identifier == null) || (identifier.isEmpty())) results.add(new org.apache.hadoop.fs.Path(substring).toString()); else results.add(new org.apache.hadoop.fs.Path(identifier, substring).toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3738/buggy-version/cascading-hadoop.src.main.shared.cascading.tap.hadoop.Hfs.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(new org.apache.hadoop.fs.Path(identifier, substring).toString())", "org.apache.hadoop.fs.Path.toString()"], "Fixed commit": "b0bb582bfe8f99b1c834a090887f205a6ea679d8", "Url": "https://api.github.com/repos/metamx/cascading", "Date": "2014-04-24T20:22:26Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((depth == 0) && (!fullyQualified)) return new java.lang.String[]{ getIdentifier() };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3738/buggy-version/cascading-hadoop.src.main.shared.cascading.tap.hadoop.Hfs.java", "BodyUseAPI": [], "Fixed commit": "b0bb582bfe8f99b1c834a090887f205a6ea679d8", "Url": "https://api.github.com/repos/metamx/cascading", "Date": "2014-04-24T20:22:26Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["authorDao.getById(authorInfo.getId()).getAvatar()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (img != null) { author.setAvatar(img); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6042/buggy-version/src.main.java.com.nibrahimli.backoffice.controllers.BlogController.java", "BodyUseAPI": ["com.nibrahimli.database.blog.entity.Author.setAvatar(com.nibrahimli.database.blog.entity.Image)"], "Fixed commit": "59dce1b6583e1e56efcf7b246a51f9717a94605a", "Url": "https://api.github.com/repos/nibrahimli/nibrahimli-backoffice", "Date": "2015-06-30T22:59:45Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActivity) != null) { mActivity.imageViews.add(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/17/buggy-version/src.com.baidu.iknow.imageloader.widgets.CustomImageView.java", "BodyUseAPI": [], "Fixed commit": "dad4ae82a400022abb3ec94e8a8ae5e66cd58172", "Url": "https://api.github.com/repos/zhaoxuyang/imageloader", "Date": "2015-11-20T23:30:36Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActivity) != null) { mActivity.imageViews.remove(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/17/buggy-version/src.com.baidu.iknow.imageloader.widgets.CustomImageView.java", "BodyUseAPI": [], "Fixed commit": "dad4ae82a400022abb3ec94e8a8ae5e66cd58172", "Url": "https://api.github.com/repos/zhaoxuyang/imageloader", "Date": "2015-11-20T23:30:36Z"},
{"Line": "=>485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActivity) != null) { mActivity.imageViews.add(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/17/buggy-version/src.com.baidu.iknow.imageloader.widgets.CustomImageView.java", "BodyUseAPI": [], "Fixed commit": "dad4ae82a400022abb3ec94e8a8ae5e66cd58172", "Url": "https://api.github.com/repos/zhaoxuyang/imageloader", "Date": "2015-11-20T23:30:36Z"},
{"Line": "=>476", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mActivity) != null) { mActivity.imageViews.remove(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/17/buggy-version/src.com.baidu.iknow.imageloader.widgets.CustomImageView.java", "BodyUseAPI": [], "Fixed commit": "dad4ae82a400022abb3ec94e8a8ae5e66cd58172", "Url": "https://api.github.com/repos/zhaoxuyang/imageloader", "Date": "2015-11-20T23:30:36Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getMessage()) != null) { message = \": \" + (e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1565/buggy-version/ugs-core.src.com.willwinder.universalgcodesender.GrblController.java", "BodyUseAPI": ["java.lang.Exception.getMessage()"], "Fixed commit": "6414cfab476807f0219432a2033775d7f1e0fa32", "Url": "https://api.github.com/repos/winder/Universal-G-Code-Sender", "Date": "2016-11-19T19:50:52Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((level.getInnerTopic()) != null) && ((level.getInnerTopic().getUniqueId()) != null)) && (level.getInnerTopic().getUniqueId().equals((csNodeId + \"\")))) { return level.getInnerTopic(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5877/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.utils.ContentSpecUtilities.java", "BodyUseAPI": ["org.jboss.pressgang.ccms.contentspec.Level.getInnerTopic()"], "Fixed commit": "a18feeafef443098019751732120a50f0f04404c", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2013-09-03T06:58:03Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((level.getUniqueId()) != null) && (level.getUniqueId().equals((csNodeId + \"\")))) { return level; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5877/buggy-version/src.main.java.org.jboss.pressgang.ccms.contentspec.utils.ContentSpecUtilities.java", "BodyUseAPI": [], "Fixed commit": "a18feeafef443098019751732120a50f0f04404c", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSContentSpec", "Date": "2013-09-03T06:58:03Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (obj == null) obj = new java.lang.Object[]{ };", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4202/buggy-version/rxbuslib.src.main.java.rxbus.ecaray.com.rxbuslib.rxbus.RxBusEvent.java", "BodyUseAPI": [], "Fixed commit": "92790a00bb6bc510a6494ef44035e2ac1434d61f", "Url": "https://api.github.com/repos/TopTech666/TechRxbus", "Date": "2017-09-23T19:30:47Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getInt(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (environmentID == 0) { environmentValue = \"quiet\"; }else { environmentValue = \"noisy\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/280/buggy-version/app.src.main.java.ca.uqac.florentinth.speakerauthentication.AccessActivity.java", "BodyUseAPI": [], "Fixed commit": "dfc1575cc95d965ce583a5c2a6dc892c8d668408", "Url": "https://api.github.com/repos/FlorentinTh/SpeakerAuthentication", "Date": "2016-03-08T21:21:22Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aa != (dcpu.Dcpu.M_O)) mem[dcpu.Dcpu.M_O] = ((short) (oreg));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5506/buggy-version/src.dcpu.Dcpu.java", "BodyUseAPI": [], "Fixed commit": "288b8cb3da335acb79d2147a7588c2fc6e865300", "Url": "https://api.github.com/repos/aimozg/ja-dcpu", "Date": "2012-04-24T19:07:27Z"},
{"Line": "=>771", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.util.PsiTreeUtil.getParentOfType(com.intellij.psi.PsiElement,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((variableDefinition.getTextOffset()) < (statementNode.getTextOffset())) { results.add(variableDefinition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/982/buggy-version/src.main.java.org.ballerinalang.plugins.idea.psi.impl.BallerinaPsiImplUtil.java", "BodyUseAPI": ["java.util.List<com.intellij.psi.PsiElement>.add(com.intellij.psi.PsiElement)"], "Fixed commit": "bd01871ed5a6fa21c57b4fdc61abe42752e07430", "Url": "https://api.github.com/repos/ballerina-attic/plugin-intellij", "Date": "2017-06-08T05:54:47Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(<nulltype>,java.lang.String,java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (input == null) java.lang.System.exit(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2466/buggy-version/PageRank.src.pageRank.PageRankMain.java", "BodyUseAPI": [], "Fixed commit": "7b227f823f700df03aaf59c858027b46d3f37d1a", "Url": "https://api.github.com/repos/kaiyuanS/Page_Rank", "Date": "2014-12-07T11:02:14Z"},
{"Line": "=>843", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (temp[0].contains(\"/\")) { tdnext.ParserAPI.date = temp[0]; tdnext.ParserAPI.startingTime = temp[2]; tdnext.ParserAPI.endingTime = temp[4]; }else { tdnext.ParserAPI.setCurrentTime(); tdnext.ParserAPI.day += 1; if ((tdnext.ParserAPI.day) > (tdnext.ParserAPI.daysInMonth(tdnext.ParserAPI.month))) { (tdnext.ParserAPI.month)++; tdnext.ParserAPI.day -= tdnext.ParserAPI.daysInMonth(((tdnext.ParserAPI.month) - 1)); } if ((tdnext.ParserAPI.month) > 12) { tdnext.ParserAPI.month -= 12; (tdnext.ParserAPI.year)++; } tdnext.ParserAPI.date = ((((java.lang.Integer.toString(tdnext.ParserAPI.day)) + \"/\") + (java.lang.Integer.toString(tdnext.ParserAPI.month))) + \"/\") + (java.lang.Integer.toString(tdnext.ParserAPI.year)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2039/buggy-version/src.tdnext.ParserAPI.java", "BodyUseAPI": [], "Fixed commit": "6811166bdb52a1739a0ea62ed19460b97a71881d", "Url": "https://api.github.com/repos/cs2103aug2015-t16-2j/main", "Date": "2015-11-08T04:40:16Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.github.ucchyocean.ct.ColorTeaming.getScoreboard().getObjective(\"teamscore\")) != null) { objective.unregister(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3399/buggy-version/src.main.java.com.github.ucchyocean.ct.scoreboard.SidebarScoreDisplay.java", "BodyUseAPI": [], "Fixed commit": "d4091ced1dd75260a305c30edfe968339e05c650", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2013-04-22T15:17:16Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.github.ucchyocean.ct.ColorTeaming.getScoreboard().getObjective(\"listscore\")) != null) { objective.unregister(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3399/buggy-version/src.main.java.com.github.ucchyocean.ct.scoreboard.TabListScoreDisplay.java", "BodyUseAPI": [], "Fixed commit": "d4091ced1dd75260a305c30edfe968339e05c650", "Url": "https://api.github.com/repos/ucchyocean/ColorTeaming", "Date": "2013-04-22T15:17:16Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intent == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7023/buggy-version/app.src.main.java.io.alstonlin.thelearninglock.lockscreen.LockScreen.java", "BodyUseAPI": [], "Fixed commit": "e24951b853078d5c2017630dacd52cdca53c4143", "Url": "https://api.github.com/repos/AlstonLin/TheLearningLock", "Date": "2017-05-06T22:42:43Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.niccholaspage.nSpleef.nSpleefPlayerListener.plugin.nSpleefArenas.size()) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/94/buggy-version/src.com.niccholaspage.nSpleef.nSpleefPlayerListener.java", "BodyUseAPI": [], "Fixed commit": "d9ebb48f9ec312a6d1ee31b31d5cb32a0d43ba65", "Url": "https://api.github.com/repos/niccholaspage/nSpleef", "Date": "2011-03-01T04:07:19Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.exists()) { totalbudget -= java.lang.Double.parseDouble(dataSnapshot.getValue().toString()); }else { myRef.child(\"periods\").child(periodID).child(\"totalExpenses\").setValue(1); totalbudget -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8638/buggy-version/app.src.main.java.com.example.ronjc.tiptracker.HomeActivity.java", "BodyUseAPI": ["dataSnapshot.getValue().toString()", "com.google.firebase.database.DataSnapshot.getValue()", "java.lang.Double.parseDouble(dataSnapshot.getValue().toString())"], "Fixed commit": "cdd643be9c5e30deeb8b6ea9f5aa632a16b281ac", "Url": "https://api.github.com/repos/tipsytiptracker/tiptracker", "Date": "2017-04-29T02:07:10Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.exists()) { totalbudget += java.lang.Double.parseDouble(dataSnapshot.getValue().toString()); }else { myRef.child(\"periods\").child(periodID).child(\"totalIncome\").setValue(1); totalbudget += 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8638/buggy-version/app.src.main.java.com.example.ronjc.tiptracker.HomeActivity.java", "BodyUseAPI": ["com.google.firebase.database.DataSnapshot.getValue()", "dataSnapshot.getValue().toString()", "java.lang.Double.parseDouble(dataSnapshot.getValue().toString())"], "Fixed commit": "cdd643be9c5e30deeb8b6ea9f5aa632a16b281ac", "Url": "https://api.github.com/repos/tipsytiptracker/tiptracker", "Date": "2017-04-29T02:07:10Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.exists()) { totalbudget -= java.lang.Double.parseDouble(dataSnapshot.getValue().toString()); }else { myRef.child(\"users\").child(user.getUid()).child(\"current_budget\").setValue(0); totalbudget -= 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8638/buggy-version/app.src.main.java.com.example.ronjc.tiptracker.HomeActivity.java", "BodyUseAPI": ["java.lang.Double.parseDouble(dataSnapshot.getValue().toString())", "com.google.firebase.database.DataSnapshot.getValue()", "dataSnapshot.getValue().toString()"], "Fixed commit": "cdd643be9c5e30deeb8b6ea9f5aa632a16b281ac", "Url": "https://api.github.com/repos/tipsytiptracker/tiptracker", "Date": "2017-04-29T02:07:10Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPreviousClause()) == null) { resultSequence = postEval(resultSequence); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4804/buggy-version/src.org.exist.xquery.LetExpr.java", "BodyUseAPI": [], "Fixed commit": "5cefb74cd083528435f929e998a4eed5d7d07719", "Url": "https://api.github.com/repos/wshager/exist", "Date": "2015-08-08T12:47:20Z"},
{"Line": "=>4277", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mysql.jdbc.util.LRUCache.put(java.lang.String,com.mysql.jdbc.ServerPreparedStatement)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (oldServerPrepStmt != null) { ((com.mysql.jdbc.ServerPreparedStatement) (oldServerPrepStmt)).isCached = false; ((com.mysql.jdbc.ServerPreparedStatement) (oldServerPrepStmt)).realClose(true, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8008/buggy-version/src.com.mysql.jdbc.ConnectionImpl.java", "BodyUseAPI": [], "Fixed commit": "05201b083e4a26f559afe7d44228c787af732b86", "Url": "https://api.github.com/repos/mysql/mysql-connector-j", "Date": "2017-07-03T00:47:58Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["query.setParameter(\"searchTerm\", email).list()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((user.size()) != 0) { return user.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5839/buggy-version/src.com.atlas.dao.UserDAOImpl.java", "BodyUseAPI": ["java.util.List<com.atlas.entity.User>.get(int)"], "Fixed commit": "a28f05f42d15c6cf7ad09750160fa7c671d62aee", "Url": "https://api.github.com/repos/bhavindesai20/febatlas", "Date": "2016-03-07T19:31:53Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["iFacts.getRoute().isEmpty()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (routeIsEmpty) distancePrevAct2NextAct = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5327/buggy-version/jsprit-core.src.main.java.com.graphhopper.jsprit.core.problem.constraint.MaxDistanceConstraint.java", "BodyUseAPI": [], "Fixed commit": "3699fd5f990374d159e1b46d48a597fb067c81e0", "Url": "https://api.github.com/repos/graphhopper/jsprit", "Date": "2016-11-14T09:15:05Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((popupMessage) != null) { if (scanIntent != null) { startActivity(scanIntent); android.os.Process.killProcess(android.os.Process.myPid()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4664/buggy-version/app.src.main.java.com.example.totes_rewards.totesrewards.PopupActivity.java", "BodyUseAPI": [], "Fixed commit": "2c8e3b8fba3c029366f534e5133e1c3500889c51", "Url": "https://api.github.com/repos/thangsea/Totes_Rewards", "Date": "2016-05-17T15:47:20Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.M)) { IMPL = new com.githang.statusbar.LightStatusBarCompat.MLightStatusBarImpl(); }else if (com.githang.statusbar.LightStatusBarCompat.MeizuLightStatusBarImpl.isMe()) { IMPL = new com.githang.statusbar.LightStatusBarCompat.MeizuLightStatusBarImpl(); }else { IMPL = new com.githang.statusbar.LightStatusBarCompat.ILightStatusBar() { @java.lang.Override public void setLightStatusBar(android.view.Window window, boolean lightStatusBar) { } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6472/buggy-version/library.src.main.java.com.githang.statusbar.LightStatusBarCompat.java", "BodyUseAPI": [], "Fixed commit": "53765ff1909c20c8dad44e411fc4da8647c9dced", "Url": "https://api.github.com/repos/msdx/status-bar-compat", "Date": "2017-03-06T06:46:10Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getElement(1).getText().length()) >= 0) { population = java.lang.Integer.parseInt(e.getElement(1).getText().substring(0, ((e.getElement(1).getText().length()) - (\" players\".length())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9001/buggy-version/src.model.Scraper.java", "BodyUseAPI": ["e.getElement(1).getText()", "e.getElement(1).getText().length()", "model.Element.getElement(int)", "e.getElement(1).getText().substring(int,((e.getElement(1).getText().length()) - (\" players\".length())))", "e.getElement(1).getText()", "java.lang.Integer.parseInt(e.getElement(1).getText().substring(0, ((e.getElement(1).getText().length()) - (\" players\".length()))))", "model.Element.getElement(int)"], "Fixed commit": "7089e0f8fc03d999a6a2830355328d33f24a68f3", "Url": "https://api.github.com/repos/RealAtix/OSRS-World-Tracker", "Date": "2016-01-09T22:48:36Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getElement(1).getText().length()) >= 0) { population = java.lang.Integer.parseInt(e.getElement(1).getText().substring(0, ((e.getElement(1).getText().length()) - (\" players\".length())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9001/buggy-version/src.model.Scraper.java", "BodyUseAPI": ["model.Element.getElement(int)", "e.getElement(1).getText().length()", "java.lang.Integer.parseInt(e.getElement(1).getText().substring(0, ((e.getElement(1).getText().length()) - (\" players\".length()))))", "e.getElement(1).getText().substring(int,((e.getElement(1).getText().length()) - (\" players\".length())))", "model.Element.getElement(int)", "e.getElement(1).getText()", "e.getElement(1).getText()"], "Fixed commit": "7089e0f8fc03d999a6a2830355328d33f24a68f3", "Url": "https://api.github.com/repos/RealAtix/OSRS-World-Tracker", "Date": "2016-01-09T22:48:36Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (from instanceof java.lang.Cloneable) { return org.apache.commons.lang3.ObjectUtils.clone(from); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8966/buggy-version/src.main.java.com.tek271.util2.collection.CollectionTools.java", "BodyUseAPI": ["org.apache.commons.lang3.ObjectUtils.clone(C)"], "Fixed commit": "cfd1c77648caecfdc0b15603809d1f3edc471611", "Url": "https://api.github.com/repos/ahabra/tecuj2", "Date": "2016-10-17T20:48:52Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (from == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8966/buggy-version/src.main.java.com.tek271.util2.collection.CollectionTools.java", "BodyUseAPI": [], "Fixed commit": "cfd1c77648caecfdc0b15603809d1f3edc471611", "Url": "https://api.github.com/repos/ahabra/tecuj2", "Date": "2016-10-17T20:48:52Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles(java.io.FileFilter)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files == null) { return new java.util.HashSet<java.lang.Class<?>>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6433/buggy-version/src.main.java.in.moon.framework.core.MoonClassLoader.java", "BodyUseAPI": [], "Fixed commit": "4bf8320fcc1e0b3a7fcbcddd41cc68a8dbe59b05", "Url": "https://api.github.com/repos/miaoever/moon", "Date": "2015-09-28T15:26:03Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((arena.playersInArena.size()) < (arena.maxPlayers)) { if ((arena.timer) >= 10) { arena.timer = 11; } }else { arena.timer = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3239/buggy-version/src.nl.Steffion.BlockHunt.Commands.CMDstart.java", "BodyUseAPI": [], "Fixed commit": "4c23fbc26371715cb20dd9f54af586bb4c71897b", "Url": "https://api.github.com/repos/Steffion/BlockHunt", "Date": "2013-08-26T13:23:17Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (requirements.isEmpty()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8004/buggy-version/src.com.hemen.CMSC335.SCave.Job.java", "BodyUseAPI": [], "Fixed commit": "036ee0143cd80f13ab5dc9539fd0a8c6d879c35c", "Url": "https://api.github.com/repos/melombuki/CMSC335", "Date": "2014-11-28T19:32:03Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x < 0) throw new java.lang.IllegalArgumentException((\"neg x: \" + x));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8230/buggy-version/src.main.org.excelsi.nausicaa.ca.BlockPlane.java", "BodyUseAPI": [], "Fixed commit": "d8e303417b62bf385410a0f44f7424ac62de0a57", "Url": "https://api.github.com/repos/jkwhite/nausicaa", "Date": "2017-08-05T00:42:03Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((material) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6759/buggy-version/slicer.src.main.java.org.reprap.geometry.polyhedra.Attributes.java", "BodyUseAPI": [], "Fixed commit": "5fe646d08f7433c100a08f554496b2d63f4927ca", "Url": "https://api.github.com/repos/holgero/RepRapProSlicer", "Date": "2013-05-04T10:01:56Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reactance1 == 0) { topology[0] = MatchingNetwork.EMPTY; topology[1] = MatchingNetwork.EMPTY; }else { if (reactance1 > 0) { sol1 = reactance1 / w; topology[0] = orientation1; topology[1] = MatchingNetwork.L; }else { sol1 = (-1) / (w * reactance1); topology[0] = orientation1; topology[1] = MatchingNetwork.C; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3979/buggy-version/src.ch.fhnw.ht.eit.p2.impedancepro.Network.java", "BodyUseAPI": [], "Fixed commit": "a652cf7c3d8bb365b8523807557bef8047d9f9ee", "Url": "https://api.github.com/repos/seimsel/ImpedancePro", "Date": "2014-05-14T07:48:32Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reactance2 == 0) { topology[2] = MatchingNetwork.EMPTY; topology[3] = MatchingNetwork.EMPTY; }else { if (reactance2 > 0) { sol2 = reactance2 / w; topology[2] = orientation2; topology[3] = MatchingNetwork.L; }else { sol2 = (-1) / (w * reactance2); topology[2] = orientation2; topology[3] = MatchingNetwork.C; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3979/buggy-version/src.ch.fhnw.ht.eit.p2.impedancepro.Network.java", "BodyUseAPI": [], "Fixed commit": "a652cf7c3d8bb365b8523807557bef8047d9f9ee", "Url": "https://api.github.com/repos/seimsel/ImpedancePro", "Date": "2014-05-14T07:48:32Z"},
{"Line": "=>1126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(loc.isArgDerived())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4383/buggy-version/src.framework.scuba.domain.AbstractHeap.java", "BodyUseAPI": [], "Fixed commit": "96b32f7a882d22873485273834e6ca59fd522999", "Url": "https://api.github.com/repos/fredfeng/Scuba", "Date": "2014-06-03T03:29:26Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(input.contains(\" \"))) { SneakySnakeClient.Scene.IPInput.currentLineWidth += SneakySnakeClient.Text.TextMeshCreator.getCharSize(SneakySnakeClient.Scene.IPInput.text, input.toCharArray()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7291/buggy-version/src.SneakySnakeClient.Scene.IPInput.java", "BodyUseAPI": ["SneakySnakeClient.Text.TextMeshCreator.getCharSize(SneakySnakeClient.Text.GUIText,char[])", "java.lang.String.toCharArray()"], "Fixed commit": "03adc5517faaf0197b24dffcc150d5c8e2cc9ceb", "Url": "https://api.github.com/repos/PLEXATIC/SneakySnakeClient", "Date": "2016-03-23T07:34:09Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (valueRank == 1) pizza.setDescription(tokens[6]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3719/buggy-version/src.main.java.com.util.clients.TransactionParser.java", "BodyUseAPI": [], "Fixed commit": "219635ec776f8bd2b0ee44ed954d087eea510846", "Url": "https://api.github.com/repos/iamon3/free.pizzaapp", "Date": "2014-09-02T18:22:22Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.plugins.ec2.EC2SpotSlave.getSpotRequest()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((sir.getInstanceId()) != null) instanceIds.add(sir.getInstanceId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1672/buggy-version/src.main.java.hudson.plugins.ec2.EC2Cloud.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(sir.getInstanceId())", "com.amazonaws.services.ec2.model.SpotInstanceRequest.getInstanceId()"], "Fixed commit": "b267fa7bd40cb625a76f42108432f985787f353d", "Url": "https://api.github.com/repos/zcicala/ec2-plugin", "Date": "2017-09-08T17:53:44Z"},
{"Line": "=>410", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sir.getInstanceId()) != null) instanceIds.add(sir.getInstanceId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1672/buggy-version/src.main.java.hudson.plugins.ec2.EC2Cloud.java", "BodyUseAPI": ["com.amazonaws.services.ec2.model.SpotInstanceRequest.getInstanceId()", "java.util.Set<java.lang.String>.add(sir.getInstanceId())"], "Fixed commit": "b267fa7bd40cb625a76f42108432f985787f353d", "Url": "https://api.github.com/repos/zcicala/ec2-plugin", "Date": "2017-09-08T17:53:44Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yiyangzhu.yydictionary.YoudaoDictionary.get(show.getText().toString())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (word != null) { show.setText(word.toString()); show.setGravity(Gravity.NO_GRAVITY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5464/buggy-version/app.src.main.java.com.yiyangzhu.yydictionary.BuilderActivity.java", "BodyUseAPI": ["android.widget.TextView.setText(word.toString())", "com.yiyangzhu.yydictionary.Word.toString()"], "Fixed commit": "fcadb7c0a9c94a96081f55e3f7151352bc1b44b7", "Url": "https://api.github.com/repos/wangkekekexili/YYDictionary", "Date": "2016-01-02T17:04:10Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yiyangzhu.yydictionary.YoudaoDictionary.get(show.getText().toString())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (word != null) { show.setText(word.toString()); show.setGravity(Gravity.NO_GRAVITY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5464/buggy-version/app.src.main.java.com.yiyangzhu.yydictionary.BuilderActivity.java", "BodyUseAPI": ["com.yiyangzhu.yydictionary.Word.toString()", "android.widget.TextView.setText(word.toString())"], "Fixed commit": "fcadb7c0a9c94a96081f55e3f7151352bc1b44b7", "Url": "https://api.github.com/repos/wangkekekexili/YYDictionary", "Date": "2016-01-02T17:04:10Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.neo.remote.controlcenter.IEventRule.getEventsForTrigger(de.neo.remote.api.Trigger)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (events != null) { for (de.neo.remote.api.Event event : events) { event.getParameter().putAll(trigger.getParameter()); mEventWorker.queueEvent(event); } eventCount += events.length; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6117/buggy-version/de.neo.remote.src.de.neo.remote.controlcenter.ControlCenterImpl.java", "BodyUseAPI": [], "Fixed commit": "de2eae1e214f53a863dd601bd67e6b3c87685398", "Url": "https://api.github.com/repos/dabastynator/SmartHome", "Date": "2015-06-08T17:28:24Z"},
{"Line": "=>16828", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.rfo.basic.Basic.getRawResourceID(fileName)) != 0) { exists = true; }else { java.lang.String assetPath = com.rfo.basic.Basic.getAppFilePath(Basic.SOURCE_DIR, fileName); if ((getAssetType(assetPath)) == \"f\") { exists = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4072/buggy-version/src.com.rfo.basic.Run.java", "BodyUseAPI": ["com.rfo.basic.Basic.getAppFilePath(Basic.SOURCE_DIR,java.lang.String)"], "Fixed commit": "e58fb2d7adf54183fd2ffad1cb29b00460eced8d", "Url": "https://api.github.com/repos/RFO-BASIC/Basic", "Date": "2015-04-02T17:42:06Z"},
{"Line": "=>914", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mainDex && (dexPatch)) && (getMainBundleDiffType().equals(DiffType.NONE))) { org.apache.commons.io.FileUtils.cleanDirectory(destDex.getParentFile()); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/639/buggy-version/atlas-gradle-plugin.dexpatch.src.main.java.com.taobao.android.TPatchTool.java", "BodyUseAPI": [], "Fixed commit": "875a10d71ab4734007a84e5931de267b04cca922", "Url": "https://api.github.com/repos/alibaba/atlas", "Date": "2017-09-12T09:12:04Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.view.View.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((verifierReponse(reponseEnvoyee, op.getReponse())) == true) { handler.postDelayed(activerBoutons, 800); }else { handler.postDelayed(activerBoutons, 2100); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4657/buggy-version/app.src.main.java.com.example.cassa.entrainementprojettut.AdditionActivity.java", "BodyUseAPI": [], "Fixed commit": "dc3adbd27242fc0dfbc4267646b92548ba1bd959", "Url": "https://api.github.com/repos/RumblingBee/ProjetTutoreAndroid", "Date": "2017-12-01T09:57:59Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(artist.isNew())) { log.debug((\"Checking for Artist with name \" + (artist.getName()))); if ((repo.findByName(artist.getName()).size()) > 0) { errors.rejectValue(\"name\", \"artist.name.exists\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/376/buggy-version/gigs2go-dev.src.main.java.com.gigs2go.mvc.validators.ArtistValidator.java", "BodyUseAPI": ["com.gigs2go.model.repos.ArtistRepository.findByName(artist.getName())", "com.gigs2go.model.entities.Artist.getName()", "com.gigs2go.model.entities.Artist.getName()", "org.slf4j.Logger.debug((\"Checking for Artist with name \" + (artist.getName())))", "repo.findByName(artist.getName()).size()"], "Fixed commit": "a6bf6e3fd5f5192423606f361dc542a27d6a5255", "Url": "https://api.github.com/repos/gigs2go/Gigs2Go", "Date": "2013-04-22T16:38:43Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (goDB.containsKey(a)) g.addAll(goDB.get(a).getParentAccessions()); else g.add(a);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/820/buggy-version/src.ahrd.model.GOdbSQL.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.add(java.lang.String)", "java.util.Map<java.lang.String, ahrd.model.GOterm>.get(java.lang.String)", "goDB.get(a).getParentAccessions()", "java.util.Set<java.lang.String>.addAll(goDB.get(a).getParentAccessions())"], "Fixed commit": "21b633e2ea04908d5456a3ff0b5f70883d8cc148", "Url": "https://api.github.com/repos/groupschoof/AHRD", "Date": "2016-07-17T12:15:38Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((date1.getTime()) >= ((date2.getTime()) - 86000000)) { getView().getTabsPane().getReportPanel().warnDateAfter(); }else if (((date1.getTime()) + 86400000) > (java.util.Calendar.getInstance().getTimeInMillis())) { javax.swing.JOptionPane.showMessageDialog(getView().getTabsPane().getReportPanel(), \"You can't select dates from the future!\", \"Wrong dates selected!\", 2); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5140/buggy-version/src.com.group8.controller.ReportsController.java", "BodyUseAPI": ["java.sql.Date.getTime()"], "Fixed commit": "dd5440f467e0d7c54b45087dc1aedfb764fc6da5", "Url": "https://api.github.com/repos/junysz/ProMusicaInventorySystem", "Date": "2014-05-05T22:47:13Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value == (mid.getValue())) { return mid.getColor(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2294/buggy-version/bg-commons.src.main.java.edu.upf.bg.colorscale.impl.LinearTwoSidedColorScale.java", "BodyUseAPI": ["edu.upf.bg.colorscale.ColorScalePoint.getColor()"], "Fixed commit": "906ac4790b3be0c4cf2ef83aa1f8e643b64690fe", "Url": "https://api.github.com/repos/gitools/gitools", "Date": "2012-11-12T13:53:39Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o2 == null) return 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3626/buggy-version/freeplane.src.main.java.org.freeplane.features.map.NodeRelativePath.java", "BodyUseAPI": [], "Fixed commit": "83b7ca7de6b6ea5171f28486a49c92ec5d6188b1", "Url": "https://api.github.com/repos/freeplane/freeplane", "Date": "2016-09-05T21:38:02Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (extras.equals(null)) { android.util.Log.e(TAG, \"intent.getExtras() == null\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6642/buggy-version/app.src.main.java.com.imaginamos.taxisya.taxista.io.MyService.java", "BodyUseAPI": [], "Fixed commit": "08be3c2c7411852f07a0a36a50b6496e209e2c90", "Url": "https://api.github.com/repos/developerCeluvans/ty-conductor-android", "Date": "2017-04-10T17:44:22Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (extras != null) { this.driver_id = extras.getString(\"driver_id\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6642/buggy-version/app.src.main.java.com.imaginamos.taxisya.taxista.io.MyService.java", "BodyUseAPI": ["android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "08be3c2c7411852f07a0a36a50b6496e209e2c90", "Url": "https://api.github.com/repos/developerCeluvans/ty-conductor-android", "Date": "2017-04-10T17:44:22Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (file != null) { iEclipsePreferences = new org.eclipse.core.resources.ProjectScope(file.getProject()).getNode(Platform.PI_RUNTIME); iEclipsePreferences.addPreferenceChangeListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7301/buggy-version/jsonedit-core.src.main.java.com.boothen.jsonedit.core.editors.listeners.PlatformPreferenceListener.java", "BodyUseAPI": ["org.eclipse.core.resources.IFile.getProject()", "org.eclipse.core.resources.ProjectScope.getNode(Platform.PI_RUNTIME)"], "Fixed commit": "42618c02ef98d4570e3d280925ec25be4f16694e", "Url": "https://api.github.com/repos/boothen/Json-Eclipse-Plugin", "Date": "2013-06-18T06:31:41Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((waiters()) == 0) { notifyAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1813/buggy-version/EventBarrier.java", "BodyUseAPI": [], "Fixed commit": "4153cfaac286aa364dae8257bef55a71633dc0ef", "Url": "https://api.github.com/repos/srang/elevator", "Date": "2013-11-08T02:46:21Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (item0.getItemMeta().getDisplayName().equals(prepareAnvilEvent.getInventory().getRenameText())) { meta2.setDisplayName(item0.getItemMeta().getDisplayName()); }else { meta2.setDisplayName(prepareAnvilEvent.getInventory().getRenameText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6478/buggy-version/src.main.java.de.k4lly.enchant.listener.Anvil.java", "BodyUseAPI": ["org.bukkit.inventory.meta.EnchantmentStorageMeta.setDisplayName(prepareAnvilEvent.getInventory().getRenameText())", "org.bukkit.event.inventory.PrepareAnvilEvent.getInventory()", "org.bukkit.inventory.ItemStack.getItemMeta()", "item0.getItemMeta().getDisplayName()", "prepareAnvilEvent.getInventory().getRenameText()", "org.bukkit.inventory.meta.EnchantmentStorageMeta.setDisplayName(item0.getItemMeta().getDisplayName())"], "Fixed commit": "cafa14327b4097e5e8d780e45c5f9582d32f3d4b", "Url": "https://api.github.com/repos/K4LLy/k4llyEnchant", "Date": "2017-01-05T20:00:42Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((prepareAnvilEvent.getInventory().getRenameText()) == null) && (item0.getItemMeta().getDisplayName().equals(prepareAnvilEvent.getInventory().getRenameText()))) { meta2.setDisplayName(item0.getItemMeta().getDisplayName()); }else { meta2.setDisplayName(prepareAnvilEvent.getInventory().getRenameText()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6478/buggy-version/src.main.java.de.k4lly.enchant.listener.Anvil.java", "BodyUseAPI": ["prepareAnvilEvent.getInventory().getRenameText()", "org.bukkit.inventory.meta.ItemMeta.setDisplayName(prepareAnvilEvent.getInventory().getRenameText())", "org.bukkit.inventory.meta.ItemMeta.setDisplayName(item0.getItemMeta().getDisplayName())", "org.bukkit.event.inventory.PrepareAnvilEvent.getInventory()", "org.bukkit.inventory.ItemStack.getItemMeta()", "item0.getItemMeta().getDisplayName()"], "Fixed commit": "cafa14327b4097e5e8d780e45c5f9582d32f3d4b", "Url": "https://api.github.com/repos/K4LLy/k4llyEnchant", "Date": "2017-01-05T20:00:42Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["XMLParser.searchXML(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (listOfCards.isEmpty()) { MTGCard card = new MTGCard(\"Empty\", \"Empty\", \"Empty\", \"Empty\", \"Empty\", \"Empty\", \"Empty\"); return card; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6389/buggy-version/src.XMLParser.java", "BodyUseAPI": [], "Fixed commit": "1e8c4156d4ed479f5ab24cf2904c5f87f441c3cf", "Url": "https://api.github.com/repos/muglump/MTGDeck", "Date": "2013-04-30T01:44:11Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.proxy) == null) { this.proxy = eu.matejkormuth.pexel.master.PexelMaster.getInstance().getProxy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6429/buggy-version/master.src.main.java.eu.matejkormuth.pexel.master.responders.TeleportationResponder.java", "BodyUseAPI": [], "Fixed commit": "ccf506485f8981e245ab9af7f398dad73773f2ea", "Url": "https://api.github.com/repos/dobrakmato/pexel-platform", "Date": "2014-11-22T13:10:37Z"},
{"Line": "=>780", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(nameEquals(returnType.getTypeName(), \"boolean\"))) || ((returnType.dimensions()) > 0)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1493/buggy-version/src.core.lombok.eclipse.handlers.EclipseHandlerUtil.java", "BodyUseAPI": [], "Fixed commit": "34055fcdff786c9b809ce1a08c1c9218968ebc7d", "Url": "https://api.github.com/repos/velo/lombok", "Date": "2012-07-22T05:17:52Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (subParams.containsKey(\"prefix\")) filter = new cascading.operation.Debug(subParams.get(\"prefix\")); else filter = new cascading.operation.Debug();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2731/buggy-version/src.java.multitool.factory.DebugFactory.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "ddcebb83518125c22949b67a8536a2cf8e1ce21f", "Url": "https://api.github.com/repos/Cascading/cascading.multitool", "Date": "2012-05-08T18:10:12Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLayoutAnimator) == null) { mShowLayout = !(mShowLayout); animateLayout((!(mShowLayout))); viewChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8979/buggy-version/app.src.main.java.com.grarak.kerneladiutor.views.recyclerview.CardView.java", "BodyUseAPI": [], "Fixed commit": "6131b0843fc38b53cf6858b18eb9af764f5bafb9", "Url": "https://api.github.com/repos/ShivamKumarJha/KernelAdiutor", "Date": "2016-12-20T00:39:06Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloudbees.jenkins.plugins.sshcredentials.SSHUserPrivateKey.getPassphrase()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (passphrase != null) { map.put(passphraseVariable, passphrase.getPlainText()); }else { map.put(passphraseVariable, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/522/buggy-version/src.main.java.org.jenkinsci.plugins.credentialsbinding.impl.SSHUserPrivateKeyBinding.java", "BodyUseAPI": ["hudson.util.Secret.getPlainText()", "java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,passphrase.getPlainText())"], "Fixed commit": "4faa3ff0f790a62fd7566e4428d880d67c5b0d9e", "Url": "https://api.github.com/repos/jenkinsci/credentials-binding-plugin", "Date": "2016-06-24T20:34:26Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((session.getAttribute(\"spUniqueIdMap\")) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9132/buggy-version/components.application-mgt.org.wso2.carbon.identity.application.mgt.ui.src.main.java.org.wso2.carbon.identity.application.mgt.ui.util.ApplicationMgtUIUtil.java", "BodyUseAPI": [], "Fixed commit": "3dea1724925d5d4dea2a36f1a953869bc327d07d", "Url": "https://api.github.com/repos/JKAUSHALYA/carbon-identity", "Date": "2015-10-22T03:59:30Z"},
{"Line": "=>494", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<spirite.image_data.ImageWorkspace, spirite.panel_work.WorkPanel.View>.get(spirite.image_data.ImageWorkspace)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (view != null) { calibrateScrolls(); centerAtPos(view.cx, view.cy); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/886/buggy-version/src.spirite.panel_work.WorkPanel.java", "BodyUseAPI": ["spirite.panel_work.WorkPanel.centerAtPos(int,int)"], "Fixed commit": "80a6aecef478e78fd0152f49a5c560dded2e66fd", "Url": "https://api.github.com/repos/roryburks/Spirite", "Date": "2017-04-10T21:54:24Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8862/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "024be18d8e95c9b9c2b8d7154dec09ac0a631ac2", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-05T09:55:12Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (lineHeight <= 0) { lineHeight = 17; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2099/buggy-version/src-gwt.org.opencms.acacia.client.widgets.CmsRadioSelectWidget.java", "BodyUseAPI": [], "Fixed commit": "a796abde3f797d3db24745fb7f21920258aa8c4d", "Url": "https://api.github.com/repos/alkacon/opencms-core", "Date": "2016-05-13T11:58:35Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (canFill(from, (resource != null ? resource.getFluid() : null))) { if (isMaster()) { return oilTank.fill(resource, doFill); }else { return getMasterRefinery().fill(from, resource, doFill); } }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6572/buggy-version/src.pneumaticCraft.common.tileentity.TileEntityRefinery.java", "BodyUseAPI": ["net.minecraftforge.fluids.FluidTank.fill(net.minecraftforge.fluids.FluidStack,boolean)", "pneumaticCraft.common.tileentity.TileEntityRefinery.fill(net.minecraftforge.common.util.ForgeDirection,net.minecraftforge.fluids.FluidStack,boolean)"], "Fixed commit": "f8fc8de0d92c056de4880729956d046555cfbcd6", "Url": "https://api.github.com/repos/MineMaarten/PneumaticCraft", "Date": "2015-09-16T09:13:13Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mListener) != null) { mListener.editTextClicked(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3710/buggy-version/src.com.yoneko.areyouthereyet.update.AddGeoFenceFragment.java", "BodyUseAPI": [], "Fixed commit": "a59c96d0e05c9bbf3c76d283b43476c15aca3bfd", "Url": "https://api.github.com/repos/reidisaki/dumpy", "Date": "2016-11-08T23:51:01Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (f.exists()) { f.delete(); try { f.createNewFile(); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8139/buggy-version/src.trollkemada.VirtualShop.VirtualChestManager.java", "BodyUseAPI": ["java.io.File.createNewFile()", "java.io.File.delete()"], "Fixed commit": "9cb8dda4cca8694a648b0cb091296471db1828d1", "Url": "https://api.github.com/repos/Joseddg/VirtualShop", "Date": "2013-07-04T08:49:55Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gomoku.strategies.JoonasStrategy.evaluateRows()", "gomoku.strategies.JoonasStrategy.evaluateColumns()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((columnsBestCoordinates.getBestScore()) > (rowsBestCoordinates.getBestScore())) { return columnsBestCoordinates.getMove(); }else { return rowsBestCoordinates.getMove(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4144/buggy-version/src.gomoku.strategies.JoonasStrategy.java", "BodyUseAPI": ["gomoku.strategies.BestCoordinate.getMove()", "gomoku.strategies.BestCoordinate.getMove()"], "Fixed commit": "b034d93a3347da2c9f66bd26466b2979fe1d5904", "Url": "https://api.github.com/repos/Jointts/Gomoku", "Date": "2016-05-15T08:37:41Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOutOfDate()) reload();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8221/buggy-version/teacher.service-teacher.src.main.java.cn.momia.service.teacher.impl.TeacherServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "83e226213f4e3251065dc7362b511f8df5d4fea1", "Url": "https://api.github.com/repos/lovemomia/service", "Date": "2015-12-24T07:27:56Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sepPos < 0) { sepPos = origName.length(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6038/buggy-version/snap-engine-utilities.src.main.java.org.esa.snap.gpf.ReaderUtils.java", "BodyUseAPI": [], "Fixed commit": "71c41f3ebd0a4ac23918a36b5ffbca8163b9fb35", "Url": "https://api.github.com/repos/senbox-org/snap-engine", "Date": "2015-06-22T14:47:23Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextNodeInDirection.getOccupantPlayerId()) == null) { result.clear(); return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1083/buggy-version/src.kth.game.othello.simple.SimpleRules.java", "BodyUseAPI": [], "Fixed commit": "23b60b7bd6ff9a17c83cae861b66956a93e2e35b", "Url": "https://api.github.com/repos/ragnhildkarlsson/Othello", "Date": "2014-11-14T16:10:16Z"},
{"Line": "=>449", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ij.WindowManager.getCurrentImage()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((image.getNFrames()) == 1) { image.setPosition(Ch, fitThese.get(n).frame, 1); }else { image.setPosition(Ch, 1, fitThese.get(n).frame); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/298/buggy-version/src.main.java.localizeAndFit.java", "BodyUseAPI": ["ij.ImagePlus.setPosition(int,int,fitThese.get(n).frame)", "ij.ImagePlus.setPosition(int,fitThese.get(n).frame,int)"], "Fixed commit": "c5604e076e594c886289e0d1c7eebd4e08d693f4", "Url": "https://api.github.com/repos/KristofferBernhem/SMlocalizer", "Date": "2016-10-05T17:15:20Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ij.WindowManager.getCurrentImage()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((image.getNFrames()) == 1) { image.setPosition(Ch, Frame, 1); }else { image.setPosition(Ch, 1, Frame); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/298/buggy-version/src.main.java.localizeAndFit.java", "BodyUseAPI": ["ij.ImagePlus.setPosition(int,int,int)", "ij.ImagePlus.setPosition(int,int,int)"], "Fixed commit": "c5604e076e594c886289e0d1c7eebd4e08d693f4", "Url": "https://api.github.com/repos/KristofferBernhem/SMlocalizer", "Date": "2016-10-05T17:15:20Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ij.WindowManager.getCurrentImage()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((image.getNFrames()) == 1) { image.setPosition(Ch, Frame, 1); }else { image.setPosition(Ch, 1, Frame); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/298/buggy-version/src.main.java.localizeAndFit.java", "BodyUseAPI": ["ij.ImagePlus.setPosition(int,int,int)", "ij.ImagePlus.setPosition(int,int,int)"], "Fixed commit": "c5604e076e594c886289e0d1c7eebd4e08d693f4", "Url": "https://api.github.com/repos/KristofferBernhem/SMlocalizer", "Date": "2016-10-05T17:15:20Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((image.getNFrames()) == 1) { image.setPosition(Ch, Frame, 1); }else { image.setPosition(Ch, 1, Frame); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/298/buggy-version/src.main.java.BackgroundCorrection.java", "BodyUseAPI": ["ij.ImagePlus.setPosition(int,int,int)", "ij.ImagePlus.setPosition(int,int,int)"], "Fixed commit": "c5604e076e594c886289e0d1c7eebd4e08d693f4", "Url": "https://api.github.com/repos/KristofferBernhem/SMlocalizer", "Date": "2016-10-05T17:15:20Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((image.getNFrames()) == 1) { image.setPosition(Ch, Frame, 1); }else { image.setPosition(Ch, 1, Frame); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/298/buggy-version/src.main.java.BackgroundCorrection.java", "BodyUseAPI": ["ij.ImagePlus.setPosition(int,int,int)", "ij.ImagePlus.setPosition(int,int,int)"], "Fixed commit": "c5604e076e594c886289e0d1c7eebd4e08d693f4", "Url": "https://api.github.com/repos/KristofferBernhem/SMlocalizer", "Date": "2016-10-05T17:15:20Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((image.getNFrames()) == 1) { image.setPosition(Ch, Frame, 1); }else { image.setPosition(Ch, 1, Frame); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/298/buggy-version/src.main.java.BackgroundCorrection.java", "BodyUseAPI": ["ij.ImagePlus.setPosition(int,int,int)", "ij.ImagePlus.setPosition(int,int,int)"], "Fixed commit": "c5604e076e594c886289e0d1c7eebd4e08d693f4", "Url": "https://api.github.com/repos/KristofferBernhem/SMlocalizer", "Date": "2016-10-05T17:15:20Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((image.getNFrames()) == 1) { image.setPosition(Ch, Frame, 1); }else { image.setPosition(Ch, 1, Frame); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/298/buggy-version/src.main.java.BackgroundCorrection.java", "BodyUseAPI": ["ij.ImagePlus.setPosition(int,int,int)", "ij.ImagePlus.setPosition(int,int,int)"], "Fixed commit": "c5604e076e594c886289e0d1c7eebd4e08d693f4", "Url": "https://api.github.com/repos/KristofferBernhem/SMlocalizer", "Date": "2016-10-05T17:15:20Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((image.getNFrames()) == 1) { image.setPosition(Ch, Frame, 1); }else { image.setPosition(Ch, 1, Frame); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/298/buggy-version/src.main.java.BackgroundCorrection.java", "BodyUseAPI": ["ij.ImagePlus.setPosition(int,int,int)", "ij.ImagePlus.setPosition(int,int,int)"], "Fixed commit": "c5604e076e594c886289e0d1c7eebd4e08d693f4", "Url": "https://api.github.com/repos/KristofferBernhem/SMlocalizer", "Date": "2016-10-05T17:15:20Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((image.getNFrames()) == 1) { image.setPosition(Ch, Frame, 1); }else { image.setPosition(Ch, 1, Frame); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/298/buggy-version/src.main.java.BackgroundCorrection.java", "BodyUseAPI": ["ij.ImagePlus.setPosition(int,int,int)", "ij.ImagePlus.setPosition(int,int,int)"], "Fixed commit": "c5604e076e594c886289e0d1c7eebd4e08d693f4", "Url": "https://api.github.com/repos/KristofferBernhem/SMlocalizer", "Date": "2016-10-05T17:15:20Z"},
{"Line": "=>603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.sbml.jsbml.SBO.isChildOf(sboTerm, org.sbml.layoutconverter.SBMLUtil.intSBOTermForPROTEIN)) { return \"PROTEIN\"; }else if (org.sbml.jsbml.SBO.isChildOf(sboTerm, org.sbml.layoutconverter.SBMLUtil.intSBOTermForION_CHANNEL)) { return \"ION_CHANNEL\"; }else if (org.sbml.jsbml.SBO.isChildOf(sboTerm, org.sbml.layoutconverter.SBMLUtil.intSBOTermForTRUNCATED)) { return \"TRUNCATED\"; }else if (org.sbml.jsbml.SBO.isChildOf(sboTerm, org.sbml.layoutconverter.SBMLUtil.intSBOTermForRECEPTOR)) { return \"RECEPTOR\"; }else if (org.sbml.jsbml.SBO.isChildOf(sboTerm, org.sbml.layoutconverter.SBMLUtil.intSBOTermForANTISENSE_RNA)) { return \"ANTISENSE_RNA\"; }else if (org.sbml.jsbml.SBO.isChildOf(sboTerm, org.sbml.layoutconverter.SBMLUtil.intSBOTermForDEGRADED)) { return \"DEGRADED\"; }else if (org.sbml.jsbml.SBO.isChildOf(sboTerm, org.sbml.layoutconverter.SBMLUtil.intSBOTermForDRUG)) { return \"DRUG\"; }else if (org.sbml.jsbml.SBO.isChildOf(sboTerm, org.sbml.layoutconverter.SBMLUtil.intSBOTermForGENE)) { return \"GENE\"; }else if (org.sbml.jsbml.SBO.isChildOf(sboTerm, org.sbml.layoutconverter.SBMLUtil.intSBOTermForION)) { return \"ION\"; }else if (org.sbml.jsbml.SBO.isChildOf(sboTerm, org.sbml.layoutconverter.SBMLUtil.intSBOTermForPHENOTYPE)) { return \"PHENOTYPE\"; }else if (org.sbml.jsbml.SBO.isChildOf(sboTerm, org.sbml.layoutconverter.SBMLUtil.intSBOTermForRNA)) { return \"RNA\"; }else if (org.sbml.jsbml.SBO.isChildOf(sboTerm, org.sbml.layoutconverter.SBMLUtil.intSBOTermForSIMPLE_MOLECULE)) { return \"SIMPLE_MOLECULE\"; }else if (org.sbml.jsbml.SBO.isChildOf(sboTerm, org.sbml.layoutconverter.SBMLUtil.intSBOTermForCOMPLEX)) { return \"COMPLEX\"; }else if (org.sbml.jsbml.SBO.isChildOf(sboTerm, org.sbml.layoutconverter.SBMLUtil.intSBOTermForUNKNOWN)) { return \"UNKNOWN\"; }else { return \"PROTEIN\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/523/buggy-version/src.org.sbml.layoutconverter.SBMLUtil.java", "BodyUseAPI": ["org.sbml.jsbml.SBO.isChildOf(int,int)", "org.sbml.jsbml.SBO.isChildOf(int,int)", "org.sbml.jsbml.SBO.isChildOf(int,int)", "org.sbml.jsbml.SBO.isChildOf(int,int)", "org.sbml.jsbml.SBO.isChildOf(int,int)", "org.sbml.jsbml.SBO.isChildOf(int,int)", "org.sbml.jsbml.SBO.isChildOf(int,int)", "org.sbml.jsbml.SBO.isChildOf(int,int)", "org.sbml.jsbml.SBO.isChildOf(int,int)", "org.sbml.jsbml.SBO.isChildOf(int,int)", "org.sbml.jsbml.SBO.isChildOf(int,int)", "org.sbml.jsbml.SBO.isChildOf(int,int)", "org.sbml.jsbml.SBO.isChildOf(int,int)"], "Fixed commit": "9949d299e7fef7f6d6824fb2feb7fafac4216783", "Url": "https://api.github.com/repos/funasoul/celldesigner-parser", "Date": "2017-08-01T13:58:56Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eventType == null) { throw new java.lang.NullPointerException(\"The event type for a filter can not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6567/buggy-version/src.main.java.be.nabu.libs.events.impl.EventDispatcherImpl.java", "BodyUseAPI": [], "Fixed commit": "c30be48f3b86248f8039ba9ea4761f1c8f9c8eb8", "Url": "https://api.github.com/repos/nablex/events-impl", "Date": "2015-01-28T05:46:12Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eventType == null) { throw new java.lang.NullPointerException(\"The event type for a subscription can not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6567/buggy-version/src.main.java.be.nabu.libs.events.impl.EventDispatcherImpl.java", "BodyUseAPI": [], "Fixed commit": "c30be48f3b86248f8039ba9ea4761f1c8f9c8eb8", "Url": "https://api.github.com/repos/nablex/events-impl", "Date": "2015-01-28T05:46:12Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((objId != null) && (!(objId.isEmpty()))) { objId = objId.replaceAll(\":.*$\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1600/buggy-version/NewsdayMetadataMask.src.com.atex.h11.newsday.metadata.sp.CustomMetadataPanel.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "283464c1f63fe9ef2dfc534195630843e9f5995d", "Url": "https://api.github.com/repos/AtexHermesCustom/Newsday-NewsdayMetadataMask", "Date": "2015-04-10T11:09:30Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMaxRetaliate[player]) == 0) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3751/buggy-version/gunslinger.g4.GameHistory.java", "BodyUseAPI": [], "Fixed commit": "5c30dae8940cf86a377b657793d226e2cd1de96f", "Url": "https://api.github.com/repos/jrbalsano/gunslinger", "Date": "2013-09-22T21:32:05Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((dir != null) && (dir.exists())) { for (java.io.File f : dir.listFiles()) { if (f.isDirectory()) { processDirectory(f, context); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6638/buggy-version/src.main.java.com.marklogic.appdeployer.command.forests.DeployCustomForestsCommand.java", "BodyUseAPI": ["java.io.File.listFiles()"], "Fixed commit": "682b730348cbb3db5dfcde43257177b93699251b", "Url": "https://api.github.com/repos/marklogic-community/ml-app-deployer", "Date": "2016-08-02T02:20:28Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.kmelia.control.KmeliaSessionController.getPublicationDetail(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(pub2Check.isVisible())) { if (pub2Check.isNoMoreVisible()) { request.setAttribute(\"Cause\", kmelia.getString((propKeySuffix + \"noMoreVisible\"))); }else { request.setAttribute(\"Cause\", kmelia.getString((propKeySuffix + \"notYetVisible\"))); } }else if (pub2Check.isDraft()) { request.setAttribute(\"Cause\", kmelia.getString((propKeySuffix + \"draft\"))); }else if (!(pub2Check.isValid())) { request.setAttribute(\"Cause\", kmelia.getString((propKeySuffix + \"notValid\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3677/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": ["com.stratelia.webactiv.util.publication.model.PublicationDetail.isValid()", "com.stratelia.webactiv.util.publication.model.PublicationDetail.isNoMoreVisible()", "com.stratelia.webactiv.util.publication.model.PublicationDetail.isDraft()"], "Fixed commit": "a90089fdef2cee96b6e49025c61986fd856cbe14", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Components", "Date": "2016-09-07T09:26:48Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(started)) { com.bortbort.arduino.FiloFirmata.Firmata.log.error(\"Firmata library is not connected / started! Cannot send message {}\", message.getClass().getSimpleName()); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2280/buggy-version/src.main.java.com.bortbort.arduino.FiloFirmata.Firmata.java", "BodyUseAPI": [], "Fixed commit": "7bae916019cecdbe09866ee1b8e4889ae8925611", "Url": "https://api.github.com/repos/reapzor/FiloFirmata", "Date": "2016-01-19T16:46:57Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(started)) { com.bortbort.arduino.FiloFirmata.Firmata.log.error(\"Firmata library is not connected / started! Cannot send bytes {}\", com.bortbort.helpers.DataTypeHelpers.bytesToHexString(rawBytes)); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2280/buggy-version/src.main.java.com.bortbort.arduino.FiloFirmata.Firmata.java", "BodyUseAPI": [], "Fixed commit": "7bae916019cecdbe09866ee1b8e4889ae8925611", "Url": "https://api.github.com/repos/reapzor/FiloFirmata", "Date": "2016-01-19T16:46:57Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB_MR2)) { display.getSize(size); }else { size.x = display.getWidth(); size.y = display.getHeight(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7825/buggy-version/AlMoufasserAlSaghir.src.com.almoufasseralsaghir.utils.MySuperScaler.java", "BodyUseAPI": [], "Fixed commit": "d0c2f7089672d32ff7b9b09852051e7c1fafe869", "Url": "https://api.github.com/repos/SuperHich/AlMoufasserAlSaghir", "Date": "2014-07-14T14:32:38Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sa.getTextOnly(\"$\").equals(\"\"))) { phonemes = mary.getWordPhonemeList(sa.getTextOnly(\"$\"), gender); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6358/buggy-version/src.de.dfki.vsm.xtension.stickmanmarytts.util.tts.MaryStickmanPhonemes.java", "BodyUseAPI": ["de.dfki.vsm.runtime.activity.SpeechActivity.getTextOnly(java.lang.String)", "de.dfki.vsm.xtension.stickmanmarytts.util.tts.I4GMaryClient.getWordPhonemeList(sa.getTextOnly(\"$\"),Stickman.TYPE)"], "Fixed commit": "42592b200aeaf5f466a788ad09444fdf8adcd8ea", "Url": "https://api.github.com/repos/SceneMaker/VisualSceneMaker", "Date": "2016-04-18T10:01:17Z"},
{"Line": "=>944", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.emc.storageos.db.client.util.NullColumnValueGetter.isNullURI(cg.getStorageController())) { cg.setStorageController(storageSystem.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5663/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.externaldevice.ExternalBlockStorageDevice.java", "BodyUseAPI": ["com.emc.storageos.db.client.model.BlockConsistencyGroup.setStorageController(storageSystem.getId())"], "Fixed commit": "159644ff17f06e762d56ab59b6bed5c8d60a8102", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-06-17T23:52:00Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((paperchase) != null) { paperchase = marks.ForPaperchase(paperchase); }else { paperchase = new mobi.fhdo.geoschnitzeljagd.Model.Paperchase(loggedInUser.getId(), loggedInUser, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2318/buggy-version/app.src.main.java.mobi.fhdo.geoschnitzeljagd.Activities.newpaperchase.java", "BodyUseAPI": [], "Fixed commit": "5cebf7f9f623f8039bce10185364085973bed145", "Url": "https://api.github.com/repos/fdeitelhoff/GeoSchnitzeljagd", "Date": "2014-12-03T20:12:47Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ClipboardManager.getPrimaryClip()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((itm = cd.getItemAt(i)) != null) { if ((itm.getText()) != null) new_clip = itm.getText().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2372/buggy-version/ClipboardHistory.src.com.jervismuindi.clipboardhistory.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "99d9de3c8bef6d52ff008c0da2f1932f380d7069", "Url": "https://api.github.com/repos/jervisfm/ClipboardHistory", "Date": "2012-10-15T08:51:51Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mVideoView) != null) mVideoView.release(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2689/buggy-version/src.tv.avfun.PlayActivity.java", "BodyUseAPI": [], "Fixed commit": "36b3a0de15eae762a2011d20be6d0c748e699f51", "Url": "https://api.github.com/repos/jovisayhehe/acfunm", "Date": "2013-08-18T16:24:45Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (se.tribestar.mage.backend.gl.GLBackendController.GLGameState.Initialized)) start(); else resume();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/299/buggy-version/MageProject-AndroidStudio.app.src.main.java.se.tribestar.mage.backend.gl.GLBackendController.java", "BodyUseAPI": [], "Fixed commit": "f0029a8bd09ec501214544ac9e198a09c7944e63", "Url": "https://api.github.com/repos/modstam/MAGE", "Date": "2015-01-11T15:10:05Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((trimmedOutput.length()) >= (com.aptana.editor.php.formatter.PHPFormatter.PHP_PREFIX.length())) { output = leftTrim(trimmedOutput.substring(com.aptana.editor.php.formatter.PHPFormatter.PHP_PREFIX.length()), spacesCount); }else { output = com.aptana.core.util.StringUtil.EMPTY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1370/buggy-version/plugins.com.aptana.editor.php.formatter.src.com.aptana.editor.php.formatter.PHPFormatter.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()", "com.aptana.editor.php.formatter.PHPFormatter.leftTrim(java.lang.String,int)"], "Fixed commit": "d25754aadf25342e8b2efc28b03b759ab60e8eed", "Url": "https://api.github.com/repos/aptana/studio3-php", "Date": "2011-03-17T07:31:36Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value != null) { bucket.put(expiredKey, removed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1970/buggy-version/src.main.java.ru.timestop.cache.garbagecollector.CooldownedCache.java", "BodyUseAPI": [], "Fixed commit": "7937059ef44c4ff83c7930080a4d8d8474dbf8d2", "Url": "https://api.github.com/repos/NikolaevAS89/two-level-stack", "Date": "2017-04-04T15:59:20Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isAttachedToWindow()) { mWm.removeView(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/477/buggy-version/ClickToSpreadView-lib.src.main.java.com.halohoop.clicktospreadview.ClickToSpreadView.java", "BodyUseAPI": [], "Fixed commit": "e6cb9bfbead2419368a880e8b6cf51432d099c29", "Url": "https://api.github.com/repos/halohoop/ClickToSpreadView", "Date": "2016-10-29T11:51:33Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mActivity.isFinishing()) { mWm.addView(this, mLayoutParams); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/477/buggy-version/ClickToSpreadView-lib.src.main.java.com.halohoop.clicktospreadview.ClickToSpreadView.java", "BodyUseAPI": [], "Fixed commit": "e6cb9bfbead2419368a880e8b6cf51432d099c29", "Url": "https://api.github.com/repos/halohoop/ClickToSpreadView", "Date": "2016-10-29T11:51:33Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (cursor != null) { cursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6035/buggy-version/app.src.main.java.com.zhangwx.z_utils.Z_DB.DataBaseActivity.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "a7a730767c80631c9ae9f318498094bbee03df66", "Url": "https://api.github.com/repos/iamzhangweixiong/Z_Utils", "Date": "2017-05-14T10:45:03Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(note.isNew())) { noteDao.deleteNote(note); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/746/buggy-version/src.main.java.dmh.kuebiko.controller.NoteManager.java", "BodyUseAPI": ["dmh.kuebiko.model.NoteDao.deleteNote(dmh.kuebiko.model.Note)"], "Fixed commit": "2d64958a266cfa246125dafa74b36be46cc0123a", "Url": "https://api.github.com/repos/dmhuff/Kuebiko", "Date": "2012-04-08T00:15:58Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPrivate()) { if ((getOwner()) == null) { return new com.magnet.mmx.client.common.MMXPersonalTopic(getName()); }else { return new com.magnet.mmx.client.common.MMXUserTopic(getOwner(), getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6470/buggy-version/android.src.main.java.com.magnet.mmx.client.api.MMXChannel.java", "BodyUseAPI": [], "Fixed commit": "278cc827b102374c33d1ff1aee6c2702b122a3b9", "Url": "https://api.github.com/repos/magnetsystems/message-sdk-java-android", "Date": "2015-08-19T18:37:27Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((relativePath.contains(\"/\")) && isFileExpression) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2290/buggy-version/modules.resources.src.main.java.org.apache.tamaya.resource.internal.ClasspathCollector.java", "BodyUseAPI": [], "Fixed commit": "c48c5794e50b421989f9bf331864e38599cc0ced", "Url": "https://api.github.com/repos/apache/incubator-tamaya", "Date": "2015-01-11T00:39:27Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.lessvoid.nifty.screen.Screen.findControl(shipEnum.toString(),java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(shipElem.isElementEnabled())) { shipElem.reenableComponent(); shipElem.updateLevel(shipComp.getLevel()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/252/buggy-version/src.stellarclicker.app.MainGameScreenState.java", "BodyUseAPI": ["stellarclicker.app.ShipComponentElementController.reenableComponent()", "stellarclicker.app.ShipComponentElementController.updateLevel(shipComp.getLevel())"], "Fixed commit": "5b3485fd87b0b6040ea2ca576ec53b058e2e5c69", "Url": "https://api.github.com/repos/angelahnicole/Stellar-Clicker", "Date": "2016-04-14T01:14:43Z"},
{"Line": "=>251", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (initial.equals(\"*\")) { engineFen = \"*\"; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/634/buggy-version/lantern.gamestate.java", "BodyUseAPI": [], "Fixed commit": "65d968e811d816692eaeff92be6a40b6a5dd57fa", "Url": "https://api.github.com/repos/lanternbugs/lanternicc", "Date": "2017-03-16T03:46:41Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.spine3.samples.lobby.registration.order.OrderAggregate.getVersion()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (version > 0) { org.spine3.samples.lobby.registration.order.OrderAggregate.Validator.checkNewState(newState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5363/buggy-version/registration.src.main.java.org.spine3.samples.lobby.registration.order.OrderAggregate.java", "BodyUseAPI": [], "Fixed commit": "65c013bb7f810720dfbd45cbbcb08ce42545395a", "Url": "https://api.github.com/repos/SpineEventEngine/Lobby", "Date": "2015-12-17T11:26:19Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hps.recon.tracking.TrackStateUtils.getPreviousTrackStateAtSensor(org.lcsim.event.Track,java.util.List<org.lcsim.detector.tracker.silicon.HpsSiSensor>,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (tmp != null) extrapPos = org.hps.recon.tracking.TrackStateUtils.getLocationAtSensor(tmp, sensor, bfield);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6798/buggy-version/analysis.src.main.java.org.hps.analysis.tuple.TupleDriver.java", "BodyUseAPI": ["org.hps.recon.tracking.TrackStateUtils.getLocationAtSensor(org.lcsim.event.TrackState,org.lcsim.detector.tracker.silicon.HpsSiSensor,double)"], "Fixed commit": "fa0eb52a9da37594c2d3a01edf887019ef8a63fd", "Url": "https://api.github.com/repos/JeffersonLab/hps-java", "Date": "2017-11-19T03:42:55Z"},
{"Line": "=>6", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstLine == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3941/buggy-version/code.log_analyzer.src.ch.ethz.mlmq.log_analyzer.LogLineParser.java", "BodyUseAPI": [], "Fixed commit": "e4858e211527d6140430ca75b9bcea4a551e17b4", "Url": "https://api.github.com/repos/ganzm/AdvancedSystemsLab2013", "Date": "2013-11-13T02:24:38Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getWidget().getNumberOfSeries()) == 0) { seriesAndDataLabelsRendered = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9204/buggy-version/addon.src.main.java.com.vaadin.addon.charts.shared.ChartConnector.java", "BodyUseAPI": [], "Fixed commit": "f55744435217f289dd92bc3c91dd2998bc35cfbc", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jsOverlay.getSeries()) != null) { return jsOverlay.getSeries().length(); }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9204/buggy-version/addon.src.main.java.com.vaadin.addon.charts.client.ui.HighchartWidget.java", "BodyUseAPI": ["com.vaadin.addon.charts.client.ui.HighchartJsOverlay.getSeries()", "jsOverlay.getSeries().length()"], "Fixed commit": "f55744435217f289dd92bc3c91dd2998bc35cfbc", "Url": "https://api.github.com/repos/vaadin/charts", "Date": "2017-06-09T10:57:16Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (actualType == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2426/buggy-version/slp.src.slp.Environment.java", "BodyUseAPI": [], "Fixed commit": "1445a45800f3d8abb3afd2b6b55fde2b19958507", "Url": "https://api.github.com/repos/oriwa/TAU---Compilation", "Date": "2015-12-13T01:30:14Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bot.Map.getDest(bot.Direction)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (dest == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2815/buggy-version/diffusion_bot.src.bot.Bot.java", "BodyUseAPI": [], "Fixed commit": "0295f7be1540b430e7cd24c43dcde93bc2bbc905", "Url": "https://api.github.com/repos/medrimonia/PFA-Nethack", "Date": "2013-02-03T21:05:04Z"},
{"Line": "=>626", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (connectionHandle.isExpired()) { connectionHandle.internalClose(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7921/buggy-version/bonecp.src.main.java.com.jolbox.bonecp.BoneCP.java", "BodyUseAPI": ["com.jolbox.bonecp.ConnectionHandle.internalClose()"], "Fixed commit": "6532729f83bcb2d96865f9af6a2f0ea450e9b145", "Url": "https://api.github.com/repos/marktplaats-external/bonecp", "Date": "2012-06-08T15:03:05Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((zoneName.length()) != 0) java.lang.System.err.printf(\"The method \\'%s\\' corresponds a zone named \\'%s\\' which did not exist during this run.\\nIf this method is not meant to be used by a Zone, do not use the reserved method prefix \\'%s\\'.\", method_name, zoneName, prefix);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2427/buggy-version/src.vialab.SMT.SMTUtilities.java", "BodyUseAPI": ["java.io.PrintStream.printf(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "66223cf822d3b6b8f0170be906649d0478fce46e", "Url": "https://api.github.com/repos/vialab/SMT", "Date": "2013-12-12T18:23:27Z"},
{"Line": "=>654", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p != c) { mb.add(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7964/buggy-version/tetrad-gui.src.main.java.edu.cmu.tetradapp.model.GraphSelectionWrapper.java", "BodyUseAPI": ["java.util.Set<edu.cmu.tetradapp.model.Node>.add(edu.cmu.tetradapp.model.Node)"], "Fixed commit": "02e0cf5efabad0769e050e9545e33f3530f612a9", "Url": "https://api.github.com/repos/cmu-phil/tetrad", "Date": "2015-12-08T11:12:17Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(abilityButtons.get(group).isEmpty())) { groupGapCount++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8634/buggy-version/src.net.sf.hale.quickbar.QuickbarViewer.java", "BodyUseAPI": [], "Fixed commit": "c279dda6efb797b2c90d820ad03039ed8c27759f", "Url": "https://api.github.com/repos/Grokmoo/hale", "Date": "2016-09-29T21:44:48Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Float.isInfinite(scaleX)) { scaleX = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8879/buggy-version/myandroidcharts.src.main.java.org.mysinmyc.myandroidcharts.LineChart.java", "BodyUseAPI": [], "Fixed commit": "6b7e6c5a8f02b931c04f89bf29fe1a725d63844f", "Url": "https://api.github.com/repos/mysinmyc/MyAndroidCharts", "Date": "2016-11-06T13:56:11Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Float.isInfinite(scaleY)) { scaleY = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8879/buggy-version/myandroidcharts.src.main.java.org.mysinmyc.myandroidcharts.LineChart.java", "BodyUseAPI": [], "Fixed commit": "6b7e6c5a8f02b931c04f89bf29fe1a725d63844f", "Url": "https://api.github.com/repos/mysinmyc/MyAndroidCharts", "Date": "2016-11-06T13:56:11Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (uuid != null) { msg.append(\"|\"); msg.append(uuid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5654/buggy-version/namelayer-spigot.src.main.java.vg.civcraft.mc.namelayer.misc.Mercury.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "8a7947c2a4ce133be7201c11810f79548065419c", "Url": "https://api.github.com/repos/Civcraft/NameLayer", "Date": "2016-08-29T02:46:16Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event instanceof sx.blah.discord.handle.impl.events.guild.member.UserLeaveEvent) { sx.blah.discord.handle.impl.events.guild.member.UserLeaveEvent leaveEvent = ((sx.blah.discord.handle.impl.events.guild.member.UserLeaveEvent) (event)); java.lang.String secuFilesMsg = java.lang.String.format(\"@here [%s] user @%s joined our ranks\", java.time.LocalDateTime.now(), leaveEvent.getUser().getName()); com.flycatcher.securitates.MrBot.sendMessage(Constants.SECURITATES_FILES, secuFilesMsg); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8457/buggy-version/securitates-bot.src.main.java.com.flycatcher.securitates.listeners.UserChannelListener.java", "BodyUseAPI": [], "Fixed commit": "46df1bffbb8ae4fa56923852116913e1b52df3d9", "Url": "https://api.github.com/repos/alextomuta/discord-bot-manager", "Date": "2017-06-18T01:00:23Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(nr.matches(\".*\\\\d+.*\"))) { javax.swing.JOptionPane.showMessageDialog(this, \"Number cannot have letters\", \"Incorrect input\", javax.swing.JOptionPane.WARNING_MESSAGE); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8827/buggy-version/DBApplication.src.dbapplication.institute.RegisterStudyDialog.java", "BodyUseAPI": [], "Fixed commit": "7277c3a3abe27133514f5e9af8eecbc248771f5d", "Url": "https://api.github.com/repos/FabioGNR/HHSDatabaseApplications", "Date": "2016-06-17T17:43:41Z"},
{"Line": "=>1236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.folioreader.view.DirectionalViewpager.DEBUG) { android.util.Log.i(com.folioreader.view.DirectionalViewpager.TAG, logDestroyItem(pos, ((android.view.View) (ii.object)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7346/buggy-version/folioreader.src.main.java.com.folioreader.view.DirectionalViewpager.java", "BodyUseAPI": [], "Fixed commit": "f3ac81b695fbc63d43d2d5553aa6caa50a876892", "Url": "https://api.github.com/repos/codetoart/FolioReader-Android", "Date": "2016-10-21T10:48:12Z"},
{"Line": "=>1268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.folioreader.view.DirectionalViewpager.DEBUG) { android.util.Log.i(com.folioreader.view.DirectionalViewpager.TAG, logDestroyItem(pos, ((android.view.View) (ii.object)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7346/buggy-version/folioreader.src.main.java.com.folioreader.view.DirectionalViewpager.java", "BodyUseAPI": [], "Fixed commit": "f3ac81b695fbc63d43d2d5553aa6caa50a876892", "Url": "https://api.github.com/repos/codetoart/FolioReader-Android", "Date": "2016-10-21T10:48:12Z"},
{"Line": "=>1203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.folioreader.view.DirectionalViewpager.DEBUG) { android.util.Log.i(com.folioreader.view.DirectionalViewpager.TAG, logDestroyItem(pos, ((android.view.View) (ii.object)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7346/buggy-version/folioreader.src.main.java.com.folioreader.view.DirectionalViewpager.java", "BodyUseAPI": [], "Fixed commit": "f3ac81b695fbc63d43d2d5553aa6caa50a876892", "Url": "https://api.github.com/repos/codetoart/FolioReader-Android", "Date": "2016-10-21T10:48:12Z"},
{"Line": "=>1301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.folioreader.view.DirectionalViewpager.DEBUG) { android.util.Log.i(com.folioreader.view.DirectionalViewpager.TAG, logDestroyItem(pos, ((android.view.View) (ii.object)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7346/buggy-version/folioreader.src.main.java.com.folioreader.view.DirectionalViewpager.java", "BodyUseAPI": [], "Fixed commit": "f3ac81b695fbc63d43d2d5553aa6caa50a876892", "Url": "https://api.github.com/repos/codetoart/FolioReader-Android", "Date": "2016-10-21T10:48:12Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((defaultDeviceId) == null) { for (org.onosproject.net.Device device : deviceService.getAvailableDevices()) { defaultDeviceId = device.id(); break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2726/buggy-version/src.main.java.org.neatrchlab.AppComponent.java", "BodyUseAPI": [], "Fixed commit": "571ee1365e088640f54f0ce5997eb36ed13cdd44", "Url": "https://api.github.com/repos/zy-sdn/onos-stateful-p4", "Date": "2016-11-18T12:59:09Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.rows) > 0) avgRecSizeStr = java.lang.String.format(\"Average Record Size : %d \", ((this.dataSize) / (this.rows))); else avgRecSizeStr = \"Average Record Size : 0\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3898/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.client.DumpCat.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,long)"], "Fixed commit": "7e6740caefb5e899467efa68137a33da631398f6", "Url": "https://api.github.com/repos/jinfengni/incubator-drill", "Date": "2013-11-01T18:19:10Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (onSurface) { for (main.Objects.Box box : main.CustomPanel.boxes) { if (main.Math.Collisions.Collides2dPoint(x, y, box.x, box.y, ((box.x) + (box.width)), ((box.y) + (box.height)))) { main.CustomPanel.gameOver(); return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/227/buggy-version/src.main.Objects.Player.java", "BodyUseAPI": [], "Fixed commit": "1d173403ffdc0716bb7139ec4519022791fb3f61", "Url": "https://api.github.com/repos/ThereAreNoNamesLeft/FinalProject", "Date": "2017-05-28T08:09:41Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((y) - 200) > (-(main.CustomPanel.level))) { main.CustomPanel.gameOver(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/227/buggy-version/src.main.Objects.Player.java", "BodyUseAPI": [], "Fixed commit": "1d173403ffdc0716bb7139ec4519022791fb3f61", "Url": "https://api.github.com/repos/ThereAreNoNamesLeft/FinalProject", "Date": "2017-05-28T08:09:41Z"},
{"Line": "=>862", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["wyal.util.Formulae.simplify(wyal.util.Expr,wyal.util.TypeSystem)", "wyal.util.Formulae.simplify(wyal.util.Expr,wyal.util.TypeSystem)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nLhs.equals(nRhs)) { return new wyal.lang.Formula.Truth(true); }else if ((nLhs instanceof wyal.util.Expr.Polynomial) && (nRhs instanceof wyal.util.Expr.Polynomial)) { wyal.util.Expr.Polynomial pLhs = ((wyal.util.Expr.Polynomial) (nLhs)); wyal.util.Expr.Polynomial pRhs = ((wyal.util.Expr.Polynomial) (nRhs)); if ((pLhs.isConstant()) && (pRhs.isConstant())) { return wyal.util.Formulae.evaluateEquality(eq.getOpcode(), pLhs.toConstant(), pRhs.toConstant()); } }else if ((nLhs instanceof wyal.util.Expr.Constant) && (nRhs instanceof wyal.util.Expr.Constant)) { wyal.util.Value lhs_v = ((wyal.util.Expr.Constant) (nLhs)).getValue(); wyal.util.Value rhs_v = ((wyal.util.Expr.Constant) (nRhs)).getValue(); return wyal.util.Formulae.evaluateEquality(eq.getOpcode(), lhs_v, rhs_v); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4347/buggy-version/src.main.java.wyal.util.Formulae.java", "BodyUseAPI": [], "Fixed commit": "0d5417c21d11f8ad40447243c5f4f7964fa9b7d2", "Url": "https://api.github.com/repos/Whiley/WhileyTheoremProver", "Date": "2017-03-30T09:28:13Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (duration != 0) { com.aimmac23.node.RecordVideoCallable.log.info((((((((\"Finished recording - frames: \" + frames) + \" duration: \") + duration) + \" seconds targetFps: \") + (targetFramerate)) + \" actualFps: \") + (frames / duration))); }else { com.aimmac23.node.RecordVideoCallable.log.warning(\"Finished recording - video was zero length!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7384/buggy-version/src.main.java.com.aimmac23.node.RecordVideoCallable.java", "BodyUseAPI": ["java.util.logging.Logger.info(java.lang.String)"], "Fixed commit": "4ecaa8d00e259aa4097ad0b98007971ad632d7af", "Url": "https://api.github.com/repos/aimmac23/selenium-video-node", "Date": "2014-06-22T21:57:12Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(world.isRemote)) { mcjty.meecreeps.actions.ServerActionManager manager = mcjty.meecreeps.actions.ServerActionManager.getManager(); if ((actionId) != 0) { mcjty.meecreeps.actions.ActionOptions options = manager.getOptions(actionId); if (options == null) { this.setDead(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1214/buggy-version/src.main.java.mcjty.meecreeps.entities.EntityMeeCreeps.java", "BodyUseAPI": [], "Fixed commit": "fe4fa0cbdc8916ea9afe46c1ef963657746d04f5", "Url": "https://api.github.com/repos/McJtyMods/MeeCreeps", "Date": "2017-11-10T11:23:30Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((((model) != null) && ((model.getResult()) != null)) && ((model.getResult().getLattice()) != null)) && ((model.getResult().getLattice().getBottom()) != null)) && ((model.getResult().getLattice().getTop()) != null)) { double min = model.getResult().getLattice().getBottom().getMinimumInformationLoss().getValue(); double max = model.getResult().getLattice().getTop().getMaximumInformationLoss().getValue(); return (((infoLoss.getValue()) - min) / (max - min)) * 100.0; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4397/buggy-version/src.gui.org.deidentifier.arx.gui.view.impl.explore.ViewList.java", "BodyUseAPI": ["model.getResult().getLattice().getBottom().getMinimumInformationLoss()", "model.getResult().getLattice().getTop().getMaximumInformationLoss().getValue()", "model.getResult().getLattice().getBottom().getMinimumInformationLoss().getValue()", "model.getResult().getLattice()", "model.getResult().getLattice().getBottom()", "org.deidentifier.arx.gui.model.Model.getResult()", "model.getResult().getLattice().getTop()", "model.getResult().getLattice().getTop().getMaximumInformationLoss()", "model.getResult().getLattice()", "org.deidentifier.arx.gui.model.Model.getResult()"], "Fixed commit": "63f5e6c798c97d9de029eddd6cae1b7227cad147", "Url": "https://api.github.com/repos/arx-deidentifier/arx", "Date": "2014-04-10T16:57:01Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (urlName.endsWith(\".css\")) { outToClient.writeBytes(\"Content-Type: text/css\\r\\n\"); }else if (((urlName.endsWith(\".html\")) || (urlName.endsWith(\".htm\"))) || (urlName.endsWith(SERVER_PAGE_EXT))) { outToClient.writeBytes(\"Content-Type: text/html\\r\\n\"); }else { outToClient.writeBytes(\"Content-Type: text/plain\\r\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7446/buggy-version/src.webserver.WebRequestHandler.java", "BodyUseAPI": ["java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)", "java.lang.String.endsWith(java.lang.String)"], "Fixed commit": "2a9949eaf01fcb09199ca7c0d398513b71ae8b74", "Url": "https://api.github.com/repos/dsrees/database_mlb", "Date": "2015-04-28T12:20:00Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((x == 1) & (y == 1)) { java.lang.System.out.println((((((\"value of cell (\" + x) + \", \") + x) + \") is \") + (board.get(y, y)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3905/buggy-version/src.automata.conwaysgameoflife.AutomataDisplayComponent.java", "BodyUseAPI": ["automata.conwaysgameoflife.BitArray2d.get(int,int)", "java.io.PrintStream.println((((((\"value of cell (\" + x) + \", \") + x) + \") is \") + (board.get(y, y))))"], "Fixed commit": "b69bbc4089a2e8f120bdbc8f16aac1f2d637a52d", "Url": "https://api.github.com/repos/UMassCS187HH/project1-automata", "Date": "2016-10-01T03:08:16Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (readMessage[1].matches(\"\\\\d+\")) sec = java.lang.Long.parseLong(readMessage[1]); else { it.stanzino.memobot.httpServer.MainServer.sendResponse(\"Formato tempo non corretto:\\n<hh:ss> - oppure - <secondi>\"); break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8088/buggy-version/src.it.stanzino.memobot.parser.MessageExecuter.java", "BodyUseAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Fixed commit": "6bfd3ef4a91709bfbc4471d0af045b0fe903272a", "Url": "https://api.github.com/repos/IcedGarion/MemoBot", "Date": "2017-07-10T22:06:09Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Process.waitFor()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (exitCode != 0) { throw new com.google.cloud.runtimes.builder.buildsteps.base.BuildStepException(java.lang.String.format(\"Child process exited with non-zero exit code: %s\", exitCode)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2706/buggy-version/java-runtime-builder-app.src.main.java.com.google.cloud.runtimes.builder.buildsteps.script.ScriptExecutionBuildStep.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,int)"], "Fixed commit": "4ccc34e7f11ac65bdb574f2e11f1949b30dea112", "Url": "https://api.github.com/repos/GoogleCloudPlatform/runtime-builder-java", "Date": "2017-04-19T19:48:16Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((call_frequency) != 0) { createNotifications(ACTION_CALL_NOTIFICATION, call_frequency, callCounter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6455/buggy-version/InTouch.app.src.free.java.tk.talcharnes.intouch.UpdateContactInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "107baae5bd79b78ce958628a44f5c2ff3c18af6d", "Url": "https://api.github.com/repos/tal32123/InTouch", "Date": "2017-03-31T16:45:19Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((util.ShimValues.getDfsInstallDir()) != null) && (!(\"\".equals(util.ShimValues.getDfsInstallDir())))) { util.PropertyHandler.setProperty(pluginPropertiesFile, \"pmr.kettle.dfs.install.dir\", (\"/opt/pentaho/mapreduce_\" + (util.ShimValues.getDfsInstallDir()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9097/buggy-version/src.main.java.modifiers.ModifyPluginConfigProperties.java", "BodyUseAPI": [], "Fixed commit": "7b3d3dfce44f081cd113e7e58f6c50a65989f385", "Url": "https://api.github.com/repos/IChekan/ShimConfig", "Date": "2017-03-01T15:11:19Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (util.ShimValues.getHadoopVendor().equalsIgnoreCase(\"hdp\")) { request.setHeader(new org.apache.http.impl.auth.BasicScheme().authenticate(credentials, request, null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9097/buggy-version/src.main.java.util.RestClient.java", "BodyUseAPI": [], "Fixed commit": "7b3d3dfce44f081cd113e7e58f6c50a65989f385", "Url": "https://api.github.com/repos/IChekan/ShimConfig", "Date": "2017-03-01T15:11:19Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (element instanceof com.github.jcomparison.core.primitive.api.MutablePrimitive) { intermediateResult.writeAdditionalElementsOnlyInRightArray().put(arrayPosition, ((com.github.jcomparison.core.primitive.api.MutablePrimitive) (element)).get()); }else { intermediateResult.writeAdditionalElementsOnlyInRightArray().put(arrayPosition, element); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4127/buggy-version/core.src.main.java.com.github.jcomparison.core.array.impl.DefaultArrayComparator.java", "BodyUseAPI": ["intermediateResult.writeAdditionalElementsOnlyInRightArray().put(java.lang.Object,java.lang.Object)"], "Fixed commit": "95b36bae4fe7c5a9e2734b11c025b3cf4d2ab279", "Url": "https://api.github.com/repos/mmirwaldt/jcomparison", "Date": "2017-07-21T00:05:00Z"},
{"Line": "=>418", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (element instanceof com.github.jcomparison.core.primitive.api.MutablePrimitive) { intermediateResult.writeAdditionalElementsOnlyInLeftArray().put(arrayPosition, ((com.github.jcomparison.core.primitive.api.MutablePrimitive) (element)).get()); }else { intermediateResult.writeAdditionalElementsOnlyInLeftArray().put(arrayPosition, element); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4127/buggy-version/core.src.main.java.com.github.jcomparison.core.array.impl.DefaultArrayComparator.java", "BodyUseAPI": ["intermediateResult.writeAdditionalElementsOnlyInLeftArray().put(java.lang.Object,java.lang.Object)"], "Fixed commit": "95b36bae4fe7c5a9e2734b11c025b3cf4d2ab279", "Url": "https://api.github.com/repos/mmirwaldt/jcomparison", "Date": "2017-07-21T00:05:00Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (preferences.isFeedViewDefault()) { channelToView = fi.iki.murgo.irssinotifier.IrssiNotifierActivity.FEED; }else { channelToView = msg.getLogicalChannel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2651/buggy-version/Android.IrssiNotifier.src.fi.iki.murgo.irssinotifier.IrssiNotifierActivity.java", "BodyUseAPI": [], "Fixed commit": "afd99e78abfa1aa34579dcdf7ae71af8eaecdf3e", "Url": "https://api.github.com/repos/blunden/IrssiNotifier", "Date": "2012-05-07T21:18:34Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((user) != null) { tvEmailDashboard.setText(user.getEmail()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3800/buggy-version/app.src.main.java.com.educareapps.quiz.activities.DashBoardActivity.java", "BodyUseAPI": [], "Fixed commit": "1fa00772b09a3f47b3452638329827ad9b34908a", "Url": "https://api.github.com/repos/IbrarTanim/Ecommerce", "Date": "2017-09-13T07:12:52Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.optJSONObject(Cobalt.kBarsVisible)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (visible != null) setActionBarVisible(visible);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8323/buggy-version/src.main.java.org.cobaltians.cobalt.activities.CobaltActivity.java", "BodyUseAPI": ["org.cobaltians.cobalt.activities.CobaltActivity.setActionBarVisible(org.json.JSONObject)"], "Fixed commit": "5c39ed28ef34af751f347e511ea8ac33e186c74d", "Url": "https://api.github.com/repos/cobaltians/Cobalt-Android", "Date": "2016-03-10T15:41:33Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((session.isToggledHighlights()) == false) { shapes.remove(1); selRect = new client.component.DrawingRect(new java.awt.geom.Rectangle2D.Double(currentSelX, currentSelY, curFieldWidth, curFieldHeight), rectColor); shapes.add(selRect); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2291/buggy-version/src.client.component.ImageComponent.java", "BodyUseAPI": [], "Fixed commit": "1f90a5f8ee371ebc67d370dac3faf4f784e1ca4d", "Url": "https://api.github.com/repos/zaphinath/record-indexer", "Date": "2013-08-12T21:35:44Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (outLog.exists()) { if ((java.nio.file.Files.size(java.nio.file.Paths.get(outLog.getPath()))) > ((10 * 1024) * 1024)) { runwar.Server.log.info(((((\"Log is over 10MB, moving \" + (outLog.getPath())) + \" to \") + (outLog.getPath())) + \".bak\")); java.nio.file.Files.move(java.nio.file.Paths.get(outLog.getPath()), java.nio.file.Paths.get(((outLog.getPath()) + \".bak\")), java.nio.file.StandardCopyOption.REPLACE_EXISTING); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/424/buggy-version/src.runwar.Server.java", "BodyUseAPI": ["java.io.File.getPath()", "java.nio.file.Paths.get(java.lang.String)", "java.io.File.getPath()", "java.nio.file.Paths.get(java.lang.String)", "java.io.File.getPath()", "runwar.logging.Logger.info(java.lang.String)", "java.io.File.getPath()", "java.nio.file.Paths.get(java.lang.String)", "java.nio.file.Files.size(java.nio.file.Path)", "java.nio.file.Files.move(java.nio.file.Path,java.nio.file.Path,java.nio.file.StandardCopyOption)", "java.io.File.getPath()"], "Fixed commit": "d2b58b3de71e110d4b56bf9324f75c78f4769947", "Url": "https://api.github.com/repos/cfmlprojects/runwar", "Date": "2016-06-02T04:10:25Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["QuadTreeNode<T>.remove(int,int,int,int,T)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (removed != null) { (quadtreeSize)--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3938/buggy-version/src.PRQuadTree.java", "BodyUseAPI": [], "Fixed commit": "b21f36ddc6caeef9085269480e7440a11195db84", "Url": "https://api.github.com/repos/dszero/Project2", "Date": "2017-10-22T19:29:01Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.core.resources.IProject.getFolder(ArduinoConst.WORKSPACE_LIB_FOLDER)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (link.exists()) { for (org.eclipse.core.resources.IResource curResource : link.members()) { ret.add(curResource.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7593/buggy-version/it.baeyens.arduino.core.src.it.baeyens.arduino.tools.ArduinoLibraries.java", "BodyUseAPI": ["org.eclipse.core.resources.IFolder.members()"], "Fixed commit": "7a909f2ed8df297b7a5093e5716176bea63a348e", "Url": "https://api.github.com/repos/massimiliano76/arduino-eclipse-plugin", "Date": "2015-04-17T12:41:42Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mm.back.dto.DeviceRecordDto.getCollectTime()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isNotBlank(collectTime)) { collectDate = com.mm.back.utils.DateUtils.getDate(collectTime, DateUtils.YMD_HMS_FORMAT_DIAS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5332/buggy-version/src.main.java.com.mm.back.service.impl.DeviceRecordServiceImpl.java", "BodyUseAPI": ["com.mm.back.utils.DateUtils.getDate(java.lang.String,DateUtils.YMD_HMS_FORMAT_DIAS)"], "Fixed commit": "49294bd56109a3ef4fa36303322fdf6a09340329", "Url": "https://api.github.com/repos/chyl2005/collect-back", "Date": "2017-07-01T14:30:38Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((exerciseProject) instanceof kr.namoosori.naite.ri.plugin.core.service.domain.StudentProject)) { exerciseProject.setFileName(fileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4425/buggy-version/kr.namoosori.naite.ri.plugin.core.src.kr.namoosori.naite.ri.plugin.core.project.NaiteProject.java", "BodyUseAPI": [], "Fixed commit": "2093705ece935c025b2e5c9d3a000dd8cbf2c454", "Url": "https://api.github.com/repos/hanseongyoung/naite", "Date": "2014-06-19T11:15:14Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!setted) { instance.object = me.gerenciar.sjson.util.ReflectionHelper.generateBasicValue(mapItemValue, instance.object); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2486/buggy-version/src.me.gerenciar.sjson.parser.Reader.java", "BodyUseAPI": [], "Fixed commit": "3433790b0cdd4426dd67882768dea04f1dcb4ff1", "Url": "https://api.github.com/repos/daviarimateia93/GerenciarmeSJSON", "Date": "2016-01-12T12:06:24Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CommandParser.splitInput(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((params.size()) == 0) { CommandParser.log.log(java.util.logging.Level.INFO, \"aborting parsing because there are no params\\n\"); throw new java.lang.Exception(CommandParser.ERROR_NOTHING_ENTERED); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8280/buggy-version/CommandParser.java", "BodyUseAPI": [], "Fixed commit": "eba5eeb6e6a853a6b72d035c566ee72807aec2cd", "Url": "https://api.github.com/repos/cs2103aug2015-t13-1j/main", "Date": "2015-11-09T14:57:35Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.proest.lp2go3.UAVTalk.UAVTalkObjectInstance.getData()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (data == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1125/buggy-version/app.src.main.java.net.proest.lp2go3.UAVTalk.UAVTalkDeviceHelper.java", "BodyUseAPI": [], "Fixed commit": "fbf3bb955c7d1a66ae5a0fbece52a0a4145c54db", "Url": "https://api.github.com/repos/MarcProe/lp2go", "Date": "2016-03-08T19:15:56Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newPath.isEmpty()) { if (newValue.isArray()) { throw new com.github.fge.jsonpatch.JsonPatchException(com.github.fge.jsonpatch.BUNDLE.getMessage(\"jsonPatch.noSuchIndex\")); }else { java.util.List<java.lang.String> fieldNames = com.google.common.collect.Lists.newArrayList(newValue.fieldNames()); for (java.lang.String fieldName : fieldNames) { ((com.fasterxml.jackson.databind.node.ObjectNode) (ret)).put(fieldName, newValue.get(fieldName)); } } }else { java.lang.String lastOfPath = com.google.common.collect.Iterables.getLast(newPath).getToken().getRaw(); if (newPath.get(ret).isObject()) { target = newPath.get(ret); }else { target = newPath.parent().get(ret); } if (lastOfPath.equals(\"-\")) { if (newValue.isArray()) { throw new com.github.fge.jsonpatch.JsonPatchException(com.github.fge.jsonpatch.BUNDLE.getMessage(\"jsonPatch.noSuchIndex\")); } }else if (lastOfPath.matches(\"[0-9]+\")) { if (newValue.isObject()) { java.util.List<java.lang.String> fieldNames = com.google.common.collect.Lists.newArrayList(newValue.fieldNames()); for (java.lang.String fieldName : fieldNames) { ((com.fasterxml.jackson.databind.node.ObjectNode) (target)).put(fieldName, newValue.get(fieldName)); } }else { throw new com.github.fge.jsonpatch.JsonPatchException(com.github.fge.jsonpatch.BUNDLE.getMessage(\"jsonPatch.noSuchIndex\")); } }else { ((com.fasterxml.jackson.databind.node.ObjectNode) (target)).put(lastOfPath, newValue); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7755/buggy-version/src.main.java.com.github.fge.jsonpatch.AddOperation.java", "BodyUseAPI": ["com.google.common.collect.Iterables.getLast(newPath).getToken().getRaw()", "com.google.common.collect.Iterables.getLast(newPath).getToken()", "newPath.parent().get(com.fasterxml.jackson.databind.JsonNode)", "com.google.common.collect.Iterables.getLast(com.github.fge.jackson.jsonpointer.JsonPointer)", "newPath.get(ret).isObject()", "com.github.fge.jackson.jsonpointer.JsonPointer.get(com.fasterxml.jackson.databind.JsonNode)", "com.github.fge.jackson.jsonpointer.JsonPointer.get(com.fasterxml.jackson.databind.JsonNode)", "com.github.fge.jackson.jsonpointer.JsonPointer.parent()"], "Fixed commit": "7f9ec789a713bb11031af4e83f75504c145cb7c2", "Url": "https://api.github.com/repos/fritesh/json-patch", "Date": "2017-11-08T06:04:46Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((x == null) && (!(holder[0].hasNext()))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7274/buggy-version/src.java.simpledb.Join.java", "BodyUseAPI": [], "Fixed commit": "3bc567ba35f027132cd420394bc990f3b47ecce6", "Url": "https://api.github.com/repos/gani-b/dataBase", "Date": "2013-11-06T03:30:19Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (hasIP) { this.ip = ip; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2876/buggy-version/Main.java", "BodyUseAPI": [], "Fixed commit": "4dd1d44a90418411dec96a8e90a3d95e98aaf244", "Url": "https://api.github.com/repos/waldemarduarte/Pong", "Date": "2014-08-24T04:34:13Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentUsers.length()) > 0) { currentUsers += \", \"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2859/buggy-version/TTM4100.src.application.ServerSocketThread.java", "BodyUseAPI": [], "Fixed commit": "9e6b46c6bf1f8bd91683894799704e32d51288f8", "Url": "https://api.github.com/repos/skaugvoll/TTM4100-Project", "Date": "2016-03-11T10:56:14Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Global.root.getHearingRootPanel1().getjTabbedPane1().getSelectedIndex()) == 0) Global.root.getHearingRootPanel1().getActivityPanel1().loadAllHearingActivity();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1979/buggy-version/src.main.java.parker.serb.Hearing.HearingHeaderPanel.java", "BodyUseAPI": [], "Fixed commit": "e0b555fd5ed1bec176b967190170e1b931dca8d6", "Url": "https://api.github.com/repos/CurrentlyNotSet/SERB", "Date": "2016-11-29T03:20:22Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mReactionDetectionListeners.isEmpty())) { android.util.Log.v(TAG, (\"Detected \" + (reaction.name()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6132/buggy-version/app.src.main.java.com.truethat.android.empathy.BaseReactionDetectionManager.java", "BodyUseAPI": [], "Fixed commit": "6928c4a45a7a173aa5ed7a3c99bd40d75d92bf9f", "Url": "https://api.github.com/repos/true-that/android", "Date": "2017-08-20T13:07:06Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mReactionDetectionListeners.isEmpty()) { android.util.Log.v(TAG, \"Stopping detection.\"); mState = com.truethat.android.empathy.BaseReactionDetectionManager.State.IDLE; }else { android.util.Log.v(TAG, ((((\"Not stopping: \" + (mReactionDetectionListeners.size())) + \" listeners left (such as \") + (mReactionDetectionListeners.iterator().next().getClass().getSimpleName())) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6132/buggy-version/app.src.main.java.com.truethat.android.empathy.BaseReactionDetectionManager.java", "BodyUseAPI": ["mReactionDetectionListeners.iterator().next().getClass().getSimpleName()", "android.util.Log.v(java.lang.String,((((\"Not stopping: \" + (mReactionDetectionListeners.size())) + \" listeners left (such as \") + (mReactionDetectionListeners.iterator().next().getClass().getSimpleName())) + \")\"))", "mReactionDetectionListeners.iterator().next()", "mReactionDetectionListeners.iterator().next().getClass()", "java.util.Set<com.truethat.android.empathy.ReactionDetectionListener>.size()", "java.util.Set<com.truethat.android.empathy.ReactionDetectionListener>.iterator()"], "Fixed commit": "6928c4a45a7a173aa5ed7a3c99bd40d75d92bf9f", "Url": "https://api.github.com/repos/true-that/android", "Date": "2017-08-20T13:07:06Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.text.TextUtils.isEmpty(mAppointment.getStatus())) && (\"1\".equals(mAppointment.getStatus()))) { mChangeStateBtn.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/359/buggy-version/crm.src.main.java.com.ogg.crm.ui.activity.AppointmentDetailActivity.java", "BodyUseAPI": [], "Fixed commit": "34104b42b3a9c9c7fff69adfcea3a54897336fb7", "Url": "https://api.github.com/repos/xiguofeng/Crm", "Date": "2015-12-15T02:25:54Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temp.tokenStr.equals(\"if\")) { res = ifStmt(bExecuting); switch (res.terminatingStr) { case \"else\" : if (res.getInternalValue().equals(\"T\")) res = elseStmt(false); else res = elseStmt(bExecuting); break; case \"return\" : return res; case \"break\" : return res; case \"continue\" : return res; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6592/buggy-version/src.havaBol.Parser.java", "BodyUseAPI": [], "Fixed commit": "8718feccd9a1c6eb788814669bf5c550c5e3177f", "Url": "https://api.github.com/repos/CodeMonkeyReport/S2017_HavaBol_Compiler", "Date": "2017-04-27T21:09:40Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bean.getNode()) != null) { sysTreeService.update(bean.getNode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/295/buggy-version/workspace.glaf-base.src.main.java.com.glaf.base.modules.sys.service.mybatis.SysApplicationServiceImpl.java", "BodyUseAPI": ["com.glaf.base.modules.sys.service.mybatis.SysApplication.getNode()", "com.glaf.base.modules.sys.service.mybatis.SysTreeService.update(bean.getNode())"], "Fixed commit": "2636a2c10e1b9f5c16a7d1d38543991b25ddbc9b", "Url": "https://api.github.com/repos/jior/glaf", "Date": "2013-03-14T03:04:54Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (value instanceof java.lang.Number) { stringBuilder.append(numberFormat.format(value)); }else if (value instanceof java.lang.Boolean) { stringBuilder.append(value); }else { stringBuilder.append(\"\\\"\").append(escapeField(value.toString())).append(\"\\\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4681/buggy-version/metrics-influxdb.src.main.java.com.izettle.metrics.influxdb.utils.InfluxDbWriteObjectSerializer.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.text.NumberFormat.format(java.lang.Object)", "java.lang.StringBuilder.append(java.lang.String)", "com.izettle.metrics.influxdb.utils.InfluxDbWriteObjectSerializer.escapeField(java.lang.String)", "java.lang.StringBuilder.append(java.lang.Object)", "java.lang.Object.toString()", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "83dd76cd6036331ebcf37dace9ef10dd4af48033", "Url": "https://api.github.com/repos/iZettle/dropwizard-metrics-influxdb", "Date": "2016-04-15T16:34:17Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (button.getText().equals(\">\")) { from = value1; fromUnit = ((edu.uib.info231.model.Unit) (unit1.getSelectedItem())); to = value2; toUnit = ((edu.uib.info231.model.Unit) (unit2.getSelectedItem())); }else { from = value2; fromUnit = ((edu.uib.info231.model.Unit) (unit2.getSelectedItem())); to = value1; toUnit = ((edu.uib.info231.model.Unit) (unit1.getSelectedItem())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8346/buggy-version/src.edu.uib.info231.gui.ConverterFrame.java", "BodyUseAPI": [], "Fixed commit": "5d0e46749861115a89160b9b2dd95f70cedf9440", "Url": "https://api.github.com/repos/EivindEE/converter", "Date": "2013-01-24T12:20:04Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((periodList.get(position)) instanceof com.sample.drawer.database.Period)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/585/buggy-version/app.src.main.java.com.sample.drawer.adapter.ScheduleRecyclerViewAdapter.java", "BodyUseAPI": [], "Fixed commit": "577c0735b513d9c9821932ef2ce11145a9d886a6", "Url": "https://api.github.com/repos/SerG3z/Schedule_for_the_University", "Date": "2016-04-06T18:13:20Z"},
{"Line": "=>780", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expression instanceof com.ge.research.sadl.sADL.Unit) { value = ((com.ge.research.sadl.sADL.Unit) (expression)).getValue().getValue(); java.lang.String unit = ((com.ge.research.sadl.sADL.Unit) (expression)).getUnit(); com.ge.research.sadl.model.ConceptName uqcn = new com.ge.research.sadl.model.ConceptName(JenaBasedSadlModelProcessor.SADL_IMPLICIT_MODEL_UNITTEDQUANTITY_URI); java.util.List<com.ge.research.sadl.model.ConceptName> impliedProperties = getImpliedProperties(theJenaModel.getOntResource(uqcn.getUri())); if (impliedProperties != null) { return new com.ge.research.sadl.jena.JenaBasedSadlModelValidator.TypeCheckInfo(uqcn, uqcn, impliedProperties, this, expression); }else { return new com.ge.research.sadl.jena.JenaBasedSadlModelValidator.TypeCheckInfo(uqcn, uqcn, this, expression); } }else { value = ((com.ge.research.sadl.sADL.NumberLiteral) (expression)).getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4526/buggy-version/sadl3.com.ge.research.sadl.parent.com.ge.research.sadl.jena.src.com.ge.research.sadl.jena.JenaBasedSadlModelValidator.java", "BodyUseAPI": [], "Fixed commit": "6b052db0aafbe86a1e21da9bed930785ab5ff5dc", "Url": "https://api.github.com/repos/crapo/sadlos2", "Date": "2016-10-11T20:34:52Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (kw != null) { org.spo.fw.launch.SeleniumScriptLauncher.executeSeleniumScriptInline(kw.getDriver(), script, scope_ids); }else { org.spo.fw.launch.SeleniumScriptLauncher.launchScript(script, org.spo.fw.config.SessionContext.snapshotStrategy()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6792/buggy-version/src.main.java.org.spo.fw.launch.CustomScriptProvider.java", "BodyUseAPI": ["org.spo.fw.launch.SeleniumScriptLauncher.executeSeleniumScriptInline(kw.getDriver(),org.spo.fw.itf.SeleniumScript,java.util.List)", "org.spo.fw.web.KeyWords.getDriver()"], "Fixed commit": "4894a58896b2e02a724070d547659af6f74ef128", "Url": "https://api.github.com/repos/premganz/SeleniumPageObjects", "Date": "2015-08-05T13:37:47Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getActivity()) instanceof com.smassive.daggerworkshopgdg.app.view.activity.ComicDetailActivity) { ((com.smassive.daggerworkshopgdg.app.view.activity.ComicDetailActivity) (getActivity())).getComicsComponent().inject(this); }else { ((com.smassive.daggerworkshopgdg.app.view.activity.MainActivity) (getActivity())).getComicsComponent().inject(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/418/buggy-version/app.src.main.java.com.smassive.daggerworkshopgdg.app.view.fragment.ComicDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "3d8941dec323a0bed4d75ed87e61758cdddec1ee", "Url": "https://api.github.com/repos/SmasSive/DaggerWorkshopGDG", "Date": "2016-05-08T16:07:39Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(\"serverresponse\")) { GUI.setResult(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5168/buggy-version/Helenus_Client.src.ConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "ff83975856f91d70f1117556237d00548da9c58f", "Url": "https://api.github.com/repos/christian-com-techniques/Helenus_Client", "Date": "2013-12-02T23:13:05Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getChildNodes()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (n.item(i).getNodeName().equals(\"type\")) { type = n.item(i).getTextContent(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5168/buggy-version/Helenus_Client.src.ConnectionHandler.java", "BodyUseAPI": ["org.w3c.dom.Node.getTextContent()", "org.w3c.dom.NodeList.item(int)"], "Fixed commit": "ff83975856f91d70f1117556237d00548da9c58f", "Url": "https://api.github.com/repos/christian-com-techniques/Helenus_Client", "Date": "2013-12-02T23:13:05Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(BackupType.zk.name().equalsIgnoreCase(backupType))) { java.io.File backupSystemTableDir = new java.io.File(tmpBackupDataDir, BackupConstants.DB_SYSTEM_TABLE_FOLDER); java.io.File systemTableDir = new java.io.File(viprDataDir.getParentFile(), BackupConstants.DB_SYSTEM_TABLE_FOLDER); java.nio.file.Files.move(backupSystemTableDir.toPath(), systemTableDir.toPath(), java.nio.file.StandardCopyOption.REPLACE_EXISTING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1903/buggy-version/internalLibraries.backup.src.main.java.com.emc.storageos.management.backup.RestoreHandler.java", "BodyUseAPI": [], "Fixed commit": "050ff823d8b2c0eb18a1282c1d34580d48cdbbf2", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-11T03:54:43Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) != null) { adapter.clear(); adapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7872/buggy-version/src.eu.trentorise.smartcampus.ifame.activity.Recensioni_Activity.java", "BodyUseAPI": [], "Fixed commit": "f823ac4959117acdf5540bac49ee3b3c65b06b8a", "Url": "https://api.github.com/repos/smartcampuslab/smartcampus.vas.ifame.android", "Date": "2013-07-04T15:53:27Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eu.trentorise.smartcampus.ifame.utils.ConnectionUtils.isOnline(this)) { new eu.trentorise.smartcampus.ifame.activity.Recensioni_Activity.GetGiudizioConnector(this).execute(mensa.getMensa_id(), piatto.getPiatto_id()); }else { android.widget.Toast.makeText(this, \"Controlla la tua connessione ad internet!\", Toast.LENGTH_LONG).show(); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7872/buggy-version/src.eu.trentorise.smartcampus.ifame.activity.Recensioni_Activity.java", "BodyUseAPI": [], "Fixed commit": "f823ac4959117acdf5540bac49ee3b3c65b06b8a", "Url": "https://api.github.com/repos/smartcampuslab/smartcampus.vas.ifame.android", "Date": "2013-07-04T15:53:27Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (td.exists()) { grisu.backend.model.FileSystemCache.myLogger.error((\"Could not create temporary directory: \" + tempDir)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7448/buggy-version/grisu-core.src.main.java.grisu.backend.model.FileSystemCache.java", "BodyUseAPI": [], "Fixed commit": "6ac1ce151b9257cf2bd47735f633beb2834a3e5b", "Url": "https://api.github.com/repos/sharayumungel/grisu", "Date": "2013-01-10T04:46:02Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(td.isDirectory())) { grisu.backend.model.FileSystemCache.myLogger.error((\"Temporary directory is not directory: \" + tempDir)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7448/buggy-version/grisu-core.src.main.java.grisu.backend.model.FileSystemCache.java", "BodyUseAPI": [], "Fixed commit": "6ac1ce151b9257cf2bd47735f633beb2834a3e5b", "Url": "https://api.github.com/repos/sharayumungel/grisu", "Date": "2013-01-10T04:46:02Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(td.canWrite())) { grisu.backend.model.FileSystemCache.myLogger.error((\"Can't write to temporary directory: \" + tempDir)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7448/buggy-version/grisu-core.src.main.java.grisu.backend.model.FileSystemCache.java", "BodyUseAPI": [], "Fixed commit": "6ac1ce151b9257cf2bd47735f633beb2834a3e5b", "Url": "https://api.github.com/repos/sharayumungel/grisu", "Date": "2013-01-10T04:46:02Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!present) { org.cytoscape.model.CyEdge cyEdge = network.addEdge(e.getCySource(), e.getCyTarget(), false); e.setCyEdge(cyEdge); for (java.lang.String str : e.getAttributes().keySet()) { if ((network.getRow(cyEdge).getTable().getColumn(str)) == null) { network.getRow(cyEdge).getTable().createColumn(str, java.lang.String.class, false); } network.getRow(cyEdge).set(str, e.getAttributes().get(str)); } network.getRow(cyEdge).set(\"datasource\", e.getDs().getName()); r.getDs().getEdges().add(cyEdge); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6182/buggy-version/cytargetlinker.src.main.java.org.cytargetlinker.app.internal.data.ExtensionStep.java", "BodyUseAPI": [], "Fixed commit": "c8ff034002aaa1c1b5cfb7fc7c5503f0541793ca", "Url": "https://api.github.com/repos/mkutmon/cytargetlinker", "Date": "2013-08-07T07:25:06Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.wahtod.wififixer.utility.WFScanResult.fromScanResultArray(wm.getScanResults())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (scanned != null) { java.util.Collections.sort(scanned, new org.wahtod.wififixer.ui.LocalNetworksLoader.SortBySignal()); return scanned; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7523/buggy-version/wififixer.src.org.wahtod.wififixer.ui.LocalNetworksLoader.java", "BodyUseAPI": ["java.util.Collections.sort(java.util.List<org.wahtod.wififixer.utility.WFScanResult>,org.wahtod.wififixer.ui.LocalNetworksLoader.SortBySignal)"], "Fixed commit": "6abbd0d40bd0805e4eb32bbf37fb7720108bf581", "Url": "https://api.github.com/repos/Zanshinmu/Wifi-Fixer", "Date": "2013-09-16T23:41:08Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.size) != null) && ((env) != null)) { gl.glScaled((1 / factor), (1 / factor), (1 / factor)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6131/buggy-version/ummisco.gama.opengl.src.ummisco.gama.opengl.scene.RessourceObject.java", "BodyUseAPI": [], "Fixed commit": "7187494633b8039444754a41802027e8e902f411", "Url": "https://api.github.com/repos/gama-platform/gama", "Date": "2016-01-21T04:57:40Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (view.isZooming()) { activity.changeZoom(((view.getZoom()) + 2)); }else { activity.changeZoom(((view.getZoom()) + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/616/buggy-version/OsmAnd.src.net.osmand.plus.views.MapControlsLayer.java", "BodyUseAPI": ["net.osmand.plus.views.OsmandMapTileView.getZoom()", "net.osmand.plus.activities.MapActivity.changeZoom(((view.getZoom()) + 1))", "net.osmand.plus.views.OsmandMapTileView.getZoom()", "net.osmand.plus.activities.MapActivity.changeZoom(((view.getZoom()) + 2))"], "Fixed commit": "94d083decdd219dea72e41c1cfc3b22eaaf1a004", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2011-06-13T21:02:17Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.admin.seco.jobroom.repository.JobOfferRepository.findOne(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (jobOffer == null) { return org.springframework.http.ResponseEntity.status(HttpStatus.NOT_FOUND).body(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5969/buggy-version/src.main.java.ch.admin.seco.jobroom.controller.JobOfferController.java", "BodyUseAPI": [], "Fixed commit": "d59286c0723dc3699689bbd7a43eaa2b22470cf3", "Url": "https://api.github.com/repos/alv-ch/jobroom-api", "Date": "2016-07-22T14:19:42Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9057/buggy-version/java.thejh.prettyJava.LineWorker.java", "BodyUseAPI": [], "Fixed commit": "c6295b3714b8f02b5f8a6bae2fc6ab293b92f454", "Url": "https://api.github.com/repos/thejh/pretty-java", "Date": "2011-06-26T15:22:18Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tranquvis.simplesmsremote.Data.DataManager.userData) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4698/buggy-version/app.src.main.java.tranquvis.simplesmsremote.Data.DataManager.java", "BodyUseAPI": [], "Fixed commit": "5188b53f5c5296e54512e677ccb64fba6d06096e", "Url": "https://api.github.com/repos/tranquvis/SimpleSmsRemote", "Date": "2017-05-31T16:51:40Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((phones.size()) > i) phones.set(i, editText.getText().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4698/buggy-version/app.src.main.java.tranquvis.simplesmsremote.Adapters.GrantedPhonesEditableListAdapter.java", "BodyUseAPI": ["java.util.List<java.lang.String>.set(int,editText.getText().toString())"], "Fixed commit": "5188b53f5c5296e54512e677ccb64fba6d06096e", "Url": "https://api.github.com/repos/tranquvis/SimpleSmsRemote", "Date": "2017-05-31T16:51:40Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userData) == null) { startActivity(new android.content.Intent(this, tranquvis.simplesmsremote.Activities.MainActivity.class)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/4698/buggy-version/app.src.main.java.tranquvis.simplesmsremote.Activities.ModuleActivity.java", "BodyUseAPI": [], "Fixed commit": "5188b53f5c5296e54512e677ccb64fba6d06096e", "Url": "https://api.github.com/repos/tranquvis/SimpleSmsRemote", "Date": "2017-05-31T16:51:40Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.terasology.questing.QuestingSystem.questAmount) != (org.terasology.questing.QuestingSystem.currentQuest)) { if (stackID.equals(org.terasology.questing.QuestingSystem.goals[org.terasology.questing.QuestingSystem.currentQuest])) { org.terasology.questing.QuestingSystem.logger.info(\"Quest finished!\"); org.terasology.questing.QuestingSystem.currentQuest += 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6972/buggy-version/mods.questing.src.main.java.org.terasology.questing.QuestingSystem.java", "BodyUseAPI": [], "Fixed commit": "07cfe5d7880745854ba11a466e0541a5207e9738", "Url": "https://api.github.com/repos/jobernolte/Terasology", "Date": "2013-06-10T23:35:27Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mGUI.getTemperature()) != null) mGUI.setWeatherInternetError();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7940/buggy-version/src.de.fhdw.bfwi412a.geopfad.ActivityStart.java", "BodyUseAPI": ["de.fhdw.bfwi412a.geopfad.ActivityStartGUI.setWeatherInternetError()"], "Fixed commit": "0ed31c1c9bc349a39ba3e8fabd1ef38d7c790b9a", "Url": "https://api.github.com/repos/matthiasgordon/Android_GeoPfad2", "Date": "2014-09-09T07:10:21Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resIms.getSize()) > 1) { resImp = ij.plugin.HyperStackConverter.toHyperStack(resImp, nChannels, nSlices, nFrames, \"xyztc\", \"grayscale\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1741/buggy-version/src.main.java.fntd.access.AccessImage.java", "BodyUseAPI": [], "Fixed commit": "e7348ac1435c719ec6d7397026e8659149a96744", "Url": "https://api.github.com/repos/FNTD/Java-library", "Date": "2015-11-23T15:40:04Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resIms.getSize()) > 1) { resImp = ij.plugin.HyperStackConverter.toHyperStack(resImp, imp.getNChannels(), imp.getNSlices(), imp.getNFrames(), \"xyztc\", \"grayscale\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1741/buggy-version/src.main.java.fntd.background.Background.java", "BodyUseAPI": [], "Fixed commit": "e7348ac1435c719ec6d7397026e8659149a96744", "Url": "https://api.github.com/repos/FNTD/Java-library", "Date": "2015-11-23T15:40:04Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (langParam.equalsIgnoreCase(\"iw\")) { return this.languageCodes.contains(\"he\"); }else if (langParam.equalsIgnoreCase(\"in\")) { return this.languageCodes.contains(\"id\"); }else { return this.languageCodes.contains(langParam); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9239/buggy-version/step-core.src.main.java.com.tyndalehouse.step.core.service.impl.LanguageServiceImpl.java", "BodyUseAPI": ["java.util.Set<java.lang.String>.contains(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "02834838562e4b97571cb247df34e656e9d8fde1", "Url": "https://api.github.com/repos/tyndale/step", "Date": "2014-06-09T09:41:51Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mobicage.rogerthat.ServiceBoundActivity.findViewById(R.id.nav_view)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (navigationView == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5170/buggy-version/rogerthat.src.main.java.com.mobicage.rogerthat.ServiceBoundActivity.java", "BodyUseAPI": [], "Fixed commit": "a98b9c0f9b56c17532c29ebc7bcce84c9541acd3", "Url": "https://api.github.com/repos/rogerthat-platform/rogerthat-android-client", "Date": "2016-09-14T12:13:44Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.design.widget.NavigationView.getMenu()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (menu == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5170/buggy-version/rogerthat.src.main.java.com.mobicage.rogerthat.ServiceBoundActivity.java", "BodyUseAPI": [], "Fixed commit": "a98b9c0f9b56c17532c29ebc7bcce84c9541acd3", "Url": "https://api.github.com/repos/rogerthat-platform/rogerthat-android-client", "Date": "2016-09-14T12:13:44Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useAppBar()) { setContentView(getLayout()); }else { setContentViewWithoutNavigationBar(getLayout()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5170/buggy-version/rogerthat.src.main.java.com.mobicage.rogerthat.FriendsActivity.java", "BodyUseAPI": [], "Fixed commit": "a98b9c0f9b56c17532c29ebc7bcce84c9541acd3", "Url": "https://api.github.com/repos/rogerthat-platform/rogerthat-android-client", "Date": "2016-09-14T12:13:44Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.netmgt.provision.persist.DirectoryWatcher<org.opennms.netmgt.provision.persist.requisition.Requisition>.getContents(resource.getFilename())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (req == null) { org.opennms.netmgt.provision.persist.FasterFilesystemForeignSourceRepository.LOG.debug(\"importResourceRequisition: the requisition {} is not on the cache, falling back to disk.\", resource.getFilename()); return super.importResourceRequisition(resource); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/9121/buggy-version/opennms-provision.opennms-provision-persistence.src.main.java.org.opennms.netmgt.provision.persist.FasterFilesystemForeignSourceRepository.java", "BodyUseAPI": [], "Fixed commit": "62a384304faea1e9a61bc6d6fa81dc7638104c6b", "Url": "https://api.github.com/repos/OpenNMS/opennms", "Date": "2015-10-28T13:04:01Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.Bundle.getParcelable(getResources().getString(R.string.cover_image))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (bmp != null) { coverImageView.setImageBitmap(bmp); mBackdropSlider.setVisibility(View.VISIBLE); changedScreenColors(bmp); }else { com.squareup.picasso.Target target = new com.squareup.picasso.Target() { @java.lang.Override public void onBitmapLoaded(android.graphics.Bitmap bitmap, com.squareup.picasso.Picasso.LoadedFrom from) { coverImageView.setImageBitmap(bitmap); mBackdropSlider.setVisibility(View.VISIBLE); changedScreenColors(bitmap); } @java.lang.Override public void onBitmapFailed(android.graphics.drawable.Drawable errorDrawable) { mBackdropSlider.setVisibility(View.GONE); } @java.lang.Override public void onPrepareLoad(android.graphics.drawable.Drawable placeHolderDrawable) { } }; com.squareup.picasso.Picasso.with(getApplicationContext()).load(((\"http://image.tmdb.org/t/p/\" + (br.net.paulofernando.moviest.data.remote.TMDB.SIZE_DEFAULT)) + (movie.posterPath))).into(target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6963/buggy-version/app.src.main.java.br.net.paulofernando.moviest.view.activity.MovieDetailsActivity.java", "BodyUseAPI": ["br.net.paulofernando.moviest.view.activity.MovieDetailsActivity.changedScreenColors(android.graphics.Bitmap)", "android.widget.ImageView.setImageBitmap(android.graphics.Bitmap)"], "Fixed commit": "51da60035b146932be8ecc7d4c4b71d18e02fa36", "Url": "https://api.github.com/repos/paulofernando/moviest", "Date": "2016-10-28T19:17:53Z"},
{"Line": "=>318", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((banterRoomList.getChildAt(0)) != null) { animateNewPosts(banterRoomList.getChildAt(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6473/buggy-version/src.com.example.Banter.BanterRoomFragment.java", "BodyUseAPI": ["com.example.Banter.ListView.getChildAt(int)", "com.example.Banter.BanterRoomFragment.PostPolling.1.animateNewPosts(banterRoomList.getChildAt(0))"], "Fixed commit": "29c04ac8aafdd690de9a92763f704fb9f158be91", "Url": "https://api.github.com/repos/fatzalore/Banter", "Date": "2014-10-23T00:05:08Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (matches.isEmpty()) { return null; }else { return matches.peek(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3882/buggy-version/tree-pattern-eval.src.wdm.TPEStack.java", "BodyUseAPI": ["java.util.Stack<wdm.Match>.peek()"], "Fixed commit": "0bb5c6a1072862063a2409e63bed1a309c138e48", "Url": "https://api.github.com/repos/besuikerd/web-data-management", "Date": "2015-05-11T15:17:31Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getParent()) != null) { if (!(getParent().isAll())) { return false; } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6423/buggy-version/src.main.java.net.xdocc.XPath.java", "BodyUseAPI": [], "Fixed commit": "b7f9bf0650df60a1b8dc62c7453786682045cd44", "Url": "https://api.github.com/repos/xdocc/xdocc", "Date": "2014-02-05T14:48:20Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((request().getHeader(\"referer\")) == null) return forbidden();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/589/buggy-version/source-code.play-project.app.controllers.Users.java", "BodyUseAPI": [], "Fixed commit": "1ef3a646c29a66ed359920133b74c307c75f3c3e", "Url": "https://api.github.com/repos/fllsouto/Software-Engineering-Project", "Date": "2015-11-08T00:43:04Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exchange.supportsPriceGraph()) { setContentView(R.layout.graph); viewGraph(); }else { android.widget.Toast.makeText(getApplicationContext(), ((com.veken0m.bitcoinium.GraphActivity.exchangeName) + \"does not currently support Price Graph\"), Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/8262/buggy-version/src.com.veken0m.bitcoinium.GraphActivity.java", "BodyUseAPI": [], "Fixed commit": "02f8d9ab029c38adea7a7312cee9fb7fe7a2522e", "Url": "https://api.github.com/repos/veken0m/bitcoinium", "Date": "2013-01-07T21:35:32Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endColumn > column) { for (int i = column; i <= endColumn; i++) { if (!((map[row][i]) == \" -\")) { return false; } } }else { for (int i = endColumn; i <= column; i++) { if (!((map[row][i]) == \" -\")) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5684/buggy-version/src.BattleMap.java", "BodyUseAPI": [], "Fixed commit": "bcc6e69c086aa92f9579fc6973e6aae916a1ab38", "Url": "https://api.github.com/repos/tdanielsen/Battleship", "Date": "2015-06-18T18:31:40Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endRow > row) { for (int i = row; i <= endRow; i++) { if (!((map[i][column]) == \" -\")) { return false; } } }else { for (int i = endRow; i <= row; i++) { if (!((map[i][column]) == \" -\")) { return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/5684/buggy-version/src.BattleMap.java", "BodyUseAPI": [], "Fixed commit": "bcc6e69c086aa92f9579fc6973e6aae916a1ab38", "Url": "https://api.github.com/repos/tdanielsen/Battleship", "Date": "2015-06-18T18:31:40Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.softserve.academy.service.UserService.getUserById(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (user != null) { userDAO.deleteUser(user); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3497/buggy-version/src.main.java.com.softserve.academy.service.UserService.java", "BodyUseAPI": ["com.softserve.academy.dao.UserDAO.deleteUser(com.softserve.academy.model.User)"], "Fixed commit": "5288b56e62ce079acc612340e83217eed200b00e", "Url": "https://api.github.com/repos/demchyna/SpringRESTfulExample", "Date": "2017-01-04T23:44:24Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.softserve.academy.dao.UserDAO.getUserById(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull, IfRet]", "Content": "=>if (oldUser != null) { userDAO.updateUser(oldUser, newUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/3497/buggy-version/src.main.java.com.softserve.academy.service.UserService.java", "BodyUseAPI": ["com.softserve.academy.dao.UserDAO.updateUser(com.softserve.academy.model.User,com.softserve.academy.model.User)"], "Fixed commit": "5288b56e62ce079acc612340e83217eed200b00e", "Url": "https://api.github.com/repos/demchyna/SpringRESTfulExample", "Date": "2017-01-04T23:44:24Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (job instanceof org.ats.services.executor.job.KeywordJob) { org.ats.services.keyword.KeywordProject project = keywordService.get(job.getProjectId()); jenkinsVM = vmachineService.getSystemVM(project.getTenant(), project.getSpace()); }else { org.ats.services.upload.KeywordUploadProject project = uploadProjectService.get(job.getProjectId()); jenkinsVM = vmachineService.getSystemVM(project.getTenant(), project.getSpace()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6668/buggy-version/services.rest.app.controllers.EventController.java", "BodyUseAPI": ["org.ats.services.executor.job.AbstractJob<?>.getProjectId()", "org.ats.services.executor.job.AbstractJob<?>.getProjectId()", "org.ats.services.keyword.KeywordProjectService.get(job.getProjectId())", "org.ats.services.upload.KeywordUploadProjectService.get(job.getProjectId())"], "Fixed commit": "97c30ba946b82ed870abc7ef445ef6cd7d9f1c21", "Url": "https://api.github.com/repos/trinhtran060392/cloud-ats", "Date": "2015-10-07T07:35:56Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (response != null) while (response.equals(\"noleader\")) { java.lang.Thread.sleep(randomInt(150, 300)); response = coordinator.process(query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2820/buggy-version/src.server.ClientHandler.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "e14e4310fa2c226d79d3ef21397c878a9eae0150", "Url": "https://api.github.com/repos/btootoonchi/Consensus-System", "Date": "2015-07-31T22:26:28Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ps.getTestExecutionResult()) != null) { ps.getTestExecutionResult().cleanCalledNodeInformations(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6949/buggy-version/smf.src.main.java.com.vmusco.smf.run.NewProject.java", "BodyUseAPI": ["com.vmusco.smf.analysis.ProcessStatistics.getTestExecutionResult()", "ps.getTestExecutionResult().cleanCalledNodeInformations()"], "Fixed commit": "c886c54dbe91565c32dcfcd4c56305b6f9843b66", "Url": "https://api.github.com/repos/v-m/PropagationAnalysis", "Date": "2016-02-11T16:01:03Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ToponymSearchResult.getToponyms()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((toponyms.size()) > 0) { Toponym toponym = toponyms.get(0); location2 = new Location(toponym.getCountryName(), toponym.getAdminName1(), toponym.getFeatureClassName().split(\",\")[0]); }else { location2 = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/2941/buggy-version/src.main.java.GeonamesUtils.java", "BodyUseAPI": ["java.util.List<Toponym>.get(int)"], "Fixed commit": "e1d0560ec3f611fcec2e09c63092d1a4d8300318", "Url": "https://api.github.com/repos/borjaeg/keystone", "Date": "2016-07-22T01:05:53Z"},
{"Line": "=>6080", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sbmlSBase.getListOfReplacedElements().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (replacement.isSetMetaId()) edu.utah.ece.async.ibiosim.dataModels.biomodel.util.SBMLutilities.setMetaId(replacement, ((subModelId + \"___\") + (replacement.getMetaId())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7591/buggy-version/dataModels.src.main.java.edu.utah.ece.async.ibiosim.dataModels.biomodel.parser.BioModel.java", "BodyUseAPI": ["org.sbml.jsbml.ext.comp.ReplacedElement.getMetaId()", "edu.utah.ece.async.ibiosim.dataModels.biomodel.util.SBMLutilities.setMetaId(org.sbml.jsbml.ext.comp.ReplacedElement,((subModelId + \"___\") + (replacement.getMetaId())))"], "Fixed commit": "18d60437225004f86cd63f0fb5793253960b2cec", "Url": "https://api.github.com/repos/MyersResearchGroup/iBioSim", "Date": "2017-06-07T01:30:18Z"},
{"Line": "=>6098", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sbml.jsbml.ext.comp.CompSBasePlugin.getReplacedBy()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (replacement.isSetMetaId()) edu.utah.ece.async.ibiosim.dataModels.biomodel.util.SBMLutilities.setMetaId(replacement, ((subModelId + \"___\") + (replacement.getMetaId())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/7591/buggy-version/dataModels.src.main.java.edu.utah.ece.async.ibiosim.dataModels.biomodel.parser.BioModel.java", "BodyUseAPI": ["edu.utah.ece.async.ibiosim.dataModels.biomodel.util.SBMLutilities.setMetaId(org.sbml.jsbml.ext.comp.ReplacedBy,((subModelId + \"___\") + (replacement.getMetaId())))", "org.sbml.jsbml.ext.comp.ReplacedBy.getMetaId()"], "Fixed commit": "18d60437225004f86cd63f0fb5793253960b2cec", "Url": "https://api.github.com/repos/MyersResearchGroup/iBioSim", "Date": "2017-06-07T01:30:18Z"},
{"Line": "=>1788", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!flag) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/1216/buggy-version/src.main.java.flaxbeard.steamcraft.handler.SteamcraftEventHandler.java", "BodyUseAPI": [], "Fixed commit": "58840f631193e66b27c2acaa91e4a9a983dbdf84", "Url": "https://api.github.com/repos/Esteemed-Innovation/Esteemed-Innovation", "Date": "2015-12-30T04:53:29Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.off.by.one.errors.code.model.FileIO.getTags(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tags[0].equals(tags[i])) continue; else n.addTag(tags[i]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/946/buggy-version/src.edu.wpi.off.by.one.errors.code.model.FileIO.java", "BodyUseAPI": ["edu.wpi.off.by.one.errors.code.model.Node.addTag(java.lang.String)"], "Fixed commit": "cbab16b695a32517e06dc4373e9a973e439a9511", "Url": "https://api.github.com/repos/CS3733team7/WPITeam7Mapper", "Date": "2015-12-12T20:41:00Z"},
{"Line": "=>238", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(n.GetTags().isEmpty())) tagList.addAll(n.GetTags());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/946/buggy-version/src.edu.wpi.off.by.one.errors.code.model.FileIO.java", "BodyUseAPI": ["edu.wpi.off.by.one.errors.code.model.Node.GetTags()", "java.util.ArrayList<java.lang.String>.addAll(n.GetTags())"], "Fixed commit": "cbab16b695a32517e06dc4373e9a973e439a9511", "Url": "https://api.github.com/repos/CS3733team7/WPITeam7Mapper", "Date": "2015-12-12T20:41:00Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(n.getName().isEmpty())) tagList.add(n.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/946/buggy-version/src.edu.wpi.off.by.one.errors.code.model.FileIO.java", "BodyUseAPI": ["edu.wpi.off.by.one.errors.code.model.Node.getName()", "java.util.ArrayList<java.lang.String>.add(n.getName())"], "Fixed commit": "cbab16b695a32517e06dc4373e9a973e439a9511", "Url": "https://api.github.com/repos/CS3733team7/WPITeam7Mapper", "Date": "2015-12-12T20:41:00Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tagList.isEmpty())) { java.lang.String[] tagListReborn = tagList.toArray(new java.lang.String[tagList.size()]); writer.printf(\" %s\", edu.wpi.off.by.one.errors.code.model.FileIO.toTags(tagListReborn)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/946/buggy-version/src.edu.wpi.off.by.one.errors.code.model.FileIO.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.size()", "java.util.ArrayList<java.lang.String>.toArray(java.lang.String[])"], "Fixed commit": "cbab16b695a32517e06dc4373e9a973e439a9511", "Url": "https://api.github.com/repos/CS3733team7/WPITeam7Mapper", "Date": "2015-12-12T20:41:00Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.xolider.shipfighter.utils.Constants.isDesktop)) { right.draw(game.batch); left.draw(game.batch); shot.draw(game.batch); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V95/6941/buggy-version/core.src.com.xolider.shipfighter.screens.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "a06d5e5a6f3792e8661f939d3e98c84690e77358", "Url": "https://api.github.com/repos/xolider/ShipFighter", "Date": "2017-10-27T17:51:22Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["creatorcreator.getFileBody().substring(symTabEntry.getBodyStartPos(),symTabEntry.getEndPos())", "java.lang.StringBuilder.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((lines.indexOf(newCreators)) < 0) { lines = org.sdmlib.CGUtil.replaceAll(lines, \" return jsonIdMap;\", (creators + \" return jsonIdMap;\")); creatorcreator.replace(symTabEntry.getBodyStartPos(), symTabEntry.getEndPos(), lines); creatorcreator.withFileChanged(true); printFile(creatorcreator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5259/buggy-version/src.main.java.org.sdmlib.models.classes.logic.GenClass.java", "BodyUseAPI": ["org.sdmlib.CGUtil.replaceAll(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "70317a05db84d5dafca31d40d3ce06ef31174b3c", "Url": "https://api.github.com/repos/fujaba/SDMLib", "Date": "2015-09-08T16:31:32Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdapter) == null) { mAdapter = new com.example.ivan.criminalintent.CrimeListFragment.CrimeAdapter(crimes); mCrimeRecyclerView.setAdapter(mAdapter); }else { mAdapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/544/buggy-version/app.src.main.java.com.example.ivan.criminalintent.CrimeListFragment.java", "BodyUseAPI": [], "Fixed commit": "2b6c830cef8f521baee145f654cf803318b2b3a0", "Url": "https://api.github.com/repos/notajedi/CriminalIntent", "Date": "2017-04-27T14:33:28Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (validTarget(launchPlanet, closestTarget)) this.initiateMovement(launchPlanet, closestTarget, numberOfAttackingShips);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6890/buggy-version/ComputerPlayer.java", "BodyUseAPI": ["ComputerPlayer.initiateMovement(Planet,Planet,int)"], "Fixed commit": "6a58dea42c7655a971e1185c4d1116e1a228e85f", "Url": "https://api.github.com/repos/jeffbr13/KAMB", "Date": "2013-04-01T13:29:41Z"},
{"Line": "=>370", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JOptionPane.showInputDialog(java.awt.Container,java.lang.String,java.lang.String,int,<nulltype>,java.lang.Object[],java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (s == \"All\") shipsToSend = startingShips; else shipsToSend = java.lang.Math.min(java.lang.Integer.parseInt(s), startingShips);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6890/buggy-version/Game.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Math.min(int,int)"], "Fixed commit": "6a58dea42c7655a971e1185c4d1116e1a228e85f", "Url": "https://api.github.com/repos/jeffbr13/KAMB", "Date": "2013-04-01T13:29:41Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((battleCycle) < 100) { (battleCycle)++; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6890/buggy-version/Planet.java", "BodyUseAPI": [], "Fixed commit": "6a58dea42c7655a971e1185c4d1116e1a228e85f", "Url": "https://api.github.com/repos/jeffbr13/KAMB", "Date": "2013-04-01T13:29:41Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((finalFunction) != null) return com.google.common.collect.ImmutableSet.of(this, stateFunction, finalFunction); else return com.google.common.collect.ImmutableSet.of(this, stateFunction);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5859/buggy-version/src.java.org.apache.cassandra.cql3.functions.UDAggregate.java", "BodyUseAPI": [], "Fixed commit": "a4ca85b1e66588ab70baa79f482fb9b36553401e", "Url": "https://api.github.com/repos/beobal/cassandra", "Date": "2015-04-30T15:00:16Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scaledWidth / (mChildStartWidth)) == 1) { scaleLeftToLeft = java.lang.Math.abs(v.getTranslationX()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/9111/buggy-version/app.src.main.java.ss.jaredluo.com.stickerselector.layout.SelectorLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "e104f58c1cbbc82782d1f293bf29e807a673d58e", "Url": "https://api.github.com/repos/jaredlam/ScrollSelector", "Date": "2017-08-14T09:51:21Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maxScale < 1.0F) { maxScale = 1.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/9111/buggy-version/app.src.main.java.ss.jaredluo.com.stickerselector.layout.SelectorLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "e104f58c1cbbc82782d1f293bf29e807a673d58e", "Url": "https://api.github.com/repos/jaredlam/ScrollSelector", "Date": "2017-08-14T09:51:21Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsReverse) { offset = -offset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/9111/buggy-version/app.src.main.java.ss.jaredluo.com.stickerselector.layout.SelectorLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "e104f58c1cbbc82782d1f293bf29e807a673d58e", "Url": "https://api.github.com/repos/jaredlam/ScrollSelector", "Date": "2017-08-14T09:51:21Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.codenvy.inject.CodenvyBootstrap.getInjector(javax.servlet.ServletContext)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (injector != null) { injector.getInstance(com.codenvy.inject.lifecycle.Destroyer.class).destroy(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7078/buggy-version/codenvy-commons-inject.src.main.java.com.codenvy.inject.CodenvyBootstrap.java", "BodyUseAPI": ["com.google.inject.Injector.getInstance(java.lang.Class)", "injector.getInstance(com.codenvy.inject.lifecycle.Destroyer.class).destroy()"], "Fixed commit": "8bb1aec8ee4afc5d862902a92bf8cbf41ad0ae4b", "Url": "https://api.github.com/repos/codenvy/commons", "Date": "2014-09-25T09:49:06Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dna.util.Config.get(\"GENERATION_AS_ZIP\").equals(\"batches\")) zippedBatches = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4625/buggy-version/src.dna.series.aggdata.AggregatedSeries.java", "BodyUseAPI": [], "Fixed commit": "6d6f434ee0ce748029d3b79840a4abe647cc24b7", "Url": "https://api.github.com/repos/Rwilmes/DNA", "Date": "2015-01-06T15:28:14Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.isImplicit()) nodeInstance = this.getImplicitReference(c);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8938/buggy-version/src.com.quirkygaming.othniel.pipes.Node.java", "BodyUseAPI": [], "Fixed commit": "c1f2abdf4d93a953ec0fca06dfb6727ede04957f", "Url": "https://api.github.com/repos/cjgriscom/Othniel", "Date": "2014-11-09T01:21:03Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(e.getLocalizedMessage().trim().equals(\"The result set has no current row.\"))) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/937/buggy-version/DatingSite.src.datingSite.Global.java", "BodyUseAPI": ["java.lang.Exception.printStackTrace()"], "Fixed commit": "9f919b39dd3c4c0a267bb3314c689fc9fe771aa5", "Url": "https://api.github.com/repos/dart-frog/DatingWebsite", "Date": "2014-05-21T16:54:48Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (screen.game.soundEnabled) { hissId = hiss.play(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6504/buggy-version/src.com.maycontainsoftware.pumpkinpatchpanic.PumpkinActor.java", "BodyUseAPI": [], "Fixed commit": "06d9c6135647cf713cbccdee772a9c6c62432ba8", "Url": "https://api.github.com/repos/cfmdobbie/PumpkinPatchPanic", "Date": "2014-10-29T18:30:50Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tempList) != null) { userList = new java.util.ArrayList<java.lang.String>(tempHist.keySet()); for (java.lang.String uid : userList) { getUserInfoByUserID(uid); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/474/buggy-version/MapBook.app.src.main.java.com.mapbook.mapbook.Users.java", "BodyUseAPI": [], "Fixed commit": "21ec2a3c803ccf4a670684de032325b301d3a911", "Url": "https://api.github.com/repos/g090617/CSM117-Project", "Date": "2017-12-01T01:16:57Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((sb.length()) > 0) sb.deleteCharAt(((sb.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4107/buggy-version/src.com.mb3364.twitch.http.HttpClient.java", "BodyUseAPI": ["java.lang.StringBuilder.deleteCharAt(int)", "java.lang.StringBuilder.length()"], "Fixed commit": "d5e69f02860ffbdb13067566c94bccadce71258d", "Url": "https://api.github.com/repos/urgrue/Java-Twitch-Api-Wrapper", "Date": "2015-05-01T05:37:49Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (num == 0) { if (op_stack.hasItem) { int op = op_stack.data[0]; int len = len_stack.data[0]; if (op == (msgpack_synth.SimpleParser.ARRAY_OP)) { num = ((long) (len)); }else { num = ((long) (len)) << 1; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8687/buggy-version/src.msgpack_synth.SimpleParser.java", "BodyUseAPI": [], "Fixed commit": "54e444dbb714ce6b6517fd01b649d7812b02ebe7", "Url": "https://api.github.com/repos/miyo/msgpack_synth", "Date": "2014-12-11T07:03:09Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((compImpl.getAllSubcomponents().size()) == 0) { throw new com.rockwellcollins.atc.agree.analysis.AgreeException((((\"The component implementation '\" + (compImpl.getQualifiedName())) + \"' has no subcomponents. AGREE cannot reason about component implementations\") + \" without subcomponents\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7955/buggy-version/fm-workbench.agree.com.rockwellcollins.atc.agree.analysis.src.com.rockwellcollins.atc.agree.analysis.AgreeAnnexEmitter.java", "BodyUseAPI": ["org.osate.aadl2.ComponentImplementation.getQualifiedName()"], "Fixed commit": "6830afb8f6e0c9ac4e93cbafdd460083d0c5df81", "Url": "https://api.github.com/repos/smaccm/smaccm", "Date": "2014-06-03T13:54:52Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPhotoViewAttacher) == null) mPhotoViewAttacher = new uk.co.senab.photoview.PhotoViewAttacher(mPhotoView);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1038/buggy-version/app.src.main.java.org.jorge.lbudget.ui.frags.MovementDetailDialogFragment.java", "BodyUseAPI": [], "Fixed commit": "a6a31e9466956fb37962855a259491b73de03659", "Url": "https://api.github.com/repos/Stoyicker/LBudget", "Date": "2014-09-08T16:17:47Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((user.getRegisterId()) == null) || (user.getRegisterId().isEmpty())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3174/buggy-version/myconsumption-business.src.main.java.org.starfishrespect.myconsumption.server.stats.StatisticsUpdater.java", "BodyUseAPI": [], "Fixed commit": "1c522669f4d66f5e0baba7a6ce021d89eeefde25", "Url": "https://api.github.com/repos/S23Y/myconsumption-server", "Date": "2015-05-19T15:02:39Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((agents.length()) > 0) agents.insert(0, \" -agents \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4688/buggy-version/src.main.java.jason.infra.jade.JadeMASLauncherAnt.java", "BodyUseAPI": ["java.lang.StringBuilder.insert(int,java.lang.String)"], "Fixed commit": "a82709b8127f669a5d49cfeaece494d4fa78d6ad", "Url": "https://api.github.com/repos/jason-lang/jason", "Date": "2017-12-19T14:28:44Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.buggycalculator.MainActivity.findViewById(R.id.Screen)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tScreen.getText().toString().isEmpty()) putText(\"0.\"); else if (!(tScreen.getText().toString().contains(\".\"))) { putText(\".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3616/buggy-version/src.com.example.buggycalculator.MainActivity.java", "BodyUseAPI": ["tScreen.getText().toString().contains(java.lang.String)", "tScreen.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "95a95f8ce6d8785ca625f8a6c7dbd86266d7b7b3", "Url": "https://api.github.com/repos/Va-alexander/BuggyCalculator", "Date": "2012-11-20T16:58:03Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.buggycalculator.MainActivity.findViewById(R.id.Screen)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(tScreen.getText().toString().isEmpty())) { this.currentNumber = java.lang.Float.parseFloat(tScreen.getText().toString()); clearScreen(); }else this.currentNumber = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3616/buggy-version/src.com.example.buggycalculator.MainActivity.java", "BodyUseAPI": ["java.lang.Float.parseFloat(tScreen.getText().toString())", "tScreen.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "95a95f8ce6d8785ca625f8a6c7dbd86266d7b7b3", "Url": "https://api.github.com/repos/Va-alexander/BuggyCalculator", "Date": "2012-11-20T16:58:03Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((holder.bubbleImage) != null) { holder.bubbleImage.get().setPadding(0, 0, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/393/buggy-version/src.org.redPanda.ChatAdapter.java", "BodyUseAPI": ["holder.bubbleImage.get().setPadding(int,int,int,int)", "java.lang.ref.WeakReference<android.widget.ImageView>.get()"], "Fixed commit": "e3b6caf9ac8570cb11064826d8cfbfabb0fe5fb1", "Url": "https://api.github.com/repos/redPanda-project/android", "Date": "2014-04-18T22:30:32Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((holder.bubbleImage) != null) { holder.bubbleImage.get().setPadding(0, 0, 0, 40); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/393/buggy-version/src.org.redPanda.ChatAdapter.java", "BodyUseAPI": ["java.lang.ref.WeakReference<android.widget.ImageView>.get()", "holder.bubbleImage.get().setPadding(int,int,int,int)"], "Fixed commit": "e3b6caf9ac8570cb11064826d8cfbfabb0fe5fb1", "Url": "https://api.github.com/repos/redPanda-project/android", "Date": "2014-04-18T22:30:32Z"},
{"Line": "=>771", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((com.tinkerpop.blueprints.impls.arangodb.client.ArangoDBSimpleGraphClient.i) % 1000) == 0) com.tinkerpop.blueprints.impls.arangodb.client.ArangoDBSimpleGraphClient.LOG.warn(body.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8146/buggy-version/src.main.java.com.tinkerpop.blueprints.impls.arangodb.client.ArangoDBSimpleGraphClient.java", "BodyUseAPI": [], "Fixed commit": "09953833cb782761fcfa356f32e172de7bd81ce3", "Url": "https://api.github.com/repos/seyyedshah/blueprints-arangodb-graph", "Date": "2014-02-21T14:43:54Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.atlasapi.remotesite.bbc.nitro.NitroScheduleDayUpdater.getSid(channelDay.getChannel())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (serviceId == null) { return new com.metabroadcast.common.scheduling.UpdateProgress(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8929/buggy-version/src.main.java.org.atlasapi.remotesite.bbc.nitro.NitroScheduleDayUpdater.java", "BodyUseAPI": [], "Fixed commit": "8a9befe252ddc9312ff080eec938723eac35cd1e", "Url": "https://api.github.com/repos/atlasapi/atlas", "Date": "2016-06-14T14:01:36Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transaction.getReason()) != (org.appledash.saneeconomy.economy.transaction.TransactionReason.ADMIN_TAKE)) { addBalance(receiver, amount); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8049/buggy-version/SaneEconomyCore.src.main.java.org.appledash.saneeconomy.economy.EconomyManager.java", "BodyUseAPI": [], "Fixed commit": "41339dc3b02c64e6a2a3118b834085b22ccedf2c", "Url": "https://api.github.com/repos/AppleDash/SaneEconomy", "Date": "2016-10-02T08:27:47Z"},
{"Line": "=>402", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item.contains(\"T\")) { getStyleClass().add(BackgroundTableCell.CSS_NORMALTASKROW); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6007/buggy-version/src.UI.java", "BodyUseAPI": [], "Fixed commit": "a2343bfac7c4551f1b716f5dca3ac2ed7e35ed22", "Url": "https://api.github.com/repos/cs2103aug2014-w14-1j/main", "Date": "2014-10-31T06:08:53Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (definition.getInitialValue().isPresent()) { props.setProperty(propName, definition.getInitialValue().get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3285/buggy-version/src.main.java.org.basepom.mojo.propertyhelper.PropertyCache.java", "BodyUseAPI": ["definition.getInitialValue().get()", "java.util.Properties.setProperty(java.lang.String,definition.getInitialValue().get())", "org.basepom.mojo.propertyhelper.beans.AbstractDefinition<?>.getInitialValue()"], "Fixed commit": "5610f2e5325bef52e01ead3297e4d6b300c387d1", "Url": "https://api.github.com/repos/hgschmie/property-helper-maven-plugin", "Date": "2014-03-17T06:07:25Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((db) != null) return db.getAllUserName(dt);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/957/buggy-version/src.ser.admin.Admin.java", "BodyUseAPI": [], "Fixed commit": "3f60f02888ca4d41904c2aaa23794d9f86c8d0d7", "Url": "https://api.github.com/repos/computer-developers/Software-Monitor", "Date": "2017-04-02T03:09:19Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((db) != null) return db.getUserDetail(uName, dt, dt.plusDays(1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/957/buggy-version/src.ser.admin.Admin.java", "BodyUseAPI": [], "Fixed commit": "3f60f02888ca4d41904c2aaa23794d9f86c8d0d7", "Url": "https://api.github.com/repos/computer-developers/Software-Monitor", "Date": "2017-04-02T03:09:19Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBarProgressX) > (mBarRightX)) mBarProgressX = mBarRightX;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7480/buggy-version/app.src.main.java.ve.com.abicelis.creditcardexpensemanager.app.views.HorizontalBar.java", "BodyUseAPI": [], "Fixed commit": "772cc395015e6f9e59c5b9d76de3eb632c49e5d0", "Url": "https://api.github.com/repos/abicelis/CreditCardExpenseManager", "Date": "2017-02-20T23:03:52Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) { value /= i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7846/buggy-version/kompgame-ai-avg.src.main.java.hu.elte.komp.kompgame.ai.avg.AvgAi.java", "BodyUseAPI": [], "Fixed commit": "c24f22a1fa2d8fd139a8d10f8e87cb610ae30f9a", "Url": "https://api.github.com/repos/elte-szoftproj/komponens", "Date": "2014-05-15T02:31:53Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 0) { value /= i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7846/buggy-version/kompgame-ai-avg.src.main.java.hu.elte.komp.kompgame.ai.avg.AvgAi.java", "BodyUseAPI": [], "Fixed commit": "c24f22a1fa2d8fd139a8d10f8e87cb610ae30f9a", "Url": "https://api.github.com/repos/elte-szoftproj/komponens", "Date": "2014-05-15T02:31:53Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (beast.app.util.Utils.isWindows()) { jsPath = jsPath.replaceAll(\"\\\\\\\\\", \"/\"); jsPath = \"/\" + jsPath; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2016/buggy-version/src.beast.app.tools.BModelAnalyser.java", "BodyUseAPI": [], "Fixed commit": "81ce97b6d8214ae1ea738fc44476dd65b44bd17b", "Url": "https://api.github.com/repos/BEAST2-Dev/bModelTest", "Date": "2017-02-11T18:27:46Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (searchString != null) searchString = searchString.toLowerCase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4260/buggy-version/muikku-rest.src.main.java.fi.muikku.rest.course.CourseRESTService.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "8e946bd2d2fe409a44442308edcd56db8c83e231", "Url": "https://api.github.com/repos/otavanopisto/muikku", "Date": "2014-09-02T10:43:54Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (searchString != null) searchString = searchString.toLowerCase();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4260/buggy-version/muikku-rest.src.main.java.fi.muikku.rest.course.CourseRESTService.java", "BodyUseAPI": ["java.lang.String.toLowerCase()"], "Fixed commit": "8e946bd2d2fe409a44442308edcd56db8c83e231", "Url": "https://api.github.com/repos/otavanopisto/muikku", "Date": "2014-09-02T10:43:54Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.yanzi.activity.CameraActivity.get_bitmap) == true) { android.os.Message msg = new android.os.Message(); msg.what = 901; msg.obj = \"\"; handler.sendMessage(msg); http_use(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5906/buggy-version/src.org.yanzi.activity.CameraActivity.java", "BodyUseAPI": [], "Fixed commit": "58ad3e39d799c14124406cdeda3b0b65f74878d8", "Url": "https://api.github.com/repos/inksci/inker-android", "Date": "2016-12-04T03:11:26Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["utility.Utility.openConnection(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (con == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3477/buggy-version/src.java.utility.Utility.java", "BodyUseAPI": [], "Fixed commit": "c7d83b7583ca75f199b87b513820388f6b058151", "Url": "https://api.github.com/repos/v1n4y/College-Automation", "Date": "2014-04-05T11:48:09Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (map.isParent()) { com.epimorphics.simpleAPI.core.JSONMap nested = map.getNestedMap(); nested.renderAsQuery(buf, map.getJsonName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4293/buggy-version/sapi-lib.src.main.java.com.epimorphics.simpleAPI.core.JSONMap.java", "BodyUseAPI": ["com.epimorphics.simpleAPI.core.impl.JSONMapEntry.getJsonName()", "com.epimorphics.simpleAPI.core.JSONMap.renderAsQuery(java.lang.StringBuffer,map.getJsonName())", "com.epimorphics.simpleAPI.core.impl.JSONMapEntry.getNestedMap()"], "Fixed commit": "77a34cf005500b4f81143b2b73d179cfa1744447", "Url": "https://api.github.com/repos/epimorphics/sapi", "Date": "2015-02-08T15:21:55Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (Logic.DoctorLogic.getInstance().shouldTrackPosition()) { if (isPhoneMovementDetected()) { shouldVibratePhone = true; } if ((currentStepTimer) > (maximumStepTimer)) { isStepFail = true; } }else { if (isPhoneMovementDetected()) { shouldVibratePhone = true; } if (((Logic.DoctorLogic.getInstance().getCurrentDoctorStep()) == (DoctorStep.Right_Hand_Down)) || ((Logic.DoctorLogic.getInstance().getCurrentDoctorStep()) == (DoctorStep.Left_Hand_Down))) { if (isPhoneMovementDetected()) { stationaryTimer = 3000; } }else { if (isSignificantMovementDetected()) { isStepFail = true; stationaryTimer = 0; shouldVibratePhone = true; }else { shouldVibratePhone = false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4654/buggy-version/app.src.main.java.Logic.MySensorManager.java", "BodyUseAPI": [], "Fixed commit": "5ca3066b39c6fb048f28f86a0ead1653dd020c25", "Url": "https://api.github.com/repos/j3lackfire/JYU_Native_Arm_Movement", "Date": "2017-07-05T13:32:07Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.facebook.login.LoginManager.getInstance()) != null) { com.facebook.login.LoginManager.getInstance().logOut(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2850/buggy-version/app.src.main.java.com.hallak.billdozer.activities.settings.SettingsFragment.java", "BodyUseAPI": [], "Fixed commit": "8e157f5b2a0aa85f35209a471305d0a59196ecae", "Url": "https://api.github.com/repos/hallaksec/Billdozer", "Date": "2017-04-09T16:20:43Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((e.getInventory()) == null) || ((e.getInventory().getName()) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8182/buggy-version/src.main.java.max.hubbard.bettershops.Configurations.LanguageMenu.GUIMessageListener.java", "BodyUseAPI": [], "Fixed commit": "f4d81a974854fa56e91a2588e2836a48baaca17b", "Url": "https://api.github.com/repos/Majncraft/BetterShops", "Date": "2016-02-22T14:14:14Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dishTable.getSelectedRow()) < 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1738/buggy-version/src.no.ntnu.iie.stud.cateringstorm.gui.dialogs.ChefMakeOrderDialog.java", "BodyUseAPI": [], "Fixed commit": "0c896a6a73637a36dc0608367125d3b05f34b869", "Url": "https://api.github.com/repos/AudunWA/systemutvikling-1", "Date": "2016-04-25T13:01:29Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input) != null) { android.view.inputmethod.InputMethodManager imm = ((android.view.inputmethod.InputMethodManager) (getSystemService(Context.INPUT_METHOD_SERVICE))); imm.hideSoftInputFromWindow(input.getWindowToken(), 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8907/buggy-version/app.src.main.java.mobi.ccjr.ptel.activity.PrefsActivity.java", "BodyUseAPI": [], "Fixed commit": "5c1ae5fb810780f3a85ce036f4c0c1ee028e5abf", "Url": "https://api.github.com/repos/ccjr/ptel", "Date": "2015-03-30T02:43:56Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index1 > (-1)) { int index2 = title.indexOf(\" - \", (index1 + 3)); if (index2 == (-1)) { return title.substring(0, index1); }else { return title.substring((index1 + 3), index2); } }else { return \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1545/buggy-version/app.src.main.java.org.cnx.android.logic.WebviewLogic.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String,int)", "java.lang.String.substring(int,int)"], "Fixed commit": "2eb1d3ad05a0dafba850c14db9ec15f128d798ee", "Url": "https://api.github.com/repos/Connexions/CNXAndroid", "Date": "2016-06-27T12:12:03Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((content.getBookTitle()) == null) || (!(content.getTitle().contains(content.getBookTitle())))) { content.setBookTitle(webviewLogic.getBookTitle(content.getTitle())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1545/buggy-version/app.src.main.java.org.cnx.android.activity.WebViewActivity.java", "BodyUseAPI": ["org.cnx.android.beans.Content.getTitle()", "org.cnx.android.beans.Content.setBookTitle(webviewLogic.getBookTitle(content.getTitle()))", "org.cnx.android.logic.WebviewLogic.getBookTitle(content.getTitle())"], "Fixed commit": "2eb1d3ad05a0dafba850c14db9ec15f128d798ee", "Url": "https://api.github.com/repos/Connexions/CNXAndroid", "Date": "2016-06-27T12:12:03Z"},
{"Line": "=>541", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (expectedType != null) { expectedType = expectedType.normalize(NormalizeVisitor.Mode.WHNF); if (((param.getExplicit()) && (expectedType.isInstance(com.jetbrains.jetpad.vclang.typechecking.visitor.PiExpression.class))) && (!(expectedType.cast(com.jetbrains.jetpad.vclang.typechecking.visitor.PiExpression.class).getParameters().isExplicit()))) { com.jetbrains.jetpad.vclang.typechecking.visitor.PiExpression piExpectedType = expectedType.cast(com.jetbrains.jetpad.vclang.typechecking.visitor.PiExpression.class); com.jetbrains.jetpad.vclang.typechecking.visitor.SingleDependentLink piParams = piExpectedType.getParameters(); com.jetbrains.jetpad.vclang.typechecking.visitor.CheckTypeVisitor.Result bodyResult = visitLam(parameters, expr, piExpectedType.getCodomain(), (argIndex + (DependentLink.Helper.size(piParams)))); if (bodyResult == null) return null; com.jetbrains.jetpad.vclang.core.sort.Sort sort = com.jetbrains.jetpad.vclang.typechecking.visitor.PiExpression.generateUpperBound(piParams.getType().getSortOfType(), com.jetbrains.jetpad.vclang.typechecking.visitor.CheckTypeVisitor.getSortOf(bodyResult.type.getType()), myEquations, expr); return new com.jetbrains.jetpad.vclang.typechecking.visitor.CheckTypeVisitor.Result(new com.jetbrains.jetpad.vclang.typechecking.visitor.LamExpression(sort, piParams, bodyResult.expression), new com.jetbrains.jetpad.vclang.typechecking.visitor.PiExpression(sort, piParams, bodyResult.type)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3344/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.typechecking.visitor.CheckTypeVisitor.java", "BodyUseAPI": ["com.jetbrains.jetpad.vclang.typechecking.visitor.Expression.normalize(NormalizeVisitor.Mode.WHNF)"], "Fixed commit": "5a06ca226103620bbf89a0a4f8729ee0c0d2b7b6", "Url": "https://api.github.com/repos/valis/vclang", "Date": "2017-08-09T10:03:56Z"},
{"Line": "=>3212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ctrl instanceof org.nschmidt.ldparteditor.composites.ToolSeparator)) ctrl.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7477/buggy-version/src.org.nschmidt.ldparteditor.shells.editor3d.Editor3DDesign.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Control.dispose()"], "Fixed commit": "3e716a5c11a147d1780e39bfa063aa5f4aa91d0f", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-08-01T14:24:39Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ctrl instanceof org.nschmidt.ldparteditor.composites.ToolSeparator)) ctrl.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7477/buggy-version/src.org.nschmidt.ldparteditor.shells.editortext.EditorTextDesign.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Control.dispose()"], "Fixed commit": "3e716a5c11a147d1780e39bfa063aa5f4aa91d0f", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-08-01T14:24:39Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.aksw.sparql2nl.naturallanguagegeneration.SimpleNLGwithPostprocessing.isWindows()) { v = new org.aksw.sparql2nl.entitysummarizer.Verbalizer(endpoint, \"E:/Work/Java/SPARQL2NL/resources/wordnetWindows/\"); }else { v = new org.aksw.sparql2nl.entitysummarizer.Verbalizer(endpoint, \"resources/wordnet/dict\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/114/buggy-version/src.main.java.org.aksw.sparql2nl.entitysummarizer.Verbalizer.java", "BodyUseAPI": [], "Fixed commit": "c907e6aa987cfe7204c43642a95c8d5dd5459ea6", "Url": "https://api.github.com/repos/AKSW/SPARQL2NL", "Date": "2013-08-27T11:38:24Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((handinsDBAdapter.getAssignments(courseCode).getCount()) != 0) { addHandins(layout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1199/buggy-version/StuderaEffektivt.app.src.main.java.se.chalmers.datx02_15_36.studeraeffektivt.activity.CourseDetailedInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "87b8fe8eac561cd670337a879d0b0a51a706915a", "Url": "https://api.github.com/repos/Soya93/DATX02_15_36", "Date": "2015-07-16T11:23:33Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.tracer.tree.TraceEntryTreeNode.getStateBefore()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (before == null) { json.put(main.parse.TraceToJSON.STATE_BEFORE, main.parse.TraceToJSON.EMPTY_JSON_OBJECT); }else { json.put(main.parse.TraceToJSON.STATE_BEFORE, node.getStateBefore().toJSON()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8155/buggy-version/src.main.parse.TraceToJSON.java", "BodyUseAPI": [], "Fixed commit": "66986ad547711d39c92fc6c78231d978a898f896", "Url": "https://api.github.com/repos/davidstreader/JavaAutomata", "Date": "2015-09-11T03:10:38Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.tracer.tree.TraceEntryTreeNode.getStateAfter()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (after == null) { json.put(main.parse.TraceToJSON.STATE_AFTER, main.parse.TraceToJSON.EMPTY_JSON_OBJECT); }else { json.put(main.parse.TraceToJSON.STATE_AFTER, node.getStateAfter().toJSON()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8155/buggy-version/src.main.parse.TraceToJSON.java", "BodyUseAPI": [], "Fixed commit": "66986ad547711d39c92fc6c78231d978a898f896", "Url": "https://api.github.com/repos/davidstreader/JavaAutomata", "Date": "2015-09-11T03:10:38Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.sqrt((((java.lang.Math.pow(cartesianCoordinate.getX(), 2)) + (java.lang.Math.pow(cartesianCoordinate.getY(), 2))) + (java.lang.Math.pow(cartesianCoordinate.getZ(), 2))))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (radius == 0) { return org.wahlzeit.model.SphericCoordinate.create(0, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2267/buggy-version/src.main.java.org.wahlzeit.model.converter.CoordinateConverter.java", "BodyUseAPI": [], "Fixed commit": "189e99b9a531acb17eb85d2e0b28049e1fedcde1", "Url": "https://api.github.com/repos/fabian-arnold/wahlzeit", "Date": "2017-12-17T22:40:14Z"},
{"Line": "=>606", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(fieldInfo.name)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (param == null) { java.lang.reflect.Type fieldType = fieldInfo.fieldType; if (fieldType == (byte.class)) { param = ((byte) (0)); }else if (fieldType == (short.class)) { param = ((short) (0)); }else if (fieldType == (int.class)) { param = 0; }else if (fieldType == (long.class)) { param = 0L; }else if (fieldType == (float.class)) { param = 0.0F; }else if (fieldType == (double.class)) { param = 0.0; }else if (fieldType == (boolean.class)) { param = java.lang.Boolean.FALSE; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3146/buggy-version/src.main.java.com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.java", "BodyUseAPI": [], "Fixed commit": "61ff5e84fec5022c2113288721f6435d84983a65", "Url": "https://api.github.com/repos/VictorZeng/fastjson", "Date": "2016-09-05T14:50:27Z"},
{"Line": "=>572", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bhoiwala.locationmockerpro.MapsActivity.getIntent()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (intent.hasExtra(\"mock_status\")) { if (intent.getBooleanExtra(\"mock_status\", false)) { isMocking = true; setupStartStopButton(); } }else if (intent.hasExtra(\"from_id\")) { if (intent.getStringExtra(\"from_id\").equals(\"ListViewActivity\")) { com.bhoiwala.locationmockerpro.realm.MyLocation goToPlace = new com.bhoiwala.locationmockerpro.realm.MyLocation(); goToPlace.placeName = intent.getStringExtra(\"place_name\"); goToPlace.latitude = intent.getDoubleExtra(\"place_lati\", 0.0); goToPlace.longitude = intent.getDoubleExtra(\"place_long\", 0.0); goToLocation(goToPlace); intent.removeExtra(\"from_id\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6776/buggy-version/app.src.main.java.com.bhoiwala.locationmockerpro.MapsActivity.java", "BodyUseAPI": ["android.content.Intent.getStringExtra(java.lang.String)", "android.content.Intent.getDoubleExtra(java.lang.String,double)", "android.content.Intent.getStringExtra(java.lang.String)", "android.content.Intent.removeExtra(java.lang.String)", "android.content.Intent.getDoubleExtra(java.lang.String,double)", "android.content.Intent.hasExtra(java.lang.String)", "android.content.Intent.getBooleanExtra(java.lang.String,boolean)", "intent.getStringExtra(\"from_id\").equals(java.lang.String)"], "Fixed commit": "01c8854eb060546718ba69b180eb56502522e337", "Url": "https://api.github.com/repos/pbhoiwala/LocationMocker", "Date": "2017-01-28T02:22:53Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isEmpty(((java.lang.String) (src)))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6339/buggy-version/whp-common.src.main.java.org.motechproject.whp.common.mapping.StringToDateTime.java", "BodyUseAPI": [], "Fixed commit": "a6495f3f477f1fa3a203526aa376a9ea3787f60a", "Url": "https://api.github.com/repos/motech/motech-whp", "Date": "2012-10-26T06:13:27Z"},
{"Line": "=>1495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(priorColor == (java.lang.Integer.valueOf(setColor)))) { fillSpiller(moveTo, priorColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7802/buggy-version/app.src.main.java.ca.ggolda.android_game_campaign.GameActivitySingle.java", "BodyUseAPI": ["ca.ggolda.android_game_campaign.GameActivitySingle.fillSpiller(int,int)"], "Fixed commit": "e0b1081c150d0e70ffb6470b33d18bf495a984c0", "Url": "https://api.github.com/repos/simplegr33n/android-game-campaign", "Date": "2017-01-17T21:42:10Z"},
{"Line": "=>1469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.valueOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(priorColor == (java.lang.Integer.valueOf(setColor)))) { fillSpiller(moveTo, priorColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7802/buggy-version/app.src.main.java.ca.ggolda.android_game_campaign.GameActivitySingle.java", "BodyUseAPI": ["ca.ggolda.android_game_campaign.GameActivitySingle.fillSpiller(int,int)"], "Fixed commit": "e0b1081c150d0e70ffb6470b33d18bf495a984c0", "Url": "https://api.github.com/repos/simplegr33n/android-game-campaign", "Date": "2017-01-17T21:42:10Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((realHeaderLayoutParams.topMargin) > (headerHeight)) { realHeaderLayoutParams.topMargin = headerHeight; showHeader(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8110/buggy-version/quickReturnHeader.src.main.java.com.manuelpeinado.quickreturnheader.QuickReturnHeaderHelper.java", "BodyUseAPI": [], "Fixed commit": "c78797a8deddc1345cfc3ed622af3caa265d881b", "Url": "https://api.github.com/repos/Integreight/1Sheeld-Android-App", "Date": "2015-10-27T15:13:09Z"},
{"Line": "=>610", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isFinishing())) { android.app.FragmentTransaction transaction = getFragmentManager().beginTransaction(); transaction.replace(R.id.selected_conversation, selectedFragment, \"conversation\"); transaction.commitAllowingStateLoss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7934/buggy-version/src.eu.siacs.conversations.ui.ConversationActivity.java", "BodyUseAPI": [], "Fixed commit": "d486d5def9a98f439f374c81a7b5795b3508c19d", "Url": "https://api.github.com/repos/1nsan3/Conversations", "Date": "2014-08-09T09:37:05Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!test) { exitClient(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/638/buggy-version/src.client.Client.java", "BodyUseAPI": [], "Fixed commit": "891e5dfd0e3d8cf38c393e651539557231e546c2", "Url": "https://api.github.com/repos/vsysgroup/ue3", "Date": "2012-12-03T13:51:23Z"},
{"Line": "=>1704", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getLong(org.mariotaku.twidere.util.KEY_DEFAULT_ACCOUNT_ID,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (account_id == (-1)) account_id = org.mariotaku.twidere.util.Utils.getAccountIds(context)[0];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/921/buggy-version/twidere.src.main.java.org.mariotaku.twidere.util.Utils.java", "BodyUseAPI": [], "Fixed commit": "d8bf7e391fef0e06ac8dcb3c3ed1a9f32276112b", "Url": "https://api.github.com/repos/YiPATHoLi/Twidere-Android", "Date": "2015-04-25T07:09:29Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (user == null) { processInstances = new java.util.ArrayList<org.activiti.engine.runtime.ProcessInstance>(); }else { processInstances = runtimeService.createProcessInstanceQuery().includeProcessVariables().involvedUser(user.getId().toString()).list(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2781/buggy-version/src.main.java.business.controllers.ProcessController.java", "BodyUseAPI": ["business.security.UserAuthenticationToken.getId()", "runtimeService.createProcessInstanceQuery().includeProcessVariables().involvedUser(user.getId().toString())", "user.getId().toString()", "runtimeService.createProcessInstanceQuery().includeProcessVariables().involvedUser(user.getId().toString()).list()"], "Fixed commit": "2653f003419344e66f99e7a8c66401e132270472", "Url": "https://api.github.com/repos/thehyve/dntp-portal", "Date": "2015-03-27T15:34:09Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (property instanceof com.db2eshop.model.support.AbstractModel) { id = ((com.db2eshop.model.support.AbstractModel) (property)).getId(); }else if (property instanceof java.lang.Long) { id = ((java.lang.Long) (property)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5269/buggy-version/src.main.java.com.db2eshop.util.orm.TableValueEntityResolver.java", "BodyUseAPI": [], "Fixed commit": "93e043ce25c489d6f8653b70817ff0a87e27be92", "Url": "https://api.github.com/repos/denisneuling/db2eshop", "Date": "2013-01-17T11:44:42Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.citizensnpcs.api.event.NPCRightClickEvent.getClicker()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tempOpening.contains(player.getName())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5407/buggy-version/src.main.java.net.dtl.citizens.trader.NpcEcoManager.java", "BodyUseAPI": [], "Fixed commit": "af7c779749c7180f22b20a5b69231f3d9e1dc080", "Url": "https://api.github.com/repos/Dandielo/DtlCitizensTrader", "Date": "2013-01-05T03:05:30Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.getOptions().getBlock1()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((block1.getSize()) < currentSize) { newSize = block1.getSize(); newSzx = block1.getSzx(); }else { newSize = currentSize; newSzx = status.getCurrentSzx(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4296/buggy-version/californium-core.src.main.java.org.eclipse.californium.core.network.stack.BlockwiseLayer.java", "BodyUseAPI": ["org.eclipse.californium.core.coap.BlockOption.getSize()", "org.eclipse.californium.core.coap.BlockOption.getSzx()"], "Fixed commit": "1636838e8be5971d36107b9e11d5a4af65df3b28", "Url": "https://api.github.com/repos/eclipse/californium", "Date": "2016-09-29T15:53:44Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (location != null) { java.util.LinkedList<one.lindegaard.MobHunting.grinding.Area> areas = getKnownGrindingSpots(location); for (one.lindegaard.MobHunting.grinding.Area area : areas) { if (area.getCenter().getWorld().equals(location.getWorld())) { if ((area.getCenter().distance(location)) < (area.getRange())) { return true; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5437/buggy-version/src.one.lindegaard.MobHunting.grinding.GrindingManager.java", "BodyUseAPI": ["one.lindegaard.MobHunting.grinding.GrindingManager.getKnownGrindingSpots(org.bukkit.Location)", "area.getCenter().distance(org.bukkit.Location)", "org.bukkit.Location.getWorld()", "area.getCenter().getWorld().equals(location.getWorld())"], "Fixed commit": "833143d9b30b24312cb80129f39481c2a975310e", "Url": "https://api.github.com/repos/Rocologo/MobHunting", "Date": "2017-06-12T16:43:06Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataBufferType == (java.awt.image.DataBuffer.TYPE_BYTE)) && ((zoomedDataBuffer.getSize()) < ((w * h) * 3))) zoomedDataBuffer = new java.awt.image.DataBufferByte(((w * h) * 3), 1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3294/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.util.ui.lens.LensModel.java", "BodyUseAPI": [], "Fixed commit": "7caebf7f8b4f86d7c08dcf67816692ba9a7bb445", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2016-03-24T03:32:51Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cytoscape.model.CyNetwork.getDefaultNetworkTable()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((table.getColumn(column)) == null) { table = network.getTable(org.cytoscape.model.CyNetwork.class, CyNetwork.LOCAL_ATTRS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5526/buggy-version/src.main.java.org.cytoscape.rest.internal.resource.AbstractResource.java", "BodyUseAPI": [], "Fixed commit": "427b6ee72b84c5f6171df3e565a806f2b0682bff", "Url": "https://api.github.com/repos/keiono/cy-rest", "Date": "2014-10-13T21:48:48Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((table.getColumn(column)) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5526/buggy-version/src.main.java.org.cytoscape.rest.internal.resource.AbstractResource.java", "BodyUseAPI": [], "Fixed commit": "427b6ee72b84c5f6171df3e565a806f2b0682bff", "Url": "https://api.github.com/repos/keiono/cy-rest", "Date": "2014-10-13T21:48:48Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((cachedCube) instanceof cubicchunks.world.cube.BlankCube)) { cachedCube = cube; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4482/buggy-version/src.main.java.cubicchunks.asm.mixin.core.common.MixinChunk_Cubes.java", "BodyUseAPI": [], "Fixed commit": "e58346f508b4b7f40ae5b6d031f467bf3f22116b", "Url": "https://api.github.com/repos/Foghrye4/CubicChunks", "Date": "2017-07-11T23:59:12Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) { properties.add(propertyImpl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7966/buggy-version/lider-persistence-mariadb.src.main.java.tr.org.liderahenk.lider.persistence.entities.AgentImpl.java", "BodyUseAPI": [], "Fixed commit": "ca353725b00b2a26494b4c705fcebb061147d572", "Url": "https://api.github.com/repos/Pardus-LiderAhenk/lider", "Date": "2016-12-20T14:10:26Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraftforge.fluids.FluidUtil.interactWithFluidHandler(net.minecraft.item.ItemStack,net.minecraftforge.fluids.FluidTank,net.minecraft.entity.player.EntityPlayer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res) { this.sendUpdate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5747/buggy-version/java.com.mhfs.capacitors.tile.TileTower.java", "BodyUseAPI": [], "Fixed commit": "3013f2f1b8d7ee7911b5f72e9fb206df45dbc65e", "Url": "https://api.github.com/repos/thilokru/Big-Capacitors-Mod", "Date": "2016-08-15T12:12:14Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dateTime == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/573/buggy-version/atlas-api.src.main.java.org.atlasapi.output.writers.time.UnixMillenniumBugFixer.java", "BodyUseAPI": [], "Fixed commit": "66564e6206883ade855bc0345afea22faa405569", "Url": "https://api.github.com/repos/atlasapi/atlas-deer", "Date": "2015-12-04T18:19:58Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.metamodel.excel.ExcelDataContext.getResource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((wb instanceof org.apache.poi.hssf.usermodel.HSSFWorkbook) && (realResource instanceof org.apache.metamodel.util.FileResource)) && (realResource.isExists())) { java.lang.System.gc(); java.lang.System.runFinalization(); try { java.lang.Thread.sleep(800); } catch (java.lang.InterruptedException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5401/buggy-version/excel.src.main.java.org.apache.metamodel.excel.ExcelUtils.java", "BodyUseAPI": [], "Fixed commit": "f6a487c75a17919d2d3dc72d4f91af513ef97bf0", "Url": "https://api.github.com/repos/kaspersorensen/metamodel", "Date": "2015-10-05T10:16:50Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (includeSchema) { includeClusterDefinitions = true; includeInfo = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3707/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.tool.ODatabaseImpExpAbstract.java", "BodyUseAPI": [], "Fixed commit": "21a14aeee0ebbe4d4469afac05e813c68fa29146", "Url": "https://api.github.com/repos/hasancelik/orientdb", "Date": "2016-05-23T13:29:59Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (order.isSellOrder()) { verifyUnfulfilledSellOrders(order.getNickname()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3562/buggy-version/src.main.java.mt.server.MicroServer.java", "BodyUseAPI": ["mt.server.MicroServer.verifyUnfulfilledSellOrders(order.getNickname())", "mt.Order.getNickname()"], "Fixed commit": "89232ca229b00fc5919f7e4e7b64bcfbb8a4bd0a", "Url": "https://api.github.com/repos/mmvpm-iscteiulpt/ES2-2017-METIPLA1-116-MiniTrader", "Date": "2017-05-20T11:07:53Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((username) != null) { com.rosenthal.retrogame.graphics.Font.render(username, screen, (xOffset - ((((username.length()) - 1) / 2) * 8)), (yOffset - 10), com.rosenthal.retrogame.graphics.Colours.get((-1), (-1), (-1), 555), 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4088/buggy-version/src.com.rosenthal.retrogame.entities.Player.java", "BodyUseAPI": [], "Fixed commit": "afe610d215e22b7deb9c1254cac460c84b09fcc8", "Url": "https://api.github.com/repos/arose020/Multiplayer-Game", "Date": "2013-08-12T06:17:11Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getIntent().getFlags()) & (android.content.Intent.FLAG_ACTIVITY_BROUGHT_TO_FRONT)) != 0) { finish(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1090/buggy-version/Fancy.app.src.main.java.com.hunkd.fancy.activity.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "bbcba6923f64de9faad72ac9c883788394b3f622", "Url": "https://api.github.com/repos/HunkD/Fancy", "Date": "2015-07-31T13:01:53Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(rippleAnimationSupport())) view.setBackgroundColor(colorUnpressed); else ripple.reveal(0, 0, colorUnpressed, 0, 0, null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3504/buggy-version/MaterialNavigationDrawerModule.src.main.java.it.neokree.materialnavigationdrawer.elements.MaterialSection.java", "BodyUseAPI": [], "Fixed commit": "73657a4021800d1ade38294d931f5c73cfac2f85", "Url": "https://api.github.com/repos/javmarina/MaterialNavigationDrawer", "Date": "2015-01-30T22:36:06Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((service.getJenkinsMaintenanceCheck()) == null) { return checkedMaintenance; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2587/buggy-version/src.main.java.de.paluch.status.status.control.CheckerJobController.java", "BodyUseAPI": [], "Fixed commit": "244d087803d733d3300bdf908d8bc0d24a5c87be", "Url": "https://api.github.com/repos/mp911de/service-status-board", "Date": "2013-01-04T10:17:05Z"},
{"Line": "=>377", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((j.outputObject) != null) { j.outputObject.executeCodeCallback(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2288/buggy-version/kernel.java.src.main.java.com.twosigma.beaker.javash.evaluator.JavaEvaluator.java", "BodyUseAPI": ["com.twosigma.beaker.jvm.object.SimpleEvaluationObject.executeCodeCallback()"], "Fixed commit": "db544a0e256ba1992814020ca4a6f87a7f1844be", "Url": "https://api.github.com/repos/twosigma/beakerx", "Date": "2017-06-03T14:11:27Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.rockzhai.readdaily.util.StateUtils.isNetworkAvailable(getContext())) { mPresenter.getReDailyData(); }else { setDataRefresh(false); if ((content.getText().toString()) == \"\") { content.setText(\"\u7f51\u7edc\u65e0\u8fde\u63a5\uff0c\u8bf7\u68c0\u67e5\u7f51\u7edc\u540e\u91cd\u8bd5\"); } android.widget.Toast.makeText(getContext(), \"\u7f51\u7edc\u65e0\u8fde\u63a5\uff0c\u8bf7\u68c0\u67e5\u7f51\u7edc\u540e\u91cd\u8bd5\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/857/buggy-version/app.src.main.java.com.rockzhai.readdaily.ui.fragment.ReDailyFragment.java", "BodyUseAPI": [], "Fixed commit": "42425c0f8b8feea00e24635b837ecc882b18cec1", "Url": "https://api.github.com/repos/rockzhai/ReadDaily", "Date": "2017-12-07T15:55:41Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.rockzhai.readdaily.util.StateUtils.isNetworkAvailable(getContext())) { mPresenter.getReDailyData(); }else { setDataRefresh(false); if ((content.getText().toString()) == \"\") { content.setText(\"\u7f51\u7edc\u65e0\u8fde\u63a5\uff0c\u8bf7\u68c0\u67e5\u7f51\u7edc\u540e\u91cd\u8bd5\"); } android.widget.Toast.makeText(getContext(), \"\u7f51\u7edc\u65e0\u8fde\u63a5\uff0c\u8bf7\u68c0\u67e5\u7f51\u7edc\u540e\u91cd\u8bd5\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/857/buggy-version/app.src.main.java.com.rockzhai.readdaily.ui.fragment.ReDailyFragment.java", "BodyUseAPI": [], "Fixed commit": "42425c0f8b8feea00e24635b837ecc882b18cec1", "Url": "https://api.github.com/repos/rockzhai/ReadDaily", "Date": "2017-12-07T15:55:41Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.rockzhai.readdaily.util.StateUtils.isNetworkAvailable(getContext())) { mPresenter.getDailyData(); }else { setDataRefresh(false); if ((content.getText().toString()) == \"\") { content.setText(\"\u7f51\u7edc\u65e0\u8fde\u63a5\uff0c\u8bf7\u68c0\u67e5\u7f51\u7edc\u540e\u91cd\u8bd5\"); } android.widget.Toast.makeText(getContext(), \"\u7f51\u7edc\u65e0\u8fde\u63a5\uff0c\u8bf7\u68c0\u67e5\u7f51\u7edc\u540e\u91cd\u8bd5\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/857/buggy-version/app.src.main.java.com.rockzhai.readdaily.ui.fragment.DailyFragment.java", "BodyUseAPI": [], "Fixed commit": "42425c0f8b8feea00e24635b837ecc882b18cec1", "Url": "https://api.github.com/repos/rockzhai/ReadDaily", "Date": "2017-12-07T15:55:41Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.rockzhai.readdaily.util.StateUtils.isNetworkAvailable(getContext())) { mPresenter.getDailyData(); }else { setDataRefresh(false); if ((content.getText().toString()) == \"\") { content.setText(\"\u7f51\u7edc\u65e0\u8fde\u63a5\uff0c\u8bf7\u68c0\u67e5\u7f51\u7edc\u540e\u91cd\u8bd5\"); } android.widget.Toast.makeText(getContext(), \"\u7f51\u7edc\u65e0\u8fde\u63a5\uff0c\u8bf7\u68c0\u67e5\u7f51\u7edc\u540e\u91cd\u8bd5\", Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/857/buggy-version/app.src.main.java.com.rockzhai.readdaily.ui.fragment.DailyFragment.java", "BodyUseAPI": [], "Fixed commit": "42425c0f8b8feea00e24635b837ecc882b18cec1", "Url": "https://api.github.com/repos/rockzhai/ReadDaily", "Date": "2017-12-07T15:55:41Z"},
{"Line": "=>4716", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elmakers.mine.bukkit.wand.Wand.getWandId(inventory.getItem(storedSlot))", "com.elmakers.mine.bukkit.wand.Wand.getWandId(org.bukkit.inventory.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((storedId != null) && (storedId.equals(id))) && (currentId != (id))) { storedInventory.setItem(storedSlot, null); controller.info((\"Cleared wand on inv close for player \" + (player.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5912/buggy-version/src.main.java.com.elmakers.mine.bukkit.wand.Wand.java", "BodyUseAPI": [], "Fixed commit": "b605c0e3ad728681942852b089a7498fccc14509", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2016-03-02T17:36:15Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((store.storePictures(pictureList)) != 200) { jsonArrayList.clear(); pictureList.clear(); return false; }else { jsonArrayList.clear(); pictureList.clear(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1732/buggy-version/Client.src.main.java.addImage.AddImageLogic.java", "BodyUseAPI": ["java.util.ArrayList<model.Picture>.clear()", "java.util.ArrayList<model.Picture>.clear()"], "Fixed commit": "edc52aca2be1daa2ce841f0d3aad25b13198c6a9", "Url": "https://api.github.com/repos/tobiastry/Photoapp", "Date": "2013-12-08T02:11:42Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(myCurrentTipIsCentered)) { myX = me.getX(); myY = me.getY(); if ((c instanceof javax.swing.JComponent) && ((((javax.swing.JComponent) (c)).getToolTipText(me)) == null)) { hideCurrent(me, null, null); }else maybeShowFor(c, me); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7544/buggy-version/platform.platform-impl.src.com.intellij.ide.IdeTooltipManager.java", "BodyUseAPI": [], "Fixed commit": "5ec6154e30d3ed2f828d02e2a8115c1c6e823b30", "Url": "https://api.github.com/repos/JetBrains/intellij-community", "Date": "2012-03-13T15:23:19Z"},
{"Line": "=>713", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!memberFound) { java.lang.String ownerString = td.getValue(TagData.USER); org.json.JSONObject owner = new org.json.JSONObject(ownerString); long ownerId = owner.optLong(\"id\", Task.USER_ID_IGNORE); if ((ownerId > 0) && (assignedId == ownerId)) memberFound = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7929/buggy-version/astrid.src.com.todoroo.astrid.activity.TaskListActivity.java", "BodyUseAPI": [], "Fixed commit": "182e892ec1e81d7a0cf5e2d023ae63800500acb6", "Url": "https://api.github.com/repos/sbosley/astrid", "Date": "2013-01-16T22:09:39Z"},
{"Line": "=>454", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag == 1) this.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3863/buggy-version/src.com.example.team04adventure.Controller.StorageManager.java", "BodyUseAPI": [], "Fixed commit": "38b53be28ef9755b67ac53640610ec8910666959", "Url": "https://api.github.com/repos/CMPUT301F13T04/Team04Adventure", "Date": "2013-10-31T01:32:23Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(database.isOpen())) { this.open(); flag = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3863/buggy-version/src.com.example.team04adventure.Controller.StorageManager.java", "BodyUseAPI": [], "Fixed commit": "38b53be28ef9755b67ac53640610ec8910666959", "Url": "https://api.github.com/repos/CMPUT301F13T04/Team04Adventure", "Date": "2013-10-31T01:32:23Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((animThread) != null) { animThread.setState(edu.utk.phys.astro.HubbleExpansionSim.DONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5712/buggy-version/src.edu.utk.phys.astro.HubbleExpansionSim.java", "BodyUseAPI": [], "Fixed commit": "709cecee446d5171daa9b9771e4be93863851760", "Url": "https://api.github.com/repos/mhworth/Hubble-Expander", "Date": "2011-03-01T18:36:00Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vo.initExpr) != null) { assignVarObject(vo, vo.initExpr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1799/buggy-version/src.main.java.kalang.compiler.Ast2Class.java", "BodyUseAPI": ["kalang.compiler.Ast2Class.assignVarObject(kalang.ast.VarObject,vo.initExpr)"], "Fixed commit": "5c0ecfd08abcd60e7f17988b3ae5be92b069cc31", "Url": "https://api.github.com/repos/kasonyang/kalang", "Date": "2016-02-27T13:01:37Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(clusterName.isEmpty())) && (java.lang.Character.isDigit(clusterName.charAt(0)))) throw new java.lang.IllegalArgumentException(\"Cluster name cannot begin with a digit\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8206/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OCommandExecutorSQLCreateCluster.java", "BodyUseAPI": [], "Fixed commit": "11d6b34dab2f2afe646e2f0486eda6a6f261ae02", "Url": "https://api.github.com/repos/FHeNuS/orientdb", "Date": "2013-02-01T15:21:31Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getConfig().getConfigurationSection(\"maps\")) == null) { return java.util.Collections.emptySet(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7998/buggy-version/src.tenny1028.assassin.config.MapsConfig.java", "BodyUseAPI": [], "Fixed commit": "a3d708d00771f13a1eaf19d6fa2a9571e7224d93", "Url": "https://api.github.com/repos/DrOverbuild/AssassinMinigame", "Date": "2016-05-29T23:04:35Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.loansystem.model.Loan.getClient()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((client.getClientHistory()) != null) && ((client.getClientHistory().size()) > 0)) { clientHistory = client.getClientHistory().get(0); }else { clientHistory = new com.loansystem.model.ClientHistory(); clientHistory.setClient(client); clientHistory.setClientGroup(client.getClientGroup()); clientHistory.setClientStatus(client.getClientStatus()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1819/buggy-version/src.main.java.com.loansystem.service.LoanServiceImpl.java", "BodyUseAPI": ["com.loansystem.model.Client.getClientStatus()", "com.loansystem.model.Client.getClientHistory()", "com.loansystem.model.ClientHistory.setClient(com.loansystem.model.Client)", "client.getClientHistory().get(int)", "com.loansystem.model.Client.getClientGroup()", "com.loansystem.model.ClientHistory.setClientStatus(client.getClientStatus())", "com.loansystem.model.ClientHistory.setClientGroup(client.getClientGroup())"], "Fixed commit": "10a670de8ed5db1b2b63870f2bc2a37aa86c34d3", "Url": "https://api.github.com/repos/alg0ritm/Erki_Loan_System", "Date": "2012-05-26T16:58:26Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.graphStorage.getExtension()) instanceof com.graphhopper.storage.extensions.RoadSignExtension) { roadSigns = new com.graphhopper.storage.extensions.RoadSignEncoder(graphStorage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/758/buggy-version/core.src.main.java.com.graphhopper.reader.OSMReader.java", "BodyUseAPI": [], "Fixed commit": "a53d1e74fe4a7512db320eda5a796e01a79781a8", "Url": "https://api.github.com/repos/andreaswolf/graphhopper", "Date": "2015-08-31T07:43:07Z"},
{"Line": "=>575", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((roadSigns) != null) { if (node.hasTag(\"highway\", \"traffic_signals\")) { roadSigns.markTrafficLight(nodeId, true); }else if (node.hasTag(\"highway\", \"stop\")) { roadSigns.markStopSign(nodeId, true); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/758/buggy-version/core.src.main.java.com.graphhopper.reader.OSMReader.java", "BodyUseAPI": [], "Fixed commit": "a53d1e74fe4a7512db320eda5a796e01a79781a8", "Url": "https://api.github.com/repos/andreaswolf/graphhopper", "Date": "2015-08-31T07:43:07Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (stopFlag) { java.lang.System.out.println(\"Socket closed.\"); }else { java.lang.System.err.println((\"Socket error: \" + e)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7006/buggy-version/libs.iqrf.udp.judp-examples.src.main.java.com.microrisc.udp.examples.WriteRead.java", "BodyUseAPI": [], "Fixed commit": "ce409c0ddc2e98f32a81184f96d600a420e6c61c", "Url": "https://api.github.com/repos/MICRORISC/iqrfsdk", "Date": "2016-06-12T06:02:11Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.andyshao.reflect.ClassOperation.forName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(innerClass.equals(this.signature.clazz))) this.signature.innerClassSignatures.put(innerClass, new com.github.andyshao.reflect.SignatureDetector(this.api).getSignature(innerClass));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5126/buggy-version/src.main.java.com.github.andyshao.reflect.SignatureDetector.java", "BodyUseAPI": ["com.github.andyshao.reflect.SignatureDetector.getSignature(java.lang.Class<?>)", "java.util.Map<java.lang.Class<?>, com.github.andyshao.reflect.SignatureDetector.ClassSignature>.put(java.lang.Class<?>,com.github.andyshao.reflect.SignatureDetector.ClassSignature)"], "Fixed commit": "603d0a75edb2d1397c4014ec8a9e6cc9a5bb8979", "Url": "https://api.github.com/repos/Andy-Shao/Gear", "Date": "2016-03-07T09:15:16Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getY()) > (gameScene.TowerSegment.floor)) vy -= 0.1F;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4865/buggy-version/core.src.gameScene.TowerSegment.java", "BodyUseAPI": [], "Fixed commit": "6b3ae9b3b16fb9777893e1e0eb63de2479514b94", "Url": "https://api.github.com/repos/Johannes-Larsson/Minaret-Builder", "Date": "2015-05-29T10:25:02Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.serviceClass) == null) { if ((other.serviceClass) != null) { return false; } }else if (!(this.serviceClass.equals(other.serviceClass))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6883/buggy-version/ui.admin.src.main.java.org.openengsb.ui.admin.model.ServiceId.java", "BodyUseAPI": [], "Fixed commit": "6d69ed6659d02f2f1ded3d9094137f6457fb3958", "Url": "https://api.github.com/repos/openengsb/openengsb", "Date": "2011-04-14T22:02:35Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.serviceId) == null) { if ((other.serviceId) != null) { return false; } }else if (!(this.serviceId.equals(other.serviceId))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6883/buggy-version/ui.admin.src.main.java.org.openengsb.ui.admin.model.ServiceId.java", "BodyUseAPI": [], "Fixed commit": "6d69ed6659d02f2f1ded3d9094137f6457fb3958", "Url": "https://api.github.com/repos/openengsb/openengsb", "Date": "2011-04-14T22:02:35Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getClass()) != (obj.getClass())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6883/buggy-version/ui.admin.src.main.java.org.openengsb.ui.admin.model.ServiceId.java", "BodyUseAPI": [], "Fixed commit": "6d69ed6659d02f2f1ded3d9094137f6457fb3958", "Url": "https://api.github.com/repos/openengsb/openengsb", "Date": "2011-04-14T22:02:35Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.response.intermediate)) { synchronized(errorListeners) { errorListeners.clear(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7281/buggy-version/jus-java.src.main.java.io.apptik.comm.jus.Request.java", "BodyUseAPI": [], "Fixed commit": "5a02a9e2121965a0f65faa35aad4e8b87c36161d", "Url": "https://api.github.com/repos/apptik/jus", "Date": "2016-03-31T13:06:10Z"},
{"Line": "=>840", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.response.intermediate)) { responseListeners.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7281/buggy-version/jus-java.src.main.java.io.apptik.comm.jus.Request.java", "BodyUseAPI": [], "Fixed commit": "5a02a9e2121965a0f65faa35aad4e8b87c36161d", "Url": "https://api.github.com/repos/apptik/jus", "Date": "2016-03-31T13:06:10Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (property.startsWith(StanfordCoreNLP.CUSTOM_ANNOTATOR_PREFIX)) { customName = property.substring(StanfordCoreNLP.CUSTOM_ANNOTATOR_PREFIX.length()); customClassName = properties.getProperty(property); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5039/buggy-version/src.edu.stanford.nlp.pipeline.AnnotatorImplementations.java", "BodyUseAPI": ["java.util.Properties.getProperty(java.lang.String)", "java.lang.String.substring(StanfordCoreNLP.CUSTOM_ANNOTATOR_PREFIX.length())"], "Fixed commit": "54893fd676fd13c708103ee2c032e0bc3597b32c", "Url": "https://api.github.com/repos/kno10/CoreNLP", "Date": "2017-03-19T18:56:10Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (manager == null) { throw new java.lang.NullPointerException(\"manager can't be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6750/buggy-version/src.main.java.com.craftfire.commons.yaml.YamlNode.java", "BodyUseAPI": [], "Fixed commit": "7056407af4df7481ff273720082d7baabfb167f0", "Url": "https://api.github.com/repos/Wolf480pl/CraftCommons", "Date": "2013-02-23T18:31:14Z"},
{"Line": "=>278", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPreviewCallback) != null) { mCamera.setPreviewCallback(mPreviewCallback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7299/buggy-version/app.src.main.java.com.sh1r0.caffe_android_demo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "2732825cc2c7e2b52da1683fa0a6335636d589a6", "Url": "https://api.github.com/repos/Oh233/Ancaffe", "Date": "2015-11-30T03:22:36Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNotBlank(propValue)) { return propValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4431/buggy-version/nuxeo-core-binarymanager-common.src.main.java.org.nuxeo.ecm.blob.AbstractCloudBinaryManager.java", "BodyUseAPI": [], "Fixed commit": "a78d2aba3b802a752b09cdbe32630b5d34f46209", "Url": "https://api.github.com/repos/nuxeo/nuxeo-core-binarymanager-cloud", "Date": "2016-01-08T15:59:09Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((path) != null) path.remove(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5395/buggy-version/src.mirroruniverse.g2.Backtracker.java", "BodyUseAPI": [], "Fixed commit": "3181cac6b789635cc690566e025f4b95c4fe5cd1", "Url": "https://api.github.com/repos/epkatz/MirrorUniverse", "Date": "2011-11-29T21:33:05Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<integratedtoolkit.types.resources.Worker<T>, integratedtoolkit.util.ResourceScheduler<P, T>>.get(integratedtoolkit.types.resources.Worker<T>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (ui != null) { blockedActions = ui.getBlockedActions(); }else { blockedActions = new java.util.LinkedList<integratedtoolkit.scheduler.types.AllocatableAction<P, T>>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/211/buggy-version/saas.programming_model.compss.runtime.scheduler.commons.src.main.java.integratedtoolkit.components.impl.TaskScheduler.java", "BodyUseAPI": ["integratedtoolkit.util.ResourceScheduler<P, T>.getBlockedActions()"], "Fixed commit": "453d5339338f737fe14ed8394d8d27957f2b134f", "Url": "https://api.github.com/repos/ascetictoolbox/ascetictoolbox", "Date": "2016-10-11T02:48:48Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.text.SimpleDateFormat.parse(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((destFormatTemp.format(parsed).length()) > 4) destFormat = new java.text.SimpleDateFormat(\"dd-MMM hh:mm aaa\"); else destFormat = new java.text.SimpleDateFormat(\"dd-MMM hh:mm aaa, z\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5893/buggy-version/mobile.src.main.java.ws.mahesh.cwc2015lite.utils.TimeZoneHelper.java", "BodyUseAPI": [], "Fixed commit": "b9fb8c406481c7fb422a48a31707753d8d816229", "Url": "https://api.github.com/repos/xMaheshx/World-Cup-2015-Lite", "Date": "2015-02-01T12:49:18Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ImageView.getTag()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (tag.equals(packageName)) { android.graphics.drawable.TransitionDrawable td = new android.graphics.drawable.TransitionDrawable(new android.graphics.drawable.Drawable[]{ com.googlecode.networklog.ApplicationsTracker.loading_icon, drawable }); td.setCrossFadeEnabled(true); view.setImageDrawable(td); td.startTransition(750); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8409/buggy-version/src.com.googlecode.networklog.ApplicationsTracker.java", "BodyUseAPI": [], "Fixed commit": "77400ca9fdbbc2e9637661ccba20bdfc16d8f219", "Url": "https://api.github.com/repos/pragma-/networklog", "Date": "2013-01-22T17:27:24Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i < ((trackRecord.size()) - 2)) { org.deidentifier.arx.BenchmarkExperiment3.BENCHMARK.addRun(measure.toString(), criterion.toString(), java.lang.String.valueOf(suppressionLimit), dataset.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/51/buggy-version/src.org.deidentifier.arx.BenchmarkExperiment3.java", "BodyUseAPI": [], "Fixed commit": "58cfd762c7d121f18e0a45a45e0618eb2cebade0", "Url": "https://api.github.com/repos/arx-deidentifier/highdimensional-benchmark", "Date": "2015-07-01T11:38:33Z"},
{"Line": "=>753", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values[i]) == null) { query.append(columns[i]).append(\" IS NULL\"); }else { query.append(columns[i]).append(\" = '\").append(values[i]).append(\"'\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2770/buggy-version/src.main.java.it.mineblock.mbcore.MySQL.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.Object)"], "Fixed commit": "08f12686a8d38a5e20ed1d40792be588cef8cda0", "Url": "https://api.github.com/repos/LoreSchaeffer/MBCore", "Date": "2017-11-18T22:05:30Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((binding.get(\"orient\")) == null) binding.put(\"orient\", new com.orientechnologies.orient.graph.script.OScriptGraphOrientWrapper());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6494/buggy-version/graphdb.src.main.java.com.orientechnologies.orient.graph.handler.OGraphServerHandler.java", "BodyUseAPI": ["javax.script.Bindings.put(java.lang.String,com.orientechnologies.orient.graph.script.OScriptGraphOrientWrapper)"], "Fixed commit": "434553e1b0cc0c23490dcad1e4968f0efcfd1843", "Url": "https://api.github.com/repos/fabriziofortino/orientdb", "Date": "2015-04-23T16:56:58Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (env != null) { targetsEval = com.g2one.hudson.grails.GrailsBuilder.evalTarget(env, this.targets); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2664/buggy-version/src.main.java.com.g2one.hudson.grails.GrailsBuilder.java", "BodyUseAPI": ["com.g2one.hudson.grails.GrailsBuilder.evalTarget(hudson.EnvVars,java.lang.String)"], "Fixed commit": "945df4055c87c34c972909ca5786075870f36866", "Url": "https://api.github.com/repos/jenkinsci/grails-plugin", "Date": "2013-03-26T17:33:30Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (patternIndex == ((pattern.length) - 1)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7052/buggy-version/KMP.src.de.kmp.SearchNaive.java", "BodyUseAPI": [], "Fixed commit": "d76e6db77522bc2f2b408a9d03f73b990c6a6c67", "Url": "https://api.github.com/repos/FalscherSchotte/KMP", "Date": "2011-10-14T12:11:57Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((text == null) || (pattern == null)) || ((text.length) == 0)) || ((pattern.length) == 0)) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7052/buggy-version/KMP.src.de.kmp.SearchNaive.java", "BodyUseAPI": [], "Fixed commit": "d76e6db77522bc2f2b408a9d03f73b990c6a6c67", "Url": "https://api.github.com/repos/FalscherSchotte/KMP", "Date": "2011-10-14T12:11:57Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((text == null) || (pattern == null)) || ((text.length) == 0)) || ((pattern.length) == 0)) || ((pattern.length) > (text.length))) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7052/buggy-version/KMP.src.de.kmp.SearchKMP.java", "BodyUseAPI": [], "Fixed commit": "d76e6db77522bc2f2b408a9d03f73b990c6a6c67", "Url": "https://api.github.com/repos/FalscherSchotte/KMP", "Date": "2011-10-14T12:11:57Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((searchStreet) == null) { searchStreet = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7470/buggy-version/src.main.java.bean.PersonBean.java", "BodyUseAPI": [], "Fixed commit": "46b0ec0fa14222e8e9b57e9ab39b75a0a071b4b2", "Url": "https://api.github.com/repos/DmitrySamsonov/TodesTask", "Date": "2017-10-27T08:43:56Z"},
{"Line": "=>426", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (record.tileView.setDual(record.tile.supportsDualTargets())) { record.tileView.handleStateChanged(record.tile.getState()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5074/buggy-version/packages.SystemUI.src.com.android.systemui.qs.QSPanel.java", "BodyUseAPI": ["com.android.systemui.qs.QSTileView.handleStateChanged(record.tile.getState())", "com.android.systemui.qs.QSTile<?>.getState()"], "Fixed commit": "b2dd5cb900d031acf255bddcbe2f57efb8f43adb", "Url": "https://api.github.com/repos/XPerience-AOSP-Lollipop/android_frameworks_base", "Date": "2015-01-30T18:27:52Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((infoForCommand.hashCode()) == (lastInfoForCommandHashCode)) { lastInfoForCommandHashCode = 0; expressionsLearnt.remove(((expressionsLearnt.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2940/buggy-version/src.instructable.server.TopDMAllActions.java", "BodyUseAPI": [], "Fixed commit": "bc13c8c36c3c8820e6228c2edde1a6e945a9b61a", "Url": "https://api.github.com/repos/azariaa/InstructableServer", "Date": "2015-06-15T14:06:15Z"},
{"Line": "=>397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user_type.equals(\"free\")) { for (int i = 0; i < mListLength; i++) { com.patan.gimnasio.domain.Routine item = ((com.patan.gimnasio.domain.Routine) (adapter.getItem(i))); if (item.isChecked()) { total++; android.database.Cursor c = db.getFreemiumRoutineByName(item.getName()); long id = c.getLong(0); db.deleteRoutine(id); } } }else { for (int i = 0; i < mListLength; i++) { com.patan.gimnasio.domain.Routine item = ((com.patan.gimnasio.domain.Routine) (adapter.getItem(i))); if (item.isChecked()) { total++; android.database.Cursor c = db.getPremiumRoutineByName(item.getName(), gym_name); long id = c.getLong(0); db.deleteRoutine(id); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7397/buggy-version/GimnasIO.app.src.main.java.com.patan.gimnasio.activities.RoutineListActivity.java", "BodyUseAPI": [], "Fixed commit": "020f99b7f3b29bc8c80606c6ce2c8909f3bc8be3", "Url": "https://api.github.com/repos/Belberus/GimnasIO-app", "Date": "2017-12-27T15:42:58Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mouse.x) < (pw)) { for (battleberger.model.AbstractShip ship : me.getShips()) { if (ship.overlap(cmouse.x, cmouse.y)) shipSel = ship; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6773/buggy-version/src.battleberger.view.GamePanel.java", "BodyUseAPI": [], "Fixed commit": "72136742ba32bc593b6b319558cac481ef511dbe", "Url": "https://api.github.com/repos/JuDePom/BattleBerger", "Date": "2016-05-22T01:00:45Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((path.length) > 0) { java.util.List<java.lang.String> l = il.ac.technion.cs.smarthouse.system.file_system.PathBuilder.decomposePath(path); name = l.get(((l.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8213/buggy-version/System.src.main.java.il.ac.technion.cs.smarthouse.system.file_system.FileSystemImpl.java", "BodyUseAPI": ["il.ac.technion.cs.smarthouse.system.file_system.PathBuilder.decomposePath(java.lang.String[])"], "Fixed commit": "eb21f37aa026cec91fc925ef5acfed3eb9851d3e", "Url": "https://api.github.com/repos/TechnionYP5777/Smartcity-Smarthouse", "Date": "2017-06-16T21:51:08Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gi instanceof com.github.lg198.codefray.game.golem.CFGolemInfoWrapper)) { game.stop(new com.github.lg198.codefray.game.GameEndReason.Infraction(getTeam(), GameEndReason.Infraction.Type.ARTIFICIAL_GOLEM_INFO)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/15/buggy-version/src.com.github.lg198.codefray.game.golem.CFGolem.java", "BodyUseAPI": [], "Fixed commit": "28848f7aab4aa8e1b217cc47dfc54a37583a9250", "Url": "https://api.github.com/repos/lg198/CodeFray", "Date": "2015-09-16T17:58:09Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((increaseMap.get(dep).size()) == 0) { mean = 0.0; meadian = 0.0; }else { mean = scijava.stats.BasicStats.meanOfDoubles(increaseMap.get(dep)); meadian = scijava.stats.BasicStats.medianOfDoubles(increaseMap.get(dep)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6440/buggy-version/src.parsing.LinkIncreaseParsing.java", "BodyUseAPI": ["scijava.stats.BasicStats.medianOfDoubles(java.util.List<java.lang.Double>)", "java.util.HashMap<java.lang.Integer, java.util.List<java.lang.Double>>.get(int)", "java.util.HashMap<java.lang.Integer, java.util.List<java.lang.Double>>.get(int)", "scijava.stats.BasicStats.meanOfDoubles(java.util.List<java.lang.Double>)"], "Fixed commit": "37bda291e29dd020d7e4e02f926d67077a84c089", "Url": "https://api.github.com/repos/pendgaft/cash-nightwing", "Date": "2016-02-17T20:33:27Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((increaseMap.get(dep).size()) > 0) { increaseList.add(increaseMap.get(dep)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6440/buggy-version/src.parsing.LinkIncreaseParsing.java", "BodyUseAPI": ["java.util.List<java.util.Collection<java.lang.Double>>.add(java.util.List<java.lang.Double>)", "java.util.HashMap<java.lang.Integer, java.util.List<java.lang.Double>>.get(int)"], "Fixed commit": "37bda291e29dd020d7e4e02f926d67077a84c089", "Url": "https://api.github.com/repos/pendgaft/cash-nightwing", "Date": "2016-02-17T20:33:27Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((src.getRunnables()) != null) { json.add(\"runnables\", context.serialize(src.getRunnables())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2589/buggy-version/twill-core.src.main.java.org.apache.twill.internal.json.JvmOptionsCodec.java", "BodyUseAPI": ["com.google.gson.JsonSerializationContext.serialize(src.getRunnables())", "JvmOptions.DebugOptions.getRunnables()", "com.google.gson.JsonObject.add(java.lang.String,context.serialize(src.getRunnables()))"], "Fixed commit": "1187ebf790bc836e218b19b00854102e15047f73", "Url": "https://api.github.com/repos/apache/incubator-twill", "Date": "2014-04-14T19:12:41Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((team375.Soldier.proxima_zombies) < (team375.Soldier.rondes_zombies.length)) { int dif = (team375.Soldier.rondes_zombies[team375.Soldier.proxima_zombies]) - torn; if (dif < 10) zombies_aprop = 2; else if (dif < 15) zombies_aprop = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3732/buggy-version/battlecode-scaffold-master.src.team375.Soldier.java", "BodyUseAPI": [], "Fixed commit": "30e23dc91c26d589d19860828643674018e90813", "Url": "https://api.github.com/repos/Diana0604/holapepsicola", "Date": "2016-01-21T16:09:25Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sub == null) || ((sub.length()) == 0)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8195/buggy-version/app.src.main.java.de.mytfg.apps.mytfg.firebase.FbVplan.java", "BodyUseAPI": [], "Fixed commit": "29a19bbe6be3806176a3f7a83997adabe1ec8ae3", "Url": "https://api.github.com/repos/MyTFG/mytfg-vplan-app", "Date": "2017-06-26T10:09:58Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (path.endsWith(\".xml\")) { fileContent = fileContent.replaceAll(\"<\", \"&lt;\"); fileContent = fileContent.replaceAll(\">\", \"&gt;\"); fileContent = (\"<div class=\\\"plain\\\"><pre>\" + (fileContent)) + \"</pre></div>\"; }else { language = Settings.MimeType.TEXT_HTML; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/831/buggy-version/app.src.main.java.com.zpauly.githubapp.view.files.FilesActivity.java", "BodyUseAPI": [], "Fixed commit": "b0d42c30b87b0ba33925334c0542f25b04cb0a59", "Url": "https://api.github.com/repos/zpauly/GitHub_Android", "Date": "2016-08-03T08:07:28Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.valxp.app.infiniteflightwatcher.Webservices.fetchJson(APIConstants.APICalls,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (stream == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2060/buggy-version/app.src.main.java.com.valxp.app.infiniteflightwatcher.Webservices.java", "BodyUseAPI": [], "Fixed commit": "4d0fb3fc75226626ca6fbac2cf0a7bca61cc2b39", "Url": "https://api.github.com/repos/ValXp/IFWatcher", "Date": "2014-06-28T22:41:28Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (array == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2060/buggy-version/app.src.main.java.com.valxp.app.infiniteflightwatcher.model.Users.java", "BodyUseAPI": [], "Fixed commit": "4d0fb3fc75226626ca6fbac2cf0a7bca61cc2b39", "Url": "https://api.github.com/repos/ValXp/IFWatcher", "Date": "2014-06-28T22:41:28Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.valxp.app.infiniteflightwatcher.Webservices.getJSON(APIConstants.APICalls.FLIGHT_DETAILS,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (array == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2060/buggy-version/app.src.main.java.com.valxp.app.infiniteflightwatcher.model.Flight.java", "BodyUseAPI": [], "Fixed commit": "4d0fb3fc75226626ca6fbac2cf0a7bca61cc2b39", "Url": "https://api.github.com/repos/ValXp/IFWatcher", "Date": "2014-06-28T22:41:28Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parts2.length) > 4) o2 = parts2[4];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5266/buggy-version/src.main.java.ch.tkuhn.hashuri.rdf.SerStatementComparator.java", "BodyUseAPI": [], "Fixed commit": "f3ed7002dcbef59e001e849218c20cec894bb0e0", "Url": "https://api.github.com/repos/tkuhn/hashuri-java", "Date": "2013-11-08T10:32:54Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.mail.Store.getFolder(config.getFolder())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(folder.isOpen())) { folder.open(Folder.READ_ONLY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3676/buggy-version/src.main.java.org.klco.email2html.EmailReader.java", "BodyUseAPI": ["javax.mail.Folder.open(Folder.READ_ONLY)"], "Fixed commit": "5455e9b6cef7e685b0302a70d1b1236086273b37", "Url": "https://api.github.com/repos/klcodanr/email2html", "Date": "2014-10-10T14:05:39Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pn != null) number.setTelephoneNumber(pn.getTelephoneNumber());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/399/buggy-version/kernel.framework.src.api.de.janrufmonitor.repository.AbstractWebCallerManager.java", "BodyUseAPI": ["de.janrufmonitor.framework.IPhonenumber.getTelephoneNumber()", "de.janrufmonitor.framework.IPhonenumber.setTelephoneNumber(pn.getTelephoneNumber())"], "Fixed commit": "f44b87bf111eaa0371a9586cfc10762eabc52318", "Url": "https://api.github.com/repos/tbrandt77/janrufmonitor", "Date": "2013-07-22T17:33:49Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.depaul.csc595.jarvis.profile.user.UserInfo.getInstance().getIsLoggedIn()) { edu.depaul.csc595.jarvis.profile.user.UserInfo.getInstance().logOutUser(this); this.recreate(); }else if (edu.depaul.csc595.jarvis.profile.user.UserInfo.getInstance().isGoogleLoggedIn()) { edu.depaul.csc595.jarvis.profile.user.UserInfo.getInstance().signOutWithGoogle(); this.recreate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7035/buggy-version/Jarvis.app.src.main.java.edu.depaul.csc595.jarvis.detection.DetectionBaseActivity.java", "BodyUseAPI": [], "Fixed commit": "033bc5343aaf1a1f5c36fa5b8b36855dbd53e8ff", "Url": "https://api.github.com/repos/csc595g1/hrpd", "Date": "2016-02-24T15:56:46Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (propValue == null) { propValue = properties.get(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/836/buggy-version/hikaricp.src.main.java.com.zaxxer.hikari.util.PropertyBeanSetter.java", "BodyUseAPI": [], "Fixed commit": "5880aac801d9a8f17e641b3e98a2d50ef154a720", "Url": "https://api.github.com/repos/brettwooldridge/HikariCP", "Date": "2014-11-08T07:07:09Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (propValue == null) { propValue = properties.get(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/836/buggy-version/hikaricp-java6.src.main.java.com.zaxxer.hikari.util.PropertyBeanSetter.java", "BodyUseAPI": [], "Fixed commit": "5880aac801d9a8f17e641b3e98a2d50ef154a720", "Url": "https://api.github.com/repos/brettwooldridge/HikariCP", "Date": "2014-11-08T07:07:09Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mQuery) == null) || (mQuery.isEmpty())) { refresh(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4620/buggy-version/fridgi-android.src.com.fridgi.SearchRecipeFragment.java", "BodyUseAPI": [], "Fixed commit": "9bbabab77bcbb7d367b7b27a8d3b0ad083e77782", "Url": "https://api.github.com/repos/coolbrow/fridgi", "Date": "2012-12-06T21:06:44Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hour == 0) hour = 12;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3184/buggy-version/src.org.adaptlab.chpir.android.survey.QuestionFragments.TimeQuestionFragment.java", "BodyUseAPI": [], "Fixed commit": "0f2282b677090abb171ad267e05e35ac6051d8df", "Url": "https://api.github.com/repos/mnipper/AndroidSurvey", "Date": "2013-12-13T15:44:17Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((createMapMarkersTask) != null) { createMapMarkersTask.cancel(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1768/buggy-version/app.src.main.java.com.rsibley.movielocations.MovieDetailFragment.java", "BodyUseAPI": [], "Fixed commit": "ace518c0d2e80b8e3a92235be360051e9b5d2bbf", "Url": "https://api.github.com/repos/ski-matic/MovieLocations", "Date": "2017-10-31T19:18:34Z"},
{"Line": "=>4827", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (mnt != null) { seq.append(mnt); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8765/buggy-version/src.main.java.com.astrazeneca.vardict.VarDict.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.Character)"], "Fixed commit": "3988eece0016cef1e0bc0efd1d6d2ac235cb9230", "Url": "https://api.github.com/repos/AstraZeneca-NGS/VarDictJava", "Date": "2015-11-19T12:56:58Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (queue.isEmpty()) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7968/buggy-version/GreedySearch.java", "BodyUseAPI": [], "Fixed commit": "2d2079bed2467fd1dcf8bb0b5adf39e0a95dd2dd", "Url": "https://api.github.com/repos/zrrobbins/ai-project2", "Date": "2016-09-04T17:08:11Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getSession(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(java.util.Objects.isNull(session))) { user = ((org.ryyaan2004.flashy.user.User) (session.getAttribute(\"user\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1069/buggy-version/src.main.java.org.ryyaan2004.flashy.oauth.LoginFilter.java", "BodyUseAPI": ["javax.servlet.http.HttpSession.getAttribute(java.lang.String)"], "Fixed commit": "1bea09d69909ee887249a2cb6afe5c334f9413e3", "Url": "https://api.github.com/repos/ryyaan2004/flashy", "Date": "2016-11-23T03:49:41Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((exception.getMessage()) != null) { if (exception.getMessage().equals(\"UsuariNoExisteix\")) throw new as.project.domain.controllers.UsuariNoExisteix(); if (exception.getMessage().equals(\"RecursSalaSolapada\")) throw new as.project.domain.controllers.RecursSalaSolapada(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7854/buggy-version/src.as.project.domain.controllers.CtrlCasDUsCrearReservaAmbNotificacio.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.Exception.getMessage()", "java.lang.Exception.getMessage()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "2a4b5a32f762fdf99a63bab5c0b7d5fd9fac1910", "Url": "https://api.github.com/repos/guillemcordoba/Project-AS", "Date": "2016-06-13T06:13:16Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (((v == null) || ((v.length()) <= 0)) || ((v.startsWith(\"[\")) && (v.endsWith(\"]\")))) { parsedKeys.add((propName + \".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5511/buggy-version/src.im.webuzz.config.Config.java", "BodyUseAPI": [], "Fixed commit": "c144af853e4b5cdad6a4aa28475cb0a641857f04", "Url": "https://api.github.com/repos/webuzz/simpleconfig", "Date": "2016-12-13T05:51:16Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((delegate.getFetchPlan()) != null) textRequest.setFetchPlan(delegate.getFetchPlan());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6626/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.OCommandExecutorSQLDelegate.java", "BodyUseAPI": ["com.orientechnologies.orient.core.command.OCommandRequestText.setFetchPlan(delegate.getFetchPlan())", "com.orientechnologies.orient.core.command.OCommandExecutor.getFetchPlan()"], "Fixed commit": "6c766df271204ad61124f984fe1cfe00ebf0fcc0", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-09-27T11:19:15Z"},
{"Line": "=>332", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasTenant(((org.egov.ptis.domain.entity.property.PropertyImpl) (property)))) { model.addAttribute(org.egov.ptis.web.controller.transactions.exemption.TaxExemptionController.ERROR_MSG, \"error.tenant.exists\"); return PROPERTY_VALIDATION; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2040/buggy-version/egov.egov-ptisweb.src.main.java.org.egov.ptis.web.controller.transactions.exemption.TaxExemptionController.java", "BodyUseAPI": [], "Fixed commit": "3a661a756a34c8a2de1a0d0c620bcecd10165fa0", "Url": "https://api.github.com/repos/egovernments/egov-smartcity-suite", "Date": "2017-04-04T05:09:29Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((c.getStart1()) == (-1)) || ((c.getStart1()) == (-1))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3943/buggy-version/app.src.main.java.uhmanoa.droid_sch.Schedule.java", "BodyUseAPI": [], "Fixed commit": "fd75657cbc19b2710ad5e90cefc644ef448493ee", "Url": "https://api.github.com/repos/1andyn/droid_sch", "Date": "2015-04-02T10:07:10Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.String.class.isAssignableFrom(clazz)) { return new com.flipkart.poseidon.serviceclients.ServiceResponse<T>(((T) (org.apache.commons.io.IOUtils.toString(httpResponse.getEntity().getContent()))), headers); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4180/buggy-version/service-clients-core.src.main.java.com.flipkart.poseidon.serviceclients.ServiceResponseDecoder.java", "BodyUseAPI": [], "Fixed commit": "5e557b976c3dee86006bf502c1ad7761419a84d6", "Url": "https://api.github.com/repos/flipkart-incubator/Poseidon", "Date": "2016-01-06T09:30:05Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(processMetaFile.createNewFile())) { throw new java.io.IOException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3862/buggy-version/Kitodo-FileManagement.src.main.java.org.kitodo.filemanagement.FileManagement.java", "BodyUseAPI": [], "Fixed commit": "7d7875909012706e77429b56f815f999c3653d8b", "Url": "https://api.github.com/repos/Kathrin-Huber/kitodo-production", "Date": "2017-04-21T08:38:00Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(processMetaFile.getParentFile().mkdirs())) { throw new java.io.IOException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3862/buggy-version/Kitodo-FileManagement.src.main.java.org.kitodo.filemanagement.FileManagement.java", "BodyUseAPI": [], "Fixed commit": "7d7875909012706e77429b56f815f999c3653d8b", "Url": "https://api.github.com/repos/Kathrin-Huber/kitodo-production", "Date": "2017-04-21T08:38:00Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fullContact.isFormDefined()) { fullContact.saveForm(); createInfoModel(contact.getPK(), fullContact.getModelId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/392/buggy-version/ejb-core.contact.src.main.java.com.stratelia.webactiv.contact.control.ContactBmImpl.java", "BodyUseAPI": ["com.stratelia.webactiv.contact.control.ContactBmImpl.createInfoModel(contact.getPK(),fullContact.getModelId())", "com.stratelia.webactiv.contact.model.CompleteContact.getModelId()", "com.stratelia.webactiv.contact.model.CompleteContact.saveForm()"], "Fixed commit": "30a9f5010c3f2854ac91030ef57b261a1742ce3b", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Core", "Date": "2015-11-20T00:34:09Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (errors > 0) { status = errors + \" errors\"; }else if (!(org.apache.commons.lang3.StringUtils.isBlank(update.getErrorMessage()))) { status = update.getErrorMessage(); }else { status = (items.size()) + \" items updated\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/602/buggy-version/omod.src.main.java.org.openmrs.module.openconceptlab.fragment.controller.status.PreviousUpdatesFragmentController.java", "BodyUseAPI": [], "Fixed commit": "1a08987b6983021ead5b23ea34eb0b023dcfec20", "Url": "https://api.github.com/repos/openmrs/openmrs-module-openconceptlab", "Date": "2014-11-26T12:34:12Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(java.lang.Exception)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (rootCause != null) { message += (\" caused by '\" + (rootCause.getMessage())) + \"'\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/602/buggy-version/api.src.main.java.org.openmrs.module.openconceptlab.updater.Updater.java", "BodyUseAPI": ["java.lang.Throwable.getMessage()"], "Fixed commit": "1a08987b6983021ead5b23ea34eb0b023dcfec20", "Url": "https://api.github.com/repos/openmrs/openmrs-module-openconceptlab", "Date": "2014-11-26T12:34:12Z"},
{"Line": "=>701", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((len > 64) && (maxBits > 128)) && ((b.length) > (offset + 16))) && (((java.lang.Character.digit(((char) (b[(offset + 16)])), 16)) & 8) == 8)) { len = 192; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8191/buggy-version/jpos.src.main.java.org.jpos.iso.ISOUtil.java", "BodyUseAPI": [], "Fixed commit": "f29e7cff6ba09c3fa31778910b68d22dabfd8dd7", "Url": "https://api.github.com/repos/vsalaman/jPOS", "Date": "2014-04-08T21:27:36Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.PopupWindow.getHeight()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.N_MR1)) && (ph < 0)) { int screenHeight = cn.ieclipse.af.util.AppUtils.getScreenHeight(anchorView.getContext()); popupWindow.setHeight((screenHeight - y)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6154/buggy-version/library.src.cn.ieclipse.af.util.PopupUtils.java", "BodyUseAPI": [], "Fixed commit": "521b2316904599639e30d43d3088e13f4b9aab0f", "Url": "https://api.github.com/repos/Jamling/QuickAF", "Date": "2017-07-19T07:52:47Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.telephony.PhoneNumberUtils.stripSeparators(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((com.baraccasoftware.swipesms.app.util.SwipeSMSProvider.getIdUnReadSMS(getActivity(), add)) != (-1)) { com.baraccasoftware.swipesms.app.util.SwipeSMSProvider.removeUnReadSMS(getActivity(), add); getLoaderManager().restartLoader(com.baraccasoftware.swipesms.app.SMSFragment.LOADER_ID, null, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7843/buggy-version/app.src.main.java.com.baraccasoftware.swipesms.app.SMSFragment.java", "BodyUseAPI": ["com.baraccasoftware.swipesms.app.util.SwipeSMSProvider.removeUnReadSMS(getActivity(),java.lang.String)"], "Fixed commit": "444a381d6d9354893b416e7fff6612b2fe14ce76", "Url": "https://api.github.com/repos/chemickypes/SwipeSMS", "Date": "2014-05-16T13:48:36Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resp.isCommitted()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1968/buggy-version/src.com.delta.core.rover.Rover.java", "BodyUseAPI": [], "Fixed commit": "ba2612f8dcfd2c723691f8002e32c9bec1645c61", "Url": "https://api.github.com/repos/ZhangJiupeng/Delta", "Date": "2015-12-24T03:39:46Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(variables.remove(getBinding(varName)))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4959/buggy-version/jdk.src.gamemodel.Game.java", "BodyUseAPI": [], "Fixed commit": "1d734e8ce025884b6503f4ec04f9b75b9fded388", "Url": "https://api.github.com/repos/dadamgroup/game-designer", "Date": "2016-04-30T15:41:07Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(topic.equals((\"gg/schulinfoapp/\" + token)))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/9113/buggy-version/app.src.main.java.de.gebatzens.ggvertretungsplan.MQTTService.java", "BodyUseAPI": [], "Fixed commit": "10d48d487000f4b46e2094b8f8259e0187db56db", "Url": "https://api.github.com/repos/Cedgetec/SchulinfoApp-android", "Date": "2015-03-16T19:54:02Z"},
{"Line": "=>373", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((asyncApi) == null) { synchronized(asyncApiLock) { if ((asyncApi) == null) { asyncApi = new net.rithms.riot.api.RiotApiAsync(config, endpointManager); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7678/buggy-version/src.main.java.net.rithms.riot.api.RiotApi.java", "BodyUseAPI": [], "Fixed commit": "cffe7913b551ab0995cd5174a69c71898716fac6", "Url": "https://api.github.com/repos/taycaldwell/riot-api-java", "Date": "2016-04-08T03:30:55Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selected) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3635/buggy-version/src.experiment.AppWindow.java", "BodyUseAPI": [], "Fixed commit": "e5ac026adb63e48f07e8eae17c465df027617e25", "Url": "https://api.github.com/repos/NameCT/CIS", "Date": "2014-07-12T18:19:32Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.has(com.adobe.phonegap.push.LOC_KEY)) || (data.has(com.adobe.phonegap.push.LOC_DATA))) { java.lang.String newKey = normalizeKey(key, messageKey, titleKey); android.util.Log.d(com.adobe.phonegap.push.FCMService.LOG_TAG, (((\"replace key \" + key) + \" with \") + newKey)); replaceKey(context, key, newKey, extras, newExtras); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3630/buggy-version/src.android.com.adobe.phonegap.push.FCMService.java", "BodyUseAPI": [], "Fixed commit": "0615b54adb9287b8d2f5067a6fd80d4a0075da94", "Url": "https://api.github.com/repos/kelvinhokk/phonegap-plugin-push", "Date": "2017-11-17T13:05:23Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mTicker) != null) mTicker.queueTimedJob(r, (1 * 1000)); else r.run();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6145/buggy-version/src.plugins.Freetalk.tasks.PersistentTaskManager.java", "BodyUseAPI": [], "Fixed commit": "4e69d41edfb91ab8727330cef04eeed3a857ca29", "Url": "https://api.github.com/repos/zidel/plugin-Freetalk-staging", "Date": "2011-04-05T20:34:02Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((annotations) != null) { mapper = new nl.tudelft.pl2016gr2.core.algorithms.GraphBaseMapper(graph); mapper.mapAnnotations(new java.util.LinkedList(annotations)); annotations = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6026/buggy-version/PL2.PL2-core.src.main.java.nl.tudelft.pl2016gr2.core.algorithms.subgraph.GraphOrdererThread.java", "BodyUseAPI": [], "Fixed commit": "3aa81ad905729762d3ee937acf195b6aaad09262", "Url": "https://api.github.com/repos/ProgrammingLife2016/PL2-2016", "Date": "2016-06-10T08:53:34Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/69/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "a30bfea0983809827487d4d76da4cc116d82b7c1", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.management.ManagementFactory.getPlatformMBeanServer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(server.isRegistered(mbeanName))) { server.registerMBean(this, mbeanName); }else { mbeanIsRegistered.set(false); com.orientechnologies.common.log.OLogManager.instance().warn(this, (\"MBean with name %s has already registered. Probably your system was not shutdown correctly\" + \" or you have several running applications which use OrientDB engine inside\"), mbeanName.getCanonicalName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1936/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.impl.local.paginated.atomicoperations.OAtomicOperationsManager.java", "BodyUseAPI": ["com.orientechnologies.common.log.OLogManager.instance().warn(com.orientechnologies.orient.core.storage.impl.local.paginated.atomicoperations.OAtomicOperationsManager,java.lang.String,java.lang.String)", "javax.management.ObjectName.getCanonicalName()", "javax.management.MBeanServer.registerMBean(com.orientechnologies.orient.core.storage.impl.local.paginated.atomicoperations.OAtomicOperationsManager,javax.management.ObjectName)"], "Fixed commit": "ba9e52875967003c5970ab299b60d9e523907257", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-02-16T12:58:08Z"},
{"Line": "=>619", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.management.ManagementFactory.getPlatformMBeanServer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(server.isRegistered(mbeanName))) { server.registerMBean(this, mbeanName); }else { mbeanIsRegistered.set(false); com.orientechnologies.common.log.OLogManager.instance().warn(this, (\"MBean with name %s has already registered. Probably your system was not shutdown correctly\" + \" or you have several running applications which use OrientDB engine inside\"), mbeanName.getCanonicalName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1936/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.cache.local.O2QCache.java", "BodyUseAPI": ["com.orientechnologies.common.log.OLogManager.instance().warn(com.orientechnologies.orient.core.storage.cache.local.O2QCache,java.lang.String,java.lang.String)", "javax.management.MBeanServer.registerMBean(com.orientechnologies.orient.core.storage.cache.local.O2QCache,javax.management.ObjectName)", "javax.management.ObjectName.getCanonicalName()"], "Fixed commit": "ba9e52875967003c5970ab299b60d9e523907257", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-02-16T12:58:08Z"},
{"Line": "=>968", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.management.ManagementFactory.getPlatformMBeanServer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(server.isRegistered(mbeanName))) { server.registerMBean(this, mbeanName); }else { mbeanIsRegistered.set(false); com.orientechnologies.common.log.OLogManager.instance().warn(this, (\"MBean with name %s has already registered. Probably your system was not shutdown correctly\" + \" or you have several running applications which use OrientDB engine inside\"), mbeanName.getCanonicalName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1936/buggy-version/core.src.main.java.com.orientechnologies.orient.core.storage.cache.local.OWOWCache.java", "BodyUseAPI": ["javax.management.MBeanServer.registerMBean(com.orientechnologies.orient.core.storage.cache.local.OWOWCache,javax.management.ObjectName)", "javax.management.ObjectName.getCanonicalName()", "com.orientechnologies.common.log.OLogManager.instance().warn(com.orientechnologies.orient.core.storage.cache.local.OWOWCache,java.lang.String,java.lang.String)"], "Fixed commit": "ba9e52875967003c5970ab299b60d9e523907257", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2016-02-16T12:58:08Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((WurstClient.INSTANCE.options.google_analytics) == null) WurstClient.INSTANCE.options.google_analytics = WurstClient.INSTANCE.options.new tk.wurst_client.analytics.GoogleAnalytics();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8824/buggy-version/src.tk.wurst_client.analytics.AnalyticsManager.java", "BodyUseAPI": [], "Fixed commit": "cccaabba2fe01e3abacfdc43c755a657cfe18f97", "Url": "https://api.github.com/repos/CisBetter/Wurst-MC-1.10", "Date": "2016-11-03T08:33:50Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((obj) != null) obj.put(\"modified\", new java.util.Date().getTime());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/9125/buggy-version/app.src.main.java.com.felkertech.n.cumulustv.ChannelDatabase.java", "BodyUseAPI": [], "Fixed commit": "9062756ccbf653f99fd4451b47348253850ad7cf", "Url": "https://api.github.com/repos/Fleker/CumulusTV", "Date": "2016-04-24T22:05:46Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((response.body()) != null) && ((response.body().size()) > 0)) mWishListArr.addAll(response.body());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1952/buggy-version/app.src.main.java.com.cocosoft.ecart.wishlistmodule.WishListFragment.java", "BodyUseAPI": ["java.util.List<com.cocosoft.ecart.wishlistmodule.WishList>.addAll(response.body())", "retrofit2.Response<java.util.List<com.cocosoft.ecart.wishlistmodule.WishList>>.body()"], "Fixed commit": "2ee6ba99c60d7e251575d0879ed272ba28a99f52", "Url": "https://api.github.com/repos/CocosoftAndroid/ecart-app", "Date": "2017-11-07T05:17:57Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(intent.getBooleanExtra(\"playing\", false))) { android.util.Log.d(\"TrTS\", \"Track seems paused.\"); }else { outputTextView.setText(((artist + \"\\n\") + track)); if ((initStatus) == (android.speech.tts.TextToSpeech.SUCCESS)) { tts.speak(((artist + \", \") + track), TextToSpeech.QUEUE_FLUSH, null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8746/buggy-version/TrackToSpeech.src.uk.co.jordanrobinson.tracktospeech.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8ee26955d888c5f6efe708f2685bc9ca62d3e4e2", "Url": "https://api.github.com/repos/JordanRobinson/track-to-speech", "Date": "2014-01-01T14:18:55Z"},
{"Line": "=>889", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (logOut != null) { logOut.println(msg); }else { java.lang.System.out.println(\"NUll pointer exception\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2142/buggy-version/src.java.org.apache.cassandra.tools.WapModifyAndGenerateSSTablesUtility.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "6567d0d24b056a7814cad4109ed304819c081d91", "Url": "https://api.github.com/repos/WorksApplications/cassandra", "Date": "2017-02-07T02:27:27Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(shouldQuit)) { handleError(e.getMessage()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6816/buggy-version/src.com.cs456.a2.SocketServer.java", "BodyUseAPI": [], "Fixed commit": "57052a3ec3092c21dc848be74eae69c7c3e8d412", "Url": "https://api.github.com/repos/tyug/A2", "Date": "2011-10-17T04:21:08Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((name == null) || ((name.trim().length()) == 0)) { name = new java.text.SimpleDateFormat(\"yyyyMMddHHmmss\").format(new java.util.Date()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1413/buggy-version/server.src.com.equinix.converter.Swagger.java", "BodyUseAPI": [], "Fixed commit": "3a918a4623bee5b210a3170e0564341ca87b560a", "Url": "https://api.github.com/repos/equinix/amphibia", "Date": "2017-08-29T02:05:28Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"query\".equals(in)) { if ((param.containsKey(\"default\")) || (param.containsKey(\"enum\"))) { definition.addQueryParam(param.getString(\"name\"), com.equinix.converter.Definition.getEnumOrDefault(param)); }else { java.lang.String value = definition.addQueryParam(param.getString(\"name\")); properties.add(com.google.common.collect.ImmutableMap.<java.lang.String, java.lang.Object>builder().put(\"name\", value).put(\"value\", com.equinix.converter.Swagger.NULL).build()); } }else if (\"path\".equals(in)) { definition.addParameter(param.getString(\"name\"), com.equinix.converter.Definition.getEnumOrDefault(param)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1413/buggy-version/server.src.com.equinix.converter.Swagger.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "3a918a4623bee5b210a3170e0564341ca87b560a", "Url": "https://api.github.com/repos/equinix/amphibia", "Date": "2017-08-29T02:05:28Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((isWritesShutdown()) && (!firstFrame)) { io.undertow.spdy.SpdyProtocolUtils.putInt(currentBuffer, getStreamId()); io.undertow.spdy.SpdyProtocolUtils.putInt(currentBuffer, ((SpdyChannel.FLAG_FIN) << 24)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5457/buggy-version/core.src.main.java.io.undertow.spdy.SpdySynReplyStreamSinkChannel.java", "BodyUseAPI": [], "Fixed commit": "edfe17e539a0879fd37bb0b97a964f1d626de1c0", "Url": "https://api.github.com/repos/ctomc/undertow", "Date": "2014-07-25T01:32:33Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (retVar == 0) java.lang.System.out.println(\"result zero size\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/680/buggy-version/lowlevel_framework.source.src.main.Main.java", "BodyUseAPI": [], "Fixed commit": "759007aa017e57fdae1bc9a66d1d590a60ba34dc", "Url": "https://api.github.com/repos/JulianKaeuser/LowLevel_Minitask1", "Date": "2017-06-13T18:30:37Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Major.dpLookup(java.lang.String,int[][])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (bestCode != 0) { dpTable[j][i] = bestCode + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/972/buggy-version/Major.java", "BodyUseAPI": [], "Fixed commit": "0018357b404d8e7aa251eaffc4429e3d7b03365d", "Url": "https://api.github.com/repos/dmdque/major-system", "Date": "2015-03-18T03:21:51Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (min == (java.lang.Integer.MAX_VALUE)) { return 0; }else { return min; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/972/buggy-version/Major.java", "BodyUseAPI": [], "Fixed commit": "0018357b404d8e7aa251eaffc4429e3d7b03365d", "Url": "https://api.github.com/repos/dmdque/major-system", "Date": "2015-03-18T03:21:51Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(db.isOpen())) { db = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3382/buggy-version/MapboxAndroidSDK.src.main.java.com.mapbox.mapboxsdk.offline.OfflineMapDatabase.java", "BodyUseAPI": [], "Fixed commit": "ebef0a9c03b8d223133c739c93e24caf8abce9fd", "Url": "https://api.github.com/repos/OrdnanceSurvey/mapbox-android-sdk", "Date": "2015-05-06T22:13:19Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((message == null) || (message.isEmpty())) { android.widget.Toast.makeText(this, \"Cannot send empty or null message\", Toast.LENGTH_LONG).show(); }else { for (lettieri.masstexter.Contact c : contacts) { c.sendMessage(message); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4044/buggy-version/app.src.main.java.lettieri.masstexter.activities.SendMessage.java", "BodyUseAPI": ["lettieri.masstexter.Contact.sendMessage(java.lang.String)"], "Fixed commit": "0869fcbd58203985cd554aa94577c937dc14aa5d", "Url": "https://api.github.com/repos/tommylettieri/MassTexter", "Date": "2017-07-01T20:57:10Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((message != null) && (!(message.isEmpty()))) { android.telephony.SmsManager.getDefault().sendTextMessage(getPhoneNumber(), null, message, null, null); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4044/buggy-version/app.src.main.java.lettieri.masstexter.Contact.java", "BodyUseAPI": ["android.telephony.SmsManager.getDefault().sendTextMessage(java.lang.String,<nulltype>,java.lang.String,<nulltype>,<nulltype>)"], "Fixed commit": "0869fcbd58203985cd554aa94577c937dc14aa5d", "Url": "https://api.github.com/repos/tommylettieri/MassTexter", "Date": "2017-07-01T20:57:10Z"},
{"Line": "=>1059", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["screenstudio.gui.Main.getCommand()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((command.getOverlay()) != null) { command.getOverlay().start(); if (!(screenstudio.sources.Screen.isOSX())) { while (!(command.getOverlay().isRunning())) { java.lang.Thread.sleep(100); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3444/buggy-version/src.screenstudio.gui.Main.java", "BodyUseAPI": ["screenstudio.encoder.FFMpeg.getOverlay()", "screenstudio.encoder.FFMpeg.getOverlay()", "command.getOverlay().isRunning()", "command.getOverlay().start()"], "Fixed commit": "2adace6fd8733531470a93d72eb52cba30ad8061", "Url": "https://api.github.com/repos/patrickballeux/screenstudio", "Date": "2016-05-04T15:24:24Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (buttonView.isPressed()) { com.opendashcam.models.Recording recording = recordings.get(((java.lang.Integer) (buttonView.getTag()))); recording.toggleStar(context, isChecked); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1067/buggy-version/mobile.src.main.java.com.opendashcam.ViewRecordingsRecyclerViewAdapter.java", "BodyUseAPI": ["java.util.ArrayList<com.opendashcam.models.Recording>.get(((java.lang.Integer) (buttonView.getTag())))", "android.widget.CompoundButton.getTag()"], "Fixed commit": "85340a3f42e21ea75cb371af1fab08d57d13fb41", "Url": "https://api.github.com/repos/maxneaga/open_dash_cam_android", "Date": "2017-08-14T02:16:00Z"},
{"Line": "=>447", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (x == 0) { log.warn(\"Invalid Primary Phone number\"); context.getFlowScope().put(\"ErrorMsg\", \"Primary phone is not a valid phone number, please correct and submit again\"); return \"Failed\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2712/buggy-version/cas-server-cc.src.main.java.edu.conncoll.cas.jdbc.jdbcCamel.java", "BodyUseAPI": [], "Fixed commit": "33f7156cf43ed323e7bbff1ae495913c52ec8b6a", "Url": "https://api.github.com/repos/ConnCollege/cas", "Date": "2013-10-07T18:13:38Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["terms.get(nextTerm).getForm()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (termForm.equals(\"(\")) { termForm = new java.lang.String(\"-LRB-\"); }else if (termForm.equals(\")\")) { termForm = new java.lang.String(\"-RRB-\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4154/buggy-version/src.main.java.ixa.kaflib.Tree.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "71b8ffd85aaba55a3ef2718ea91ce35dfd17afb1", "Url": "https://api.github.com/repos/ixa-ehu/kaflib", "Date": "2013-09-26T10:22:59Z"},
{"Line": "=>380", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.map)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fragment == null) showFragment(com.thesarvo.guide.MapsFragment.class, args, true, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4269/buggy-version/thesarvo-android.guide.src.main.java.com.thesarvo.guide.GuideListActivity.java", "BodyUseAPI": [], "Fixed commit": "b4fd34e0d7b0c49923d714718a376fba1477b81e", "Url": "https://api.github.com/repos/jonnermut/thesarvo", "Date": "2014-09-09T14:11:17Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((move.getAction()) == (com.game.loot.Move.ACTION.DISCARD)) { numCardsInHand++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3102/buggy-version/src.com.game.loot.learning.AttackBattleLogger.java", "BodyUseAPI": [], "Fixed commit": "41f480ebff25cbff4a87137fa1dabf7a3642ea70", "Url": "https://api.github.com/repos/asood123/Loot", "Date": "2014-01-20T21:00:37Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((move.getAction()) == (com.game.loot.Move.ACTION.DRAW)) { numCardsInHand--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3102/buggy-version/src.com.game.loot.learning.AttackBattleLogger.java", "BodyUseAPI": [], "Fixed commit": "41f480ebff25cbff4a87137fa1dabf7a3642ea70", "Url": "https://api.github.com/repos/asood123/Loot", "Date": "2014-01-20T21:00:37Z"},
{"Line": "=>386", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((node.getGenomes()) != null) && ((node.getOffsets()) != null)) { if ((node.getGenomes().length) != (node.getOffsets().length)) { indexOfGenome = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5953/buggy-version/src.main.java.gui.GraphDrawer.java", "BodyUseAPI": ["graph.SequenceNode.getGenomes()", "graph.SequenceNode.getOffsets()"], "Fixed commit": "1ca69ce49a9b24e5dfe5d2d68d8c55690aeb05db", "Url": "https://api.github.com/repos/ProgrammingLife2017/DynamiteAndButterflies", "Date": "2017-07-01T13:55:28Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.tudarmstadt.ukp.dkpro.core.api.frequency.util.ConditionalFrequencyDistribution<T, T>.getFrequencyDistribution(T)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (fd == null) { return total; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8003/buggy-version/de.unidue.ltl.evaluation.src.main.java.de.unidue.ltl.evaluation.ConfusionMatrix.java", "BodyUseAPI": [], "Fixed commit": "ca4ccb09ca4623bab357befda7ea3465ee817f2b", "Url": "https://api.github.com/repos/Horsmann/ltlab-evaluation", "Date": "2017-03-02T08:06:36Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { for (i = 0; i < (data.length); i++) { boolean registered = me.otho.customItems.registry.CommonRegistry.registerCreativeTabs(data[i]); if (!registered) { me.otho.customItems.util.LogHelper.error((\"Failed to register: CreativeTabs \" + i)); return false; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7752/buggy-version/src.main.java.me.otho.customItems.registry.CommonRegistry.java", "BodyUseAPI": ["me.otho.customItems.registry.CommonRegistry.registerCreativeTabs(data[i])"], "Fixed commit": "064529f3fda913647b7c0dd6b17bc870d31a6eb1", "Url": "https://api.github.com/repos/0tho/CustomItems", "Date": "2014-12-20T03:32:01Z"},
{"Line": "=>746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (plugin.conf.getBoolean(\"giveprizes\", true)) giveRandomGift(player);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2757/buggy-version/src.main.java.de.beimax.simplespleef.SimpleSpleefGame.java", "BodyUseAPI": [], "Fixed commit": "b8dc4f4cf64b1eff7d8f730a1b2f2eb985354c62", "Url": "https://api.github.com/repos/mkalus/SimpleSpleef", "Date": "2011-10-04T05:12:49Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isNoun()) { otherDescriptives.addAll(statements.core.StatementUtils.findSpecificDescendants(Relations.NMOD, primary, graph)); remaining.addAll(otherDescriptives); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3240/buggy-version/src.main.java.statements.core.Subject.java", "BodyUseAPI": [], "Fixed commit": "eceedf33d2aa6b17572b967046cb0d06e698d9c2", "Url": "https://api.github.com/repos/simongray/StatementAnnotator", "Date": "2016-08-10T11:53:05Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (isNoun()) { otherDescriptives.addAll(statements.core.StatementUtils.findSpecificDescendants(Relations.NMOD, primary, graph)); remaining.addAll(otherDescriptives); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3240/buggy-version/src.main.java.statements.core.DirectObject.java", "BodyUseAPI": [], "Fixed commit": "eceedf33d2aa6b17572b967046cb0d06e698d9c2", "Url": "https://api.github.com/repos/simongray/StatementAnnotator", "Date": "2016-08-10T11:53:05Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.player.PlayerInteractEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (player.getGameMode().equals(GameMode.CREATIVE)) { if ((event.getAction().equals(Action.RIGHT_CLICK_AIR)) || (event.getAction().equals(Action.RIGHT_CLICK_BLOCK))) { event.setCancelled(true); com.turt2live.antishare.ASUtils.sendToPlayer(player, plugin.config().getString(\"messages.interact\", player.getWorld())); com.turt2live.antishare.Notification.sendNotification(NotificationType.ILLEGAL_INTERACTION, plugin, player, event.getClickedBlock().getType().name(), event.getClickedBlock().getType()); } }else { if (com.turt2live.antishare.ASUtils.isInteractable(event.getClickedBlock().getType())) { com.turt2live.antishare.Notification.sendNotification(NotificationType.LEGAL_INTERACTION, plugin, player, event.getClickedBlock().getType().name(), event.getClickedBlock().getType()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6419/buggy-version/src.com.turt2live.antishare.listener.PlayerListener.java", "BodyUseAPI": ["com.turt2live.antishare.ASUtils.sendToPlayer(org.bukkit.entity.Player,plugin.config().getString(\"messages.interact\", player.getWorld()))", "plugin.config().getString(java.lang.String,player.getWorld())", "org.bukkit.entity.Player.getWorld()", "com.turt2live.antishare.Notification.sendNotification(NotificationType.LEGAL_INTERACTION,com.turt2live.antishare.AntiShare,org.bukkit.entity.Player,event.getClickedBlock().getType().name(),event.getClickedBlock().getType())", "com.turt2live.antishare.Notification.sendNotification(NotificationType.ILLEGAL_INTERACTION,com.turt2live.antishare.AntiShare,org.bukkit.entity.Player,event.getClickedBlock().getType().name(),event.getClickedBlock().getType())"], "Fixed commit": "86bd9602073d769fe1f91c293e988bd33adf72f0", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2012-03-18T09:46:43Z"},
{"Line": "=>1298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jasig.portal.UserPreferencesManager.getUserLayoutManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isFolder(ulm, destinationId)) { ulm.moveNode(sourceId, destinationId, null); }else { java.lang.String siblingId = (isInsert) ? destinationId : null; java.lang.String target = (isInsert) ? ulm.getParentId(destinationId) : destinationId; ulm.moveNode(sourceId, target, siblingId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2972/buggy-version/uportal-war.src.main.java.org.jasig.portal.layout.dlm.remoting.UpdatePreferencesServlet.java", "BodyUseAPI": ["org.jasig.portal.layout.IUserLayoutManager.moveNode(java.lang.String,java.lang.String,<nulltype>)", "org.jasig.portal.layout.IUserLayoutManager.getParentId(java.lang.String)", "org.jasig.portal.layout.IUserLayoutManager.moveNode(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "d9ca041c41515e2ecc6110acf3e309a05837d307", "Url": "https://api.github.com/repos/Jasig/uPortal", "Date": "2015-12-31T01:54:59Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.metabroadcast.common.scheduling.UpdateProgress.getTotalProgress()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (totalProgress == 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8756/buggy-version/src.main.java.org.atlasapi.remotesite.bbc.nitro.ChannelDayProcessingTask.java", "BodyUseAPI": [], "Fixed commit": "a242ad08d06fca9f9d31cb93aa4cddf884d8aefe", "Url": "https://api.github.com/repos/atlasapi/atlas", "Date": "2017-02-28T15:46:58Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(td.getFieldType(i).equals(f.getType()))) { throw new java.lang.IllegalArgumentException((\"field must be of type \" + (td.getFieldType(i).toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5700/buggy-version/mysimpledb.src.java.simpledb.Tuple.java", "BodyUseAPI": ["simpledb.TupleDesc.getFieldType(int)", "td.getFieldType(i).toString()"], "Fixed commit": "159f84ccf6dbfcd8d75ad847afe0c6e2a1efc070", "Url": "https://api.github.com/repos/mb4828/cosc460", "Date": "2014-10-27T02:16:26Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mouseOn) { move = new controllers.common.MovePieceOnBoardMove(m, source, board.getDraggedPiece(), rOffset, cOffset); if (!(move.doMove())) { if ((board.getDraggedPiece()) != null) { board.putPieceOnBoard(board.getDraggedPiece(), board.getDraggedPiece().getOriginRow(), board.getDraggedPiece().getOriginCol()); board.setDraggedPiece(null); board.clearPiecePreview(); } move = new controllers.common.PlacePieceOnBoardFromBullpenMove(m, source, bpv); if (move.doMove()) { app.UndoManager.getInstance().pushMove(move); } }else { app.UndoManager.getInstance().pushMove(move); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7445/buggy-version/src.controllers.builder.BuilderBoardController.java", "BodyUseAPI": [], "Fixed commit": "b3d32b9fb720b211b81b13f379a9c987d31402c7", "Url": "https://api.github.com/repos/Betta-Testers/Imbrius-Kabasuji", "Date": "2016-04-25T15:22:50Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world.isRemote) playerEntity.setVelocity(0, 0, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5473/buggy-version/src.main.java.cyano.wonderfulwands.wands.WandOfTeleportation.java", "BodyUseAPI": [], "Fixed commit": "e0b6eb92089ccba193e29af39737a5ed743ba4ac", "Url": "https://api.github.com/repos/cyanobacterium/DrCyanosWonderfulWands", "Date": "2015-04-07T22:17:43Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.example.restaurantreviewapplication.Server.getObject(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(com.example.restaurantreviewapplication.Server.isError(ob))) reviews.add(((com.example.restaurantreviewapplication.Review) (com.example.restaurantreviewapplication.Server.getObject(u))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6604/buggy-version/src.com.example.restaurantreviewapplication.Server.java", "BodyUseAPI": [], "Fixed commit": "cd593814a91b80773afd3fc03d5095acf65129a3", "Url": "https://api.github.com/repos/dragonfred/Group9", "Date": "2013-04-02T22:48:21Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (world != null) { itemStack = new net.minecraft.item.ItemStack(world.getBlock(coordinate.getX(), coordinate.getY(), coordinate.getZ()), 1, world.getBlockMetadata(coordinate.getX(), coordinate.getY(), coordinate.getZ())); if ((block == null) || ((block.isLimitedBlock(itemStack)) == false)) { toRemove.add(coordinate); } }else { de.alaoli.games.minecraft.mods.limitedresources.Log.error(((\"Can't load WorldServer for Dimension '\" + (coordinate.getDimId())) + \"'\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4533/buggy-version/src.main.java.de.alaoli.games.minecraft.mods.limitedresources.entity.LimitedBlockPlayer.java", "BodyUseAPI": ["net.minecraft.world.World.getBlock(coordinate.getX(),coordinate.getY(),coordinate.getZ())", "net.minecraft.world.World.getBlockMetadata(coordinate.getX(),coordinate.getY(),coordinate.getZ())"], "Fixed commit": "548d94a42385ddfdafaa1fe81477eaac1866ffbf", "Url": "https://api.github.com/repos/DerOli82/LimitedResources", "Date": "2016-11-08T10:21:20Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cytoscape.filter.internal.view.TransformerPanel.getController()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((transformerPanelController.getElementCount()) == 1) { transformerPanelController.addNewElement(\"Default chain\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1632/buggy-version/filter2-impl.src.main.java.org.cytoscape.filter.internal.FilterSettingsManager.java", "BodyUseAPI": ["org.cytoscape.filter.internal.view.TransformerPanelController.addNewElement(java.lang.String)"], "Fixed commit": "7a5266eea8413602a214dfb9fba909f9b92ba083", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2013-12-02T22:04:32Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.cytoscape.filter.internal.view.FilterPanel.getController()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((filterPanelController.getElementCount()) == 1) { filterPanelController.addNewElement(\"Default filter\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1632/buggy-version/filter2-impl.src.main.java.org.cytoscape.filter.internal.FilterSettingsManager.java", "BodyUseAPI": ["org.cytoscape.filter.internal.view.FilterPanelController.addNewElement(java.lang.String)"], "Fixed commit": "7a5266eea8413602a214dfb9fba909f9b92ba083", "Url": "https://api.github.com/repos/cytoscape/cytoscape-impl", "Date": "2013-12-02T22:04:32Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (row[j].equals(org.apache.kylin.dict.lookup.SnapshotTable.NULL_STR)) row[j] = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3705/buggy-version/dictionary.src.main.java.org.apache.kylin.dict.lookup.SnapshotTable.java", "BodyUseAPI": [], "Fixed commit": "99448fecdb58546195373e80ad6bd742f2e47f82", "Url": "https://api.github.com/repos/KylinOLAP/Kylin", "Date": "2015-04-03T08:22:50Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((executorService) != null) { executorService.shutdown(); try { executorService.awaitTermination(5, java.util.concurrent.TimeUnit.SECONDS); } catch (java.lang.InterruptedException e) { de.newsarea.homecockpit.connector.fsuipc.FSUIPCHttpConnector.log.error(e.getMessage(), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1560/buggy-version/connectors-fsuipc.src.main.java.de.newsarea.homecockpit.connector.fsuipc.FSUIPCHttpConnector.java", "BodyUseAPI": [], "Fixed commit": "56024c4b2c23e3d1a2f75d66648f464647bc813d", "Url": "https://api.github.com/repos/RBernhardt/homecockpit-connectors", "Date": "2014-04-07T22:29:48Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (destinationState.getFormulaSet().isEmpty()) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3318/buggy-version/src.main.java.utils.AutomatonUtils.java", "BodyUseAPI": [], "Fixed commit": "badb4d48bdd215ab4db54a6f7db7b4069ad1e891", "Url": "https://api.github.com/repos/RiccardoDeMasellis/FLLOAT", "Date": "2017-10-14T10:47:30Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["formula.quotedFormula.QuotedFormula.getMinimalModels()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allMinimalModels.isEmpty()) return false; else { for (java.util.Set<formula.quotedFormula.QuotedVar> model : allMinimalModels) { if (model.isEmpty()) return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3318/buggy-version/src.main.java.utils.AutomatonUtils.java", "BodyUseAPI": [], "Fixed commit": "badb4d48bdd215ab4db54a6f7db7b4069ad1e891", "Url": "https://api.github.com/repos/RiccardoDeMasellis/FLLOAT", "Date": "2017-10-14T10:47:30Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSelfPost) { org.quantumbadger.redreader.common.General.quickToast(this, R.string.post_edit_done); }else { org.quantumbadger.redreader.common.General.quickToast(this, R.string.comment_edit_done); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/155/buggy-version/src.main.java.org.quantumbadger.redreader.activities.CommentEditActivity.java", "BodyUseAPI": [], "Fixed commit": "8ff8e7e3995f6e46ebce3cab814ce4bc6c07fbb4", "Url": "https://api.github.com/repos/Clubfan22/RedReader", "Date": "2017-04-02T14:20:31Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((getIntent()) != null) && (getIntent().hasExtra(\"isSelfPost\"))) && (getIntent().getBooleanExtra(\"isSelfPost\", false))) { setTitle(R.string.edit_post_actionbar); isSelfPost = true; }else { setTitle(R.string.edit_comment_actionbar); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/155/buggy-version/src.main.java.org.quantumbadger.redreader.activities.CommentEditActivity.java", "BodyUseAPI": [], "Fixed commit": "8ff8e7e3995f6e46ebce3cab814ce4bc6c07fbb4", "Url": "https://api.github.com/repos/Clubfan22/RedReader", "Date": "2017-04-02T14:20:31Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fileTree.getSelectedFileNodes()) != null) { this.setTableList(fileTree.getSelectedFileNodes()); }else { javax.faces.context.FacesContext.getCurrentInstance().addMessage(null, new javax.faces.application.FacesMessage(javax.faces.application.FacesMessage.SEVERITY_WARN, \"Warning\", \"<br />Please select a file.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7981/buggy-version/docroot.WEB-INF.src.edu.jhu.cvrg.waveform.backing.AnalyzeBacking.java", "BodyUseAPI": ["edu.jhu.cvrg.waveform.backing.AnalyzeBacking.setTableList(fileTree.getSelectedFileNodes())", "edu.jhu.cvrg.waveform.model.LocalFileTree.getSelectedFileNodes()"], "Fixed commit": "ff6c436e97ea6618b08c7a5f41221332ab089af0", "Url": "https://api.github.com/repos/CardioVascular-Research-Group/analyze-portlet", "Date": "2014-01-21T20:36:51Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userModel) != null) { if ((fileTree) == null) { fileTree = new edu.jhu.cvrg.waveform.model.LocalFileTree(userModel.getUserId(), \"hea\"); } if ((algorithmList) == null) { algorithmList = new edu.jhu.cvrg.waveform.backing.AlgorithmList(); } messages = new java.util.ArrayList<javax.faces.application.FacesMessage>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7981/buggy-version/docroot.WEB-INF.src.edu.jhu.cvrg.waveform.backing.AnalyzeBacking.java", "BodyUseAPI": [], "Fixed commit": "ff6c436e97ea6618b08c7a5f41221332ab089af0", "Url": "https://api.github.com/repos/CardioVascular-Research-Group/analyze-portlet", "Date": "2014-01-21T20:36:51Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.xtremelabs.robolectric.res.StringArrayResourceLoader.Value[]>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (values == null) throw new android.content.res.Resources.NotFoundException(resourceName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1128/buggy-version/src.main.java.com.xtremelabs.robolectric.res.StringArrayResourceLoader.java", "BodyUseAPI": [], "Fixed commit": "35292c4ffd360bfc2b72612fe7b46b3609071a2b", "Url": "https://api.github.com/repos/pivotal/robolectric", "Date": "2012-12-18T23:50:13Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.xtremelabs.robolectric.bytecode.AndroidTranslator.debug) java.lang.System.out.println((\"static initializing \" + clazz));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1128/buggy-version/src.main.java.com.xtremelabs.robolectric.bytecode.AndroidTranslator.java", "BodyUseAPI": [], "Fixed commit": "35292c4ffd360bfc2b72612fe7b46b3609071a2b", "Url": "https://api.github.com/repos/pivotal/robolectric", "Date": "2012-12-18T23:50:13Z"},
{"Line": "=>2378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value.getValue()) == (java.lang.Double.NEGATIVE_INFINITY)) { return new org.eclipse.titan.runtime.core.TitanCharString(\"-infinity\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7607/buggy-version/org.eclipse.titan.runtime.src.org.eclipse.titan.runtime.core.AdditionalFunctions.java", "BodyUseAPI": [], "Fixed commit": "a54f8b39c1cb799d69483f303b70f0fcccad2095", "Url": "https://api.github.com/repos/eclipse/titan.EclipsePlug-ins", "Date": "2017-12-06T14:43:03Z"},
{"Line": "=>2357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value.getValue()) == (java.lang.Double.NEGATIVE_INFINITY)) { return new org.eclipse.titan.runtime.core.TitanCharString(\"-infinity\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7607/buggy-version/org.eclipse.titan.runtime.src.org.eclipse.titan.runtime.core.AdditionalFunctions.java", "BodyUseAPI": [], "Fixed commit": "a54f8b39c1cb799d69483f303b70f0fcccad2095", "Url": "https://api.github.com/repos/eclipse/titan.EclipsePlug-ins", "Date": "2017-12-06T14:43:03Z"},
{"Line": "=>2364", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((value.getValue()) == 0.0) || (((value.getValue()) > (-(TitanFloat.MAX_DECIMAL_FLOAT))) && ((value.getValue()) <= (-(TitanFloat.MIN_DECIMAL_FLOAT))))) || (((value.getValue()) >= (TitanFloat.MIN_DECIMAL_FLOAT)) && ((value.getValue()) < (TitanFloat.MAX_DECIMAL_FLOAT)))) { return new org.eclipse.titan.runtime.core.TitanCharString(java.lang.String.format(\"%f\", value.getValue())); }else { return new org.eclipse.titan.runtime.core.TitanCharString(java.lang.String.format(\"%e\", value.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7607/buggy-version/org.eclipse.titan.runtime.src.org.eclipse.titan.runtime.core.AdditionalFunctions.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,value.getValue())", "org.eclipse.titan.runtime.core.Ttcn3Float.getValue()", "java.lang.String.format(java.lang.String,value.getValue())", "org.eclipse.titan.runtime.core.Ttcn3Float.getValue()"], "Fixed commit": "a54f8b39c1cb799d69483f303b70f0fcccad2095", "Url": "https://api.github.com/repos/eclipse/titan.EclipsePlug-ins", "Date": "2017-12-06T14:43:03Z"},
{"Line": "=>2385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((value.getValue()) == 0.0) || (((value.getValue()) > (-(TitanFloat.MAX_DECIMAL_FLOAT))) && ((value.getValue()) <= (-(TitanFloat.MIN_DECIMAL_FLOAT))))) || (((value.getValue()) >= (TitanFloat.MIN_DECIMAL_FLOAT)) && ((value.getValue()) < (TitanFloat.MAX_DECIMAL_FLOAT)))) { return new org.eclipse.titan.runtime.core.TitanCharString(java.lang.String.format(\"%f\", value.getValue())); }else { return new org.eclipse.titan.runtime.core.TitanCharString(java.lang.String.format(\"%e\", value.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7607/buggy-version/org.eclipse.titan.runtime.src.org.eclipse.titan.runtime.core.AdditionalFunctions.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,value.getValue())", "java.lang.String.format(java.lang.String,value.getValue())", "org.eclipse.titan.runtime.core.TitanFloat.getValue()", "org.eclipse.titan.runtime.core.TitanFloat.getValue()"], "Fixed commit": "a54f8b39c1cb799d69483f303b70f0fcccad2095", "Url": "https://api.github.com/repos/eclipse/titan.EclipsePlug-ins", "Date": "2017-12-06T14:43:03Z"},
{"Line": "=>2354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(value.getValue())) { return new org.eclipse.titan.runtime.core.TitanCharString(\"not_a_number\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7607/buggy-version/org.eclipse.titan.runtime.src.org.eclipse.titan.runtime.core.AdditionalFunctions.java", "BodyUseAPI": [], "Fixed commit": "a54f8b39c1cb799d69483f303b70f0fcccad2095", "Url": "https://api.github.com/repos/eclipse/titan.EclipsePlug-ins", "Date": "2017-12-06T14:43:03Z"},
{"Line": "=>2375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value.getValue().isNaN()) { return new org.eclipse.titan.runtime.core.TitanCharString(\"not_a_number\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7607/buggy-version/org.eclipse.titan.runtime.src.org.eclipse.titan.runtime.core.AdditionalFunctions.java", "BodyUseAPI": [], "Fixed commit": "a54f8b39c1cb799d69483f303b70f0fcccad2095", "Url": "https://api.github.com/repos/eclipse/titan.EclipsePlug-ins", "Date": "2017-12-06T14:43:03Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.spoiledmilk.ibikecph.IbikeApplication.getAppName().equals(\"Cykelplanen\")) { menuItems.add(new com.spoiledmilk.ibikecph.LeftMenuItem(\"map_overlays\", R.drawable.ic_menu_overlays, \"spawnOverlaysActivity\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7332/buggy-version/ibikecph-lib.src.main.java.com.spoiledmilk.ibikecph.LeftMenu.java", "BodyUseAPI": [], "Fixed commit": "bac5589e0090425c0ee90487ffea09db586c6cbc", "Url": "https://api.github.com/repos/ibikecph/ibikecph-android", "Date": "2015-09-07T12:46:52Z"},
{"Line": "=>848", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getText().length()) == 0) { getLabelAnimator().reverse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4373/buggy-version/library.src.main.java.com.rengwuPATHn.materialedittext.MaterialEditText.java", "BodyUseAPI": [], "Fixed commit": "64f77a5842f37d76187ad6a873d2fa00a48e2391", "Url": "https://api.github.com/repos/dkajiwara-asnet/MaterialEditText", "Date": "2015-04-10T02:19:56Z"},
{"Line": "=>838", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.synapse.commons.vfs.VFSUtils.isFailRecord(fsManager, fileObject))) { org.apache.synapse.commons.vfs.VFSUtils.markFailRecord(fsManager, fileObject); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4015/buggy-version/components.inbound-endpoints.org.wso2.carbon.inbound.endpoint.src.main.java.org.wso2.carbon.inbound.endpoint.protocol.file.FilePollingConsumer.java", "BodyUseAPI": ["org.apache.synapse.commons.vfs.VFSUtils.markFailRecord(org.apache.commons.vfs2.FileSystemManager,org.apache.commons.vfs2.FileObject)"], "Fixed commit": "f6ec1046346f37de9c9a09cd7b1895e625bb4afa", "Url": "https://api.github.com/repos/jagathsisira/carbon-mediation", "Date": "2015-05-13T11:11:25Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((job) != null) { return new java.io.File(job.getRootDir(), \"pollMailboxTrigger-polling.log\"); }else { return new java.io.File(\"pollMailboxTrigger-polling.log\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1209/buggy-version/src.main.groovy.org.jenkinsci.plugins.pollmailboxtrigger.PollMailboxTrigger.java", "BodyUseAPI": [], "Fixed commit": "390a9e4a3bc398da8f48bf7b71f6be0aac5ec764", "Url": "https://api.github.com/repos/jenkinsci/poll-mailbox-trigger-plugin", "Date": "2016-08-05T06:58:29Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedGroups == null) || (selectedGroups.isEmpty())) { selectedGroups = new java.util.HashSet(); for (org.genemania.domain.InteractionNetworkGroup group : options.getInteractionNetworkGroups().values()) selectedGroups.add(new org.genemania.plugin.model.impl.InteractionNetworkGroupImpl(group)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/995/buggy-version/plugin.plugin-cy3.src.main.java.org.genemania.plugin.controllers.RetrieveRelatedGenesController.java", "BodyUseAPI": [], "Fixed commit": "651e7d1f04fc4105c74fba5fbe726ee0926c6d2a", "Url": "https://api.github.com/repos/GeneMANIA/genemania", "Date": "2017-10-24T19:35:02Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (player == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4618/buggy-version/src.main.java.seprini.controllers.ServerAircraftController.java", "BodyUseAPI": [], "Fixed commit": "5b7084d73d1aa49d76ebf7ff999e4ad964f77264", "Url": "https://api.github.com/repos/SEPR13-SAW/ini-hou", "Date": "2014-05-02T10:32:48Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["server.getPlayers().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (player == null) player = server.getPlayers().get(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4618/buggy-version/src.main.java.seprini.controllers.ServerAircraftController.java", "BodyUseAPI": [], "Fixed commit": "5b7084d73d1aa49d76ebf7ff999e4ad964f77264", "Url": "https://api.github.com/repos/SEPR13-SAW/ini-hou", "Date": "2014-05-02T10:32:48Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (diff.getMultiplayer()) { controller = new seprini.controllers.ClientAircraftController(diff, airspace, this); }else { controller = new seprini.controllers.SingleAircraftController(diff, airspace, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4618/buggy-version/src.main.java.seprini.screens.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "5b7084d73d1aa49d76ebf7ff999e4ad964f77264", "Url": "https://api.github.com/repos/SEPR13-SAW/ini-hou", "Date": "2014-05-02T10:32:48Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(config.hasPath(org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL))) { throw new org.apache.drill.exec.exception.DrillbitStartupException(java.lang.String.format(\"BOOT option '%s' is missing in config.\", org.apache.drill.exec.ExecConstants.USER_AUTHENTICATOR_IMPL)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5481/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.rpc.user.security.UserAuthenticatorFactory.java", "BodyUseAPI": [], "Fixed commit": "adf6e3e75b39ec313272f0be0bb6f5ca000f5702", "Url": "https://api.github.com/repos/sohami/drill", "Date": "2017-02-28T07:28:14Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getMetadataService().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (serviceMetadata == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7641/buggy-version/addon-web-mvc.addon.src.main.java.org.gvnix.addon.web.mvc.addon.batch.WebJpaBatchMetadataProvider.java", "BodyUseAPI": [], "Fixed commit": "21814101b544c1001a5137a8977e0fb086624966", "Url": "https://api.github.com/repos/gvSIGAssociation/gvnix", "Date": "2015-05-06T10:43:12Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((matcher.find(0)) == true) { parser.parse(file.getContents(), reporter); }else { java.io.StringBufferInputStream s1 = new java.io.StringBufferInputStream(\"<ewp_tmpl_root>\"); java.io.StringBufferInputStream s2 = new java.io.StringBufferInputStream(\"</ewp_tmpl_root>\"); java.io.SequenceInputStream s = new java.io.SequenceInputStream(s1, file.getContents()); parser.parse(new java.io.SequenceInputStream(s, s2), reporter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8786/buggy-version/com.rytong.template.editor.src.com.rytong.template.editor.template.TemplateEditor.java", "BodyUseAPI": [], "Fixed commit": "e94b6955d9f576bcbb61ece41e17ff405a9b4d82", "Url": "https://api.github.com/repos/jcrom/erlide", "Date": "2013-06-06T11:38:06Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (message == null) { message = \"Internal server error\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2602/buggy-version/src.main.java.it.infn.security.scim.core.SCIM2Encoder.java", "BodyUseAPI": [], "Fixed commit": "6a6a97e585e21f2165b9780cc20f6945b9a51351", "Url": "https://api.github.com/repos/pandreetto/saml2-attribute-authority", "Date": "2016-08-10T07:12:45Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (code >= 600) { code = it.infn.security.scim.protocol.SCIMConstants.CODE_INTERNAL_SERVER_ERROR; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2602/buggy-version/src.main.java.it.infn.security.scim.core.SCIM2Encoder.java", "BodyUseAPI": [], "Fixed commit": "6a6a97e585e21f2165b9780cc20f6945b9a51351", "Url": "https://api.github.com/repos/pandreetto/saml2-attribute-authority", "Date": "2016-08-10T07:12:45Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (s.equals(\"ENDHERE\")) { fmt += \"<br>\".concat(\"__________________\"); }else { if ((currentLineLength + (s.length())) > (width)) { fmt += \"<br>\" + s; currentLineLength = 0; }else { fmt += \" \" + s; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8695/buggy-version/src.main.util.WrappableCellRenderer.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "46ecfc4d4ee3aa490c9e2b89c4d25eeda8c63822", "Url": "https://api.github.com/repos/theflanman/HonestMistakesWPINav", "Date": "2015-12-09T05:12:21Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.swt.custom.StyledText.getLineAtOffset(e.caretOffset)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (line == (highlightedLine)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1259/buggy-version/src.com.redcareditor.mate.colouring.swt.SwtColourer.java", "BodyUseAPI": [], "Fixed commit": "04a881b6475db47163084c65fce01bca9e5f2eb9", "Url": "https://api.github.com/repos/redcar/java-mateview", "Date": "2012-03-29T07:56:40Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((temp.pred) == null) { pq.insert(new Solver.Node(b, ((temp.moves) + 1), temp)); }else { if (!(b.equals(temp.pred.board))) pq.insert(new Solver.Node(b, ((temp.moves) + 1), temp)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7735/buggy-version/assignment4.Solver.java", "BodyUseAPI": [], "Fixed commit": "ce0594d3aa94eaa9760c55d46732e3f5b4b55e41", "Url": "https://api.github.com/repos/kilgore92/Algorithms-Coursera", "Date": "2017-11-13T16:15:11Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((p.isLocal()) && (!(omittedFromErrorCheck.contains(p.getPath())))) ret.add(((p.getPath()) + \": is null\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5670/buggy-version/intelligent-object-system.src.com.ios.IObject.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(((p.getPath()) + \": is null\"))", "com.ios.Property.getPath()"], "Fixed commit": "6b75c7259fa72d50600afac12141068343ffde7e", "Url": "https://api.github.com/repos/etamponi/intelligent-object-system", "Date": "2013-02-13T18:14:28Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ti.getTypeName()) != null) { if ((!(ti.getTypeName().equals(\"javax.xml.ws.Holder\"))) && (!(inTypeNameToQName.get(ti.getTypeName()).equals(ti.getElName())))) { org.apache.camel.dataformat.soap.name.ServiceInterfaceStrategy.LOG.warn(((\"Ambiguous QName mapping. The type [ \" + (ti.getTypeName())) + \" ] is already mapped to a QName in this context.\")); continue; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/277/buggy-version/components.camel-soap.src.main.java.org.apache.camel.dataformat.soap.name.ServiceInterfaceStrategy.java", "BodyUseAPI": ["ti.getTypeName().equals(java.lang.String)", "java.util.Map<java.lang.String, javax.xml.namespace.QName>.get(ti.getTypeName())", "org.apache.camel.dataformat.soap.name.TypeInfo.getElName()", "org.slf4j.Logger.warn(((\"Ambiguous QName mapping. The type [ \" + (ti.getTypeName())) + \" ] is already mapped to a QName in this context.\"))", "org.apache.camel.dataformat.soap.name.TypeInfo.getTypeName()", "org.apache.camel.dataformat.soap.name.TypeInfo.getTypeName()", "javax.xml.namespace.QName.equals(ti.getElName())", "org.apache.camel.dataformat.soap.name.TypeInfo.getTypeName()"], "Fixed commit": "b63f9e450ee08defae09a788034aa82c61ea348f", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-05-13T07:06:36Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mClassInfo) != null) intent.putExtra(\"flag\", mClassInfo.getFlag());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4034/buggy-version/app.src.main.java.com.yc.english.group.view.activitys.ChatActivity.java", "BodyUseAPI": [], "Fixed commit": "b89088f175c9fe1d019af80ed6dcc575f6035b34", "Url": "https://api.github.com/repos/feiyouAndroidTeam/english", "Date": "2017-08-23T01:47:40Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.text.TextUtils.isEmpty(mId)) || (mId.equals(\"null\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3776/buggy-version/MrsLiuClient.src.com.techfly.liutaitai.model.mall.fragment.ServiceOrderFragment.java", "BodyUseAPI": [], "Fixed commit": "6793534c688e490e78be154b6c2abe4b65f71550", "Url": "https://api.github.com/repos/ren13696607037/MrsLiuProject", "Date": "2015-10-28T13:05:03Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (android.text.TextUtils.isEmpty(service.getmCash())) { bundle.putString(IntentBundleKey.ORDER_MONEY, service.getmServicePrice()); }else { float totalPrice = ((float) ((java.lang.Float.parseFloat(service.getmServicePrice())) - (java.lang.Float.parseFloat(service.getmCash())))); long l1 = java.lang.Math.round((totalPrice * 100)); totalPrice = ((float) (l1 / 100.0)); bundle.putString(IntentBundleKey.ORDER_MONEY, service.getmServicePrice()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3776/buggy-version/MrsLiuClient.src.com.techfly.liutaitai.model.order.fragment.ServiceDetailFragment.java", "BodyUseAPI": ["java.lang.Float.parseFloat(service.getmCash())", "com.techfly.liutaitai.model.mall.bean.Service.getmCash()", "android.os.Bundle.putString(IntentBundleKey.ORDER_MONEY,service.getmServicePrice())", "com.techfly.liutaitai.model.mall.bean.Service.getmServicePrice()", "com.techfly.liutaitai.model.mall.bean.Service.getmServicePrice()", "com.techfly.liutaitai.model.mall.bean.Service.getmServicePrice()", "android.os.Bundle.putString(IntentBundleKey.ORDER_MONEY,service.getmServicePrice())", "java.lang.Float.parseFloat(service.getmServicePrice())"], "Fixed commit": "6793534c688e490e78be154b6c2abe4b65f71550", "Url": "https://api.github.com/repos/ren13696607037/MrsLiuProject", "Date": "2015-10-28T13:05:03Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mLogConfig.isShowBorder())) { msg = ((getTopStackInfo()) + \": \") + msg; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1591/buggy-version/library.src.main.java.com.apkfuns.logutils.Logger.java", "BodyUseAPI": [], "Fixed commit": "4eacc7704e51bb325d0c3d26d6bab77fbfa9e60b", "Url": "https://api.github.com/repos/pengwei1024/LogUtils", "Date": "2016-12-02T02:14:19Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.r2.hnreader.StoryAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((p.getUrl()) != null) { url.setText(android.net.Uri.parse(p.getUrl()).getHost()); v.setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { android.content.Intent intent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(p.getUrl())); getContext().startActivity(intent); } }); }else { url.setText(\"No url provide\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3636/buggy-version/app.src.main.java.com.r2.hnreader.StoryAdapter.java", "BodyUseAPI": ["android.widget.TextView.setText(android.net.Uri.parse(p.getUrl()).getHost())", "com.r2.hnreader.Item.getUrl()", "android.net.Uri.parse(p.getUrl())", "android.net.Uri.parse(p.getUrl()).getHost()", "android.view.View.setOnClickListener(android.view.View.OnClickListener)", "android.net.Uri.parse(p.getUrl())", "com.r2.hnreader.Item.getUrl()"], "Fixed commit": "d321d7282c09883f402f9d1beeb38678fa8c9a57", "Url": "https://api.github.com/repos/r2dev/HNReader", "Date": "2015-12-07T03:01:42Z"},
{"Line": "=>643", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) != null) { dynamicQueryContext.setParameter(net.sf.saxon.om.StructuredQName.fromClarkName((parameterPrefix + (entry.getKey()))), new net.sf.saxon.value.ObjectValue(entry.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4239/buggy-version/components.camel-saxon.src.main.java.org.apache.camel.component.xquery.XQueryBuilder.java", "BodyUseAPI": ["net.sf.saxon.query.DynamicQueryContext.setParameter(net.sf.saxon.om.StructuredQName.fromClarkName((parameterPrefix + (entry.getKey()))),net.sf.saxon.value.ObjectValue)", "net.sf.saxon.om.StructuredQName.fromClarkName(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Fixed commit": "437ade9c09492557bf907dddbca847f8975e231f", "Url": "https://api.github.com/repos/apache/camel", "Date": "2016-12-23T18:17:08Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cardDesc.equals(\"\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4008/buggy-version/workspace.mkhx.src.cfvbaibai.cardfantasy.web.beans.OfficialStageLevelInfo.java", "BodyUseAPI": [], "Fixed commit": "7ddaa6275ff2f8b68d005dfd96c2e1b87bab1a50", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-10-06T05:29:00Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (runeDesc.equals(\"\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4008/buggy-version/workspace.mkhx.src.cfvbaibai.cardfantasy.web.beans.OfficialStageLevelInfo.java", "BodyUseAPI": [], "Fixed commit": "7ddaa6275ff2f8b68d005dfd96c2e1b87bab1a50", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-10-06T05:29:00Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.llp.lunchkaki.models.Chats.getChatGroupById(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (current_group.getString(\"group_title\").equals(chat.getString(\"group_title\"))) { org.json.JSONObject params = new org.json.JSONObject(); params.put(\"function\", \"delete_group\"); params.put(\"type\", \"no_notification\"); com.llp.lunchkaki.services.WebSocketService.sendRequest(params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4282/buggy-version/app.src.main.java.com.llp.lunchkaki.models.Chats.java", "BodyUseAPI": [], "Fixed commit": "daea16c4a5fe3450f52b1a9f91cf5d8ba05f6fb3", "Url": "https://api.github.com/repos/brianfwz/lkk", "Date": "2016-05-10T09:30:52Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.sylvek.itracing2.receivers.StartRingPhone.currentRingtone) == null) { android.widget.Toast.makeText(context, R.string.ring_tone_not_found, Toast.LENGTH_LONG).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5772/buggy-version/src.net.sylvek.itracing2.receivers.StartRingPhone.java", "BodyUseAPI": [], "Fixed commit": "ecc359b0ac88a91c5c98cecfe54e714d5b390805", "Url": "https://api.github.com/repos/sylvek/itracing2", "Date": "2015-08-30T07:18:09Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mAccountManager.tryLogIn())) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8654/buggy-version/SEEDForAndroid.app.src.main.java.edu.umich.seedforandroid.doctor.AddNewPatient.java", "BodyUseAPI": [], "Fixed commit": "787f0073669b86638504c7f8c39a6b998ad00ecc", "Url": "https://api.github.com/repos/kpurcell84/EECS481-SEED", "Date": "2014-12-06T20:23:59Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_blurProcess) != null) _blurProcess.onDestory();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4848/buggy-version/app.src.main.java.com.tao.stackblur.StackBlurManager.java", "BodyUseAPI": [], "Fixed commit": "3823d10a515dd49a402231b5bde420514abe0f27", "Url": "https://api.github.com/repos/TingTaoTao/StackBlur", "Date": "2016-08-03T08:57:30Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((prefs.getInt(org.openpnp.gui.MainFrame.PREF_WINDOW_WIDTH, 50)) < 50) { prefs.putInt(org.openpnp.gui.MainFrame.PREF_WINDOW_WIDTH, org.openpnp.gui.MainFrame.PREF_WINDOW_WIDTH_DEF); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8694/buggy-version/gui.src.main.java.org.openpnp.gui.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "3d21c98865706be10b8f592fc6c0dfa625567fa6", "Url": "https://api.github.com/repos/rspelling/openpnp", "Date": "2013-08-24T21:59:50Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((prefs.getInt(org.openpnp.gui.MainFrame.PREF_WINDOW_HEIGHT, 50)) < 50) { prefs.putInt(org.openpnp.gui.MainFrame.PREF_WINDOW_HEIGHT, org.openpnp.gui.MainFrame.PREF_WINDOW_HEIGHT_DEF); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8694/buggy-version/gui.src.main.java.org.openpnp.gui.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "3d21c98865706be10b8f592fc6c0dfa625567fa6", "Url": "https://api.github.com/repos/rspelling/openpnp", "Date": "2013-08-24T21:59:50Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCircleRadius) == null) { mCircleRadius = mMap.addCircle(new com.google.android.gms.maps.model.CircleOptions().center(new com.google.android.gms.maps.model.LatLng(mLastLocation.getLatitude(), mLastLocation.getLongitude())).radius((1000 * (INITIAL_SEEK_BAR_PROGRESS))).strokeColor(R.color.menuColor2).fillColor(R.color.radius_fill_color)); loadMarkersOnMap((1000 * (INITIAL_SEEK_BAR_PROGRESS))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7889/buggy-version/app.src.main.java.com.codeground.adventurousbulgaria.Activities.NearByActivity.java", "BodyUseAPI": [], "Fixed commit": "03ba8f99499bc3c4f34ad5aa647d27eda5cc173d", "Url": "https://api.github.com/repos/bojidartonchev/Wanderlust-Bulgaria", "Date": "2017-01-07T00:23:26Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getParamExtension()) != null) && (getParamExtension().equalsIgnoreCase(\"CDG\"))) vo.setNamedWhereClauseParam(\"dGActiveStatus\", getParamStatus()); else if (((getParamLevelGroup()) != null) && (getParamLevelGroup().equals(\"CDG\"))) vo.setNamedWhereClauseParam(\"dGActiveStatus\", getParamStatus()); else vo.setNamedWhereClauseParam(\"dGActiveStatus\", \"%\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7099/buggy-version/ViewController.src.com.dbms.csmq.view.backing.whod.WhodWizardSearchBean.java", "BodyUseAPI": [], "Fixed commit": "260c53e0ddb083277143ca84342b20737fda090b", "Url": "https://api.github.com/repos/hpothuri/WHOD_MED_CQT", "Date": "2015-08-28T11:22:08Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success) { collections.remove(pos); adapter.notifyDataSetChanged(); net.jsiq.marketing.util.MessageToast.showText(this, R.string.operatSucceed); }else { net.jsiq.marketing.util.MessageToast.showText(this, R.string.operatFailed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5111/buggy-version/PocketMarketing.src.net.jsiq.marketing.activity.CollectionsActivity.java", "BodyUseAPI": [], "Fixed commit": "b8640e5089246362e01867132d1c2ba7606c9aee", "Url": "https://api.github.com/repos/onecoders/ViewPageIndicator", "Date": "2013-11-21T01:36:39Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(group.getIdentifiers().getIdentifier().isEmpty())) workSummaryList.add(pt.ptcris.ORCIDHelper.groupToWork(group));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1987/buggy-version/src.main.java.pt.ptcris.ORCIDHelper.java", "BodyUseAPI": ["java.util.List<org.um.dsi.gavea.orcid.model.work.WorkSummary>.add(org.um.dsi.gavea.orcid.model.work.WorkSummary)", "pt.ptcris.ORCIDHelper.groupToWork(org.um.dsi.gavea.orcid.model.activities.WorkGroup)"], "Fixed commit": "df1a3a5d5e97881e8ca4b1ff2e6a1656ddea0b38", "Url": "https://api.github.com/repos/rcaap-fccn/PTCRISync", "Date": "2016-06-22T09:53:03Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.edu.amu.wmi.wmitimetable.service.SettingsService.loadSetting(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (setting == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5373/buggy-version/app.src.main.java.pl.edu.amu.wmi.wmitimetable.service.SettingsService.java", "BodyUseAPI": [], "Fixed commit": "dcb632415d717626b6db2bc6bcd8dac74b8637ad", "Url": "https://api.github.com/repos/wmi-students/wmi-timetable-android", "Date": "2017-02-01T21:35:32Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((statePointer.getStateNum()) == 6) return new com.linkinpark213.compiler.analyzer.lexical.tokens.Separator(':');", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6156/buggy-version/src.com.linkinpark213.compiler.analyzer.lexical.dfd.OperatorDFA.java", "BodyUseAPI": [], "Fixed commit": "49dd479d3093df3c4a5e497699f14bafda3bcdce", "Url": "https://api.github.com/repos/linkinpark213/coq-compiler", "Date": "2017-07-16T05:03:09Z"},
{"Line": "=>593", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(client.isConnected())) { ss.addMessageToDataMessageQueue(\"IB Client not connected so attempting to connect before placeOrder()\"); connect(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3544/buggy-version/src.data.downloaders.interactivebrokers.IBWorker.java", "BodyUseAPI": [], "Fixed commit": "41ee95aa34d16571e6a3d5e3b6164cdeac1d7d40", "Url": "https://api.github.com/repos/MatthewPDingle/CSCSPMonitor", "Date": "2017-07-07T15:02:10Z"},
{"Line": "=>597", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (client.isConnected()) { client.placeOrder(orderID, contract, order); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3544/buggy-version/src.data.downloaders.interactivebrokers.IBWorker.java", "BodyUseAPI": ["com.ib.client.EClientSocket.placeOrder(int,com.ib.client.Contract,com.ib.client.Order)"], "Fixed commit": "41ee95aa34d16571e6a3d5e3b6164cdeac1d7d40", "Url": "https://api.github.com/repos/MatthewPDingle/CSCSPMonitor", "Date": "2017-07-07T15:02:10Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressArc) != null) { progressArc.setArcColor(arcColor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4055/buggy-version/library.src.main.java.com.github.jorgecastilloprz.FABProgressCircle.java", "BodyUseAPI": [], "Fixed commit": "8d2ed99170604d6ffc0878a4744628782e63b7bd", "Url": "https://api.github.com/repos/smeegoan/FABProgressCircle", "Date": "2016-04-28T19:54:03Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_disabled)) { _statusTask = _taskScheduler.scheduleWithFixedDelay(new StatusThread(), (((org.onebusaway.presentation.services.cachecontrol.CacheService.STATUS_INTERVAL_MINUTES) * 60) * 1000)); }else { this.logStatus(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8210/buggy-version/onebusaway-presentation.src.main.java.org.onebusaway.presentation.services.cachecontrol.CacheService.java", "BodyUseAPI": [], "Fixed commit": "1290056311b2b72bc24c36d2866a774b51a06c7b", "Url": "https://api.github.com/repos/camsys/onebusaway-application-modules", "Date": "2015-05-18T12:37:27Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((((((((gameArray[0]) != 0) && ((gameArray[1]) != 0)) && ((gameArray[2]) != 0)) && ((gameArray[3]) != 0)) && ((gameArray[4]) != 0)) && ((gameArray[5]) != 0)) && ((gameArray[6]) != 0)) && ((gameArray[7]) != 0)) && ((gameArray[8]) != 0)) { javax.swing.JOptionPane.showMessageDialog(null, \"Draw!\"); board.disableButtons(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/360/buggy-version/src.Game.GameArray.java", "BodyUseAPI": [], "Fixed commit": "bca5b5f33424982de5fe33c6f943352233cd85b8", "Url": "https://api.github.com/repos/bartekklys/TicTacToe", "Date": "2016-04-21T18:57:28Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.beans.PropertyEditorManager.findEditor(java.lang.Class<? extends java.lang.Object>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((editor.getValue()) != null) { properties.put(propertyName, editor.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6906/buggy-version/PreviewAPI.src.org.gephi.preview.api.PreviewPreset.java", "BodyUseAPI": ["java.beans.PropertyEditor.getValue()", "java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.Object)"], "Fixed commit": "cce734e502184114ed05113fc3414e9764df1f94", "Url": "https://api.github.com/repos/gephi/gephi", "Date": "2012-03-14T01:37:00Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bestColor == null) { bestColor = magic.model.MagicColor.getColor(magic.model.MagicColor.getRandomColors(1).charAt(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8909/buggy-version/src.magic.model.MagicPlayerDefinition.java", "BodyUseAPI": [], "Fixed commit": "3fee8579ee11ce71356827d7268b245a423d96b9", "Url": "https://api.github.com/repos/magarena/magarena", "Date": "2014-03-13T18:21:16Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.samskivert.swing.Label.getSize()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((d.width) < 1) || ((d.height) < 0)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5668/buggy-version/src.main.java.de.onyxbits.scenepainter.scene.elements.SamskivertLabelSceneElement.java", "BodyUseAPI": [], "Fixed commit": "9e7847fef85c160bd19b86f5c892c80da4c4839e", "Url": "https://api.github.com/repos/onyxbits/ScenePainter", "Date": "2011-09-22T23:33:36Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.ednovo.gooru.application.client.gin.AppClientFactory.getCurrentPlaceToken().equalsIgnoreCase(PlaceTokens.STUDY)) { org.ednovo.gooru.application.client.gin.AppClientFactory.getPlaceManager().revealPlace(PlaceTokens.CLASSHOME); }else { Window.Location.replace(result); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1697/buggy-version/src.main.java.org.ednovo.gooru.client.mvp.home.LoginPopupUc.java", "BodyUseAPI": [], "Fixed commit": "96bd9f70b1a0e0e5ff3b19502af21dc8c89e0adc", "Url": "https://api.github.com/repos/anilgooru/Gooru-Web", "Date": "2015-08-10T11:51:22Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request.getContext().asType(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((partnerView.getId()) != null) && ((partnerView.getId()) > 0)) { com.axelor.apps.base.db.Partner partner = partnerRepo.find(partnerView.getId()); java.util.Map<java.lang.String, java.lang.Object> map = customerCreditLineService.updateLines(partner); response.setValues(map); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3648/buggy-version/axelor-supplychain.src.main.java.com.axelor.apps.supplychain.web.CustomerCreditLineController.java", "BodyUseAPI": ["com.axelor.apps.base.db.Partner.getId()", "com.axelor.apps.base.db.repo.PartnerRepository.find(partnerView.getId())"], "Fixed commit": "879df671d325f283887eaffb0a7e81805b14e4c7", "Url": "https://api.github.com/repos/axelor/axelor-business-suite", "Date": "2015-09-23T16:16:56Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getArguments()) != null) { i = getArguments().getString(\"myData\"); new in.reweyou.reweyou.fragment.CommentsFragment.JSONTask(false).execute(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1079/buggy-version/app.src.main.java.in.reweyou.reweyou.fragment.CommentsFragment.java", "BodyUseAPI": [], "Fixed commit": "77c69b7c371b0e401d94e0b3d0db4ae25169270f", "Url": "https://api.github.com/repos/varunn12/Reweyou", "Date": "2016-11-22T21:42:12Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["template.controllers.IncomeParser.parseIncome(template.framework.objects.Info)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((apiResults.length) < 50) numPoints = apiResults.length;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6882/buggy-version/src.main.java.template.controllers.MainController.java", "BodyUseAPI": [], "Fixed commit": "c3809f1d130a666341002e1b7833cad36e7399c5", "Url": "https://api.github.com/repos/CarolineCaldwell/Software_Project", "Date": "2014-12-09T01:39:13Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (writer != null) { return writer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8957/buggy-version/src.main.java.com.alibaba.fastjson.serializer.SerializeConfig.java", "BodyUseAPI": [], "Fixed commit": "5a0ad75dacc8b5cfdc718ebce2ef95e46c7dba2b", "Url": "https://api.github.com/repos/bpzhang/fastjson", "Date": "2016-07-31T03:51:44Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.depaul.se.worker.jpa.WorkerService.getWorkerByProfession(search.getProfession())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cust == null) { for (edu.depaul.se.Worker x : cust) { double tempCost = x.getCost(); java.lang.String tempZip = x.getZip(); java.lang.String tempSkill = x.getSkill().toLowerCase(); java.lang.String tempCity = x.getCity().toLowerCase(); java.lang.String tempState = x.getState().toLowerCase(); if ((((cost <= tempCost) && (tempSkill.equals(skill.toLowerCase()))) && (tempCity.equals(city.toLowerCase()))) && (tempState.equals(state.toLowerCase()))) { if ((zipcode.length()) > 0) { if (tempZip.equals(zipcode)) { finalCust.add(x); } }else { finalCust.add(x); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/9043/buggy-version/src.main.java.edu.depaul.se.SearchController.java", "BodyUseAPI": [], "Fixed commit": "032914f94aaca0c42c57837f959aed7eef2326c4", "Url": "https://api.github.com/repos/GaryGuo007/SE452Group2Rentall", "Date": "2016-11-05T19:49:30Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((timeEntries.size()) < 1) timeEntries.put(id, timeEntry);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3165/buggy-version/src.main.java.io.pivotal.pal.tracker.InMemoryTimeEntryRepository.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Long, io.pivotal.pal.tracker.TimeEntry>.put(java.lang.Long,io.pivotal.pal.tracker.TimeEntry)"], "Fixed commit": "5f56bf6e3468652c3e4e7b197c75353a78c26eaa", "Url": "https://api.github.com/repos/hananiel/pal-tracker", "Date": "2017-10-03T20:03:10Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s.equals(\"_csrf\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2919/buggy-version/src.main.java.me.zimy.questionnaire.DataSaver.java", "BodyUseAPI": [], "Fixed commit": "9e01dc1c2752f601f6e442a5c3e11c15de72f73a", "Url": "https://api.github.com/repos/zimy/questionnaire", "Date": "2015-01-01T16:05:02Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currTerm.equals(mylist.get(0))) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6710/buggy-version/core.src.main.java.org.nextprot.api.core.utils.TerminologyUtils.java", "BodyUseAPI": [], "Fixed commit": "99288670ae80e9264831d7ba0150ebe29193bf53", "Url": "https://api.github.com/repos/calipho-sib/nextprot-api", "Date": "2017-03-16T11:36:10Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currTerm.equals(mylist.get(0))) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6710/buggy-version/core.src.main.java.org.nextprot.api.core.utils.TerminologyUtils.java", "BodyUseAPI": [], "Fixed commit": "99288670ae80e9264831d7ba0150ebe29193bf53", "Url": "https://api.github.com/repos/calipho-sib/nextprot-api", "Date": "2017-03-16T11:36:10Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (packagePathX == (-1)) { packagePathX = (packagePath.indexOf(\"/integration/\")) + 8; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3233/buggy-version/portal-impl.src.com.liferay.portal.tools.sourceformatter.JavaSourceProcessor.java", "BodyUseAPI": [], "Fixed commit": "f871559aa17e539f265a0d37bcb6498be2b52a26", "Url": "https://api.github.com/repos/slnn/liferay-portal", "Date": "2014-08-29T22:44:14Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((person.getName()) == null) { person.setName(\"<Unknown name>\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6945/buggy-version/src.hu.rgai.yako.sql.PersonSenderDAO.java", "BodyUseAPI": ["hu.rgai.yako.beens.Person.setName(java.lang.String)"], "Fixed commit": "7db67b51e2522ef86864158dab46ba8fbfc0e279", "Url": "https://api.github.com/repos/k-kojak/yako", "Date": "2014-10-31T11:53:48Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((roles.size()) == 1) return self_value;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3302/buggy-version/ggp-base-master.src.main.java.org.ggp.base.player.gamer.statemachine.GoatsIterativeDeep.java", "BodyUseAPI": [], "Fixed commit": "00fb6a9f54c650f302c3e1061014ff1171f4cfba", "Url": "https://api.github.com/repos/dunchadhn/Goat_Player", "Date": "2017-04-26T22:44:47Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((roles.size()) == 1) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3302/buggy-version/ggp-base-master.src.main.java.org.ggp.base.player.gamer.statemachine.GoatsIterativeDeep.java", "BodyUseAPI": [], "Fixed commit": "00fb6a9f54c650f302c3e1061014ff1171f4cfba", "Url": "https://api.github.com/repos/dunchadhn/Goat_Player", "Date": "2017-04-26T22:44:47Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.stratos.autoscaler.applications.pojo.ApplicationClusterContext.getDeploymentPolicyName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(deploymentPolicyName)) { deploymentPolicyName = org.apache.stratos.autoscaler.util.AutoscalerUtil.getDeploymentPolicyIdByAlias(application.getUniqueIdentifier(), org.apache.stratos.autoscaler.util.AutoscalerUtil.getAliasFromClusterId(appClusterContext.getClusterId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5577/buggy-version/components.org.apache.stratos.autoscaler.src.main.java.org.apache.stratos.autoscaler.applications.topic.ApplicationBuilder.java", "BodyUseAPI": [], "Fixed commit": "7811f123c58bb9c980403670c0b4f02df2c87a2d", "Url": "https://api.github.com/repos/apache/stratos", "Date": "2015-10-14T06:16:53Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang3.StringUtils.isEmpty(deploymentPolicyName)) { throw new org.apache.stratos.autoscaler.exception.AutoScalerException(java.lang.String.format((\"Deployment policy name not found: [application] %s \" + \"[cluster] %s\"), application.getUniqueIdentifier(), appClusterContext.getClusterId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5577/buggy-version/components.org.apache.stratos.autoscaler.src.main.java.org.apache.stratos.autoscaler.applications.topic.ApplicationBuilder.java", "BodyUseAPI": [], "Fixed commit": "7811f123c58bb9c980403670c0b4f02df2c87a2d", "Url": "https://api.github.com/repos/apache/stratos", "Date": "2015-10-14T06:16:53Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.adrean.Survivor.Exchange.getItemStack(byte,org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (is == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6916/buggy-version/src.fr.adrean.Survivor.gui.ExchangeGUI.java", "BodyUseAPI": [], "Fixed commit": "bbd3c9df537f63c211b5ebe31a5d4fab343f75c9", "Url": "https://api.github.com/repos/BullCheat/Survivor", "Date": "2015-08-08T14:03:59Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.antlr.v4.tool.GrammarRootAST.getFirstChildWithType(ANTLRParser.RULES)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((combinedRulesRoot.getChildCount()) > 0) { rules = ((java.util.List<?>) (combinedRulesRoot.getChildren())).toArray(new org.antlr.v4.tool.GrammarASTWithOptions[0]); }else { rules = new org.antlr.v4.tool.GrammarASTWithOptions[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/481/buggy-version/tool.src.org.antlr.v4.tool.GrammarTransformPipeline.java", "BodyUseAPI": ["org.antlr.v4.tool.GrammarAST.getChildren()", "((java.util.List<?>) (combinedRulesRoot.getChildren())).toArray(org.antlr.v4.tool.GrammarASTWithOptions[])"], "Fixed commit": "95b6cd58c4bc8da2c17996d05a8acfb7fd1fc741", "Url": "https://api.github.com/repos/parrt/antlr4", "Date": "2012-03-28T02:25:23Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(user.getUsername().matches(\"[a-zA-Z0-9]*\"))) { errors.rejectValue(\"username\", \"Unacceptable.Symbols\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1148/buggy-version/src.main.java.net.proselyte.springsecurityapp.validator.UserValidator.java", "BodyUseAPI": [], "Fixed commit": "0389759fb5cf00b245f0dd82439544a955997f6c", "Url": "https://api.github.com/repos/VladPrn/SpringSecurityApp", "Date": "2017-06-28T10:24:09Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == (org.overture.ide.ui.editor.syntax.QuoteRule.EOF)) { scanner.unread(); return org.eclipse.jface.text.rules.Token.EOF; }else if (c != '<') { scanner.unread(); return org.eclipse.jface.text.rules.Token.UNDEFINED; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2453/buggy-version/ide.ui.src.main.java.org.overture.ide.ui.editor.syntax.QuoteRule.java", "BodyUseAPI": [], "Fixed commit": "0df8d6fd214bfd1f295030dbe928c5aaefe96748", "Url": "https://api.github.com/repos/overturetool/overture", "Date": "2014-04-28T11:44:52Z"},
{"Line": "=>672", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.level) > (other.level)) { long branch = (other.bits) & (node.getBranchMask()); if (branch == 0) { node.left = merge(node.left, other); }else { node.right = merge(node.right, other); } return node; }else if ((node.level) < (other.level)) { io.airlift.stats.QuantileDigest.Node result = createNode(other.bits, other.level, other.weightedCount); long branch = (node.bits) & (other.getBranchMask()); if (branch == 0) { result.left = merge(node, other.left); result.right = copyRecursive(other.right); }else { result.left = copyRecursive(other.left); result.right = merge(node, other.right); } return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1152/buggy-version/stats.src.main.java.io.airlift.stats.QuantileDigest.java", "BodyUseAPI": ["io.airlift.stats.QuantileDigest.merge(io.airlift.stats.QuantileDigest.Node,io.airlift.stats.QuantileDigest.Node)", "io.airlift.stats.QuantileDigest.merge(io.airlift.stats.QuantileDigest.Node,io.airlift.stats.QuantileDigest.Node)", "io.airlift.stats.QuantileDigest.copyRecursive(io.airlift.stats.QuantileDigest.Node)", "io.airlift.stats.QuantileDigest.createNode(long,int,double)", "io.airlift.stats.QuantileDigest.copyRecursive(io.airlift.stats.QuantileDigest.Node)", "io.airlift.stats.QuantileDigest.Node.getBranchMask()", "io.airlift.stats.QuantileDigest.Node.getBranchMask()", "io.airlift.stats.QuantileDigest.merge(io.airlift.stats.QuantileDigest.Node,io.airlift.stats.QuantileDigest.Node)", "io.airlift.stats.QuantileDigest.merge(io.airlift.stats.QuantileDigest.Node,io.airlift.stats.QuantileDigest.Node)"], "Fixed commit": "9ff7e663b209bc5aa46c30990aafd4e9123810ea", "Url": "https://api.github.com/repos/johngmyers/airlift", "Date": "2013-06-15T06:35:46Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (service.retreive(java.lang.Integer.parseInt(input)).getLastModifiedDate().after(new java.util.Date())) { pw.println(service.bid(username, java.lang.Integer.parseInt(input)).toString()); }else { pw.println(\"Failed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3143/buggy-version/labs.six.ServerThread.java", "BodyUseAPI": ["RemoteClientAuctionService.bid(java.lang.String,int)", "java.io.PrintWriter.println(service.bid(username, java.lang.Integer.parseInt(input)).toString())", "service.bid(username, java.lang.Integer.parseInt(input)).toString()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "9452bc114c67d5b2401e4ee642b2f73877c94228", "Url": "https://api.github.com/repos/KeithPetrone/CSC180", "Date": "2014-12-10T00:19:34Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Long.parseLong(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (kundenNummer <= 0) { throw new de.g18.BitBank.Exception.KundenNummerException(\"Kundennummer darf nicht kleiner 0 sein\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/9119/buggy-version/BitBank.src.de.g18.BitBank.Gui.Listener.KundenAnlegenListener.java", "BodyUseAPI": [], "Fixed commit": "f4fc14e534f9d9c632bacd808bf5965ab0e44c37", "Url": "https://api.github.com/repos/CitySim/bitbank", "Date": "2013-04-19T10:48:56Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.event.ListSelectionEvent.getValueIsAdjusting()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isAdjusting) { java.lang.System.out.println(table_selection.getSelectedRow()); if (((boolean) (table_selection.getValueAt(table_selection.getSelectedRow(), 0)))) { table_selection.setValueAt(new java.lang.Boolean(false), table_selection.getSelectedRow(), 0); }else { table_selection.setValueAt(new java.lang.Boolean(true), table_selection.getSelectedRow(), 0); } }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/797/buggy-version/DeliveryPerformance.src.hbs.sff.no.GUI.java", "BodyUseAPI": [], "Fixed commit": "bc6f0c6b2c648a6cbf41eaa13918a7cc44c1a058", "Url": "https://api.github.com/repos/steinsholt/SelectionGUI", "Date": "2013-10-09T13:39:50Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contactList.getValue()) != null) { final osf.demos.MovieEditor personEditor = new osf.demos.MovieEditor(contactList.getItem(contactList.getValue())); getMainWindow().addWindow(personEditor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2037/buggy-version/src.main.java.osf.demos.MyVaadinApplication.java", "BodyUseAPI": ["osf.demos.Table.getItem(contactList.getValue())", "osf.demos.Table.getValue()"], "Fixed commit": "8b1b75b8b944d56522289746b2fbcafb6da76c69", "Url": "https://api.github.com/repos/wichtounet/VaadinBoard", "Date": "2012-04-04T10:13:35Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((contactList.getValue()) != null) { container.removeItem(contactList.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2037/buggy-version/src.main.java.osf.demos.MyVaadinApplication.java", "BodyUseAPI": ["osf.demos.Table.getValue()", "com.vaadin.addon.jpacontainer.JPAContainer<osf.demos.model.Movie>.removeItem(contactList.getValue())"], "Fixed commit": "8b1b75b8b944d56522289746b2fbcafb6da76c69", "Url": "https://api.github.com/repos/wichtounet/VaadinBoard", "Date": "2012-04-04T10:13:35Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (target != null) { rights.remove(target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5917/buggy-version/src.main.java.org.kumoricon.model.role.Role.java", "BodyUseAPI": ["java.util.Set<org.kumoricon.model.role.Right>.remove(org.kumoricon.model.role.Right)"], "Fixed commit": "c78186b2505f7e428178ea33426dbfd162cd1976", "Url": "https://api.github.com/repos/kumoregdev/kumoreg", "Date": "2016-09-08T03:43:40Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.usfirst.frc2175.config.VisionProcessingConfig.getLargestContourCenterX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (centerX == (org.usfirst.frc2175.util.HighestArrayIndexFinder.NO_VALUES)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7165/buggy-version/src.org.usfirst.frc2175.subsystem.camera.CameraSubsystem.java", "BodyUseAPI": [], "Fixed commit": "eb32fe145c7efe5768805386967b64804327883e", "Url": "https://api.github.com/repos/frc-2175/2016RobotCode", "Date": "2016-04-09T18:08:35Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(resultEmail.next())) { shared.PrescriptionDateTime pdt = pdtDb.findByPrimaryKey(result.getInt(\"id\")); backend.DAO.PrescriptionDAO pDb = new backend.DAO.PrescriptionDAO(); shared.Prescription p = pDb.findByPrimaryKey(pdt.forPrescription); java.lang.System.out.println((((\"Sending reminder to \" + (p.for_patient.name)) + \" about \") + (p.name))); service.execute(new backend.PrescriptionEmailMessage(p, pdt, p.for_patient, client)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/959/buggy-version/src.backend.EmailScheduler.java", "BodyUseAPI": [], "Fixed commit": "54a93c9543ef13209b26de8580813ddcd549c7b8", "Url": "https://api.github.com/repos/JustDerb/smartpill", "Date": "2013-04-30T00:49:35Z"},
{"Line": "=>736", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (javax.xml.XMLConstants.XMLNS_ATTRIBUTE.equals(ns)) { element.setAttribute(ns, nsMap.get(ns)); }else { element.setAttribute((((javax.xml.XMLConstants.XMLNS_ATTRIBUTE) + \":\") + ns), nsMap.get(ns)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1001/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.DefaultCxfBinding.java", "BodyUseAPI": ["org.w3c.dom.Element.setAttribute(java.lang.String,java.lang.String)", "org.w3c.dom.Element.setAttribute(java.lang.String,java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)"], "Fixed commit": "2776fd555b52e3e0073f81fab97775c406e541d8", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-08-29T09:19:20Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (javax.xml.XMLConstants.XMLNS_ATTRIBUTE.equals(ns)) { element.setAttribute(ns, nsMap.get(ns)); }else { element.setAttribute((((javax.xml.XMLConstants.XMLNS_ATTRIBUTE) + \":\") + ns), nsMap.get(ns)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1001/buggy-version/components.camel-cxf.src.main.java.org.apache.camel.component.cxf.CxfPayload.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "org.w3c.dom.Element.setAttribute(java.lang.String,java.lang.String)", "org.w3c.dom.Element.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "2776fd555b52e3e0073f81fab97775c406e541d8", "Url": "https://api.github.com/repos/apache/camel", "Date": "2014-08-29T09:19:20Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (severity == (EventLog.Severity.WARN)) icon.setImageResource(R.mipmap.severity_warn); else if (severity == (EventLog.Severity.INFO)) icon.setImageResource(R.mipmap.severity_info); else if (severity == (EventLog.Severity.DEBUG)) icon.setImageResource(R.mipmap.severity_debug);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2010/buggy-version/src.main.java.net.tetrakoopa.canardhttpd.LogActivity.java", "BodyUseAPI": [], "Fixed commit": "83c6cde2740407b712267edd1e2a540dfe78a181", "Url": "https://api.github.com/repos/martin-der/CanardHTTPD", "Date": "2016-05-12T19:57:36Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getStartTime().isAfter(timeNow)) { return false; }else { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8767/buggy-version/src.main.java.Task.java", "BodyUseAPI": [], "Fixed commit": "656972177113f6319b29e7016d4d4feebee589f4", "Url": "https://api.github.com/repos/cs2103jan2015-w15-1j/main", "Date": "2015-04-11T13:40:41Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((receiver.getStepInPlan()) != 0) { startIndex = (receiver.getStepInPlan()) - 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/9158/buggy-version/src.conflicts.MABoxConflicts.java", "BodyUseAPI": ["atoms.Agent.getStepInPlan()"], "Fixed commit": "6cfeec2b63331c14d301840bfb7fdad060f50353", "Url": "https://api.github.com/repos/trillykins/AI-shenanigans-", "Date": "2016-05-14T20:04:39Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source == null) return new com.xpn.spellnote.models.DictionaryModel(\"\", \"\", \"null\", 0, \"\", \"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2641/buggy-version/app.src.main.java.com.xpn.spellnote.services.dictionary.local.DictionaryMapper.java", "BodyUseAPI": [], "Fixed commit": "524f264ce5f08ecae1daeaeace766a881a0aecef", "Url": "https://api.github.com/repos/MartinXPN/SpellNote", "Date": "2017-11-18T09:13:08Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOpen) { synchronized(this) { if (!(isOpen)) return; isOpen = false; cache.clearCache(); hdf5Access.closeAllDataSets(); if ((existingHdf5Reader) == null) hdf5Access.close(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2591/buggy-version/src.main.java.bdv.img.hdf5.Hdf5ImageLoader.java", "BodyUseAPI": [], "Fixed commit": "fb5a4390de7ba7d966bead92ec3adb987667a141", "Url": "https://api.github.com/repos/colinschaefer/bigdataviewer-core", "Date": "2015-07-08T13:39:54Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clazz.equals(java.time.OffsetDateTime.class)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7433/buggy-version/src.main.java.com.jrodeo.generator.MarshallerGenerator.java", "BodyUseAPI": [], "Fixed commit": "f0715ae1255cf716ba326b33df15442cd33557fb", "Url": "https://api.github.com/repos/bjhlista/jrodeo-bson", "Date": "2016-11-18T00:00:36Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jsonElement.isJsonArray()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6321/buggy-version/xcore-library.xcore.src.main.java.by.istin.android.xcore.gson.AbstractValuesAdapter.java", "BodyUseAPI": [], "Fixed commit": "ba63926fb6805a370bfcbfafb36c56303dc8388b", "Url": "https://api.github.com/repos/IstiN/android_xcore", "Date": "2013-12-21T21:28:20Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t.hasSpecialType(SpecialType.PATH)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6539/buggy-version/procedural-time.src.entities.town.Town.java", "BodyUseAPI": [], "Fixed commit": "b43619072784ba56832349a0bda7a4476268bae4", "Url": "https://api.github.com/repos/Schmavery/procedural-time-travel-game", "Date": "2015-02-09T19:54:06Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2992/buggy-version/OsmAnd.src.net.osmand.plus.activities.MapActivity.java", "BodyUseAPI": [], "Fixed commit": "1295724ad0120a8a7ed6577a1273f756434d0d73", "Url": "https://api.github.com/repos/Zahnstocher/Osmand", "Date": "2014-09-02T06:28:38Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cd) == 1) { i = (i) + 1; setImage(((\"st\" + ((i) % 4)) + \".png\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5606/buggy-version/bot.java", "BodyUseAPI": [], "Fixed commit": "bf0752c3ec4211187f3fcd68910c931671f0a7e1", "Url": "https://api.github.com/repos/Regeas/RG", "Date": "2017-04-03T10:35:30Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Play.dif) == 2) { { if ((cd) == 30) { move(10); cd = 0; } } }else if ((Play.dif) == 3) { { if ((cd) == 10) { move(5); cd = 0; } } }else if ((Play.dif) == 4) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5606/buggy-version/bot.java", "BodyUseAPI": [], "Fixed commit": "bf0752c3ec4211187f3fcd68910c931671f0a7e1", "Url": "https://api.github.com/repos/Regeas/RG", "Date": "2017-04-03T10:35:30Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((block.getType()) == (org.bukkit.Material.MYCEL)) || ((block.getType()) == (org.bukkit.Material.DIRT))) || ((block.getType()) == (org.bukkit.Material.GRASS))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2163/buggy-version/src.uk.co.oliwali.HawkEye.listeners.MonitorWorldListener.java", "BodyUseAPI": [], "Fixed commit": "cc431ed17cc3da9c2b3ff1d6c3292387cb44ce53", "Url": "https://api.github.com/repos/oliverwoodings/HawkEye", "Date": "2011-12-15T15:45:08Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (rise == (-0)) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8774/buggy-version/linePatterns.src.main.java.Point.java", "BodyUseAPI": [], "Fixed commit": "b946a28c804467c30afa8bf970d75d28c8dd2693", "Url": "https://api.github.com/repos/Rduous/CourseraPrincetonAlgorithms", "Date": "2015-02-18T20:05:28Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.slowpoke.arithmetics.DivideWithRest.getRest()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rest.isZero()) { return beforePoint; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2590/buggy-version/src.main.java.org.slowpoke.arithmetics.Divide.java", "BodyUseAPI": [], "Fixed commit": "e07178e081bf3433d7e2658a1a03c0e5ba7a9091", "Url": "https://api.github.com/repos/OleksandrPavloshchuk/slowpoke-arithmetics", "Date": "2015-01-16T12:02:30Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (selectedNode == null) { setName(defaultName); }else { org.sleuthkit.datamodel.Content content = selectedNode.getLookup().lookup(org.sleuthkit.datamodel.Content.class); if (content != null) { java.lang.String path = org.sleuthkit.autopsy.datamodel.DataConversion.getformattedPath(org.sleuthkit.autopsy.datamodel.ContentUtils.getDisplayPath(selectedNode.getLookup().lookup(org.sleuthkit.datamodel.Content.class)), 0); setName(path); }else { setName(defaultName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2817/buggy-version/CoreComponents.src.org.sleuthkit.autopsy.corecomponents.DataContentTopComponent.java", "BodyUseAPI": ["org.openide.nodes.Node.getLookup()", "org.sleuthkit.autopsy.datamodel.ContentUtils.getDisplayPath(selectedNode.getLookup().lookup(org.sleuthkit.datamodel.Content.class))", "selectedNode.getLookup().lookup(java.lang.Class)", "org.openide.nodes.Node.getLookup()", "selectedNode.getLookup().lookup(java.lang.Class)", "org.sleuthkit.autopsy.datamodel.DataConversion.getformattedPath(org.sleuthkit.autopsy.datamodel.ContentUtils.getDisplayPath(selectedNode.getLookup().lookup(org.sleuthkit.datamodel.Content.class)),int)"], "Fixed commit": "ad841ccffc82054b0a2db4cfb41e8b0d823f279e", "Url": "https://api.github.com/repos/sleuthkit/autopsy", "Date": "2011-12-13T19:04:04Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(votes.contains(vote))) { votes.add(vote); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5098/buggy-version/VotingPlugin.src.com.Ben12345rocks.VotingPlugin.Bungee.BungeeVote.java", "BodyUseAPI": ["java.util.ArrayList<com.vexsoftware.votifier.model.Vote>.add(com.vexsoftware.votifier.model.Vote)"], "Fixed commit": "67908b82fac1dd4d29b22a8829a422e6ce36d1ec", "Url": "https://api.github.com/repos/Ben12345rocks/VotingPlugin", "Date": "2016-08-29T19:36:42Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.bartz24.skyresources.technology.tile.FluidDropperTile.getTileEntity(this.pos.add(dir.getDirectionVec()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((tile != null) && (tile.hasCapability(CapabilityFluidHandler.FLUID_HANDLER_CAPABILITY, dir))) { net.minecraftforge.fluids.capability.IFluidHandler fluidHand = tile.getCapability(CapabilityFluidHandler.FLUID_HANDLER_CAPABILITY, dir); for (net.minecraftforge.fluids.capability.IFluidTankProperties inputTank : fluidHand.getTankProperties()) { net.minecraftforge.fluids.FluidStack inputFluid = inputTank.getContents(); if (((this.tank.getFluid()) == null) || ((inputFluid != null) && (inputFluid.isFluidEqual(this.tank.getFluid())))) { this.fill(fluidHand.drain(((com.bartz24.skyresources.config.ConfigOptions.fluidDropperCapacity) - (this.tank.getFluidAmount())), true), true); if ((com.bartz24.skyresources.config.ConfigOptions.fluidDropperCapacity) <= (this.tank.getFluidAmount())) return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3945/buggy-version/src.main.java.com.bartz24.skyresources.technology.tile.FluidDropperTile.java", "BodyUseAPI": ["net.minecraft.tileentity.TileEntity.getCapability(CapabilityFluidHandler.FLUID_HANDLER_CAPABILITY,net.minecraft.util.EnumFacing)"], "Fixed commit": "0178b33398fe515ff0075394c046d90bcd657084", "Url": "https://api.github.com/repos/Bartz24/SkyResources", "Date": "2017-09-11T11:12:10Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cc.colorcat.toolbox.widget.ChoiceRvAdapter.SelectHelper.isSelectedWithChoiceMode(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!selected) { dispatchSelect(position, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/267/buggy-version/toolbox.src.main.java.cc.colorcat.toolbox.widget.ChoiceRvAdapter.java", "BodyUseAPI": [], "Fixed commit": "75818ef967083654d525cb03d2308e3fa0157ef7", "Url": "https://api.github.com/repos/fireworld/ToolBox", "Date": "2017-11-30T08:12:45Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((node.getId()) < 255) && ((node.getId()) > 0)) { int count = this.getDao().create(node); org.mycontroller.standalone.db.dao.NodeDaoImpl._logger.debug(\"Created Node:[{}], Create count:{}\", node, count); }else { org.mycontroller.standalone.db.dao.NodeDaoImpl._logger.warn(\"Node:[{}], Node Id should be in the range of 1~254\", node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7651/buggy-version/src.main.java.org.mycontroller.standalone.db.dao.NodeDaoImpl.java", "BodyUseAPI": ["this.getDao().create(org.mycontroller.standalone.db.tables.Node)", "org.slf4j.Logger.debug(java.lang.String,org.mycontroller.standalone.db.tables.Node,int)", "org.slf4j.Logger.warn(java.lang.String,org.mycontroller.standalone.db.tables.Node)"], "Fixed commit": "b88c4d24c3ba32e93a0f800d777e2fc5eab4cfac", "Url": "https://api.github.com/repos/Dietmar-Franken/mycontroller", "Date": "2015-09-09T07:40:06Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((sensor.getSensorId()) < 255) && ((sensor.getSensorId()) > 0)) { java.lang.Integer count = this.getDao().create(sensor); org.mycontroller.standalone.db.dao.SensorDaoImpl._logger.debug(\"Created Sensor:[{}], Create count:{}\", sensor, count); }else { org.mycontroller.standalone.db.dao.SensorDaoImpl._logger.warn(\"Sensor:[{}], Sensser Id should be in the range of 1~254\", sensor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7651/buggy-version/src.main.java.org.mycontroller.standalone.db.dao.SensorDaoImpl.java", "BodyUseAPI": ["this.getDao().create(org.mycontroller.standalone.db.tables.Sensor)", "org.slf4j.Logger.debug(java.lang.String,org.mycontroller.standalone.db.tables.Sensor,java.lang.Integer)", "org.slf4j.Logger.warn(java.lang.String,org.mycontroller.standalone.db.tables.Sensor)"], "Fixed commit": "b88c4d24c3ba32e93a0f800d777e2fc5eab4cfac", "Url": "https://api.github.com/repos/Dietmar-Franken/mycontroller", "Date": "2015-09-09T07:40:06Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, Command>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (command == null) { command = mapping.get(\"*\"); if (command == null) { return \"invalid command\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8428/buggy-version/java.maven.src.main.java.Router.java", "BodyUseAPI": [], "Fixed commit": "99494b03bd5f14616fdc57a557bcf22024f4cbb7", "Url": "https://api.github.com/repos/jtong-kata/pos-net-shell-only", "Date": "2016-10-19T08:53:38Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((y) < 30) y = 30;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6373/buggy-version/src.Tank.java", "BodyUseAPI": [], "Fixed commit": "0c2e5eded35eb5e082601888ead2ce4c7961530a", "Url": "https://api.github.com/repos/kevinlu323/Java-TankWar", "Date": "2015-07-19T02:09:14Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((y) + (Tank.HEIGHT)) > (TankClient.GAME_HEIGHT)) y = (TankClient.GAME_HEIGHT) - (Tank.HEIGHT);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6373/buggy-version/src.Tank.java", "BodyUseAPI": [], "Fixed commit": "0c2e5eded35eb5e082601888ead2ce4c7961530a", "Url": "https://api.github.com/repos/kevinlu323/Java-TankWar", "Date": "2015-07-19T02:09:14Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((x) + (Tank.WIDTH)) > (TankClient.GAME_WIDTH)) x = (TankClient.GAME_WIDTH) - (Tank.WIDTH);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6373/buggy-version/src.Tank.java", "BodyUseAPI": [], "Fixed commit": "0c2e5eded35eb5e082601888ead2ce4c7961530a", "Url": "https://api.github.com/repos/kevinlu323/Java-TankWar", "Date": "2015-07-19T02:09:14Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((x) < 0) x = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6373/buggy-version/src.Tank.java", "BodyUseAPI": [], "Fixed commit": "0c2e5eded35eb5e082601888ead2ce4c7961530a", "Url": "https://api.github.com/repos/kevinlu323/Java-TankWar", "Date": "2015-07-19T02:09:14Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getBlob(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (b != null) p = new classes.Photo(b.getBytes(1, ((int) (b.length())))); else p = new classes.Photo(\"\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8741/buggy-version/src.database.DBFunctions.java", "BodyUseAPI": ["java.sql.Blob.length()", "java.sql.Blob.getBytes(int,long)"], "Fixed commit": "d415fe77d2e41b5dcabcac7c7c5505fc6249f464", "Url": "https://api.github.com/repos/FoodAdvisorProject/FoodAdvisorServerDB", "Date": "2017-02-12T00:15:37Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((h2.getReadSet()) != null) && ((h1.getWriteSet()) != null)) { if (net.sourceforge.fractal.utils.CollectionUtils.isIntersectingWith(h2.getReadSet().getKeys(), h1.getWriteSet().getKeys())) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2976/buggy-version/src.fr.inria.jessy.consistency.SPSI.java", "BodyUseAPI": ["fr.inria.jessy.transaction.ExecutionHistory.getReadSet()", "h2.getReadSet().getKeys()", "h1.getWriteSet().getKeys()", "net.sourceforge.fractal.utils.CollectionUtils.isIntersectingWith(h2.getReadSet().getKeys(),h1.getWriteSet().getKeys())", "fr.inria.jessy.transaction.ExecutionHistory.getWriteSet()"], "Fixed commit": "a8dc2d318cb94f93fc48a9687339dac530bb5b97", "Url": "https://api.github.com/repos/mneri/jessy", "Date": "2016-01-27T14:45:08Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((h1.getReadSet()) != null) && ((h2.getWriteSet()) != null)) { if (net.sourceforge.fractal.utils.CollectionUtils.isIntersectingWith(h1.getReadSet().getKeys(), h2.getWriteSet().getKeys())) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2976/buggy-version/src.fr.inria.jessy.consistency.SPSI.java", "BodyUseAPI": ["net.sourceforge.fractal.utils.CollectionUtils.isIntersectingWith(h1.getReadSet().getKeys(),h2.getWriteSet().getKeys())", "h1.getReadSet().getKeys()", "fr.inria.jessy.transaction.ExecutionHistory.getReadSet()", "fr.inria.jessy.transaction.ExecutionHistory.getWriteSet()", "h2.getWriteSet().getKeys()"], "Fixed commit": "a8dc2d318cb94f93fc48a9687339dac530bb5b97", "Url": "https://api.github.com/repos/mneri/jessy", "Date": "2016-01-27T14:45:08Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((h1.getWriteSet()) != null) && ((h2.getWriteSet()) != null)) { if (net.sourceforge.fractal.utils.CollectionUtils.isIntersectingWith(h1.getWriteSet().getKeys(), h2.getWriteSet().getKeys())) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2976/buggy-version/src.fr.inria.jessy.consistency.SPSI.java", "BodyUseAPI": ["fr.inria.jessy.transaction.ExecutionHistory.getWriteSet()", "h2.getWriteSet().getKeys()", "h1.getWriteSet().getKeys()", "net.sourceforge.fractal.utils.CollectionUtils.isIntersectingWith(h1.getWriteSet().getKeys(),h2.getWriteSet().getKeys())", "fr.inria.jessy.transaction.ExecutionHistory.getWriteSet()"], "Fixed commit": "a8dc2d318cb94f93fc48a9687339dac530bb5b97", "Url": "https://api.github.com/repos/mneri/jessy", "Date": "2016-01-27T14:45:08Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((minterface.ishavepetboxchecked()) && ((minterface.isexp()) < 2)) && ((minterface.iswalk()) < 3)) { inact.obidience.setValue(java.lang.Math.min(inact.obidience.getValue(), 3)); inact.active.setValue(java.lang.Math.min(inact.active.getValue(), 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1103/buggy-version/app.src.main.java.dev.eyesless.needmypuppy.Presenter_aboutdog.java", "BodyUseAPI": [], "Fixed commit": "2c702d7d64f285dee7bb42d7f5a7424131a2992c", "Url": "https://api.github.com/repos/kalininaleksandrv/NeedMyPuppyRelease_v_0.1", "Date": "2017-08-22T10:00:16Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((inact.size.getValue()) < 3) { inact.obidience.setValue(0); inact.agressive.setValue(5); inact.care.setValue(java.lang.Math.max(inact.care.getValue(), 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1103/buggy-version/app.src.main.java.dev.eyesless.needmypuppy.Presenter_aboutdog.java", "BodyUseAPI": ["inact.care.getValue()", "inact.obidience.setValue(int)", "inact.care.setValue(int)", "inact.agressive.setValue(int)", "java.lang.Math.max(inact.care.getValue(),int)"], "Fixed commit": "2c702d7d64f285dee7bb42d7f5a7424131a2992c", "Url": "https://api.github.com/repos/kalininaleksandrv/NeedMyPuppyRelease_v_0.1", "Date": "2017-08-22T10:00:16Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((minterface.isage()) > 3) { inact.size.setValue(java.lang.Math.min(inact.size.getValue(), finalyactive())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1103/buggy-version/app.src.main.java.dev.eyesless.needmypuppy.Presenter_aboutdog.java", "BodyUseAPI": [], "Fixed commit": "2c702d7d64f285dee7bb42d7f5a7424131a2992c", "Url": "https://api.github.com/repos/kalininaleksandrv/NeedMyPuppyRelease_v_0.1", "Date": "2017-08-22T10:00:16Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((finalyactive()) < 3) { inact.active.setValue(java.lang.Math.min(inact.active.getValue(), 3)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1103/buggy-version/app.src.main.java.dev.eyesless.needmypuppy.Presenter_aboutdog.java", "BodyUseAPI": [], "Fixed commit": "2c702d7d64f285dee7bb42d7f5a7424131a2992c", "Url": "https://api.github.com/repos/kalininaleksandrv/NeedMyPuppyRelease_v_0.1", "Date": "2017-08-22T10:00:16Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(current.getToken().equals(\")\"))) { in.pushBack(current); throw new Parser.ParseError(\"Expected closing parenthesis.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2264/buggy-version/src.Parser.ExpressionStream.java", "BodyUseAPI": ["Lexer.TokenStream.pushBack(Lexer.Token)"], "Fixed commit": "9eccab0d587b971d13d5940eff838cbd3d790961", "Url": "https://api.github.com/repos/giorgianb/FunctionRotator", "Date": "2016-12-31T15:33:23Z"},
{"Line": "=>762", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(this.steinerTree.containsVertex(link.getSource()))) { this.steinerTree.addVertex(link.getSource()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6334/buggy-version/karma-common.src.main.java.edu.isi.karma.modeling.alignment.Alignment.java", "BodyUseAPI": ["org.jgrapht.graph.DirectedWeightedMultigraph<edu.isi.karma.rep.alignment.Node, edu.isi.karma.rep.alignment.LabeledLink>.addVertex(link.getSource())", "edu.isi.karma.rep.alignment.LabeledLink.getSource()"], "Fixed commit": "4ad60047144840636354de3c166dc77f7d7f5072", "Url": "https://api.github.com/repos/usc-isi-i2/Web-Karma", "Date": "2015-07-15T00:09:28Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rpi.barpi.Data.barAct) != null) rpi.barpi.Data.barAct.drinkAdapter.notifyDataSetChanged();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8563/buggy-version/app.src.main.java.rpi.barpi.Data.java", "BodyUseAPI": [], "Fixed commit": "372ecd76227459c33e0c10cb64620b4a4fa24fc8", "Url": "https://api.github.com/repos/RPIBarPI/BarPI", "Date": "2017-04-20T02:17:40Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rpi.barpi.Data.barAct) != null) rpi.barpi.Data.barAct.eventAdapter.notifyDataSetChanged();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8563/buggy-version/app.src.main.java.rpi.barpi.Data.java", "BodyUseAPI": [], "Fixed commit": "372ecd76227459c33e0c10cb64620b4a4fa24fc8", "Url": "https://api.github.com/repos/RPIBarPI/BarPI", "Date": "2017-04-20T02:17:40Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rpi.barpi.Data.barAct) != null) rpi.barpi.Data.barAct.drinkAdapter.notifyDataSetChanged();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8563/buggy-version/app.src.main.java.rpi.barpi.Data.java", "BodyUseAPI": [], "Fixed commit": "372ecd76227459c33e0c10cb64620b4a4fa24fc8", "Url": "https://api.github.com/repos/RPIBarPI/BarPI", "Date": "2017-04-20T02:17:40Z"},
{"Line": "=>349", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.HONEYCOMB)) { task.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR); }else { task.execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1784/buggy-version/src.org.redPanda.ChatAdapter.java", "BodyUseAPI": [], "Fixed commit": "19df96fe09d750867a04cf82eecd303140a097b1", "Url": "https://api.github.com/repos/redPanda-project/android", "Date": "2014-04-23T20:56:26Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.openConnection()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(conn.getRequestMethod().equals(\"GET\"))) { conn.setDoOutput(true); try (java.io.DataOutputStream wr = new java.io.DataOutputStream(conn.getOutputStream())) { try { wr.write(cli.getString(\"data\").getBytes()); } catch (nohorjo.cli.InvalidCLIArgException e) { try { wr.write(java.nio.file.Files.readAllBytes(java.nio.file.Paths.get(cli.getString(\"file\")))); } catch (nohorjo.cli.InvalidCLIArgException e1) { throw new nohorjo.cli.InvalidCLIArgException(\"data or file not set\"); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7373/buggy-version/java.src.Wget.java", "BodyUseAPI": ["java.net.HttpURLConnection.setDoOutput(boolean)", "java.net.HttpURLConnection.getOutputStream()"], "Fixed commit": "5987ccf599ce1b41205fa65f52496a6c7293446e", "Url": "https://api.github.com/repos/nohorjo/Tools", "Date": "2017-03-29T15:02:54Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldValue.trim().isEmpty()) { return new java.lang.String[]{ }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6225/buggy-version/src.main.java.net.mindengine.blogix.db.readers.ObjectReader.java", "BodyUseAPI": [], "Fixed commit": "a33cc6efe32f7029ae285b353b6e6c4c384265e3", "Url": "https://api.github.com/repos/ishubin/blogix", "Date": "2013-09-29T09:21:00Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (spotifyError.hasErrorDetails()) { android.util.Log.v(com.tamzid.android.spotifystreamer.SearchActivityFragment.LOG_TAG, spotifyError.getErrorDetails().message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7076/buggy-version/app.src.main.java.com.tamzid.android.spotifystreamer.SearchActivityFragment.java", "BodyUseAPI": ["kaaes.spotify.webapi.android.SpotifyError.getErrorDetails()", "android.util.Log.v(java.lang.String,spotifyError.getErrorDetails().message)"], "Fixed commit": "c667beb957e4c4009d4e713dda23d35d8024a7f5", "Url": "https://api.github.com/repos/tamzidmd/Spotify_Streamer", "Date": "2015-06-18T00:23:37Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callback) != null) callback.onDeviceResolved(deviceJSON);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2622/buggy-version/src.android.sm.app.plugins.finddevice.java", "BodyUseAPI": [], "Fixed commit": "0110ccea9f9d252e4516e229272a727efa4b9f6a", "Url": "https://api.github.com/repos/vidding/Cordova-Plugin-TI-WIFI", "Date": "2015-11-19T04:18:25Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((callbackContext) != null) { callbackContext.success(deviceJSON); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2622/buggy-version/src.android.sm.app.plugins.finddevice.java", "BodyUseAPI": [], "Fixed commit": "0110ccea9f9d252e4516e229272a727efa4b9f6a", "Url": "https://api.github.com/repos/vidding/Cordova-Plugin-TI-WIFI", "Date": "2015-11-19T04:18:25Z"},
{"Line": "=>3657", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clip) == null) { clip = new com.codename1.impl.ios.IOSImplementation.ClipShape(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8994/buggy-version/Ports.iOSPort.src.com.codename1.impl.ios.IOSImplementation.java", "BodyUseAPI": [], "Fixed commit": "a87f3f8cbd29f6008c4530d581524d5a1eddc4c0", "Url": "https://api.github.com/repos/codenameone/CodenameOne", "Date": "2017-02-02T16:54:29Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (tasks == null) { throw stateException(\"CreateMultipleBlockVolumes.illegalState.invalid\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/806/buggy-version/vipr-portal.com.iwave.isa.content.src.java.com.emc.sa.service.vipr.block.tasks.CreateMultipleBlockVolumes.java", "BodyUseAPI": [], "Fixed commit": "5fb7e76de6e2941013bfe60cd8017ae929e7e2b6", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-07T19:07:16Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isAdobePDFMatch) { return java.lang.Boolean.FALSE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7328/buggy-version/model-implementation.src.main.java.org.verapdf.model.tools.XMPChecker.java", "BodyUseAPI": [], "Fixed commit": "f2f14db7b8b83fcb83a1dbd200ddc8299687ef37", "Url": "https://api.github.com/repos/BezrukovM/veraPDF-library", "Date": "2015-11-05T15:42:21Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isDublinCoreMatch) { return java.lang.Boolean.FALSE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7328/buggy-version/model-implementation.src.main.java.org.verapdf.model.tools.XMPChecker.java", "BodyUseAPI": [], "Fixed commit": "f2f14db7b8b83fcb83a1dbd200ddc8299687ef37", "Url": "https://api.github.com/repos/BezrukovM/veraPDF-library", "Date": "2015-11-05T15:42:21Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.isBlank(html)) && (org.apache.commons.lang3.StringUtils.isBlank(plain))) { throw new java.lang.IllegalArgumentException(\"Both HTML and plain contents cannot be blank.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8967/buggy-version/src.java.in.co.zybotech.mailer.bulk.Mailer.java", "BodyUseAPI": [], "Fixed commit": "ab3f5cbca8babae27e58fd29d5f867cb2b2381e7", "Url": "https://api.github.com/repos/arunpjohny/zyb-bulk-mailer", "Date": "2012-06-15T09:54:35Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (showNameTo == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2950/buggy-version/src.main.java.teammates.logic.core.FeedbackResponseCommentsLogic.java", "BodyUseAPI": [], "Fixed commit": "801eba15737d2b3de3e17896bd06bd2ac5542bb1", "Url": "https://api.github.com/repos/TEAMMATES/repo", "Date": "2014-07-12T10:16:56Z"},
{"Line": "=>1590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pms.service.service.impl.PurchaseContractServiceImpl.findOne(ApiConstants.MONGO_ID,java.lang.Object,DBBean.SUPPLIER)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (suppier != null) { suppier.remove(ApiConstants.MONGO_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3481/buggy-version/service.src.main.java.com.pms.service.service.impl.PurchaseContractServiceImpl.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.remove(ApiConstants.MONGO_ID)"], "Fixed commit": "22282c9d190bd3e68b3570542475fada843ca4a1", "Url": "https://api.github.com/repos/antme/pms", "Date": "2013-12-20T05:13:51Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 22) { view.setBackground(view.getContext().getResources().getDrawable(R.drawable.border_default, null)); }else { view.setBackground(view.getContext().getResources().getDrawable(R.drawable.border_default)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2138/buggy-version/main.java.net.vwzq.cloneuid.Utils.java", "BodyUseAPI": [], "Fixed commit": "bd09b75c484990e104be5fccd8f36223a12a5922", "Url": "https://api.github.com/repos/cgvwzq/cloneuid", "Date": "2015-04-07T17:01:11Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.printProducts) == null) { this.printProducts = new java.util.ArrayList<com.kindred.kindredprints_android_sdk.data.PrintProduct>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1734/buggy-version/KindredPrints-Android-SDK.KindredPrints-Android-SDK.src.com.kindred.kindredprints_android_sdk.data.CartObject.java", "BodyUseAPI": [], "Fixed commit": "b14d5f2cd82570f26051f521b5380d39d5002c4d", "Url": "https://api.github.com/repos/KindredPrints/KindredPrints-Android", "Date": "2014-04-05T03:36:38Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (clearHierarchies) { view.clearStore(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5151/buggy-version/ui.de-lib.src.main.java.org.iplantc.de.admin.desktop.client.ontologies.presenter.OntologiesPresenterImpl.java", "BodyUseAPI": [], "Fixed commit": "6b101f02a93b98074777e26bde6c3f51c80fbf1c", "Url": "https://api.github.com/repos/ash3rz/DE", "Date": "2016-06-10T23:58:14Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((inliers.rows()) == 0) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3761/buggy-version/src.main.java.com.github.rosjava_catkin_package_a.ARLocROS.ComputePose.java", "BodyUseAPI": [], "Fixed commit": "d75e2e94297aa723e33fc1e6786e40fc4868a4db", "Url": "https://api.github.com/repos/mhct/ARLocROS", "Date": "2016-06-29T12:54:07Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(resp.isEmpty())) { android.widget.Toast.makeText(cuestionarioActivity, resp, Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4999/buggy-version/Release.ArquitecturaRifaMobile.app.src.main.java.arqrifa.org.arquitecturarifamobile.layout.CuestionarioActivity.java", "BodyUseAPI": ["android.widget.Toast.makeText(cuestionarioActivity, resp, Toast.LENGTH_SHORT).show()", "android.widget.Toast.makeText(arqrifa.org.arquitecturarifamobile.layout.CuestionarioActivity,java.lang.String,Toast.LENGTH_SHORT)"], "Fixed commit": "17f78af2aa9e8e16de82f140cb2ffa37ba5fc7b3", "Url": "https://api.github.com/repos/scaroni92/arqrifa", "Date": "2017-07-06T07:51:12Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reunion.isVotacion()) { new arqrifa.org.arquitecturarifamobile.layout.EncuestaActivity.VerificarVotacionTask(this).execute(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4999/buggy-version/Release.ArquitecturaRifaMobile.app.src.main.java.arqrifa.org.arquitecturarifamobile.layout.EncuestaActivity.java", "BodyUseAPI": [], "Fixed commit": "17f78af2aa9e8e16de82f140cb2ffa37ba5fc7b3", "Url": "https://api.github.com/repos/scaroni92/arqrifa", "Date": "2017-07-06T07:51:12Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.equals(\"String[]\")) { return value.split(\",\"); }else if (type.equals(\"boolean\")) { return java.lang.Boolean.valueOf(value).booleanValue(); }else if (type.equals(\"int\")) { return java.lang.Integer.valueOf(value).intValue(); }else if (type.equals(\"long\")) { return java.lang.Long.valueOf(value); }else if (type.equals(\"double\")) { return java.lang.Double.valueOf(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7349/buggy-version/modules.citrus-core.src.main.java.com.consol.citrus.config.xml.JavaActionParser.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "cca7965d1413af0aa3018dd3977c3ac037f58d44", "Url": "https://api.github.com/repos/christophd/citrus", "Date": "2012-12-29T16:58:07Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((participant.getId()) == null) { attributeValueModel = new org.apache.wicket.model.PropertyModel<org.obiba.onyx.util.data.Data>(getConfiguredAttributeValue(attribute, participant), \"data\"); }else { attributeValueModel = new org.apache.wicket.model.PropertyModel<org.obiba.onyx.util.data.Data>(new org.obiba.wicket.markup.html.table.DetachableEntityModel(queryService, getConfiguredAttributeValue(attribute, participant)), \"data\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2936/buggy-version/onyx-webapp.src.main.java.org.obiba.onyx.webapp.participant.panel.EditParticipantPanel.java", "BodyUseAPI": ["org.obiba.onyx.webapp.participant.panel.EditParticipantPanel.EditParticipantPanelAttributeGroupFragment.getConfiguredAttributeValue(org.obiba.onyx.core.domain.participant.ParticipantAttribute,org.obiba.onyx.core.domain.participant.Participant)", "org.obiba.onyx.webapp.participant.panel.EditParticipantPanel.EditParticipantPanelAttributeGroupFragment.getConfiguredAttributeValue(org.obiba.onyx.core.domain.participant.ParticipantAttribute,org.obiba.onyx.core.domain.participant.Participant)"], "Fixed commit": "26bcf3d1373b84e01de849e3c978f6ea961611bb", "Url": "https://api.github.com/repos/inglis-dl/onyx", "Date": "2013-08-28T20:24:14Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (maybeOres == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8548/buggy-version/src.main.java.com.lothrazar.powerinventory.net.UncButtonPacket.java", "BodyUseAPI": [], "Fixed commit": "a8da850abbb5816601cbe98b92feaf54e01e372c", "Url": "https://api.github.com/repos/LothrazarMinecraftMods/OverpoweredInventory", "Date": "2015-10-11T20:21:36Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (value == null) value = request.getAttribute(variable.getParamName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3155/buggy-version/src.main.java.com.github.andyshaox.servlet.mapping.BindingParameter.java", "BodyUseAPI": [], "Fixed commit": "45542f72e49cc1db43ea33f638f54c420ce8deea", "Url": "https://api.github.com/repos/Andy-Shao/GearEE", "Date": "2016-01-27T03:51:17Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(myWorld.contains(0))) && (!(myWorld.contains(1)))) myWorld.setGameOver(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5045/buggy-version/Game.src.GUI.java", "BodyUseAPI": ["World.setGameOver(boolean)"], "Fixed commit": "12f8df48c8ba76bd5f4a6c5b31ccee0d1272965b", "Url": "https://api.github.com/repos/ericwxz/APCSgame", "Date": "2017-06-01T16:00:32Z"},
{"Line": "=>583", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["voldemort.utils.CmdUtils.valueOf(joptsimple.OptionSet,java.lang.String,int)", "adminClient.metadataMgmtOps.getRemoteMetadata(java.lang.Integer,MetadataStore.STORES_KEY)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (voldemort.VoldemortAdminTool.confirmMetadataUpdate(nodeId, adminClient, storesXML.getValue())) { voldemort.VoldemortAdminTool.executeSetMetadata(nodeId, adminClient, MetadataStore.STORES_KEY, mapper.writeStoreList(newStoreDefs)); if (nodeId >= 0) { java.lang.System.err.println(((\"WARNING: Metadata version update of stores goes to all servers, \" + \"although this set-metadata oprations only goes to node \") + nodeId)); } voldemort.VoldemortAdminTool.executeUpdateMetadataVersionsOnStores(adminClient, oldStoreDefs, newStoreDefs); }else { java.lang.System.out.println(\"New metadata has not been set\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3022/buggy-version/src.java.voldemort.VoldemortAdminTool.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)", "voldemort.VoldemortAdminTool.executeSetMetadata(java.lang.Integer,voldemort.client.protocol.admin.AdminClient,MetadataStore.STORES_KEY,mapper.writeStoreList(newStoreDefs))", "voldemort.VoldemortAdminTool.executeUpdateMetadataVersionsOnStores(voldemort.client.protocol.admin.AdminClient,java.util.List<voldemort.store.StoreDefinition>,java.util.List<voldemort.store.StoreDefinition>)"], "Fixed commit": "ff4f0308b73a77bc98bd01c2c193fced8be885a1", "Url": "https://api.github.com/repos/voldemort/voldemort", "Date": "2014-02-11T01:35:15Z"},
{"Line": "=>1144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (projectInfoPath.exists()) { java.io.BufferedReader bufferedReader = new java.io.BufferedReader(new java.io.FileReader(projectInfoPath)); com.google.gson.Gson gson = new com.google.gson.Gson(); java.lang.reflect.Type type = new com.google.gson.reflect.TypeToken<com.photon.phresco.commons.model.ProjectInfo>() {}.getType(); Projectinfo = gson.fromJson(bufferedReader, type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6708/buggy-version/plugin-commons.src.main.java.com.photon.phresco.plugin.commons.PluginUtils.java", "BodyUseAPI": [], "Fixed commit": "f9688d45f9fa9c48a807eab4ee594db4db9a3c76", "Url": "https://api.github.com/repos/photon-infotech/plugins", "Date": "2014-01-23T11:20:17Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i <= (otherTrace.size())) { microbat.model.trace.TraceNode node = otherTrace.getExectionList().get((i - 1)); if (node.isConditional()) { if (node.getControlScope().containLocation(correspondingLocation)) { return node; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7264/buggy-version/tregression.src.main.tregression.RootCauseFinder.java", "BodyUseAPI": ["microbat.model.trace.Trace.getExectionList()", "otherTrace.getExectionList().get(int)"], "Fixed commit": "d90f0f55064304684a40262b42f0752d9f9c5636", "Url": "https://api.github.com/repos/llmhyy/tregression", "Date": "2017-08-15T03:30:01Z"},
{"Line": "=>465", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((downloadService.getPlayerState()) != (github.daneren2005.dsub.domain.PlayerState.PREPARING)) { downloadService.onSongCompleted(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4778/buggy-version/app.src.main.java.github.daneren2005.dsub.service.ChromeCastController.java", "BodyUseAPI": ["github.daneren2005.dsub.service.ChromeCastController.ConnectionCallbacks.2.onSongCompleted()"], "Fixed commit": "b7e728dc0788a23af2eecb9f5870c3c612aa50a7", "Url": "https://api.github.com/repos/daneren2005/Subsonic", "Date": "2016-10-22T01:13:59Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8456/buggy-version/src.main.java.com.mridang.uptime.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "6e6aa0e4ecaed7ed1ce2ee23a3b982d3f75b6eda", "Url": "https://api.github.com/repos/mridang/dashclock-uptime", "Date": "2015-03-29T09:12:34Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((auxString.length()) < 16) { if (i == 0) { displayName = displayName + (names[i]); }else { displayName = (displayName + \" \") + (names[i]); } }else { if (!nextRow) { displayName = (displayName + \"\\n\") + (names[i]); nextRow = true; }else { displayName = (displayName + \" \") + (names[i]); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1004/buggy-version/app.src.main.java.larc.ludiconprod.Adapters.InviteFriendsAdapter.java", "BodyUseAPI": [], "Fixed commit": "dd4bdb9f7b641baacedbcf331ff31d492e8a0358", "Url": "https://api.github.com/repos/CostianuRazvan/LudiconNew", "Date": "2017-11-23T19:24:21Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.nhb.common.predicate.Predicates.sqlPredicateThreadLocalBySQL.containsKey(sql))) { synchronized(com.nhb.common.predicate.Predicates.sqlPredicateThreadLocalBySQL) { if (!(com.nhb.common.predicate.Predicates.sqlPredicateThreadLocalBySQL.containsKey(sql))) { com.nhb.common.predicate.Predicates.sqlPredicateThreadLocalBySQL.put(sql, new com.nhb.common.predicate.sql.SqlPredicateThreadLocal(sql)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5291/buggy-version/NHBCommonPredicate.src.main.java.com.nhb.common.predicate.Predicates.java", "BodyUseAPI": ["java.util.Map<java.lang.String, com.nhb.common.predicate.sql.SqlPredicateThreadLocal>.put(java.lang.String,com.nhb.common.predicate.sql.SqlPredicateThreadLocal)", "java.util.Map<java.lang.String, com.nhb.common.predicate.sql.SqlPredicateThreadLocal>.containsKey(java.lang.String)"], "Fixed commit": "1b8eba56f7a909a54229d1f79bdeb95202dda640", "Url": "https://api.github.com/repos/bachden/nhb-common", "Date": "2017-06-08T04:51:39Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((s.length) > 1) { if (s[0].contains(\"REG\")) { if (findUser(s[1])) { java.lang.System.out.println(\"USER ALREADY EXISTS\"); returnString = \"UAE;\"; }else if ((s.length) > 2) { returnString = \"INP;\"; }else { if ((s[1].length()) < 32) { java.lang.System.out.println(((s[1]) + \" added to registered users list\")); users.add(s[1].toLowerCase()); returnString = \"ROK;\"; }else returnString = \"UNR;\"; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5970/buggy-version/src.Protocol.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.toLowerCase()", "java.lang.String.contains(java.lang.String)", "Protocol.findUser(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "668c0660a9810c095e86f8ec804d21ce1eb8609d", "Url": "https://api.github.com/repos/Andrewthedev/UDPServerClientJava", "Date": "2015-12-02T06:23:02Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((s[1].length()) < 32) { java.lang.System.out.println(((s[1]) + \" added to registered users list\")); users.add(s[1].toLowerCase()); returnString = \"ROK;\"; }else returnString = \"UNR;\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5970/buggy-version/src.Protocol.java", "BodyUseAPI": ["java.lang.String.toLowerCase()", "java.io.PrintStream.println(java.lang.String)", "java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "668c0660a9810c095e86f8ec804d21ce1eb8609d", "Url": "https://api.github.com/repos/Andrewthedev/UDPServerClientJava", "Date": "2015-12-02T06:23:02Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sp_store.getBoolean(com.darshancomputing.BatteryIndicatorPro.BatteryIndicatorService.KEY_DISABLE_LOCKING, false)) setEnablednessOfKeyguard(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5861/buggy-version/src.com.darshancomputing.BatteryIndicatorPro.BatteryIndicatorService.java", "BodyUseAPI": [], "Fixed commit": "f241923de3ac8a13a74a2d2fcdbbed0bdd714d1b", "Url": "https://api.github.com/repos/darshan-/Battery-Indicator", "Date": "2012-06-27T09:20:07Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adviceMethod) != null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1529/buggy-version/main.src.mockit.internal.mockups.MockMethods.java", "BodyUseAPI": [], "Fixed commit": "1664e3ba5cfc86cbeec516d1bd2016aad9d3f325", "Url": "https://api.github.com/repos/jmockit/jmockit1", "Date": "2015-05-08T12:56:27Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exp == (-1)) { number = -number; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3007/buggy-version/src.main.java.water.parser.CsvParser.java", "BodyUseAPI": [], "Fixed commit": "92a1b00d3e1d08cd37801bd2eb5a383dfb32c240", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2014-08-08T00:58:17Z"},
{"Line": "=>2488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((player.leftMousePressed) && (!(player.maintaining))) && (!(player.dead))) if ((((player.abilityTryingToRepetitivelyUse) == (-1)) || (!((player.abilities.get(player.abilityTryingToRepetitivelyUse)) instanceof abilities.Punch))) || ((player.abilities.get(player.abilityTryingToRepetitivelyUse).cooldownLeft) <= 0)) { double angle = java.lang.Math.atan2(((my) - (player.y)), ((mx) - (player.x))); player.rotate(angle, globalDeltaTime); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/17/buggy-version/src.mainClasses.MAIN.java", "BodyUseAPI": ["player.abilities.get(player.abilityTryingToRepetitivelyUse)", "mainClasses.Player.rotate(double,double)", "player.abilities.get(player.abilityTryingToRepetitivelyUse)", "java.lang.Math.atan2(((my) - (player.y)),((mx) - (player.x)))"], "Fixed commit": "e5e79ad62ed7a6107ee85993c09c1560ac6090cc", "Url": "https://api.github.com/repos/itamarcu/Worm-Prototype", "Date": "2016-03-01T11:19:04Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.languagetool.tokenizers.de.GermanCompoundTokenizer.tokenize(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((compoundedWord.size()) > 1) { word = org.languagetool.tools.StringTools.uppercaseFirstChar(compoundedWord.get(((compoundedWord.size()) - 1))); }else { word = compoundedWord.get(((compoundedWord.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/985/buggy-version/languagetool-language-modules.de.src.main.java.org.languagetool.tagging.de.GermanTagger.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.get(int)", "java.util.List<java.lang.String>.size()", "org.languagetool.tools.StringTools.uppercaseFirstChar(java.lang.String)"], "Fixed commit": "524c062c10f31f98432ea613a23bd57f54d9f132", "Url": "https://api.github.com/repos/nopepper/languagetool", "Date": "2017-09-18T16:55:02Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char)", "java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((indexOfOpeningParantheses + 1) < (urlPart.length())) { extractedUrl = urlPart.substring((indexOfOpeningParantheses + 1)).trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6862/buggy-version/wffweb.src.main.java.com.webfirmframework.wffweb.css.UrlCss3Value.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.substring(int)"], "Fixed commit": "b34295dee739670ceaaf6c8b7a0c940005f33382", "Url": "https://api.github.com/repos/webfirmframework/wff", "Date": "2017-09-19T00:57:00Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (fail < 2) { java.lang.System.out.println((\"Atempts remaining before shutdown \" + (3 - fail))); java.lang.System.out.println(\"enter a to retry\"); reader.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1730/buggy-version/Atm.java", "BodyUseAPI": [], "Fixed commit": "e5c5a3d9ca86f735bcccc92568a2ef495f60af5e", "Url": "https://api.github.com/repos/NickPfeufer/atm", "Date": "2013-10-29T13:49:38Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tabs.getTabCount()) == 1) { java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6618/buggy-version/src.gui.MainFrame.java", "BodyUseAPI": [], "Fixed commit": "dce2b0ff78b9d1c17af59d0c120332c937d9aa8f", "Url": "https://api.github.com/repos/jjrubio/JBrowser", "Date": "2013-08-18T03:11:34Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getResponseCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (responseCode == 403) { throw new com.ppm.integration.agilesdk.connector.octane.client.OctaneClientException(\"OCTANE_API\", \"ERROR_AUTHENTICATION_FAILED\"); }else { java.io.InputStream inputStream = con.getErrorStream(); if (inputStream == null) { inputStream = con.getInputStream(); } in = new java.io.BufferedReader(new java.io.InputStreamReader(inputStream, \"UTF-8\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6499/buggy-version/src.com.ppm.integration.agilesdk.connector.octane.client.ClientPublicAPI.java", "BodyUseAPI": [], "Fixed commit": "757b5d9281581fe18860e11d524db5fbd10d68c3", "Url": "https://api.github.com/repos/MicroFocus/ppm-octane-connector", "Date": "2017-04-13T07:53:00Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (setup != null) this.addChild2(setup);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7566/buggy-version/src.org.tekkotsu.api.NodeClass.java", "BodyUseAPI": ["org.tekkotsu.api.NodeClass.addChild2(org.tekkotsu.api.SetupMachine)"], "Fixed commit": "39c3562e10597a8f050ae56b217d19419855f442", "Url": "https://api.github.com/repos/toledoalbert/ComposerUIAPI", "Date": "2013-08-08T07:01:54Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (source.hasTop()) { key = source.getTopKey(); }else { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1524/buggy-version/extensions.datastores.accumulo.src.main.java.mil.nga.giat.geowave.datastore.accumulo.query.QueryFilterIterator.java", "BodyUseAPI": ["org.apache.accumulo.core.iterators.SortedKeyValueIterator<org.apache.accumulo.core.data.Key, org.apache.accumulo.core.data.Value>.getTopKey()"], "Fixed commit": "79f9177c4fa8a628ce3fd281c7ffb1559dc743f5", "Url": "https://api.github.com/repos/locationtech/geowave", "Date": "2016-07-10T17:32:36Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2081/buggy-version/core.src.main.java.org.bitcoinj.script.ScriptChunk.java", "BodyUseAPI": [], "Fixed commit": "f7c35df9f4f16a85593b2833dd62cd16607e412d", "Url": "https://api.github.com/repos/bitcoinj/bitcoinj", "Date": "2014-11-14T12:58:46Z"},
{"Line": "=>309", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (player != null) { newres = new com.bekvon.bukkit.residence.protection.ClaimedResidence(player.getName(), perms.getWorld(), this); newres.addArea(player, newArea, name, resadmin); }else { newres = new com.bekvon.bukkit.residence.protection.ClaimedResidence(\"Server Land\", perms.getWorld(), this); newres.addArea(newArea, name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7387/buggy-version/src.com.bekvon.bukkit.residence.protection.ClaimedResidence.java", "BodyUseAPI": ["org.bukkit.entity.Player.getName()", "com.bekvon.bukkit.residence.protection.ClaimedResidence.addArea(org.bukkit.entity.Player,com.bekvon.bukkit.residence.protection.CuboidArea,java.lang.String,boolean)"], "Fixed commit": "1e86763531f9db25c0f60c0616b7975058a41a8a", "Url": "https://api.github.com/repos/bekvon/Residence", "Date": "2012-08-24T17:46:43Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((jArray.length()) > 0) { java.lang.String atZeroElementId = jArray.getJSONObject(0).getString(\"id\"); if (!(atZeroElementId.equals(\"-1\"))) { for (int i = 0; i < (jArray.length()); i++) { resultList.add(new VarnaTraffic.Helpers.AutoCompleteListItem(jArray.getJSONObject(i).getInt(\"id\"), jArray.getJSONObject(i).getString(\"text\"))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5163/buggy-version/src.com.varnatraffic.VarnaTraffic.BusStopsAutoCompleteAdapter.java", "BodyUseAPI": ["org.json.JSONArray.length()", "jArray.getJSONObject(i).getString(java.lang.String)", "jArray.getJSONObject(0).getString(java.lang.String)", "org.json.JSONArray.getJSONObject(int)", "jArray.getJSONObject(i).getInt(java.lang.String)", "org.json.JSONArray.getJSONObject(int)", "org.json.JSONArray.getJSONObject(int)", "java.util.ArrayList<VarnaTraffic.Helpers.AutoCompleteListItem>.add(VarnaTraffic.Helpers.AutoCompleteListItem)"], "Fixed commit": "125cd4ce0cf9a4952e217db3f042a563d7af2020", "Url": "https://api.github.com/repos/koshutanski/VarnaTrafficAndroid", "Date": "2014-05-13T19:43:05Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(actionList.isEmpty())) { for (simulator.Action a : actionList) { if (minimumElapsedTime < (a.getRemainingTime())) minimumElapsedTime = a.getRemainingTime(); } for (simulator.Action a : actionList) { a.getPerformer().normalAction(minimumElapsedTime); } }else minimumElapsedTime = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4717/buggy-version/src.main.java.simulator.Simulator.java", "BodyUseAPI": [], "Fixed commit": "82f9be768326f31d32966d22499b95985049e813", "Url": "https://api.github.com/repos/SESoS/SIMVA-SoS", "Date": "2016-08-24T13:03:15Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((m.getBase64String()) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8939/buggy-version/src.main.java.com.aventstack.extentreports.mediastorage.HttpMediaManager.java", "BodyUseAPI": [], "Fixed commit": "5e0f152827eda62d0113b09151ed1a55ffd5c300", "Url": "https://api.github.com/repos/anshooarora/extentreports-java", "Date": "2017-09-11T15:02:59Z"},
{"Line": "=>598", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (addToUnit) { unit.resetPilotAndEntity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4977/buggy-version/MekHQ.src.mekhq.Utilities.java", "BodyUseAPI": [], "Fixed commit": "f83ffad6ebdb87161b7c33482ba17d2135936a98", "Url": "https://api.github.com/repos/Akjosch/mekhq", "Date": "2015-09-09T02:49:36Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dim != 0) { ((org.spongepowered.api.world.storage.WorldProperties) (worldInfo)).setGeneratorType(GeneratorTypes.DEFAULT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3752/buggy-version/src.main.java.org.spongepowered.common.mixin.core.server.MixinMinecraftServer.java", "BodyUseAPI": [], "Fixed commit": "62aadadc01ad43c33e0af15fb4107e6ee29cc238", "Url": "https://api.github.com/repos/DDoS/SpongeCommon", "Date": "2015-07-10T21:01:17Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.newdawn.slick.GameContainer.getInput()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (input.isKeyDown(Input.KEY_1)) { if ((input.isKeyDown(Input.KEY_LSHIFT)) || (input.isKeyDown(Input.KEY_RSHIFT))) { regenerateAllPedestrians(gc); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4574/buggy-version/src.com.jefflunt.pedestrians.PedestrianSim.java", "BodyUseAPI": ["org.newdawn.slick.Input.isKeyDown(Input.KEY_RSHIFT)", "org.newdawn.slick.Input.isKeyDown(Input.KEY_LSHIFT)"], "Fixed commit": "1de212d41072687d5f1352809ecaa3b69d6440b7", "Url": "https://api.github.com/repos/jefflunt/pedestrians", "Date": "2011-07-16T20:56:40Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, com.labs.okey.freeride.model.AdvertisedRide>.get(device.deviceName)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (advRide != null) { com.labs.okey.freeride.model.WifiP2pDeviceUser deviceUser = new com.labs.okey.freeride.model.WifiP2pDeviceUser(device); java.lang.String userId = advRide.getUserId(); deviceUser.setUserId(userId); java.lang.String rideCode = advRide.getRideCode(); deviceUser.setRideCode(rideCode); peersChangedListener.add(deviceUser); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6912/buggy-version/app.src.main.java.com.labs.okey.freeride.utils.WiFiUtil.java", "BodyUseAPI": ["com.labs.okey.freeride.model.AdvertisedRide.getUserId()", "com.labs.okey.freeride.model.AdvertisedRide.getRideCode()"], "Fixed commit": "5d1bc3ce2f12d905d258363a51e53e654b1e0661", "Url": "https://api.github.com/repos/olegkleiman/FreeRide", "Date": "2015-09-11T11:59:35Z"},
{"Line": "=>317", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["view.controller.SpielermanagerController.getSelectedFaehigkeit()", "javafx.scene.control.TextField.getText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(newName.equals(selectedFaehigkeit.getName_()))) { selectedFaehigkeit.setName_(newName); if (selectedFaehigkeit == (entryForNewFaehigkeit_)) { selectedSpieler.addFaehigkeit(selectedFaehigkeit); } updateFaehigkeitenList(selectedFaehigkeit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4039/buggy-version/Source.src.view.controller.SpielermanagerController.java", "BodyUseAPI": ["model.Faehigkeiten.setName_(java.lang.String)", "view.controller.SpielermanagerController.updateFaehigkeitenList(model.Faehigkeiten)", "model.Spieler.addFaehigkeit(model.Faehigkeiten)"], "Fixed commit": "c89ab964f738e311425ec85a11cb49d6262da4e1", "Url": "https://api.github.com/repos/SWT-Projektgruppe-2015/Rollenspielmanager", "Date": "2015-06-05T07:07:11Z"},
{"Line": "=>344", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(e.hasItem())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4075/buggy-version/src.main.java.tk.martijn_heil.kingdomkits.modules.IllegalActionsModule.java", "BodyUseAPI": [], "Fixed commit": "e3880e3b24c093207ef744b67893d7102cf4d3d1", "Url": "https://api.github.com/repos/martijn-heil/KingdomKits", "Date": "2016-05-22T12:28:07Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trimLevel == (JOJSConstants.TRIM_ALL)) { answer = answer.trim(); output = output.trim(); }else if (trimLevel == (JOJSConstants.TRIM_LAST)) { answer = answer.replaceFirst(\"\\\\s+$\", \"\"); output = output.replaceFirst(\"\\\\s+$\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8004/buggy-version/src.tw.edu.ncku.csie.selab.jojs.ExecutionTask.java", "BodyUseAPI": [], "Fixed commit": "4e0684933bc09ac5602c86002ab876b4417b8e93", "Url": "https://api.github.com/repos/smilecatx3/Java-Online-Judge-System", "Date": "2016-04-19T04:33:04Z"},
{"Line": "=>1064", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (calculatedtimeZoneOffSet != (-1)) { timeZoneOffSet = calculatedtimeZoneOffSet; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/987/buggy-version/modules.ballerina-native.src.main.java.org.ballerinalang.nativeimpl.actions.data.sql.client.SQLDatasourceUtils.java", "BodyUseAPI": [], "Fixed commit": "d7ce57858fe7352020b66f9889f0d360749290ec", "Url": "https://api.github.com/repos/kaviththiranga/ballerina-1", "Date": "2017-06-22T05:42:35Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(type.equals(\"Object\"))) { addLocalVariableType(index, type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6622/buggy-version/src.com.sdc.abstractLanguage.AbstractFrame.java", "BodyUseAPI": ["com.sdc.abstractLanguage.AbstractFrame.addLocalVariableType(int,java.lang.String)"], "Fixed commit": "82b0e41422be1eebfaf3861059318c0dc2fc5372", "Url": "https://api.github.com/repos/vapolyakov/djlab", "Date": "2013-07-22T11:34:14Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((out) != null) { byte[] bytes = ((java.io.ByteArrayOutputStream) (out)).toByteArray(); data = com.sproutigy.commons.binary.Binary.from(bytes); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2064/buggy-version/src.main.java.com.sproutigy.commons.binary.BinaryBuilder.java", "BodyUseAPI": [], "Fixed commit": "fdedbf857dc6a3c8cf2d80c20752c604dd7bc66f", "Url": "https://api.github.com/repos/Sproutigy/Java-Commons-Binary", "Date": "2017-09-05T16:31:53Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (element.trim().isEmpty()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7603/buggy-version/mcc.src.main.java.com.mcode.mamoi.mcc.mcc.java", "BodyUseAPI": [], "Fixed commit": "4aa3c7dab8df2c7d836fda8711e1a8006b35ee3a", "Url": "https://api.github.com/repos/bahboom/mamoi", "Date": "2013-05-18T20:47:02Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((bus > 127) || (bus < (-128))) { throw new java.lang.IllegalArgumentException((\"bus must only be one nibble, given \" + bus)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8296/buggy-version/libISOBlue.src.org.isoblue.isoblue.ISOBlueCommand.java", "BodyUseAPI": [], "Fixed commit": "46bb388efdc792a702b608a042717ef50b65f828", "Url": "https://api.github.com/repos/awlayton/isoblue-android", "Date": "2014-04-22T22:45:41Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((function.getFunctionPars()) != null) { for (org.eclipse.photran.internal.core.parser.ASTFunctionParNode param : function.getFunctionPars()) { for (org.eclipse.photran.internal.core.analysis.binding.Definition def : param.getVariableName().resolveBinding()) { neededDeclarations.add(def.getCanonicalizedName()); parameters.add(def.getCanonicalizedName()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3140/buggy-version/org.eclipse.photran.core.vpg.src.org.eclipse.photran.internal.core.refactoring.IntroduceInterfaceRefactoring.java", "BodyUseAPI": ["org.eclipse.photran.internal.core.parser.ASTFunctionStmtNode.getFunctionPars()"], "Fixed commit": "79c86bbecfe2fac8243413c0abeb172334724c22", "Url": "https://api.github.com/repos/SeanHurley/photran", "Date": "2012-12-20T05:23:43Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((subroutine.getSubroutinePars()) != null) { for (org.eclipse.photran.internal.core.parser.ASTSubroutineParNode param : subroutine.getSubroutinePars()) { for (org.eclipse.photran.internal.core.analysis.binding.Definition def : param.getVariableName().resolveBinding()) { neededDeclarations.add(def.getCanonicalizedName()); parameters.add(def.getCanonicalizedName()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3140/buggy-version/org.eclipse.photran.core.vpg.src.org.eclipse.photran.internal.core.refactoring.IntroduceInterfaceRefactoring.java", "BodyUseAPI": ["org.eclipse.photran.internal.core.parser.ASTSubroutineStmtNode.getSubroutinePars()"], "Fixed commit": "79c86bbecfe2fac8243413c0abeb172334724c22", "Url": "https://api.github.com/repos/SeanHurley/photran", "Date": "2012-12-20T05:23:43Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.egordorichev.lasttry.Globals.getWorld().distToHorizontalCollision(org.egordorichev.lasttry.util.Rectangle,this.velocity.x)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (distToCollision != 0) { this.velocity.x = distToCollision - offset; }else { this.velocity.x = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3767/buggy-version/core.src.org.egordorichev.lasttry.entity.components.PhysicsComponent.java", "BodyUseAPI": [], "Fixed commit": "c959c71515edebd53cf32bd47a750b6476f1153c", "Url": "https://api.github.com/repos/Col-E/LastTry", "Date": "2017-05-26T04:37:04Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rpcConfig) == null) { rpcConfig = io.jboot.Jboot.config(io.jboot.core.rpc.JbootrpcConfig.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8590/buggy-version/src.main.java.io.jboot.Jboot.java", "BodyUseAPI": [], "Fixed commit": "e0e28db0fe4f2a4cfa15499f0370f2289c246b80", "Url": "https://api.github.com/repos/yangfuhai/jboot", "Date": "2017-08-09T09:36:20Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errorCount) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5392/buggy-version/core.src.main.java.org.glowroot.collector.AggregateBuilder.java", "BodyUseAPI": [], "Fixed commit": "d0439e81b1db8796df141dc44288c60d17c8c3dd", "Url": "https://api.github.com/repos/trask/glowroot", "Date": "2015-04-12T23:41:42Z"},
{"Line": "=>392", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((model) != null) { model.updateRobotPosition(robot.getIdentifier(), newPose); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6536/buggy-version/robowars_server.src.robowars.server.controller.GameController.java", "BodyUseAPI": [], "Fixed commit": "5cf2257794b5362b131901f5f5af5e554852dc03", "Url": "https://api.github.com/repos/alexcraig/RoboWars", "Date": "2011-03-07T16:32:18Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.amplitude.api.AmplitudeClient.getPreviousSessionId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (previousSessionId >= 0) { sessionId = previousSessionId; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8031/buggy-version/src.com.amplitude.api.AmplitudeClient.java", "BodyUseAPI": [], "Fixed commit": "41ece08d7c2afd926b35ecd0c73919473ef35d4c", "Url": "https://api.github.com/repos/friederbluemle/Amplitude-Android", "Date": "2015-10-03T06:30:10Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sheepdog.g1.Strategy.strategySteps[stepsIter])) { sheepdog.g1.Strategy.strategySteps[stepsIter] = true; (stepsIter)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3474/buggy-version/sheepdog.g1.Strategy.java", "BodyUseAPI": [], "Fixed commit": "addf308463d17027ace39937fd119ffd7cd11b91", "Url": "https://api.github.com/repos/TehApple/sheepdog", "Date": "2013-11-17T19:09:37Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sheepdog.g1.Strategy.strategySteps[stepsIter])) { sheepdog.g1.Strategy.strategySteps[stepsIter] = true; (stepsIter)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3474/buggy-version/sheepdog.g1.Strategy.java", "BodyUseAPI": [], "Fixed commit": "addf308463d17027ace39937fd119ffd7cd11b91", "Url": "https://api.github.com/repos/TehApple/sheepdog", "Date": "2013-11-17T19:09:37Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sheepdog.g1.Strategy.strategySteps[stepsIter])) { sheepdog.g1.Strategy.strategySteps[stepsIter] = true; (stepsIter)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3474/buggy-version/sheepdog.g1.Strategy.java", "BodyUseAPI": [], "Fixed commit": "addf308463d17027ace39937fd119ffd7cd11b91", "Url": "https://api.github.com/repos/TehApple/sheepdog", "Date": "2013-11-17T19:09:37Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sheepdog.g1.Strategy.strategySteps[stepsIter])) { sheepdog.g1.Strategy.strategySteps[stepsIter] = true; (stepsIter)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3474/buggy-version/sheepdog.g1.Strategy.java", "BodyUseAPI": [], "Fixed commit": "addf308463d17027ace39937fd119ffd7cd11b91", "Url": "https://api.github.com/repos/TehApple/sheepdog", "Date": "2013-11-17T19:09:37Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sheepdog.g1.Strategy.strategySteps[stepsIter])) { sheepdog.g1.Strategy.strategySteps[stepsIter] = true; (stepsIter)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3474/buggy-version/sheepdog.g1.Strategy.java", "BodyUseAPI": [], "Fixed commit": "addf308463d17027ace39937fd119ffd7cd11b91", "Url": "https://api.github.com/repos/TehApple/sheepdog", "Date": "2013-11-17T19:09:37Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sheepdog.g1.Strategy.strategySteps[stepsIter])) { sheepdog.g1.Strategy.strategySteps[stepsIter] = true; (stepsIter)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3474/buggy-version/sheepdog.g1.Strategy.java", "BodyUseAPI": [], "Fixed commit": "addf308463d17027ace39937fd119ffd7cd11b91", "Url": "https://api.github.com/repos/TehApple/sheepdog", "Date": "2013-11-17T19:09:37Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sheepdog.g1.Strategy.strategySteps[stepsIter])) { sheepdog.g1.Strategy.strategySteps[stepsIter] = true; (stepsIter)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3474/buggy-version/sheepdog.g1.Strategy.java", "BodyUseAPI": [], "Fixed commit": "addf308463d17027ace39937fd119ffd7cd11b91", "Url": "https://api.github.com/repos/TehApple/sheepdog", "Date": "2013-11-17T19:09:37Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.wpi.cs.wpisuitetcw.modules.planningpoker.view.overviews.CreateNewDeckPanel.getCards()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cards.size()) == 0) { isAllInputValid = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/575/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetcw.modules.planningpoker.view.overviews.CreateSessionPanel.java", "BodyUseAPI": [], "Fixed commit": "54b048b8a65ea9cd0310a9f27b6d8f5f85c01eef", "Url": "https://api.github.com/repos/Team-Combat-Wombat/wpi-suite-tcw", "Date": "2014-04-22T21:52:42Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mCurrentPlayingIndex) + 1) < (mCurrentList.size())) { (mCurrentPlayingIndex)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/224/buggy-version/src.org.odyssey.playbackservice.PlaybackService.java", "BodyUseAPI": [], "Fixed commit": "f24e93f5fdecc6dc5f0116f9f8cdac310ce60890", "Url": "https://api.github.com/repos/djselbeck/odyssey", "Date": "2014-02-03T20:06:22Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.daytracker.core.dao.UserDAO.findByUser(rep.getUserId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (userAccountOpt.isPresent()) { userAccount = userAccountOpt.get(); }else { userAccount = userDAO.create(new io.daytracker.core.models.UserAccount(rep.getUserId(), token)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7460/buggy-version/web.src.main.java.io.daytracker.resources.QuestionResource.java", "BodyUseAPI": ["java.util.Optional<io.daytracker.core.models.UserAccount>.get()"], "Fixed commit": "e329ee3aeec422fd87404236505a597aed2b7aeb", "Url": "https://api.github.com/repos/kareanra/checkin", "Date": "2017-04-19T23:27:52Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.rowDes) == ((this.row) + 1)) && (((this.colDes) == ((this.col) + 1)) || ((this.colDes) == ((this.col) - 1)))) { if ((board.getChessPosition(this.rowDes, this.colDes)) != null) { executeCaptureMove(board); }else if ((((board.getChessPosition(this.row, ((this.col) + 1))) instanceof chess.game.mvc.model.chessPieces.chessPiecesImp.Pawn) && ((this.colDes) == ((this.col) + 1))) || (((board.getChessPosition(this.row, ((this.col) - 1))) instanceof chess.game.mvc.model.chessPieces.chessPiecesImp.Pawn) && ((this.colDes) == ((this.col) - 1)))) { if ((this.colDes) == ((this.col) + 1)) { if ((!(board.getChessPosition(this.row, ((this.col) + 1)).getWhite())) && (((chess.game.mvc.model.chessPieces.chessPiecesImp.Pawn) (board.getChessPosition(((this.row) + 1), this.col))).getPassant())) { executeCheckedMove(board); board.setPosition(this.row, ((this.col) + 1), null); }else { throw new chess.game.mvc.model.genericGameFiles.GameError(\"Invalid move, try again. (Error 001)\"); } }else if ((this.colDes) == ((this.col) - 1)) { if ((!(board.getChessPosition(this.row, ((this.col) - 1)).getWhite())) && (((chess.game.mvc.model.chessPieces.chessPiecesImp.Pawn) (board.getChessPosition(this.row, ((this.col) - 1)))).getPassant())) { executeCheckedMove(board); board.setPosition(this.row, ((this.col) + 1), null); }else { throw new chess.game.mvc.model.genericGameFiles.GameError(\"Invalid move, try again. (Error 002)\"); } }else { throw new chess.game.mvc.model.genericGameFiles.GameError(\"Invalid move, try again. (Error 003)\"); } }else { throw new chess.game.mvc.model.genericGameFiles.GameError(\"Invalid move, try again. (Error 004)\"); } }else if (((this.col) == (this.colDes)) && (((this.row) + 1) == (this.rowDes))) { if ((board.getChessPosition(this.rowDes, this.colDes)) == null) { executeCheckedMove(board); }else { throw new chess.game.mvc.model.genericGameFiles.GameError(\"Invalid move, try again. (Error 005)\"); } }else if (((this.col) == (this.colDes)) && (((this.row) + 2) == (this.rowDes))) { if ((board.getChessPosition(this.rowDes, this.colDes)) != null) { throw new chess.game.mvc.model.genericGameFiles.GameError(\"Invalid move, the position is occupied, try again. (Error 006)\"); }else if (!(checkPiecesInbetween(this.row, this.col, this.rowDes, this.colDes))) { throw new chess.game.mvc.model.genericGameFiles.GameError(\"Invalid move, you can't skip through other pieces, try again. (Error 007)\"); }else { executeCheckedMove(board); ((chess.game.mvc.model.chessPieces.chessPiecesImp.Pawn) (board.getChessPosition(this.rowDes, this.colDes))).setPassant(true); } }else { throw new chess.game.mvc.model.genericGameFiles.GameError(\"Invalid move, try again. (Error 008)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7330/buggy-version/src.chess.game.mvc.model.chessFiles.ChessMove.java", "BodyUseAPI": ["board.getChessPosition(this.row, ((this.col) - 1)).getWhite()", "chess.game.mvc.model.chessFiles.ChessBoard.setPosition(int,int,<nulltype>)", "chess.game.mvc.model.chessFiles.ChessBoard.getChessPosition(int,int)", "chess.game.mvc.model.chessFiles.ChessBoard.getChessPosition(int,int)", "chess.game.mvc.model.chessFiles.ChessBoard.getChessPosition(int,int)", "chess.game.mvc.model.chessFiles.ChessBoard.getChessPosition(int,int)", "((chess.game.mvc.model.chessPieces.chessPiecesImp.Pawn) (board.getChessPosition(((this.row) + 1), this.col))).getPassant()", "((chess.game.mvc.model.chessPieces.chessPiecesImp.Pawn) (board.getChessPosition(this.row, ((this.col) - 1)))).getPassant()", "chess.game.mvc.model.chessFiles.ChessBoard.getChessPosition(int,int)", "board.getChessPosition(this.row, ((this.col) + 1)).getWhite()", "chess.game.mvc.model.chessFiles.ChessBoard.getChessPosition(int,int)", "chess.game.mvc.model.chessFiles.ChessBoard.setPosition(int,int,<nulltype>)"], "Fixed commit": "33b43bd8a51f76104c2284ff715cb534bf43b2da", "Url": "https://api.github.com/repos/danielgarm/Chess-Delta", "Date": "2017-11-19T23:53:20Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (checkPromotion(board)) { int chosenPiece = -1; chess.game.mvc.model.chessPieces.ChessPiece newPiece; chess.game.mvc.model.chessFiles.ChessPawnPromotionDialog dialog = new chess.game.mvc.model.chessFiles.ChessPawnPromotionDialog(\"Select the piece you would like:\", false); chosenPiece = dialog.getChosenPiece(); switch (chosenPiece) { case chess.game.mvc.model.chessPieces.ChessPieceID.BLACK_ROOK : newPiece = new chess.game.mvc.model.chessPieces.chessPiecesImp.Rook(false, false); break; case chess.game.mvc.model.chessPieces.ChessPieceID.BLACK_KNIGHT : newPiece = new chess.game.mvc.model.chessPieces.chessPiecesImp.Knight(false); break; case chess.game.mvc.model.chessPieces.ChessPieceID.BLACK_BISHOP : newPiece = new chess.game.mvc.model.chessPieces.chessPiecesImp.Bishop(false); break; case chess.game.mvc.model.chessPieces.ChessPieceID.BLACK_QUEEN : newPiece = new chess.game.mvc.model.chessPieces.chessPiecesImp.Queen(false); break; default : throw new chess.game.mvc.model.genericGameFiles.GameError(\"Invalid piece for promotion chosen.\"); } executePromotion(board, newPiece); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7330/buggy-version/src.chess.game.mvc.model.chessFiles.ChessMove.java", "BodyUseAPI": ["chess.game.mvc.model.chessFiles.ChessMove.executePromotion(chess.game.mvc.model.chessFiles.ChessBoard,chess.game.mvc.model.chessPieces.ChessPiece)"], "Fixed commit": "33b43bd8a51f76104c2284ff715cb534bf43b2da", "Url": "https://api.github.com/repos/danielgarm/Chess-Delta", "Date": "2017-11-19T23:53:20Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (close) super.finish();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/79/buggy-version/app.src.main.java.com.minipg.fanster.armoury.activity.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6a2df70fc977297f004a3ae4efbb42707d718b4c", "Url": "https://api.github.com/repos/KuKunai/Armoury", "Date": "2017-08-10T19:02:26Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["LispInterpreter.Display.LoadDefinition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (DefinitionExpress != null) { for (int i = 0; i < (DefinitionExpress.GetSubExps().size()); i++) { LispInterpreter.Display.Show(LispInterpreter.Interpreter.Eval(new LispInterpreter.Express(DefinitionExpress.GetSubExps().get(i)), LispInterpreter.Interpreter.global_env)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1941/buggy-version/src.LispInterpreter.Interpreter.java", "BodyUseAPI": ["DefinitionExpress.GetSubExps().size()", "DefinitionExpress.GetSubExps().get(int)", "LispInterpreter.Express.GetSubExps()", "LispInterpreter.Interpreter.Eval(LispInterpreter.Express,LispInterpreter.Environment)", "LispInterpreter.Display.Show(LispInterpreter.Data)", "LispInterpreter.Express.GetSubExps()"], "Fixed commit": "fab2c10ae3be19fb8dbcdf5366091fabf9aadfbf", "Url": "https://api.github.com/repos/lsj9383/LispJava", "Date": "2016-08-27T03:00:47Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((s.length()) == 0) { return null; }else { return new LispInterpreter.Express(s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1941/buggy-version/src.LispInterpreter.Display.java", "BodyUseAPI": [], "Fixed commit": "fab2c10ae3be19fb8dbcdf5366091fabf9aadfbf", "Url": "https://api.github.com/repos/lsj9383/LispJava", "Date": "2016-08-27T03:00:47Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jssc.SerialPort.readBytes()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (buffer != null) { for (byte b : buffer) { java.lang.System.out.print(((char) (b))); HexverterController.log.write(b); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2362/buggy-version/src.HexverterController.java", "BodyUseAPI": [], "Fixed commit": "a2998e9f457f11ffb4b05cd2553a695a0c62e0a0", "Url": "https://api.github.com/repos/zakhar-herych/HexVerter-ControlModule", "Date": "2014-08-01T20:49:19Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((item.get(k)) != null) { jsonWriter.key(k).object(); if ((item.get(k).getS()) != null) { jsonWriter.key(\"S\").value(item.get(k).getS()); }else if ((item.get(k).getN()) != null) { jsonWriter.key(\"N\").value(item.get(k).getN()); }else if ((item.get(k).getSS()) != null) { jsonWriter.key(\"SS\").value(item.get(k).getSS()); }else if ((item.get(k).getNS()) != null) { jsonWriter.key(\"NS\").value(item.get(k).getNS()); } jsonWriter.endObject(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6886/buggy-version/src.main.java.com.amazonaws.services.dynamodb.model.transform.ScanResultMarshaller.java", "BodyUseAPI": ["com.amazonaws.util.json.JSONWriter.key(java.lang.String)", "jsonWriter.key(k).object()", "item.get(k).getN()", "jsonWriter.key(\"S\").value(item.get(k).getS())", "jsonWriter.key(\"SS\").value(item.get(k).getSS())", "item.get(k).getS()", "jsonWriter.key(\"NS\").value(item.get(k).getNS())", "item.get(k).getS()", "item.get(k).getN()", "java.util.Map<java.lang.String, com.amazonaws.services.dynamodb.model.AttributeValue>.get(java.lang.String)", "java.util.Map<java.lang.String, com.amazonaws.services.dynamodb.model.AttributeValue>.get(java.lang.String)", "item.get(k).getSS()", "jsonWriter.key(\"N\").value(item.get(k).getN())", "item.get(k).getNS()", "java.util.Map<java.lang.String, com.amazonaws.services.dynamodb.model.AttributeValue>.get(java.lang.String)", "item.get(k).getNS()", "java.util.Map<java.lang.String, com.amazonaws.services.dynamodb.model.AttributeValue>.get(java.lang.String)", "java.util.Map<java.lang.String, com.amazonaws.services.dynamodb.model.AttributeValue>.get(java.lang.String)", "java.util.Map<java.lang.String, com.amazonaws.services.dynamodb.model.AttributeValue>.get(java.lang.String)", "java.util.Map<java.lang.String, com.amazonaws.services.dynamodb.model.AttributeValue>.get(java.lang.String)", "java.util.Map<java.lang.String, com.amazonaws.services.dynamodb.model.AttributeValue>.get(java.lang.String)", "item.get(k).getSS()"], "Fixed commit": "45b1605f018b4f68d80e37d03cdc79d0d2f91d7d", "Url": "https://api.github.com/repos/mboudreau/Alternator", "Date": "2012-09-11T21:12:07Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activeGame.getGameEnded()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6034/buggy-version/Ganzenbord.src.client.MainGameScreenController.java", "BodyUseAPI": [], "Fixed commit": "e786b54f9804ce6de56971bc2b46ec568ac71d92", "Url": "https://api.github.com/repos/GideonvDoorn/Ganzenbord", "Date": "2017-12-11T09:41:48Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.mesos.Protos.Value.Ranges.newBuilder()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((builder.getRangeCount()) > 0) { resourceBuilder.add(org.apache.mesos.Protos.Resource.newBuilder().setName(org.apache.aurora.scheduler.configuration.Resources.PORTS).setType(Type.RANGES).setRole(resource.getResource().getRole()).setRanges(builder.build()).build()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8270/buggy-version/src.main.java.org.apache.aurora.scheduler.configuration.Resources.java", "BodyUseAPI": ["resourceBuilder.add(org.apache.mesos.Protos.Resource.newBuilder().setName(org.apache.aurora.scheduler.configuration.Resources.PORTS).setType(Type.RANGES).setRole(resource.getResource().getRole()).setRanges(builder.build()).build())", "Ranges.Builder.build()", "org.apache.mesos.Protos.Resource.newBuilder().setName(org.apache.aurora.scheduler.configuration.Resources.PORTS).setType(Type.RANGES).setRole(resource.getResource().getRole()).setRanges(builder.build()).build()", "org.apache.mesos.Protos.Resource.newBuilder().setName(org.apache.aurora.scheduler.configuration.Resources.PORTS).setType(Type.RANGES).setRole(resource.getResource().getRole()).setRanges(builder.build())"], "Fixed commit": "0d90d4e9fba796b556965d7ccfce576c8ad99b50", "Url": "https://api.github.com/repos/zhanglong2015/incubator-aurora", "Date": "2015-03-03T09:39:00Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSelectedDestinationDataverse()) == null) { JsfHelper.JH.addMessage(FacesMessage.SEVERITY_ERROR, \"Failed to create a new Harvesting Client configuration: no destination dataverse selected.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8123/buggy-version/src.main.java.edu.harvard.iq.dataverse.HarvestingClientsPage.java", "BodyUseAPI": [], "Fixed commit": "24c3b53d670f7f483769841236aeb9858c4411ed", "Url": "https://api.github.com/repos/IQSS/dataverse", "Date": "2016-07-11T21:51:46Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((org.usfirst.frc.team1360.new_auto.AutonControl.selectedIndex) < (org.usfirst.frc.team1360.new_auto.AutonControl.routines.size())) { org.usfirst.frc.team1360.new_auto.AutonControl.routines.get(org.usfirst.frc.team1360.new_auto.AutonControl.selectedIndex).start(); org.usfirst.frc.team1360.new_auto.AutonControl.autoThreads.add(org.usfirst.frc.team1360.new_auto.AutonControl.routines.get(org.usfirst.frc.team1360.new_auto.AutonControl.selectedIndex)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4413/buggy-version/Steamworks.src.org.usfirst.frc.team1360.new_auto.AutonControl.java", "BodyUseAPI": ["java.util.ArrayList<org.usfirst.frc.team1360.new_auto.AutonRoutine>.get(int)", "org.usfirst.frc.team1360.new_auto.AutonControl.routines.get(org.usfirst.frc.team1360.new_auto.AutonControl.selectedIndex).start()", "java.util.ArrayList<org.usfirst.frc.team1360.new_auto.AutonRoutine>.get(int)", "java.util.ArrayList<java.lang.Thread>.add(org.usfirst.frc.team1360.new_auto.AutonControl.routines.get(org.usfirst.frc.team1360.new_auto.AutonControl.selectedIndex))"], "Fixed commit": "e5d6ddd9ea79756851e076493ad2cd8be7716eaa", "Url": "https://api.github.com/repos/FRC1360/Steamworks2017", "Date": "2017-11-09T17:57:43Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (read == (-1)) break; else sb.append(((char) (read)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4469/buggy-version/src.emmaforeclipse.model.HtmlPlacer.java", "BodyUseAPI": [], "Fixed commit": "7b5128d276b11f2885208ca08170551df8b2afec", "Url": "https://api.github.com/repos/yaochen1025/EmmaForEclipse", "Date": "2012-12-12T04:39:21Z"},
{"Line": "=>1945", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((paginationSizeAtt != 0) && ((org.wso2.carbon.registry.core.pagination.PaginationContext.getInstance()) != null)) { int paginationSizePros = org.wso2.carbon.registry.core.pagination.PaginationContext.getInstance().getLength(); org.wso2.carbon.registry.core.pagination.PaginationContext.getInstance().setLength((paginationSizeAtt + paginationSizePros)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6181/buggy-version/components.governance.org.wso2.carbon.governance.api.src.main.java.org.wso2.carbon.governance.api.util.GovernanceUtils.java", "BodyUseAPI": ["org.wso2.carbon.registry.core.pagination.PaginationContext.getInstance().setLength(int)"], "Fixed commit": "86603c7f96294a064b2abd39a6b76114f0f5d7f4", "Url": "https://api.github.com/repos/madawas/carbon-governance", "Date": "2016-05-26T06:40:16Z"},
{"Line": "=>1918", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.wso2.carbon.registry.core.pagination.PaginationContext.getInstance()) != null) { paginationSizeAtt = org.wso2.carbon.registry.core.pagination.PaginationContext.getInstance().getLength(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6181/buggy-version/components.governance.org.wso2.carbon.governance.api.src.main.java.org.wso2.carbon.governance.api.util.GovernanceUtils.java", "BodyUseAPI": [], "Fixed commit": "86603c7f96294a064b2abd39a6b76114f0f5d7f4", "Url": "https://api.github.com/repos/madawas/carbon-governance", "Date": "2016-05-26T06:40:16Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (theImage.isLoaded()) { context.drawImage(theImage.getImage(), 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7945/buggy-version/gameengine-gwtrenderer.src.main.java.de.mirkosertic.gameengine.gwt.GWTEffectCanvas.java", "BodyUseAPI": ["de.mirkosertic.gameengine.gwt.GWTBitmapResource.getImage()", "com.google.gwt.canvas.dom.client.Context2d.drawImage(theImage.getImage(),int,int)"], "Fixed commit": "809103c38ac0b0a69359519f7119d68acb3cd631", "Url": "https://api.github.com/repos/mirkosertic/GameComposer", "Date": "2016-07-28T16:47:35Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(counter.getText().equals(null))) countDownTimer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/109/buggy-version/app.src.main.java.nl.rubenvanerk.speurtocht.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a807672257b6447051a099bd30552ea1eb15ef7b", "Url": "https://api.github.com/repos/Ruvero/project78-speurtocht", "Date": "2017-06-29T11:25:14Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (arg == 0) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1279/buggy-version/src.main.java.org.dynjs.runtime.builtins.math.Cos.java", "BodyUseAPI": [], "Fixed commit": "4814064bf989aaa75c14076eb3ddadbeaf942197", "Url": "https://api.github.com/repos/dynjs/dynjs", "Date": "2012-09-05T16:14:50Z"},
{"Line": "=>834", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (isTopicAdmin(nd.getNodePK().getId())) { return getKmeliaBm().updateTopic(nd, alertType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6601/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.control.KmeliaSessionController.java", "BodyUseAPI": ["com.stratelia.webactiv.kmelia.control.ejb.KmeliaBm.updateTopic(com.stratelia.webactiv.util.node.model.NodeDetail,java.lang.String)"], "Fixed commit": "fba10403bdfa0d0746dd7b7b5711deceb5a0a613", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Components", "Date": "2015-07-20T13:14:07Z"},
{"Line": "=>1535", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.silverpeas.servlet.HttpRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (kmelia.isTopicAdmin(nodeId)) { kmelia.updateTopicRole(role, nodeId, groupIds, userIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6601/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": ["com.stratelia.webactiv.kmelia.control.KmeliaSessionController.updateTopicRole(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])"], "Fixed commit": "fba10403bdfa0d0746dd7b7b5711deceb5a0a613", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Components", "Date": "2015-07-20T13:14:07Z"},
{"Line": "=>1485", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(kmelia.isTopicAdmin(id))) { return \"/admin/jsp/accessForbidden.jsp\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6601/buggy-version/kmelia.kmelia-war.src.main.java.com.stratelia.webactiv.kmelia.servlets.KmeliaRequestRouter.java", "BodyUseAPI": [], "Fixed commit": "fba10403bdfa0d0746dd7b7b5711deceb5a0a613", "Url": "https://api.github.com/repos/ebonnet/Silverpeas-Components", "Date": "2015-07-20T13:14:07Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(name.equals(graph.name))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1327/buggy-version/08_interpreter.src.main.java.graph.Graph.java", "BodyUseAPI": [], "Fixed commit": "047ed54844182afc5957433ace5ce19b767486e4", "Url": "https://api.github.com/repos/domokoslaci94/ford-prog", "Date": "2016-12-07T21:57:00Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.stepic.droid.view.adapters.MyCoursesAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((course.getCover()) != null) { com.squareup.picasso.Picasso.with(mFragment.getActivity()).load(((mConfig.getBaseUrl()) + (course.getCover()))).placeholder(viewHolderItem.placeholder).into(viewHolderItem.courseIcon); }else { com.squareup.picasso.Picasso.with(mFragment.getActivity()).load(R.drawable.stepic_logo_black_and_white).placeholder(viewHolderItem.placeholder).into(viewHolderItem.courseIcon); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/714/buggy-version/app.src.main.java.org.stepic.droid.view.adapters.MyCoursesAdapter.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(mFragment.getActivity()).load(((mConfig.getBaseUrl()) + (course.getCover()))).placeholder(viewHolderItem.placeholder).into(android.widget.ImageView)", "org.stepic.droid.model.Course.getCover()", "com.squareup.picasso.Picasso.with(mFragment.getActivity()).load(((mConfig.getBaseUrl()) + (course.getCover())))", "com.squareup.picasso.Picasso.with(mFragment.getActivity()).load(((mConfig.getBaseUrl()) + (course.getCover()))).placeholder(android.graphics.drawable.Drawable)"], "Fixed commit": "15dcfa0b40c837b3b01bc8c7cf614f0d9c3d4809", "Url": "https://api.github.com/repos/StepicOrg/stepik-android", "Date": "2016-01-10T18:44:59Z"},
{"Line": "=>630", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dbType == null) { dbType = dataSource.getDbType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1268/buggy-version/src.main.java.com.alibaba.druid.filter.stat.StatFilter.java", "BodyUseAPI": [], "Fixed commit": "cade9cd0cec11e3e6daba08727a1a60137543ff8", "Url": "https://api.github.com/repos/shrekwang/druid", "Date": "2012-08-17T07:18:51Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.util.Arrays.asList(kr.ac.korea.mobide.sigmapi.Sigmapi.except_strings).contains(query)) { params.put(\"query\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5572/buggy-version/src.main.java.kr.ac.korea.mobide.sigmapi.Sigmapi.java", "BodyUseAPI": [], "Fixed commit": "a45d3c1fe8a15b47b59b2e9a0d207d1e7dfe0d85", "Url": "https://api.github.com/repos/kool22/sigmapi", "Date": "2014-09-26T06:26:42Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mDiffUtilEnabled) { java.lang.Object modelIndex = Lego.legoFactoryProxy.getModelIndex(model); if (modelIndex == null) { return; } for (int i = 0, len = mModels.size(); i < len; i++) { java.lang.Object obj = mModels.get(i); java.lang.Object objIndex = Lego.legoFactoryProxy.getModelIndex(obj); if (modelIndex.equals(objIndex)) { mModels.set(i, model); notifyItemChanged(i); break; } } }else { int index = mModels.indexOf(model); notifyItemChanged(index); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1838/buggy-version/lego.src.main.java.com.smilehacker.lego.LegoAdapter.java", "BodyUseAPI": [], "Fixed commit": "b87d7800a145b535ccbad3610e7791dad16f7d13", "Url": "https://api.github.com/repos/Hackforid/Lego", "Date": "2017-08-23T12:27:01Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ti.goosh.TiGooshModule.module) != null) return ti.goosh.TiGooshModule.module; else return new ti.goosh.TiGooshModule();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8241/buggy-version/android.src.ti.goosh.TiGooshModule.java", "BodyUseAPI": [], "Fixed commit": "5e490fcae8dd9ccbd1e4900d70757edfa0b46e72", "Url": "https://api.github.com/repos/caffeinalab/ti.goosh", "Date": "2017-03-23T15:06:47Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((adp == 0) && (!(result.getInfo(\"Type\").equalsIgnoreCase(\"MT\")))) { meka.core.LabelSet y = new meka.core.LabelSet(meka.core.MLUtils.toIndicesSet(result.actuals.get(i))); sb.append(y).append(\" \"); meka.core.LabelSet ypred = new meka.core.LabelSet(meka.core.MLUtils.toIndicesSet(result.rowPrediction(i))); sb.append(ypred).append(\"\\n\"); }else { sb.append(meka.core.A.toString(result.actuals.get(i))).append(\" \"); sb.append(meka.core.A.toString(result.predictions.get(i), adp)).append(\"\\n\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7178/buggy-version/src.main.java.meka.core.Result.java", "BodyUseAPI": ["meka.core.MLUtils.toIndicesSet(int[])", "meka.core.A.toString(double[],int)", "java.util.ArrayList<int[]>.get(int)", "java.lang.StringBuilder.append(java.lang.String)", "meka.core.A.toString(int[])", "java.util.ArrayList<double[]>.get(int)", "meka.core.Result.rowPrediction(int)", "java.lang.StringBuilder.append(meka.core.A.toString(result.predictions.get(i), adp))", "meka.core.MLUtils.toIndicesSet(int[])", "java.util.ArrayList<int[]>.get(int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(meka.core.A.toString(result.actuals.get(i)))"], "Fixed commit": "a54efd6db6e953024dda8c7bb9b940e9de84fe80", "Url": "https://api.github.com/repos/Waikato/meka", "Date": "2016-02-17T14:22:31Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == intent) return android.app.Service.START_STICKY;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4086/buggy-version/src.com.shlf.lockscreen.lock.LockService.java", "BodyUseAPI": [], "Fixed commit": "3f5d59c70d559d7f7ea1fed5e841594ee21a7322", "Url": "https://api.github.com/repos/shlf/KissLock", "Date": "2014-07-07T14:49:08Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.entirej.framework.report.EJReportBlock.getFocusedRecord()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (record == null) { java.lang.System.out.println(block.getBlockRecords().size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6594/buggy-version/entirej-reports-jasper.src.org.entirej.report.jasper.data.EJReportBlockDataSource.java", "BodyUseAPI": [], "Fixed commit": "5daab7d7640aaac6e41d79c30bba3082b651a2ed", "Url": "https://api.github.com/repos/entirej/reports-core", "Date": "2015-01-07T09:47:10Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.xc0ffeelabs.taxicabdriver.models.User.getDestLocation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (dstLocation != null) { dstLocation.fetchIfNeeded(); if (((dstLocation.getLatitude()) != 0) && ((dstLocation.getLongitude()) != 0)) { mDstLocation = new com.google.android.gms.maps.model.LatLng(dstLocation.getLatitude(), dstLocation.getLongitude()); }else { mDstLocation = new com.google.android.gms.maps.model.LatLng(37.4810289, (-122.1565179)); } }else { mDstLocation = new com.google.android.gms.maps.model.LatLng(37.4810289, (-122.1565179)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5010/buggy-version/app.src.main.java.com.xc0ffeelabs.taxicabdriver.states.EnrouteDestinationState.java", "BodyUseAPI": ["com.xc0ffeelabs.taxicabdriver.models.Location.getLatitude()", "com.xc0ffeelabs.taxicabdriver.models.Location.getLongitude()", "com.xc0ffeelabs.taxicabdriver.models.Location.getLatitude()", "com.xc0ffeelabs.taxicabdriver.models.Location.fetchIfNeeded()", "com.xc0ffeelabs.taxicabdriver.models.Location.getLongitude()"], "Fixed commit": "7e07cf7615af5b895d79f46fe85f508d9d0b2c3d", "Url": "https://api.github.com/repos/xc0ffeelabs/taxicab-driver", "Date": "2016-04-06T02:49:02Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Boolean.booleanValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isNull) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3710/buggy-version/smartETL.src.main.java.org.f3tools.incredible.smartETL.DataSetFile.java", "BodyUseAPI": [], "Fixed commit": "dda9089b1048c412c8a2c29b032905b5dad16e9b", "Url": "https://api.github.com/repos/dennisk28/SmartETL", "Date": "2015-03-12T17:12:03Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (data == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3710/buggy-version/smartETL.src.main.java.org.f3tools.incredible.smartETL.DataSetFile.java", "BodyUseAPI": [], "Fixed commit": "dda9089b1048c412c8a2c29b032905b5dad16e9b", "Url": "https://api.github.com/repos/dennisk28/SmartETL", "Date": "2015-03-12T17:12:03Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mSignInStatus) { android.util.Log.d(com.example.sarah.whosthere.LoginActivity.TAG, \"status is true\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1895/buggy-version/WhosThere.app.src.main.java.com.example.sarah.whosthere.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "a74a04bf950c3c46cf6a1d3b086a8275ec5e1403", "Url": "https://api.github.com/repos/sarahsmo/cmsc436group6", "Date": "2017-11-15T16:34:04Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((orderedTaskList.size()) == 0) return emptyReminderTaskList; else if ((emptyReminderTaskList.size()) > 0) return mergeListsOnReminderDate(orderedTaskList, emptyReminderTaskList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5164/buggy-version/tdlgradle.src.main.java.com.ac.tdl.HomeActivity.java", "BodyUseAPI": ["com.ac.tdl.HomeActivity.mergeListsOnReminderDate(java.util.List<com.ac.tdl.model.Task>,java.util.List<com.ac.tdl.model.Task>)"], "Fixed commit": "b6a9aaeac26e3beda1ff8105ff21076922933327", "Url": "https://api.github.com/repos/chrisjluc/tdl-gradle", "Date": "2014-06-23T00:06:45Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (emptyReminderTaskList != null) mergedTaskList.addAll(emptyReminderTaskList);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5164/buggy-version/tdlgradle.src.main.java.com.ac.tdl.HomeActivity.java", "BodyUseAPI": ["java.util.List<com.ac.tdl.model.Task>.addAll(java.util.List<com.ac.tdl.model.Task>)"], "Fixed commit": "b6a9aaeac26e3beda1ff8105ff21076922933327", "Url": "https://api.github.com/repos/chrisjluc/tdl-gradle", "Date": "2014-06-23T00:06:45Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (progressFragment.isVisible()) progressFragment.dismissAllowingStateLoss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4845/buggy-version/src.org.qii.weiciyuan.ui.send.RepostNewActivity.java", "BodyUseAPI": ["org.qii.weiciyuan.ui.widgets.SendProgressFragment.dismissAllowingStateLoss()"], "Fixed commit": "e8e31e62403c294a41218c4303aad5f6d85abc50", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-08-20T06:55:27Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"request\".equals(name)) { throw new java.lang.RuntimeException(((\"'request' is not a variable, use the form '* request \" + exp) + \"' instead\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3229/buggy-version/karate-core.src.main.java.com.intuit.karate.Script.java", "BodyUseAPI": [], "Fixed commit": "7fe27a65630021398d723d1323d4018f37876731", "Url": "https://api.github.com/repos/intuit/karate", "Date": "2017-03-25T10:48:33Z"},
{"Line": "=>745", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"request\".equals(name)) { throw new java.lang.RuntimeException((\"'request' is not a variable,\" + \" use the form '* request <expression>' to initialize the request payload, and <expression> can be a variable\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3229/buggy-version/karate-core.src.main.java.com.intuit.karate.Script.java", "BodyUseAPI": [], "Fixed commit": "7fe27a65630021398d723d1323d4018f37876731", "Url": "https://api.github.com/repos/intuit/karate", "Date": "2017-03-25T10:48:33Z"},
{"Line": "=>328", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.BlockingQueue<org.matsim.api.core.v01.events.Event>.take()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (event instanceof org.matsim.core.events.LastEventOfIteration) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8359/buggy-version/matsim.src.main.java.org.matsim.core.events.ParallelEventsManager.java", "BodyUseAPI": [], "Fixed commit": "66bccfc0e40d0ab6a768c9e1bc978a7df5fd12ff", "Url": "https://api.github.com/repos/colinsheppard/matsim_all", "Date": "2016-02-23T14:45:12Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input instanceof co.cask.cdap.proto.Id.Stream) { return ((co.cask.cdap.proto.Id.Stream) (input)).getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3268/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.metadata.serialize.LineageRecord.java", "BodyUseAPI": [], "Fixed commit": "52dd2e1b3f2482dbf6efd808e113ebcb7bd4df5a", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2015-09-16T18:35:34Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input instanceof co.cask.cdap.proto.Id.DatasetInstance) { return ((co.cask.cdap.proto.Id.DatasetInstance) (input)).getId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3268/buggy-version/cdap-app-fabric.src.main.java.co.cask.cdap.metadata.serialize.LineageRecord.java", "BodyUseAPI": [], "Fixed commit": "52dd2e1b3f2482dbf6efd808e113ebcb7bd4df5a", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2015-09-16T18:35:34Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (activity.is_trip_contri()) { return java.lang.String.format(\"%s[%.2fx]: Rs.%.0f\", this.name, this.shareRatio, getTotal()); }else { return java.lang.String.format(\"%s: Rs.%.0f\", this.name, getTotal()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6966/buggy-version/MoneyManager.src.shubham.money_manager.personEntry.java", "BodyUseAPI": [], "Fixed commit": "988d5fabecb7e587204d79154608191aa52c4493", "Url": "https://api.github.com/repos/shubhamtagra/Android-Project-MM", "Date": "2015-04-30T14:54:12Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ArrayPriorityQueue<D>.addBinaryHelp(int,int,D)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index == (_data.size())) { _data.add(i); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5902/buggy-version/ArrayPriorityQueue.java", "BodyUseAPI": ["java.util.ArrayList<D>.add(D)"], "Fixed commit": "a5645f201a36bfaf87c1f7f0da6aa571e7bc7e55", "Url": "https://api.github.com/repos/jenyu7/TJM", "Date": "2017-04-21T19:46:12Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) { _data.add(i); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5902/buggy-version/ArrayPriorityQueue.java", "BodyUseAPI": [], "Fixed commit": "a5645f201a36bfaf87c1f7f0da6aa571e7bc7e55", "Url": "https://api.github.com/repos/jenyu7/TJM", "Date": "2017-04-21T19:46:12Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(edu.wildlifesecurity.framework.MessageEvent.eventTypes.containsKey(command))) edu.wildlifesecurity.framework.MessageEvent.eventTypes.put(command, new edu.wildlifesecurity.framework.EventType((\"MessageEvent.\" + command)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2056/buggy-version/src.edu.wildlifesecurity.framework.MessageEvent.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, edu.wildlifesecurity.framework.EventType>.put(java.lang.String,edu.wildlifesecurity.framework.EventType)"], "Fixed commit": "0db88b894a4b4ab0427835d6f3039413758e6c30", "Url": "https://api.github.com/repos/carka684/CDIO-Framework", "Date": "2014-11-02T20:09:46Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(edu.wildlifesecurity.framework.MessageEvent.eventTypes.containsKey(command.toString()))) edu.wildlifesecurity.framework.MessageEvent.eventTypes.put(command.toString(), new edu.wildlifesecurity.framework.EventType((\"MessageEvent.\" + command)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2056/buggy-version/src.edu.wildlifesecurity.framework.MessageEvent.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, edu.wildlifesecurity.framework.EventType>.put(command.toString(),edu.wildlifesecurity.framework.EventType)", "Message.Commands.toString()"], "Fixed commit": "0db88b894a4b4ab0427835d6f3039413758e6c30", "Url": "https://api.github.com/repos/carka684/CDIO-Framework", "Date": "2014-11-02T20:09:46Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((textOnScreen.getStrings().size()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2205/buggy-version/src.client.MainPanel.java", "BodyUseAPI": [], "Fixed commit": "2088496f1bd3f38f552bde278f38b126f10c21c7", "Url": "https://api.github.com/repos/SergeyChihirkin/TextViever", "Date": "2015-09-04T14:25:56Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.Statement.executeQuery(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rs.getString(\"Username\").equals(\"admin\")) { }else { users.add(us); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8486/buggy-version/src.java.Controller.UserController.java", "BodyUseAPI": [], "Fixed commit": "48b603e69494721d232f62db1f5053e7f397535a", "Url": "https://api.github.com/repos/rkarne/Budget", "Date": "2017-04-08T20:39:32Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((replicationFactor) <= 0) { invalidConfiguration = true; com.telefonica.iot.cygnus.sinks.OrionKafkaSink.LOGGER.debug(((((\"[\" + (this.getName())) + \"] Invalid configuration (replication_factor=\") + (replicationFactor)) + \") must be upper than 0\")); }else { com.telefonica.iot.cygnus.sinks.OrionKafkaSink.LOGGER.debug(((((\"[\" + (this.getName())) + \"] Reading configuration (replication_factor=\") + (replicationFactor)) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4788/buggy-version/src.main.java.com.telefonica.iot.cygnus.sinks.OrionKafkaSink.java", "BodyUseAPI": ["com.telefonica.iot.cygnus.log.CygnusLogger.debug(((((\"[\" + (this.getName())) + \"] Reading configuration (replication_factor=\") + (replicationFactor)) + \")\"))", "com.telefonica.iot.cygnus.log.CygnusLogger.debug(((((\"[\" + (this.getName())) + \"] Invalid configuration (replication_factor=\") + (replicationFactor)) + \") must be upper than 0\"))"], "Fixed commit": "92769aa6d535d836b47a10b151026abba4cebf33", "Url": "https://api.github.com/repos/telefonicaid/fiware-cygnus", "Date": "2016-02-15T11:05:51Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (colNum == 0) { type = org.rickosborne.tubetastic.android.GameBoard.TILE_TYPE.SOURCE; }else if (colNum == ((colCount) - 1)) { type = org.rickosborne.tubetastic.android.GameBoard.TILE_TYPE.SINK; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6921/buggy-version/TubeTastic.src.main.java.org.rickosborne.tubetastic.android.GameBoard.java", "BodyUseAPI": [], "Fixed commit": "489f06c282538d38b67a4fa36572d14a75c331a9", "Url": "https://api.github.com/repos/rickosborne/tubetastic-android", "Date": "2013-07-25T20:11:58Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.imixs.workflow.ItemCollection.getItemValueString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(soapLocation.isEmpty())) { service = new org.imixs.workflow.magento.soap.generated.MagentoServiceLocator(soapLocation); }else { service = new org.imixs.workflow.magento.soap.generated.MagentoServiceLocator(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2101/buggy-version/imixs-adapters-magento-ejb.src.main.java.org.imixs.workflow.magento.soap.MagentoSOAPClient.java", "BodyUseAPI": [], "Fixed commit": "7666bf2472d02b3ef02bbde44ab411bf9baea64b", "Url": "https://api.github.com/repos/imixs/imixs-adapters", "Date": "2014-09-29T06:58:01Z"},
{"Line": "=>1408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teiid.query.optimizer.relational.rules.FrameUtil.findOriginatingNode(org.teiid.query.optimizer.relational.plantree.PlanNode,java.util.Set<org.teiid.query.sql.symbol.GroupSymbol>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((useCardinalityIfUnknown != null) || ((source.getChildCount()) == 0)) { ndv = source.getCardinality(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3255/buggy-version/engine.src.main.java.org.teiid.query.optimizer.relational.rules.NewCalculateCostUtil.java", "BodyUseAPI": ["org.teiid.query.optimizer.relational.plantree.PlanNode.getCardinality()"], "Fixed commit": "2bff91d8c1f5791113e7370f5fa2f245d5d45f1b", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2016-07-06T23:28:21Z"},
{"Line": "=>1015", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (meta.getDatabaseProductName().toLowerCase().contains(org.wso2.carbon.dataservices.core.odata.RDBMSDataHandler.ORACLE_SERVER)) { resultSet = meta.getColumns(null, meta.getUserName(), tableName, null); }else { resultSet = meta.getColumns(null, null, tableName, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2943/buggy-version/components.data-services.org.wso2.carbon.dataservices.core.src.main.java.org.wso2.carbon.dataservices.core.odata.RDBMSDataHandler.java", "BodyUseAPI": ["java.sql.DatabaseMetaData.getUserName()", "java.sql.DatabaseMetaData.getColumns(<nulltype>,<nulltype>,java.lang.String,<nulltype>)", "java.sql.DatabaseMetaData.getColumns(<nulltype>,java.lang.String,java.lang.String,<nulltype>)"], "Fixed commit": "107c043fbbed725d95924bb97bb50b31bf7e25b2", "Url": "https://api.github.com/repos/madhawa-gunasekara/carbon-data", "Date": "2017-01-31T05:52:29Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (node instanceof org.raml.yagi.framework.nodes.IntegerNode) { value = new java.math.BigDecimal(((org.raml.yagi.framework.nodes.IntegerNode) (node)).getValue()); }else if (node instanceof org.raml.yagi.framework.nodes.FloatingNode) { value = ((org.raml.yagi.framework.nodes.FloatingNode) (node)).getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3753/buggy-version/yagi.src.main.java.org.raml.yagi.framework.grammar.rule.DivisorValueRule.java", "BodyUseAPI": [], "Fixed commit": "88d764a1d45c1a5872301c530f2ec395ca6314cd", "Url": "https://api.github.com/repos/raml-org/raml-java-parser", "Date": "2017-09-29T13:28:08Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (value != null) { if (((divisor.compareTo(java.math.BigDecimal.ZERO)) == 0) && ((value.compareTo(java.math.BigDecimal.ZERO)) == 0)) { return true; } return (!((divisor.compareTo(java.math.BigDecimal.ZERO)) == 0)) && ((value.remainder(divisor).compareTo(java.math.BigDecimal.ZERO)) == 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3753/buggy-version/yagi.src.main.java.org.raml.yagi.framework.grammar.rule.DivisorValueRule.java", "BodyUseAPI": ["java.math.BigDecimal.remainder(java.math.BigDecimal)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)", "java.math.BigDecimal.compareTo(java.math.BigDecimal)"], "Fixed commit": "88d764a1d45c1a5872301c530f2ec395ca6314cd", "Url": "https://api.github.com/repos/raml-org/raml-java-parser", "Date": "2017-09-29T13:28:08Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mJob) == null) { mJob = new com.github.bean.Job(); android.widget.Toast.makeText(getActivity(), R.string.error_getting_job_info, Toast.LENGTH_LONG).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2568/buggy-version/android-app.src.com.github.jobs.ui.fragment.JobDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "c432fea786135916422add3a5ef53d11948e9590", "Url": "https://api.github.com/repos/margge/github-jobs", "Date": "2012-12-13T07:29:47Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (slot instanceof cd4017be.lib.Gui.SlotTank) return slot.getStack();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7054/buggy-version/src.java.cd4017be.lib.Gui.TileContainer.java", "BodyUseAPI": ["net.minecraft.inventory.Slot.getStack()"], "Fixed commit": "2096cee6c19e4a5abd1eba1cbe060886305fd1f7", "Url": "https://api.github.com/repos/CD4017BE/CD4017BE_lib", "Date": "2017-12-20T15:59:56Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == 5) { ++x; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5412/buggy-version/src.main.java.com.stiforr.smashmod.tool.TntAxe.java", "BodyUseAPI": [], "Fixed commit": "7f625c912a6902fc50862531d4ed0bae0931d85d", "Url": "https://api.github.com/repos/insuusvenerati/Smash-Mod", "Date": "2015-06-25T16:41:21Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == 4) { --x; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5412/buggy-version/src.main.java.com.stiforr.smashmod.tool.TntAxe.java", "BodyUseAPI": [], "Fixed commit": "7f625c912a6902fc50862531d4ed0bae0931d85d", "Url": "https://api.github.com/repos/insuusvenerati/Smash-Mod", "Date": "2015-06-25T16:41:21Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(player.canPlayerEdit(x, y, z, s, itemStack))) { return false; }else { if (world.isAirBlock(x, y, z)) { world.playSoundEffect((((double) (x)) + 0.5), (((double) (y)) + 0.5), (((double) (z)) + 0.5), \"fire.ignite\", 1.0F, (((itemRand.nextFloat()) * 0.4F) + 0.8F)); world.setBlock(x, y, z, Blocks.tnt); } itemStack.damageItem(1, player); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5412/buggy-version/src.main.java.com.stiforr.smashmod.tool.TntAxe.java", "BodyUseAPI": ["net.minecraft.world.World.isAirBlock(int,int,int)", "net.minecraft.item.ItemStack.damageItem(int,net.minecraft.entity.player.EntityPlayer)", "net.minecraft.world.World.setBlock(int,int,int,Blocks.tnt)"], "Fixed commit": "7f625c912a6902fc50862531d4ed0bae0931d85d", "Url": "https://api.github.com/repos/insuusvenerati/Smash-Mod", "Date": "2015-06-25T16:41:21Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == 0) { --y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5412/buggy-version/src.main.java.com.stiforr.smashmod.tool.TntAxe.java", "BodyUseAPI": [], "Fixed commit": "7f625c912a6902fc50862531d4ed0bae0931d85d", "Url": "https://api.github.com/repos/insuusvenerati/Smash-Mod", "Date": "2015-06-25T16:41:21Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == 3) { ++z; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5412/buggy-version/src.main.java.com.stiforr.smashmod.tool.TntAxe.java", "BodyUseAPI": [], "Fixed commit": "7f625c912a6902fc50862531d4ed0bae0931d85d", "Url": "https://api.github.com/repos/insuusvenerati/Smash-Mod", "Date": "2015-06-25T16:41:21Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == 1) { ++y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5412/buggy-version/src.main.java.com.stiforr.smashmod.tool.TntAxe.java", "BodyUseAPI": [], "Fixed commit": "7f625c912a6902fc50862531d4ed0bae0931d85d", "Url": "https://api.github.com/repos/insuusvenerati/Smash-Mod", "Date": "2015-06-25T16:41:21Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == 2) { --z; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5412/buggy-version/src.main.java.com.stiforr.smashmod.tool.TntAxe.java", "BodyUseAPI": [], "Fixed commit": "7f625c912a6902fc50862531d4ed0bae0931d85d", "Url": "https://api.github.com/repos/insuusvenerati/Smash-Mod", "Date": "2015-06-25T16:41:21Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((int) (values.get(0))) == 2) { return 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1814/buggy-version/AI.java", "BodyUseAPI": [], "Fixed commit": "bf888ef473182c137a4cfa88b9bfcc53dc46737d", "Url": "https://api.github.com/repos/thewells1024/Idiot-in-Java", "Date": "2015-01-30T02:52:03Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dimension < 0) { throw new me.chaosdefinition.hyperspark.common.HypersparkException((\"Illegal value of dimension: \" + dimension)); }else if (dimension < 2) { return dimension; }else { return (3 * (1 << ((dimension << 1) - 3))) - (1 << (dimension - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6395/buggy-version/src.main.java.me.chaosdefinition.hyperspark.core.WirelengthCalculator.java", "BodyUseAPI": [], "Fixed commit": "2235f764963550356a9737a55c971c5e64b7381c", "Url": "https://api.github.com/repos/chaosdefinition/hyperspark", "Date": "2016-04-16T07:05:07Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.verbose)) { setVerbose(true); backtrack(this.initial, this.initial.size()); setVerbose(false); }else { backtrack(this.initial, this.initial.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6395/buggy-version/src.main.java.me.chaosdefinition.hyperspark.core.WirelengthCalculator.java", "BodyUseAPI": [], "Fixed commit": "2235f764963550356a9737a55c971c5e64b7381c", "Url": "https://api.github.com/repos/chaosdefinition/hyperspark", "Date": "2016-04-16T07:05:07Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.auth.FirebaseAuth.getInstance().getCurrentUser()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((user.getDisplayName()) != null) { if (user.getDisplayName().equals(message.getAuthorName())) { messageStatus.setVisibility(View.VISIBLE); messageAuthor.setTextColor(android.graphics.Color.parseColor(\"#F44336\")); if (message.isSent()) { messageStatus.setBackgroundResource(R.drawable.ic_action_single_tick); }else { messageStatus.setBackgroundResource(R.drawable.ic_action_wait); } }else { messageAuthor.setTextColor(android.graphics.Color.parseColor(\"#607d8b\")); messageStatus.setVisibility(View.GONE); } }else { if (message.getAuthorName().equals(\"Anonymous\")) { messageAuthor.setTextColor(android.graphics.Color.parseColor(\"#4527a0\")); }else { messageAuthor.setTextColor(android.graphics.Color.parseColor(\"#607d8b\")); } messageStatus.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6384/buggy-version/app.src.main.java.com.example.tarun.chatbox.MessageListAdapter.java", "BodyUseAPI": ["com.google.firebase.auth.FirebaseUser.getDisplayName()", "user.getDisplayName().equals(message.getAuthorName())"], "Fixed commit": "5e226d52bfb730c97b875e7da1b553c3a309b889", "Url": "https://api.github.com/repos/jaintarun40/ChatBox", "Date": "2017-04-02T07:53:05Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (conf.hasPath(\"feature\")) this.featureOfInterest = conf.getString(\"feature\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5139/buggy-version/modules.x-gsn.src.main.java.org.openiot.gsn.metadata.LSM.LSMSensorMetaData.java", "BodyUseAPI": ["com.typesafe.config.Config.getString(java.lang.String)"], "Fixed commit": "9b6f7a66fcf9bba0278ab5aa37eec123d0c9d89b", "Url": "https://api.github.com/repos/OpenIotOrg/openiot", "Date": "2014-08-18T20:57:18Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.xbmc.kore.utils.Utils.isLollipopOrLater()) { vh.dataHolder.setPosterTransitionName(vh.artView.getTransitionName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3564/buggy-version/app.src.main.java.org.xbmc.kore.ui.sections.addon.AddonsActivity.java", "BodyUseAPI": [], "Fixed commit": "d1ac0f604a6f63bd28ff0e4e351c43d68cf4483b", "Url": "https://api.github.com/repos/poisdeux/Kore", "Date": "2017-10-09T11:57:22Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.lucene.util.fst.FST<java.lang.Long>.findTargetArc(((bref.bytes[(i + (bref.offset))]) & 255),org.apache.lucene.util.fst.FST.Arc<java.lang.Long>,org.apache.lucene.util.fst.FST.Arc<java.lang.Long>,org.apache.lucene.util.fst.FST.BytesReader)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (retArc == null) { org.warcbase.data.UriMapping.LOG.info((\"No matched string of input prefix \" + prefix)); return new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6/buggy-version/src.main.java.org.warcbase.data.UriMapping.java", "BodyUseAPI": [], "Fixed commit": "7fc1b92d60a7ae0fe220184c19434f3941d74645", "Url": "https://api.github.com/repos/Jeffyrao/warcbase", "Date": "2014-06-05T01:37:05Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (in != null) in.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3898/buggy-version/sensorhub-core.src.main.java.org.sensorhub.utils.NativeClassLoader.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "6052abc592130763f5470a1da599bfb87e1e550e", "Url": "https://api.github.com/repos/opensensorhub/osh-core", "Date": "2017-07-19T19:19:32Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (out != null) out.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3898/buggy-version/sensorhub-core.src.main.java.org.sensorhub.utils.NativeClassLoader.java", "BodyUseAPI": ["java.io.OutputStream.close()"], "Fixed commit": "6052abc592130763f5470a1da599bfb87e1e550e", "Url": "https://api.github.com/repos/opensensorhub/osh-core", "Date": "2017-07-19T19:19:32Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offsetInFile < 0) throw new torrent.TorrentException((\"Cannot seek to position: \" + offsetInFile));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8569/buggy-version/torrent.download.files.Piece.java", "BodyUseAPI": [], "Fixed commit": "804d17e28f51fd51c1de76fd52da60484a5ea157", "Url": "https://api.github.com/repos/Johnnei/JavaTorrent", "Date": "2013-01-15T21:01:29Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.motechproject.server.svc.RegistrarBean.getEncounters(org.openmrs.Patient,MotechConstants.ENCOUNTER_TYPE_PATIENTREGVISIT,patient.getBirthdate())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((encounters == null) || (encounters.isEmpty())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8850/buggy-version/motech-server-core.src.main.java.org.motechproject.server.service.impl.RegistrationRequirement.java", "BodyUseAPI": [], "Fixed commit": "b5e34a1b0d4b937e1e2048b96f8e82f9d5818eee", "Url": "https://api.github.com/repos/motech/MOTECH-Ghana", "Date": "2011-06-02T06:34:39Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edtTitle.getText().toString().trim().equals(\"\")) { currentNote.setTitle(\"Untitle\"); }else { currentNote.setTitle(edtTitle.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2480/buggy-version/app.src.main.java.com.baunvb.note.activity.fragments.EditNoteFragment.java", "BodyUseAPI": ["com.baunvb.note.activity.fragments.EditNoteFragment.getText()", "edtTitle.getText().toString()", "com.baunvb.note.activity.fragments.EditNoteFragment.setTitle(edtTitle.getText().toString())"], "Fixed commit": "31faf4f139f1f0f0131ae31aa7e1058e5a887467", "Url": "https://api.github.com/repos/baunvb/Note", "Date": "2017-06-14T12:40:42Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (edtTitle.getText().toString().trim().equals(\"\")) { title = \"Untitle\"; }else { title = edtTitle.getText().toString().trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2480/buggy-version/app.src.main.java.com.baunvb.note.activity.fragments.CreateNoteFragment.java", "BodyUseAPI": ["edtTitle.getText().toString()", "com.baunvb.note.activity.fragments.CreateNoteFragment.getText()", "edtTitle.getText().toString().trim()"], "Fixed commit": "31faf4f139f1f0f0131ae31aa7e1058e5a887467", "Url": "https://api.github.com/repos/baunvb/Note", "Date": "2017-06-14T12:40:42Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (counter < 11) { g.setColor(java.awt.Color.WHITE); vbtetris.VBTetrisFontUtils.drawCenteredString(formatHighScoreEntry(counter, name, score), (((FRAME_WIDTH_PX) / 2) - 210), (yPos / 2), 420, ((yPos + 175) + ((int) (lineHeight * ((lineNum)++)))), g); counter++; lineNum += 1.3; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1149/buggy-version/src.vbtetris.VBTetrisPauseScreen.java", "BodyUseAPI": ["vbtetris.VBTetrisPauseScreen.formatHighScoreEntry(int,java.lang.String,double)", "vbtetris.VBTetrisFontUtils.drawCenteredString(java.lang.String,int,int,int,int,java.awt.Graphics)"], "Fixed commit": "372d5cd0c52d4eb353f64f0da757025974465860", "Url": "https://api.github.com/repos/robblamb/VBTetris", "Date": "2013-11-24T09:06:39Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data) == null) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/373/buggy-version/core.src.main.java.org.bitcoinj.script.ScriptChunk.java", "BodyUseAPI": [], "Fixed commit": "cdd7567426a378c7f898d07f622f91b6a23b9262", "Url": "https://api.github.com/repos/mikehearn/bitcoinj", "Date": "2014-11-14T12:58:46Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((typeElement.getAnnotation(io.sundr.builder.annotations.Buildable.class)) != null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/9216/buggy-version/annotations.src.main.java.io.sundr.builder.internal.functions.overrides.ToBuildableJavaType.java", "BodyUseAPI": [], "Fixed commit": "22370cd142299fd349252fc6ba8feb88eda4a8ee", "Url": "https://api.github.com/repos/iocanel/sundrio", "Date": "2015-08-05T16:58:58Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mViewPager) != null) mViewPager.setCurrentItem(mFirstPosition);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8785/buggy-version/app.src.main.java.me.czmc.viewpagerindicator.ViewPagerIndicator.java", "BodyUseAPI": [], "Fixed commit": "72a9b7b9edf1b9548ff6b6c472b92436bb26cf2a", "Url": "https://api.github.com/repos/czmc/ViewPagerIndicator", "Date": "2016-03-27T20:20:08Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (fragmentTransaction.isEmpty()) { myFragment = new edu.gonzaga.textsecretary.ServiceListFragment(); fragmentTransaction.add(R.id.listFragmentLayout, myFragment); fragmentTransaction.commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3242/buggy-version/TextSecretary.src.edu.gonzaga.textsecretary.MainActivity.java", "BodyUseAPI": ["android.app.FragmentTransaction.add(R.id.listFragmentLayout,edu.gonzaga.textsecretary.ServiceListFragment)", "android.app.FragmentTransaction.commit()"], "Fixed commit": "54ffb8dad5e9922d15e6f5f7883bce2f0d0f4ee0", "Url": "https://api.github.com/repos/tjdfalcon/text_secretary", "Date": "2014-04-25T07:03:53Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)", "java.lang.Long.parseLong(java.lang.String)", "java.lang.Double.parseDouble(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((id < 0) || (price < 0)) || (quantity < 0)) { throw new java.lang.NumberFormatException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8525/buggy-version/POS.src.ee.ut.math.tvt.salessystem.ui.tabs.StockTab.java", "BodyUseAPI": [], "Fixed commit": "84c27b306e0f599c3ad3992f51dfd256f9dcd536", "Url": "https://api.github.com/repos/marekpagel/unum-quadrigis", "Date": "2013-10-31T21:00:16Z"},
{"Line": "=>2518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.floor(float)", "java.lang.Math.floor(float)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((runIndexMin == 0) && (runIndexMax == 0)) { pathList.add(path); return pathList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3939/buggy-version/beam-core.src.main.java.org.esa.beam.util.ProductUtils.java", "BodyUseAPI": [], "Fixed commit": "99af429237f1131a116c5520bd227fe60a5caeae", "Url": "https://api.github.com/repos/bcdev/beam", "Date": "2013-12-05T13:06:35Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jdom.Element.getChildTextTrim(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (tmp == null) { tmp = parent.getChildText(name.toLowerCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/484/buggy-version/src.gate.plugin.learningframework.features.FeatureSpecification.java", "BodyUseAPI": [], "Fixed commit": "38ff80c5ffc0eca881814cc8d0ce17aa085d0794", "Url": "https://api.github.com/repos/GateNLP/gateplugin-LearningFramework", "Date": "2016-06-17T16:54:03Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((src.author) == null) { sb.append(\"[unknown]\", ((org.quantumbadger.redreader.common.BetterSSB.FOREGROUND_COLOR) | (org.quantumbadger.redreader.common.BetterSSB.BOLD)), rrCommentHeaderAuthorCol, 0, 1.0F); }else { sb.append(src.author, ((org.quantumbadger.redreader.common.BetterSSB.FOREGROUND_COLOR) | (org.quantumbadger.redreader.common.BetterSSB.BOLD)), rrCommentHeaderAuthorCol, 0, 1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/397/buggy-version/src.main.java.org.quantumbadger.redreader.reddit.prepared.RedditPreparedMessage.java", "BodyUseAPI": [], "Fixed commit": "83db16067258431c9eddf9fe7a116eb7fa1020e5", "Url": "https://api.github.com/repos/QuantumBadger/RedReader", "Date": "2013-04-06T13:49:20Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (PCState.Pause)) { state = PCState.Running; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/243/buggy-version/src.com.zms.zpc.emulator.PC.java", "BodyUseAPI": [], "Fixed commit": "c422cc529f6f22b32af7b8400c532443347d1e96", "Url": "https://api.github.com/repos/zms351/ZPC", "Date": "2017-07-23T04:25:26Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (concept.isInstance()) { json.set(\"isa\", concept.asInstance().type().getLabel().getValue()); }else { throw ai.grakn.util.CommonUtil.unreachableStatement((\"Unrecognised concept \" + concept)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/704/buggy-version/grakn-graql.src.main.java.ai.grakn.graql.internal.printer.JsonPrinter.java", "BodyUseAPI": ["concept.asInstance().type().getLabel()", "ai.grakn.concept.Concept.asInstance()", "concept.asInstance().type().getLabel().getValue()", "concept.asInstance().type()", "mjson.Json.set(java.lang.String,concept.asInstance().type().getLabel().getValue())", "ai.grakn.util.CommonUtil.unreachableStatement((\"Unrecognised concept \" + concept))"], "Fixed commit": "d0733143c0cb3e61c6741d3888d09678b7763b3b", "Url": "https://api.github.com/repos/fppt/grakn", "Date": "2017-06-28T09:48:50Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(zip.equals(\"\"))) { user.setZip(zip); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2875/buggy-version/src.main.java.com.theironyard.Controllers.PollzPostController.java", "BodyUseAPI": ["com.theironyard.Entities.User.setZip(java.lang.String)"], "Fixed commit": "b8c6a8945af03c3b97275f4a2d78c7fd06e4f27f", "Url": "https://api.github.com/repos/joesonghamnida/Pollz", "Date": "2016-11-10T19:49:48Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((currentPassword != null) && (newPassword1 != null)) && (newPassword2 != null)) { if ((com.theironyard.Utilities.PasswordStorage.verifyPassword(currentPassword, user.getPassword())) && (newPassword1.equals(newPassword2))) { user.setPassword(com.theironyard.Utilities.PasswordStorage.createHash(newPassword1)); } return \"redirect:/profile\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2875/buggy-version/src.main.java.com.theironyard.Controllers.PollzPostController.java", "BodyUseAPI": ["com.theironyard.Entities.User.setPassword(com.theironyard.Utilities.PasswordStorage.createHash(newPassword1))", "java.lang.String.equals(java.lang.String)", "com.theironyard.Utilities.PasswordStorage.createHash(java.lang.String)", "com.theironyard.Utilities.PasswordStorage.verifyPassword(java.lang.String,user.getPassword())"], "Fixed commit": "b8c6a8945af03c3b97275f4a2d78c7fd06e4f27f", "Url": "https://api.github.com/repos/joesonghamnida/Pollz", "Date": "2016-11-10T19:49:48Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(country.equals(\"\"))) { user.setCountry(country); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2875/buggy-version/src.main.java.com.theironyard.Controllers.PollzPostController.java", "BodyUseAPI": ["com.theironyard.Entities.User.setCountry(java.lang.String)"], "Fixed commit": "b8c6a8945af03c3b97275f4a2d78c7fd06e4f27f", "Url": "https://api.github.com/repos/joesonghamnida/Pollz", "Date": "2016-11-10T19:49:48Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(city.equals(\"\"))) { user.setCity(city); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2875/buggy-version/src.main.java.com.theironyard.Controllers.PollzPostController.java", "BodyUseAPI": ["com.theironyard.Entities.User.setCity(java.lang.String)"], "Fixed commit": "b8c6a8945af03c3b97275f4a2d78c7fd06e4f27f", "Url": "https://api.github.com/repos/joesonghamnida/Pollz", "Date": "2016-11-10T19:49:48Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.karateca.jstoolbox.assignmentstoobj.ToObjectConverter.transformVariables(java.util.List<java.lang.String>,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((transformed.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2548/buggy-version/src.com.karateca.jstoolbox.assignmentstoobj.ToObjectConverter.java", "BodyUseAPI": [], "Fixed commit": "9bf1b3ba439349c9b43a1615dca5932c139c5251", "Url": "https://api.github.com/repos/andresdominguez/jsToolbox", "Date": "2014-01-14T03:55:04Z"},
{"Line": "=>1954", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (scriptMode) { getSelectionProvider().setSelection(new org.jkiss.dbeaver.ui.editors.sql.TextSelection(errorQueryOffset, errorQueryLength)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4834/buggy-version/plugins.org.jkiss.dbeaver.core.src.org.jkiss.dbeaver.ui.editors.sql.SQLEditor.java", "BodyUseAPI": [], "Fixed commit": "43754584322cc5bc54abc198de1088faf87a8a0e", "Url": "https://api.github.com/repos/dbeaver/dbeaver", "Date": "2017-03-15T17:00:29Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(parent.isDisposed())) parent.forceFocus();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8116/buggy-version/org.eclipse.nebula.widgets.nattable.core.src.org.eclipse.nebula.widgets.nattable.edit.editor.AbstractCellEditor.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Composite.forceFocus()"], "Fixed commit": "5cd9837507f804de061db1e71c28e1c2cd92f0ba", "Url": "https://api.github.com/repos/apauzies/nebula.widgets.nattable", "Date": "2013-11-21T08:33:48Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsMenuAdd) { mWindowManager.removeView(mMenuView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5683/buggy-version/app.src.main.java.com.hardwork.fg607.relaxfinger.service.FloatingBallService.java", "BodyUseAPI": [], "Fixed commit": "da27447588933529a048673aff6096d5c51b5865", "Url": "https://api.github.com/repos/fg607/RelaxFinger", "Date": "2016-04-11T05:38:25Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBellRepeater) != null) { mBellRepeater.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3619/buggy-version/src.com.ftechz.DebatingTimer.AlertManager.java", "BodyUseAPI": [], "Fixed commit": "8445876adf62061a27fe8ea1982b0a20b28022e9", "Url": "https://api.github.com/repos/czlee/debatekeeper", "Date": "2012-05-13T10:32:49Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((MainActivity.mSocket) == null) { MainActivity.mSocket = new com.example.taek.commutingchecker.utils.SocketIO(getActivity()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7576/buggy-version/app.src.main.java.com.example.taek.commutingchecker.ui.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "6142b364c3f316482208033c40ddd2908d84b19d", "Url": "https://api.github.com/repos/eldbxor/CommutingChecker", "Date": "2016-11-16T17:54:44Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (0 < (getProceduresStopping())) { io.github.scrier.opus.nuke.task.NukeTasks.log.info(((\"Issued stop command to \" + (getProceduresStopping())) + \" procedures, waiting for done.\")); setStopCommand(command); }else { io.github.scrier.opus.nuke.task.NukeTasks.log.info(\"All procedures stopped, updating command.\"); command.setState(CommandState.DONE); updateEntry(getStopCommand()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2674/buggy-version/nuke.src.main.java.io.github.scrier.opus.nuke.task.NukeTasks.java", "BodyUseAPI": [], "Fixed commit": "4f0f3c2c302af89ae776abc340ac89ab92423180", "Url": "https://api.github.com/repos/Scrier/opus", "Date": "2014-12-17T10:42:43Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (preferLongerTerms) { com.github.triceo.robozonky.strategy.StrategyBuilder.LOGGER.debug(\"Rating '{}' will prefer longer terms.\", r.getCode()); }else { com.github.triceo.robozonky.strategy.StrategyBuilder.LOGGER.debug(\"Rating '{}' will prefer shorter terms.\", r.getCode()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5762/buggy-version/robozonky-core.src.main.java.com.github.triceo.robozonky.strategy.StrategyBuilder.java", "BodyUseAPI": [], "Fixed commit": "216e38042a838c86f5e95071d0c7e88b8aa86a1f", "Url": "https://api.github.com/repos/RoboZonky/robozonky", "Date": "2016-06-04T08:26:34Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (canonicalizedName.equals(\"select\")) { return org.apache.hadoop.hive.ql.security.authorization.Privilege.PrivilegeType.SELECT; }else if (canonicalizedName.equals(\"show_database\")) { return org.apache.hadoop.hive.ql.security.authorization.Privilege.PrivilegeType.SHOW_DATABASE; }else if (canonicalizedName.equals(\"grant\")) { return org.apache.hadoop.hive.ql.security.authorization.Privilege.PrivilegeType.GRANT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1400/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.security.authorization.Privilege.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "ebaa67f17d04135b4284b398669faeffd0aa1130", "Url": "https://api.github.com/repos/dianping/hive", "Date": "2013-10-11T02:54:55Z"},
{"Line": "=>537", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.hive.ql.session.SessionState.getHiveOperation()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((((op.equals(HiveOperation.GRANT_PRIVILEGE)) || (op.equals(HiveOperation.REVOKE_PRIVILEGE))) || (op.equals(HiveOperation.CREATEROLE))) || (op.equals(HiveOperation.DROPROLE))) || (op.equals(HiveOperation.GRANT_ROLE))) || (op.equals(HiveOperation.REVOKE_ROLE))) { ss.getAuthorizer().authorize(op.getInputRequiredPrivileges(), op.getOutputRequiredPrivileges()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1400/buggy-version/ql.src.java.org.apache.hadoop.hive.ql.Driver.java", "BodyUseAPI": ["org.apache.hadoop.hive.ql.plan.HiveOperation.getOutputRequiredPrivileges()", "ss.getAuthorizer().authorize(op.getInputRequiredPrivileges(),op.getOutputRequiredPrivileges())", "org.apache.hadoop.hive.ql.plan.HiveOperation.getInputRequiredPrivileges()"], "Fixed commit": "ebaa67f17d04135b4284b398669faeffd0aa1130", "Url": "https://api.github.com/repos/dianping/hive", "Date": "2013-10-11T02:54:55Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (referenceInserted) { return super.getCommand(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3445/buggy-version/src.main.java.de.adrodoc55.minecraft.mpl.ReferencingCommand.java", "BodyUseAPI": [], "Fixed commit": "ec88871eaf4579da8de78094a1cd309feb1de360", "Url": "https://api.github.com/repos/Adrodoc/MPL", "Date": "2016-02-14T03:05:58Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (handler != null) { handler.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2283/buggy-version/engine.src.main.java.com.datatorrent.stram.plan.logical.DAGChangeTransactionImpl.java", "BodyUseAPI": ["com.datatorrent.stram.plan.logical.DAGChangeHandler.start()"], "Fixed commit": "78726acef189f6148aa32664de472a569b6465e0", "Url": "https://api.github.com/repos/tushargosavi/apex-core", "Date": "2017-04-13T12:54:04Z"},
{"Line": "=>450", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (handler != null) { handler.end(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2283/buggy-version/engine.src.main.java.com.datatorrent.stram.plan.logical.DAGChangeTransactionImpl.java", "BodyUseAPI": ["com.datatorrent.stram.plan.logical.DAGChangeHandler.end()"], "Fixed commit": "78726acef189f6148aa32664de472a569b6465e0", "Url": "https://api.github.com/repos/tushargosavi/apex-core", "Date": "2017-04-13T12:54:04Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((myActualPosition) != newPosition) { myActualPosition = newPosition; onPositionUpdated(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6669/buggy-version/src.com.jiahaoliuliu.nearestrestaurants.NearestRestaurantsMapFragment.java", "BodyUseAPI": [], "Fixed commit": "8e67cdc35999c9f197b7f583a06ad22611d51e30", "Url": "https://api.github.com/repos/jiahaoliuliu/NearestRestaurants", "Date": "2013-12-14T20:40:28Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == 0) { lightArray.put(firstLights); }else { lightArray.put(firstLights); lightArray.put(secondLights); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/424/buggy-version/WebAndMobile.app.src.main.java.com.example.zanemayberry.webandmobile.MakeRequestTask.java", "BodyUseAPI": [], "Fixed commit": "3420579968b0cf99c43e59b7a61fdc3467bc75a5", "Url": "https://api.github.com/repos/MattIrv/rpi-lights", "Date": "2014-11-25T14:35:03Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8222/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "ae11ea382dd3e59e09e9fc2c05652a974345408d", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rX == (-1)) || (rY == (-1))) { origin = new model.NothingState(grid, rX, rY, 0); }else { origin = new model.State(grid, rX, rY, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2859/buggy-version/src.model.TooRealLocalizer.java", "BodyUseAPI": [], "Fixed commit": "6de6ca6f4ec0aa110cbd4bd37e902c9515796465", "Url": "https://api.github.com/repos/GustavSvensson3600/SuccySuccyRobot", "Date": "2017-03-29T16:25:46Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (averageSpeed <= 4) { burn = 210.8F * hours; }else if (averageSpeed <= 6) { burn = 289.0F * hours; }else if (averageSpeed <= 10) { burn = 680.0F * hours; }else if (averageSpeed <= 12) { burn = 1020.0F * hours; }else if (averageSpeed <= 18) { burn = 1360.0F * hours; }else { burn = 1700.0F * hours; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2505/buggy-version/src.com.run.stepway.SWMap.java", "BodyUseAPI": [], "Fixed commit": "751585eb66b6b9e8c9a3a261b49e0e474973507d", "Url": "https://api.github.com/repos/hanchao/stepway", "Date": "2012-10-26T02:37:44Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<com.mapit.backend.friendsApi.model.Search>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((s.getPicData()) != null) { item.setImage(s.getPicData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1144/buggy-version/app.src.main.java.com.example.MAPit.MAPit.Friend_Search_Fragment.java", "BodyUseAPI": ["com.mapit.backend.friendsApi.model.Search.getPicData()", "com.example.MAPit.Volley.data.SearchListItem.setImage(s.getPicData())"], "Fixed commit": "468514bf830370109b2904d2632527679cad1467", "Url": "https://api.github.com/repos/shubhashis-k/MAPit", "Date": "2015-03-06T20:26:42Z"},
{"Line": "=>4021", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lb.isArg) lb.idx -= 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5604/buggy-version/src.jvm.clojure.lang.Compiler.java", "BodyUseAPI": [], "Fixed commit": "e12d680a68d53250464cee7a4f040d665c7be8d9", "Url": "https://api.github.com/repos/MichaelBlume/clojure", "Date": "2015-08-31T04:27:39Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.nutz.lang.Lang.isAndroid)) { java.util.List<java.lang.String> names = org.nutz.lang.util.MethodParamNamesScaner.getParamNames(method); if (names != null) return new org.nutz.mvc.adaptor.injector.NameInjector(names.get(index), null, method.getParameterTypes()[index], null); else if (org.nutz.mvc.adaptor.AbstractAdaptor.log.isInfoEnabled()) org.nutz.mvc.adaptor.AbstractAdaptor.log.infof(\"Complie without debug info? can't deduce param name. fail back to PathArgInjector!! index=%d > %s\", index, method); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3973/buggy-version/src.org.nutz.mvc.adaptor.AbstractAdaptor.java", "BodyUseAPI": [], "Fixed commit": "4d79ef0418262e0f41833eb2dd547c7e46c8cdd8", "Url": "https://api.github.com/repos/ming300/nutz", "Date": "2014-03-17T07:28:11Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.badlogic.gdx.utils.Array<com.unlucky.battle.Move>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((randMove.type) < 2) temp = new com.unlucky.battle.Move(randMove.type, randMove.name, randMove.minDamage, randMove.maxDamage); else if ((randMove.type) == 2) temp = new com.unlucky.battle.Move(randMove.type, randMove.name, randMove.minDamage, randMove.crit); else if ((randMove.type) == 3) temp = new com.unlucky.battle.Move(randMove.type, randMove.name, randMove.minHeal, randMove.maxHeal);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2542/buggy-version/core.src.com.unlucky.battle.Moveset.java", "BodyUseAPI": [], "Fixed commit": "a411aab7fec94e9510d4c176887d33d9b05f3397", "Url": "https://api.github.com/repos/mingli1/Unlucky", "Date": "2017-11-14T21:35:23Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iddb.web.security.service.local.DbUserServiceImpl.log.isDebugEnabled()) { iddb.web.security.service.local.DbUserServiceImpl.log.debug(\"Player id {} - level {}\", player.getKey(), player.getLevel()); iddb.web.security.service.local.DbUserServiceImpl.log.debug(\"Checking level {}\", level); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/695/buggy-version/iddb-web.src.main.java.iddb.web.security.service.local.DbUserServiceImpl.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,player.getKey(),player.getLevel())", "org.slf4j.Logger.debug(java.lang.String,java.lang.Integer)"], "Fixed commit": "286b07db4a0d6587b8058e0c8f3fdb44d76b075c", "Url": "https://api.github.com/repos/codwar/ipdburt", "Date": "2011-12-07T14:56:43Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((com.felina.photographer.UUIDFactory.uuid) == null) { com.felina.photographer.UUIDFactory.uuid = java.util.UUID.randomUUID(); }else { prefs.edit().putString(Extra.UUID_PREF, com.felina.photographer.UUIDFactory.uuid.toString()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/132/buggy-version/src.com.felina.photographer.UUIDFactory.java", "BodyUseAPI": [], "Fixed commit": "b456b7cdbc63628ecedaaa086331f9f122cc169c", "Url": "https://api.github.com/repos/felina/android-lite", "Date": "2014-05-06T13:02:05Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!checked) { android.util.Log.e(\"onCheckedChanged\", \"stopService serviice\"); stopService(myEcoScreenServiceLauncherIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1707/buggy-version/src.it.giacomos.android.ecosmartscreenon.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "40995c5fd51a84cff2f2e8298d8fcd5608b9a45e", "Url": "https://api.github.com/repos/delleceste/ecosmartscreenon", "Date": "2013-12-23T19:57:58Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (intent.getAction().equals(Intent.ACTION_BOOT_COMPLETED)) { android.content.SharedPreferences sharedPrefs = context.getSharedPreferences(context.getPackageName(), Context.MODE_PRIVATE); if (sharedPrefs.getBoolean(\"BOOT_ENABLE\", true)) { android.util.Log.e(\"BootReceiver.onReceive\", \"Starting EcoScreenServiceLauncher\"); android.content.Intent myIntent = new android.content.Intent(context, it.giacomos.android.ecosmartscreenon.service.EcoScreenServiceLauncher.class); myIntent.putExtra(\"onBoot\", true); context.startService(myIntent); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1707/buggy-version/src.it.giacomos.android.ecosmartscreenon.service.BootReceiver.java", "BodyUseAPI": [], "Fixed commit": "40995c5fd51a84cff2f2e8298d8fcd5608b9a45e", "Url": "https://api.github.com/repos/delleceste/ecosmartscreenon", "Date": "2013-12-23T19:57:58Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (file.getFilesize().equals(file.getReceived())) { this.logger.debug(\"File {} has been downloaded\", siaPath.remotePath); }else { this.logger.debug(\"Still downloading {} ({} / {})\", siaPath.remotePath, file.getReceived(), file.getFilesize()); ++nFiles; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2431/buggy-version/src.main.java.io.goobox.sync.sia.CheckDownloadTask.java", "BodyUseAPI": ["org.apache.logging.log4j.Logger.debug(java.lang.String,siaPath.remotePath,file.getReceived(),file.getFilesize())", "io.goobox.sync.sia.client.api.model.InlineResponse20010Downloads.getReceived()", "io.goobox.sync.sia.client.api.model.InlineResponse20010Downloads.getFilesize()"], "Fixed commit": "bb48b81ceb0ac7851b4bf14395a2af9fc71896b5", "Url": "https://api.github.com/repos/GooBox/goobox-sync-sia", "Date": "2017-11-18T00:15:21Z"},
{"Line": "=>470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["json.getJSONArray(\"data\").getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (data.getJSONObject(\"data\").has(\"key\")) { key = data.getJSONObject(\"data\").getString(\"key\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/4724/buggy-version/src.io.filepicker.FilePickerAPI.java", "BodyUseAPI": ["data.getJSONObject(\"data\").getString(java.lang.String)", "org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "1630f7f8c32cff1a4aca7fe893f8b63849d542c2", "Url": "https://api.github.com/repos/Filepicker/filepicker-android", "Date": "2013-03-07T23:07:49Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ac.robinson.mediaphone.provider.FrameAdapter.getCursor()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cursor.isClosed()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/9062/buggy-version/src.ac.robinson.mediaphone.view.HorizontalListView.java", "BodyUseAPI": [], "Fixed commit": "213d8c814c027559d0f60d45347a3e83ebb1f709", "Url": "https://api.github.com/repos/communitymedia/mediaphone", "Date": "2013-06-04T20:18:34Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(localisationDirectory.exists())) localisationDirectory.mkdirs();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7201/buggy-version/src.main.java.me.arno.multilanguage.LocalisationAPI.java", "BodyUseAPI": [], "Fixed commit": "0eb7723fc972e6f0cffc0744341b0ca13d057148", "Url": "https://api.github.com/repos/anerach/MultiLanguage", "Date": "2012-05-27T12:11:21Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageViews) == null) initAvatarViews(maxViewCount);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7972/buggy-version/lib.src.main.java.com.shamilov.imagemore.ImageMore.java", "BodyUseAPI": [], "Fixed commit": "f341c69bd00cf114a2fd201af37a7f6fc2214906", "Url": "https://api.github.com/repos/AppliKey/ImageMore", "Date": "2017-03-10T16:14:07Z"},
{"Line": "=>461", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isChecked) { if (selected.contains(selectedVoucher)) { selected.remove(selectedVoucher); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1446/buggy-version/src.com.vanderbilt.isis.chew.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "0733f8cf7f95815d996080d2a380c3d2cbe307e8", "Url": "https://api.github.com/repos/Vylegzv/CHEW-app", "Date": "2014-08-19T03:48:57Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gsingh.learnkirtan.ui.shabadeditor.tableeditor.UndoTableModel.getValueAt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((oldValue == null) && (value.equals(\"\"))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7241/buggy-version/src.gsingh.learnkirtan.ui.shabadeditor.tableeditor.UndoTableModel.java", "BodyUseAPI": [], "Fixed commit": "0debfbf03302ba6430bc125e7f2b0d79ecd60a0e", "Url": "https://api.github.com/repos/gsingh93/Learn-Kirtan", "Date": "2013-02-17T08:29:31Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (notifyObserver) observer.notifyPlayerLeft(player);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1197/buggy-version/DistributedCAHServer.src.game.Players.java", "BodyUseAPI": [], "Fixed commit": "1f24f9465d8a90d22ac9dce82c5967620d2c2a85", "Url": "https://api.github.com/repos/SilasBerger/distributed-cards-against-humanity", "Date": "2015-06-13T14:48:36Z"},
{"Line": "=>940", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((estimatedRowWidth) == 0) { estimatedRowWidth = 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3907/buggy-version/exec.java-exec.src.main.java.org.apache.drill.exec.physical.impl.xsort.managed.ExternalSortBatch.java", "BodyUseAPI": [], "Fixed commit": "98fcf2424040bb75a037f7e4611e5a426af8c7fe", "Url": "https://api.github.com/repos/paul-rogers/drill", "Date": "2017-02-17T07:54:01Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rotationAroundCenter) >= 360) { rotationAroundCenter -= 360; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6255/buggy-version/src.main.java.extendedrenderer.particle.entity.EntityRotFX.java", "BodyUseAPI": [], "Fixed commit": "ab8cb16ec14fa7da4fbb8d1ddd5f28eea5f1d02a", "Url": "https://api.github.com/repos/Corosauce/CoroUtil", "Date": "2017-06-09T19:16:26Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (authorizer != null) { repl.setAuthorizer(authorizer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2036/buggy-version/src.main.java.com.couchbase.cblite.CBLManager.java", "BodyUseAPI": ["com.couchbase.cblite.replicator.CBLReplicator.setAuthorizer(com.couchbase.cblite.auth.CBLAuthorizer)"], "Fixed commit": "b06a4476d659ecc1d5b1bf4d70aedf02ce43e1c0", "Url": "https://api.github.com/repos/couchbase/couchbase-lite-android-core", "Date": "2013-08-29T22:11:49Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (emp == null) return new org.restlet.ext.json.JsonRepresentation(\"{\\\"message\\\":\\\"user not found\\\"}\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7159/buggy-version/src.com.pj3.pos_manager.router.UserRouter.java", "BodyUseAPI": [], "Fixed commit": "4681ae17cb42a9584a11ad7cc4013c00517cbc91", "Url": "https://api.github.com/repos/tuanict/POS_Manager", "Date": "2014-11-30T09:44:18Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(context.inState(State.VARIABLE))) { context.addTokenAndResetText(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7308/buggy-version/basheditor-plugin.src.main.java.de.jcup.basheditor.scriptmodel.TokenParser.java", "BodyUseAPI": ["de.jcup.basheditor.scriptmodel.ParseContext.addTokenAndResetText()"], "Fixed commit": "4f819aa39ddfd11214d23ffdf7d996215268e360", "Url": "https://api.github.com/repos/de-jcup/eclipse-bash-editor", "Date": "2017-09-15T22:09:27Z"},
{"Line": "=>727", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.contains(\"/results\")) { url = url.replace(\"+\", \"%20\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8314/buggy-version/app.src.main.java.cz.martykan.webtube.MainActivity.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "e7d2a1015bdc344b4a8fa5fa84b7b6a33ccabf88", "Url": "https://api.github.com/repos/martykan/webTube", "Date": "2016-02-13T09:02:16Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (value[1].startsWith(\"[\")) { dataPoints.add(new org.kairosdb.client.builder.CustomDataPoint<java.lang.String>(timestamp, value[1], null)); }else if (value[1].contains(\".\")) { dataPoints.add(new org.kairosdb.client.builder.DoubleDataPoint(timestamp, java.lang.Double.parseDouble(value[1]))); }else { dataPoints.add(new org.kairosdb.client.builder.LongDataPoint(timestamp, java.lang.Long.parseLong(value[1]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8536/buggy-version/src.main.java.org.kairosdb.client.response.Results.java", "BodyUseAPI": [], "Fixed commit": "9cc97f704ac88c30c8d8f53e8cb65c6e4bd0830e", "Url": "https://api.github.com/repos/codyaray/kairosdb-client", "Date": "2014-03-11T16:31:08Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLocalBroadcastManager) != null) { mLocalBroadcastManager.unregisterReceiver(mThirdReceiver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7094/buggy-version/app.src.main.java.huyifei.mymvp.broadcastreceiver.BroadcastReceiverActivity.java", "BodyUseAPI": [], "Fixed commit": "58ef452d55733ed4480b27dd0d3529e6746ff077", "Url": "https://api.github.com/repos/REBOOTERS/My-MVP", "Date": "2017-10-12T09:25:23Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeSinceLastPowerRequest) < (java.lang.Integer.MAX_VALUE)) { (timeSinceLastPowerRequest)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/9090/buggy-version/src.main.java.cyano.electricadvantage.machines.GrowthChamberControllerTileEntity.java", "BodyUseAPI": [], "Fixed commit": "e691c8a47350d22fbb6ac11f25067f0038679dac", "Url": "https://api.github.com/repos/cyanobacterium/ElectricAdvantage", "Date": "2015-09-18T21:24:33Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Integer, java.util.Map<java.lang.Integer, T>>.get(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (elements != null) { return new java.util.ArrayList<>(elements.values()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8917/buggy-version/src.main.java.de.fhbingen.wbs.dbaccess.repositories.core.ParentToElementMappedCache.java", "BodyUseAPI": ["java.util.Map<java.lang.Integer, T>.values()"], "Fixed commit": "dfc4ce9f6077e2d4b869b82a7dbca6af3e65ae7e", "Url": "https://api.github.com/repos/jdepoix/WBS-Project", "Date": "2016-06-02T20:22:32Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPlayListListener.getSelectedGroup()) > (-1)) selectSong();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1131/buggy-version/ovaFlow.src.main.java.com.ovaflow.app.activity.SongSelectActivity.java", "BodyUseAPI": [], "Fixed commit": "d821bc4b06a461b8a41f4c911b25929bf1de0692", "Url": "https://api.github.com/repos/r2ysxu/OvaFlow-Android", "Date": "2014-07-14T06:41:26Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.contains(\"/summary/\")) r = new com.google.gson.GsonBuilder().setPrettyPrinting().create().fromJson(jsonString, org.apache.falcon.regression.core.response.InstancesSummaryResult.class); else r = new com.google.gson.GsonBuilder().setPrettyPrinting().create().fromJson(jsonString, org.apache.falcon.regression.core.response.ProcessInstancesResult.class);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/870/buggy-version/merlin-core.src.main.java.org.apache.falcon.regression.core.util.InstanceUtil.java", "BodyUseAPI": [], "Fixed commit": "f0564348b51d41eca4424c9a0d4548a93c293625", "Url": "https://api.github.com/repos/rostafiychuk/falcon-regression", "Date": "2014-06-02T13:22:21Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.aroundroidgroup.astrid.googleAccounts.AroundroidDbAdapter.fetchByMail(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(cur.moveToFirst())) { cur.close(); long rowId = mDbHelper.createPeople(s); cur = mDbHelper.fetchPeople(rowId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6189/buggy-version/astrid.src.com.aroundroidgroup.astrid.googleAccounts.ManageContactsActivity.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "c5350e60b3174eed5a16f95edd8e195e5f25b3d9", "Url": "https://api.github.com/repos/AroundRoidGroup/astrid", "Date": "2011-08-14T21:15:35Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (iElementType.equals(TSTypes.LOCALVAR)) { return com.intellij.torquescript.TSSyntaxHighlighter.LOCALVARIABLE_KEYS; }else if (iElementType.equals(TSTypes.GLOBALVAR)) { return com.intellij.torquescript.TSSyntaxHighlighter.GLOBALVARIABLE_KEYS; }else if (iElementType.equals(TSTypes.COMMENT)) { return com.intellij.torquescript.TSSyntaxHighlighter.COMMENT_KEYS; }else if ((iElementType.equals(TSTypes.FUNCTION)) || (iElementType.equals(TSTypes.TAG))) { return com.intellij.torquescript.TSSyntaxHighlighter.FUNCTION_KEYS; }else if (iElementType.equals(TSTypes.ID)) { return com.intellij.torquescript.TSSyntaxHighlighter.ID_KEYS; }else if ((iElementType.equals(TSTypes.INTEGER)) || (iElementType.equals(TSTypes.FLOAT))) { return com.intellij.torquescript.TSSyntaxHighlighter.NUMBER_KEYS; }else if (iElementType.equals(TSTypes.STRING)) { return com.intellij.torquescript.TSSyntaxHighlighter.STRING_KEYS; }else if ((((((((((((((((iElementType.equals(TSTypes.IF)) || (iElementType.equals(TSTypes.ELSE))) || (iElementType.equals(TSTypes.FOR))) || (iElementType.equals(TSTypes.FOREACH))) || (iElementType.equals(TSTypes.FOREACHSTR))) || (iElementType.equals(TSTypes.WHILE))) || (iElementType.equals(TSTypes.SWITCH))) || (iElementType.equals(TSTypes.SWITCHSTR))) || (iElementType.equals(TSTypes.CASE))) || (iElementType.equals(TSTypes.BREAK))) || (iElementType.equals(TSTypes.DEFAULT))) || (iElementType.equals(TSTypes.RETURN))) || (iElementType.equals(TSTypes.DATABLOCK))) || (iElementType.equals(TSTypes.SINGLETON))) || (iElementType.equals(TSTypes.IN))) || (iElementType.equals(TSTypes.NEW))) { return com.intellij.torquescript.TSSyntaxHighlighter.KEYWORD_KEYS; }else if ((iElementType.equals(TSTypes.LPAREN)) || (iElementType.equals(TSTypes.RPAREN))) { return com.intellij.torquescript.TSSyntaxHighlighter.PARENTHESES_KEYS; }else { return com.intellij.torquescript.TSSyntaxHighlighter.EMPTY_KEYS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2423/buggy-version/src.com.intellij.torquescript.TSSyntaxHighlighter.java", "BodyUseAPI": ["com.intellij.psi.tree.IElementType.equals(TSTypes.STRING)", "com.intellij.psi.tree.IElementType.equals(TSTypes.COMMENT)", "com.intellij.psi.tree.IElementType.equals(TSTypes.ID)", "com.intellij.psi.tree.IElementType.equals(TSTypes.RETURN)", "com.intellij.psi.tree.IElementType.equals(TSTypes.GLOBALVAR)", "com.intellij.psi.tree.IElementType.equals(TSTypes.TAG)", "com.intellij.psi.tree.IElementType.equals(TSTypes.CASE)", "com.intellij.psi.tree.IElementType.equals(TSTypes.LPAREN)", "com.intellij.psi.tree.IElementType.equals(TSTypes.RPAREN)", "com.intellij.psi.tree.IElementType.equals(TSTypes.WHILE)", "com.intellij.psi.tree.IElementType.equals(TSTypes.DATABLOCK)", "com.intellij.psi.tree.IElementType.equals(TSTypes.FOREACH)", "com.intellij.psi.tree.IElementType.equals(TSTypes.NEW)", "com.intellij.psi.tree.IElementType.equals(TSTypes.IF)", "com.intellij.psi.tree.IElementType.equals(TSTypes.SINGLETON)", "com.intellij.psi.tree.IElementType.equals(TSTypes.INTEGER)", "com.intellij.psi.tree.IElementType.equals(TSTypes.IN)", "com.intellij.psi.tree.IElementType.equals(TSTypes.ELSE)", "com.intellij.psi.tree.IElementType.equals(TSTypes.FOR)", "com.intellij.psi.tree.IElementType.equals(TSTypes.FOREACHSTR)", "com.intellij.psi.tree.IElementType.equals(TSTypes.SWITCHSTR)", "com.intellij.psi.tree.IElementType.equals(TSTypes.DEFAULT)", "com.intellij.psi.tree.IElementType.equals(TSTypes.FUNCTION)", "com.intellij.psi.tree.IElementType.equals(TSTypes.BREAK)", "com.intellij.psi.tree.IElementType.equals(TSTypes.SWITCH)", "com.intellij.psi.tree.IElementType.equals(TSTypes.FLOAT)"], "Fixed commit": "159f2f42cbd3be6ef2c4718217247455203894c2", "Url": "https://api.github.com/repos/lukaspj/TorqueSense", "Date": "2014-10-30T22:02:28Z"},
{"Line": "=>1510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mcmonkey.sentinel.SentinelTrait.getGuardZone()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(pos.getWorld().equals(getLivingEntity().getWorld()))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6550/buggy-version/src.main.java.org.mcmonkey.sentinel.SentinelTrait.java", "BodyUseAPI": [], "Fixed commit": "becd1473fe04f08fdee484d3b38bf054a054e994", "Url": "https://api.github.com/repos/mcmonkey4eva/Sentinel", "Date": "2017-05-16T11:40:33Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFlash) return flash;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8219/buggy-version/src.main.java.Model.CombinationCounter.java", "BodyUseAPI": [], "Fixed commit": "d3dc6e83cf15c6e5ef33a7a2da149c66c4d9b186", "Url": "https://api.github.com/repos/Victorius/TexasHoldem_Innopolis_Group_H1", "Date": "2016-07-20T04:10:39Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (content != null) { if (keepData) { text = content.split(\"</br>\"); for (int i = 0; i < (text.length); i++) { type(org.exoplatform.selenium.platform.wiki.ELEMENT_CONTENT_WIKI_INPUT, text[i], false); waitForAndGetElement(org.exoplatform.selenium.platform.wiki.ELEMENT_CONTENT_WIKI_INPUT).sendKeys(Keys.ENTER); } }else { waitForAndGetElement(org.exoplatform.selenium.platform.wiki.ELEMENT_CONTENT_WIKI_INPUT).clear(); text = content.split(\"</br>\"); for (int i = 0; i < (text.length); i++) { type(org.exoplatform.selenium.platform.wiki.ELEMENT_CONTENT_WIKI_INPUT, text[i], false); waitForAndGetElement(org.exoplatform.selenium.platform.wiki.ELEMENT_CONTENT_WIKI_INPUT).sendKeys(Keys.ENTER); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5448/buggy-version/ui-common.src.main.java.org.exoplatform.selenium.platform.wiki.BasicAction.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "811f301448fe6493a3490f4bb0be9fd8e687bc06", "Url": "https://api.github.com/repos/exoplatform/ui-test", "Date": "2014-06-06T08:54:09Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (checkIfNotInOtherClusterFirst(hash1.getKey(), clusters, matrice)) { cluster.add(hash1.getKey()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/5483/buggy-version/src.main.java.resources.ClientResource.java", "BodyUseAPI": ["java.util.ArrayList.add(java.lang.Long)", "java.util.Map.Entry<java.lang.Long, java.util.HashMap>.getKey()"], "Fixed commit": "ac3024c91ae5364bf75b44f8a04a5bd0dc0abd4d", "Url": "https://api.github.com/repos/yletaillanter/GeoCovBackend", "Date": "2016-02-09T14:38:35Z"},
{"Line": "=>443", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (taskDeleted) { android.app.NotificationManager notificationManager = ((android.app.NotificationManager) (appContext.getSystemService(Context.NOTIFICATION_SERVICE))); notificationManager.cancel(reminderId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1760/buggy-version/workpage.src.jajimenez.workpage.logic.ApplicationLogic.java", "BodyUseAPI": [], "Fixed commit": "35e5e40652bb15291e7faf1fdb75dc0dbe31a085", "Url": "https://api.github.com/repos/jajimenez/workpage", "Date": "2016-01-23T14:56:16Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((columnValues.size()) > 0) value = columnValues.get(0).getValue();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/3989/buggy-version/Android.CloudAppStudioAndroid.src.com.cloudappstudio.data.CloudViewEntry.java", "BodyUseAPI": ["java.util.List<com.cloudappstudio.data.ColumnValue>.get(int)", "columnValues.get(0).getValue()"], "Fixed commit": "bd58cde178382117f6ad757116e2500a9b30caa3", "Url": "https://api.github.com/repos/nero2000/Amantech", "Date": "2012-05-10T14:34:28Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o instanceof world.cubes.Token) { i = ((world.cubes.Token) (o)); }else { i = ((world.cubes.GameItem) (o)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6905/buggy-version/src.world.cubes.Cube.java", "BodyUseAPI": [], "Fixed commit": "190d552d20e203457583d8aa256270663c7015ca", "Url": "https://api.github.com/repos/DomNomNom/Swen222-RiemannsCube", "Date": "2012-10-15T19:58:03Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (w != (world)) { this.world = w; for (worms.model.Worm worm : members) worm.setWorld(w); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/892/buggy-version/1314-Worms.src.worms.model.Team.java", "BodyUseAPI": ["worms.model.Worm.setWorld(worms.model.World)"], "Fixed commit": "934c597f0b2f5e39a158260bc6e5902a6465d790", "Url": "https://api.github.com/repos/MatthiasValvekens/OOP1314-Worms", "Date": "2014-05-21T13:07:43Z"},
{"Line": "=>351", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((child.getAction()) == (OsmPoint.Action.MODIFY)) { descr.setText(R.string.action_modify); }else if ((child.getAction()) == (OsmPoint.Action.DELETE)) { descr.setText(R.string.action_delete); }else if ((child.getAction()) == (OsmPoint.Action.REOPEN)) { descr.setText(R.string.action_modify); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8331/buggy-version/OsmAnd.src.net.osmand.plus.osmedit.OsmEditsFragment.java", "BodyUseAPI": ["net.osmand.plus.osmedit.OsmPoint.getAction()", "net.osmand.plus.osmedit.OsmPoint.getAction()"], "Fixed commit": "2d4a19c24c5a95b7214930179b7cf0a2c0549d26", "Url": "https://api.github.com/repos/Zahnstocher/Osmand", "Date": "2015-11-15T19:54:20Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subjectAlternativeDomainsModified) { java.lang.System.setProperty(\"mockserver.sslSubjectAlternativeNameDomains\", com.google.common.base.Joiner.on(\",\").join(allSubjectAlternativeDomains)); org.mockserver.configuration.ConfigurationProperties.rebuildKeyStore(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8924/buggy-version/mockserver-core.src.main.java.org.mockserver.configuration.ConfigurationProperties.java", "BodyUseAPI": [], "Fixed commit": "e18807888b8a972ec21c4829b9733e71a88edcfc", "Url": "https://api.github.com/repos/jamesdbloom/mockserver", "Date": "2015-04-08T20:10:28Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider.createChildCell(jetbrains.mps.openapi.editor.EditorContext,org.jetbrains.mps.openapi.model.SNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cell.getRole()) == null) { cell.setRole(link.getRoleName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/67/buggy-version/editor.editor-runtime.source.jetbrains.mps.nodeEditor.DefaultEditor.java", "BodyUseAPI": ["jetbrains.mps.openapi.editor.cells.EditorCell.setRole(link.getRoleName())"], "Fixed commit": "379629da0e133472d3065bb67508d936546577c8", "Url": "https://api.github.com/repos/JetBrains/MPS", "Date": "2015-08-10T21:01:26Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getKeyChar()) == 'c') { clearCanvas(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1676/buggy-version/src.PaintPanel.java", "BodyUseAPI": [], "Fixed commit": "93cedd28050352154f47f9e09ba8859db6083d8c", "Url": "https://api.github.com/repos/elahurd/paint-program", "Date": "2015-02-25T04:50:11Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(data.isDead(j))) { data.occupyNewPoint(x[j], y[j], action[j], j); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/8261/buggy-version/Tron.src.com.tfuruya.tron.TronGame.java", "BodyUseAPI": ["com.tfuruya.tron.TronData.occupyNewPoint(int,int,action[j],int)"], "Fixed commit": "028ed06147d3ff4bffcc22a8c44bc9176a6d1948", "Url": "https://api.github.com/repos/takfuruya/AndroidTron", "Date": "2012-07-31T06:43:15Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.roda.rodain.core.AppProperties.getConfig(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (appLanguage != null) { locale = java.util.Locale.forLanguageTag(appLanguage); }else { locale = java.util.Locale.getDefault(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1757/buggy-version/src.main.java.org.roda.rodain.core.AppProperties.java", "BodyUseAPI": ["java.util.Locale.forLanguageTag(java.lang.String)"], "Fixed commit": "f1db56386789afdc9454f46ec03d9e74f909095a", "Url": "https://api.github.com/repos/keeps/roda-in", "Date": "2016-01-20T15:57:58Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((min != (java.lang.Double.POSITIVE_INFINITY)) && (max != (java.lang.Double.NEGATIVE_INFINITY))) { checkArgument((min <= max), \"max should be greater or equal to min.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1354/buggy-version/core.src.main.java.io.opencensus.stats.Range.java", "BodyUseAPI": ["io.opencensus.stats.Range.checkArgument(boolean,java.lang.String)"], "Fixed commit": "44dff511f40c4a91e02b026be87a731e5609b7c8", "Url": "https://api.github.com/repos/songy23/instrumentation-java", "Date": "2017-07-13T17:25:59Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (xmppConnection)) { xmppConnection.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/9168/buggy-version/src.main.java.ru.hdghg.jate.model.BotUser.java", "BodyUseAPI": [], "Fixed commit": "719ba372458f663c586238541b0b9e7934d159b5", "Url": "https://api.github.com/repos/hdghg/jate", "Date": "2017-07-27T05:24:51Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2375/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "33d86342702b6056e8dca7a5f4e3c6ed9977aa66", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-11T20:38:07Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, yahoofinance.Stock>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((stock.getName()) == null) { com.udacity.stockhawk.data.PrefUtils.removeStock(context, symbol); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/1157/buggy-version/app.src.main.java.com.udacity.stockhawk.sync.QuoteSyncJob.java", "BodyUseAPI": [], "Fixed commit": "62ac33ad1fa3654930364435e52c53947a8d87c9", "Url": "https://api.github.com/repos/mslomnicki/StockHawk", "Date": "2017-05-25T20:25:01Z"},
{"Line": "=>732", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(sBack.isEmpty())) return sBack;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6783/buggy-version/src.nl.ru.util.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "1c82988792968666a32f5a7f8906d6ce090af709", "Url": "https://api.github.com/repos/ErwinKomen/CrpxProcessor", "Date": "2016-01-23T17:38:07Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (seasonInt > 0) { return ((((rootFolder + (java.io.File.separator)) + shows) + (java.io.File.separator)) + \"Season \") + seasonInt; }else if ((season != null) && ((season.length()) < 10)) { return ((((rootFolder + (java.io.File.separator)) + shows) + (java.io.File.separator)) + \"Season \") + season; }else { return (((rootFolder + (java.io.File.separator)) + shows) + (java.io.File.separator)) + \"Unknown Season\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/6591/buggy-version/app.src.main.java.downloadorganizer.xandrev.com.dofm.organizers.impl.TVShowsOrganizer.java", "BodyUseAPI": [], "Fixed commit": "794ac3d7f5d70c2a7e783cb0442407d6bed42630", "Url": "https://api.github.com/repos/alexandrev/dofm-android", "Date": "2015-02-21T15:29:15Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.telerik.dts.DtsApi.getTypeScriptTypeFromJavaType(org.apache.bcel.classfile.JavaClass,org.apache.bcel.generic.Type)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (paramTypeName.startsWith(\"java.util.function\")) { sb.append(((\"any /* \" + paramTypeName) + \"*/\")); }else { addReference(type); sb.append(paramTypeName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/9018/buggy-version/dts-generator.src.main.java.com.telerik.dts.DtsApi.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "aeb29a70b0e6a24974ae394b99b3f02b04950a83", "Url": "https://api.github.com/repos/NativeScript/android-dts-generator", "Date": "2016-10-03T12:02:23Z"},
{"Line": "=>603", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (typeName.startsWith(\"java.util.function\")) { tsType.append(((\"any /*\" + typeName) + \"*/\")); }else { tsType.append(typeName); addReference(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/9018/buggy-version/dts-generator.src.main.java.com.telerik.dts.DtsApi.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "aeb29a70b0e6a24974ae394b99b3f02b04950a83", "Url": "https://api.github.com/repos/NativeScript/android-dts-generator", "Date": "2016-10-03T12:02:23Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.Artist.find(\"byName\", track.artist).first()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (artistObj == null) { artistObj = models.Artist.find(\"byRdio_key\", track.artistKey).first(); if (artistObj == null) { artistObj = new models.Artist(); artistObj.name = track.artist; artistObj.rdio_key = track.artistKey; try { artistObj.save(); } catch (java.lang.Exception e) { play.Logger.error(\"Probably trying to save an object already saved in another thread\"); } }else { play.Logger.info(\"Found artist by key instead\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/2840/buggy-version/app.utils.RdioHelper.java", "BodyUseAPI": [], "Fixed commit": "e71263b2a52aed2885f1420cbad4a78f855674dd", "Url": "https://api.github.com/repos/eltmon/auricle", "Date": "2017-03-21T17:19:21Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((java.lang.Boolean) (object))) { if ((profileController.getAllProfiles().length) > 1) { profileController.deleteProfile(profileList.getSelected()); }else { deletionError = new com.retroMachines.ui.RetroDialog(\"\", \"Zum Spielen brauchst du ein Profil!\"); deletionError.show(stage); this.remove(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V96/7828/buggy-version/core.src.com.retroMachines.ui.screens.menus.ProfileMenuScreen.java", "BodyUseAPI": [], "Fixed commit": "5439cc675cdcc9432c51674d759d7c4df1fe3760", "Url": "https://api.github.com/repos/Die-anonymen-PSEler/game", "Date": "2015-03-18T14:19:38Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (memberManager.hasMember(member)) { memberManager.removeMember(member); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4130/buggy-version/src.main.java.me.topplethenun.tribes.TribesPlugin.java", "BodyUseAPI": ["me.topplethenun.tribes.managers.MemberManager.removeMember(me.topplethenun.tribes.data.Member)"], "Fixed commit": "9abfb3007df42aa3b4e60ff649ac4e911f114d0a", "Url": "https://api.github.com/repos/TealCube/tribes", "Date": "2015-02-01T01:47:34Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tribeManager.hasTribe(tribe)) { tribeManager.removeTribe(tribe); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4130/buggy-version/src.main.java.me.topplethenun.tribes.TribesPlugin.java", "BodyUseAPI": ["me.topplethenun.tribes.managers.TribeManager.removeTribe(me.topplethenun.tribes.data.Tribe)"], "Fixed commit": "9abfb3007df42aa3b4e60ff649ac4e911f114d0a", "Url": "https://api.github.com/repos/TealCube/tribes", "Date": "2015-02-01T01:47:34Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getScore()) != null) { holder.txtAnarCount.setText(java.lang.String.valueOf(user.getScore().getSubtotal())); }else { holder.txtAnarCount.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3026/buggy-version/CNAndroidApp.src.main.java.com.thecn.app.adapters.RosterAdapter.java", "BodyUseAPI": ["com.thecn.app.models.user.User.getScore()", "android.widget.TextView.setText(java.lang.String)", "java.lang.String.valueOf(user.getScore().getSubtotal())", "user.getScore().getSubtotal()"], "Fixed commit": "1fed66c517ce5bf698fdb5309376f1aa860c2c6a", "Url": "https://api.github.com/repos/milanmanvar/CNAndroidApp-Milan", "Date": "2016-04-13T21:59:40Z"},
{"Line": "=>375", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((activating) && (!(firstStatement))) && ((statement.getType()) != (tatami.sclaim.constructs.basic.ClaimConstructType.CONDITION))) activating = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7640/buggy-version/src.tatami.core.agent.claim.ClaimBehavior.java", "BodyUseAPI": [], "Fixed commit": "8b071144044965a5010c434cdb9bcdef6dbd0501", "Url": "https://api.github.com/repos/tATAmI-Project/tATAmI-PC", "Date": "2015-09-04T12:19:43Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kiwii.suffixtree.suffixtree.SuffixTree.traceToNode(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (node.isLeaf) { int[] res = new int[1]; res[0] = node.getStart(); return res; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7078/buggy-version/src.main.java.com.kiwii.suffixtree.suffixtree.SuffixTree.java", "BodyUseAPI": ["com.kiwii.suffixtree.suffixtree.SuffixTreeNode.getStart()"], "Fixed commit": "5b4ea29f376f94109755f885627d350896b709ad", "Url": "https://api.github.com/repos/xykid1986/suffixtree", "Date": "2014-02-20T03:46:30Z"},
{"Line": "=>233", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (completed != null) { ((net.emforge.activiti.query.CustomHistoricTaskInstanceQuery) (taskInfoQueryWrapper.getTaskInfoQuery())).finished(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8360/buggy-version/activiti-web.src.main.java.net.emforge.activiti.workflow.AbstractWorkflowTaskManager.java", "BodyUseAPI": [], "Fixed commit": "9ca33e1c65e9a1bdda5ffa8f61fdc08f3a5b2853", "Url": "https://api.github.com/repos/emdev-limited/activiti-liferay", "Date": "2015-01-30T10:56:29Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (videoView.isPlaying()) { videoView.stopPlayback(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7518/buggy-version/app.src.main.java.tuandn.com.mediatraining.Adapter.ListVideoAdapter.java", "BodyUseAPI": ["android.widget.VideoView.stopPlayback()"], "Fixed commit": "9eb0bbfa54d86ee34848999cad37544783e611bc", "Url": "https://api.github.com/repos/tuandnse02939/Final-Media-Training", "Date": "2015-07-27T10:07:06Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mercenaries.size()) == 2) { return ((\"with \" + (mercenaries.get(0).getName())) + \" and \") + (mercenaries.get(1).getName()); }else { java.lang.String out = \"\"; for (int i = 0; i < (mercenaries.size()); i++) { out += mercenaries.get(i).getName(); if (i < ((mercenaries.size()) - 2)) { out += \", \"; }else if (i == ((mercenaries.size()) - 2)) { out += \", and \"; } } return \"with \" + out; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/74/buggy-version/src.redspy.Room.java", "BodyUseAPI": ["java.util.ArrayList<redspy.Mercenary>.size()", "mercenaries.get(1).getName()", "java.util.ArrayList<redspy.Mercenary>.get(int)", "mercenaries.get(0).getName()", "java.util.ArrayList<redspy.Mercenary>.get(int)", "java.util.ArrayList<redspy.Mercenary>.size()", "mercenaries.get(i).getName()", "java.util.ArrayList<redspy.Mercenary>.size()", "java.util.ArrayList<redspy.Mercenary>.get(int)"], "Fixed commit": "60164ca5533304be08d0c47861a55cb45438a5bc", "Url": "https://api.github.com/repos/gretchenfrage/RedSpy", "Date": "2015-11-01T02:44:39Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.ss.usermodel.Sheet.getRow(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (row2 == null) { logger.warn(\"\u8df3\u8fc7\u884c\uff1a{}\", i); table.setRowSize(((table.getRowSize()) - 1)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7630/buggy-version/src.main.java.cn.sp.ofs.excel.Helper.java", "BodyUseAPI": [], "Fixed commit": "5cc35bec402fbe18dc182b6215dd4c4915620690", "Url": "https://api.github.com/repos/benjamin555/ohc", "Date": "2014-10-29T08:09:37Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((e.getEntity()) instanceof org.bukkit.entity.Player)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/318/buggy-version/src.main.java.net.snailz.karma.listeners.DamageListener.java", "BodyUseAPI": [], "Fixed commit": "ef946936987d555f4ba3a08059f35111961f85ce", "Url": "https://api.github.com/repos/SnailzDev/Karma", "Date": "2017-12-15T16:25:53Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((phone.length()) != 10) { response.sendRedirect(\"contractorCreateAccount.html\"); }else { try { statement = conn.createStatement(); customerResult = statement.executeQuery(((\"SELECT * FROM Customer WHERE email=\\'\" + email) + \"\\'\")); boolean customerFound = customerResult.next(); contractorResult = statement.executeQuery(((\"SELECT * FROM Contractor WHERE email=\\'\" + email) + \"\\'\")); boolean contractorFound = contractorResult.next(); adminResult = statement.executeQuery(((\"SELECT * FROM Admin WHERE email=\\'\" + email) + \"\\'\")); boolean adminFound = adminResult.next(); if (((!customerFound) && (!contractorFound)) && (!adminFound)) { java.lang.String statString = \"INSERT INTO Contractor (`email`, `password`, `company`\" + \", `phone`, `info`) VALUES (?, MD5(?), ?, ?, ?)\"; stat = conn.prepareStatement(statString); stat.setString(1, email); stat.setString(2, password); stat.setString(3, company); stat.setString(4, phone); stat.setString(5, info); stat.executeUpdate(); contractor.login(email, password, out, request); response.sendRedirect(\"contractorProfile\"); }else { response.sendRedirect(\"contractorCreateAccount.html\"); } } catch (java.sql.SQLException ex) { out.println(\"SQLException in Query.java\"); ex.printStackTrace(out); } finally { DBUtilities.closeResultSet(contractorResult); DBUtilities.closeResultSet(customerResult); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8345/buggy-version/src.java.contractorCreateAccount.java", "BodyUseAPI": ["java.sql.PreparedStatement.setString(int,java.lang.String)"], "Fixed commit": "cf79866fbc1cf26ba03eba1e7a42f359316f0cf4", "Url": "https://api.github.com/repos/matthewtylerwood/LaurensList", "Date": "2013-11-20T17:06:03Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["labyrinthGameState.getGameBoard().getExtraTile()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((extraTile.getType()) == (Tile.CORNER)) { if ((extraTile.getRotation()) == (Tile.UP)) { extraTileBase.setImageResource(R.drawable.tile_corner_rot_0); }else if ((extraTile.getRotation()) == (Tile.RIGHT)) { extraTileBase.setImageResource(R.drawable.tile_corner_rot_1); }else if ((extraTile.getRotation()) == (Tile.DOWN)) { extraTileBase.setImageResource(R.drawable.tile_corner_rot_2); }else if ((extraTile.getRotation()) == (Tile.LEFT)) { extraTileBase.setImageResource(R.drawable.tile_corner_rot_3); } }else if ((extraTile.getType()) == (Tile.TEE)) { if ((extraTile.getRotation()) == (Tile.UP)) { extraTileBase.setImageResource(R.drawable.tile_cross_rot_3); }else if ((extraTile.getRotation()) == (Tile.RIGHT)) { extraTileBase.setImageResource(R.drawable.tile_cross_rot_0); }else if ((extraTile.getRotation()) == (Tile.DOWN)) { extraTileBase.setImageResource(R.drawable.tile_cross_rot_1); }else if ((extraTile.getRotation()) == (Tile.LEFT)) { extraTileBase.setImageResource(R.drawable.tile_cross_rot_2); } }else if ((extraTile.getType()) == (Tile.LINE)) { if ((extraTile.getRotation()) == (Tile.UP)) { extraTileBase.setImageResource(R.drawable.tile_line_rot_0); }else if ((extraTile.getRotation()) == (Tile.RIGHT)) { extraTileBase.setImageResource(R.drawable.tile_line_rot_1); }else if ((extraTile.getRotation()) == (Tile.DOWN)) { extraTileBase.setImageResource(R.drawable.tile_line_rot_0); }else if ((extraTile.getRotation()) == (Tile.LEFT)) { extraTileBase.setImageResource(R.drawable.tile_line_rot_1); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6383/buggy-version/app.src.main.java.group2.cs301.labyrinthgame.Labyrinth.LabyrinthGameHumanPlayer.java", "BodyUseAPI": ["group2.cs301.labyrinthgame.Labyrinth.Tile.getRotation()", "group2.cs301.labyrinthgame.Labyrinth.Tile.getRotation()", "group2.cs301.labyrinthgame.Labyrinth.Tile.getRotation()", "group2.cs301.labyrinthgame.Labyrinth.Tile.getRotation()", "group2.cs301.labyrinthgame.Labyrinth.Tile.getRotation()", "group2.cs301.labyrinthgame.Labyrinth.Tile.getRotation()", "group2.cs301.labyrinthgame.Labyrinth.Tile.getRotation()", "group2.cs301.labyrinthgame.Labyrinth.Tile.getRotation()", "group2.cs301.labyrinthgame.Labyrinth.Tile.getRotation()", "group2.cs301.labyrinthgame.Labyrinth.Tile.getRotation()", "group2.cs301.labyrinthgame.Labyrinth.Tile.getType()", "group2.cs301.labyrinthgame.Labyrinth.Tile.getRotation()", "group2.cs301.labyrinthgame.Labyrinth.Tile.getRotation()", "group2.cs301.labyrinthgame.Labyrinth.Tile.getType()"], "Fixed commit": "3388c5bc71a3ba4cf8ea261c4e6c625c6339bf78", "Url": "https://api.github.com/repos/CelestiaTheDryad/LabyrinthGame", "Date": "2015-12-02T05:19:14Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (commandMap == null) { this.commandTrie.put(keys, new java.util.HashMap<com.lithium3141.javastructures.pair.Range<java.lang.Integer>, com.lithium3141.OpenWarp.OWCommand>()); commandMap = this.commandTrie.get(keys); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/645/buggy-version/src.com.lithium3141.OpenWarp.OpenWarp.java", "BodyUseAPI": [], "Fixed commit": "25554f65cfdd116a267695f065c27c97789fe212", "Url": "https://api.github.com/repos/PneumatiCraft/OpenWarp", "Date": "2011-07-17T19:14:58Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_UP)) { (Body.ticksPerSecond)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2125/buggy-version/src.viperlordx.orbitsimulator.Main.java", "BodyUseAPI": [], "Fixed commit": "941166e98c5b0e26c05fe95e541d19a7af02d1e6", "Url": "https://api.github.com/repos/Redempt/OrbitSimulator", "Date": "2016-01-29T02:48:31Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((e.getKeyCode()) == (java.awt.event.KeyEvent.VK_DOWN)) { (Body.ticksPerSecond)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2125/buggy-version/src.viperlordx.orbitsimulator.Main.java", "BodyUseAPI": [], "Fixed commit": "941166e98c5b0e26c05fe95e541d19a7af02d1e6", "Url": "https://api.github.com/repos/Redempt/OrbitSimulator", "Date": "2016-01-29T02:48:31Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.toRadians(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((java.lang.Math.abs(deltaAngle)) < turnAngle) { turnAngle = java.lang.Math.abs(deltaAngle); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6703/buggy-version/Actor.java", "BodyUseAPI": ["java.lang.Math.abs(double)"], "Fixed commit": "345263ee3fa6f3e6d8f02bfe70856aef5cf20545", "Url": "https://api.github.com/repos/JGMEYER/zombiesim", "Date": "2015-02-03T18:42:56Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (arguments == null) { throw new java.lang.IllegalArgumentException(\"Al most dividend and divisor arguments was expected\"); }else if ((arguments.size()) != 2) { throw new java.lang.IllegalArgumentException(((\"Al most dividend and divisor arguments was expected, \" + (arguments.size())) + \" were supplied\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1388/buggy-version/core-rules.src.main.java.org.hisp.dhis.rules.functions.RuleFunctionModulus.java", "BodyUseAPI": ["java.util.List<java.lang.String>.size()", "java.util.List<java.lang.String>.size()"], "Fixed commit": "20ebeeb17e92247fa1d0b977d04744cb9f5ebac2", "Url": "https://api.github.com/repos/EyeSeeTea/dhis2-android-sdk", "Date": "2017-12-21T16:51:34Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.photon.phresco.util.IosSdkUtil.getMacSdksVersions(MacSdkType.iphonesimulator)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(iphoneSimSdkVersions)) { for (java.lang.String iphoneSimSdkVersion : iphoneSimSdkVersions) { com.photon.phresco.framework.param.impl.Value value = new com.photon.phresco.framework.param.impl.Value(); value.setValue(iphoneSimSdkVersion); possibleValues.getValue().add(value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4357/buggy-version/phresco-framework-impl.src.main.java.com.photon.phresco.framework.param.impl.IosSimSDKVersionsParameterImpl.java", "BodyUseAPI": [], "Fixed commit": "ebe8bee23560e07cc1003424ff6d7a31a10876c2", "Url": "https://api.github.com/repos/photon-infotech/framework", "Date": "2013-07-16T11:55:44Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((args.length) > 0) { new io.prometheus.jmx.JmxScraper(args[0], \"\", \"\", false, objectNames, new java.util.LinkedList<javax.management.ObjectName>(), new io.prometheus.jmx.JmxScraper.StdoutWriter()).doScrape(); }else { new io.prometheus.jmx.JmxScraper(\"\", \"\", \"\", false, objectNames, new java.util.LinkedList<javax.management.ObjectName>(), new io.prometheus.jmx.JmxScraper.StdoutWriter()).doScrape(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1882/buggy-version/collector.src.main.java.io.prometheus.jmx.JmxScraper.java", "BodyUseAPI": ["io.prometheus.jmx.JmxScraper.doScrape()"], "Fixed commit": "f2beaed41742458df98638ed620c020b53c03b06", "Url": "https://api.github.com/repos/prometheus/jmx_exporter", "Date": "2017-04-04T13:29:35Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.fizteh.fivt.students.LebedevAleksey.MultiFileHashMap.Database.getTable(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (table == (currentTable)) { currentTable = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2957/buggy-version/src.ru.fizteh.fivt.students.LebedevAleksey.MultiFileHashMap.Database.java", "BodyUseAPI": [], "Fixed commit": "adeeca1cbbb2ac43cf64310a2aa251d0b2347376", "Url": "https://api.github.com/repos/dkomanov/fizteh-java-2014", "Date": "2014-10-15T19:57:04Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Approx.ApproximateOptimalTardiness(double)", "EDP.findOptimalTardiness()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((edpTardiness - approxTardiness) >= (epsilon * (approx.Tmax))) && (approxTardiness != 0)) { java.lang.System.out.println(\"OH NO /n /n /n dijsfjadsfjddd\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4722/buggy-version/src.ComputeTardiness.java", "BodyUseAPI": [], "Fixed commit": "c816fefbc7b709b9b89a0789607d8c31a6faf5d9", "Url": "https://api.github.com/repos/OlivierPMaas/TUD_Advanced-Algorithms_Prog", "Date": "2017-11-07T14:02:24Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.extension.mvc.json.PortletJSONResource.attributeClass()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (attributeClass != (void.class)) { invoke = method.invoke(this, resourceRequest, resourceResponse, readObjectFromBody(resourceRequest, attributeClass)); }else { invoke = method.invoke(this, resourceRequest, resourceResponse); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5860/buggy-version/src.main.java.com.liferay.extension.mvc.MVCPortletExtended.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(com.liferay.extension.mvc.MVCPortletExtended,com.liferay.extension.mvc.ResourceRequest,com.liferay.extension.mvc.ResourceResponse,java.lang.Object)", "com.liferay.extension.mvc.MVCPortletExtended.readObjectFromBody(com.liferay.extension.mvc.ResourceRequest,java.lang.Class)"], "Fixed commit": "5ed52ec701a214533138f9b323e67f11d2e9500c", "Url": "https://api.github.com/repos/andrefabbro/liferay-ext-mvcportlet", "Date": "2016-03-18T16:54:23Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.acesinc.convergentui.content.ContentService.getDownstreamResponse()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((origBody == null) || (origBody.isEmpty())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4688/buggy-version/src.main.java.net.acesinc.convergentui.ConvergentUIFilter.java", "BodyUseAPI": [], "Fixed commit": "cf70f76b900e1fe3767ae6ea9a9828a885f28903", "Url": "https://api.github.com/repos/acesinc/convergent-ui", "Date": "2015-09-29T16:25:13Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bord.isPositionAllowed(position)) { bord.putMarkAt(position, turn.getMark()); ChangeTurn(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6547/buggy-version/src.com.games.Game.java", "BodyUseAPI": ["com.games.Bord.putMarkAt(int,turn.getMark())"], "Fixed commit": "046707990704b29d4731716abaf065fe2637a3f8", "Url": "https://api.github.com/repos/Cyberfrog/TicTacTo", "Date": "2015-03-26T11:50:02Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (forceOffset) { xp -= xOffset; yp -= yOffset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6003/buggy-version/src.graphics.Screen.java", "BodyUseAPI": [], "Fixed commit": "c2c964f328f3cfa5fee9d2c54d52003474b39beb", "Url": "https://api.github.com/repos/Bramelvix/Towny", "Date": "2017-02-13T08:50:38Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obstacle == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1723/buggy-version/src.com.kamontat.code.player.JMan.java", "BodyUseAPI": [], "Fixed commit": "c269618814aa1d575ce816f9cc5be23a6af04f18", "Url": "https://api.github.com/repos/kamontat/OOP_JMan", "Date": "2016-05-10T10:53:45Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(st.isEmpty())) { st = st.substring(0, ((st.length()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5812/buggy-version/src.main.java.com.github.phalexei.sig.Main.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "be14098a3102b14dfac774eae4dcbd3055ab18c9", "Url": "https://api.github.com/repos/Phalexei/sig", "Date": "2015-01-28T08:47:23Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ia04.model.Contender.getClosestFood()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (food != null) { if ((isAtRange(food, 1)) && ((food.quantite) > 0)) { takeFood(food); roundDone = true; }else { MoveTowards(food.x, food.y, ia04.model.Contender.MAX_DEP); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3134/buggy-version/IA04_Royal.src.ia04.model.Contender.java", "BodyUseAPI": ["ia04.model.Contender.MoveTowards(food.x,food.y,int)", "ia04.model.Contender.isAtRange(ia04.model.Nourriture,int)", "ia04.model.Contender.takeFood(ia04.model.Nourriture)"], "Fixed commit": "e5da504e8d3e0233e5b93c97a47c91357e28a05d", "Url": "https://api.github.com/repos/achamaux/IA04_Projet", "Date": "2017-06-06T16:21:41Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ve.getLocator().getNode()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (node != null) { if (org.docx4j.jaxb.JaxbValidationEventHandler.MICROSOFT_DRAWING_EXTENSION_NS.equals(node.getNamespaceURI())) { shouldContinueLocal = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5310/buggy-version/src.main.java.org.docx4j.jaxb.JaxbValidationEventHandler.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "org.w3c.dom.Node.getNamespaceURI()"], "Fixed commit": "e64743143d8307f4b576542328f64c30c728bbff", "Url": "https://api.github.com/repos/BSI-Business-Systems-Integration-AG/docx4j", "Date": "2013-08-22T12:54:46Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owo.base.util.MediaUtil.createVideoThumbnail(java.lang.String,int,int,<nulltype>,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (bmp == null) { android.util.Log.v(\"xxx\", (\"error, video thumbnail create failed:\" + path)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2041/buggy-version/owo.src.com.owo.media.video.AbsVideoItemView.java", "BodyUseAPI": [], "Fixed commit": "3bde8217251356188e441aa46063aa5ad2cd32d3", "Url": "https://api.github.com/repos/leeowenowen/owo", "Date": "2015-03-17T02:22:52Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.eclipse.swt.widgets.Display.getDefault().isDisposed()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4007/buggy-version/Workspace.org.chaupal.jp2p.ui.jxta.src.org.chaupal.jp2p.ui.jxta.container.JxseContainerNavigator.java", "BodyUseAPI": [], "Fixed commit": "18f15b00e757680d08bf26151d96afce604a328c", "Url": "https://api.github.com/repos/chaupal/jp2p-ui", "Date": "2015-05-20T05:19:21Z"},
{"Line": "=>503", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(\"default\".equals(moduleName))) { rrp = moduleName.replace('.', '/'); if ((!(rrp.isEmpty())) && (!(rrp.endsWith(\"/\")))) { rrp = rrp + \"/\"; } }else { rrp = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/574/buggy-version/src.main.java.com.redhat.ceylon.compiler.js.JsCompiler.java", "BodyUseAPI": ["java.lang.String.replace(char,char)"], "Fixed commit": "b70d4da9a01b3f6575ab812d7c99a3ed6136ab9e", "Url": "https://api.github.com/repos/ceylon/ceylon-js", "Date": "2014-07-22T11:31:00Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.stratelia.webactiv.beans.admin.AdminController.getUserFull(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((theModifiedUser.isPropertyUpdatableByUser(property.getKey())) || ((isAdmin()) && (theModifiedUser.isPropertyUpdatableByAdmin(property.getKey())))) { theModifiedUser.setValue(property.getKey(), property.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9136/buggy-version/war-core.src.main.java.com.silverpeas.socialnetwork.myProfil.control.MyProfilSessionController.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "com.stratelia.webactiv.beans.admin.UserFull.setValue(java.lang.String,java.lang.String)"], "Fixed commit": "152cf0a95b29870fbcc8904784fe1849c433b34a", "Url": "https://api.github.com/repos/SilverTeamWork/Silverpeas-Core", "Date": "2015-08-26T09:38:01Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<pt.belele.project.data.Fixture>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(actualResult.equals(getResultType(f)))) { actualResult = getResultType(f); equals = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8192/buggy-version/src.main.java.pt.belele.project.controllers.TeamController.java", "BodyUseAPI": ["pt.belele.project.controllers.TeamController.getResultType(pt.belele.project.data.Fixture)"], "Fixed commit": "dea6cd3bb42a08f6a2e5f702bb7c6ff1b5ee440a", "Url": "https://api.github.com/repos/hemartins/belele-project", "Date": "2015-06-10T14:54:12Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (statement instanceof com.jetbrains.php.lang.documentation.phpdoc.psi.PhpDocComment) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/42/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.utils.ExpressionSemanticUtil.java", "BodyUseAPI": [], "Fixed commit": "77ffe60a38d89765aa4c087968e02e31f8339e7f", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2016-11-22T10:03:43Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.language) != null) { outState.putInt(\"CURRENT_LANG\", this.language.getId()); super.onSaveInstanceState(outState); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5406/buggy-version/app.src.main.java.uk.co.qubitssolutions.bharatradios.app.fragments.ContentListRadioFragment.java", "BodyUseAPI": [], "Fixed commit": "f87ca0fa7ea5f73f1fd7d8966db7bb0e72e03af1", "Url": "https://api.github.com/repos/vmanikandan001/bharatradios.droid", "Date": "2017-06-06T20:04:14Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (other instanceof org.cqframework.cql.elm.tracking.ClassType) { org.cqframework.cql.elm.tracking.ClassType classType = ((org.cqframework.cql.elm.tracking.ClassType) (other)); return this.equals(classType.getTupleType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6093/buggy-version/Src.java.elm.src.main.java.org.cqframework.cql.elm.tracking.TupleType.java", "BodyUseAPI": [], "Fixed commit": "52d9fa55d794f0d2829b8fd433b8afabd37447e8", "Url": "https://api.github.com/repos/cqframework/clinical_quality_language", "Date": "2015-04-21T23:26:36Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(path.equals(AssociationPath.ROOT))) { return super.getLikeProvider(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8268/buggy-version/admin.broadleaf-admin-module.src.main.java.org.broadleafcommerce.admin.server.service.handler.SkuPropertiesFilterCriterionProvider.java", "BodyUseAPI": ["org.broadleafcommerce.openadmin.server.cto.FilterCriterionProviders.getLikeProvider(com.anasoft.os.daofusion.criteria.AssociationPath)"], "Fixed commit": "61e1bfb304e9f34ff8b9782317fe1e8249c25f72", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-03-20T21:37:24Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(path.equals(AssociationPath.ROOT))) { return super.getLikeProvider(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8268/buggy-version/admin.broadleaf-admin-module.src.main.java.org.broadleafcommerce.admin.server.service.handler.SkuPropertiesFilterCriterionProvider.java", "BodyUseAPI": ["org.broadleafcommerce.openadmin.server.cto.FilterCriterionProviders.getLikeProvider(com.anasoft.os.daofusion.criteria.AssociationPath)"], "Fixed commit": "61e1bfb304e9f34ff8b9782317fe1e8249c25f72", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-03-20T21:37:24Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(path.equals(AssociationPath.ROOT))) { return super.getLikeProvider(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8268/buggy-version/admin.broadleaf-admin-module.src.main.java.org.broadleafcommerce.admin.server.service.handler.SkuPropertiesFilterCriterionProvider.java", "BodyUseAPI": ["org.broadleafcommerce.openadmin.server.cto.FilterCriterionProviders.getLikeProvider(com.anasoft.os.daofusion.criteria.AssociationPath)"], "Fixed commit": "61e1bfb304e9f34ff8b9782317fe1e8249c25f72", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-03-20T21:37:24Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(path.equals(AssociationPath.ROOT))) { return super.getLikeProvider(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8268/buggy-version/admin.broadleaf-admin-module.src.main.java.org.broadleafcommerce.admin.server.service.handler.SkuPropertiesFilterCriterionProvider.java", "BodyUseAPI": ["org.broadleafcommerce.openadmin.server.cto.FilterCriterionProviders.getLikeProvider(com.anasoft.os.daofusion.criteria.AssociationPath)"], "Fixed commit": "61e1bfb304e9f34ff8b9782317fe1e8249c25f72", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-03-20T21:37:24Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(path.equals(AssociationPath.ROOT))) { return super.getLikeProvider(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8268/buggy-version/admin.broadleaf-admin-module.src.main.java.org.broadleafcommerce.admin.server.service.handler.SkuPropertiesFilterCriterionProvider.java", "BodyUseAPI": ["org.broadleafcommerce.openadmin.server.cto.FilterCriterionProviders.getLikeProvider(com.anasoft.os.daofusion.criteria.AssociationPath)"], "Fixed commit": "61e1bfb304e9f34ff8b9782317fe1e8249c25f72", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-03-20T21:37:24Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(path.equals(AssociationPath.ROOT))) { return super.getLikeProvider(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8268/buggy-version/admin.broadleaf-admin-module.src.main.java.org.broadleafcommerce.admin.server.service.handler.SkuPropertiesFilterCriterionProvider.java", "BodyUseAPI": ["org.broadleafcommerce.openadmin.server.cto.FilterCriterionProviders.getLikeProvider(com.anasoft.os.daofusion.criteria.AssociationPath)"], "Fixed commit": "61e1bfb304e9f34ff8b9782317fe1e8249c25f72", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-03-20T21:37:24Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(path.equals(AssociationPath.ROOT))) { return super.getLikeProvider(path); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8268/buggy-version/admin.broadleaf-admin-module.src.main.java.org.broadleafcommerce.admin.server.service.handler.SkuPropertiesFilterCriterionProvider.java", "BodyUseAPI": ["org.broadleafcommerce.openadmin.server.cto.FilterCriterionProviders.getLikeProvider(com.anasoft.os.daofusion.criteria.AssociationPath)"], "Fixed commit": "61e1bfb304e9f34ff8b9782317fe1e8249c25f72", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2013-03-20T21:37:24Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((date.get(java.util.Calendar.MINUTE)) < 10) eventTime = ((\"\" + (date.get(java.util.Calendar.HOUR))) + \":0\") + (date.get(java.util.Calendar.MINUTE)); else eventTime = ((\"\" + (date.get(java.util.Calendar.HOUR))) + \":\") + (date.get(java.util.Calendar.MINUTE));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5906/buggy-version/src.CalendarApp.app.src.main.java.team2.calendarapp.CreateEvent.java", "BodyUseAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)", "java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Fixed commit": "6fd798ff88d84202371e15a3aeb1da7b4177487e", "Url": "https://api.github.com/repos/iqbalyarkhan/3354-team2--", "Date": "2017-12-04T04:45:57Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["team2.calendarapp.Event.getStart()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((date.get(java.util.Calendar.MINUTE)) < 10) eventTime = ((\"\" + (date.get(java.util.Calendar.HOUR))) + \":0\") + (date.get(java.util.Calendar.MINUTE)); else eventTime = ((\"\" + (date.get(java.util.Calendar.HOUR))) + \":\") + (date.get(java.util.Calendar.MINUTE));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5906/buggy-version/src.CalendarApp.app.src.main.java.team2.calendarapp.CreateEvent.java", "BodyUseAPI": ["java.util.Calendar.get(int)", "java.util.Calendar.get(int)", "java.util.Calendar.get(int)", "java.util.Calendar.get(int)"], "Fixed commit": "6fd798ff88d84202371e15a3aeb1da7b4177487e", "Url": "https://api.github.com/repos/iqbalyarkhan/3354-team2--", "Date": "2017-12-04T04:45:57Z"},
{"Line": "=>11", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (level <= 1) { t.forward(length); t.forward((-length)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6388/buggy-version/src.ForkTree.java", "BodyUseAPI": [], "Fixed commit": "85fc9fb883bdeafec3b505b624eb07872ff1e4c6", "Url": "https://api.github.com/repos/mexryxem/EsaFinal", "Date": "2016-05-19T16:05:52Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (filesAndDirs != null) { java.util.List<java.io.File> filesDirs = java.util.Arrays.asList(filesAndDirs); for (java.io.File file : filesDirs) { result.add(file); if (!(file.isFile())) { java.util.List<java.io.File> deeperList = org.apache.sqoop.util.FileListing.getFileListingNoSort(file); result.addAll(deeperList); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7192/buggy-version/src.java.org.apache.sqoop.util.FileListing.java", "BodyUseAPI": ["java.util.Arrays.asList(java.io.File[])"], "Fixed commit": "09e6cb8cc2a7247dddec520976ae14d180005be7", "Url": "https://api.github.com/repos/happyziqi/sqoop", "Date": "2016-07-27T05:42:41Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (cardName.contains(\"//\")) cardName = cardName.substring(0, cardName.indexOf(\"//\")).trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2772/buggy-version/src.org.magic.api.decksniffer.impl.TappedOutDeckSniffer.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "ab48a06c0a1f831896920214881275ed7170650b", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-04-23T08:35:58Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((card.getMagicCard().getLoyalty()) == null) card.getMagicCard().setLoyalty(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2772/buggy-version/src.org.magic.gui.game.actions.cards.LoyaltyActions.java", "BodyUseAPI": ["org.magic.gui.game.components.DisplayableCard.getMagicCard()", "card.getMagicCard().setLoyalty(int)"], "Fixed commit": "ab48a06c0a1f831896920214881275ed7170650b", "Url": "https://api.github.com/repos/nicho92/MtgDesktopCompanion", "Date": "2017-04-23T08:35:58Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selection.startsWith(\"**\")) && (selection.endsWith(\"**\"))) { return selection.substring(2, ((selection.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2829/buggy-version/src.main.java.org.asciidoc.intellij.actions.asciidoc.MakeBold.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "1e62fb18a581e46d45bb27ace957743c8a70fc6a", "Url": "https://api.github.com/repos/bodiam/asciidoctor-intellij-plugin", "Date": "2015-11-12T20:50:56Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.inventory.web.controller.global.StoreSingleton.getInstance().getHash().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (issueDrugPatient != null) { org.openmrs.api.PatientService ps = ((org.openmrs.api.PatientService) (org.openmrs.api.context.Context.getService(org.openmrs.api.PatientService.class))); model.addAttribute(\"patientCategory\", ps.getPatient(issueDrugPatient.getPatient().getId()).getAttribute(PatientUtils.PATIENT_ATTRIBUTE_CATEGORY).getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4762/buggy-version/omod.src.main.java.org.openmrs.module.inventory.web.controller.substore.IssueDrugFormController.java", "BodyUseAPI": ["ps.getPatient(issueDrugPatient.getPatient().getId()).getAttribute(PatientUtils.PATIENT_ATTRIBUTE_CATEGORY).getValue()", "issueDrugPatient.getPatient().getId()", "ps.getPatient(issueDrugPatient.getPatient().getId()).getAttribute(PatientUtils.PATIENT_ATTRIBUTE_CATEGORY)", "org.openmrs.api.PatientService.getPatient(issueDrugPatient.getPatient().getId())", "org.openmrs.module.hospitalcore.model.InventoryStoreDrugPatient.getPatient()", "org.springframework.ui.Model.addAttribute(java.lang.String,ps.getPatient(issueDrugPatient.getPatient().getId()).getAttribute(PatientUtils.PATIENT_ATTRIBUTE_CATEGORY).getValue())"], "Fixed commit": "6d33c3a078645dca063d11508f6ca36689af9491", "Url": "https://api.github.com/repos/hispindia/inventory", "Date": "2014-05-05T07:17:41Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sejda.sambox.pdmodel.interactive.form.PDCheckBox.getExportValues()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((exportValues.size()) > 0) { return exportValues.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8642/buggy-version/src.main.java.org.sejda.sambox.pdmodel.interactive.form.PDCheckBox.java", "BodyUseAPI": ["java.util.List<java.lang.String>.get(int)"], "Fixed commit": "629e8728f98495647964ba8dc5a20eab6e25e737", "Url": "https://api.github.com/repos/torakiki/sambox", "Date": "2017-03-23T10:49:22Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (selStart <= selEnd) { currentSelection = getText().toString().substring(selStart, selEnd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1219/buggy-version/app.src.main.java.org.connectbot.TerminalView.java", "BodyUseAPI": ["getText().toString().substring(int,int)"], "Fixed commit": "3486c081892cd8e5d46bdae7a0b375346038ca4b", "Url": "https://api.github.com/repos/rhansby/connectbot", "Date": "2015-10-05T19:10:02Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) instanceof com.kduda.battleships.models.board.PlayerBoard) { if (unit instanceof com.kduda.battleships.models.board.Ship) { cell.setColorsAndSave(Colors.SHIP.getColor(), Colors.SHIP.getColor()); SoundPlayer.INSTANCE.shipPlaced(); }else if (unit instanceof com.kduda.battleships.models.board.Tank) { cell.setColorsAndSave(Colors.TANK.getColor(), Colors.TANK.getColor()); SoundPlayer.INSTANCE.tankPlaced(); }else { cell.setColorsAndSave(Colors.PLANE.getColor(), Colors.PLANE.getColor()); SoundPlayer.INSTANCE.planePlaced(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6030/buggy-version/src.com.kduda.battleships.models.board.Board.java", "BodyUseAPI": [], "Fixed commit": "0842dce9e1ea858338f588c8f71e3496dc599e80", "Url": "https://api.github.com/repos/kamilduda/battleships", "Date": "2016-01-10T17:04:30Z"},
{"Line": "=>1031", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (id.startsWith(\"Merged_GPRN\")) { id = id.substring(8); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5542/buggy-version/src.edu.ucdenver.ccp.PhenoGen.tools.analysis.GeneDataTools.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "3fb1ed12dcb91ab5ffe595ea8a077a33a328f548", "Url": "https://api.github.com/repos/TabakoffLab/PhenoGen", "Date": "2017-06-07T15:59:29Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index < (contacts.getMailTo().size())) { stringBuilder.append(contacts.getMailTo().get(index)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5967/buggy-version/app.src.main.java.com.pramont.helpme.Utils.Preferences.java", "BodyUseAPI": ["java.lang.StringBuilder.append(contacts.getMailTo().get(index))", "contacts.getMailTo().get(int)", "com.pramont.helpme.Pojos.NotificationSettings.Contact.getMailTo()"], "Fixed commit": "5e96a0d11ed402c4a362c73f48f6aa71460cfa22", "Url": "https://api.github.com/repos/anjeprol/HelpMe", "Date": "2017-04-14T22:24:08Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (index < (mProfile.getContacts().getMailTo().size())) { emailTo_et.setText(mProfile.getContacts().getMailTo().get(index)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5967/buggy-version/app.src.main.java.com.pramont.helpme.Fragments.Contacts.java", "BodyUseAPI": ["com.pramont.helpme.Pojos.NotificationSettings.UserSettings.getContacts()", "android.widget.EditText.setText(mProfile.getContacts().getMailTo().get(index))", "mProfile.getContacts().getMailTo().get(int)", "mProfile.getContacts().getMailTo()"], "Fixed commit": "5e96a0d11ed402c4a362c73f48f6aa71460cfa22", "Url": "https://api.github.com/repos/anjeprol/HelpMe", "Date": "2017-04-14T22:24:08Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["retrofit2.Response<me.proxer.library.api.ProxerResponse<T>>.body()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (proxerResponse == null) { throw new me.proxer.library.api.ProxerException(ProxerException.ErrorType.PARSING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4257/buggy-version/library.src.main.java.me.proxer.library.api.ProxerCall.java", "BodyUseAPI": [], "Fixed commit": "972b1b077270046c92549f8d4506d12f6d9cfe35", "Url": "https://api.github.com/repos/proxer/ProxerLibJava", "Date": "2017-05-15T20:08:01Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (folds.isEmpty()) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6810/buggy-version/src.org.ukiuni.report.service.ReportService.java", "BodyUseAPI": [], "Fixed commit": "68710f3348999a31051038d7b6907be2d7fd965d", "Url": "https://api.github.com/repos/ukiuni/CMS", "Date": "2014-08-19T14:21:36Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gui.util.FileBrowser.getSelectedDirectory()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (directory != null) { java.lang.String script = gui.util.ReadFile.getText(directory); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5059/buggy-version/src.gui.listener.ButtonListener.java", "BodyUseAPI": ["gui.util.ReadFile.getText(java.lang.String)"], "Fixed commit": "6777d4f6e89a4fb3c8c4d8da7adbb51015371e3c", "Url": "https://api.github.com/repos/ukupat/akt-project", "Date": "2014-05-19T13:46:00Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getScreen()) != null) getScreen().dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2387/buggy-version/src.de.onyxbits.bureauengine.BureauGame.java", "BodyUseAPI": [], "Fixed commit": "1100d7990e7acf3494d0a0883678ed468a5c5aad", "Url": "https://api.github.com/repos/onyxbits/pocketbandit", "Date": "2013-01-03T14:28:36Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cell.col) < ((grid[0].length) - 1)) { output.add(new experiment.BoardCell(cell.row, ((cell.col) + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7880/buggy-version/src.experiment.IntBoard.java", "BodyUseAPI": ["java.util.Set<experiment.BoardCell>.add(experiment.BoardCell)"], "Fixed commit": "3c7bd59ad4981b40d4a5511247941fbfa7032990", "Url": "https://api.github.com/repos/jfarmer126/CluePaths", "Date": "2016-10-03T20:46:54Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cell.row) > 0) { output.add(new experiment.BoardCell(((cell.row) - 1), cell.col)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7880/buggy-version/src.experiment.IntBoard.java", "BodyUseAPI": ["java.util.Set<experiment.BoardCell>.add(experiment.BoardCell)"], "Fixed commit": "3c7bd59ad4981b40d4a5511247941fbfa7032990", "Url": "https://api.github.com/repos/jfarmer126/CluePaths", "Date": "2016-10-03T20:46:54Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cell.row) < ((grid.length) - 1)) { output.add(new experiment.BoardCell(((cell.row) + 1), cell.col)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7880/buggy-version/src.experiment.IntBoard.java", "BodyUseAPI": ["java.util.Set<experiment.BoardCell>.add(experiment.BoardCell)"], "Fixed commit": "3c7bd59ad4981b40d4a5511247941fbfa7032990", "Url": "https://api.github.com/repos/jfarmer126/CluePaths", "Date": "2016-10-03T20:46:54Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cell.col) > 0) { output.add(new experiment.BoardCell(cell.row, ((cell.col) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7880/buggy-version/src.experiment.IntBoard.java", "BodyUseAPI": ["java.util.Set<experiment.BoardCell>.add(experiment.BoardCell)"], "Fixed commit": "3c7bd59ad4981b40d4a5511247941fbfa7032990", "Url": "https://api.github.com/repos/jfarmer126/CluePaths", "Date": "2016-10-03T20:46:54Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(map.containsKey(\"loans\"))) { log.error((\"Response doesn't have any 'loans' attribute, response string: \" + map)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5925/buggy-version/src.github.hemant.lc.request.ListedLoansRequest.java", "BodyUseAPI": ["github.hemant.lc.Log.error(java.lang.String)"], "Fixed commit": "76541af3b4d3ec3c4cd6cf52152c0276d680ff71", "Url": "https://api.github.com/repos/git-hemant/LC-automatique", "Date": "2015-01-05T01:19:48Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["github.hemant.lc.request.ListedLoansRequest.newLoans(github.hemant.lc.Log,(!(config.onlyRecentlyListed())))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (allLoans == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5925/buggy-version/src.github.hemant.lc.AutomaticInvestor.java", "BodyUseAPI": [], "Fixed commit": "76541af3b4d3ec3c4cd6cf52152c0276d680ff71", "Url": "https://api.github.com/repos/git-hemant/LC-automatique", "Date": "2015-01-05T01:19:48Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dbSession.conn) == null) { throw new org.waarp.common.database.exception.WaarpDatabaseNoConnectionException(\"Cannot connect to database\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9172/buggy-version/src.main.java.org.waarp.common.database.model.DbModelAbstract.java", "BodyUseAPI": [], "Fixed commit": "f223e47cc9a37a71551a8ac50d2731148373216a", "Url": "https://api.github.com/repos/waarp/WaarpCommon", "Date": "2014-11-17T14:52:15Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.springframework.util.StringUtils.hasText(debug))) { debug = \"false\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1449/buggy-version/src.main.java.net.northfuse.resources.config.ResourceDefinitionParser.java", "BodyUseAPI": [], "Fixed commit": "378b43e29edf0b5c1378cbb3ccbe9b15d5dd0c6d", "Url": "https://api.github.com/repos/tylersouthwick/resources-ext", "Date": "2011-09-02T01:14:48Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parkingPassVO.getLicensePlateNumber().trim().isEmpty()) { return \"Parking pass must not be empty\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/981/buggy-version/parking-management-system-backend.src.main.java.hu.unideb.rft.parkingmanagement.service.impl.ParkingPassServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "019aea2d8f1f3279d8a8ce0a6845442ad059d8fa", "Url": "https://api.github.com/repos/szimeonovn/ParkingManagementSystem", "Date": "2017-12-09T07:40:00Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tube.persistence.VideoDAO.findOne(int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((principal != null) && (video.getUser().equals(userDao.findByUsername(principal.getName())))) { videoDao.delete(video); resp.setStatus(200); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3552/buggy-version/src.main.java.tube.web.controllers.VideoController.java", "BodyUseAPI": ["tube.persistence.VideoDAO.delete(tube.entities.Video)"], "Fixed commit": "1c41cf300cb99026ad8d49fc598798d2a5395bb6", "Url": "https://api.github.com/repos/AsaReader/FinalProjectTube", "Date": "2016-10-15T19:14:06Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resumeAfterToggle) org.eztarget.vidcheroo.Engine.play();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1992/buggy-version/org.eztarget.vidcheroo.Engine.java", "BodyUseAPI": [], "Fixed commit": "48fd4e8d2ece4b453173b875b713e884901b0a5d", "Url": "https://api.github.com/repos/easytargetmixel/vidcheroo", "Date": "2014-09-08T19:58:44Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.eztarget.vidcheroo.Engine.status) == (Status.PLAYING)) { resumeAfterToggle = true; org.eztarget.vidcheroo.Engine.pause(); org.eztarget.vidcheroo.Engine.mediaFrame.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1992/buggy-version/org.eztarget.vidcheroo.Engine.java", "BodyUseAPI": [], "Fixed commit": "48fd4e8d2ece4b453173b875b713e884901b0a5d", "Url": "https://api.github.com/repos/easytargetmixel/vidcheroo", "Date": "2014-09-08T19:58:44Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (centsAmount.equals(\"\")) { centsAmount = \"0\"; }else if ((centsAmount.length()) == 1) { centsAmount += \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6516/buggy-version/WorldCurrencyConverter.app.src.main.java.com.example.ken.worldcurrencyconverter.ui.ExchangeRatesPresenter.java", "BodyUseAPI": ["java.lang.String.length()"], "Fixed commit": "1e8dc490dbf4fb9c5a923690e1089cded500aa79", "Url": "https://api.github.com/repos/kenmau/MobileChallenge", "Date": "2017-04-27T20:39:06Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progressBar) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2955/buggy-version/wechatsmallvideoview.src.main.java.com.example.wechatsmallvideoview.SurfaceVideoViewCreator.java", "BodyUseAPI": [], "Fixed commit": "60ca5df5e4ec6417895d1c55c048128eab9c2ca8", "Url": "https://api.github.com/repos/af913337456/WeChatVideoView", "Date": "2017-04-26T11:39:25Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ian.sblog.controller.PassportController.getUserByPhone(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) { msg.setErr(\"\u6b64\u7535\u8bdd\u53f7\u7801\u4e0d\u5b58\u5728\uff01\"); return msg; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2051/buggy-version/src.main.java.com.ian.sblog.controller.PassportController.java", "BodyUseAPI": [], "Fixed commit": "60f9bc6cb9e9d3cfc0f885666c021c6a883ac26d", "Url": "https://api.github.com/repos/ianzhengnan/spring-blog", "Date": "2017-09-11T10:49:13Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((onSelectionChangedListener) != null) { onSelectionChangedListener.onSelectionChanged(selStart, selEnd); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4910/buggy-version/app.src.main.java.com.satchlapp.view.EditTextCursorWatcher.java", "BodyUseAPI": [], "Fixed commit": "d6a00280c22f5e4b66ea10c936ed045cd2e0f109", "Url": "https://api.github.com/repos/Polar-Beard/satchl-android", "Date": "2017-02-17T05:03:32Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(name.startsWith(\"a4c.\"))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/684/buggy-version/alien4cloud-core.src.main.java.alien4cloud.variable.PredefinedVariables.java", "BodyUseAPI": [], "Fixed commit": "f5b9ba91ccb7ab2c7a13447455fa54c2101626cf", "Url": "https://api.github.com/repos/alien4cloud/alien4cloud", "Date": "2017-09-14T07:20:46Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.startsWith(\"a4c.application.tags.\")) { if (((application) != null) && ((application.getTags()) != null)) { java.lang.String tagName = org.apache.commons.lang3.StringUtils.removeStart(name, \"a4c.application.tags.\"); for (alien4cloud.model.common.Tag tag : application.getTags()) { if (tag.getName().equals(tagName)) { return tag.getValue(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/684/buggy-version/alien4cloud-core.src.main.java.alien4cloud.variable.PredefinedVariables.java", "BodyUseAPI": ["org.apache.commons.lang3.StringUtils.removeStart(java.lang.String,java.lang.String)"], "Fixed commit": "f5b9ba91ccb7ab2c7a13447455fa54c2101626cf", "Url": "https://api.github.com/repos/alien4cloud/alien4cloud", "Date": "2017-09-14T07:20:46Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.libbun.UMap<org.libbun.DriverCommand>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (command != null) { command.invoke(this, node, params); }else { org.libbun.Main._Exit(1, (\"unknown command: \" + cmd)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1662/buggy-version/src.org.libbun.BunDriver.java", "BodyUseAPI": ["org.libbun.DriverCommand.invoke(org.libbun.BunDriver,org.libbun.PegObject,java.lang.String[])"], "Fixed commit": "1953717cfe3ce14a07296879ef11d6383149d0c9", "Url": "https://api.github.com/repos/Y--Tamura/libbun2", "Date": "2014-07-08T17:15:33Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2634/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "6450e2989ed7f5d3311fcbe75975c9e8f30ca9fe", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>4588", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) >= 14) { hasMenuBtn = com.codename1.impl.android.ViewConfiguration.get(activity).hasPermanentMenuKey(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2713/buggy-version/Ports.Android.src.com.codename1.impl.android.AndroidImplementation.java", "BodyUseAPI": [], "Fixed commit": "a27e1eab9392ae5e9e7fb6faf75f4d67df2188b3", "Url": "https://api.github.com/repos/skyHALud/codenameone", "Date": "2013-09-01T13:08:15Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oldVersion < newVersion) && (newVersion == 8)) { db.execSQL(((((\"ALTER TABLE \" + (org.tvheadend.tvhclient.DatabaseHelper.TABLE_CONN_NAME)) + \" ADD COLUMN \") + (org.tvheadend.tvhclient.DatabaseHelper.KEY_CONN_PLAY_PROFILE_ID)) + \" INT DEFAULT 0;\")); db.execSQL(((((\"ALTER TABLE \" + (org.tvheadend.tvhclient.DatabaseHelper.TABLE_CONN_NAME)) + \" ADD COLUMN \") + (org.tvheadend.tvhclient.DatabaseHelper.KEY_CONN_REC_PROFILE_ID)) + \" INT DEFAULT 0;\")); final java.lang.String query = (((((((((((((((((((((\"CREATE TABLE IF NOT EXISTS \" + (org.tvheadend.tvhclient.DatabaseHelper.TABLE_PROFILE_NAME)) + \" (\") + (org.tvheadend.tvhclient.DatabaseHelper.KEY_PROFILE_ID)) + \" INTEGER PRIMARY KEY AUTOINCREMENT, \") + (org.tvheadend.tvhclient.DatabaseHelper.KEY_PROFILE_ENABLED)) + \" INT DEFAULT 0, \") + (org.tvheadend.tvhclient.DatabaseHelper.KEY_PROFILE_UUID)) + \" TEXT NULL, \") + (org.tvheadend.tvhclient.DatabaseHelper.KEY_PROFILE_NAME)) + \" TEXT NULL, \") + (org.tvheadend.tvhclient.DatabaseHelper.KEY_PROFILE_CONTAINER)) + \" TEXT NULL, \") + (org.tvheadend.tvhclient.DatabaseHelper.KEY_PROFILE_TRANSCODE)) + \" INT DEFAULT 0, \") + (org.tvheadend.tvhclient.DatabaseHelper.KEY_PROFILE_RESOLUTION)) + \" TEXT NULL, \") + (org.tvheadend.tvhclient.DatabaseHelper.KEY_PROFILE_AUDIO_CODEC)) + \" TEXT NULL, \") + (org.tvheadend.tvhclient.DatabaseHelper.KEY_PROFILE_VIDEO_CODEC)) + \" TEXT NULL, \") + (org.tvheadend.tvhclient.DatabaseHelper.KEY_PROFILE_SUBTITLE_CODEC)) + \" TEXT NULL);\"; db.execSQL(query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/499/buggy-version/src.org.tvheadend.tvhclient.DatabaseHelper.java", "BodyUseAPI": [], "Fixed commit": "8753b898cd9c0e140389a9d1f082e7a86b07673e", "Url": "https://api.github.com/repos/Ansa89/TVHClient", "Date": "2015-02-15T09:44:14Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (openingBalance.isGreaterThanZero()) { endOfDayBalance = openingBalance.minus(getAmount(currency)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3855/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.savings.domain.SavingsAccountTransaction.java", "BodyUseAPI": ["org.mifosplatform.organisation.monetary.domain.Money.minus(org.mifosplatform.organisation.monetary.domain.Money)"], "Fixed commit": "5d8cd54dfbc57b9883f0184ed5f861be6b35bb4c", "Url": "https://api.github.com/repos/subramanyasn/mifosx", "Date": "2013-08-12T14:23:36Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((CDMDataSet) != null) { CDMDataSet.setData(getFeatureTypeDataSet()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4330/buggy-version/src.main.java.thredds.server.sos.getObs.SOSGetObservationRequestHandler.java", "BodyUseAPI": [], "Fixed commit": "b1f90b97eabcf27afef2b4c4878c574323ac7c22", "Url": "https://api.github.com/repos/asascience-open/ncSOS", "Date": "2012-06-06T17:28:56Z"},
{"Line": "=>236", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.camel.util.ObjectHelper.isNotEmpty(ccfb.getDependsOn())) { factory2.addDependsOn(ccfb.getDependsOn()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4338/buggy-version/components.camel-blueprint.src.main.java.org.apache.camel.blueprint.handler.CamelNamespaceHandler.java", "BodyUseAPI": ["org.apache.camel.blueprint.CamelContextFactoryBean.getDependsOn()", "org.apache.aries.blueprint.mutable.MutableBeanMetadata.addDependsOn(ccfb.getDependsOn())"], "Fixed commit": "88779c4244bbadb7fe6add001f2d7e66c45c01fb", "Url": "https://api.github.com/repos/apache/camel", "Date": "2015-05-13T06:37:38Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ScoreBoard.allScoreBoards.containsKey(org.kwstudios.play.ragemode.gameLogic.PlayerList.getPlayersGame(player))) ScoreBoard.allScoreBoards.get(org.kwstudios.play.ragemode.gameLogic.PlayerList.getPlayersGame(player)).removeScoreBoard(player);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/573/buggy-version/src.org.kwstudios.play.ragemode.gameLogic.PlayerList.java", "BodyUseAPI": ["ScoreBoard.allScoreBoards.get(org.kwstudios.play.ragemode.gameLogic.PlayerList.getPlayersGame(player)).removeScoreBoard(org.bukkit.entity.Player)", "ScoreBoard.allScoreBoards.get(java.lang.String)", "org.kwstudios.play.ragemode.gameLogic.PlayerList.getPlayersGame(org.bukkit.entity.Player)"], "Fixed commit": "1d52f5322aea3580b814a425bfe355c80fe51401", "Url": "https://api.github.com/repos/KWStudios/RageMode", "Date": "2015-09-10T17:51:21Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lgallardo.youtorrentcontroller.MainActivity.getFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fragmentManager.findFragmentByTag(\"secondFragment\")) == null) { fragmentTransaction.add(R.id.content_frame, secondFragment, \"secondFragment\"); }else { fragmentTransaction.replace(R.id.content_frame, secondFragment, \"secondFragment\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3434/buggy-version/app.src.main.java.com.lgallardo.youtorrentcontroller.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c8878623b03a56129bef0b46e823a68e038f52f7", "Url": "https://api.github.com/repos/lgallard/youTorrent-Controller", "Date": "2015-09-30T02:39:14Z"},
{"Line": "=>482", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lgallardo.youtorrentcontroller.MainActivity.getFragmentManager()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fragmentManager.findFragmentByTag(\"firstFragment\")) == null) { fragmentTransaction.add(R.id.list_frame, helpTabletFragment, \"firstFragment\"); }else { fragmentTransaction.replace(R.id.list_frame, helpTabletFragment, \"firstFragment\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3434/buggy-version/app.src.main.java.com.lgallardo.youtorrentcontroller.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "c8878623b03a56129bef0b46e823a68e038f52f7", "Url": "https://api.github.com/repos/lgallard/youTorrent-Controller", "Date": "2015-09-30T02:39:14Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getRowsToShow()) == (ca.on.oicr.pde.facematcher.ScoreFragment.MAX_ROWS)) { banner.setOnTouchListener(new android.view.View.OnTouchListener() { @java.lang.Override public boolean onTouch(android.view.View v, android.view.MotionEvent event) { android.util.Log.d(FaceMatchActivity.TAG, (\"banner touched, id is \" + (gameType))); mCallback.onBannerClicked(gameType); return v.performClick(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5985/buggy-version/FaceMatcher.src.ca.on.oicr.pde.facematcher.ScoreFragment.java", "BodyUseAPI": [], "Fixed commit": "b506fb96e55b5551dca639b693044bd0159d1ac3", "Url": "https://api.github.com/repos/pruzanov/AndroidDoodling", "Date": "2014-11-11T16:34:44Z"},
{"Line": "=>347", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((output.getType().equals(EditCommand.Type.SEARCHKEYWORD)) && ((editType.size()) == 0)) { return invalidCommand(); }else { output.setEditFields(editType); return output; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8635/buggy-version/src.parser.Parser.java", "BodyUseAPI": ["shared.command.EditCommand.setEditFields(java.util.ArrayList<EditCommand.editField>)"], "Fixed commit": "7019e649e0caa6a655ff3a55c84af088ff444e23", "Url": "https://api.github.com/repos/cs2103aug2015-w14-2j/main", "Date": "2015-11-09T01:49:58Z"},
{"Line": "=>611", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.channel.ChannelHandlerContext.handler()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (handler instanceof io.netty.channel.ChannelOutboundHandler) { try { ((io.netty.channel.ChannelOutboundHandler) (handler)).freeOutboundBuffer(ctx); } catch (java.lang.Exception e) { notifyHandlerException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6761/buggy-version/transport.src.main.java.io.netty.channel.DefaultChannelPipeline.java", "BodyUseAPI": [], "Fixed commit": "a03bc6ea1dce0d2ce458e0f01c7611edadff3d70", "Url": "https://api.github.com/repos/jpinner/netty", "Date": "2013-01-14T11:48:58Z"},
{"Line": "=>604", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.netty.channel.ChannelHandlerContext.handler()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (handler instanceof io.netty.channel.ChannelInboundHandler) { try { ((io.netty.channel.ChannelInboundHandler) (handler)).freeInboundBuffer(ctx); } catch (java.lang.Exception e) { notifyHandlerException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6761/buggy-version/transport.src.main.java.io.netty.channel.DefaultChannelPipeline.java", "BodyUseAPI": [], "Fixed commit": "a03bc6ea1dce0d2ce458e0f01c7611edadff3d70", "Url": "https://api.github.com/repos/jpinner/netty", "Date": "2013-01-14T11:48:58Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useUuid) serializeTo.put(child.uuid); else serializeTo.put(child.taskId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7600/buggy-version/astrid.plugin-src.com.todoroo.astrid.subtasks.AstridOrderedListUpdater.java", "BodyUseAPI": [], "Fixed commit": "1ac305433cddca27e48ce9154fd574e8ff96d1b0", "Url": "https://api.github.com/repos/sbosley/astrid", "Date": "2013-02-11T22:59:48Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(jsonObject.isNull(com.osastudio.newshub.data.NewsAbstract.JSON_KEY_TYPE))) { result.setType(jsonObject.getInt(com.osastudio.newshub.data.NewsAbstract.JSON_KEY_TYPE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6809/buggy-version/src.com.osastudio.newshub.data.NewsAbstract.java", "BodyUseAPI": ["org.json.JSONObject.getInt(java.lang.String)", "com.osastudio.newshub.data.NewsAbstract.setType(jsonObject.getInt(com.osastudio.newshub.data.NewsAbstract.JSON_KEY_TYPE))"], "Fixed commit": "ec410085be631c7c6e0e5aeff1bc72cc8606934e", "Url": "https://api.github.com/repos/OSAStudio/newshub", "Date": "2013-09-26T08:47:31Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (create) context = openOrCreate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3716/buggy-version/blueprints-orient-graph.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientBaseGraph.java", "BodyUseAPI": [], "Fixed commit": "0f057be2c409cb687b3d20b048d8f828afef52de", "Url": "https://api.github.com/repos/nuvolabase/blueprints", "Date": "2012-09-30T18:23:21Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(hasMergedDex && (!hasPatchDex))) { java.io.File currentPatchDex = new java.io.File(dexDirectory, fastdex.common.ShareConstants.PATCH_DEX); if (((!hasPatchDex) && ((runtimeMetaInfo.getPatchDexVersion()) > 0)) && (fastdex.common.utils.FileUtils.isLegalFile(currentPatchDex))) { fastdex.common.utils.FileUtils.copyFileUsingStream(currentPatchDex, new java.io.File(workDexDirectory, fastdex.common.ShareConstants.PATCH_DEX)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3504/buggy-version/runtime.src.main.java.fastdex.runtime.fd.Server.java", "BodyUseAPI": [], "Fixed commit": "769f1bb6c007703eff188272eb44f3f4c362e495", "Url": "https://api.github.com/repos/typ0520/fastdex", "Date": "2017-09-01T10:13:19Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((patch.getBytes()) != null) && ((patch.getBytes().length) > 0)) { fastdex.common.utils.FileUtils.write2file(patch.getBytes(), new java.io.File(tempDexDir, patch.getPath())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3504/buggy-version/runtime.src.main.java.fastdex.runtime.fd.Server.java", "BodyUseAPI": ["fastdex.common.utils.FileUtils.write2file(patch.getBytes(),java.io.File)", "fastdex.runtime.fd.ApplicationPatch.getPath()", "fastdex.runtime.fd.ApplicationPatch.getBytes()"], "Fixed commit": "769f1bb6c007703eff188272eb44f3f4c362e495", "Url": "https://api.github.com/repos/typ0520/fastdex", "Date": "2017-09-01T10:13:19Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.softwaremill.common.conf.FolderPropertiesProvider.lookupConfigDirectory()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (serverConfDirectory == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3845/buggy-version/softwaremill-conf.src.main.java.pl.softwaremill.common.conf.FolderPropertiesProvider.java", "BodyUseAPI": [], "Fixed commit": "43ae95da1bbb449be4531a12aee958caa2dcd293", "Url": "https://api.github.com/repos/softwaremill/softwaremill-common", "Date": "2011-08-17T16:01:40Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getUris()) != null) { removeAllWatchContentUris(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/377/buggy-version/src.main.java.com.mridang.bluetooth.ImprovedExtension.java", "BodyUseAPI": [], "Fixed commit": "fee3c78ac3d474a8b65ead78a6efd8e22fae54fa", "Url": "https://api.github.com/repos/mridang/dashclock-bluetooth", "Date": "2015-03-29T09:08:39Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (propName == null) return new seaclouds.utils.toscamodel.impl.NodeType(this, description, java.util.Collections.emptyMap(), java.util.Collections.emptyMap());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4464/buggy-version/toscamodel.src.main.java.seaclouds.utils.toscamodel.impl.NamedNodeType.java", "BodyUseAPI": [], "Fixed commit": "b07495569acf7896f528673bd11d85c69dff8464", "Url": "https://api.github.com/repos/pqnet/tosca-yaml-parser", "Date": "2015-04-27T16:27:48Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((players.size()) == 0) { this.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8063/buggy-version/src.me.Aubli.ZvP.Game.Arena.java", "BodyUseAPI": [], "Fixed commit": "d46c4c6d4296796c46b70a66155c1af4474e483d", "Url": "https://api.github.com/repos/AlexMl/ZvP", "Date": "2014-08-24T20:23:25Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(this).getBoolean(java.lang.String,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (scrobblingEnabled) { scrobblerPlaybackStop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4241/buggy-version/src.com.teleca.jamendo.service.PlayerService.java", "BodyUseAPI": [], "Fixed commit": "e669c85a4ab40edba5a7a72c1e55dacba8679ec0", "Url": "https://api.github.com/repos/jessicabarbalho/jamendo-android", "Date": "2012-06-21T06:52:45Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subcommand.equalsIgnoreCase(\"getRating\")) { riskofdraw.getRating(args[1]); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3700/buggy-version/src.me.krenzinator.riskofdraw.commands.BasicCommands.java", "BodyUseAPI": [], "Fixed commit": "3b229838112bbc4af7f38794fff7a54f14acb802", "Url": "https://api.github.com/repos/yannik96/riskofdraw", "Date": "2017-10-30T14:35:44Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((countItem(items, Material.ARROW)) >= (me.krenzinator.riskofdraw.RiskOfDraw.ARROW_COUNT)) rating += me.krenzinator.riskofdraw.RiskOfDraw.ARROW_VALUE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3700/buggy-version/src.me.krenzinator.riskofdraw.RiskOfDraw.java", "BodyUseAPI": [], "Fixed commit": "3b229838112bbc4af7f38794fff7a54f14acb802", "Url": "https://api.github.com/repos/yannik96/riskofdraw", "Date": "2017-10-30T14:35:44Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((poll) == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5712/buggy-version/plugins-dev.teleoperation.pt.up.fe.dceg.neptus.plugins.teleoperation.ControllerPanel.java", "BodyUseAPI": [], "Fixed commit": "3262a15514b0282a852644e757efbf2ae85f6e12", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2013-11-05T13:42:59Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(c.poll())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5712/buggy-version/src.pt.up.fe.dceg.neptus.controllers.ControllerManager.java", "BodyUseAPI": [], "Fixed commit": "3262a15514b0282a852644e757efbf2ae85f6e12", "Url": "https://api.github.com/repos/LSTS/neptus", "Date": "2013-11-05T13:42:59Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["request().remoteAddress()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!(remoteAddress.equals(\"127.0.0.1\"))) && (!(remoteAddress.equals(\"0:0:0:0:0:0:0:1\")))) return unauthorized(\"This endpoint can only reached through localhost\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8743/buggy-version/app.controllers.Callbacks.java", "BodyUseAPI": [], "Fixed commit": "c4eb31ebadd4e9d7535970761fd9a2dbc3bacc43", "Url": "https://api.github.com/repos/canselcik/subsequence", "Date": "2015-05-23T07:19:25Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["A.name()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((entityName == null) || (entityName.isEmpty())) { entityName = entityType.getSimpleName(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8097/buggy-version/subprojects.client.src.main.java.com.trifork.stamdata.client.RegistryClient.java", "BodyUseAPI": [], "Fixed commit": "ebf7ea734e10c078eaa3aeeb0bc15aeca5543cd9", "Url": "https://api.github.com/repos/trifork/sdm", "Date": "2011-04-11T06:53:54Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((Gdx.app.getPreferences(\"Score\").getInteger(\"Score\")) > 0) || ((Gdx.app.getPreferences(\"Balance\").getInteger(\"Balance\")) != 0)) { this.process = -1; }else { this.process = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7188/buggy-version/core.src.com.titanicrun.game.Screens.SplashScreen.java", "BodyUseAPI": [], "Fixed commit": "0539098162643840be4d2dbb79fa22e91a89a16b", "Url": "https://api.github.com/repos/nickwhale1004/TitanicRun", "Date": "2017-06-18T16:18:35Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (inDo.isQuestion()) { inDo.setPlaceHolderToNull(); c = inDo; }else { c = new deadlybanquet.ai.Say(me, you, inDo, YESNO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5449/buggy-version/src.deadlybanquet.ai.NPCBrain.java", "BodyUseAPI": ["deadlybanquet.ai.Do.setPlaceHolderToNull()"], "Fixed commit": "6a07f0c18bc1d2c4060ce387f7b8dd83dce008b8", "Url": "https://api.github.com/repos/Mathcar/DeadlyBanquet", "Date": "2016-04-27T12:04:57Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xframium.page.data.PageData.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (treeRecord instanceof java.util.List<?>) { java.util.List<org.xframium.page.data.PageData> dataArray = ((java.util.List<org.xframium.page.data.PageData>) (treeRecord)); dataTable = dataArray.toArray(new org.xframium.page.data.PageData[0]); }else { throw new org.xframium.exception.ScriptConfigurationException((useValue + \" was found but referenced a single value rather than a list\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5191/buggy-version/framework.src.org.xframium.page.keyWord.step.spi.KWSLoop.java", "BodyUseAPI": [], "Fixed commit": "b0f5554f43499fea69fd597a3ab39fec2f0e855c", "Url": "https://api.github.com/repos/xframiumAS/xframium-java", "Date": "2017-02-10T17:24:21Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.xframium.page.data.PageData.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (treeRecord == null) throw new org.xframium.exception.ScriptConfigurationException((\"Could not locate a PageData record using \" + useValue));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5191/buggy-version/framework.src.org.xframium.page.keyWord.step.spi.KWSLoop.java", "BodyUseAPI": [], "Fixed commit": "b0f5554f43499fea69fd597a3ab39fec2f0e855c", "Url": "https://api.github.com/repos/xframiumAS/xframium-java", "Date": "2017-02-10T17:24:21Z"},
{"Line": "=>857", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.portlet.journal.service.impl.JournalFolderLocalServiceImpl.fetchFolder(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (parentFolder != null) { restrictionType = parentFolder.getRestrictionType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3969/buggy-version/portal-impl.src.com.liferay.portlet.journal.service.impl.JournalFolderLocalServiceImpl.java", "BodyUseAPI": ["com.liferay.portlet.journal.model.JournalFolder.getRestrictionType()"], "Fixed commit": "adde98416ae0616dc05bebb2bfb43c9d0568635c", "Url": "https://api.github.com/repos/ealonso/liferay-portal", "Date": "2014-04-28T18:29:17Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Method.getModifiers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.reflect.Modifier.isAbstract(modifiers)) { com.karmant.syn.sample.script.rt.value.BlockToJavaAdapter.putMethodToMap(javaInterface, method, map); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1967/buggy-version/syn-sample-script.src.com.karmant.syn.sample.script.rt.value.BlockToJavaAdapter.java", "BodyUseAPI": [], "Fixed commit": "15c1313c4a34f574ea4599ad14a227f2ab7c6f37", "Url": "https://api.github.com/repos/antkar/syn", "Date": "2014-04-13T09:49:49Z"},
{"Line": "=>557", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (totEp.equals(\"1\")) finishDate = releaseDate;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5012/buggy-version/src.util.window.AddAnimeDialog.java", "BodyUseAPI": [], "Fixed commit": "693b60f7ca08c8cd8f911b566659677093661182", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-07-23T23:22:42Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((contentCharSet) == null) { contentCharSet = org.apache.http.protocol.HTTP.UTF_8; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4341/buggy-version/src.main.java.com.francisli.processing.http.HttpResponse.java", "BodyUseAPI": [], "Fixed commit": "b33475bf44de949e55f07519e6856c3ad0f41e25", "Url": "https://api.github.com/repos/francisli/processing-restclient", "Date": "2011-11-28T19:00:59Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((N) < ((items.length) / 4)) resize(((items.length) / 2));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8881/buggy-version/deque_queue_subset.RandomizedQueue.java", "BodyUseAPI": ["RandomizedQueue<Item>.resize(int)"], "Fixed commit": "d833a7a5d245536f416d400b93749afd4c198ba1", "Url": "https://api.github.com/repos/YaMike/java_algs", "Date": "2013-09-23T17:57:43Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (words == null) { java.lang.System.out.println(\"Answers list was null?\"); java.lang.System.exit((-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8568/buggy-version/src.com.tallbluehat.Main.java", "BodyUseAPI": [], "Fixed commit": "70c02706f9316c808b5e97e42b4997b34498a4ac", "Url": "https://api.github.com/repos/DevinKott/WordsWithFriends", "Date": "2017-01-19T22:43:06Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (bitmap != null) { callback.onImageLoadResult(bitmap); }else { android.util.Log.e(\"AsyncImageLoader\", (\"FAILED (cache & http) to get bitmap from url: \" + url)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/60/buggy-version/app.src.main.java.com.sqbnet.expressassistant.utils.AsyncImageLoader.java", "BodyUseAPI": ["com.sqbnet.expressassistant.utils.AsyncImageLoader.ImageLoadResultLister.onImageLoadResult(android.graphics.Bitmap)"], "Fixed commit": "2cfae52cb129f15dac9d8ee29c2b9677feda0fc5", "Url": "https://api.github.com/repos/strawhatboy/SQBExpressAssistant", "Date": "2015-08-05T15:12:29Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.LinkedHashMap<com.sqbnet.expressassistant.utils.AsyncImageLoader.ImageLoadResultLister, java.lang.String>.remove(com.sqbnet.expressassistant.utils.AsyncImageLoader.ImageLoadResultLister)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (imageCache.containsKey(url)) { android.util.Log.d(\"AsyncImageLoader\", (\"got bitmap from cache for url: \" + url)); bitmap = imageCache.get(url).get(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/60/buggy-version/app.src.main.java.com.sqbnet.expressassistant.utils.AsyncImageLoader.java", "BodyUseAPI": ["android.util.Log.d(java.lang.String,java.lang.String)", "imageCache.get(url).get()", "java.util.HashMap<java.lang.String, java.lang.ref.SoftReference<android.graphics.Bitmap>>.get(java.lang.String)"], "Fixed commit": "2cfae52cb129f15dac9d8ee29c2b9677feda0fc5", "Url": "https://api.github.com/repos/strawhatboy/SQBExpressAssistant", "Date": "2015-08-05T15:12:29Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((webcam) == null) { java.lang.System.out.println(\"NO WEBCAM FOUND. Please check usb connections and make sure the drivers are installed\"); java.lang.System.exit(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2164/buggy-version/JHawk.src.JHawkShell.java", "BodyUseAPI": [], "Fixed commit": "838d66f833a12a4a1b73a199af85a322d6b82e00", "Url": "https://api.github.com/repos/almcken/JHawk", "Date": "2015-11-18T02:24:25Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.getOrder()) != null) && ((o.getOrder()) != null)) { return this.getOrder().compareTo(o.getOrder()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3856/buggy-version/london-hydro-api.src.main.java.com.londonhydro.api.service.impl.FormEntry.java", "BodyUseAPI": ["java.lang.Integer.compareTo(java.lang.Integer)", "com.londonhydro.api.service.impl.FormEntry.getOrder()"], "Fixed commit": "1c2219cf4d4d9b97b7a9f6a7e4eaada4eb92f5bd", "Url": "https://api.github.com/repos/umeshroy/MyWhitbyHydroMail", "Date": "2017-03-29T21:34:23Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (alreadyExported()) { writeFile(getFilePaths().getUnexportPath(), (pinNumber + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7696/buggy-version/src.main.java.beer.gpio.device.BasePin.java", "BodyUseAPI": [], "Fixed commit": "00b54f8d191af71e21614a871121853498deac1a", "Url": "https://api.github.com/repos/sebykrueger/PiBeerController", "Date": "2013-11-24T01:53:05Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileCount > 100) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4122/buggy-version/WebSearchEngineHW3.src.edu.nyu.cs.cs2580.IndexerInvertedCompressed.java", "BodyUseAPI": [], "Fixed commit": "6d89ea7c82c6075117710886780b2719392aa264", "Url": "https://api.github.com/repos/samskd/Turbo360", "Date": "2013-04-10T20:48:49Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((configurationService.getIntValue(\"http.port\")) > 0) { return (localAddress.getPort()) == (configurationService.getIntValue(\"http.port\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1403/buggy-version/hypersocket-server.src.main.java.com.hypersocket.server.HypersocketServerImpl.java", "BodyUseAPI": ["com.hypersocket.config.SystemConfigurationService.getIntValue(java.lang.String)"], "Fixed commit": "024970dd2020e753516aa4f5d8e960d2c0d7ebc8", "Url": "https://api.github.com/repos/ludup/hypersocket-framework", "Date": "2014-10-15T15:53:05Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.length()) > 0) { builder.append(java.lang.Character.toUpperCase(s.charAt(0))); if ((s.length()) > 1) builder.append(s.substring(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9282/buggy-version/kroki-commons.src.kroki.commons.camelcase.NamingUtil.java", "BodyUseAPI": ["java.lang.Character.toUpperCase(char)", "java.lang.String.charAt(int)", "java.lang.String.substring(int)", "java.lang.String.length()", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(char)"], "Fixed commit": "3b96b5d52e8e1a77e6fb610246a5f24757153287", "Url": "https://api.github.com/repos/KROKIteam/KROKI-mockup-tool", "Date": "2014-11-05T17:32:29Z"},
{"Line": "=>2048", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((position >= 0) && (position < (mOpenResourceTab.length)))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2320/buggy-version/app.src.main.java.com.door43.translationstudio.ui.translate.ReviewModeAdapter.java", "BodyUseAPI": [], "Fixed commit": "018063903ab790cb20f8853fbe7c1912eea7311f", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2017-02-14T21:36:59Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(acRegs.isEmpty())) { rp.setAcRegistrations(acRegs); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3891/buggy-version/euis.src.main.java.com.ga.ose.blocktime.BlockTimeMediaBean.java", "BodyUseAPI": ["com.ga.ose.blocktime.RoutePerformance.setAcRegistrations(java.util.List<java.lang.String>)"], "Fixed commit": "e7e1c2cec5f275d294eb6d30508ae610ea561ac3", "Url": "https://api.github.com/repos/khrapz/garuda", "Date": "2015-07-09T04:48:45Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((accountBean) == null) { org.qii.weiciyuan.support.utils.AppLogger.e(\"MainTneActivity dont have account\"); finish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/908/buggy-version/src.org.qii.weiciyuan.ui.main.MainTimeLineActivity.java", "BodyUseAPI": [], "Fixed commit": "d6a4b1c3ec5787b30fdcd4d4f349e36ae134ae96", "Url": "https://api.github.com/repos/qii/weiciyuan", "Date": "2012-09-20T02:44:46Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["intent.getExtras().getString(Config.EXTRA_MESSAGE)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (newMessage != null) { if (newMessage.contains(\";\")) { for (java.lang.String loc : newMessage.split(\";\")) { java.lang.String[] elem = loc.split(\"\\\\|\"); messageMap.put(elem[0], elem[1]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6298/buggy-version/src.ut.ee.SmartPM.MainActivity.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "d08534c7796cc0c77e709a9c0cc2d35f389737fa", "Url": "https://api.github.com/repos/p2tris/SmartPM", "Date": "2014-10-23T13:43:20Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.level.getBoard().isInBounds(srcAnchorRow, srcAnchorColumn))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5350/buggy-version/KabasujiSinon.src.sinon.moves.MoveInBoard.java", "BodyUseAPI": [], "Fixed commit": "34ff5d715dcfa858767778de3f8c1e870acfc850", "Url": "https://api.github.com/repos/brianmcca1/SinonKabasuji", "Date": "2016-05-02T01:06:56Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageUrl) != null) { thumbnail.setVisibility(View.VISIBLE); com.bumptech.glide.Glide.with(getContext()).load(imageUrl).into(thumbnail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7636/buggy-version/app.src.main.java.com.example.raunak.justmetrothings.PublicFragment.java", "BodyUseAPI": [], "Fixed commit": "1df28056939304cb65d20d149c3f1a16225e941f", "Url": "https://api.github.com/repos/Bryze/meets-at-metros", "Date": "2017-03-24T14:42:33Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CompressedHashTrie.compress(ByteArrayCharSequence,ByteArrayCharSequence)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((node.getVal().length()) == index) { tempNode.leaf = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9023/buggy-version/src.CompressedHashTrie.java", "BodyUseAPI": [], "Fixed commit": "ec156d7a17aa1958ab593817295357023db94c62", "Url": "https://api.github.com/repos/mnm364/Type-Ahead-Search", "Date": "2015-07-29T07:36:24Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(encodings.contains(Encoding.INVERTED_INDEX))) { encodings.add(Encoding.INVERTED_INDEX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2533/buggy-version/core.src.main.java.org.apache.carbondata.core.util.CarbonMetadataUtil.java", "BodyUseAPI": ["java.util.List<org.apache.carbondata.format.Encoding>.add(Encoding.INVERTED_INDEX)"], "Fixed commit": "1474bbf9a78498c4e1fc157a3ce58eaf36df8173", "Url": "https://api.github.com/repos/PKOfficial/incubator-carbondata", "Date": "2017-02-27T15:49:02Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (keyType == null) { throw new java.lang.NullPointerException(\"Key type must not be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2646/buggy-version/flink-java.src.main.java.org.apache.flink.api.java.operators.Keys.java", "BodyUseAPI": [], "Fixed commit": "5022f6bc69ae0112a94383a08e2c151a250f5b7f", "Url": "https://api.github.com/repos/twalthr/incubator-flink", "Date": "2014-12-02T16:36:46Z"},
{"Line": "=>1147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (debugger.isStarted()) { debugger.stopDebug(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6824/buggy-version/java.src.processing.mode.java.JavaEditor.java", "BodyUseAPI": ["processing.mode.java.Debugger.stopDebug()"], "Fixed commit": "67e00670892105fc6f608ddb58b31eb888a93924", "Url": "https://api.github.com/repos/processing/processing", "Date": "2015-08-15T16:40:27Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasDynamicTokens) { transitionExpr = transitions(); preFinalExpr = new jkind.lustre.IfThenElseExpr(new jkind.lustre.BinaryExpr(new jkind.lustre.UnaryExpr(jkind.lustre.UnaryOp.PRE, token), jkind.lustre.BinaryOp.EQUAL, TOKEN_OUTPUT_STATE), TOKEN_OUTPUT_STATE, transitionExpr); }else { preFinalExpr = new jkind.lustre.IfThenElseExpr(new jkind.lustre.BinaryExpr(new jkind.lustre.UnaryExpr(jkind.lustre.UnaryOp.PRE, token), jkind.lustre.BinaryOp.EQUAL, TOKEN_OUTPUT_STATE), TOKEN_OUTPUT_STATE, TOKEN_ERROR_STATE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2545/buggy-version/src.coverage.TokenAction.java", "BodyUseAPI": [], "Fixed commit": "6c57577df918e66280022993857e986ba110ad21", "Url": "https://api.github.com/repos/MENG2010/lustre", "Date": "2016-05-19T17:34:22Z"},
{"Line": "=>640", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((progress) != null) && (progress.isShowing())) { progress.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1232/buggy-version/app.src.main.java.org.open311.android.fragments.ReportFragment.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "c446e6f12e71210d57dfb5ab2cd989ceffe8caed", "Url": "https://api.github.com/repos/codeforeurope/open311-android", "Date": "2016-05-19T09:15:37Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((imageUri) == null) imageUri = android.net.Uri.parse(\"android.resource://com.example.contactmanager/drawable/no_photo\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1684/buggy-version/ContactManager.app.src.main.java.com.example.contactmanager.CreateContact.java", "BodyUseAPI": [], "Fixed commit": "c9c08746551029e56d6a905cc6284ced69920615", "Url": "https://api.github.com/repos/tmn150530/3354-3-Guys", "Date": "2017-12-07T05:06:51Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getInventory()) instanceof org.bukkit.craftbukkit.v1_4_R1.inventory.CraftInventoryPlayer) ((org.bukkit.craftbukkit.v1_4_R1.inventory.CraftInventoryPlayer) (this.getInventory())).getInventory().itemInHandIndex = inPlayer.getInventory().getHeldItemSlot();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/492/buggy-version/src.main.java.de.kumpelblase2.remoteentities.entities.RemoteBaseEntity.java", "BodyUseAPI": [], "Fixed commit": "bcfad58f9d77134c29d0dd70902d57624f97b19d", "Url": "https://api.github.com/repos/kolinkrewinkel/Remote-Entities", "Date": "2013-01-30T17:22:31Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partition == null) && ((this.getProducerMetadata().getPartitioner()) != null)) { partition = this.getProducerMetadata().getPartitioner().partition(messageKey, this.producer.partitionsFor(targetTopic).size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2335/buggy-version/src.main.java.org.springframework.integration.kafka.support.ProducerConfiguration.java", "BodyUseAPI": [], "Fixed commit": "4786b64f51443ff788e8985fbbf12857cf435378", "Url": "https://api.github.com/repos/sovrn/spring-integration-kafka", "Date": "2015-10-08T18:46:07Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.wordpress.android.util.MediaUtils.isPowerpoint(url)) { return R.drawable.media_powerpoint; }else if (org.wordpress.android.util.MediaUtils.isSpreadsheet(url)) { return R.drawable.media_spreadsheet; }else if (org.wordpress.android.util.MediaUtils.isVideo(url)) { return org.wordpress.android.editor.R.drawable.media_movieclip; }else if (org.wordpress.android.util.MediaUtils.isAudio(url)) { return R.drawable.media_audio; }else { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/836/buggy-version/WordPress.src.main.java.org.wordpress.android.ui.media.WordPressMediaUtils.java", "BodyUseAPI": ["org.wordpress.android.util.MediaUtils.isSpreadsheet(java.lang.String)", "org.wordpress.android.util.MediaUtils.isAudio(java.lang.String)", "org.wordpress.android.util.MediaUtils.isVideo(java.lang.String)"], "Fixed commit": "1523b8a37c8578a2f044fa24bdeb611cdf4ebde5", "Url": "https://api.github.com/repos/fadils/WordPress-Android", "Date": "2015-04-27T10:45:50Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((orderBroadcastReceiver) != null) { unregisterReceiver(orderBroadcastReceiver); unregisterReceiver(orderBroadcastReceiver1); orderBroadcastReceiver = null; orderBroadcastReceiver1 = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7662/buggy-version/app.src.main.java.com.software.march.activity.BroadcastReceiverActivity.java", "BodyUseAPI": [], "Fixed commit": "94bcfbf950edac69f7e3cdc27e408f571142a560", "Url": "https://api.github.com/repos/maoqiqi/AndroidDemo", "Date": "2017-01-03T03:52:09Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entity.getRoleIdList()) == null) entity.setRoleIdList(new java.lang.String[]{ cz.clovekvtisni.coordinator.server.security.AuthorizationTool.ANONYMOUS });", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6742/buggy-version/coordinator-server.src.main.java.cz.clovekvtisni.coordinator.server.service.impl.UserServiceImpl.java", "BodyUseAPI": ["cz.clovekvtisni.coordinator.server.service.impl.UserEntity.setRoleIdList(java.lang.String[])"], "Fixed commit": "61681d8b444d44dde88767a962a6a208ccff0878", "Url": "https://api.github.com/repos/Tomucha/coordinator", "Date": "2013-06-05T13:35:00Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["PlayerInteractEvent.EntityInteract.getEntityPlayer()", "net.minecraft.entity.player.EntityPlayer.getHeldItemOffhand()", "net.minecraft.entity.player.EntityPlayer.getHeldItemMainhand()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((main.isEmpty()) && (off.isEmpty())) && (tschipp.carryon.client.keybinds.CarryOnKeybinds.isKeyPressed(player))) { net.minecraft.item.ItemStack stack = new net.minecraft.item.ItemStack(tschipp.carryon.common.handler.RegistrationHandler.itemEntity); if ((entity.hurtResistantTime) == 0) { if (tschipp.carryon.common.handler.PickupHandler.canPlayerPickUpEntity(player, entity)) { if (tschipp.carryon.common.item.ItemEntity.storeEntityData(entity, world, stack)) { if (entity.hasCapability(CapabilityItemHandler.ITEM_HANDLER_CAPABILITY, null)) { net.minecraftforge.items.IItemHandler handler = entity.getCapability(CapabilityItemHandler.ITEM_HANDLER_CAPABILITY, null); for (int i = 0; i < (handler.getSlots()); i++) { handler.extractItem(i, 64, false); } } CarryOn.network.sendTo(new tschipp.carryon.network.client.CarrySlotPacket(player.inventory.currentItem), ((net.minecraft.entity.player.EntityPlayerMP) (player))); entity.setDead(); player.setHeldItem(EnumHand.MAIN_HAND, stack); event.setCanceled(true); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7873/buggy-version/src.main.java.tschipp.carryon.common.event.ItemEntityEvents.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.setHeldItem(EnumHand.MAIN_HAND,net.minecraft.item.ItemStack)", "tschipp.carryon.common.handler.PickupHandler.canPlayerPickUpEntity(net.minecraft.entity.player.EntityPlayer,net.minecraft.entity.Entity)", "CarryOn.network.sendTo(tschipp.carryon.network.client.CarrySlotPacket,net.minecraft.entity.player.EntityPlayer)"], "Fixed commit": "4b70322112172f8cdd1ef3fc98d39eb229a0cd67", "Url": "https://api.github.com/repos/Tschipp/CarryOn", "Date": "2017-09-18T15:03:47Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { int resultArticleId = data.getIntExtra(\"SelectArticleId\", 0); int resultPosition = data.getIntExtra(\"SelectArticlePosition\", 0); if ((((requestCode == 1) && (resultCode == (RESULT_OK))) && (resultArticleId != 0)) && (resultPosition != 0)) { myArticle.id = resultArticleId; ariticlePosition = resultPosition; new com.novel.reader.ArticleActivity.UpdateArticleTask().execute(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8405/buggy-version/app.src.main.java.com.novel.reader.ArticleActivity.java", "BodyUseAPI": ["android.content.Intent.getIntExtra(java.lang.String,int)", "android.content.Intent.getIntExtra(java.lang.String,int)"], "Fixed commit": "d1578a2e7ec7356b65e681c1217a2ee4384f5edb", "Url": "https://api.github.com/repos/StevenKo/NovelReaderAndroidStudio", "Date": "2014-07-11T09:19:04Z"},
{"Line": "=>331", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getStrictClientIPHashing().getHash().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (endpointName != null) { nextLBOutboundEndpoint = context.getLBOutboundEndpoint(endpointName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8725/buggy-version/carbon-gw-lb.components.org.wso2.carbon.gateway.httploadbalancer.src.main.java.org.wso2.carbon.gateway.httploadbalancer.mediator.LoadBalancerMediator.java", "BodyUseAPI": ["org.wso2.carbon.gateway.httploadbalancer.context.LoadBalancerConfigContext.getLBOutboundEndpoint(java.lang.String)"], "Fixed commit": "dae5404d2ae03652f283e3de2a1d3d57bab26dc1", "Url": "https://api.github.com/repos/Venkat2811/product-http-load-balancer", "Date": "2016-06-12T16:02:26Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files.size()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7615/buggy-version/components.formats-common.src.loci.common.Location.java", "BodyUseAPI": [], "Fixed commit": "588ef66586ef689b9957989f949c74921411fdde", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2014-04-26T19:28:31Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ilu.surveytool.databasemanager.QuestionDB.getQuestionsByPageId(int,int,int)", "ilu.surveytool.databasemanager.QuestionDB.getQuestionByPageIndex(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((prevIndex != 0) || ((questions.get(0).getQuestionId()) != questionId)) { for (int i = 0; i < (questions.size()); i++) { int index = questions.get(i).getIndex(); if (index < currrentIndex) { questionDB.updateQuestionIndex(questions.get(i).getQuestionId(), pageId, (index + 1)); }else if (index > currrentIndex) { questionDB.updateQuestionIndex(questions.get(i).getQuestionId(), pageId, (index - 1)); }else { if (prevIndex < currrentIndex) { questionDB.updateQuestionIndex(questionId, pageId, (prevIndex + 1)); }else { questionDB.updateQuestionIndex(questionId, pageId, prevIndex); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7540/buggy-version/SurveyManager.src.ilu.surveymanager.handler.QuestionHandler.java", "BodyUseAPI": ["java.util.List<ilu.surveytool.databasemanager.DataObject.Question>.get(int)", "java.util.List<ilu.surveytool.databasemanager.DataObject.Question>.get(int)", "java.util.List<ilu.surveytool.databasemanager.DataObject.Question>.get(int)", "ilu.surveytool.databasemanager.QuestionDB.updateQuestionIndex(questions.get(i).getQuestionId(),int,int)", "questions.get(i).getIndex()", "java.util.List<ilu.surveytool.databasemanager.DataObject.Question>.size()", "ilu.surveytool.databasemanager.QuestionDB.updateQuestionIndex(int,int,int)", "questions.get(i).getQuestionId()", "ilu.surveytool.databasemanager.QuestionDB.updateQuestionIndex(questions.get(i).getQuestionId(),int,int)", "ilu.surveytool.databasemanager.QuestionDB.updateQuestionIndex(int,int,int)", "questions.get(i).getQuestionId()"], "Fixed commit": "407e15867778a2a72885f1359203e3c79eac678c", "Url": "https://api.github.com/repos/GutiX/surveytool", "Date": "2016-03-17T17:48:49Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (volumeInfo.has(\"authors\")) { org.json.JSONArray authorsArray = volumeInfo.getJSONArray(\"authors\"); for (int j = 0; j < (authorsArray.length()); j++) { authors += volumeInfo.getString(\"authors\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7224/buggy-version/app.src.main.java.com.example.android.booksearch.QueryUtils.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "org.json.JSONObject.getJSONArray(java.lang.String)"], "Fixed commit": "e6d822da849d5bdbe97172a2a5452e13130011cb", "Url": "https://api.github.com/repos/CarlosAguA/BookSearch", "Date": "2017-02-23T14:20:34Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (volumeInfo.has(\"description\")) { description = volumeInfo.getString(\"description\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7224/buggy-version/app.src.main.java.com.example.android.booksearch.QueryUtils.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Fixed commit": "e6d822da849d5bdbe97172a2a5452e13130011cb", "Url": "https://api.github.com/repos/CarlosAguA/BookSearch", "Date": "2017-02-23T14:20:34Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (volumeInfo.has(\"imageLinks\")) { org.json.JSONObject bookImage = volumeInfo.getJSONObject(\"imageLinks\"); imageUrl = bookImage.getString(\"smallThumbnail\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7224/buggy-version/app.src.main.java.com.example.android.booksearch.QueryUtils.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "e6d822da849d5bdbe97172a2a5452e13130011cb", "Url": "https://api.github.com/repos/CarlosAguA/BookSearch", "Date": "2017-02-23T14:20:34Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((currentBook.getImageUrl()) == null) || (currentBook.getImageUrl().isEmpty())) { bookImageView.setVisibility(View.GONE); }else { com.squareup.picasso.Picasso.with(context).load(currentBook.getImageUrl()).into(bookImageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7224/buggy-version/app.src.main.java.com.example.android.booksearch.BookAdapter.java", "BodyUseAPI": ["com.example.android.booksearch.Book.getImageUrl()", "com.squareup.picasso.Picasso.with(context).load(currentBook.getImageUrl())", "com.squareup.picasso.Picasso.with(context).load(currentBook.getImageUrl()).into(android.widget.ImageView)"], "Fixed commit": "e6d822da849d5bdbe97172a2a5452e13130011cb", "Url": "https://api.github.com/repos/CarlosAguA/BookSearch", "Date": "2017-02-23T14:20:34Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (errorMessage.contains(\"errorMessages\")) { errorMessage = errorMessage.substring(errorMessage.indexOf(\"errorMessages\")).substring(((errorMessage.indexOf(\"[\")) + 1), errorMessage.lastIndexOf(\"]\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4598/buggy-version/components.components-jira.src.main.java.org.talend.components.jira.runtime.reader.JiraReader.java", "BodyUseAPI": ["java.lang.String.indexOf(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.substring(int)"], "Fixed commit": "2f8645b8903732447bbfbbbcc6613daca5be5812", "Url": "https://api.github.com/repos/Talend/components", "Date": "2017-06-27T07:21:12Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.os.UserManager.getUserInfo(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((name == null) && (info != null)) { name = java.lang.Integer.toString(info.id); }else if (info == null) { name = context.getString(R.string.unknown); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5188/buggy-version/src.com.android.settings.applications.RunningState.java", "BodyUseAPI": ["java.lang.Integer.toString(info.id)"], "Fixed commit": "d6c8046533c48bc4bd5ba1b83d4d40464932fa98", "Url": "https://api.github.com/repos/TEAM-Gummy/android_packages_apps_Settings", "Date": "2014-05-13T20:04:21Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((previewFragment) != null) { previewFragment.reassignCard(issue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6493/buggy-version/app.src.main.java.slm2015.hey.view.tabs.post.PostFragment.java", "BodyUseAPI": [], "Fixed commit": "a24b67fe56a908e8ded6f876407820914b479f6a", "Url": "https://api.github.com/repos/ZhongTing/Hey", "Date": "2015-05-13T14:10:24Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((url == null) || (url.isEmpty())) { previews[i].setOnClickListener(null); }else { previews[i].setOnClickListener(new android.view.View.OnClickListener() { @java.lang.Override public void onClick(android.view.View v) { listener.onViewMedia(url, type); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6683/buggy-version/app.src.main.java.com.keylesspalace.tusky.StatusViewHolder.java", "BodyUseAPI": ["previews[i].setOnClickListener(android.view.View.OnClickListener)", "com.keylesspalace.tusky.StatusActionListener.onViewMedia(java.lang.String,Status.MediaAttachment.Type)"], "Fixed commit": "1f6f40bd04d2512a080e72d0b14eb7917eb56746", "Url": "https://api.github.com/repos/tuskyapp/Tusky", "Date": "2017-04-21T05:18:56Z"},
{"Line": "=>252", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((previewUrl == null) || (previewUrl.isEmpty())) { com.squareup.picasso.Picasso.with(context).load(mediaPreviewUnloadedId).into(previews[i]); }else { com.squareup.picasso.Picasso.with(context).load(previewUrl).placeholder(mediaPreviewUnloadedId).into(previews[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6683/buggy-version/app.src.main.java.com.keylesspalace.tusky.StatusViewHolder.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(context).load(previewUrl).placeholder(mediaPreviewUnloadedId).into(previews[i])", "com.squareup.picasso.Picasso.with(context).load(java.lang.String)", "com.squareup.picasso.Picasso.with(context).load(previewUrl).placeholder(int)"], "Fixed commit": "1f6f40bd04d2512a080e72d0b14eb7917eb56746", "Url": "https://api.github.com/repos/tuskyapp/Tusky", "Date": "2017-04-21T05:18:56Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (result == null) result = var;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4180/buggy-version/src.main.java.org.roda.rodain.sip.MetadataValue.java", "BodyUseAPI": [], "Fixed commit": "5fc3459b2a65870f353b9ac377dda69ca0891a4e", "Url": "https://api.github.com/repos/keeps/roda-in", "Date": "2016-06-08T09:30:20Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(task.isCanceled())) && (position == (staticHolder.currentPosition))) { notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5430/buggy-version/app.src.main.java.com.door43.translationstudio.ui.translate.ChooseSourceTranslationAdapter.java", "BodyUseAPI": [], "Fixed commit": "5d03c2e7c947fdf3b971e216ccd135d79f61f3cb", "Url": "https://api.github.com/repos/unfoldingWord-dev/ts-android", "Date": "2016-11-30T23:08:44Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ListView.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lastItem == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1025/buggy-version/mycuration.src.main.java.com.phicdy.mycuration.view.fragment.ArticlesListFragment.java", "BodyUseAPI": [], "Fixed commit": "6b880d12132be9a7dda5db7c65d9bfda16011267", "Url": "https://api.github.com/repos/phicdy/MyCuration", "Date": "2017-09-09T06:41:12Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.ListView.getChildCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (chilidCount < 1) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1025/buggy-version/mycuration.src.main.java.com.phicdy.mycuration.view.fragment.ArticlesListFragment.java", "BodyUseAPI": [], "Fixed commit": "6b880d12132be9a7dda5db7c65d9bfda16011267", "Url": "https://api.github.com/repos/phicdy/MyCuration", "Date": "2017-09-09T06:41:12Z"},
{"Line": "=>1659", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((field != null) && (ObjectField.RECORD_TYPE.equals(field.getInternalItemType()))) { for (java.lang.Object item : valueMap.values()) { if (item instanceof java.util.Map) { addDocumentValues(document, allBuilder, includeInAny, field, name, item); } } }else { for (java.lang.Object item : valueMap.values()) { addDocumentValues(document, allBuilder, includeInAny, field, name, item); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2934/buggy-version/db.src.main.java.com.psddev.dari.db.SolrDatabase.java", "BodyUseAPI": ["com.psddev.dari.db.SolrDatabase.addDocumentValues(org.apache.solr.common.SolrInputDocument,java.lang.StringBuilder,boolean,com.psddev.dari.db.ObjectField,java.lang.String,java.lang.Object)", "com.psddev.dari.db.SolrDatabase.addDocumentValues(org.apache.solr.common.SolrInputDocument,java.lang.StringBuilder,boolean,com.psddev.dari.db.ObjectField,java.lang.String,java.lang.Object)"], "Fixed commit": "6e91ccfbb5de0b0aeba23f6f7788ddbd14c43041", "Url": "https://api.github.com/repos/perfectsense/dari", "Date": "2016-01-15T15:25:26Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((currentRecipe) != null) && ((currentRecipe.location) == (Recipe.Location.LOCAL))) { populateImages(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2175/buggy-version/Team07RecipeFinder.src.ca.ualberta.cs.team07recipefinder.ViewRecipeActivity.java", "BodyUseAPI": [], "Fixed commit": "7725a661fa527ad2eb30f86911b11009f11814d3", "Url": "https://api.github.com/repos/Torboto/cmput301W13T07", "Date": "2013-04-01T07:53:50Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(java.lang.reflect.Modifier.isPublic(f.getModifiers()))) { org.nuxeo.ecm.platform.ws.DocumentStateLoader.log.warn((\"Ignoring field \" + f)); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5351/buggy-version/nuxeo-platform-ws.src.main.java.org.nuxeo.ecm.platform.ws.DocumentStateLoader.java", "BodyUseAPI": ["org.apache.commons.logging.Log.warn(java.lang.String)"], "Fixed commit": "7f53bf1a4b9b40604cd1a9dda088b2b5e47a8bae", "Url": "https://api.github.com/repos/nuxeo/nuxeo-services", "Date": "2013-02-28T15:42:43Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(_workerJobPriorityCounts.containsKey(workerModel))) { _workerJobPriorityCounts.put(workerModel, new java.util.HashMap()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4509/buggy-version/vivarium-ws.src.main.java.io.vivarium.server.workloadmanagement.JobAssingments.java", "BodyUseAPI": ["java.util.Map<io.vivarium.persistence.WorkerModel, java.util.Map<java.lang.Integer, java.lang.Integer>>.put(io.vivarium.persistence.WorkerModel,java.util.HashMap)"], "Fixed commit": "2c93e36b6285eb0efca43642b71434686cdcdaef", "Url": "https://api.github.com/repos/juckele/vivarium", "Date": "2015-12-21T14:56:17Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isBlank(spii.getSupplierInitials())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4725/buggy-version/dps-web-service.src.main.java.com.dps.web.service.controller.ProductController.java", "BodyUseAPI": [], "Fixed commit": "c7322b96db7f84b36a6faaa3e6d0f32887bde340", "Url": "https://api.github.com/repos/ashanbhag12/dps", "Date": "2016-08-27T09:14:57Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batchMode) == (VBatchManager.BatchMode_New)) { tempBatchSeqNbr = new java.math.BigDecimal(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2667/buggy-version/src.com.vco.JobManager.java", "BodyUseAPI": [], "Fixed commit": "59c5c0661602818261261849bce5eaa98863e2ad", "Url": "https://api.github.com/repos/VCO-Systems/vBatch", "Date": "2014-03-18T18:35:03Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batchMode) == (VBatchManager.BatchMode_New)) { this.batch_log.setBatchNum(new java.math.BigDecimal(this.batch_log.getId())); }else { this.batch_log.setBatchNum(tempBatchNum); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2667/buggy-version/src.com.vco.JobManager.java", "BodyUseAPI": [], "Fixed commit": "59c5c0661602818261261849bce5eaa98863e2ad", "Url": "https://api.github.com/repos/VCO-Systems/vBatch", "Date": "2014-03-18T18:35:03Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tempBatchSeqNbr != (new java.math.BigDecimal((-1)))) { logMsg += (\" (seq \" + tempBatchSeqNbr) + \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2667/buggy-version/src.com.vco.JobManager.java", "BodyUseAPI": [], "Fixed commit": "59c5c0661602818261261849bce5eaa98863e2ad", "Url": "https://api.github.com/repos/VCO-Systems/vBatch", "Date": "2014-03-18T18:35:03Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.batchMode) == (VBatchManager.BatchMode_Repeat)) { int highestBatchSeqNbr = 0; model.BatchLog latestRun = null; javax.persistence.TypedQuery<model.BatchLog> qryRunsOfThisBatch = this.db.createQuery(\"SELECT log from BatchLog log WHERE log.batchNum = :bNumber order by log.batchSeqNbr desc\", model.BatchLog.class); java.util.List<model.BatchLog> lstRunsOfThisBatch = qryRunsOfThisBatch.setParameter(\"bNumber\", this.job_id).getResultList(); if ((lstRunsOfThisBatch.size()) > 0) { latestRun = lstRunsOfThisBatch.get(0); highestBatchSeqNbr = latestRun.getBatchSeqNbr().intValue(); }else { java.lang.System.out.println((\"VBatch error: No previous runs found for batch_id: \" + (this.job_id))); } tempBatchNum = latestRun.getBatchNum(); tempBatchSeqNbr = new java.math.BigDecimal((highestBatchSeqNbr + 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2667/buggy-version/src.com.vco.JobManager.java", "BodyUseAPI": [], "Fixed commit": "59c5c0661602818261261849bce5eaa98863e2ad", "Url": "https://api.github.com/repos/VCO-Systems/vBatch", "Date": "2014-03-18T18:35:03Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsPositive) { if (((mButtonStatus) == (com.example.MineFieldButton.MINE_STATUS_NOT_VISIBLE)) & ((mButtonValue) == (com.example.MineFieldButton.MINE))) { mIsPositive = false; (com.example.MineFieldButton.sPositiveSumm)--; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7058/buggy-version/app.src.main.java.com.example.MineFieldButton.java", "BodyUseAPI": [], "Fixed commit": "477942199d605a2ae5b80a264ec70c99e8a484fc", "Url": "https://api.github.com/repos/KPOHK/my_mines", "Date": "2015-05-19T11:55:33Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((mButtonStatus) == (com.example.MineFieldButton.MINE_STATUS_MARKED)) & ((mButtonValue) == (com.example.MineFieldButton.MINE))) || (((mButtonStatus) == (com.example.MineFieldButton.MINE_STATUS_VISIBLE)) & ((mButtonValue) != (com.example.MineFieldButton.MINE)))) { mIsPositive = true; (com.example.MineFieldButton.sPositiveSumm)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7058/buggy-version/app.src.main.java.com.example.MineFieldButton.java", "BodyUseAPI": [], "Fixed commit": "477942199d605a2ae5b80a264ec70c99e8a484fc", "Url": "https://api.github.com/repos/KPOHK/my_mines", "Date": "2015-05-19T11:55:33Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSport) != null) { currentSportId = currentSport.getSportID(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/935/buggy-version/Android.UI.SYCORowLayouts.app.src.main.java.beaconsoft.sycorowlayouts.activities.CoachHomeActivity.java", "BodyUseAPI": [], "Fixed commit": "d4e9b50e84e288051a96c398a9b5b4b44b67f451", "Url": "https://api.github.com/repos/B3ACONsoft/ProjectCode", "Date": "2016-04-09T21:00:59Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentLeague) != null) { currentLeagueId = currentLeague.getLeagueID(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/935/buggy-version/Android.UI.SYCORowLayouts.app.src.main.java.beaconsoft.sycorowlayouts.activities.CoachHomeActivity.java", "BodyUseAPI": [], "Fixed commit": "d4e9b50e84e288051a96c398a9b5b4b44b67f451", "Url": "https://api.github.com/repos/B3ACONsoft/ProjectCode", "Date": "2016-04-09T21:00:59Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(serverSocket.isClosed())) { serverSocket.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/455/buggy-version/src.br.ufrj.cos.redes.sender.Sender.java", "BodyUseAPI": ["java.net.DatagramSocket.close()"], "Fixed commit": "f65e1862089165be359e738f348a8bd865d04c19", "Url": "https://api.github.com/repos/ramirezjpdf/projetoRedesPESC2015-1", "Date": "2015-06-24T23:00:32Z"},
{"Line": "=>797", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((saveMode) == 'E') { saveToDB(); }else if ((saveMode) == 'N') { checkToSave(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8511/buggy-version/src.scalesweden.NewRule.java", "BodyUseAPI": [], "Fixed commit": "cf8089f020d74d951439285ed8646f79fd76aa74", "Url": "https://api.github.com/repos/TheNodder/ScaleSweden", "Date": "2014-04-03T08:24:09Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((iceandshadow2.nyx.forge.NyxDeathSystem.death_inv.get(e.original.getEntityId())) != null) e.entityPlayer.inventory.copyInventory(((net.minecraft.entity.player.InventoryPlayer) (iceandshadow2.nyx.forge.NyxDeathSystem.death_inv.get(e.original.getEntityId()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1693/buggy-version/java.iceandshadow2.nyx.forge.NyxDeathSystem.java", "BodyUseAPI": ["java.util.HashMap<java.lang.Integer, net.minecraft.entity.player.InventoryPlayer>.get(e.original.getEntityId())", "e.entityPlayer.inventory.copyInventory(((net.minecraft.entity.player.InventoryPlayer) (iceandshadow2.nyx.forge.NyxDeathSystem.death_inv.get(e.original.getEntityId()))))", "e.original.getEntityId()"], "Fixed commit": "a2b8cdc0cea7a175f593c4cb22636018a29a8db4", "Url": "https://api.github.com/repos/TheRabbitologist/IceAndShadow2", "Date": "2014-10-07T18:25:40Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((userTran.getStatus()) != (javax.transaction.Status.STATUS_NO_TRANSACTION)) { userTran.rollback(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6462/buggy-version/com.ibm.jbatch.container.src.main.java.com.ibm.jbatch.container.transaction.impl.JTAUserTransactionAdapter.java", "BodyUseAPI": ["javax.transaction.UserTransaction.rollback()"], "Fixed commit": "00a487cdde32a7477263dd4b659d9470b5ed8deb", "Url": "https://api.github.com/repos/sidgoyal/standards.jsr352.jbatch", "Date": "2015-09-03T15:54:49Z"},
{"Line": "=>313", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedPoliticalBodyAdmin.getPoliticalBodyType()) == null) { sendErrorMessage(null, \"Error\", \"Please Select a Political Body type\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2192/buggy-version/admin-pf.src.main.java.com.next.eswaraj.admin.jsf.bean.PoliticalAdminBean.java", "BodyUseAPI": [], "Fixed commit": "42fc472c6b9c001262674bf38d6770f1de320260", "Url": "https://api.github.com/repos/eswaraj/platform", "Date": "2015-02-05T06:15:24Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedPoliticalBodyAdmin.getPerson()) == null) { sendErrorMessage(null, \"Error\", \"Please search and select a person\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2192/buggy-version/admin-pf.src.main.java.com.next.eswaraj.admin.jsf.bean.PoliticalAdminBean.java", "BodyUseAPI": [], "Fixed commit": "42fc472c6b9c001262674bf38d6770f1de320260", "Url": "https://api.github.com/repos/eswaraj/platform", "Date": "2015-02-05T06:15:24Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectedPoliticalBodyAdmin.getLocation()) == null) { sendErrorMessage(null, \"Error\", \"Please Select a Location\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2192/buggy-version/admin-pf.src.main.java.com.next.eswaraj.admin.jsf.bean.PoliticalAdminBean.java", "BodyUseAPI": [], "Fixed commit": "42fc472c6b9c001262674bf38d6770f1de320260", "Url": "https://api.github.com/repos/eswaraj/platform", "Date": "2015-02-05T06:15:24Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((owner) == player) { }else if ((owner.getAccount().getBalance()) >= 0) { int rent = 0; if ((this) instanceof entity.Brewery) { rent = (getRent()) * (player.getLastThrow().getSum()); }else { rent = getRent(); } owner.getAccount().setBalance(((owner.getAccount().getBalance()) + rent)); player.getAccount().setBalance((balance - rent)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2652/buggy-version/src.entity.Ownable.java", "BodyUseAPI": ["entity.Player.getLastThrow()", "entity.Player.getAccount()", "player.getLastThrow().getSum()", "player.getAccount().setBalance(int)"], "Fixed commit": "d672ae3c4e3737a44dda47dac8c272aa813c84ef", "Url": "https://api.github.com/repos/freyahelstrup/17_final", "Date": "2017-01-12T09:35:26Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((org.occiware.clouddesigner.occi.Extension) (((org.eclipse.emf.ecore.EDataType) (object)).eContainer())).getScheme()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(scheme.endsWith(\"#\"))) { scheme += \"#\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3614/buggy-version/clouddesigner.org.occiware.clouddesigner.occi.edit.src-gen.org.occiware.clouddesigner.occi.provider.AttributeItemProvider.java", "BodyUseAPI": [], "Fixed commit": "ef70a8165b38d75d8a18d6fc1132fd023d812b4c", "Url": "https://api.github.com/repos/occiware/ecore", "Date": "2015-10-21T14:30:15Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hudson.model.AbstractBuild<?, ?>.getWorkspace()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (workspace == null) { listener.fatalError(\"Can NOT get workspace, workspace is null\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1936/buggy-version/src.main.java.com.zte.zdh.SvnRevisionTagBuilder.java", "BodyUseAPI": [], "Fixed commit": "a7140e70f96a5330d04de33564304eb4ba698a1f", "Url": "https://api.github.com/repos/wenxinhe/svn-revision-tag", "Date": "2016-08-15T13:23:36Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (superName != null) { if (!(\"java/lang/Object mockit/MockUp\".contains(superName))) { mockit.internal.capturing.ClassReader cr = mockit.internal.capturing.ClassFile.createClassFileReader(loader, superName); cr.accept(this, mockit.internal.capturing.SKIP_DEBUG); }else if (haveInterfaces) { for (java.lang.String implementedInterface : interfaces) { mockit.internal.capturing.ClassReader cr = mockit.internal.capturing.ClassFile.createClassFileReader(loader, implementedInterface); cr.accept(this, mockit.internal.capturing.SKIP_DEBUG); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1283/buggy-version/main.src.mockit.internal.capturing.CaptureTransformer.java", "BodyUseAPI": ["mockit.internal.capturing.ClassFile.createClassFileReader(java.lang.ClassLoader,java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "7dd1ccf02968ee1a5775a81b1d7a17c776716687", "Url": "https://api.github.com/repos/maddingo/jmockit1", "Date": "2016-06-10T14:09:42Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (haveInterfaces) { for (java.lang.String implementedInterface : interfaces) { if (capturedTypeDesc.equals(implementedInterface)) { classExtendsCapturedType = true; throw VisitInterruptedException.INSTANCE; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1283/buggy-version/main.src.mockit.internal.capturing.CaptureTransformer.java", "BodyUseAPI": [], "Fixed commit": "7dd1ccf02968ee1a5775a81b1d7a17c776716687", "Url": "https://api.github.com/repos/maddingo/jmockit1", "Date": "2016-06-10T14:09:42Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.google.common.base.Strings.isNullOrEmpty(value)) { return org.cinchapi.concourse.Tag.EMPTY_TAG; }else { return new org.cinchapi.concourse.Tag(value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7999/buggy-version/concourse.src.main.java.org.cinchapi.concourse.Tag.java", "BodyUseAPI": [], "Fixed commit": "e8073ddc7248577e6bd1732fa27c855713ddba1b", "Url": "https://api.github.com/repos/cinchapi/concourse", "Date": "2014-09-21T12:37:49Z"},
{"Line": "=>559", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastId) != 0) return lastId;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7632/buggy-version/src.vg.civcraft.mc.citadel.database.CitadelReinforcementData.java", "BodyUseAPI": [], "Fixed commit": "d44011c5798d82b48d970ad80af459b7797081fe", "Url": "https://api.github.com/repos/Civcraft/Citadel", "Date": "2015-01-31T23:58:50Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Destination.find.byId(long)", "Project.find.byId(long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(destination.projects.contains(project))) { destination.addProject(project); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8987/buggy-version/app.controllers.Destinations.java", "BodyUseAPI": ["models.Destination.addProject(models.Project)"], "Fixed commit": "0a03784b6186f77bd4859f1521884bdce60e67af", "Url": "https://api.github.com/repos/surevine/gateway-management", "Date": "2014-10-14T10:34:30Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (health == 0) health = 20;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3468/buggy-version/src.com.sucy.skill.api.player.PlayerData.java", "BodyUseAPI": [], "Fixed commit": "9a1e512e7a7c8a789d0eb13ba0b446d9410d5529", "Url": "https://api.github.com/repos/Eniripsa96/SkillAPI", "Date": "2015-01-22T08:59:08Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.emf.ecore.EStructuralFeature.getEType()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((castedExistingType instanceof org.eclipse.emf.ecore.InternalEObject) && (castedExistingType.eIsProxy())) { org.eclipse.emf.common.util.URI proxyURI = ((org.eclipse.emf.ecore.InternalEObject) (castedExistingType)).eProxyURI(); errorMessage.append((((\"The type of the reference '\" + name) + \"' could not be resolved. The URI is \") + proxyURI)); }else { errorMessage.append((((((((\"The existing reference '\" + name) + \"' has an incompatible type \") + (classifierToString(castedExistingType))) + \". \") + \"The expected type is \") + (classifierToString(castedExpectedType))) + \".\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/264/buggy-version/org.eclipse.xtext.src.org.eclipse.xtext.xtext.ecoreInference.EClassifierInfo.java", "BodyUseAPI": ["java.lang.StringBuilder.append((((((((\"The existing reference '\" + name) + \"' has an incompatible type \") + (classifierToString(castedExistingType))) + \". \") + \"The expected type is \") + (classifierToString(castedExpectedType))) + \".\"))", "org.eclipse.xtext.xtext.ecoreInference.EClassifierInfo.EClassInfo.classifierToString(org.eclipse.emf.ecore.EClass)"], "Fixed commit": "da893449d27213ba649aaf27f24726157d0de7b3", "Url": "https://api.github.com/repos/eclipse/xtext-core", "Date": "2017-04-26T11:22:04Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (newBufferSize > 0) { if (newBufferSize < oldBufferSize) { java.util.Arrays.fill(delayBuffer, newBufferSize, ((int) ((maxDelayTime) * (sampleRate()))), 0.0); } bufferSize = newBufferSize; iBufferOut = ((iBufferIn) + 1) % (bufferSize); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2075/buggy-version/src.ddf.minim.ugens.Delay.java", "BodyUseAPI": ["java.util.Arrays.fill(double[],int,((int) ((maxDelayTime) * (sampleRate()))),double)"], "Fixed commit": "9ae23312977b0d6b7d5a0550f7a66bc799967cc2", "Url": "https://api.github.com/repos/ddf/Minim", "Date": "2011-04-29T04:28:24Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aiLevel < 1) || (aiLevel > 7)) { return de.hechler.aigames.api.GenericResult.genericInvalidRangeResult; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7324/buggy-version/EchoShowJava.ConnFourGameImpl.src.main.java.de.hechler.aigames.ai.connectfour.ConnectFourImpl.java", "BodyUseAPI": [], "Fixed commit": "1e0c7e6e953ddbe4cce53f82bf6bd691a51bcf1e", "Url": "https://api.github.com/repos/ferenc-hechler/EchoShowSkill", "Date": "2017-11-25T15:34:53Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) < 1) { java.lang.System.out.print(\"Enter Word: \"); s = br.readLine(); }else { s = args[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9120/buggy-version/src.WordToArt.java", "BodyUseAPI": [], "Fixed commit": "e8d5bfbe52ece084ab48c588a4c9761c223d091c", "Url": "https://api.github.com/repos/uniquerockrz/WordToArt", "Date": "2012-10-13T16:19:32Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (data == null) { throw new java.lang.IllegalArgumentException((\"Not a family: \" + (familyDocument.getDocumentReference()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1802/buggy-version/components.family-studies.api.src.main.java.org.phenotips.studies.family.internal.PhenotipsFamily.java", "BodyUseAPI": [], "Fixed commit": "ca89035e619664fe271e567e15d45825036291f6", "Url": "https://api.github.com/repos/phenotips/phenotips", "Date": "2017-09-18T22:47:31Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hu.rgai.yako.store.StoreHandler.readObject(android.content.Context,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (o instanceof hu.rgai.yako.beens.Account) { hu.rgai.yako.beens.Account a = ((hu.rgai.yako.beens.Account) (o)); list.add(a); }else { list = ((java.util.LinkedList<hu.rgai.yako.beens.Account>) (o)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/550/buggy-version/src.hu.rgai.yako.store.StoreHandler.java", "BodyUseAPI": [], "Fixed commit": "f36578c7454ecfd11c16a84161f713233c7b84cf", "Url": "https://api.github.com/repos/k-kojak/yako", "Date": "2014-10-16T17:10:06Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (product == null) { LOGGER.info((\"no product found for product code \" + productCode)); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6235/buggy-version/printkaari_base.modules.rest-api.src.main.java.com.printkaari.rest.service.CustomerServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "54126c8badc10066bf8b28607530f6e6c9863823", "Url": "https://api.github.com/repos/hemraj15/Printkaari-printkaari.com", "Date": "2017-03-11T15:54:03Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.isRna)) { result.add(\"phase1\"); result.add(\"phase1_tbi\"); result.add(\"dbsnp138\"); result.add(\"dbsnp138_tbi\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8027/buggy-version/src.instances.LargeWalker.java", "BodyUseAPI": [], "Fixed commit": "aec18695974b5dfdc9d19e22be1ff10d1fde61d3", "Url": "https://api.github.com/repos/bearbob/workflowwalker", "Date": "2017-04-11T20:31:39Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Class<?>, java.util.Map>.get(java.lang.Class<CacheType>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (map == null) { return java.util.Collections.emptyMap(); }else { return java.util.Collections.unmodifiableMap(map); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7399/buggy-version/SpringService.src.main.java.cz.datalite.cache.impl.CacheServiceImpl.java", "BodyUseAPI": ["java.util.Collections.unmodifiableMap(java.util.Map)"], "Fixed commit": "199db99f31411dd284eda4a729cdb066189e4ba5", "Url": "https://api.github.com/repos/DataLite/zk-dl", "Date": "2016-11-07T12:21:54Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(search.getQuery().toString().isEmpty())) { group = application.DataSource.search(search.getQuery().toString(), Storage.DATETIME, Storage.ASC); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7752/buggy-version/TJOONER.src.lhrc.group3.tjooner.MainActivity.java", "BodyUseAPI": ["search.getQuery().toString()", "application.DataSource.search(search.getQuery().toString(),Storage.DATETIME,Storage.ASC)", "android.widget.SearchView.getQuery()"], "Fixed commit": "619ad0637db195fecdcbbec2f206bc95d7217044", "Url": "https://api.github.com/repos/Sardai/LHRC", "Date": "2015-06-24T12:34:38Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(search.getQuery().toString().isEmpty())) { group = application.DataSource.search(search.getQuery().toString(), Storage.DATETIME, Storage.DESC); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7752/buggy-version/TJOONER.src.lhrc.group3.tjooner.MainActivity.java", "BodyUseAPI": ["application.DataSource.search(search.getQuery().toString(),Storage.DATETIME,Storage.DESC)", "android.widget.SearchView.getQuery()", "search.getQuery().toString()"], "Fixed commit": "619ad0637db195fecdcbbec2f206bc95d7217044", "Url": "https://api.github.com/repos/Sardai/LHRC", "Date": "2015-06-24T12:34:38Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(search.getQuery().toString().isEmpty())) { group = application.DataSource.search(search.getQuery().toString(), Storage.TITLE, Storage.ASC); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7752/buggy-version/TJOONER.src.lhrc.group3.tjooner.MainActivity.java", "BodyUseAPI": ["application.DataSource.search(search.getQuery().toString(),Storage.TITLE,Storage.ASC)", "search.getQuery().toString()", "android.widget.SearchView.getQuery()"], "Fixed commit": "619ad0637db195fecdcbbec2f206bc95d7217044", "Url": "https://api.github.com/repos/Sardai/LHRC", "Date": "2015-06-24T12:34:38Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(search.getQuery().toString().isEmpty())) { group = application.DataSource.search(search.getQuery().toString(), Storage.TITLE, Storage.DESC); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7752/buggy-version/TJOONER.src.lhrc.group3.tjooner.MainActivity.java", "BodyUseAPI": ["search.getQuery().toString()", "android.widget.SearchView.getQuery()", "application.DataSource.search(search.getQuery().toString(),Storage.TITLE,Storage.DESC)"], "Fixed commit": "619ad0637db195fecdcbbec2f206bc95d7217044", "Url": "https://api.github.com/repos/Sardai/LHRC", "Date": "2015-06-24T12:34:38Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (temperature == null) { throw new java.lang.IllegalArgumentException(\"The temperature argument may not be null.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2741/buggy-version/src.main.java.com.ciderref.sdk.substance.Water.java", "BodyUseAPI": [], "Fixed commit": "28ca10eda9b5b842130ef1f75d806493a54c187c", "Url": "https://api.github.com/repos/mvolk/cider-sdk-java", "Date": "2016-05-16T02:16:30Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (expressionStart > (-1)) { embeddedCount++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2716/buggy-version/nifi.nifi-commons.nifi-expression-language.src.main.java.org.apache.nifi.attribute.expression.language.Query.java", "BodyUseAPI": [], "Fixed commit": "86cbfab14ad13ce5adbb591deae9c8d46fd7274e", "Url": "https://api.github.com/repos/jahhulbert-ccri/incubator-nifi", "Date": "2015-06-08T23:52:15Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["it.jaschke.alexandria.AddBook.1.getContext()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (it.jaschke.alexandria.Utility.isNetworkAvailable(context)) { android.content.Intent bookIntent = new android.content.Intent(getActivity(), it.jaschke.alexandria.services.BookService.class); bookIntent.putExtra(BookService.EAN, ean); bookIntent.setAction(BookService.FETCH_BOOK); getActivity().startService(bookIntent); this.restartLoader(); }else { android.widget.Toast toast = android.widget.Toast.makeText(context, getString(R.string.no_internet), Toast.LENGTH_LONG); toast.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/674/buggy-version/Alexandria.app.src.main.java.it.jaschke.alexandria.AddBook.java", "BodyUseAPI": ["android.widget.Toast.makeText(android.content.Context,getString(R.string.no_internet),Toast.LENGTH_LONG)"], "Fixed commit": "eb786418d613ce4850dee7ea8882888400cf4738", "Url": "https://api.github.com/repos/MattPflance/SuperDuo", "Date": "2016-02-28T23:56:27Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.lwjgl.input.Keyboard.getEventKey()) == (org.lwjgl.input.Keyboard.KEY_1)) { this.HardRender = !(this.HardRender); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/827/buggy-version/Solar.SolarSysm.src.com.callumcarmicheal.solar.Main.java", "BodyUseAPI": [], "Fixed commit": "abefaf6e112404d059b0fd916220650a806edf49", "Url": "https://api.github.com/repos/CallumCarmicheal/GalacticFrontier", "Date": "2015-07-03T00:40:09Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dominator == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6755/buggy-version/tregression.src.main.tregression.empiricalstudy.RootCauseFinder.java", "BodyUseAPI": [], "Fixed commit": "0bd7ca5abdca65ca6ff81a1280238b7648fce204", "Url": "https://api.github.com/repos/llmhyy/tregression", "Date": "2017-12-08T09:49:22Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url.equals(\"\")) { java.lang.System.out.println(\"empty url\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3240/buggy-version/src.main.java.kon.shol.searchengine.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "af917a396dd3ab2ecd22d618a92878983e260b20", "Url": "https://api.github.com/repos/ArtinTD/shol", "Date": "2017-09-02T11:35:01Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (absHref.contains(\"http\")) return absHref; else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3240/buggy-version/src.main.java.kon.shol.searchengine.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "af917a396dd3ab2ecd22d618a92878983e260b20", "Url": "https://api.github.com/repos/ArtinTD/shol", "Date": "2017-09-02T11:35:01Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (url == null) { java.lang.System.out.println(\"NULL URL\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3240/buggy-version/src.main.java.kon.shol.searchengine.parser.Parser.java", "BodyUseAPI": [], "Fixed commit": "af917a396dd3ab2ecd22d618a92878983e260b20", "Url": "https://api.github.com/repos/ArtinTD/shol", "Date": "2017-09-02T11:35:01Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mLitButton) != null) { if (((mLitButton.isPressed()) && (mLitButton.isConnected())) && (mLitButton.isEnabled())) { mPreviousLitButton = mLitButton; mLitButton = null; (mScore)++; pointPlayer.start(); mPressedOnFrame = frame; if ((((mDifficulty.equals(be.howest.nmct.targit.Constants.EXTRA_DIFFICULTY_EASY)) && ((mWaitFrames) > ((be.howest.nmct.targit.Constants.TIME_TO_PRESS_MIN_EASY) / (be.howest.nmct.targit.Constants.STEP_TIME)))) || ((mDifficulty.equals(be.howest.nmct.targit.Constants.EXTRA_DIFFICULTY_MEDIUM)) && ((mWaitFrames) > ((be.howest.nmct.targit.Constants.TIME_TO_PRESS_MIN_MEDIUM) / (be.howest.nmct.targit.Constants.STEP_TIME))))) || ((mDifficulty.equals(be.howest.nmct.targit.Constants.EXTRA_DIFFICULTY_HARD)) && ((mWaitFrames) > ((be.howest.nmct.targit.Constants.TIME_TO_PRESS_MIN_HARD) / (be.howest.nmct.targit.Constants.STEP_TIME))))) (mWaitFrames)--; ((android.widget.TextView) (view.findViewById(R.id.fragment_smashit_game_textview_score))).setText((\"\" + (mScore))); mBluetoothConnection.sendMessageToAll(Constants.COMMAND_LED_OFF); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/181/buggy-version/Targit.app.src.main.java.be.howest.nmct.targit.views.ingame.SmashitGameFragment.java", "BodyUseAPI": [], "Fixed commit": "b703d26ecad6b2a5d5b9d6b5f46ec34611bd5cf0", "Url": "https://api.github.com/repos/ikbendewilliam/TargitAndroid", "Date": "2017-06-19T14:07:56Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((pageString.length) < 2) { output = \"\"; continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9274/buggy-version/src.edu.upenn.cis455.indexer.Indexer.java", "BodyUseAPI": [], "Fixed commit": "34ccbf680a7e801e69eab079fba028d8fd137112", "Url": "https://api.github.com/repos/aharelick/cis555-project", "Date": "2015-05-05T06:35:23Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((albumPhotoList.size()) > 0) albumPhotosDownloader.foundAlbumPhotos(albumPhotoList); else albumPhotosDownloader.noMoreAlbumPhotos();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4440/buggy-version/src.com.lopefied.pepemon.task.GetAlbumPhotosTask.java", "BodyUseAPI": ["com.lopefied.pepemon.task.GetAlbumPhotosTask.IAlbumPhotosDownloader.foundAlbumPhotos(java.util.List<com.lopefied.pepemon.db.model.Photo>)"], "Fixed commit": "cadd36491a4ce941bf7c017470d99fc03fcf8c8e", "Url": "https://api.github.com/repos/z0lope0z/pepemon", "Date": "2013-02-04T01:39:53Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, by.epam.movierating.command.Command>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (command != null) { return command; }else { throw new by.epam.movierating.controller.exception.CommandNotFoundException(\"Wrong or empty command name\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5754/buggy-version/src.by.epam.movierating.controller.CommandHelper.java", "BodyUseAPI": [], "Fixed commit": "5600525331de9ba5548e69ec1aaff48fecb2bdaf", "Url": "https://api.github.com/repos/Queliath/MovieRating", "Date": "2016-09-15T11:19:47Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.PhpUse.getAliasName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (alias != null) { result.add(alias); }else if (what instanceof com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ClassReference) { final com.intellij.psi.PsiElement resolved = ((com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ClassReference) (what)).resolve(); if (resolved instanceof com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.PhpClass) { final com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.PhpClass resolvedImport = ((com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.PhpClass) (resolved)); final boolean importPrecise = resolvedImport.getFQN().endsWith(what.getText()); if ((!importPrecise) || (!(resolvedImport.getName().equals(referenceText)))) { result.add(resolvedImport.getFQN()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2691/buggy-version/src.main.java.com.kalessil.phpStorm.phpInspectionsEA.inspectors.languageConstructions.ClassConstantUsageCorrectnessInspector.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "34d245e3045b62e0310a01051caa3776cde4db80", "Url": "https://api.github.com/repos/kalessil/phpinspectionsea", "Date": "2017-07-10T05:48:56Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonObject.has(\"id\")) sb.append(jsonObject.get(\"id\").getAsString().replace(\"STRING:\", \"\")); else sb.append(\"null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3601/buggy-version/src.main.java.net.doubledoordev.pay2spawn.types.CustomEntityType.java", "BodyUseAPI": ["com.google.gson.JsonObject.get(java.lang.String)", "jsonObject.get(\"id\").getAsString().replace(java.lang.String,java.lang.String)", "jsonObject.get(\"id\").getAsString()", "java.lang.StringBuilder.append(jsonObject.get(\"id\").getAsString().replace(\"STRING:\", \"\"))"], "Fixed commit": "288d9343033979c9847c596d8e43925fb51895b5", "Url": "https://api.github.com/repos/DoubleDoorDevelopment/Pay2Spawn", "Date": "2014-10-17T17:34:13Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((m_peerHandlers[(p_nodeID & 65535)]) != null) { m_peerHandlers[(p_nodeID & 65535)].setState(p_state); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/807/buggy-version/src.de.hhu.bsinfo.dxram.lookup.overlay.storage.MetadataHandler.java", "BodyUseAPI": ["m_peerHandlers[(p_nodeID & 65535)].setState(de.hhu.bsinfo.dxram.lookup.overlay.storage.PeerState)"], "Fixed commit": "ce6742f662c33baab4b4ecc64cb063dbb8f685e1", "Url": "https://api.github.com/repos/hhu-bsinfo/dxram", "Date": "2017-08-02T09:36:45Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.stratos.metadataservice.registry.CarbonRegistry.getGovernanceUserRegistry()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (registry != null) { registry.delete(resourcePath); return true; }else { if (org.apache.stratos.metadataservice.registry.CarbonRegistry.log.isDebugEnabled()) { org.apache.stratos.metadataservice.registry.CarbonRegistry.log.debug(\"Unable to delete the meta data since the Registry is NULL\"); } return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1844/buggy-version/components.org.apache.stratos.metadataservice.src.main.java.org.apache.stratos.metadataservice.registry.CarbonRegistry.java", "BodyUseAPI": ["org.wso2.carbon.registry.api.Registry.delete(java.lang.String)"], "Fixed commit": "5fa84a08fd7051be17652b8377b155aed53e9cc5", "Url": "https://api.github.com/repos/apache/stratos", "Date": "2014-09-26T13:18:46Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.index.OIndex<?>.get(simpleNetworkQuery.getAccountName())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nUser == null) throw new org.ndexbio.common.exceptions.NdexException(\"Invalid accountName to filter by\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1296/buggy-version/src.main.java.org.ndexbio.common.models.dao.orientdb.NetworkSearchDAO.java", "BodyUseAPI": [], "Fixed commit": "c9c1660d735f0dbd148c19844a751cb208527705", "Url": "https://api.github.com/repos/cytoscape/ndex-common", "Date": "2014-07-31T20:02:16Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (v != null) { counter = v; return v; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3555/buggy-version/Assigment.src.adapter.IDAdapter.java", "BodyUseAPI": [], "Fixed commit": "e1120d4f1280ff97753bb9b074e09f03d952cd33", "Url": "https://api.github.com/repos/EATONJIANGHAHAHA/WSD_Assignment", "Date": "2017-10-07T00:55:38Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((net.spellcraftgaming.rpghud.gui.hud.HudModern) (this.rpgHud.huds.get(\"modern\"))).getPosX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (width < xOffset) width = xOffset;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7175/buggy-version/src.main.java.net.spellcraftgaming.rpghud.gui.hud.element.modern.HudElementFoodModern.java", "BodyUseAPI": [], "Fixed commit": "1a67a3f46d68c471ed45278dfda6e52263ff1acc", "Url": "https://api.github.com/repos/KurodaAkira/RPG-Hud", "Date": "2017-08-31T17:45:28Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((hrefs.size()) >= 3) { org.jsoup.nodes.Element author = hrefs.get(2); result.setAuthor(author.text()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7066/buggy-version/hannah.http.com.hannah.http.baidu.TiebaUtil.java", "BodyUseAPI": ["org.jsoup.select.Elements.get(int)"], "Fixed commit": "307fb2c8d95c74dfcb461cf7cdae9abc9e528a4e", "Url": "https://api.github.com/repos/longrmrm/hannah.longlife", "Date": "2014-01-08T16:00:08Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(index.isDirectory())) lc.common.LCLog.warn(\"Failed to generate directory\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/603/buggy-version/src.main.java.lc.common.impl.drivers.ComputerCraftScuffMount.java", "BodyUseAPI": [], "Fixed commit": "fcf509049c1e6b8e1a9104a6604987d526372df4", "Url": "https://api.github.com/repos/PC-Logix/LanteaCraft", "Date": "2016-03-20T05:49:43Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (path.endsWith(\".class\")) { path = path.replace(\"lc/LanteaCraft.class\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/603/buggy-version/src.main.java.lc.common.impl.drivers.ComputerCraftScuffMount.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "fcf509049c1e6b8e1a9104a6604987d526372df4", "Url": "https://api.github.com/repos/PC-Logix/LanteaCraft", "Date": "2016-03-20T05:49:43Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index.subfiles.isEmpty()) lc.common.LCLog.warn(\"Didn't index any files\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/603/buggy-version/src.main.java.lc.common.impl.drivers.ComputerCraftScuffMount.java", "BodyUseAPI": [], "Fixed commit": "fcf509049c1e6b8e1a9104a6604987d526372df4", "Url": "https://api.github.com/repos/PC-Logix/LanteaCraft", "Date": "2016-03-20T05:49:43Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.smartydroid.android.starter.kit.app.RecyclerViewPagedFragment.getPaginate()) != null) { com.smartydroid.android.starter.kit.app.RecyclerViewPagedFragment.getPaginate().setHasMoreDataToLoad(com.smartydroid.android.starter.kit.app.RecyclerViewPagedFragment.getPagePaginator().hasMorePages()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8475/buggy-version/library.src.main.java.com.smartydroid.android.starter.kit.app.RecyclerViewPagedFragment.java", "BodyUseAPI": [], "Fixed commit": "74196d9decf5ecd0ff03daf00e174205a7629020", "Url": "https://api.github.com/repos/qijitech/android-starter-kit", "Date": "2016-03-01T04:57:42Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.gultsch.chat.ui.ConversationFragment.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(activity.shouldPaneBeOpen())) { conversation.markRead(); activity.updateConversationList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4340/buggy-version/src.de.gultsch.chat.ui.ConversationFragment.java", "BodyUseAPI": ["de.gultsch.chat.ui.ConversationActivity.updateConversationList()"], "Fixed commit": "962263e6e65b327cca64a443649f3490b0df3a31", "Url": "https://api.github.com/repos/iNPUTmice/SecureConversation", "Date": "2014-02-10T22:12:11Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getPublishedDate()) != null) { publishedDateTime = entry.getPublishedDate().toInstant().atZone(java.time.ZoneId.systemDefault()).toLocalDateTime(); }else { logger.severe(\"published data is missing, cannot add this entry to the list.\"); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4911/buggy-version/src.main.java.net.fewald.jfeedreader.FeedReader.java", "BodyUseAPI": ["entry.getPublishedDate().toInstant().atZone(java.time.ZoneId)", "com.rometools.rome.feed.synd.SyndEntry.getPublishedDate()", "entry.getPublishedDate().toInstant().atZone(java.time.ZoneId.systemDefault()).toLocalDateTime()", "entry.getPublishedDate().toInstant()"], "Fixed commit": "4d6865d8089b72f74b04be12c953badde98b8d65", "Url": "https://api.github.com/repos/freddy-sf/JFeedReader", "Date": "2016-06-20T17:39:59Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Start.getWorld()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((world.started) == false) { int index = 0; for (int j = 0; j < 8; j++) { setPos((index++), (j + 1), world); } QuickSort quickSort = new QuickSort(); world.addObject(quickSort, 367, 237); quickSort.addedToWorld(); world.started = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8570/buggy-version/code.quickSortProject.Start.java", "BodyUseAPI": ["Start.setPos(int,int,QuickSortWorld)", "QuickSortWorld.addObject(QuickSort,int,int)"], "Fixed commit": "5cbd8adfad54383b9673134ee66df089af12791c", "Url": "https://api.github.com/repos/crystalyang/cmpe202project", "Date": "2016-11-14T08:50:09Z"},
{"Line": "=>1401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.descriptor.endsWith(\"J\")) || (this.descriptor.endsWith(\"D\"))) { (this.maxStack)++; (this.maxStackSize)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6823/buggy-version/src.org.objectweb.asm.MethodWriter.java", "BodyUseAPI": [], "Fixed commit": "94dc24c0a0d86f4d3cbe1667ba78551d4252c8cc", "Url": "https://api.github.com/repos/stephenfreund/RoadRunner", "Date": "2013-01-04T16:41:45Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (commandParts[wordIndex].equals(\"desc\")) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7641/buggy-version/src.LemonBuddy.Parser.java", "BodyUseAPI": [], "Fixed commit": "dc2730036d142199aa0b3d6a81a4e40e69af6702", "Url": "https://api.github.com/repos/cs2103aug2015-t09-4j/main", "Date": "2015-11-08T09:30:03Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (singlePlayer) { java.util.List<org.ggp.base.util.statemachine.Move> moves = new java.util.ArrayList<org.ggp.base.util.statemachine.Move>(); moves.add(move); childState = machine.getNextState(node.getState(), moves); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5095/buggy-version/src.main.java.AliferousMCTS.java", "BodyUseAPI": [], "Fixed commit": "3dee130c9e013560b82bd59924a1a29b9bfa147b", "Url": "https://api.github.com/repos/ChaseBasich/ggp-base", "Date": "2017-05-10T04:04:17Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cggcoding.models.TreatmentPlan.load(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((planToCopy.getStages().size()) == 0) { throw new com.cggcoding.exceptions.ValidationException(com.cggcoding.utils.messaging.ErrorMessages.STAGES_IS_EMPTY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4503/buggy-version/src.com.cggcoding.models.User.java", "BodyUseAPI": [], "Fixed commit": "5ea939c4b749325067340eb9d50dcb6aedd281a7", "Url": "https://api.github.com/repos/camerongridley/DoItRight", "Date": "2015-11-30T02:43:48Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inMap == null) { return new java.util.HashMap<com.ibm.streams.operator.types.RString, java.util.Map<com.ibm.streams.operator.types.RString, com.ibm.streams.operator.types.RString>>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7735/buggy-version/com.ibm.streamsx.hbase.impl.java.src.com.ibm.streamsx.hbase.HBASEGet.java", "BodyUseAPI": [], "Fixed commit": "f928b0fd40e46fade224957b505325fbf808e1b5", "Url": "https://api.github.com/repos/hildrum/streamsx.hbase", "Date": "2014-04-09T18:46:27Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_XML_SUPPORTED) { updatePreferences(preferences, MediaType.APPLICATION_JAVA_OBJECT_XML, 1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8713/buggy-version/modules.org.restlet.src.org.restlet.engine.converter.DefaultConverter.java", "BodyUseAPI": [], "Fixed commit": "c3015e4783c2a36e7528aa611c911b7d8c4ec5ba", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2013-08-14T16:05:32Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_XML_SUPPORTED) { result = addVariant(result, org.restlet.engine.converter.DefaultConverter.VARIANT_OBJECT_XML); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8713/buggy-version/modules.org.restlet.src.org.restlet.engine.converter.DefaultConverter.java", "BodyUseAPI": [], "Fixed commit": "c3015e4783c2a36e7528aa611c911b7d8c4ec5ba", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2013-08-14T16:05:32Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.awesometickets.business.entities.repositories.CinemaHallRepository.findWithSeatLayout(java.lang.Integer)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((list.size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2434/buggy-version/src.main.java.com.awesometickets.business.services.CinemaHallService.java", "BodyUseAPI": [], "Fixed commit": "7289acdb41ece997bc4c5a9f446406218c19655d", "Url": "https://api.github.com/repos/AwesomeTickets/ServiceServer", "Date": "2017-05-03T04:16:27Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((com.nyagosu.chickengenes.item.ItemChickenSyringeGene) (itemstack.getItem())).getGeneData(net.minecraft.item.ItemStack)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (add_gene == null) add_gene = new com.nyagosu.chickengenes.entity.GeneData();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5851/buggy-version/java.com.nyagosu.chickengenes.entity.EntityGeneChicken.java", "BodyUseAPI": [], "Fixed commit": "5b025303d268278833f049264c86cbab13d46168", "Url": "https://api.github.com/repos/nyagosu3/ChickenGenes", "Date": "2016-07-15T15:49:12Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.minecraft.item.ItemStack.getTagCompound()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (nbt == null) gene_data_string = new com.nyagosu.chickengenes.entity.GeneData().getDataString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5851/buggy-version/java.com.nyagosu.chickengenes.recipes.ChickenGenesSyringeRecipe.java", "BodyUseAPI": [], "Fixed commit": "5b025303d268278833f049264c86cbab13d46168", "Url": "https://api.github.com/repos/nyagosu3/ChickenGenes", "Date": "2016-07-15T15:49:12Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((stamina) < (getMaxStamina())) && (!(Gdx.input.isKeyPressed(Keys.SHIFT_LEFT)))) { stamina += (delta) / 4; java.lang.System.out.println(\"recovering\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4233/buggy-version/core.src.me.boxcubed.main.Sprites.Player.java", "BodyUseAPI": [], "Fixed commit": "2b82dd47d1c7e789d14a2f090f76081f7c99e5e0", "Url": "https://api.github.com/repos/BoxCubed/ProjectTopDOWN", "Date": "2017-04-30T08:21:44Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tree.BranchNode.getConstant()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(type.containsElement(constant.getType(), constant.getValue()))) { staticError(\"case label type does not match case expression type\", b.getConstant().loc); }else { if (checked.contains(constant.value)) { staticError(\"repeated label in case branch\", b.getConstant().loc); }else { checked.add(constant.value); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4884/buggy-version/src.tree.StaticChecker.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.add(constant.value)", "java.util.List<java.lang.Integer>.contains(constant.value)"], "Fixed commit": "caa73e4b8520713dfa619692c3f1a80041858155", "Url": "https://api.github.com/repos/KenLim4337/pl0assign", "Date": "2017-04-07T07:46:17Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["alpine.auth.ManagedUserAuthenticationService.authenticate()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (principal != null) { return principal; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5396/buggy-version/alpine.src.main.java.alpine.auth.Authenticator.java", "BodyUseAPI": [], "Fixed commit": "38461637f494a6d7c586e017c28c391204710ec3", "Url": "https://api.github.com/repos/stevespringett/Alpine", "Date": "2017-02-15T23:41:44Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files[i]) != null) { parts[i] = new org.apache.commons.httpclient.methods.multipart.FilePart((\"file\" + i), files[i]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4915/buggy-version/src.main.java.me.abnerlee.utils.client.HttpClientUtils.java", "BodyUseAPI": [], "Fixed commit": "061c730abd5ae528f3ab9a6fc148b1b36061878f", "Url": "https://api.github.com/repos/657143946/wechatAPI", "Date": "2014-12-01T14:07:25Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(t.createNewFile())) { mesg.setText(\"can't create file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/749/buggy-version/src.Program3.java", "BodyUseAPI": [], "Fixed commit": "9aa510700ec37c1a4d2e821a6424f5bd2ceb4149", "Url": "https://api.github.com/repos/curdog/csc350", "Date": "2015-02-25T02:59:33Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((actionIds.size()) > (java.lang.Long.SIZE)) || (((actionIds.size()) == (java.lang.Long.SIZE)) && (!(actionIds.contains(ActionKeys.VIEW))))) { throw new com.liferay.portal.kernel.exception.SystemException((\"There are too many actions for resource \" + name)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1986/buggy-version/portal-impl.src.com.liferay.portal.service.impl.ResourceActionLocalServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "e0cb3038f031569997adbd59e0e476ce56c03495", "Url": "https://api.github.com/repos/michaelhashimoto/liferay-portal", "Date": "2016-06-21T00:13:21Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (assignee != null) { createIssueParams = createIssueParams.assignee(assignee); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1224/buggy-version/src.main.java.com.junichi11.netbeans.modules.github.issues.issue.GitHubIssueController.java", "BodyUseAPI": ["com.junichi11.netbeans.modules.github.issues.issue.CreateIssueParams.assignee(org.eclipse.egit.github.core.User)"], "Fixed commit": "b69b4ca2ac16ecc1a25c2d4ac5a6b37bae48240a", "Url": "https://api.github.com/repos/junichi11/netbeans-github-issues-plugin", "Date": "2015-01-13T06:08:46Z"},
{"Line": "=>496", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (data != null) { for (int im = 0; im < numMatrices; im++) { if (exportMultipleMatrices()) { data = getProject().getCharacterMatrixVisible(t, im, mesquite.io.lib.CategoricalState.class); if (data == null) continue; } if (!(writeExcludedCharacters)) { numCharWrite += data.numCharsCurrentlyIncluded(this.writeOnlySelectedData); }else { numCharWrite += data.numberSelected(this.writeOnlySelectedData); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5579/buggy-version/Source.mesquite.io.lib.InterpretPhylip.java", "BodyUseAPI": [], "Fixed commit": "ae19baf1cb67fbb41fe4a55143a1b9fb89d0306e", "Url": "https://api.github.com/repos/wmaddisn/MesquiteCore", "Date": "2014-08-01T04:01:04Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getPackageManager().getApplicationInfo(intent.getData().getSchemeSpecificPart(),PackageManager.GET_META_DATA)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((pinfo != null) && ((pinfo.metaData) != null)) { java.util.Iterator<java.lang.String> iterator = pinfo.metaData.keySet().iterator(); while (iterator.hasNext()) { java.lang.String key = iterator.next(); java.lang.String value = pinfo.metaData.getString(key); if (key.equals(\"launcher\")) { return value; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5704/buggy-version/PluginMain.src.com.example.pluginmain.PluginDebugHelper.java", "BodyUseAPI": ["pinfo.metaData.keySet()", "pinfo.metaData.getString(java.lang.String)", "pinfo.metaData.keySet().iterator()"], "Fixed commit": "2e10e5a94276275e6277132e892b329d8022f707", "Url": "https://api.github.com/repos/limpoxe/Android-Plugin-Framework", "Date": "2015-09-01T00:55:59Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataFrag) == null) { com.idl.daq.L.d(\"WTHhhhhhhhhhhhh\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3428/buggy-version/DAQ_App.src.com.daq.sensors.Sensor.java", "BodyUseAPI": [], "Fixed commit": "33d6314b9fb5f29fc16c083c513f27f6a71a91c5", "Url": "https://api.github.com/repos/idliitb/DAQ-Esankalan", "Date": "2014-06-28T09:01:13Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["play.data.Form.form(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (userForm.hasErrors()) { flash(\"error\", play.i18n.Messages.get(\"user.login.invalidcredentials\")); controllers.Account.logger.debug(\"Login: Form submission error\"); return redirect(controllers.routes.Account.login()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2785/buggy-version/web.app.controllers.Account.java", "BodyUseAPI": [], "Fixed commit": "4a0f70c2832440332330d1f03119f20bb6c437a1", "Url": "https://api.github.com/repos/TuemmlerKon/web-tech", "Date": "2015-01-23T01:52:42Z"},
{"Line": "=>529", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (resolved != null) { if ((resolved.singletonResolved) != null) { source.createLink(resolved.singletonResolved, relToResolve, ((relToResolve.hasConstraints()) || promoHasConstraints), isPromotion); return; } for (java.lang.Object target : resolved.setResolved) { source.createLink(((fr.imag.adele.apam.Component) (target)), relToResolve, ((relToResolve.hasConstraints()) || promoHasConstraints), isPromotion); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3632/buggy-version/runtime.core.src.main.java.fr.imag.adele.apam.impl.ApamResolverImpl.java", "BodyUseAPI": ["fr.imag.adele.apam.Component.createLink(resolved.singletonResolved,fr.imag.adele.apam.RelToResolve,((relToResolve.hasConstraints()) || promoHasConstraints),boolean)"], "Fixed commit": "681438a7b07e52d76fc9105852595c68deb95ee0", "Url": "https://api.github.com/repos/AdeleResearchGroup/ApAM", "Date": "2013-11-12T11:13:10Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ehcache.getStatus().equals(Status.STATUS_ALIVE)) { ehcache.removeAll(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5903/buggy-version/src.jpa-engine.fallback-impl.src.main.java.com.impetus.kundera.cache.ehcache.EhCacheWrapper.java", "BodyUseAPI": ["com.impetus.kundera.cache.Cache.removeAll()"], "Fixed commit": "774e2f2aac456da8160296ab90142ee5d998e500", "Url": "https://api.github.com/repos/impetus-opensource/Kundera", "Date": "2014-01-14T17:30:46Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.text.Editable.toString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((num != null) && ((num.isEmpty()) == false)) { amountValue = java.lang.Float.parseFloat(s.toString()); }else { amountValue = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5341/buggy-version/src.natemobile.apps.tipcalculator.CalculateActivity.java", "BodyUseAPI": [], "Fixed commit": "d4fd08c3557847b5958eb373798a9e5e2c4108d3", "Url": "https://api.github.com/repos/boyserk84/mobileAndroidTipCalculatorApps", "Date": "2014-03-16T04:24:12Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["document.getElementsByClass(\"listing-pagination-pages\").get(0).children()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((pages.size()) > 1) { org.jsoup.nodes.Element lastLink = pages.get(((pages.size()) - 1)).child(0); if (lastLink.ownText().trim().startsWith(\"Next\")) { hasNextPage = true; nextPageLink = devBukkitLink + (lastLink.attr(\"href\")); }else { hasNextPage = false; nextPageLink = null; } }else { hasNextPage = false; nextPageLink = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3416/buggy-version/src.main.java.com.drtshock.willie.command.utility.AuthorCommandHandler.java", "BodyUseAPI": ["org.jsoup.select.Elements.get(((pages.size()) - 1))", "org.jsoup.select.Elements.size()", "pages.get(((pages.size()) - 1)).child(int)"], "Fixed commit": "e24836f69a0952c5af547671798f788acdfb47ad", "Url": "https://api.github.com/repos/drtshock/Willie", "Date": "2013-08-17T01:47:33Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((name_ != null) && ((name_.isEmpty()) == false)) { java.lang.System.out.println(((\"Rendering project \\\"\" + name_) + \"\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3879/buggy-version/src.com.sheepit.client.standalone.GuiText.java", "BodyUseAPI": ["java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "44a788f4bbd0873186e27695d371ac6386d91b1b", "Url": "https://api.github.com/repos/laurent-clouet/sheepit-client", "Date": "2016-09-21T13:13:13Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mediaPlayer.isPlaying()) { mediaPlayer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5950/buggy-version/app.src.main.java.com.ronen.studio08.verysimplepodcast.controllers.MiniPlayerFragment.java", "BodyUseAPI": ["android.media.MediaPlayer.stop()"], "Fixed commit": "bb47b5b2979afff9b7b74e6be0c862efce0882d4", "Url": "https://api.github.com/repos/ronenlh/VerySimplePodcast", "Date": "2016-11-07T10:40:02Z"},
{"Line": "=>518", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mFinishing) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5596/buggy-version/support.src.main.java.com.hyena.framework.app.fragment.BaseUIFragment.java", "BodyUseAPI": [], "Fixed commit": "2cf55bd6bde85348681416b7f682f91395b7c1fa", "Url": "https://api.github.com/repos/zhaozhu365/AndroidSupport", "Date": "2016-10-13T03:58:23Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTree.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (nodeBefore.visible(model.filterLevel)) model.nodeStructureChanged(nodeBefore); else parent.hide(nodeBefore, model, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7316/buggy-version/N2A.src.gov.sandia.n2a.ui.eq.undo.ChangePart.java", "BodyUseAPI": ["gov.sandia.n2a.ui.eq.FilteredTreeModel.nodeStructureChanged(gov.sandia.n2a.ui.eq.tree.NodePart)", "gov.sandia.n2a.ui.eq.tree.NodeBase.hide(gov.sandia.n2a.ui.eq.tree.NodePart,gov.sandia.n2a.ui.eq.FilteredTreeModel,boolean)"], "Fixed commit": "1bf344d0897f2ea9210990ec4732aabdd8dc9e22", "Url": "https://api.github.com/repos/frothga/n2a", "Date": "2017-03-04T19:01:13Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter((\"\" + (fund.getFund_id())))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (priceStr == null) { throw new java.lang.Exception(\"Fund list not updated. Please refresh and try again.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8327/buggy-version/Task7.src.controller.TransitionDayAction.java", "BodyUseAPI": [], "Fixed commit": "e9e165594485af6c07efd9b03a1e98a304ca9ef9", "Url": "https://api.github.com/repos/migrantcheng/IdeaFact", "Date": "2014-01-30T22:15:08Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selectPositon) == (-1)) { int position = ((definitionItems.size()) > 0) ? (definitionItems.size()) - 1 : 0; com.baijiahulian.player.bean.VideoItem.DefinitionItem definitionItem = definitionItems.get(position); selectDefinition(definitionItem.type, position); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/554/buggy-version/VideoPlaybackUI.playbackui.src.main.java.com.baijia.playbackui.activity.PBRoomActivity.java", "BodyUseAPI": [], "Fixed commit": "18d0c6d644ac4bae37a75612d546c3b0e641da92", "Url": "https://api.github.com/repos/baijia/BJPlaybackUI-Android", "Date": "2017-12-20T08:23:13Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((H.getAndMore(block).val) != null) { int index = H.getAndMore(block).val; encodedPixels[i][j] = index; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8210/buggy-version/HashTableProject.src.IndexedColorEncoder.java", "BodyUseAPI": ["H.getAndMore(IndexedColorEncoder.Block)"], "Fixed commit": "0d938ebc0edb4a1409ea00a5f9666fd9a3407f65", "Url": "https://api.github.com/repos/shayne1993/DataStructureProject", "Date": "2016-02-17T04:49:05Z"},
{"Line": "=>345", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastBuildNumber == after_number) { lastBuildNumber += 20; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3846/buggy-version/jtravis.src.main.java.fr.inria.spirals.jtravis.helpers.BuildHelper.java", "BodyUseAPI": [], "Fixed commit": "30278e1404d23c1108ec91b8790b3e5755275df9", "Url": "https://api.github.com/repos/Spirals-Team/repairnator", "Date": "2017-09-21T16:39:15Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!duplicatePacket) { blockNum++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4224/buggy-version/TFTP.src.tftp.net.Sender.java", "BodyUseAPI": [], "Fixed commit": "c350668fbadceffe829994d555e725a19445dc99", "Url": "https://api.github.com/repos/ndmason1/SYSC3303_TFTP", "Date": "2015-06-02T03:38:33Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((challengeSpec.getTarget()) instanceof java.lang.Double) { targetValue = ((java.lang.Double) (challengeSpec.getTarget())); }else { targetValue = java.lang.Double.valueOf(((java.lang.String) (challengeSpec.getTarget()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5172/buggy-version/src.main.java.eu.trentorise.game.challenges.ChallengesRulesGenerator.java", "BodyUseAPI": ["eu.trentorise.game.challenges.util.ChallengeRuleRow.getTarget()", "java.lang.Double.valueOf(((java.lang.String) (challengeSpec.getTarget())))", "eu.trentorise.game.challenges.util.ChallengeRuleRow.getTarget()"], "Fixed commit": "ba4a462ee4ccbfcc1128d0d718df57dfff2b62e1", "Url": "https://api.github.com/repos/smartcommunitylab/game-engine.challenge-gen", "Date": "2016-10-03T14:16:15Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (posX > 0) { if (posY < ((gridHeight) - 1)) { neighbours.addAll(getAt((posX - 1), (posY + 1))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5732/buggy-version/src.experiment.physics.Grid.java", "BodyUseAPI": ["experiment.physics.Grid.getAt(int,int)", "java.util.List<experiment.physics.entities.atoms.Atom>.addAll(java.util.List<experiment.physics.entities.atoms.Atom>)"], "Fixed commit": "f72102581ef3fa9b5160dd0f4071134586c68d28", "Url": "https://api.github.com/repos/valentiay/MaxwellPhysicsMIPT3.0", "Date": "2017-08-20T18:24:12Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.silverpeas.util.StringUtil.isDefined(axisId)) && (!(\"0\".equals(axisId)))) { highlightedText = com.stratelia.webactiv.util.viewGenerator.html.glossary.HighlightTermTag.highlighter.searchReplace(highlightedText, className, axisId, onlyFirst, language); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8909/buggy-version/web-core.src.main.java.com.stratelia.webactiv.util.viewGenerator.html.glossary.HighlightTermTag.java", "BodyUseAPI": ["com.silverpeas.glossary.HighlightGlossaryTerms.searchReplace(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String)"], "Fixed commit": "01a6435c8f71c33d745aa8895d8ce360588b2cc4", "Url": "https://api.github.com/repos/auroreallibe/Silverpeas-Core", "Date": "2011-11-25T08:33:42Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mIsAlive)) { disableBottomBar(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5584/buggy-version/app.src.main.java.com.threemoji.threemoji.ChatActivity.java", "BodyUseAPI": [], "Fixed commit": "84ea76b7479d7263a5608dcb9dcc6d94b29d81be", "Url": "https://api.github.com/repos/threemoji/threemoji", "Date": "2015-08-07T17:09:20Z"},
{"Line": "=>481", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mInitCursor.isClosed())) { mInitCursor.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5584/buggy-version/app.src.main.java.com.threemoji.threemoji.ChatActivity.java", "BodyUseAPI": ["android.database.Cursor.close()"], "Fixed commit": "84ea76b7479d7263a5608dcb9dcc6d94b29d81be", "Url": "https://api.github.com/repos/threemoji/threemoji", "Date": "2015-08-07T17:09:20Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value == null) && ((this.getValue()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1791/buggy-version/kie-wb-common-forms.kie-wb-common-forms-commons.kie-wb-common-forms-common-rendering.kie-wb-common-forms-common-rendering-client.src.main.java.org.kie.workbench.common.forms.common.rendering.client.widgets.decimalBox.DecimalBox.java", "BodyUseAPI": [], "Fixed commit": "381ade0d3503c3adbeef6fb59e3fb2dc353c8739", "Url": "https://api.github.com/repos/kiegroup/kie-wb-common", "Date": "2017-05-22T15:23:51Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value == null) && ((this.getValue()) == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1791/buggy-version/kie-wb-common-forms.kie-wb-common-forms-commons.kie-wb-common-forms-common-rendering.kie-wb-common-forms-common-rendering-client.src.main.java.org.kie.workbench.common.forms.common.rendering.client.widgets.integerBox.IntegerBox.java", "BodyUseAPI": [], "Fixed commit": "381ade0d3503c3adbeef6fb59e3fb2dc353c8739", "Url": "https://api.github.com/repos/kiegroup/kie-wb-common", "Date": "2017-05-22T15:23:51Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (copyDetail.isPublicationHeaderMustBeCopied()) { copyDetail.setFromNodePK(rootPK); copyDetail.setToNodePK(targetPK); getKmeliaBm().copyPublications(copyDetail); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1055/buggy-version/kmelia.kmelia-ejb.src.main.java.com.silverpeas.component.kmelia.KmeliaPaste.java", "BodyUseAPI": ["com.stratelia.webactiv.kmelia.control.ejb.KmeliaBm.copyPublications(com.silverpeas.component.kmelia.KmeliaCopyDetail)", "com.silverpeas.component.kmelia.KmeliaCopyDetail.setFromNodePK(com.stratelia.webactiv.util.node.model.NodePK)", "com.silverpeas.component.kmelia.KmeliaCopyDetail.setToNodePK(com.stratelia.webactiv.util.node.model.NodePK)"], "Fixed commit": "609878a3838a60c239068a8bea889836848ab2b4", "Url": "https://api.github.com/repos/mmoqui/Silverpeas-Components", "Date": "2015-07-24T08:09:02Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((lics.get(satId)) != null) { wsdItemAnnotation.setConstituents((i++), lics.get(satId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/121/buggy-version/de.tudarmstadt.ukp.dkpro.wsd.senseval.src.main.java.de.tudarmstadt.ukp.dkpro.wsd.io.reader.SensevalReader.java", "BodyUseAPI": ["java.util.Map<java.lang.String, de.tudarmstadt.ukp.dkpro.wsd.type.LexicalItemConstituent>.get(java.lang.String)", "de.tudarmstadt.ukp.dkpro.wsd.type.WSDItem.setConstituents(int,lics.get(satId))"], "Fixed commit": "62a99bd9a51e739de968b4d98b8f469f3667605d", "Url": "https://api.github.com/repos/dkpro/dkpro-wsd", "Date": "2013-07-31T14:36:25Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((promptchoice_int2) == 2) { java.lang.System.out.println(\"Enter the number of questions\"); customprompt = this.customNumQuestions(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2412/buggy-version/src.edu.ucsb.cs56.S12.esterkin.Game.java", "BodyUseAPI": [], "Fixed commit": "30766694a27cbfe3d392b8c8c714d9eb3a313d6f", "Url": "https://api.github.com/repos/ucsb-cs56-projects/cs56-games-guess-the-capital", "Date": "2016-02-19T11:46:50Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mainActivity) != null) { mainActivity.refreshMainStatus(loadstatus); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5864/buggy-version/PocketMarketing.src.net.jsiq.marketing.fragment.LeftMenuFragment.java", "BodyUseAPI": [], "Fixed commit": "48d2de7990a421f175c4aff4ed46d98bbeab34d9", "Url": "https://api.github.com/repos/onecoders/ViewPageIndicator", "Date": "2013-11-29T01:05:16Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mainActivity) != null) { mainActivity.switchCatalogByMenu(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5864/buggy-version/PocketMarketing.src.net.jsiq.marketing.fragment.LeftMenuFragment.java", "BodyUseAPI": [], "Fixed commit": "48d2de7990a421f175c4aff4ed46d98bbeab34d9", "Url": "https://api.github.com/repos/onecoders/ViewPageIndicator", "Date": "2013-11-29T01:05:16Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f == (eqtlmappingpipeline.metaqtl3.FDR.FileFormat.REDUCED)) { if (((snpcol == (-1)) || (pvalcol == (-1))) || ((probecol == (-1)) && (genecol == (-1)))) { java.lang.System.out.println((\"Column not found in permutation file: \" + fileString)); java.lang.System.out.println((\"PValue: \" + pvalcol)); java.lang.System.out.println((\"SNP: \" + snpcol)); java.lang.System.out.println((\"Probe: \" + probecol)); java.lang.System.out.println((\"Gene: \" + genecol)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3317/buggy-version/eqtl-mapping-pipeline.src.main.java.eqtlmappingpipeline.metaqtl3.FDR.java", "BodyUseAPI": [], "Fixed commit": "9d673a3ccbb43171d156039580bd8e58ed8f5bf9", "Url": "https://api.github.com/repos/Bonder-MJ/systemsgenetics", "Date": "2014-04-23T19:55:50Z"},
{"Line": "=>956", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mServiceProv.getPhoto()) != null) { mImgView.setImageBitmap(com.extenprise.mapp.medico.util.Utility.getBitmapFromBytes(mServiceProv.getPhoto())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8512/buggy-version/app.src.main.java.com.extenprise.mapp.medico.service.activity.ServProvProfileActivity.java", "BodyUseAPI": ["android.widget.ImageView.setImageBitmap(com.extenprise.mapp.medico.util.Utility.getBitmapFromBytes(mServiceProv.getPhoto()))", "com.extenprise.mapp.medico.service.data.ServiceProvider.getPhoto()", "com.extenprise.mapp.medico.util.Utility.getBitmapFromBytes(mServiceProv.getPhoto())"], "Fixed commit": "dfa39bd0f77788ab50a05c1ea8b80ec18cc1f336", "Url": "https://api.github.com/repos/ambey/MobApp", "Date": "2016-01-29T14:00:56Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((assocWorkCycle.getAddedMessages().size()) > 0) { a = new de.tu.dresden.dud.dc.WorkCycle.WorkCycleReservationPayload(assocWorkCycle.getAddedMessages().removeFirst().getPayload()); }else { finished = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2767/buggy-version/DC+.src.de.tu.dresden.dud.dc.WorkCycle.WorkCycleReserving.java", "BodyUseAPI": ["de.tu.dresden.dud.dc.WorkCycle.WorkCycleReserving.getAddedMessages()", "assocWorkCycle.getAddedMessages().removeFirst()", "assocWorkCycle.getAddedMessages().removeFirst().getPayload()"], "Fixed commit": "dcffb73294a401f74cc82ec0cf45ee4ba53c89b9", "Url": "https://api.github.com/repos/klobs/dc--", "Date": "2011-05-02T14:38:56Z"},
{"Line": "=>499", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((expectedRounds) <= 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2767/buggy-version/DC+.src.de.tu.dresden.dud.dc.WorkCycle.WorkCycle.java", "BodyUseAPI": [], "Fixed commit": "dcffb73294a401f74cc82ec0cf45ee4ba53c89b9", "Url": "https://api.github.com/repos/klobs/dc--", "Date": "2011-05-02T14:38:56Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!result) { edu.clemson.cs.r2jt.typeandpopulate.MTType subtypetype = subtype.getType(); edu.clemson.cs.r2jt.typereasoning.TypeGraph.EstablishedRelationship r2 = new edu.clemson.cs.r2jt.typereasoning.TypeGraph.EstablishedRelationship(subtypetype, supertype); result = ((myEstablishedSubtypes.contains(r2)) || (subtypetype.equals(subtype))) || (subtypetype.isSyntacticSubtypeOf(supertype)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/717/buggy-version/src.main.java.edu.clemson.cs.r2jt.typereasoning.TypeGraph.java", "BodyUseAPI": [], "Fixed commit": "328fc99b0d97275ae8836cb98c4719a8f8a44ae7", "Url": "https://api.github.com/repos/yushan87/RESOLVE", "Date": "2016-03-04T22:05:29Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((transactions.length) > 0) { fillTransList(R.layout.x_home_trans_row, null, transactions, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8489/buggy-version/app.src.main.java.com.moneymanager.activities.stats.AStats.java", "BodyUseAPI": ["com.moneymanager.activities.stats.AStats.TransListLoader.fillTransList(R.layout.x_home_trans_row,<nulltype>,com.moneymanager.entities.Transaction[],boolean)"], "Fixed commit": "f9f8fd10e304fd44d78b09d46f6eb83db9346f85", "Url": "https://api.github.com/repos/PranayKarani/MoneyManagerProto", "Date": "2017-02-01T10:39:19Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((link.getRemoteNetworkIndex()) != (this.getNetworkIndex())) networkIndices.add(link.getRemoteNetworkIndex());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1148/buggy-version/core.src.network.FlowNetwork.java", "BodyUseAPI": ["network.InterdependentLink.getRemoteNetworkIndex()", "java.util.Collection<java.lang.Integer>.add(link.getRemoteNetworkIndex())"], "Fixed commit": "20b9b55f6e67c16dc82050df2363e7d1294d7fb4", "Url": "https://api.github.com/repos/SFINA/SFINA", "Date": "2016-12-07T10:46:33Z"},
{"Line": "=>571", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2396/buggy-version/app.src.main.java.com.ggstudios.lolcraft.Build.java", "BodyUseAPI": [], "Fixed commit": "1efaf13ad0eaf80c14e72ec9c7fde06c47a11f4b", "Url": "https://api.github.com/repos/idunnololz/LoLCraft", "Date": "2015-03-26T21:58:31Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(sharedPreferencesFiles.getWriteKey(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (classId.contentEquals(\"Not set Yet\")) { etWriteKey.setHint(\"Not Yet Set\"); }else { etWriteKey.setText(classId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8878/buggy-version/app.src.main.java.timetable.insectiousapp.com.timetable.activities.SetWriteKeyActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "94b5c1aa48b2459d190b0355c92037efb6b25428", "Url": "https://api.github.com/repos/TusharMann/TimeTableDtu", "Date": "2016-07-13T07:24:56Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mTasksList.get(memberId)) == null) { mTasksList.put(memberId, new java.util.ArrayList<com.kiwi.auready_ver2.data.Task>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4805/buggy-version/app.src.main.java.com.kiwi.auready_ver2.tasks.TasksAdapter.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.ArrayList<com.kiwi.auready_ver2.data.Task>>.put(java.lang.String,java.util.ArrayList<com.kiwi.auready_ver2.data.Task>)"], "Fixed commit": "701f0f69b2885f89aa2dd90f5677ba39f26fae4f", "Url": "https://api.github.com/repos/kiwi-choe/auready", "Date": "2016-12-28T15:31:49Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((searchRecordsRequest.getErrorMessage()) == null) { searchRecordsRequest.setErrorMessage(RecapConstants.SEARCH_RESULT_ERROR_NO_RECORDS_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7065/buggy-version/src.main.java.org.recap.controller.SearchRecordsController.java", "BodyUseAPI": ["org.recap.model.search.SearchRecordsRequest.setErrorMessage(RecapConstants.SEARCH_RESULT_ERROR_NO_RECORDS_FOUND)"], "Fixed commit": "dd8413b9b0567e21c3938230a9d917c367f3fe02", "Url": "https://api.github.com/repos/kirankumar03/scsb-ui", "Date": "2017-03-22T11:38:14Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((java.lang.Math.abs(((CADL.getTime()) - csum))) > 2) java.lang.System.out.println(((((((\"Warning! Time shift! There might be something wrong with pattern \" + (llPatternIndex)) + \" (difference = \") + ((CADL.getTime()) - csum)) + \" seconds);\") + \" for the moment we patched this error and\") + \" let the run complete, be sure to fix configuration!\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/601/buggy-version/src.it.polimi.deib.atg.sharon.engine.thread.SensorSimulationThread.java", "BodyUseAPI": ["it.polimi.deib.atg.sharon.engine.thread.ADLQueue.getTime()", "java.io.PrintStream.println(((((((\"Warning! Time shift! There might be something wrong with pattern \" + (llPatternIndex)) + \" (difference = \") + ((CADL.getTime()) - csum)) + \" seconds);\") + \" for the moment we patched this error and\") + \" let the run complete, be sure to fix configuration!\"))"], "Fixed commit": "73924663a0acf7871600c399f363020e78f99e23", "Url": "https://api.github.com/repos/ATG-PoliMi/Sharon", "Date": "2016-02-05T14:30:13Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.jetbrains.jetpad.vclang.term.expr.visitor.Expression.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (i < (args.size())) { result = Apps(result, java.util.Collections.singletonList(args.get(i)), java.util.Collections.singletonList(((com.jetbrains.jetpad.vclang.term.expr.visitor.AppExpression) (expr)).getFlags().get(i))); i++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8611/buggy-version/src.main.java.com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.java", "BodyUseAPI": ["java.util.Collections.singletonList(? extends com.jetbrains.jetpad.vclang.term.expr.visitor.Expression)", "java.util.List<? extends com.jetbrains.jetpad.vclang.term.expr.visitor.Expression>.get(int)", "((com.jetbrains.jetpad.vclang.term.expr.visitor.AppExpression) (expr)).getFlags().get(int)", "com.jetbrains.jetpad.vclang.term.expr.visitor.NormalizeVisitor.Apps(com.jetbrains.jetpad.vclang.term.expr.visitor.Expression,java.util.List<? extends com.jetbrains.jetpad.vclang.term.expr.visitor.Expression>,java.util.List)", "java.util.Collections.singletonList(((com.jetbrains.jetpad.vclang.term.expr.visitor.AppExpression) (expr)).getFlags().get(i))"], "Fixed commit": "ae11846f351b798fb0e2b54e4a91492cff4b19f6", "Url": "https://api.github.com/repos/part-xx/vclang", "Date": "2016-03-10T14:23:32Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((destTar.exists()) && (destTar.isFile())) { org.popkit.leap.elpa.services.LocalCache.updateArchive(recipeDo.getPkgName(), archiveVo); }else { org.popkit.core.logger.LeapLogger.error((\"generate destTar error! #destTar=\" + (destTar.getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4465/buggy-version/pelpa-web.src.main.java.org.popkit.leap.elpa.services.PkgBuildService.java", "BodyUseAPI": ["java.io.File.getAbsolutePath()", "org.popkit.core.logger.LeapLogger.error(java.lang.String)"], "Fixed commit": "25daa1b2da413f58fdabe3654d208919cbe9a43e", "Url": "https://api.github.com/repos/popkit/pelpa", "Date": "2016-06-12T14:02:45Z"},
{"Line": "=>957", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 19) { sendBroadcast(new android.content.Intent(android.content.Intent.ACTION_MEDIA_MOUNTED, android.net.Uri.parse((\"file://\" + (android.os.Environment.getExternalStorageDirectory()))))); }else { sendBroadcast(new android.content.Intent(android.content.Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, android.net.Uri.parse((\"file://\" + (android.os.Environment.getExternalStorageDirectory()))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5258/buggy-version/src.com.qaffeinate.cask.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3c1892b4913e0b1be7ede62d318e66585fb4b076", "Url": "https://api.github.com/repos/29jitender/File_manager", "Date": "2014-07-13T04:48:57Z"},
{"Line": "=>631", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 19) { sendBroadcast(new android.content.Intent(android.content.Intent.ACTION_MEDIA_MOUNTED, android.net.Uri.parse((\"file://\" + (android.os.Environment.getExternalStorageDirectory()))))); }else { sendBroadcast(new android.content.Intent(android.content.Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, android.net.Uri.parse((\"file://\" + (android.os.Environment.getExternalStorageDirectory()))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5258/buggy-version/src.com.qaffeinate.cask.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3c1892b4913e0b1be7ede62d318e66585fb4b076", "Url": "https://api.github.com/repos/29jitender/File_manager", "Date": "2014-07-13T04:48:57Z"},
{"Line": "=>864", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obj.zip()) { if ((Build.VERSION.SDK_INT) < 19) { sendBroadcast(new android.content.Intent(android.content.Intent.ACTION_MEDIA_MOUNTED, android.net.Uri.parse((\"file://\" + (android.os.Environment.getExternalStorageDirectory()))))); }else { sendBroadcast(new android.content.Intent(android.content.Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, android.net.Uri.parse((\"file://\" + (android.os.Environment.getExternalStorageDirectory()))))); } com.qaffeinate.cask.MainActivity.dialog.dismiss(); refresh_activity(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5258/buggy-version/src.com.qaffeinate.cask.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3c1892b4913e0b1be7ede62d318e66585fb4b076", "Url": "https://api.github.com/repos/29jitender/File_manager", "Date": "2014-07-13T04:48:57Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 19) { sendBroadcast(new android.content.Intent(android.content.Intent.ACTION_MEDIA_MOUNTED, android.net.Uri.parse((\"file://\" + (android.os.Environment.getExternalStorageDirectory()))))); }else { sendBroadcast(new android.content.Intent(android.content.Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, android.net.Uri.parse((\"file://\" + (android.os.Environment.getExternalStorageDirectory()))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5258/buggy-version/src.com.qaffeinate.cask.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "3c1892b4913e0b1be7ede62d318e66585fb4b076", "Url": "https://api.github.com/repos/29jitender/File_manager", "Date": "2014-07-13T04:48:57Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Arrays.asList(cardIdResponse.body())"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((cardIdList.size()) > 0) { java.lang.String lastCardId = cardIdList.get(((cardIdList.size()) - 1)).toString(); com.thoughtworks.lhli.lovelive_rock.LoveLiveApp.getInstance().setMaxCardNumber(lastCardId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3997/buggy-version/app.src.main.java.com.thoughtworks.lhli.lovelive_rock.manager.CardManager.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.get(int)", "java.lang.Integer.toString()", "java.util.List<java.lang.Integer>.size()"], "Fixed commit": "e819f9e6eb0e23ea61d2e8b87790f24e3efcdcdd", "Url": "https://api.github.com/repos/Kevin170113664/lovelive_rock", "Date": "2015-12-19T12:39:42Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.freak.videosenfants.activities.BrowseSDActivity.DEBUG) android.util.Log.i(com.freak.videosenfants.activities.BrowseSDActivity.TAG, (\"Delete \" + (element.getPath())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2010/buggy-version/app.src.main.java.com.freak.videosenfants.activities.BrowseSDActivity.java", "BodyUseAPI": [], "Fixed commit": "4d142d81f4686e7d599dc99bd79fd7e880856a0b", "Url": "https://api.github.com/repos/Pilou44/VideosEnfants", "Date": "2016-04-23T07:58:09Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.freak.videosenfants.activities.BrowseSDActivity.DEBUG) android.util.Log.i(com.freak.videosenfants.activities.BrowseSDActivity.TAG, (\"Going to \" + (mCurrent.getParent().getPath())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2010/buggy-version/app.src.main.java.com.freak.videosenfants.activities.BrowseSDActivity.java", "BodyUseAPI": [], "Fixed commit": "4d142d81f4686e7d599dc99bd79fd7e880856a0b", "Url": "https://api.github.com/repos/Pilou44/VideosEnfants", "Date": "2016-04-23T07:58:09Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.freak.videosenfants.activities.BrowseSDActivity.DEBUG) android.util.Log.i(com.freak.videosenfants.activities.BrowseSDActivity.TAG, \"Going to root\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2010/buggy-version/app.src.main.java.com.freak.videosenfants.activities.BrowseSDActivity.java", "BodyUseAPI": [], "Fixed commit": "4d142d81f4686e7d599dc99bd79fd7e880856a0b", "Url": "https://api.github.com/repos/Pilou44/VideosEnfants", "Date": "2016-04-23T07:58:09Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (size < 1) { size = 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9158/buggy-version/src.main.java.com.weidian.bges.reader.ReadESClient.java", "BodyUseAPI": [], "Fixed commit": "80e9c178368e3ad69fe8adf1df3bbb0b79ab4b15", "Url": "https://api.github.com/repos/jiangfuqiang/bges", "Date": "2017-11-22T10:53:08Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.bonn.mobilegaming.geoquest.GeoQuestLocationListener.getLastLocation()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lastLoc != null) myMapCtrl.animateTo(location2GP(locationListener.getLastLocation()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1276/buggy-version/GQ_Android.src.edu.bonn.mobilegaming.geoquest.mission.MapOverview.java", "BodyUseAPI": [], "Fixed commit": "a5adfa42c58b0b139a805a4c33962e4222f687ad", "Url": "https://api.github.com/repos/geoquest/android", "Date": "2013-02-27T11:06:04Z"},
{"Line": "=>294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.bonn.mobilegaming.geoquest.GeoQuestLocationListener.getLastLocation()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lastLoc != null) myMapCtrl.animateTo(location2GP(locationListener.getLastLocation()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1276/buggy-version/GQ_Android.src.edu.bonn.mobilegaming.geoquest.mission.OSMap.java", "BodyUseAPI": [], "Fixed commit": "a5adfa42c58b0b139a805a4c33962e4222f687ad", "Url": "https://api.github.com/repos/geoquest/android", "Date": "2013-02-27T11:06:04Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((this.callbackBody) != null) && ((this.callbackBody.length()) > 0)) { stringer.key(\"callbackBody\").value(this.callbackBody); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/310/buggy-version/src.main.java.com.qiniu.api.rs.PutPolicy.java", "BodyUseAPI": ["stringer.key(\"callbackBody\").value(java.lang.String)"], "Fixed commit": "5eb4507f3ab952534c960397ff6c0f29a5613541", "Url": "https://api.github.com/repos/qiniu/java-sdk", "Date": "2013-08-05T02:44:38Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (instance != null) instance.remove();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2373/buggy-version/client.src.main.java.com.orientechnologies.orient.client.remote.OStorageRemote.java", "BodyUseAPI": ["com.orientechnologies.orient.client.remote.OStorageRemoteThreadLocal.remove()"], "Fixed commit": "69b868b024bf85182c1295076984ac29de073230", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-05-29T18:33:07Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((_index) < (_response.getResponseCount())) { return true; }else if ((_response.getType()) == (Response.ResponseType.SUCCESS_PARTIAL)) { _response = _connection.get_more(_response.getToken()); _index = 0; return (_index) < (_response.getResponseCount()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1886/buggy-version/src.main.java.com.dkhenry.RethinkDB.RqlCursor.java", "BodyUseAPI": ["com.dkhenry.RethinkDB.RqlConnection.get_more(_response.getToken())", "com.rethinkdb.Ql2.Response.getType()", "com.rethinkdb.Ql2.Response.getToken()"], "Fixed commit": "e89ed434509e2660890621201ea71477712ad9ce", "Url": "https://api.github.com/repos/artichikin/rethinkjava", "Date": "2014-05-09T17:41:06Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.lebk.po.Product>.size()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((pageSize) * (pageNow)) > rowInTotal) { currentPL = pl.subList(((pageSize) * ((pageNow) - 1)), rowInTotal); }else { currentPL = pl.subList(((pageSize) * ((pageNow) - 1)), ((pageSize) * (pageNow))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9202/buggy-version/src.main.java.com.lebk.action.TilesAction.java", "BodyUseAPI": ["java.util.List<com.lebk.po.Product>.subList(int,int)", "java.util.List<com.lebk.po.Product>.subList(int,java.lang.Integer)"], "Fixed commit": "2c7aab97d3e6181e3c1209bb5d3b23d75c6cf762", "Url": "https://api.github.com/repos/lebk/InventoryMgmt", "Date": "2014-01-16T08:43:39Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tag != null) { switch (tag.getDataType()) { case org.red5.io.IoConstants.TYPE_AUDIO : audio++; break; case org.red5.io.IoConstants.TYPE_VIDEO : video++; break; case org.red5.io.IoConstants.TYPE_METADATA : meta++; break; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7461/buggy-version/src.main.java.org.red5.media.processor.GenericWriterPostProcessor.java", "BodyUseAPI": ["org.red5.io.ITag.getDataType()"], "Fixed commit": "c0e2ff2066ebdf6fe88b0a4de45d5e19bd9e6c79", "Url": "https://api.github.com/repos/solomax/red5-io", "Date": "2016-12-22T23:08:06Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.transformations) == null) { this.transformations = new gtna.transformation.Transformation[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/864/buggy-version/src.gtna.networks.Network.java", "BodyUseAPI": [], "Fixed commit": "54a9a8e43225e555480082acc772a60bcefa42f6", "Url": "https://api.github.com/repos/stef-roos/GTNA", "Date": "2012-03-15T09:19:38Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["system.actors.get(message.dest)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (actor != null) safetyMethod(message, actor);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5402/buggy-version/actor4j-m-core.src.main.java.actor4j.core.ActorThread.java", "BodyUseAPI": ["actor4j.core.ActorThread.safetyMethod(actor4j.core.ActorMessage<?>,actor4j.core.Actor)"], "Fixed commit": "d6039d66e7278c8a7474d57c22a02573ffb84e29", "Url": "https://api.github.com/repos/relvaner/actor4j-core", "Date": "2015-10-11T20:46:37Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (end <= start) return ((B) (this));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7025/buggy-version/src.main.java.net.openhft.chronicle.bytes.BytesStore.java", "BodyUseAPI": [], "Fixed commit": "2f0c90c94545a6f1dabb976fda484bc946168c44", "Url": "https://api.github.com/repos/OpenHFT/Chronicle-Bytes", "Date": "2015-06-24T12:58:09Z"},
{"Line": "=>455", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (socvalue != 0) cvh.setValue(\"SOC\", soc, timeStamp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6568/buggy-version/obdii.src.main.java.com.bitplan.triplet.OBDTriplet.java", "BodyUseAPI": [], "Fixed commit": "69fe1bb6ec82221f106b822ef44cfb94a6ed5a64", "Url": "https://api.github.com/repos/BITPlan/can4eve", "Date": "2017-08-24T11:41:54Z"},
{"Line": "=>759", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(b.grid.hasMove(fp))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3661/buggy-version/src.com.cjmalloy.stratego.player.AI.java", "BodyUseAPI": [], "Fixed commit": "bc5faf9443d69d566abc9cf1e735ff2c26fff369", "Url": "https://api.github.com/repos/braathwaate/stratego", "Date": "2017-01-07T23:22:22Z"},
{"Line": "=>1470", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.apache.stratos.autoscaler.monitor.cluster.ClusterMonitor.log.isDebugEnabled()) { org.apache.stratos.autoscaler.monitor.cluster.ClusterMonitor.log.debug(java.lang.String.format((\"Cluster instance created: [application-id] %s [service-name] %s \" + \"[cluster-id] %s\"), appId, cluster.getServiceName(), cluster.getClusterId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3667/buggy-version/components.org.apache.stratos.autoscaler.src.main.java.org.apache.stratos.autoscaler.monitor.cluster.ClusterMonitor.java", "BodyUseAPI": ["org.apache.commons.logging.Log.debug(java.lang.String)"], "Fixed commit": "8bed51d04a655425e0aa38b1e64ccc774b91311d", "Url": "https://api.github.com/repos/Pranavan135/stratos", "Date": "2015-06-01T09:07:31Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((((org.bukkit.block.BrewingStand) (brewingStand)).getBrewingTime()) == (-1)) (fuel)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1718/buggy-version/src.main.java.com.gmail.nossr50.runnables.skills.AlchemyBrewTask.java", "BodyUseAPI": [], "Fixed commit": "6388246418d3a1b32607ec03b270f614be4cda4c", "Url": "https://api.github.com/repos/mcMMO-Dev/mcMMO", "Date": "2016-11-13T16:26:29Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.hadoop.conf.Configuration.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (classname != null) try { @java.lang.SuppressWarnings(\"unchecked\") java.lang.Class<org.apache.mahout.graph.model.Parser> parserclass = ((java.lang.Class<org.apache.mahout.graph.model.Parser>) (java.lang.Class.forName(classname))); parser = ((org.apache.mahout.graph.model.Parser) (parserclass.newInstance())); } catch (java.lang.ClassNotFoundException e) { e.printStackTrace(); } catch (java.lang.InstantiationException e) { e.printStackTrace(); } catch (java.lang.IllegalAccessException e) { e.printStackTrace(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5725/buggy-version/ktrusses-core.src.main.java.org.apache.mahout.graph.common.SimplifyGraph.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String)"], "Fixed commit": "0696048787832e799caf7feb3e39f4526f75037d", "Url": "https://api.github.com/repos/TillmannFiehn/ktrusses", "Date": "2011-06-13T14:07:59Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["p.getInventory().getItem(p.getInventory().first(ite))"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((item.getDurability()) + 1) < (item.getType().getMaxDurability())) item.setDurability(((short) ((item.getDurability()) + 1))); else p.getInventory().removeItem(item);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7158/buggy-version/src.shadowlauch.advancedbow.main.BowListener.java", "BodyUseAPI": ["p.getInventory().removeItem(org.bukkit.inventory.ItemStack)", "org.bukkit.inventory.ItemStack.getDurability()", "org.bukkit.inventory.ItemStack.setDurability(((short) ((item.getDurability()) + 1)))"], "Fixed commit": "f711b9cd82da0e88f0ab9b4d53fb29ff3c196686", "Url": "https://api.github.com/repos/Shadowlauch/AdvancedBow", "Date": "2011-07-28T18:58:07Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((type == null) || (type == (PotionType.WATER))) { this.level = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4199/buggy-version/src.main.java.org.bukkit.potion.Potion.java", "BodyUseAPI": [], "Fixed commit": "2c895782b911546e1f83458b7cfea3b5ab03edd1", "Url": "https://api.github.com/repos/MinecraftPortCentral/Bukkit", "Date": "2012-03-04T23:58:18Z"},
{"Line": "=>237", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["soot.jimple.AssignStmt.getRightOp()", "soot.jimple.toolkits.typing.fast.Typing.get(soot.Local)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tgType == (soot.Scene.v().getObjectType())) && (rhs instanceof soot.Local)) { soot.Type rhsType = this.tg.get(((soot.Local) (rhs))); if (rhsType instanceof soot.PrimType) { if ((defs) == null) { defs = LocalDefs.Factory.newLocalDefs(jb); uses = LocalUses.Factory.newLocalUses(jb, defs); } for (soot.Unit defU : defs.getDefsOfAt(base, stmt)) { if (defU instanceof soot.jimple.AssignStmt) { soot.jimple.AssignStmt defUas = ((soot.jimple.AssignStmt) (defU)); if ((defUas.getRightOp()) instanceof soot.jimple.NewArrayExpr) { at = ((soot.ArrayType) (defUas.getRightOp().getType())); break; } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7990/buggy-version/src.soot.jimple.toolkits.typing.fast.UseChecker.java", "BodyUseAPI": [], "Fixed commit": "e8f5a7380b19a4c1f682dddffc0d7611cabd5085", "Url": "https://api.github.com/repos/Sable/soot", "Date": "2016-12-02T15:53:13Z"},
{"Line": "=>258", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (at == null) at = tgType.makeArrayType();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7990/buggy-version/src.soot.jimple.toolkits.typing.fast.UseChecker.java", "BodyUseAPI": [], "Fixed commit": "e8f5a7380b19a4c1f682dddffc0d7611cabd5085", "Url": "https://api.github.com/repos/Sable/soot", "Date": "2016-12-02T15:53:13Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (charset.isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8196/buggy-version/core.src.main.java.org.apache.cxf.helpers.HttpHeaderHelper.java", "BodyUseAPI": [], "Fixed commit": "1a6d4658e051f021cf1282a9f3dd42b2727fca12", "Url": "https://api.github.com/repos/apache/cxf", "Date": "2015-10-07T10:25:04Z"},
{"Line": "=>913", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(url.contains(\"&ratebypass\"))) url += \"&ratebypass=yes\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1888/buggy-version/app.src.main.java.com.github.axet.vget.vhs.YouTubeParser.java", "BodyUseAPI": [], "Fixed commit": "8dfd9b70895d593d245b8d1b90b6c0cf62fd1258", "Url": "https://api.github.com/repos/atum-martin/TuneTube", "Date": "2017-05-26T14:32:26Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (files != null) { for (java.io.File file : files) { if (file.isFile()) { success = success && (file.delete()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7651/buggy-version/src.seasons.BlockArrayIO.java", "BodyUseAPI": [], "Fixed commit": "99657c60d2dee4f0fb12d05996d106ee2cffdc9b", "Url": "https://api.github.com/repos/BagelOrb/mcds", "Date": "2016-04-08T12:22:18Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((subGraph) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8538/buggy-version/src.main.java.programminglife.gui.controller.GraphController.java", "BodyUseAPI": [], "Fixed commit": "b97c201fea4796e13f252d4af7148b3a567b0af7", "Url": "https://api.github.com/repos/ProgrammingLife2017/Desoxyribonucleinezuur", "Date": "2017-06-23T09:04:58Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((player.currentVelocity.y) < 0) && (!(player.inContactWithPlatform))) { player.currentAnimation = Assets.instance.survivor.fallingAnimation; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4333/buggy-version/core.src.com.douge.gdx.game.playerstate.FallingState.java", "BodyUseAPI": [], "Fixed commit": "98b44ff7c65d9935556330dc6fc700154bed189b", "Url": "https://api.github.com/repos/emmdouge/GemHunter", "Date": "2016-12-05T13:47:25Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tree instanceof org.sonar.plugins.java.api.tree.ExpressionTree) { type = ((org.sonar.plugins.java.api.tree.ExpressionTree) (tree)).symbolType(); }else if (tree instanceof org.sonar.plugins.java.api.tree.TypeTree) { type = ((org.sonar.plugins.java.api.tree.TypeTree) (tree)).symbolType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1103/buggy-version/java-squid.src.main.java.org.sonar.java.ast.parser.PrinterVisitor.java", "BodyUseAPI": [], "Fixed commit": "ba99d3cdc0a3c73b6e737b18f170106997dea97c", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2015-03-18T10:48:49Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (type != null) { sb.append(\" \").append(type.fullyQualifiedName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1103/buggy-version/java-squid.src.main.java.org.sonar.java.ast.parser.PrinterVisitor.java", "BodyUseAPI": ["org.sonar.plugins.java.api.semantic.Type.fullyQualifiedName()", "java.lang.StringBuilder.append(type.fullyQualifiedName())"], "Fixed commit": "ba99d3cdc0a3c73b6e737b18f170106997dea97c", "Url": "https://api.github.com/repos/SonarSource/sonar-java", "Date": "2015-03-18T10:48:49Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((!(android.text.TextUtils.isEmpty(key))) && (bitmap != null)) { mMemoryCache.put(key, bitmap); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4248/buggy-version/photopicker.src.main.java.com.lling.photopicker.utils.ImageLoader.java", "BodyUseAPI": ["android.util.LruCache<java.lang.String, android.graphics.Bitmap>.put(java.lang.String,android.graphics.Bitmap)"], "Fixed commit": "6bced81ab9c1e754789e4ef1e38489698f1506af", "Url": "https://api.github.com/repos/liuling07/PhotoPicker", "Date": "2015-11-15T15:21:09Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cause instanceof com.zaptext.nxintegros.exceptions.DictionaryLookupException) { xmlRecord.setFieldInError(((com.zaptext.nxintegros.exceptions.DictionaryLookupException) (cause)).getFailedProperty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5697/buggy-version/batch-xml-parser.src.main.java.com.zaptext.nxintegros.services.ErrorHandlerImpl.java", "BodyUseAPI": [], "Fixed commit": "7ac5aaa5d6055db5d6177859a20011c30404afa6", "Url": "https://api.github.com/repos/kemalerden/zaptext", "Date": "2013-11-13T11:39:03Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((EOF) == (getCurrentCharacter())) { break; }else { raiseError(java.lang.String.format(\"Invalid character '%s' at %s\", getCurrentCharacter(), createPosition())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/274/buggy-version/jebnf-core.src.main.java.de.weltraumschaf.jebnf.parser.EbnfScanner.java", "BodyUseAPI": [], "Fixed commit": "f2fe0c8768b79e9eb4b54d571a01ae6bbad4db90", "Url": "https://api.github.com/repos/Weltraumschaf/jebnf", "Date": "2012-08-30T10:35:36Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((designFunction.getType()) != null) { for (org.eclipse.eatop.eastadl21.FunctionPort port : designFunction.getType().getPort()) { result.add(new org.eclipse.eatop.connectorcreator.eadl.ports.PortPrototypeEATop(port)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1487/buggy-version/plugins.org.eclipse.eatop.connectorcreator.eadl.src.org.eclipse.eatop.connectorcreator.eadl.swcomponents.SwComponentPrototypeEATop.java", "BodyUseAPI": ["designFunction.getType().getPort()", "org.eclipse.eatop.eastadl21.DesignFunctionPrototype.getType()"], "Fixed commit": "f4132012fd6993492e2230638a6613e170035b13", "Url": "https://api.github.com/repos/Arccore/synligare", "Date": "2015-03-30T19:17:41Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((analysisFunction.getType()) != null) { for (org.eclipse.eatop.eastadl21.FunctionPort port : analysisFunction.getType().getPort()) { result.add(new org.eclipse.eatop.connectorcreator.eadl.ports.PortPrototypeEATop(port)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1487/buggy-version/plugins.org.eclipse.eatop.connectorcreator.eadl.src.org.eclipse.eatop.connectorcreator.eadl.swcomponents.SwComponentPrototypeEATop.java", "BodyUseAPI": ["org.eclipse.eatop.eastadl21.AnalysisFunctionPrototype.getType()", "analysisFunction.getType().getPort()"], "Fixed commit": "f4132012fd6993492e2230638a6613e170035b13", "Url": "https://api.github.com/repos/Arccore/synligare", "Date": "2015-03-30T19:17:41Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.yaml.snakeyaml.Yaml.load(java.io.InputStream)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((yaml != null) && (yaml instanceof java.util.Map)) { @java.lang.SuppressWarnings(\"unchecked\") java.util.Map<java.lang.String, java.lang.String> config = ((java.util.Map<java.lang.String, java.lang.String>) (yaml)); for (java.util.Map.Entry<java.lang.String, java.lang.String> entry : config.entrySet()) { org.wso2.carbon.uuf.core.Fragment fragment = fragments.get(entry.getValue()); if (fragment == null) { throw new org.wso2.carbon.uuf.core.UUFException(((((\"Fragment '\" + (entry.getValue())) + \"' '\") + bindingsConfig) + \"' does not exists\")); } binding.put(entry.getKey(), fragment.getRenderer()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2377/buggy-version/uuf-core.src.main.java.org.wso2.carbon.uuf.fileio.FileUtil.java", "BodyUseAPI": [], "Fixed commit": "59238ebf66e0b88f38d7c5b79848fec7a67fe870", "Url": "https://api.github.com/repos/manuranga/carbon-uuf", "Date": "2016-03-16T04:31:29Z"},
{"Line": "=>439", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (movieJsonStr != null) { jsonResp = new org.json.JSONObject(movieJsonStr); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6723/buggy-version/app.src.main.java.layout.MovieDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "b04c17e6217e9ada5eab8d1b0a17bbec01811b60", "Url": "https://api.github.com/repos/miketaco/PopMoviesApp", "Date": "2016-02-17T01:55:29Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (headerEntry.getKey().equals(\"Content-length\")) { request.addHeader(\"Content-Length\", headerEntry.getValue()); }else if (headerEntry.getKey().equals(\"Content-type\")) { request.addHeader(\"Content-Type\", headerEntry.getValue()); }else { request.addHeader(headerEntry.getKey(), headerEntry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7836/buggy-version/modules.transports.src.main.java.org.siddhiesb.transport.passthru.util.TargetRequestFactory.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "java.lang.String.equals(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getValue()", "org.siddhiesb.transport.passthru.TargetRequest.addHeader(java.lang.String,java.lang.String)", "org.siddhiesb.transport.passthru.TargetRequest.addHeader(java.lang.String,java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()", "org.siddhiesb.transport.passthru.TargetRequest.addHeader(java.lang.String,java.lang.String)"], "Fixed commit": "39e26b7c870b96c15b1dfa102a486e482e1bca3c", "Url": "https://api.github.com/repos/kasun04/siddhi-esb", "Date": "2014-06-01T03:08:55Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.ItemStack.getItemMeta()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((meta.getLore()) != null) lores.addAll(meta.getLore());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6915/buggy-version/src.main.java.team.unstudio.udpl.api.item.ItemBuilder.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.addAll(meta.getLore())", "org.bukkit.inventory.meta.ItemMeta.getLore()"], "Fixed commit": "c760668723ab1dfa91e040fe4de245c11e25096c", "Url": "https://api.github.com/repos/UnknownStudio/UDPLib", "Date": "2017-08-11T08:40:24Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { getSupportFragmentManager().beginTransaction().addToBackStack(this.toString()).replace(R.id.activity_main, new com.morihacky.android.rxjava.MainFragment(), this.toString()).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3687/buggy-version/app.src.main.java.com.morihacky.android.rxjava.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "abcb14e4d39dbdcdcec7810b966f0494103e50d1", "Url": "https://api.github.com/repos/gogobook/Android-RxJava", "Date": "2015-05-07T06:57:24Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jface.preference.IPreferenceStore.getInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ret == 0) { ret = ch.elexis.omnivore.views.Preferences.OmnivoreMax_Filename_Length_Default; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6828/buggy-version/ch.elexis.omnivore.src.ch.elexis.omnivore.views.Preferences.java", "BodyUseAPI": [], "Fixed commit": "2ba26b10d3d7e4dd504edb6848a224b737744e50", "Url": "https://api.github.com/repos/ngiger/elexis-3-base", "Date": "2014-06-06T12:39:00Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cordova.getActivity().getResources().getIdentifier(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (iconId == 0) { iconId = cordova.getActivity().getResources().getIdentifier(com.pushlink.cordova.actions.StartAction.ICON, com.pushlink.cordova.actions.StartAction.RESOURCE_MIPMAP, packageName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5151/buggy-version/src.android.actions.StartAction.java", "BodyUseAPI": [], "Fixed commit": "3cd73cb0a6aa819e67366cdbf77d3872eade20eb", "Url": "https://api.github.com/repos/luisvsilva/pushlink-phonegap", "Date": "2017-07-13T01:05:10Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (customIds.isEmpty()) { java.lang.Long[] ids = customIds.toArray(new java.lang.Long[customIds.size()]); long[] customFieldIds = org.apache.commons.lang.ArrayUtils.toPrimitive(ids); reportService.setCustomFieldsIds(customFieldIds); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8244/buggy-version/src.main.java.org.mule.modules.google.dfp.GoogleDfpConnector.java", "BodyUseAPI": ["java.util.List<java.lang.Long>.toArray(java.lang.Long[])", "java.util.List<java.lang.Long>.size()"], "Fixed commit": "bde29d487311817aecf66d35f153e363e8916307", "Url": "https://api.github.com/repos/Ricston/mule-google-dfp-connector", "Date": "2015-05-05T08:49:42Z"},
{"Line": "=>911", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.model.getIsArchived()) { bucket.addMiniTaskstoView(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7521/buggy-version/TaskManager.src.main.java.edu.wpi.cs.wpisuitetng.modules.taskmanager.presenter.TaskPresenter.java", "BodyUseAPI": [], "Fixed commit": "18b65a55d9c3bb317e9ff8a1151868b383eb4c3a", "Url": "https://api.github.com/repos/Acstylos/wpi-suite", "Date": "2014-12-18T16:34:58Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.getAction().equals(InventoryAction.NOTHING)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7861/buggy-version/src.me.kapehh.BattleEquipControl.MainListener.java", "BodyUseAPI": [], "Fixed commit": "c23f261c7190677e74ee5aac758750cf143511e6", "Url": "https://api.github.com/repos/kapehh-karen/BattleEquipControl", "Date": "2015-01-05T19:05:26Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uriSegments != null) && ((uriSegments.length) <= 0)) { return; }else if (uriSegments == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/476/buggy-version/interaction-core.src.main.java.com.temenos.interaction.core.rim.URLHelper.java", "BodyUseAPI": [], "Fixed commit": "253a4192437a7558901d5927e5dfb4020273d4de", "Url": "https://api.github.com/repos/geekanbu/IRIS", "Date": "2017-01-25T15:09:40Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (IP.equals(thisIP)) { java.lang.System.out.println(\"Local server\"); IP = \"/127.0.0.1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8454/buggy-version/Source.ClientUDP.ClientServerSelection.java", "BodyUseAPI": [], "Fixed commit": "0d7965a360d36bbbaef34bf5e13b7f2e281a3f6b", "Url": "https://api.github.com/repos/Williamxu98/WorldQuestOnline", "Date": "2017-01-16T19:56:16Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mUser.getPhotoUrl()) != null) Photouri = mUser.getPhotoUrl().toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5714/buggy-version/app.src.main.java.be.howest.nmct.hellocal.ProfileFragment.java", "BodyUseAPI": ["com.google.firebase.auth.FirebaseUser.getPhotoUrl()", "mUser.getPhotoUrl().toString()"], "Fixed commit": "5364a9a85319aabf5c96738f66db54a84243d8d3", "Url": "https://api.github.com/repos/FBeuselinck/HelLOCAL", "Date": "2016-12-05T11:06:32Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((agendaArr[i]) != null) { d[i][0] = agendaArr[i].fv; d[i][1] = agendaArr[i].toActParseTree(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8141/buggy-version/BeanParser.src.Parser.Train.java", "BodyUseAPI": ["agendaArr[i].toActParseTree()"], "Fixed commit": "804dd4f55a851aa7f0d493d61bc4616fc9ec13d9", "Url": "https://api.github.com/repos/littlebeanfang/BeanParser", "Date": "2014-12-28T13:47:42Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((time_in_correct) == 0) session.wpm_correct = wpm; else session.wpm_correct = (chars_in_correct) / ((time_in_correct) / 1.2E10);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3181/buggy-version/src.typestats.WriteField.java", "BodyUseAPI": [], "Fixed commit": "570432f682b299e7e22ed63a7368d552fe023b83", "Url": "https://api.github.com/repos/roryburks/typestats", "Date": "2013-03-03T08:42:09Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((time_in_mistyped) == 0) session.wpm_error = wpm; else session.wpm_error = (chars_in_mistyped) / ((time_in_mistyped) / 1.2E10);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3181/buggy-version/src.typestats.WriteField.java", "BodyUseAPI": [], "Fixed commit": "570432f682b299e7e22ed63a7368d552fe023b83", "Url": "https://api.github.com/repos/roryburks/typestats", "Date": "2013-03-03T08:42:09Z"},
{"Line": "=>625", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((protectedAncestor) == null) || (!(bibliothek.gui.dock.util.DockUtilities.isAncestor(protectedAncestor, station)))) { station.addDockStationListener(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6842/buggy-version/docking-frames-core.src.bibliothek.gui.dock.control.DockRegister.java", "BodyUseAPI": ["bibliothek.gui.DockStation.addDockStationListener(bibliothek.gui.dock.control.DockRegister.StationListener)"], "Fixed commit": "c61ff0a657ea2072dd3463c9c39b6d377684deaa", "Url": "https://api.github.com/repos/Benoker/DockingFrames", "Date": "2013-06-12T19:52:54Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ste.getMethod()) != null) return ste.getMethod();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2006/buggy-version/quasar-core.src.main.java.co.paralleluniverse.fibers.instrument.SuspendableHelper.java", "BodyUseAPI": ["co.paralleluniverse.common.util.ExtendedStackTraceElement.getMethod()"], "Fixed commit": "34bcb82cee140297efe0efb7a4fadb4879090231", "Url": "https://api.github.com/repos/puniverse/quasar", "Date": "2015-07-26T13:35:15Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.ItemStack.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (itemInHandMaterial == (org.bukkit.Material.BUCKET)) { if ((itemInHand.getAmount()) == 1) { itemInHand.setType(Material.WATER_BUCKET); player.setItemInHand(itemInHand); }else { Plugin.takeItemInHand(player); player.getWorld().dropItem(player.getLocation(), new org.bukkit.inventory.ItemStack(org.bukkit.Material.WATER_BUCKET, 1)); } event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1923/buggy-version/src.redsgreens.ManySmallTweaks.MSTListenerInfiniteCauldrons.java", "BodyUseAPI": [], "Fixed commit": "4823c89c5ebdb350e84216801dd4eb083b9ae453", "Url": "https://api.github.com/repos/redsgreens/ManySmallTweaks", "Date": "2013-02-17T01:19:23Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (input instanceof java.util.List) { java.util.List<net.minecraft.item.ItemStack> in = ((java.util.List<net.minecraft.item.ItemStack>) (input)); if ((in.size()) == 0) { com.circuits.circuitsmod.common.Log.userError((\"Another mod declares an ore with no registered items, and uses them in crafting recipe! \" + \"ignoring as if nothing really strange just happened\")); }else { stacks.add(in.get(0)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/242/buggy-version/circuitsMod.src.main.java.com.circuits.circuitsmod.recipes.RecipeGraph.java", "BodyUseAPI": [], "Fixed commit": "198aba94af784d649c54ff2c23b5fd92e72d6b0c", "Url": "https://api.github.com/repos/bubble-07/MinecraftCircuitsMod", "Date": "2017-01-12T17:53:11Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (org.jboss.tools.central.internal.dnd.LinuxURLTransfer.isLinuxGTK()) { transfers = new org.eclipse.swt.dnd.Transfer[]{ org.eclipse.swt.dnd.URLTransfer.getInstance(), org.jboss.tools.central.internal.dnd.LinuxURLTransfer.getInstance() }; }else { transfers = new org.eclipse.swt.dnd.Transfer[]{ org.eclipse.swt.dnd.URLTransfer.getInstance() }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5045/buggy-version/central.plugins.org.jboss.tools.central.src.org.jboss.tools.central.internal.dnd.JBossCentralDropTarget.java", "BodyUseAPI": [], "Fixed commit": "43165321d5b9f681ddf9179eeea3909fac938ea3", "Url": "https://api.github.com/repos/jbosstools/jbosstools-central", "Date": "2013-11-06T10:26:04Z"},
{"Line": "=>440", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["burlap.oomdp.core.ObjectInstance.getDiscValForAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (((java.lang.Math.min(ay, ny)) >= 0) && ((java.lang.Math.max(ay, ny)) < (this.northWalls[0].length))) { for (int y = java.lang.Math.min(ay, ny); (y < (java.lang.Math.max(ay, ny))) && (!dirWall); y++) { if (this.northWalls[ax][y]) { dirWall = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1479/buggy-version/src.burlap.domain.singleagent.gridworld.GridWorldDomain.java", "BodyUseAPI": ["java.lang.Math.max(int,int)", "java.lang.Math.min(int,int)"], "Fixed commit": "8af64a79c87904ba19667da9620676c9d8965c01", "Url": "https://api.github.com/repos/chtran/burlap", "Date": "2013-11-10T19:35:17Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == (index)) { throw new java.io.IOException(\"The reading of one header initiates an infinite loop\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3622/buggy-version/modules.org.restlet.src.org.restlet.engine.http.header.HeaderReader.java", "BodyUseAPI": [], "Fixed commit": "1d37126fa3cf63ec473de7a9406f0f6e539abd95", "Url": "https://api.github.com/repos/restlet/restlet-framework-java", "Date": "2012-12-21T11:56:08Z"},
{"Line": "=>699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pp.getErrorIndex()) >= 0) { throw new java.text.ParseException(string, pp.getErrorIndex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5564/buggy-version/core.src.org.pentaho.di.core.row.value.ValueMetaBase.java", "BodyUseAPI": ["java.text.ParsePosition.getErrorIndex()"], "Fixed commit": "e708f2c3706ed968d36a722ec843817aa85fd2b3", "Url": "https://api.github.com/repos/wseyler/pentaho-kettle", "Date": "2015-08-13T08:59:03Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (city == null) city = \"BLR\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8456/buggy-version/src.com.cbuddy.common.action.LocationAction.java", "BodyUseAPI": [], "Fixed commit": "62bb74f5a15a41fe3987ef975d7a7082dea7bb95", "Url": "https://api.github.com/repos/coolmach/coolapp", "Date": "2014-08-03T14:54:46Z"},
{"Line": "=>1397", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.teiid.query.optimizer.relational.rules.FrameUtil.findOriginatingNode(org.teiid.query.optimizer.relational.plantree.PlanNode,java.util.Set<org.teiid.query.sql.symbol.GroupSymbol>)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((useCardinalityIfUnknown != null) || ((source.getChildCount()) == 0)) { ndv = source.getCardinality(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6363/buggy-version/engine.src.main.java.org.teiid.query.optimizer.relational.rules.NewCalculateCostUtil.java", "BodyUseAPI": ["org.teiid.query.optimizer.relational.plantree.PlanNode.getCardinality()"], "Fixed commit": "17652d0e22b25b0c2a65e5112dc5fede65d247d9", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2016-07-06T23:28:21Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((currentEventFileMap.size()) > 0) { processEvents(); currentEventFileMap.clear(); logReadLock.notify(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6209/buggy-version/src.edu.umass.cs.largescalecasestudy.TraceBasedUpdate.java", "BodyUseAPI": ["java.util.HashMap<java.lang.String, java.util.List<org.json.JSONObject>>.clear()"], "Fixed commit": "b304caa04cb6b47294dc33fe04f06e26e3482282", "Url": "https://api.github.com/repos/ayadavumass/ContextServiceExperimentCode", "Date": "2017-02-23T19:52:22Z"},
{"Line": "=>466", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openmrs.module.kenyaemr.fragment.controller.program.WhiteCardFragmentController.getLatestObs(org.openmrs.Patient,Dictionary.TOWNSHIP)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (tbTownship != null) { tbTownVal = tbTownship.getValueCoded().getName().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5110/buggy-version/omod.src.main.java.org.openmrs.module.kenyaemr.fragment.controller.program.WhiteCardFragmentController.java", "BodyUseAPI": ["org.openmrs.Obs.getValueCoded()", "tbTownship.getValueCoded().getName()", "tbTownship.getValueCoded().getName().toString()"], "Fixed commit": "50d664bc895319e9c997249635465ae53d7df22f", "Url": "https://api.github.com/repos/hispindia/his-hiv-emr", "Date": "2016-06-21T10:16:27Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.springframework.util.CollectionUtils.isEmpty(errorMessages))) { this.errorMessages = new net.ripe.db.whois.api.rest.domain.ErrorMessages(errorMessages); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4414/buggy-version/whois-client.src.main.java.net.ripe.db.whois.api.rest.domain.WhoisResources.java", "BodyUseAPI": [], "Fixed commit": "c8eac667abf112a8b49d6cccaed7837d9253bec9", "Url": "https://api.github.com/repos/RIPE-NCC/whois", "Date": "2013-12-10T09:37:20Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["taylor.math.Equation.getTaylorPolynomial(int,double)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (e == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4252/buggy-version/src.taylor.Calculator.java", "BodyUseAPI": [], "Fixed commit": "9b6bad3d3dade8322b479655c99d28176644e4c3", "Url": "https://api.github.com/repos/anubiann00b/TaylorVisualization", "Date": "2014-06-16T04:58:24Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(e.isValid(n, n))) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4252/buggy-version/src.taylor.math.Equation.java", "BodyUseAPI": [], "Fixed commit": "9b6bad3d3dade8322b479655c99d28176644e4c3", "Url": "https://api.github.com/repos/anubiann00b/TaylorVisualization", "Date": "2014-06-16T04:58:24Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["taylor.math.Equation.getTaylorPolynomial(int,double)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (e2 == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4252/buggy-version/src.taylor.math.Equation.java", "BodyUseAPI": [], "Fixed commit": "9b6bad3d3dade8322b479655c99d28176644e4c3", "Url": "https://api.github.com/repos/anubiann00b/TaylorVisualization", "Date": "2014-06-16T04:58:24Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (x1 == x2) { double y = getY(x1); if (((y == (java.lang.Double.POSITIVE_INFINITY)) || (y == (java.lang.Double.NEGATIVE_INFINITY))) || (y == (java.lang.Double.NaN))) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4252/buggy-version/src.taylor.math.operation.Division.java", "BodyUseAPI": ["taylor.math.operation.Division.getY(double)"], "Fixed commit": "9b6bad3d3dade8322b479655c99d28176644e4c3", "Url": "https://api.github.com/repos/anubiann00b/TaylorVisualization", "Date": "2014-06-16T04:58:24Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cty.util.Util.doubleDivide(com.cty.util.Util.getDecimal(com.cty.util.Util.doubleMultiply(bo.getWidth(), rate)),int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Double.compare(tmpDec, clearanceWidth)) == 0) { return tmpDec; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6538/buggy-version/AutoAssign.src.main.java.com.cty.util.DatabaseUtil.java", "BodyUseAPI": [], "Fixed commit": "e1b042e293b4b1251ab9ef504feb9240307f023c", "Url": "https://api.github.com/repos/ctyytc/AutoAssign_DFJS", "Date": "2013-02-04T06:51:41Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((chatroom.Client.Chatroom.searchTab(roomName)) != null) chatroom.Client.Chatroom.searchTab(roomName).textArea.append((text + \"\\n\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1552/buggy-version/chatroom.Client.java", "BodyUseAPI": ["chatroom.Client.Chatroom.searchTab(java.lang.String)", "javax.swing.JTextArea.append(java.lang.String)"], "Fixed commit": "52668bfed1ce0c969ed783ee0d5b9dc07f2fe0b1", "Url": "https://api.github.com/repos/stevezzola/chatroom-project", "Date": "2014-03-25T02:32:25Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.sensapp.android.sensappdroid.clientsamples.sensorlogger.SensorLoggerService.sensors) != null) { for (org.sensapp.android.sensappdroid.clientsamples.sensorlogger.AbstractSensor s : org.sensapp.android.sensappdroid.clientsamples.sensorlogger.SensorLoggerService.sensors) { if (s.isListened()) return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/664/buggy-version/sensappdroid-clientsamples.sensorlog.src.main.java.org.sensapp.android.sensappdroid.clientsamples.sensorlogger.SensorLoggerService.java", "BodyUseAPI": [], "Fixed commit": "82185ea71ebba0a09bf66ac804d6c4d5ebc9750e", "Url": "https://api.github.com/repos/SINTEF-9012/sensapp-android-client", "Date": "2013-07-01T08:13:03Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.forge.addon.ui.input.UIInput<org.jboss.forge.addon.resource.FileResource<?>>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (inputValue != null) { java.io.File inputFile = inputValue.getUnderlyingResourceObject(); if ((inputFile == null) || (!(inputFile.exists()))) { context.addValidationError(this.input, \"Input path does not exist\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5222/buggy-version/ui.src.main.java.org.jboss.windup.ui.WindupWizard.java", "BodyUseAPI": ["org.jboss.forge.addon.resource.FileResource<?>.getUnderlyingResourceObject()"], "Fixed commit": "4f436a8cbccb064f8df44badcee06837467b422a", "Url": "https://api.github.com/repos/lincolnthree/windup", "Date": "2014-09-19T15:58:35Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.avuna.httpd.http.networking.ChunkedInputStream.blockAvailable(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (ba < 0) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2388/buggy-version/src.org.avuna.httpd.http.networking.ThreadRawStreamWorker.java", "BodyUseAPI": [], "Fixed commit": "d14d9ffe01d48c164864a4945c4367128b2f8d77", "Url": "https://api.github.com/repos/paullaz/Avuna-HTTPD", "Date": "2015-05-23T04:54:20Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i > 7) { java.lang.System.err.println(\"Error: Missing command line arguments. Expected: name, flightNumber, src, departTime, dest, arriveTime\"); java.lang.System.exit(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5097/buggy-version/src.main.java.edu.pdx.cs410J.jscott.Project2.java", "BodyUseAPI": [], "Fixed commit": "6f01a80ab62f808253ce4c42b4ea4b3dce0117cc", "Url": "https://api.github.com/repos/TheMetabaron/Project2", "Date": "2017-07-19T17:01:41Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currCoords) != null) { currentOrder.setDriverPos(new com.ck.taxoteam.taxodriver.data.Coords(currCoords.longitude, currCoords.latitude)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5016/buggy-version/app.src.main.java.com.ck.taxoteam.taxodriver.activity.OrderDetailsActivity.java", "BodyUseAPI": [], "Fixed commit": "79b576c445db2edadfb54f31c21dc99d36d4c8fd", "Url": "https://api.github.com/repos/TaxiProjectTeam/TaxiDriver", "Date": "2017-04-07T14:24:44Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (currLocation != null) { currCoords = new com.google.android.gms.maps.model.LatLng(currLocation.getLatitude(), currLocation.getLongitude()); com.google.android.gms.maps.model.LatLng toCoords = new com.google.android.gms.maps.model.LatLng(currentOrder.getFromCoords().getLatitude(), currentOrder.getFromCoords().getLongitude()); getRouteResponse(currCoords, toCoords, R.color.color_route_from_me_to_start_points); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5016/buggy-version/app.src.main.java.com.ck.taxoteam.taxodriver.activity.OrderDetailsActivity.java", "BodyUseAPI": ["android.location.Location.getLongitude()", "android.location.Location.getLatitude()"], "Fixed commit": "79b576c445db2edadfb54f31c21dc99d36d4c8fd", "Url": "https://api.github.com/repos/TaxiProjectTeam/TaxiDriver", "Date": "2017-04-07T14:24:44Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.apache.commons.lang3.StringUtils.isEmpty(endPointDTO.getId()))) { endPointBuilder.id(endPointDTO.getId()); }else { endPointBuilder.id(java.util.UUID.randomUUID().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9214/buggy-version/components.apimgt.org.wso2.carbon.apimgt.rest.api.publisher.src.main.java.org.wso2.carbon.apimgt.rest.api.publisher.utils.MappingUtil.java", "BodyUseAPI": ["org.wso2.carbon.apimgt.rest.api.publisher.dto.EndPointDTO.getId()", "Endpoint.Builder.id(endPointDTO.getId())"], "Fixed commit": "dc5028bfb2599cdd9b0c0c361eac20efba4d8b12", "Url": "https://api.github.com/repos/tmkasun/carbon-apimgt", "Date": "2017-05-22T07:12:09Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) { mStartDateLinearLayout.setBackground(getResources().getDrawable(R.drawable.ripple_date_text_view, null)); mEndDateLinearLayout.setBackground(getResources().getDrawable(R.drawable.ripple_date_text_view, null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1539/buggy-version/app.src.main.java.com.android.mig.simpletimeclock.view.fragments.EmployeeDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "281d08aace675419a581f803aca39452ccd68ad2", "Url": "https://api.github.com/repos/msaenz424/SimpleTimeClock", "Date": "2017-11-19T20:16:07Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(org.apache.commons.lang3.StringUtils.isEmpty(rule.getRegion()))) && (org.apache.commons.lang3.StringUtils.isEmpty(rule.getEnvironment()))) { throw new io.github.ibuildthecloud.gdapi.exception.ValidationErrorException(io.github.ibuildthecloud.gdapi.validation.ValidationErrorCodes.MISSING_REQUIRED, \"environment\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8789/buggy-version/code.iaas.service-discovery.api.src.main.java.io.cattle.platform.servicediscovery.api.filter.ServiceValidationFilter.java", "BodyUseAPI": [], "Fixed commit": "6ebbdeb69bbce37209d31edb2efbd3c094f4100a", "Url": "https://api.github.com/repos/alena1108/cattle", "Date": "2017-12-11T20:39:32Z"},
{"Line": "=>540", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((DDList) != null) { return DDList.getMenuItems(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4466/buggy-version/src.tonegod.gui.controls.lists.ComboBox.java", "BodyUseAPI": [], "Fixed commit": "52313416e052cfff2f48c179ad70c99c1861e2b1", "Url": "https://api.github.com/repos/roroah/tonegodgui", "Date": "2015-09-01T03:10:45Z"},
{"Line": "=>1014", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((wheels) != null) && ((wheels.length) >= 4)) { speed = ((float) ((((wheels[0].getSpeedXYZ()) + (wheels[1].getSpeedXYZ())) + (wheels[2].getSpeedXYZ())) + (wheels[3].getSpeedXYZ()))) / 4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1806/buggy-version/src.main.java.com.flansmod.common.driveables.EntityVehicle.java", "BodyUseAPI": [], "Fixed commit": "04684f6b95bf62ad69f20a0593ce74c027261823", "Url": "https://api.github.com/repos/am-rex/Flan-s-Mod-Plus", "Date": "2017-07-05T13:44:45Z"},
{"Line": "=>384", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (listener != null) listener.onLotLocationFetchComplete(locations);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5185/buggy-version/src.com.experiment.trax.services.ImplSimpleDBService.java", "BodyUseAPI": ["com.experiment.trax.listeners.GetLotLocationsCompleteListener.onLotLocationFetchComplete(java.util.List<com.experiment.trax.models.LotLocation>)"], "Fixed commit": "0891909f8c9416db36d19ac35ad587a5071980e2", "Url": "https://api.github.com/repos/amciver/Trax", "Date": "2014-11-22T04:49:41Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((calendarTV) != null) calendarTV.setText(monthAndDayText);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3993/buggy-version/app.src.main.java.com.tomer.alwayson.Views.DateView.java", "BodyUseAPI": [], "Fixed commit": "61807948a4b0fde612bb92cd7315204679d823e8", "Url": "https://api.github.com/repos/rosenpin/AlwaysOnDisplayAmoled", "Date": "2016-08-09T05:35:50Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Type.effectiveness(attack.getType(),defender.getSpecies().getType1(),defender.getSpecies().getType2())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (effectiveMult == 0) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6171/buggy-version/src.DamageCalculator.java", "BodyUseAPI": [], "Fixed commit": "baf972c23fe38f7e88228dfd84735c8381b10ee9", "Url": "https://api.github.com/repos/HRoll/poke-router", "Date": "2013-04-17T22:45:06Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (savedInstanceState == null) { navigateToCurrentSection(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8093/buggy-version/app.src.main.java.com.sedsoftware.comicser.features.navigation.NavigationActivity.java", "BodyUseAPI": [], "Fixed commit": "1182599d68995eaad9aae2d63420bbf768811dda", "Url": "https://api.github.com/repos/djkovrik/Comicser", "Date": "2017-07-20T13:55:38Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkIsLoaded())) { that.schedule(50); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4664/buggy-version/src.main.java.com.salesfront.gwtrecaptcha.client.RecaptchaWidget.java", "BodyUseAPI": [], "Fixed commit": "df0c71f4af694b48f45d8f3c5a0084f123741de1", "Url": "https://api.github.com/repos/salesfront/gwt-recaptcha", "Date": "2015-10-16T00:59:40Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (t instanceof org.apache.tajo.master.TajoException) { throw ((org.apache.tajo.master.TajoException) (t)); }else if (t instanceof org.apache.tajo.master.TajoRuntimeException) { throw ((org.apache.tajo.master.TajoException) (t.getCause())); }else { throw new org.apache.tajo.master.TajoInternalError(t); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4036/buggy-version/tajo-core.src.main.java.org.apache.tajo.master.GlobalEngine.java", "BodyUseAPI": ["java.lang.Throwable.getCause()"], "Fixed commit": "d095b4a6bf6db2d43e08bdcdfef3aebc454a0bca", "Url": "https://api.github.com/repos/hyunsik/tajo", "Date": "2015-08-19T11:25:18Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fr.imag.adele.apam.core.AtomicImplementationDeclaration.getCallback(fr.imag.adele.apam.core.CallbackMethod.CallbackTrigger)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (callbackMethods != null) { for (fr.imag.adele.apam.core.CallbackMethod callbackMethod : callbackMethods) { java.util.Set<org.apache.felix.ipojo.parser.MethodMetadata> metadatas; try { metadatas = ((java.util.Set<org.apache.felix.ipojo.parser.MethodMetadata>) (primitive.getInstrumentation().getCallbacks(callbackMethod.getMethodName(), false))); for (org.apache.felix.ipojo.parser.MethodMetadata methodMetadata : metadatas) { if ((lifeCycleCallbacks.get(trigger)) == null) { lifeCycleCallbacks.put(trigger, new java.util.HashSet<org.apache.felix.ipojo.util.Callback>()); } lifeCycleCallbacks.get(trigger).add(new org.apache.felix.ipojo.util.Callback(methodMetadata, this)); } } catch (java.lang.NoSuchMethodException e) { java.lang.System.err.println((((\"life cycle failure, when trigger : \" + trigger) + \" \") + (e.getMessage()))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5798/buggy-version/APAMProject.ApformIpojo.src.main.java.fr.imag.adele.apam.apformipojo.ApformIpojoInstance.java", "BodyUseAPI": [], "Fixed commit": "13816b757a7c3c257b7a4a9ecf23438611b1d967", "Url": "https://api.github.com/repos/AdeleResearchGroup/ApAM", "Date": "2012-11-09T09:48:49Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.meta.ItemMeta.getLore()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (lore == null) lore = new java.util.ArrayList<>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2823/buggy-version/lavasurvival.src.main.java.me.eddiep.minecraft.ls.game.items.LavaItem.java", "BodyUseAPI": [], "Fixed commit": "f5c622f87ba6aab8a403d8319f80b814e2107113", "Url": "https://api.github.com/repos/pupnewfster/Lavasurvival", "Date": "2017-01-07T01:47:08Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.worldcretornica.plotme_core.PlotMeSpool.clearList.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1319/buggy-version/src.main.java.com.worldcretornica.plotme_core.PlotMeSpool.java", "BodyUseAPI": [], "Fixed commit": "8e9bf0b07daeb95048272acae45f4e008e88b484", "Url": "https://api.github.com/repos/WorldCretornica/PlotMe-Core", "Date": "2015-07-18T18:04:13Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg instanceof io.netty.handler.codec.http.websocketx.PingWebSocketFrame) { io.netty.handler.codec.http.websocketx.PingWebSocketFrame pingWebSocketFrame = ((io.netty.handler.codec.http.websocketx.PingWebSocketFrame) (msg)); ctx.channel().writeAndFlush(new io.netty.handler.codec.http.websocketx.PongWebSocketFrame(pingWebSocketFrame.content())); }else if (msg instanceof io.netty.handler.codec.http.websocketx.PongWebSocketFrame) { io.netty.handler.codec.http.websocketx.PongWebSocketFrame pongWebSocketFrame = ((io.netty.handler.codec.http.websocketx.PongWebSocketFrame) (msg)); boolean finalFragment = pongWebSocketFrame.isFinalFragment(); io.netty.buffer.ByteBuf byteBuf = pongWebSocketFrame.content(); java.nio.ByteBuffer byteBuffer = byteBuf.nioBuffer(); cMsg = new org.wso2.carbon.messaging.ControlCarbonMessage(org.wso2.carbon.transport.http.netty.common.Constants.CONTROL_SIGNAL_HEARTBEAT, byteBuffer, finalFragment); setupCarbonMessage(ctx); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2171/buggy-version/http.org.wso2.carbon.transport.http.netty.src.main.java.org.wso2.carbon.transport.http.netty.listener.WebSocketSourceHandler.java", "BodyUseAPI": [], "Fixed commit": "936425e31c533eb294979e346c232aea2fa22af6", "Url": "https://api.github.com/repos/wso2/carbon-transports", "Date": "2017-04-17T10:29:21Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (array.isEmpty()) { array.add(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/110/buggy-version/src.main.java.hu.unideb.inf.nonogramsolver.Model.Readers.XMLReader.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.add(int)"], "Fixed commit": "77c66c157aaa946285c27cebf520e4213ea8017d", "Url": "https://api.github.com/repos/wazemaki/NonogramSolver", "Date": "2017-05-29T18:45:22Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (storages().values().iterator().hasNext()) { storages().values().iterator().next().setPreference(userID, itemID, value); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3366/buggy-version/src.main.java.org.plista.kornakapi.web.servlets.SetPreferenceServlet.java", "BodyUseAPI": [], "Fixed commit": "c5141ea32bae37116ff99293668f4af9f7d36fa1", "Url": "https://api.github.com/repos/KukumavMozolo/kornakapi", "Date": "2014-05-09T13:34:11Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openide.filesystems.FileObject.getFileObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fileObj == null) { try { fileObj = projectDir.createFolder(path.replaceFirst(\"/\", \"\")); } catch (java.io.IOException ex) { org.openide.util.Exceptions.printStackTrace(ex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5348/buggy-version/src.main.java.org.pangratz.netbeans.couchapp.nodes.CouchAppFolderNodes.java", "BodyUseAPI": [], "Fixed commit": "278db37d9d852c87a65c33cd3552b848156f2c2d", "Url": "https://api.github.com/repos/pangratz/netbeans-couchapp", "Date": "2011-02-20T14:46:07Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (description == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1347/buggy-version/src.client.userInterface.layout.FileTree.java", "BodyUseAPI": [], "Fixed commit": "5eae9c9474242b5e192af20c56bbaed39e1fb059", "Url": "https://api.github.com/repos/ShengLiu/File-Dependency-Client", "Date": "2011-07-12T19:26:25Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mule.api.store.ObjectStore<java.io.Serializable>.retrieve(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (event instanceof org.mule.api.ThreadSafeAccess) { ((org.mule.api.ThreadSafeAccess) (event)).resetAccessControl(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7818/buggy-version/modules.devkit-support.src.main.java.org.mule.security.oauth.BaseOAuth2Manager.java", "BodyUseAPI": [], "Fixed commit": "a146a66e786b9d3581da5fd0f98ffb5213d40502", "Url": "https://api.github.com/repos/mulesoft/mule", "Date": "2013-10-31T20:13:49Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (io.theo.json.Json.JsonDeserializer.isNullLiteral(stringValue)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7666/buggy-version/src.io.theo.json.Json.java", "BodyUseAPI": [], "Fixed commit": "2ded095f19e3aabe8eed4a96c4ad490df5726e63", "Url": "https://api.github.com/repos/SilasReinagel/LiteJavaJson", "Date": "2016-09-13T00:20:26Z"},
{"Line": "=>523", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getNextChild(i)) != null) { y += getVerticalSpacing(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4894/buggy-version/library.src.cn.ieclipse.af.view.FlowLayout.java", "BodyUseAPI": [], "Fixed commit": "789806dd46910491533b4f4883de68a4f18566cb", "Url": "https://api.github.com/repos/Jamling/QuickAF", "Date": "2017-09-06T06:24:17Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entity != (calledby)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2672/buggy-version/src.gui.EntityOptions.java", "BodyUseAPI": [], "Fixed commit": "e88cfc816748bb8ad09d3e96112becdc47e1e39c", "Url": "https://api.github.com/repos/DominikRidder/RTSProjekt", "Date": "2016-01-11T22:08:17Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(f.equals(target))) { java.nio.file.Files.delete(f.toPath()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5974/buggy-version/src.org.borderstone.synctags.ttcsv.TTCSVMerge.java", "BodyUseAPI": ["java.io.File.toPath()", "java.nio.file.Files.delete(java.nio.file.Path)"], "Fixed commit": "d5c7c164daf007c25b7cd0194227dbca6f2167c3", "Url": "https://api.github.com/repos/Froglich/SyncTags", "Date": "2016-01-26T09:32:52Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.aldebaran.qi.helper.proxies.ALTracker.getTargetPosition(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((position.get(0)) <= 0.1) { return java.lang.Float.MAX_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5197/buggy-version/tracking.AbstractTracker.java", "BodyUseAPI": [], "Fixed commit": "cc6eac56b66d69471792d49af05cd0fc547f7fd0", "Url": "https://api.github.com/repos/j6s/nao_utils", "Date": "2016-09-13T09:27:33Z"},
{"Line": "=>908", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDefaultMultipleTimepoints()) >= (dimensionChoiceTimePointsTrue.length)) setDefaultMultipleTimepoints(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3187/buggy-version/src.main.java.spim.fiji.datasetmanager.StackList.java", "BodyUseAPI": [], "Fixed commit": "b28af6f4d58953f12986bb3eadbf6d5f8a4560f9", "Url": "https://api.github.com/repos/fiji/SPIM_Registration", "Date": "2014-08-22T08:10:26Z"},
{"Line": "=>915", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getDefaultMultipleTimepoints()) >= (dimensionChoiceTimePointsFalse.length)) setDefaultMultipleTimepoints(0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3187/buggy-version/src.main.java.spim.fiji.datasetmanager.StackList.java", "BodyUseAPI": [], "Fixed commit": "b28af6f4d58953f12986bb3eadbf6d5f8a4560f9", "Url": "https://api.github.com/repos/fiji/SPIM_Registration", "Date": "2014-08-22T08:10:26Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((t.agent) == null) || ((t.agent.state) == (wjd.teutoburg.regiment.RegimentAgent.State.DEAD))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5118/buggy-version/src.wjd.teutoburg.regiment.RomanRegiment.java", "BodyUseAPI": [], "Fixed commit": "f2959102ba1caadc476d31038105959db94c8e56", "Url": "https://api.github.com/repos/wilbefast/teutoburg", "Date": "2012-12-16T10:18:09Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cz.honzakasik.bazenolomouc.DatetimeDisplay.getCurrentlyDisplayedDate()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (datetimeDisplay.isTimeValid(newTime)) { arrowLeft.setClickable(true); arrowLeft.setEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3072/buggy-version/app.src.main.java.cz.honzakasik.bazenolomouc.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "45d642b498430a08778ad1fe72d62cc5fbab2f74", "Url": "https://api.github.com/repos/honza-kasik/OlomouckyBazen", "Date": "2016-11-28T19:42:59Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((clientAddress) != null) { pl.asie.computronics.util.sound.SoundBoard.SyncHandler.getHandler().setProcess(clientAddress, process); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3778/buggy-version/src.main.java.pl.asie.computronics.util.sound.SoundBoard.java", "BodyUseAPI": [], "Fixed commit": "8426daa8108b47c209adc36f59328ddf6f72d6ad", "Url": "https://api.github.com/repos/Vexatos/Computronics", "Date": "2017-08-28T17:09:30Z"},
{"Line": "=>169", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["results.subResults.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((result.binX) == 0) { result.binX = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8796/buggy-version/EFTEMj-SR-EELS.src.main.java.de.m_entrup.EFTEMj_SR_EELS.characterisation.SR_EELS_CharacterisationPlugin.java", "BodyUseAPI": [], "Fixed commit": "52b87fa5f27da07346ca865b227fa5307f00ffe3", "Url": "https://api.github.com/repos/m-entrup/EFTEMj", "Date": "2016-12-28T14:22:36Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["results.subResults.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((result.binY) == 0) { result.binY = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8796/buggy-version/EFTEMj-SR-EELS.src.main.java.de.m_entrup.EFTEMj_SR_EELS.characterisation.SR_EELS_CharacterisationPlugin.java", "BodyUseAPI": [], "Fixed commit": "52b87fa5f27da07346ca865b227fa5307f00ffe3", "Url": "https://api.github.com/repos/m-entrup/EFTEMj", "Date": "2016-12-28T14:22:36Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, org.slc.sli.api.security.context.OwnershipArbiter.Reference>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((ref.type) == (org.slc.sli.api.security.context.OwnershipArbiter.Reference.RefType.LEFT_TO_RIGHT)) { critField = org.slc.sli.common.constants.ParameterConstants.ID; java.lang.String[] refFields = ref.refField.split(\"\\\\.\"); critValue = entity.getBody(); for (java.lang.String subdocField : refFields) { if (critValue == null) { break; }else if (critValue instanceof java.util.Map) { critValue = ((java.util.Map<java.lang.String, java.lang.Object>) (critValue)).get(subdocField); }else if (critValue instanceof com.mongodb.DBObject) { critValue = ((com.mongodb.DBObject) (critValue)).get(subdocField); } } }else { critField = ref.refField; critValue = entity.getEntityId(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1742/buggy-version/sli.api.src.main.java.org.slc.sli.api.security.context.OwnershipArbiter.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "52e7bfb1404dcf760a8ffcfd77615dfe0ef811b3", "Url": "https://api.github.com/repos/inbloom/secure-data-service", "Date": "2014-01-17T14:24:46Z"},
{"Line": "=>634", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.Element.getAttribute(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"\".equals(ret)) ret = \"basicText\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8429/buggy-version/TBXCheck.src.main.java.org.ttt.salt.XCSDocument.java", "BodyUseAPI": [], "Fixed commit": "df9f154f2eeff62df69706445607d307575efb9f", "Url": "https://api.github.com/repos/lanhel/tbxutils", "Date": "2008-07-23T18:24:46Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (server != null) { server.stop(); ((com.dlmv.localplayer.server.utils.RootApplication) (getApplication())).Server = null; myState = com.dlmv.localplayer.server.main.ServerService.STATE_STARTING; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4336/buggy-version/app.src.main.java.com.dlmv.localplayer.server.main.ServerService.java", "BodyUseAPI": ["com.dlmv.localplayer.server.main.WebServer.stop()"], "Fixed commit": "b7dedaa29383b9333f443622348c881f66fe196a", "Url": "https://api.github.com/repos/dlmv/LocalMediaPlayer-Server", "Date": "2017-09-20T16:45:03Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (absolute) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7146/buggy-version/src.main.java.io.github.alshain01.flags.AreaWilderness.java", "BodyUseAPI": [], "Fixed commit": "71ce22e2c7a920de035c6bab2c62929d9e1a5e53", "Url": "https://api.github.com/repos/Alshain01/Flags", "Date": "2014-05-02T13:21:28Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cols < 0) cols = -cols;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2982/buggy-version/src.Board.java", "BodyUseAPI": [], "Fixed commit": "af1dfdcc366802036990f8d6a7bea3a82aae4a63", "Url": "https://api.github.com/repos/ipolovenko/8-Puzzle", "Date": "2015-08-13T08:01:55Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((prefs.getInt(\"screen_state\", 0)) == 3)) { com.techneaux.techneauxmobileapp.TicketActivity.Location.setText(null); com.techneaux.techneauxmobileapp.TicketActivity.Description.setText(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5140/buggy-version/Android.TechneauxMobileApp.app.src.main.java.com.techneaux.techneauxmobileapp.TicketActivity.java", "BodyUseAPI": [], "Fixed commit": "5bec90b7892140c85b950cf32327ae9c81e897dd", "Url": "https://api.github.com/repos/cmd-drake/Techneaux-Ticket-Mobile-Client-Android", "Date": "2015-11-05T18:43:17Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ids.contains(managedEntity.getName())) { com.elastisys.scale.cloudpool.vsphere.client.impl.VirtualMachine virtualMachine = ((com.elastisys.scale.cloudpool.vsphere.client.impl.VirtualMachine) (managedEntity)); powerOffTasks.add(virtualMachine.powerOffVM_Task()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4408/buggy-version/vsphere.src.main.java.com.elastisys.scale.cloudpool.vsphere.client.impl.StandardVsphereClient.java", "BodyUseAPI": [], "Fixed commit": "70de9dddcaa0be6ca310422125e3d056cda7040f", "Url": "https://api.github.com/repos/Eeemil/scale.cloudpool", "Date": "2017-07-26T13:14:39Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.springframework.http.HttpHeaders.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (cookies != null) { if (wrappedParam instanceof java.lang.String) { java.lang.String resultString = com.google.common.base.Joiner.on(\";\").join(cookies); wrapper.setValue(resultString); }else if (wrappedParam instanceof java.util.List) { wrapper.setValue(cookies); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3376/buggy-version/src.main.java.com.art4ul.jcoon.handlers.CookiesAnnotationAfterHandler.java", "BodyUseAPI": ["com.art4ul.jcoon.models.Wrapper.setValue(java.util.List<java.lang.String>)", "com.google.common.base.Joiner.on(\";\").join(java.util.List<java.lang.String>)"], "Fixed commit": "28b71b9efe7a9b0bbf69e09d3e7d00545154424d", "Url": "https://api.github.com/repos/art4ul/jcoon", "Date": "2014-12-20T13:33:42Z"},
{"Line": "=>532", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getExtras()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (bundle != null) { java.lang.String radioDetails = bundle.getString(getString(R.string.player_service_update_playing_error_radio_details)); java.lang.String exception = bundle.getString(getString(R.string.player_service_update_playing_error_exception)); reportError(radioDetails, exception); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3826/buggy-version/src.com.statichiss.recordio.fragments.PlayerFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(getString(R.string.player_service_update_playing_error_exception))", "android.os.Bundle.getString(getString(R.string.player_service_update_playing_error_radio_details))"], "Fixed commit": "383fb3146a1eccf6cea60dbbcf4cb7adb0736ec0", "Url": "https://api.github.com/repos/ceepeeuk/Radio", "Date": "2013-07-01T20:51:29Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (((keyMap) == null) && (optionDataSource == null)) { throw new java.lang.RuntimeException(\"Must supply either a key map or option data source to support the key values for this map structure.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9017/buggy-version/admin.broadleaf-open-admin-platform.src.main.java.org.broadleafcommerce.openadmin.client.datasource.dynamic.ComplexValueMapStructureDataSource.java", "BodyUseAPI": [], "Fixed commit": "f32db816f347311bad102c9a141b7772f5f1511e", "Url": "https://api.github.com/repos/BroadleafCommerce/BroadleafCommerce", "Date": "2012-10-04T18:57:04Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (packagePathX == (-1)) { packagePathX = (packagePath.indexOf(\"/integration/\")) + 8; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6601/buggy-version/portal-impl.src.com.liferay.portal.tools.sourceformatter.JavaSourceProcessor.java", "BodyUseAPI": [], "Fixed commit": "79f7b2cf57f748751c5da4110428f08db3445788", "Url": "https://api.github.com/repos/willnewbury/liferay-portal", "Date": "2014-08-29T22:44:14Z"},
{"Line": "=>584", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((refreshProgress) != null) refreshProgress.setVisibility(View.GONE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2354/buggy-version/app.src.main.java.me.zchang.onchart.ui.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "5df765dbaa0960e3914fd4aa1c87d6d30458844f", "Url": "https://api.github.com/repos/zhehuaz/onChart", "Date": "2016-03-11T15:11:00Z"},
{"Line": "=>16", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((javax.security.auth.message.config.AuthConfigFactory.getFactory()) == null) { javax.security.auth.message.config.AuthConfigFactory.setFactory(new org.apache.catalina.authenticator.jaspic.AuthConfigFactoryImpl()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1142/buggy-version/restapi.src.main.java.sjchat.restapi.Application.java", "BodyUseAPI": [], "Fixed commit": "459c878ebc4f214b3ae48d9f5d154091081484b9", "Url": "https://api.github.com/repos/sjchat/sjchat", "Date": "2017-04-20T16:07:15Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((controllers.AuthController.getSession()) != null) { this.getCurrentProcessInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1176/buggy-version/app.models.util.sessions.User.java", "BodyUseAPI": [], "Fixed commit": "971dd82d23ec92d10dd4fc62d13804160c46341a", "Url": "https://api.github.com/repos/FabianK1991/SPA-PLAY-APP", "Date": "2015-03-08T18:50:20Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (railo.commons.lang.StringUtil.isEmpty(datasource)) { datasource = ((railo.runtime.util.ApplicationContextPro) (pageContext.getApplicationContext())).getDefaultDataSource(); if (railo.commons.lang.StringUtil.isEmpty(datasource)) throw new railo.runtime.exp.ApplicationException(\"attribute [datasource] is required, when no default datasource is defined\", \"you can define a default datasource as attribute [defaultdatasource] of the tag cfapplication or as data member of the application.cfc (this.defaultdatasource=\\\"mydatasource\\\";)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6361/buggy-version/railo-java.railo-core.src.railo.runtime.tag.StoredProc.java", "BodyUseAPI": [], "Fixed commit": "6e7e91621fca3c278d771bb33385f29d9d5a6f40", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2011-04-06T10:09:17Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.productList) == null) { this.productList = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3448/buggy-version/src.checkout.Product.ProductManagement.java", "BodyUseAPI": [], "Fixed commit": "584d609b9878ac7fb26e8f9161ed8dfc5c8aadae", "Url": "https://api.github.com/repos/SoftwareEngFundumental/Checkout", "Date": "2017-05-27T13:26:00Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.promotionList) == null) { this.promotionList = new java.util.ArrayList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3448/buggy-version/src.checkout.Product.PromotionManagement.java", "BodyUseAPI": [], "Fixed commit": "584d609b9878ac7fb26e8f9161ed8dfc5c8aadae", "Url": "https://api.github.com/repos/SoftwareEngFundumental/Checkout", "Date": "2017-05-27T13:26:00Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((modelQueriable) == null) { throw new java.lang.IllegalStateException((\"Cannot refresh this FlowCursorList. This list was instantiated from a Cursor. Once closed, we cannot reopen \" + \"it. Construct a new instance and swap with this instance.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5789/buggy-version/dbflow.src.main.java.com.raizlabs.android.dbflow.list.FlowCursorList.java", "BodyUseAPI": [], "Fixed commit": "081586792e09d284c7553220df2375168b73a95c", "Url": "https://api.github.com/repos/Raizlabs/DBFlow", "Date": "2016-11-13T18:56:18Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lpiem.apprentisage.metier.Enseignant.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(idIsConforme(idEnseignant))) { idEnseignant = mEnseignantDAO.enseignantIsDataBase(enseignant); if (!(idIsConforme(idEnseignant))) { return -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7832/buggy-version/app.src.main.java.com.lpiem.apprentisage.database.DAO.ExerciceDAO.java", "BodyUseAPI": [], "Fixed commit": "5c8b30cde13893d39e81c8e9d394ed731dd097a3", "Url": "https://api.github.com/repos/nFonsat/Apprenti-Sage", "Date": "2015-01-16T11:19:40Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.lpiem.apprentisage.metier.Serie.getId()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(idIsConforme(idSerie))) { idSerie = mSerieDAO.serieIsDataBase(serie, idEnseignant); if (!(idIsConforme(idSerie))) { return -1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7832/buggy-version/app.src.main.java.com.lpiem.apprentisage.database.DAO.ExerciceDAO.java", "BodyUseAPI": [], "Fixed commit": "5c8b30cde13893d39e81c8e9d394ed731dd097a3", "Url": "https://api.github.com/repos/nFonsat/Apprenti-Sage", "Date": "2015-01-16T11:19:40Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getInput(transform).getAll()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (allInputs.isEmpty()) { org.apache.flink.api.java.operators.DataSource<java.lang.String> dummySource = context.getExecutionEnvironment().fromElements(\"dummy\"); result = dummySource.flatMap(new org.apache.flink.api.common.functions.FlatMapFunction<java.lang.String, T>() { @java.lang.Override public void flatMap(java.lang.String s, org.apache.flink.util.Collector<T> collector) throws java.lang.Exception { } }).returns(new org.apache.beam.runners.flink.translation.types.CoderTypeInformation(((org.apache.beam.sdk.coders.Coder<T>) (org.apache.beam.sdk.coders.VoidCoder.of())))); }else { for (org.apache.beam.sdk.values.PCollection<T> collection : allInputs) { org.apache.flink.api.java.DataSet<T> current = context.getInputDataSet(collection); if (result == null) { result = current; }else { result = result.union(current); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1748/buggy-version/runners.flink.runner.src.main.java.org.apache.beam.runners.flink.translation.FlinkBatchTransformTranslators.java", "BodyUseAPI": [], "Fixed commit": "7bca01e8400aaa96ebb5ef1db2cd435a0e6200c5", "Url": "https://api.github.com/repos/kennknowles/beam", "Date": "2016-05-06T11:31:18Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!((m.painter) instanceof com.metsci.glimpse.layout.GlimpseLayout)) && (!(layout.isVisible))) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/622/buggy-version/core.src.main.java.com.metsci.glimpse.layout.GlimpseLayoutDelegate.java", "BodyUseAPI": [], "Fixed commit": "377fe4975ff3f9a4a66a94d389d6831853bb6140", "Url": "https://api.github.com/repos/metsci/glimpse", "Date": "2014-03-04T22:29:34Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (existingItem.isBought()) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8790/buggy-version/app.src.main.java.de.fau.cs.mad.kwikshop.android.util.ItemMerger.java", "BodyUseAPI": [], "Fixed commit": "5ff8ba038783e4f8b9689bf947b7b7e39810e0b5", "Url": "https://api.github.com/repos/FAU-Inf2/kwikshop-android", "Date": "2015-10-26T08:23:43Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dozingcatsoftware.vectorpinball.model.FieldLayout.getBallRadius()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (radius != 0.5F) { ball.getFixtureList().get(0).setDensity(((0.5F * 0.5F) / (radius * radius))); ball.resetMassData(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7174/buggy-version/src.com.dozingcatsoftware.vectorpinball.model.Field.java", "BodyUseAPI": ["ball.getFixtureList().get(0).setDensity(float)"], "Fixed commit": "6ea9149374ccfb277b2d2cc531e14589cc9b484e", "Url": "https://api.github.com/repos/dozingcat/Vector-Pinball-Editor", "Date": "2016-02-29T01:24:23Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((getIntent()) != null) && (getIntent().hasExtra(eu.vranckaert.episodeWatcher.twopointo.context.StartupActivity.SKIP_FORGET_PWD_CHECK))) { skipForgetPwd = getIntent().getBooleanExtra(eu.vranckaert.episodeWatcher.twopointo.context.StartupActivity.SKIP_FORGET_PWD_CHECK, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/170/buggy-version/app.src.main.java.eu.vranckaert.episodeWatcher.twopointo.context.StartupActivity.java", "BodyUseAPI": ["getIntent().getBooleanExtra(java.lang.String,boolean)"], "Fixed commit": "52f2180462ba9d2fee9b84c99195c678002e59e9", "Url": "https://api.github.com/repos/dirkvranckaert/my-episodes-watch-manager", "Date": "2015-11-12T13:10:39Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jsoup.nodes.Element.select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((textElements.size()) == 0) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3893/buggy-version/src.org.cmu.fastcode.yelpscrapper.Util.java", "BodyUseAPI": [], "Fixed commit": "44b9b33b291d4701329336e7d97c033f74828363", "Url": "https://api.github.com/repos/archer-fengjiang/YelpScrapper", "Date": "2012-11-18T22:35:44Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((vertexMap.get(i).parent) != (sjsu.stowbunenko.cs146.project4.Graph.NIL)) addEdge(newAdjacencyList, i, vertexMap.get(i).parent, getWeight(i, vertexMap.get(i).parent));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5288/buggy-version/src.sjsu.stowbunenko.cs146.project4.Graph.java", "BodyUseAPI": ["sjsu.stowbunenko.cs146.project4.Graph.getWeight(int,vertexMap.get(i).parent)", "sjsu.stowbunenko.cs146.project4.Graph.addEdge(java.util.ArrayList<java.util.LinkedList<sjsu.stowbunenko.cs146.project4.Pair>>,int,vertexMap.get(i).parent,double)", "java.util.HashMap<java.lang.Integer, sjsu.stowbunenko.cs146.project4.Vertex>.get(int)", "java.util.HashMap<java.lang.Integer, sjsu.stowbunenko.cs146.project4.Vertex>.get(int)"], "Fixed commit": "01c7b3c0a00e69a1d8a1fe4a898a2e9ba70f1d37", "Url": "https://api.github.com/repos/HappyHackingOrange/GAMST", "Date": "2017-12-12T01:37:13Z"},
{"Line": "=>1259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (generateBody) { mods &= ~(com.sun.tools.javac.code.Flags.ABSTRACT); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5271/buggy-version/src.com.redhat.ceylon.compiler.java.codegen.ClassTransformer.java", "BodyUseAPI": [], "Fixed commit": "575269dcc6cfbcc001f6e733d4dc673f498d0916", "Url": "https://api.github.com/repos/ceylon/ceylon-compiler", "Date": "2012-06-06T14:34:26Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.sagebionetworks.repo.model.dbo.DMLUtils.hasNonPrimaryKeyColumns(mapping))) { main.append(\"IGNORE \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2112/buggy-version/lib.jdomodels.src.main.java.org.sagebionetworks.repo.model.dbo.DMLUtils.java", "BodyUseAPI": [], "Fixed commit": "f3a2dbccab4464adc17bbd88a5d68d20346fae89", "Url": "https://api.github.com/repos/Sage-Bionetworks/Synapse-Repository-Services", "Date": "2013-10-11T18:25:08Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!found) oldSelectedSkill = null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6068/buggy-version/src.client.view.components.PhasePane.java", "BodyUseAPI": [], "Fixed commit": "2b3bbae98c8661fd01d9ef1fda4c6abb9c150312", "Url": "https://api.github.com/repos/mammo0/PROJECT", "Date": "2015-01-28T08:15:46Z"},
{"Line": "=>1647", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tmpRenderMode != 5) { colourise(0, 3, gd4.r, gd4.g, gd4.b, gd4.a, triangleData, tempIndex); }else { org.nschmidt.ldparteditor.data.GColour c = org.nschmidt.ldparteditor.enums.View.getLDConfigColour(org.nschmidt.ldparteditor.enums.View.getLDConfigIndex(gd4.r, gd4.g, gd4.b)); org.nschmidt.ldparteditor.data.GColourType ct = c.getType(); boolean hasColourType = ct != null; if (hasColourType) { switch (ct.type()) { case CHROME : colourise(0, 6, gd4.r, gd4.g, gd4.b, 2.0F, triangleData, tempIndex); break; case MATTE_METALLIC : colourise(0, 6, gd4.r, gd4.g, gd4.b, 4.2F, triangleData, tempIndex); break; case METAL : colourise(0, 6, gd4.r, gd4.g, gd4.b, 3.2F, triangleData, tempIndex); break; case RUBBER : colourise(0, 6, gd4.r, gd4.g, gd4.b, 5.2F, triangleData, tempIndex); break; default : colourise(0, 6, gd4.r, gd4.g, gd4.b, gd4.a, triangleData, tempIndex); break; } }else { colourise(0, 6, gd4.r, gd4.g, gd4.b, gd4.a, triangleData, tempIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2629/buggy-version/src.org.nschmidt.ldparteditor.data.GL33ModelRenderer.java", "BodyUseAPI": [], "Fixed commit": "014e29b44c794bcff0b567d4f3b9e5e3e39b726b", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-10-24T16:59:42Z"},
{"Line": "=>1333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tmpRenderMode != 5) { colourise(0, 3, gd3.r, gd3.g, gd3.b, gd3.a, triangleData, tempIndex); }else { org.nschmidt.ldparteditor.data.GColour c = org.nschmidt.ldparteditor.enums.View.getLDConfigColour(org.nschmidt.ldparteditor.enums.View.getLDConfigIndex(gd3.r, gd3.g, gd3.b)); org.nschmidt.ldparteditor.data.GColourType ct = c.getType(); boolean hasColourType = ct != null; boolean matLight = true; int useCubeMap = 0; if (hasColourType) { switch (ct.type()) { case CHROME : colourise(0, 3, gd3.r, gd3.g, gd3.b, 2.0F, triangleData, tempIndex); break; case MATTE_METALLIC : colourise(0, 3, gd3.r, gd3.g, gd3.b, 4.2F, triangleData, tempIndex); break; case METAL : colourise(0, 3, gd3.r, gd3.g, gd3.b, 3.2F, triangleData, tempIndex); break; case RUBBER : colourise(0, 3, gd3.r, gd3.g, gd3.b, 5.2F, triangleData, tempIndex); break; default : colourise(0, 3, gd3.r, gd3.g, gd3.b, gd3.a, triangleData, tempIndex); break; } }else { colourise(0, 3, gd3.r, gd3.g, gd3.b, gd3.a, triangleData, tempIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2629/buggy-version/src.org.nschmidt.ldparteditor.data.GL33ModelRenderer.java", "BodyUseAPI": [], "Fixed commit": "014e29b44c794bcff0b567d4f3b9e5e3e39b726b", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-10-24T16:59:42Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((context) != null) && ((textViewState) != null)) { ((android.app.Activity) (context)).runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { if ((mState) == 0) { textViewState.setText(\"NONE\"); }else if ((mState) == 1) { textViewState.setText(\"LISTEN\"); }else if ((mState) == 2) { textViewState.setText(\"CONNECTING\"); }else { textViewState.setText(\"CONNECTED\"); } } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8108/buggy-version/src.ro.medapp1.BluetoothService.java", "BodyUseAPI": [], "Fixed commit": "2ec34d621a8b5a2463730bdb3c64a7db68774e23", "Url": "https://api.github.com/repos/Corly/PillBuzz", "Date": "2014-05-19T07:42:22Z"},
{"Line": "=>1134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (usedArray.contains(e.getText().toString())) { pager.setCurrentItem(usedArray.indexOf(e.getText().toString())); }else { pager.setCurrentItem(usedArray.indexOf(adapter.fitems.get(0))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5418/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.getText()", "e.getText().toString()", "java.util.List<java.lang.String>.indexOf(e.getText().toString())", "me.ccrama.redditslide.Views.ToggleSwipeViewPager.setCurrentItem(int)", "me.ccrama.redditslide.Views.ToggleSwipeViewPager.setCurrentItem(int)", "java.util.List<java.lang.String>.indexOf(adapter.fitems.get(0))"], "Fixed commit": "1fcbafb9970aeccf0048c39a9a26cfc7e6db6fe5", "Url": "https://api.github.com/repos/Alexendoo/Slide", "Date": "2016-02-17T20:24:19Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getGold()) < 0) { setGold(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9038/buggy-version/src.game.Account.java", "BodyUseAPI": [], "Fixed commit": "14cf403aa35517303417cd3f731638540b7cd39f", "Url": "https://api.github.com/repos/Frontlinjen/CDIO2", "Date": "2015-11-02T15:48:31Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (phase != null) { intervalNs = ((long) ((1.0E9 / ((double) (phase.rate))) + 0.5)); delta += (phase.time) * 1000000000L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4472/buggy-version/src.com.oltpbenchmark.ThreadBench.java", "BodyUseAPI": [], "Fixed commit": "0b159f12586182333b892d1d1d301ec51d43c049", "Url": "https://api.github.com/repos/eribeiro/oltpbench", "Date": "2013-04-08T22:40:43Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (level)) { isValidVO = false; addFieldError(\"level.discount\", com.innovaee.eorder.utils.MessageUtil.getMessage(\"level_invalid_vo\")); return isValidVO; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1196/buggy-version/02_code.web.eorder-member.src.main.java.com.innovaee.eorder.action.member.LevelAction.java", "BodyUseAPI": [], "Fixed commit": "b5c106cff7af6ab8252053cfaf281f00d06e9890", "Url": "https://api.github.com/repos/aaronluo/cuoPATHzi", "Date": "2015-04-04T16:12:55Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Server.HashRecord.editRecord(java.lang.String,java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (editSuccess) { logger.setMessage(((((((\"RecordID : \" + recordID) + \" has changed '\") + fieldName) + \"' to '\") + newValue) + \"'\")); }else { logger.setMessage(((\"RecordID : \" + recordID) + \" has changed was unable to change\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/939/buggy-version/DCMS.src.Server.CenterServers.java", "BodyUseAPI": [], "Fixed commit": "f43f97200b12b2d8176e52ebb2e77808614fb477", "Url": "https://api.github.com/repos/lakshayverma629/Distributed_System_Assignment", "Date": "2017-06-04T15:56:53Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (callServer.editRecord(recordIDEdit, fieldName, newValue)) logger4.setMessage((((((\"Records edited\" + \" Record field -'\") + fieldName) + \"' Record Value - '\") + newValue) + \"'\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/939/buggy-version/DCMS.src.Players.ManagerClient.java", "BodyUseAPI": ["Utilities.EventLogger.setMessage(java.lang.String)"], "Fixed commit": "f43f97200b12b2d8176e52ebb2e77808614fb477", "Url": "https://api.github.com/repos/lakshayverma629/Distributed_System_Assignment", "Date": "2017-06-04T15:56:53Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Model.yScale) <= 0) { Model.yScale = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4032/buggy-version/Model.java", "BodyUseAPI": [], "Fixed commit": "416ff1ae12a6f79aa22caba2340ff8cf229bce04", "Url": "https://api.github.com/repos/NickPapadakis/GraphingCalculator", "Date": "2016-03-13T00:24:18Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (src.getText().equals(\"x scale -\")) { (Model.xScale)--; if ((Model.xScale) <= 0) { Model.xScale = 1; } }else if (src.getText().equals(\"y scale +\")) { (Model.yScale)--; if ((Model.yScale) <= 0) { Model.yScale = 1; } }else if (src.getText().equals(\"y scale -\")) { (Model.yScale)++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4032/buggy-version/Model.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "javax.swing.JButton.getText()", "java.lang.String.equals(java.lang.String)", "javax.swing.JButton.getText()"], "Fixed commit": "416ff1ae12a6f79aa22caba2340ff8cf229bce04", "Url": "https://api.github.com/repos/NickPapadakis/GraphingCalculator", "Date": "2016-03-13T00:24:18Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLoggedInUser()) == null) { return false; }else { return user.id().value().equals(getLoggedInUser().id().value()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/70/buggy-version/Application.src.main.java.com.shareyourproxy.app.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "77948b944e15255c5d93fbeeb2db32c185a200ea", "Url": "https://api.github.com/repos/ProxyApp/Proxy", "Date": "2015-06-25T14:05:11Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jtalks.jcommune.service.ComponentService.getComponentOfForum()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (forumComponent != null) { forumComponent.getProperty(org.jtalks.jcommune.web.controller.AdministrationController.JCOMMUNE_LOGO_PARAM); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4320/buggy-version/jcommune-view.jcommune-web-controller.src.main.java.org.jtalks.jcommune.web.controller.AdministrationController.java", "BodyUseAPI": ["org.jtalks.common.model.entity.Component.getProperty(java.lang.String)"], "Fixed commit": "7c8e1f4df937de1ec07cbc678849514ee56c6feb", "Url": "https://api.github.com/repos/jtalks-org/jcommune", "Date": "2013-05-20T09:50:35Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sequence.length) < 2) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/952/buggy-version/src.Permutation.java", "BodyUseAPI": [], "Fixed commit": "dc8fc926d42ad2842af0e19c53ddeaeabf76a6da", "Url": "https://api.github.com/repos/ZhongBaby/JavaOJAlgorithms", "Date": "2016-09-25T11:57:22Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.dom.ITypeBinding.getSuperclass()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (t != null) for (org.eclipse.jdt.core.dom.IMethodBinding m : t.getDeclaredMethods()) { if (method.overrides(m)) { org.eclipse.jdt.core.dom.IMethodBinding d = m.getMethodDeclaration(); if (createMethod(m)) w.createOverride(declaration, d); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2205/buggy-version/src.main.java.com.dnw.depmap.neo.NeoDao.java", "BodyUseAPI": ["org.eclipse.jdt.core.dom.ITypeBinding.getDeclaredMethods()"], "Fixed commit": "34902394dacce41157dbfd33158313adc7a4145c", "Url": "https://api.github.com/repos/DNWTech/dnw-depmap", "Date": "2014-10-24T07:57:13Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.core.dom.ITypeBinding.getSuperclass()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (t != null) if (createType(t)) { org.eclipse.jdt.core.dom.ITypeBinding d = t.getTypeDeclaration(); w.createExtends(declaration, d); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2205/buggy-version/src.main.java.com.dnw.depmap.neo.NeoDao.java", "BodyUseAPI": ["com.dnw.depmap.neo.NeoDao.createType(org.eclipse.jdt.core.dom.ITypeBinding)", "org.eclipse.jdt.core.dom.ITypeBinding.getTypeDeclaration()"], "Fixed commit": "34902394dacce41157dbfd33158313adc7a4145c", "Url": "https://api.github.com/repos/DNWTech/dnw-depmap", "Date": "2014-10-24T07:57:13Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.view) == 1) { this.game.getGameField().updateSize(); this.game.repaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5980/buggy-version/src.ertl.main.View.java", "BodyUseAPI": [], "Fixed commit": "774aa72b9db09d6b41e18a9139c0d2072e2c292c", "Url": "https://api.github.com/repos/mertl-tgm/Battleship", "Date": "2016-05-12T10:48:35Z"},
{"Line": "=>553", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (relation.getEntityB().getForm().equals(Entity.FORM.FLOOR)) { if ((column.indexOf(entity)) == 0) { return true; } }else if (!(relation.getEntityB().getForm().equals(Entity.FORM.BOX))) { if ((column.contains(entity)) && ((column.indexOf(entity)) > 0)) { if (column.get(((column.indexOf(entity)) - 1)).equals(relation.getEntityB())) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5918/buggy-version/javaprolog.InterpreterNew.java", "BodyUseAPI": ["column.get(((column.indexOf(entity)) - 1)).equals(relation.getEntityB())", "Relation.getEntityB()", "relation.getEntityB().getForm()", "relation.getEntityB().getForm().equals(Entity.FORM.BOX)", "Relation.getEntityB()"], "Fixed commit": "d65990f8011c356b9515f18a216cd5cad59bd53c", "Url": "https://api.github.com/repos/Ramqvist/shrdlite-template", "Date": "2014-04-11T22:58:25Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((column.contains(entity)) && ((column.indexOf(entity)) > 0)) { if (column.get(((column.indexOf(entity)) - 1)).equalsExact(relation.getEntityB())) { matchedEntities.add(entity); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5918/buggy-version/javaprolog.Relation.java", "BodyUseAPI": ["java.util.List<Entity>.get(((column.indexOf(entity)) - 1))", "column.get(((column.indexOf(entity)) - 1)).equalsExact(Entity)", "java.util.List<Entity>.add(Entity)", "java.util.List<Entity>.indexOf(Entity)"], "Fixed commit": "d65990f8011c356b9515f18a216cd5cad59bd53c", "Url": "https://api.github.com/repos/Ramqvist/shrdlite-template", "Date": "2014-04-11T22:58:25Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((dayString.length()) < 2) { dayString = \"0\" + dayString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2290/buggy-version/V0.2.DateTimeHelper.java", "BodyUseAPI": [], "Fixed commit": "ae4397e43b421a4488f47189bf8e9d526e1e3379", "Url": "https://api.github.com/repos/cs2103aug2015-w10-3j/main", "Date": "2015-10-31T18:08:59Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((monthString.length()) < 2) { monthString = \"0\" + monthString; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2290/buggy-version/V0.2.DateTimeHelper.java", "BodyUseAPI": [], "Fixed commit": "ae4397e43b421a4488f47189bf8e9d526e1e3379", "Url": "https://api.github.com/repos/cs2103aug2015-w10-3j/main", "Date": "2015-10-31T18:08:59Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((index) < (boilermake.swollmate.MainActivity.ids.size())) { readFromFirebase(boilermake.swollmate.MainActivity.ids.get(index)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4609/buggy-version/Client.app.src.main.java.boilermake.swollmate.DiscoverActivity.java", "BodyUseAPI": ["boilermake.swollmate.DiscoverActivity.readFromFirebase(boilermake.swollmate.MainActivity.ids.get(index))", "boilermake.swollmate.DiscoverActivity.get(int)"], "Fixed commit": "16a01e0668e2b7e64afdaaaf6efd6220715a0d5b", "Url": "https://api.github.com/repos/ssagheer532/Swollmate", "Date": "2017-01-22T11:07:24Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.Field.getType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((fieldType == (java.lang.Long.class)) || (fieldType == (long.class))) { conversion = com.univocity.parsers.annotations.helpers.Conversions.toLong(); valueIfStringIsNull = (nullRead == null) ? null : java.lang.Long.valueOf(nullRead); }else if ((fieldType == (java.lang.Float.class)) || (fieldType == (float.class))) { conversion = com.univocity.parsers.annotations.helpers.Conversions.toFloat(); valueIfStringIsNull = (nullRead == null) ? null : java.lang.Float.valueOf(nullRead); }else if ((fieldType == (java.lang.Double.class)) || (fieldType == (double.class))) { conversion = com.univocity.parsers.annotations.helpers.Conversions.toDouble(); valueIfStringIsNull = (nullRead == null) ? null : java.lang.Double.valueOf(nullRead); }else if (fieldType == (java.math.BigInteger.class)) { conversion = com.univocity.parsers.annotations.helpers.Conversions.toBigInteger(); valueIfStringIsNull = (nullRead == null) ? null : new java.math.BigInteger(nullRead); }else if (fieldType == (java.math.BigDecimal.class)) { conversion = com.univocity.parsers.annotations.helpers.Conversions.toBigDecimal(); valueIfStringIsNull = (nullRead == null) ? null : new java.math.BigDecimal(nullRead); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/945/buggy-version/src.main.java.com.univocity.parsers.annotations.helpers.AnnotationHelper.java", "BodyUseAPI": [], "Fixed commit": "7ac2788c150b20a5eb51cc51ae433dc4d944db9c", "Url": "https://api.github.com/repos/uniVocity/univocity-parsers", "Date": "2015-05-18T05:26:05Z"},
{"Line": "=>780", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (org.apache.sysml.runtime.matrix.data.LibMatrixDNN.TaskType.LoopedIm2ColConv2dBwdFilter)) { for (org.apache.sysml.runtime.matrix.data.MatrixBlock partialRetBlock : partialRetBlocks) { org.apache.sysml.runtime.matrix.data.LibMatrixDNN.elementWiseInPlaceAddition(params.output, partialRetBlock); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4921/buggy-version/src.main.java.org.apache.sysml.runtime.matrix.data.LibMatrixDNN.java", "BodyUseAPI": [], "Fixed commit": "4444b3689ba9aa9694d4e5983ee71dab981b532e", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2016-12-05T03:13:54Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["user.getUserProfile().getFacebookProfile()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fbLink == null) { return \"home\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/75/buggy-version/src.main.java.com.livingoncodes.spring.web.controllers.HomeController.java", "BodyUseAPI": [], "Fixed commit": "09aad9fc11747b1b26e0dec03a20733f2d640733", "Url": "https://api.github.com/repos/mozammel/bdchub", "Date": "2014-12-30T04:11:00Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.location.LocationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (lastKnownLocation != null) { myLocation = new com.google.android.gms.maps.model.LatLng(lastKnownLocation.getLatitude(), lastKnownLocation.getLongitude()); }else { myLocation = new com.google.android.gms.maps.model.LatLng(45.4958567, (-73.5743482)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3753/buggy-version/client.app.src.main.java.com.example.mrides.Activity.CreateRouteActivity.java", "BodyUseAPI": ["android.location.Location.getLongitude()", "android.location.Location.getLatitude()"], "Fixed commit": "bbf7fc637f9f83992980baed0c198e1ef8a4eb63", "Url": "https://api.github.com/repos/adrielFab/Kaasch", "Date": "2017-04-03T21:33:37Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (uri.toString().startsWith(\"content://com.ianhanniballake.localstorage\")) return com.ipaulpro.afilechooser.utils.FileUtils.getPath(this, uri);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3463/buggy-version/android.src.main.java.org.openforis.collect.android.gui.SurveyListActivity.java", "BodyUseAPI": ["com.ipaulpro.afilechooser.utils.FileUtils.getPath(org.openforis.collect.android.gui.SurveyListActivity,android.net.Uri)"], "Fixed commit": "0ecbc718a034500836be940e6d10597683fccc9e", "Url": "https://api.github.com/repos/openforis/collect-mobile", "Date": "2016-09-26T11:48:02Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.canMove()) { all.add(p); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4613/buggy-version/fanorona.src.main.java.sweden.alexander.fanorona.PlayingField.java", "BodyUseAPI": ["java.util.ArrayList<sweden.alexander.fanorona.Piece>.add(sweden.alexander.fanorona.Piece)"], "Fixed commit": "6a6a5118108a8c05c0e94dbe279a323c2aee75e5", "Url": "https://api.github.com/repos/exal99/Fanorona_app", "Date": "2017-01-29T09:04:15Z"},
{"Line": "=>696", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((udf.localMode) != null) func.set(\"localMode\", railo.runtime.listener.AppListenerUtil.toLocalMode(udf.localMode.intValue(), \"\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8856/buggy-version/railo-java.railo-core.src.railo.runtime.type.util.ComponentUtil.java", "BodyUseAPI": ["railo.runtime.listener.AppListenerUtil.toLocalMode(udf.localMode.intValue(),java.lang.String)", "railo.runtime.type.StructImpl.set(java.lang.String,railo.runtime.listener.AppListenerUtil.toLocalMode(udf.localMode.intValue(), \"\"))", "udf.localMode.intValue()"], "Fixed commit": "5c6f99a2882311bf562c48009e3e00423e5a8b89", "Url": "https://api.github.com/repos/getrailo/railo", "Date": "2013-12-16T09:02:02Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hashWithOutSign == 0) return ((byte) (hashWithOutSign));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3586/buggy-version/src.MarioAI.Hasher.java", "BodyUseAPI": [], "Fixed commit": "6f4b6e2d6d6352202ab55bae47af8ea8f25cee7e", "Url": "https://api.github.com/repos/TheAIBot/MarioAI", "Date": "2017-06-02T08:42:13Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((alertDialog) != null) alertDialog.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7964/buggy-version/GoogleMapProject.src.il.ac.shenkar.cadan.Login.java", "BodyUseAPI": [], "Fixed commit": "6448ac578bef8f5bba6f600dec8f28568cb592ce", "Url": "https://api.github.com/repos/cojalvo/CampusInProject", "Date": "2013-11-11T12:30:59Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StackTraceElement.getFileName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fileName == null) return eu.davidea.flexibleadapter.utils.Log.SOURCE_FILE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1312/buggy-version/flexible-adapter.src.main.java.eu.davidea.flexibleadapter.utils.Log.java", "BodyUseAPI": [], "Fixed commit": "61abe095443493ac72633451019544baa1c17e0c", "Url": "https://api.github.com/repos/davideas/FlexibleAdapter", "Date": "2017-06-16T19:58:46Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (BuildConfig.DEBUG) { eu.davidea.flexibleadapter.FlexibleAdapter.enableLogs(Level.DEBUG); }else { eu.davidea.flexibleadapter.FlexibleAdapter.enableLogs(Level.SUPPRESS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1312/buggy-version/flexible-adapter-app.src.main.java.eu.davidea.samples.flexibleadapter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "61abe095443493ac72633451019544baa1c17e0c", "Url": "https://api.github.com/repos/davideas/FlexibleAdapter", "Date": "2017-06-16T19:58:46Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.thogr.bedede.EntryFinder.theOnlyEntry(java.lang.Class<T>,com.github.thogr.bedede.Entry<T>,java.lang.reflect.Field,java.lang.reflect.Field)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (entry != defaultEntry) { defaultEntry = entry; defaultEntryField = f; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5612/buggy-version/bedede.src.main.java.com.github.thogr.bedede.EntryFinder.java", "BodyUseAPI": [], "Fixed commit": "a501ef1d3872d47fec2a452ab99c72e80293e752", "Url": "https://api.github.com/repos/thogr/bedede", "Date": "2014-10-14T08:54:51Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["map.get(name).getImageName()", "map.get(name).getImagePath(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (!(imgPathFrom.equals(((((util.FileManager.getImageFolderPath()) + folder) + (java.io.File.separator)) + nomeImg)))) util.FileManager.moveImage(imgPathFrom, folder, nomeImg);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4487/buggy-version/src.util.window.ExitSaveDialog.java", "BodyUseAPI": ["util.FileManager.moveImage(java.lang.String,java.lang.String,java.lang.String)"], "Fixed commit": "048b364ee2f8f3756d8d732be2e62127f262485c", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-08-08T16:17:31Z"},
{"Line": "=>1167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char,int)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (nodeIndex >= 0) perm = perm.substring(0, nodeIndex);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2277/buggy-version/src.main.java.com.forgeessentials.permissions.commands.PermissionCommandParser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "dcf61e795ba10fc41a672df07f13a0660f67766b", "Url": "https://api.github.com/repos/ForgeEssentials/ForgeEssentialsMain", "Date": "2014-11-03T12:57:56Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Math.random()) > wholeProb) { d = createInt(coefficient); if (d == 0) { d = 1; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7073/buggy-version/src.com.swtanalytics.math.EasyMain.java", "BodyUseAPI": [], "Fixed commit": "f38ffaddfead004f644db701be16e508070bb35b", "Url": "https://api.github.com/repos/stepthom/math-fun", "Date": "2013-09-23T18:15:43Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["game.Prison.getInmate(game.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((inmate.getDaysLeft()) == 0) { desktop_resources.GUI.showMessage(game.Translator.getString(\"NOWOUTOFPRISON\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5813/buggy-version/src.game.Board.java", "BodyUseAPI": [], "Fixed commit": "3e129f6c4a2450c24e7608308474ad74ba2e4acc", "Url": "https://api.github.com/repos/Frontlinjen/CDIO4", "Date": "2016-01-13T00:24:52Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((timeAsString == null) || (timeAsString.isEmpty())) { this.time = null; }else if (formatter != null) { this.time = java.time.LocalTime.parse(timeAsString, formatter); }else { this.time = java.time.LocalTime.parse(timeAsString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6095/buggy-version/src.ChatRecord.java", "BodyUseAPI": [], "Fixed commit": "78008283a0a851ba24a01bf76125e2e7531ffc76", "Url": "https://api.github.com/repos/henryvhl/interest", "Date": "2016-12-05T06:32:56Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (timeAsString.startsWith(\"null\")) { timeAsString = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6095/buggy-version/src.CountAppearance.java", "BodyUseAPI": [], "Fixed commit": "78008283a0a851ba24a01bf76125e2e7531ffc76", "Url": "https://api.github.com/repos/henryvhl/interest", "Date": "2016-12-05T06:32:56Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.ORE_LEAD_GENERATION) net.minecraftforge.fml.common.registry.GameRegistry.addSmelting(new net.minecraft.item.ItemStack(com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.ORE_LEAD, 1, 0), net.minecraftforge.oredict.OreDictionary.getOres(\"ingotLead\").get(0), 0.0F);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8552/buggy-version/src.main.java.com.mjr.extraplanets.recipes.ExtraPlanets_Recipes.java", "BodyUseAPI": [], "Fixed commit": "d611abbde181251ac7def7b13a6a8eb6fb461328", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-04-07T09:58:17Z"},
{"Line": "=>670", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.mjr.extraplanets.Config.ORE_LEAD_GENERATION) com.mjr.extraplanets.util.RegisterHelper.setHarvestLevel(com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.ORE_LEAD, \"pickaxe\", 2, 0);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8552/buggy-version/src.main.java.com.mjr.extraplanets.blocks.ExtraPlanets_Blocks.java", "BodyUseAPI": [], "Fixed commit": "d611abbde181251ac7def7b13a6a8eb6fb461328", "Url": "https://api.github.com/repos/MJRLegends/ExtraPlanets", "Date": "2017-04-07T09:58:17Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.getScene()) != null) { data.getScene().update(data); data.getScene().bake(new raytrace.data.BakeData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2295/buggy-version/src.network.NetworkRenderer.java", "BodyUseAPI": ["raytrace.data.UpdateData.getScene()", "data.getScene().update(raytrace.data.UpdateData)", "data.getScene().bake(raytrace.data.BakeData)", "raytrace.data.UpdateData.getScene()"], "Fixed commit": "f11b5125f39080b5b1bfbf6358f80ad0eeb5acdd", "Url": "https://api.github.com/repos/CalVR/ParallelRaytracing", "Date": "2014-05-05T23:14:47Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(ids.isEmpty())) { sb.append(\"(\"); sb.append(com.stratio.meta.core.utils.ParserUtils.stringList(ids, \", \")).append(\") \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8107/buggy-version/meta-core.src.main.java.com.stratio.meta.core.statements.InsertIntoStatement.java", "BodyUseAPI": ["com.stratio.meta.core.utils.ParserUtils.stringList(java.util.List<java.lang.String>,java.lang.String)", "java.lang.StringBuilder.append(com.stratio.meta.core.utils.ParserUtils.stringList(ids, \", \"))", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "c7b6509fd142ef8a1cdb52ded8646a6d279ec534", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-07-02T12:20:56Z"},
{"Line": "=>292", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ids.isEmpty()) { for (com.datastax.driver.core.ColumnMetadata c : tableMetadata.getColumns()) { if (!(c.getName().toLowerCase().startsWith(\"stratio\"))) ids.add(c.getName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8107/buggy-version/meta-core.src.main.java.com.stratio.meta.core.statements.InsertIntoStatement.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(c.getName())"], "Fixed commit": "c7b6509fd142ef8a1cdb52ded8646a6d279ec534", "Url": "https://api.github.com/repos/Stratio/stratio-meta", "Date": "2014-07-02T12:20:56Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.lockss.job.JobManager.log.isDebug3()) org.lockss.job.JobManager.log.debug3(((DEBUG_HEADER + \"stepTask = \") + stepTask));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1214/buggy-version/src.org.lockss.job.JobManager.java", "BodyUseAPI": ["org.lockss.util.Logger.debug3(((DEBUG_HEADER + \"stepTask = \") + stepTask))"], "Fixed commit": "c46937bd94e49dbc6e18e587ebb2d47bed2ab6a8", "Url": "https://api.github.com/repos/lockss/lockss-daemon", "Date": "2016-09-07T21:34:28Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((android.os.SystemClock.elapsedRealtime()) - (mLastClickTime)) < 700) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1610/buggy-version/MoneyIO.app.src.main.java.io.money.moneyio.fragments.Fragment_Profile.java", "BodyUseAPI": [], "Fixed commit": "5d9ff652dc4716a2a35341f3b999c15807096453", "Url": "https://api.github.com/repos/AleksandarMironov/MoneyIO", "Date": "2017-10-25T17:59:18Z"},
{"Line": "=>228", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["a.b.imgurandroid.android.managers.HistoryManager.retrieve()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (retreieveStr.equals(this.editText.getText().toString())) { retreieveStr = this.historyManager.retrieve(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5808/buggy-version/Android.src.main.java.a.b.imgurandroid.android.activities.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "173532f43cb3f27da753f786c940aee0b5cd4f3d", "Url": "https://api.github.com/repos/ZadesSC/ImgurAndroid", "Date": "2015-11-01T03:30:11Z"},
{"Line": "=>799", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) timer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9216/buggy-version/src.com.jchingdev.squares.singleplayer.MainActivitySurvivor.java", "BodyUseAPI": [], "Fixed commit": "90ba0ef98f7ba9b4569233337b1c33884927982d", "Url": "https://api.github.com/repos/JoshuaChing/4Squares", "Date": "2015-06-01T04:33:25Z"},
{"Line": "=>729", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) timer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9216/buggy-version/src.com.jchingdev.squares.singleplayer.MainActivitySurvivor.java", "BodyUseAPI": [], "Fixed commit": "90ba0ef98f7ba9b4569233337b1c33884927982d", "Url": "https://api.github.com/repos/JoshuaChing/4Squares", "Date": "2015-06-01T04:33:25Z"},
{"Line": "=>1525", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (com.badlogic.gdx.math.Intersector.overlaps(tower.getRadiusDetection\u0421ircle(), creep.circle1)) { if (tower.shoot(creep)) { if ((tower.getTemplateForTower().shellAttackType) != (com.betmansmall.game.gameLogic.playerTemplates.ShellAttackType.MassAddEffect)) { break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/325/buggy-version/core.src.com.betmansmall.game.gameLogic.GameField.java", "BodyUseAPI": ["com.betmansmall.game.gameLogic.Tower.shoot(com.betmansmall.game.gameLogic.Creep)", "com.betmansmall.game.gameLogic.Tower.getTemplateForTower()"], "Fixed commit": "da6df71e855addc073caa07dca29ad622a56031c", "Url": "https://api.github.com/repos/BetmanSmall/TowerDefence_GDX", "Date": "2017-09-01T14:46:07Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position == 0) { android.support.v7.widget.RecyclerView.LayoutParams params = ((android.support.v7.widget.RecyclerView.LayoutParams) (view.getLayoutParams())); params.setMargins(params.leftMargin, ((params.topMargin) + 8), params.rightMargin, params.bottomMargin); view.setLayoutParams(params); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4743/buggy-version/app.src.main.java.de.appphil.categories.utils.TBMAdapter.java", "BodyUseAPI": [], "Fixed commit": "b760ac6b5800047819e1f0a8a36feb6a31e79e71", "Url": "https://api.github.com/repos/PhilippDE/Categories", "Date": "2017-06-09T09:22:09Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentUser) != null) { com.google.firebase.database.FirebaseDatabase.getInstance().getReference().child(currentUser.getUid()).child(\"goals\").removeValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2116/buggy-version/app.src.main.java.team.tr.permitlog.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "a05f6b509a22e3e852f03dce59ff203544304a78", "Url": "https://api.github.com/repos/brianjaustin/permitlog-android", "Date": "2017-10-08T20:42:23Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((sug.getItemToReplace()) != null) && (item != null)) { if (sug.getItemToReplace().equals(item)) { return sug; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4391/buggy-version/src.de.uniulm.bagception.bundlemessageprotocol.entities.ContextSuggestion.java", "BodyUseAPI": ["de.uniulm.bagception.bundlemessageprotocol.entities.ContextSuggestion.getItemToReplace()", "de.uniulm.bagception.bundlemessageprotocol.entities.Item.equals(de.uniulm.bagception.bundlemessageprotocol.entities.Item)"], "Fixed commit": "326339b4d33b2a015e59d5a608efc773be73109b", "Url": "https://api.github.com/repos/Bagception/libBagceptionSharedLibrary", "Date": "2014-02-23T16:09:14Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sug.getItemToReplace()) == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4391/buggy-version/src.de.uniulm.bagception.bundlemessageprotocol.entities.ContextSuggestion.java", "BodyUseAPI": [], "Fixed commit": "326339b4d33b2a015e59d5a608efc773be73109b", "Url": "https://api.github.com/repos/Bagception/libBagceptionSharedLibrary", "Date": "2014-02-23T16:09:14Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (item == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4391/buggy-version/src.de.uniulm.bagception.bundlemessageprotocol.entities.ContextSuggestion.java", "BodyUseAPI": [], "Fixed commit": "326339b4d33b2a015e59d5a608efc773be73109b", "Url": "https://api.github.com/repos/Bagception/libBagceptionSharedLibrary", "Date": "2014-02-23T16:09:14Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.ws.rs.core.Response.getMediaType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (mediaType.toString().equals(\"image/png\")) { java.awt.image.BufferedImage image = null; try { image = javax.imageio.ImageIO.read(webTarget.getUri().toURL()); } catch (java.net.MalformedURLException e1) { e1.printStackTrace(); } catch (java.io.IOException e1) { e1.printStackTrace(); } java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream(); try { javax.imageio.ImageIO.write(image, \"png\", baos); } catch (java.io.IOException e) { e.printStackTrace(); } responseString = java.util.Base64.getEncoder().encodeToString(baos.toByteArray()); }else { responseString = response.readEntity(java.lang.String.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7042/buggy-version/wcs-adapter.src.main.java.gr.cite.earthserver.wcs.core.WCSRequest.java", "BodyUseAPI": [], "Fixed commit": "0ff83687656700998ce00454279624ccba7396f2", "Url": "https://api.github.com/repos/cite-sa/femme", "Date": "2016-09-22T17:48:57Z"},
{"Line": "=>568", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4648/buggy-version/src.main.java.emcshop.gui.InventoryTab.java", "BodyUseAPI": [], "Fixed commit": "ebac0634167085701f219e33818e3f1e3c661f0d", "Url": "https://api.github.com/repos/mangstadt/emc-shopkeeper", "Date": "2015-09-28T00:36:40Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.method().equals(\"GET\")) { request.header(\"Cookie\", user.strCookies); }else { request.partHeader(\"Cookie\", user.strCookies); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5030/buggy-version/authenticator.src.main.java.com.mindpin.android.authenticator.Authenticator.java", "BodyUseAPI": ["com.github.kevinsawicki.http.HttpRequest.header(java.lang.String,user.strCookies)", "com.github.kevinsawicki.http.HttpRequest.partHeader(java.lang.String,user.strCookies)"], "Fixed commit": "21944297e865d0f9a752126b41f40a90e9e38086", "Url": "https://api.github.com/repos/mindpin/KCAuthenticator", "Date": "2014-09-01T04:33:00Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((source.getTechnicalInstallationDate()) != null) { destination.setTechnicalInstallationDate(source.getTechnicalInstallationDate().toGregorianCalendar().getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3576/buggy-version/osgp-adapter-ws-core.src.main.java.com.alliander.osgp.adapter.ws.core.application.mapping.DeviceManagementMapper.java", "BodyUseAPI": ["com.alliander.osgp.domain.core.entities.Ssld.setTechnicalInstallationDate(source.getTechnicalInstallationDate().toGregorianCalendar().getTime())", "source.getTechnicalInstallationDate().toGregorianCalendar().getTime()", "com.alliander.osgp.domain.core.entities.Device.getTechnicalInstallationDate()", "source.getTechnicalInstallationDate().toGregorianCalendar()"], "Fixed commit": "13bbb0209beea8a97d41a47aade32985b07babfb", "Url": "https://api.github.com/repos/OSGP/Platform", "Date": "2016-06-02T13:04:43Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((source.getTechnicalInstallationDate()) != null) { destination.setTechnicalInstallationDate(source.getTechnicalInstallationDate().toGregorianCalendar().getTime()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3576/buggy-version/osgp-adapter-ws-core.src.main.java.com.alliander.osgp.adapter.ws.core.application.mapping.DeviceManagementMapper.java", "BodyUseAPI": ["source.getTechnicalInstallationDate().toGregorianCalendar().getTime()", "com.alliander.osgp.domain.core.entities.Device.getTechnicalInstallationDate()", "com.alliander.osgp.domain.core.entities.Ssld.setTechnicalInstallationDate(source.getTechnicalInstallationDate().toGregorianCalendar().getTime())", "source.getTechnicalInstallationDate().toGregorianCalendar()"], "Fixed commit": "13bbb0209beea8a97d41a47aade32985b07babfb", "Url": "https://api.github.com/repos/OSGP/Platform", "Date": "2016-06-02T13:04:43Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((file) == null) { throw new java.io.IOException(\"No file defined so cannot be renamed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7105/buggy-version/src.main.java.org.jboss.netty.handler.codec.http.multipart.AbstractDiskHttpData.java", "BodyUseAPI": [], "Fixed commit": "b037eda61488c87e35adf5ab09e789c0e3842853", "Url": "https://api.github.com/repos/netty/netty", "Date": "2014-01-20T15:47:09Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((linkedGame.getPlayerTurn()) != 0) { linkedGame.dropPiece(column); if ((linkedGame.getAIPlayer()) != null) { linkedGame.getAIPlayer().start(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7618/buggy-version/src.Game.Square.java", "BodyUseAPI": ["Game.PhysicalBoard.getAIPlayer()", "Game.PhysicalBoard.dropPiece(int)", "linkedGame.getAIPlayer().start()", "Game.PhysicalBoard.getAIPlayer()"], "Fixed commit": "2fad31341d3031dc33aa0910c1f0bbf9f9014936", "Url": "https://api.github.com/repos/Humphrik/Connect4", "Date": "2017-02-03T22:23:54Z"},
{"Line": "=>363", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((uriString.charAt(0)) == '/') { glue = \":/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2995/buggy-version/src.main.java.net.moznion.uribuildertiny.URIBuilderTiny.java", "BodyUseAPI": [], "Fixed commit": "0ae255e1789616825820d869dd6baaf3fbbc11ea", "Url": "https://api.github.com/repos/moznion/uribuilder-tiny", "Date": "2015-05-22T09:29:32Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.getClass()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (objClass != fieldType) { out.writeFieldName(JSON.DEFAULT_TYPE_KEY); serializer.write(object.getClass()); commaFlag = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4783/buggy-version/src.main.java.com.alibaba.fastjson.serializer.JavaBeanSerializer.java", "BodyUseAPI": [], "Fixed commit": "7f994f32de80e1d6906a244567df60cb2965aef6", "Url": "https://api.github.com/repos/CodePlayer/fastjson", "Date": "2015-06-21T14:40:51Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentPosition) != null) { osmViewController.setCenter(currentPosition); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7327/buggy-version/src.me.guillaumin.android.osmtracker.activity.DisplayTrackMap.java", "BodyUseAPI": [], "Fixed commit": "f38233640e4d58c0f36b7b6c2a79373fb1fa88e0", "Url": "https://api.github.com/repos/alexdor1/osmtracker-android", "Date": "2010-12-16T23:46:30Z"},
{"Line": "=>337", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((java.lang.Integer) (getFieldValue(Fields.nmsEntity_ticksLived, nmsEntityKart))) % 20) == 0) { com.github.erozabesu.yplkart.utils.PacketUtil.sendEntityTeleportPacket(null, entityKart, location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5361/buggy-version/src.com.github.erozabesu.yplkart.utils.KartUtil.java", "BodyUseAPI": [], "Fixed commit": "9bfdd1294db0f194cb9ec692f157c85688f2d429", "Url": "https://api.github.com/repos/qpwakaba/YPLKart", "Date": "2015-08-26T19:55:54Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<wyrw.util.IncrementalAutomatonMinimiser.ParentInfo>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (pinfo != null) { pinfo.remove(index); if (((pinfo.size()) == 0) && (!(isRoot(child)))) { eliminateUnreachableState(child); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/706/buggy-version/src.wyrw.util.IncrementalAutomatonMinimiser.java", "BodyUseAPI": ["wyrw.util.IncrementalAutomatonMinimiser.ParentInfo.size()", "wyrw.util.IncrementalAutomatonMinimiser.ParentInfo.remove(int)"], "Fixed commit": "4f452bbc4763341a2348052915dd284ea414d8d6", "Url": "https://api.github.com/repos/Whiley/WhileyRewriteLanguage", "Date": "2015-12-07T21:28:12Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (guessNbr < rndmNbr) { java.lang.System.out.println(\"This is too low\"); isValid = false; }else if (guessNbr > (rndmNbr + 10)) { java.lang.System.out.println(\"This is way too high\"); isValid = false; }else if (guessNbr > rndmNbr) { java.lang.System.out.println(\"This is too high\"); isValid = false; }else { java.lang.System.out.println(((\"Yay! You got it in \" + guessCounter) + \" tries!\")); if (guessCounter < 3) { java.lang.System.out.println(\"Great work! You are a mathematical wizard!\"); }else if ((guessCounter > 3) && (guessCounter < 7)) { java.lang.System.out.println(\"Not too bad! You've got some potential!\"); }else { java.lang.System.out.println(\"You have some work to do...\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6797/buggy-version/Project5-3daoph.src.GuessingGame.java", "BodyUseAPI": [], "Fixed commit": "d87183d3f63f746149cada17618b29cb0b008b37", "Url": "https://api.github.com/repos/daoph/JAVA", "Date": "2017-08-30T20:04:02Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(bulkhead)) { integrity = (integrity) + (main.Door.BULKHEAD_STRENGTH); bulkhead = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4571/buggy-version/src.main.Door.java", "BodyUseAPI": [], "Fixed commit": "70c5ef3346f4716b59b5a7923e737248f7349d59", "Url": "https://api.github.com/repos/madstanners/Station", "Date": "2015-05-31T12:55:20Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RespondPlugin.Accept.apply(edu.wpi.always.cm.schemas.Plan)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (accept == null) return reject;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8791/buggy-version/core.agent.java.edu.wpi.always.cm.schemas.ActivityStarterSchema.java", "BodyUseAPI": [], "Fixed commit": "95203b3e3ca748b1f5961a7eb5dfdfe822ecdc38", "Url": "https://api.github.com/repos/mbehrooz/always", "Date": "2013-04-14T16:56:03Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mBlackKeysLMOP.isEmpty())) mKeyPressDetector.setMiddleY(((double) (org.opencv.imgproc.Imgproc.boundingRect(mBlackKeysLMOP.get(4)).y)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/856/buggy-version/src.com.alantan.virtualpiano.CameraActivity.java", "BodyUseAPI": ["com.alantan.virtualpiano.KeyPressDetector.setMiddleY(((double) (org.opencv.imgproc.Imgproc.boundingRect(mBlackKeysLMOP.get(4)).y)))", "org.opencv.imgproc.Imgproc.boundingRect(mBlackKeysLMOP.get(4))", "java.util.List<org.opencv.core.MatOfPoint>.get(int)"], "Fixed commit": "fa662bdfe02fcaa92a41b101e9e367ef73525ee9", "Url": "https://api.github.com/repos/alanwuha/VirtualPiano", "Date": "2016-05-08T16:12:45Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, org.araqne.logdb.SavedResult>.remove(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (old == null) throw new java.lang.IllegalStateException((\"saved result not found: \" + guid));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8749/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.impl.SavedResultManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "a3de860b268a09d11a945d06d243c3bc7b26bda8", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-07-25T09:37:04Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(datafeed.isEmpty())) { executionsStorage.runEodAlgorithms(today, datafeed); statisticsProcessor.processEod(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6960/buggy-version/src.main.java.stsc.trading.MarketSimulator.java", "BodyUseAPI": ["stsc.storage.ExecutionsStorage.runEodAlgorithms(java.util.Date,java.util.HashMap<java.lang.String, stsc.common.Day>)"], "Fixed commit": "e0efd9c271ea71d3b204072f7d85496d487af81e", "Url": "https://api.github.com/repos/sidorovis/MarketDataDownloader", "Date": "2014-03-29T23:31:31Z"},
{"Line": "=>280", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileName) == \"\") { dbFile = new java.io.File(dbFolder, java.lang.String.format(\"p.patens/combined.genmap.imputed.seg.sqlite\")); }else dbFile = new java.io.File(getProjectRootPath(), fileName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3296/buggy-version/utgb-core.src.main.java.org.utgenome.gwt.utgb.server.app.CSEGViewer.java", "BodyUseAPI": [], "Fixed commit": "6d261aeb31b27931bd37e485e254c5f0b93b040a", "Url": "https://api.github.com/repos/utgenome/utgb", "Date": "2014-02-18T07:23:37Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((globalKeyword != null) & (!(\"\".equals(globalKeyword)))) { searchVO.setSearchKeyword(globalKeyword); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3998/buggy-version/src.main.java.gu.board.BoardCtr.java", "BodyUseAPI": ["gu.board.BoardSearchVO.setSearchKeyword(java.lang.String)"], "Fixed commit": "46a3ddd282df3a68e1bde4b102ab228e78feb2f5", "Url": "https://api.github.com/repos/gujc71/negocio", "Date": "2016-10-03T04:45:15Z"},
{"Line": "=>301", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((electionScheduledFuture) != null) && (!(electionScheduledFuture.isDone()))) { electionScheduledFuture.cancel(true); isInElection = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/359/buggy-version/raft-java-core.src.main.java.com.github.wenweihu86.raft.RaftNode.java", "BodyUseAPI": ["java.util.concurrent.ScheduledFuture.cancel(boolean)"], "Fixed commit": "d7e335c20bd608c4922e220fcf5aaee4c02d2349", "Url": "https://api.github.com/repos/wenweihu86/raft-java", "Date": "2017-05-17T11:16:27Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (message != null) { message = message.replaceAll(\"'\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6592/buggy-version/src.main.java.com.etriacraft.EtriaEconomy.Methods.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "60aca887332c8f8939aaca4b4d1831a6d02db8cc", "Url": "https://api.github.com/repos/MistPhizzle/EtriaEconomy", "Date": "2014-05-24T21:05:02Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(this.hasItems())) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8341/buggy-version/src.main.java.ch.ese.team6.Model.Delivery.java", "BodyUseAPI": [], "Fixed commit": "aff8019eed76bc135493cfa1181fbe939fc9c7bc", "Url": "https://api.github.com/repos/scg-unibe-ch/ese2017-team6", "Date": "2017-10-25T11:46:03Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (statuses.contains(\"RESOLVED\")) { statuses.remove(\"RESOLVED\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/295/buggy-version/threadfix-main.src.main.java.com.denimgroup.threadfix.service.defects.BugzillaDefectTracker.java", "BodyUseAPI": ["java.util.List<java.lang.String>.remove(java.lang.String)"], "Fixed commit": "0050fca018c57dc4c09dcce9024e8a3724cf462e", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2015-10-16T21:22:51Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (statuses.contains(\"VERIFIED\")) { statuses.remove(\"VERIFIED\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/295/buggy-version/threadfix-main.src.main.java.com.denimgroup.threadfix.service.defects.BugzillaDefectTracker.java", "BodyUseAPI": ["java.util.List<java.lang.String>.remove(java.lang.String)"], "Fixed commit": "0050fca018c57dc4c09dcce9024e8a3724cf462e", "Url": "https://api.github.com/repos/denimgroup/threadfix", "Date": "2015-10-16T21:22:51Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetTab != oldTab) view.clearEditorMessage();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8328/buggy-version/src.edu.asu.laits.gui.nodeeditor.AuthorModeNodeEditorController.java", "BodyUseAPI": [], "Fixed commit": "1e06c5f2a030187f81f22ca26f1ea4af561ac984", "Url": "https://api.github.com/repos/rptiwari/LaitsV3", "Date": "2013-09-16T15:17:49Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((size.get()) < (capacity)) { int s = size.getAndIncrement(); if (s < (capacity)) { eventsQueue.offer(event); if ((s + 1) == (capacity)) { flushWait.signalAll(new java.lang.Runnable() { @java.lang.Override public void run() { ready.set(false); } }); } return true; }else { return false; } }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2437/buggy-version/src.main.java.pro.apphub.aws.cloudwatch.log4j2.Buffer.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicInteger.getAndIncrement()"], "Fixed commit": "107ad5647f85ae1dd2862784f2b4b64a8715e4d5", "Url": "https://api.github.com/repos/apphub-pro/aws-cloudwatch-log4j2", "Date": "2017-07-20T13:23:28Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((menu.size()) > 2) { android.view.MenuItem item = menu.getItem(0); if (com.osama.cryptofmroot.filemanager.utils.SharedData.GRID_LAYOUTMANAGER) { item.setIcon(getDrawable(R.drawable.ic_gridview)); } if (com.osama.cryptofmroot.filemanager.utils.SharedData.SIMPLE_VIEW_MODE) { menu.getItem(2).setTitle(\"Card view\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1100/buggy-version/app.src.main.java.com.osama.cryptofmroot.filemanager.ui.FileManagerActivity.java", "BodyUseAPI": ["menu.getItem(2).setTitle(java.lang.String)", "android.view.Menu.getItem(int)", "android.view.Menu.getItem(int)"], "Fixed commit": "1dd43fccedf0794deeb122079297fa1887243d26", "Url": "https://api.github.com/repos/mosamabinomar/RootPGPExplorer", "Date": "2017-05-11T15:24:54Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((link) == null) link = com.numbrcase.common.SocialMediaIDs.getLink(socialMediaID, userID);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4630/buggy-version/app.src.main.java.com.numbrcase.model.SocialMediaImpl.java", "BodyUseAPI": [], "Fixed commit": "0bad1ed6832cc467e0e595e364cc2fd26f2920f2", "Url": "https://api.github.com/repos/leandrohss/numbrcase", "Date": "2016-04-24T19:59:55Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ioResult instanceof java.lang.String) try { ioResult = new com.orientechnologies.orient.core.record.impl.ODocument(new com.orientechnologies.orient.core.id.ORecordId(((java.lang.String) (ioResult)))); } catch (java.lang.Exception e) { com.orientechnologies.common.log.OLogManager.instance().error(this, \"Error on reading rid with value '%s'\", null, ioResult); ioResult = null; } else if (ioResult instanceof com.orientechnologies.orient.core.db.record.OIdentifiable) ioResult = ((com.orientechnologies.orient.core.db.record.OIdentifiable) (ioResult)).getRecord(); else if (ioResult instanceof java.util.Collection<?>) { final java.util.List<java.lang.Object> result = new java.util.ArrayList<java.lang.Object>(((java.util.Collection<?>) (ioResult)).size()); for (java.lang.Object o : ((java.util.Collection<java.lang.Object>) (ioResult))) { result.add(com.orientechnologies.orient.core.record.impl.ODocumentHelper.getFieldValue(o, iMethodParams[0].toString())); } return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3278/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.method.misc.OSQLMethodField.java", "BodyUseAPI": [], "Fixed commit": "917cd06bb719c18437e364fe72f9c8f63008c329", "Url": "https://api.github.com/repos/scenari/orientdb", "Date": "2013-04-11T15:00:19Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((org.apache.brooklyn.util.text.Strings.isBlank(propCollection)) && (org.apache.brooklyn.util.text.Strings.isBlank(propName))) { throw new java.lang.IllegalStateException(((((((\"Relationship for Requirement \" + (relationshipTemplate.getRequirementName())) + \" on NodeTemplate \") + (nodeTemplate.getName())) + \". Collection Name or Property Name should\") + \" be defined for RelationsType \") + (relationshipTemplate.getType()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9062/buggy-version/brooklyn-tosca-transformer.src.main.java.org.apache.brooklyn.tosca.a4c.brooklyn.ToscaNodeToEntityConverter.java", "BodyUseAPI": [], "Fixed commit": "4bd180df385f86c9c71689779500418ec5f88317", "Url": "https://api.github.com/repos/cloudsoft/brooklyn-tosca", "Date": "2015-11-11T10:41:42Z"},
{"Line": "=>467", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ucar.nc2.EnumTypedef.getShortName()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((ename == null) || ((ename.length()) == 0)) { enumTypedef = ncGroup.findEnumeration(facadeNested.name); if (enumTypedef == null) { enumTypedef = new ucar.nc2.EnumTypedef(facadeNested.name, facadeNested.dobj.mdt.map); ncGroup.addEnumeration(enumTypedef); } v.setEnumTypedef(enumTypedef); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4210/buggy-version/cdm.src.main.java.ucar.nc2.iosp.hdf5.H5header.java", "BodyUseAPI": [], "Fixed commit": "fe4480ef2e05a467605a4fd478508fc2449dfb5e", "Url": "https://api.github.com/repos/Unidata/thredds", "Date": "2012-12-17T17:14:37Z"},
{"Line": "=>231", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.anyplast.liferay.portlet.service.InvoiceService.get(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (null != (invoice.getOperationId())) { com.anyplast.liferay.portlet.model.Operation operation = operationService.updateState(userId, themeDisplay.getScopeGroupId(), invoice); operationService.notifyUser(operation); operationService.invokeTransport(userId, scopeGroupId, operation, companyId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4728/buggy-version/src.main.java.com.anyplast.liferay.controller.admin.invoices.InvoiceController.java", "BodyUseAPI": ["com.anyplast.liferay.portlet.service.OperationService.updateState(long,themeDisplay.getScopeGroupId(),com.anyplast.liferay.portlet.model.Invoice)"], "Fixed commit": "504b82ffae2f79068551c4fddc254fe39c7d5bc7", "Url": "https://api.github.com/repos/jmbonilla/anyplast-portlet", "Date": "2016-01-21T00:19:32Z"},
{"Line": "=>487", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((residentToMoveInWith.getWorkDayDestination()) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5791/buggy-version/src.Resident.java", "BodyUseAPI": [], "Fixed commit": "94f4b352dd47ff2a98cc325f1646f597fff12814", "Url": "https://api.github.com/repos/rohan-suri/ebola-abm", "Date": "2015-10-03T19:45:29Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mResultTransitionRelation.get(cs, dividedDl)) != null) { assert mResultTransitionRelation.get(cs, dividedDl).equals(newState); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4916/buggy-version/SMTInterpol.src.de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgbuilders.UnionOrIntersectionDawgBuilder.java", "BodyUseAPI": ["mResultTransitionRelation.get(cs, dividedDl).equals(de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgstates.PairDawgState)", "de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.DeterministicDawgTransitionRelation<de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgstates.DawgState, de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgletters.IDawgLetter<LETTER, COLNAMES>, de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgstates.DawgState>.get(de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgstates.PairDawgState,de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgletters.IDawgLetter<LETTER, COLNAMES>)"], "Fixed commit": "843e8c2548896e64596f2d788ddf904e882d63c5", "Url": "https://api.github.com/repos/ultimate-pa/smtinterpol", "Date": "2017-03-21T15:21:52Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mResultTransitionRelation.get(cs, dividedDl)) != null) { assert mResultTransitionRelation.get(cs, dividedDl).equals(newState); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4916/buggy-version/SMTInterpol.src.de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgbuilders.UnionOrIntersectionDawgBuilder.java", "BodyUseAPI": ["mResultTransitionRelation.get(cs, dividedDl).equals(de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgstates.PairDawgState)", "de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.DeterministicDawgTransitionRelation<de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgstates.DawgState, de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgletters.IDawgLetter<LETTER, COLNAMES>, de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgstates.DawgState>.get(de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgstates.PairDawgState,de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgletters.IDawgLetter<LETTER, COLNAMES>)"], "Fixed commit": "843e8c2548896e64596f2d788ddf904e882d63c5", "Url": "https://api.github.com/repos/ultimate-pa/smtinterpol", "Date": "2017-03-21T15:21:52Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mResultTransitionRelation.get(cs, dividedDl)) != null) { assert mResultTransitionRelation.get(cs, dividedDl).equals(newState); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4916/buggy-version/SMTInterpol.src.de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgbuilders.UnionOrIntersectionDawgBuilder.java", "BodyUseAPI": ["mResultTransitionRelation.get(cs, dividedDl).equals(de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgstates.PairDawgState)", "de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.DeterministicDawgTransitionRelation<de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgstates.DawgState, de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgletters.IDawgLetter<LETTER, COLNAMES>, de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgstates.DawgState>.get(de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgstates.PairDawgState,de.uni_freiburg.informatik.ultimate.smtinterpol.theory.epr.dawgs.dawgletters.IDawgLetter<LETTER, COLNAMES>)"], "Fixed commit": "843e8c2548896e64596f2d788ddf904e882d63c5", "Url": "https://api.github.com/repos/ultimate-pa/smtinterpol", "Date": "2017-03-21T15:21:52Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (primary) { tokenRanges = java.lang.String.join(\",\", ((java.util.List<java.lang.String>) (data.get(\"token_ranges\")))).replaceAll(\"\\\\]\", \"\\\\)\"); }else { tokenRanges = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/345/buggy-version/mr.src.main.java.org.elasticsearch.hadoop.serialization.dto.Shard.java", "BodyUseAPI": [], "Fixed commit": "34ff30ab5810286c23a92c8387900721bccf448f", "Url": "https://api.github.com/repos/strapdata/elasticsearch-hadoop", "Date": "2017-06-08T14:48:41Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (exceptionIdentifier == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/223/buggy-version/org.eclipse.titan.designer.src.org.eclipse.titan.designer.AST.TTCN3.statements.TryCatch_Statement.java", "BodyUseAPI": [], "Fixed commit": "b7268240e0bc31637050c940086ce3326ff9e445", "Url": "https://api.github.com/repos/izaingrid/titan.EclipsePlug-ins", "Date": "2017-08-07T14:13:33Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (xmlBoolean.equals(XmlAttrValue.TRUE)) return XmlAttrValue.TRUE; else if (xmlBoolean.equals(XmlAttrValue.FALSE)) return XmlAttrValue.FALSE;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3201/buggy-version/src.linyuzai.plugin.xml.common.AttributeUtil.java", "BodyUseAPI": ["java.lang.String.equals(XmlAttrValue.FALSE)"], "Fixed commit": "48a06314e2ee1a472d09cfb02341832a253ccced", "Url": "https://api.github.com/repos/Linyuzai/LayoutXmlConverter", "Date": "2017-11-05T14:57:09Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (number != 1) { int prime = PrimesForHashtable.LookUpPrime(primes, number); if (prime == number) { java.lang.System.out.println(\"prime\"); }else { java.lang.System.out.println(prime); } }else { java.lang.System.out.println(\"1\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1999/buggy-version/src.PrimesForHashtable.java", "BodyUseAPI": ["PrimesForHashtable.LookUpPrime(int[],int)"], "Fixed commit": "d954b7e6c0d183cfea9869f7dd03b2b143d08ac0", "Url": "https://api.github.com/repos/dkartaschew/acm-comp-guide", "Date": "2012-08-17T15:01:44Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inAc) { bufferedWriter.write(((char) (buffer[0]))); }else if (((char) (buffer[0])) != '\\n') { bufferedWriter.write(((char) (buffer[0]))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3631/buggy-version/src.format.text.CommonFormats.java", "BodyUseAPI": [], "Fixed commit": "cecad6c6c331613c8fd2bd41ee15a2b7a950f96a", "Url": "https://api.github.com/repos/axrt/gBLASTer", "Date": "2014-06-17T16:05:07Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((char) (buffer[0])) == '\\n') { inAc = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3631/buggy-version/src.format.text.CommonFormats.java", "BodyUseAPI": [], "Fixed commit": "cecad6c6c331613c8fd2bd41ee15a2b7a950f96a", "Url": "https://api.github.com/repos/axrt/gBLASTer", "Date": "2014-06-17T16:05:07Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(caseNumberTextBox.getText().equals(\"\"))) { switch (emailSection) { case \"ULP\" : toComboBox.setSelectedItem(parker.serb.sql.ULPCase.ULPDocketTo(caseNumberTextBox.getText())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5324/buggy-version/src.main.java.parker.serb.docket.FileEmailDialog.java", "BodyUseAPI": ["parker.serb.sql.ULPCase.ULPDocketTo(java.lang.String)", "javax.swing.JTextField.getText()", "javax.swing.JComboBox<java.lang.String>.setSelectedItem(parker.serb.sql.ULPCase.ULPDocketTo(caseNumberTextBox.getText()))"], "Fixed commit": "dd591b7000614f1aa11e45169215205654264cbe", "Url": "https://api.github.com/repos/CurrentlyNotSet/SERB", "Date": "2016-03-14T22:49:55Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(caseNumberTextBox.getText().equals(\"\"))) { switch (selectedSection) { case \"ULP\" : toComboBox.setSelectedItem(parker.serb.sql.ULPCase.ULPDocketTo(caseNumberTextBox.getText())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5324/buggy-version/src.main.java.parker.serb.docket.mediaFileDialog.java", "BodyUseAPI": ["parker.serb.sql.ULPCase.ULPDocketTo(java.lang.String)", "javax.swing.JComboBox<java.lang.String>.setSelectedItem(parker.serb.sql.ULPCase.ULPDocketTo(caseNumberTextBox.getText()))", "javax.swing.JTextField.getText()"], "Fixed commit": "dd591b7000614f1aa11e45169215205654264cbe", "Url": "https://api.github.com/repos/CurrentlyNotSet/SERB", "Date": "2016-03-14T22:49:55Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (command.getFilter().isDateRestricted()) { query.leftJoin(Tables.REPORTING_PERIOD, \"RP\").on(\"RP.SiteId = Site.SiteId\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5681/buggy-version/server.src.main.java.org.activityinfo.legacy.shared.impl.pivot.DimensionValues.java", "BodyUseAPI": [], "Fixed commit": "336b8736a11910b11671040095fc27dabbee1542", "Url": "https://api.github.com/repos/bedatadriven/activityinfo", "Date": "2014-10-31T11:43:24Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.emc.storageos.db.client.model.Volume>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((com.emc.storageos.db.client.model.Volume.checkForVplexBackEndVolume(dbClient, vol)) && (com.emc.storageos.db.client.util.NullColumnValueGetter.isNullValue(vol.getReplicationGroupInstance()))) { isCG = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1483/buggy-version/controllersvc.src.main.java.com.emc.storageos.volumecontroller.impl.xtremio.XtremIOStorageDevice.java", "BodyUseAPI": [], "Fixed commit": "436818d69bcd14957f6801f47329aade4e1dbe00", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-01-28T18:06:05Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (idString != null) { maxOrderId = java.lang.Integer.parseInt(idString); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8700/buggy-version/src.com.hkb48.keepdo.DatabaseAdapter.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "816d3d78d4d22b8f0910f93f79a6ed7381492e56", "Url": "https://api.github.com/repos/giza10/keep-doing", "Date": "2013-05-14T15:51:06Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (inputStream != null) { try { inputStream.close(); } catch (java.io.IOException e) { org.wso2.carbon.ibus.mediation.cheetah.config.dsl.external.deployer.WUMLDeployer.logger.error(\"Cannot close the Input Stream\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5152/buggy-version/ibus.components.org.wso2.carbon.ibus.src.main.java.org.wso2.carbon.ibus.mediation.cheetah.config.dsl.external.deployer.WUMLDeployer.java", "BodyUseAPI": ["java.io.InputStream.close()"], "Fixed commit": "c629fcc91cdc6501663307cd7af7c734d20e0889", "Url": "https://api.github.com/repos/isururanawaka/ESB5", "Date": "2016-02-17T16:46:00Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getLong(MainActivity.CurrentAlertTimeSettingsTag,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (alertTimeMs != 0) { com.derdirk.happyday.NotificationManager.setNotification(context); android.util.Log.d(\"BootCompletedReceiver\", \"Set notification\"); }else { android.util.Log.d(\"BootCompletedReceiver\", \"No alert scheduled\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4888/buggy-version/src.com.derdirk.happyday.BootCompletedReceiver.java", "BodyUseAPI": [], "Fixed commit": "b5761b37d286498bb76f200d55afa85a5662f7fe", "Url": "https://api.github.com/repos/der-dirk/HappyDay", "Date": "2014-11-30T19:17:29Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dianping.puma.common.service.PumaClientService.findByClientName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (client != null) { clientConfigService.replace(clientName, clientConfig); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6445/buggy-version/puma.src.main.java.com.dianping.puma.pumaserver.client.AsyncRemoteClientManager.java", "BodyUseAPI": [], "Fixed commit": "f1e4e249e3182bbd7ac66278a548f6a4bb97885e", "Url": "https://api.github.com/repos/dianping/puma", "Date": "2016-03-23T03:39:58Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dianping.puma.common.service.PumaClientService.findByClientName(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (client != null) { clientAckService.replace(clientName, clientAck); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6445/buggy-version/puma.src.main.java.com.dianping.puma.pumaserver.client.AsyncRemoteClientManager.java", "BodyUseAPI": [], "Fixed commit": "f1e4e249e3182bbd7ac66278a548f6a4bb97885e", "Url": "https://api.github.com/repos/dianping/puma", "Date": "2016-03-23T03:39:58Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAudioThread) != null) { mAudioThread.interrupt(); mAudioThread = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/592/buggy-version/app.src.main.java.io.github.junyuecao.croppedscreenrecorder.ScreenCapture.java", "BodyUseAPI": [], "Fixed commit": "60ec145b18950a5c9ee584c974b68bb1e371b0e4", "Url": "https://api.github.com/repos/junyuecao/AndroidScreenRecordAndCrop", "Date": "2017-05-03T07:16:15Z"},
{"Line": "=>304", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAudioRecord) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/592/buggy-version/app.src.main.java.io.github.junyuecao.croppedscreenrecorder.ScreenCapture.java", "BodyUseAPI": [], "Fixed commit": "60ec145b18950a5c9ee584c974b68bb1e371b0e4", "Url": "https://api.github.com/repos/junyuecao/AndroidScreenRecordAndCrop", "Date": "2017-05-03T07:16:15Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.syphr.mythtv.proto.impl.Protocol63Utils.splitArguments(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((args.size()) == 0) { throw new org.syphr.mythtv.proto.ProtocolException(response, org.syphr.mythtv.proto.ProtocolException.Direction.RECEIVE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7143/buggy-version/src.main.java.org.syphr.mythtv.proto.impl.Command63QueryPixMapGetIfModified.java", "BodyUseAPI": [], "Fixed commit": "be4932eb2a4115f457979334c6be9600c0d66515", "Url": "https://api.github.com/repos/syphr42/libmythtv-java", "Date": "2011-03-13T16:08:50Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["info.getResourceMethod().getGenericParameterTypes()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (tools.UniformementRepresentable.isWrapperType(((java.lang.Class) (classes[0])))) { java.lang.System.out.println(\"General type!\"); requestContext.setEntityStream(input); }else { adapters.InterfaceToClass adpt = new adapters.InterfaceToClass(info.getResourceMethod().getDeclaringClass().getPackage()); java.lang.Class<?>[] toClassTab = filter.server.Tools.toClassTab(classes); serverLifter.archi.LifterCaller lifterCaller = new serverLifter.archi.ServerLifterCaller(input, toClassTab, adpt); java.io.InputStream output = lifterCaller.callStream(); requestContext.setEntityStream(output); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3986/buggy-version/Projectv1.LiftingAlgorithm.src.filter.server.ClientRequestFilter.java", "BodyUseAPI": ["filter.server.Tools.toClassTab(java.lang.reflect.Type[])"], "Fixed commit": "3eda6e81df59fb72a9e01869bb52fb2c7641d536", "Url": "https://api.github.com/repos/zerbino/cxfemn", "Date": "2014-02-22T16:49:50Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (attachments != null) { attachments.setBody(body); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1435/buggy-version/mobile.src.main.java.by.dzmitryslutskiy.vkclient.processing.WallGsonProcessor.java", "BodyUseAPI": ["by.dzmitryslutskiy.vkclient.bo.models.attachments.VkAttachment.setBody(java.lang.String)"], "Fixed commit": "5334c7bca6368516bf1ea3a1de231ab902c738e3", "Url": "https://api.github.com/repos/DzmitrySlutskiy/VKClient", "Date": "2015-01-24T09:30:51Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (existingPaymentMethod.isActive()) { deletedPaymentMethodInTransaction(entitySqlDaoWrapperFactory, existingPaymentMethod.getId(), context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6188/buggy-version/payment.src.main.java.com.ning.billing.payment.dao.DefaultPaymentDao.java", "BodyUseAPI": ["com.ning.billing.payment.dao.DefaultPaymentDao.21.deletedPaymentMethodInTransaction(com.ning.billing.util.entity.dao.EntitySqlDaoWrapperFactory<com.ning.billing.util.entity.dao.EntitySqlDao>,existingPaymentMethod.getId(),com.ning.billing.util.callcontext.InternalCallContext)", "com.ning.billing.payment.dao.PaymentMethodModelDao.getId()"], "Fixed commit": "92506ed6fee2df47143af4426daebc7843cce33c", "Url": "https://api.github.com/repos/killbill/killbill", "Date": "2013-06-12T17:10:19Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.owncloud.android.ui.preview.PreviewTextFragment.getArguments()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (args.containsKey(FileDisplayActivity.EXTRA_SEARCH_QUERY)) { mSearchQuery = args.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7021/buggy-version/src.main.java.com.owncloud.android.ui.preview.PreviewTextFragment.java", "BodyUseAPI": ["android.os.Bundle.getString(FileDisplayActivity.EXTRA_SEARCH_QUERY)"], "Fixed commit": "e8220a8c5028d52b44cc4ddcde26ede88ea975e6", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2017-01-24T01:01:49Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getContentCount()) != 0) { if (err.getMessage().startsWith(\"Can't get child folders\")) { throw err; }else { throw new com.pff.PSTException((((((((\"Can't get child folders for folder \" + (this.getDisplayName())) + \"(\") + (this.getDescriptorNodeId())) + \") child count: \") + (this.getContentCount())) + \" - \") + (err.toString())), err); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5431/buggy-version/src.main.java.com.pff.PSTFolder.java", "BodyUseAPI": [], "Fixed commit": "89f65ce2f243e69c53b91cf35546f3098141a7a2", "Url": "https://api.github.com/repos/moberhuber/java-libpst", "Date": "2016-11-16T23:51:14Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((world.provider.getDimensionId()) == 0) { getGeology(world).replaceStoneInChunk(chunkX, chunkZ, world); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4861/buggy-version/src.main.java.cyano.mineralogy.worldgen.StoneReplacer.java", "BodyUseAPI": ["cyano.mineralogy.worldgen.Geology.replaceStoneInChunk(int,int,net.minecraft.world.World)", "cyano.mineralogy.worldgen.StoneReplacer.getGeology(net.minecraft.world.World)"], "Fixed commit": "bc7af536fb0eeed8a4de54d4b13cca64ebf51508", "Url": "https://api.github.com/repos/cyanobacterium/Minecraft_Mineralogy", "Date": "2016-04-16T23:14:27Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((cursorStr != null) && (cursorStr.isEmpty())) queryOptionsBuilder.setCursor(com.google.appengine.api.search.Cursor.newBuilder().build(cursorStr)); else if ((offset != null) && (offset > 0)) queryOptionsBuilder.setOffset(offset);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1652/buggy-version/src.main.java.com.pratilipi.data.SearchAccessorGaeImpl.java", "BodyUseAPI": ["com.google.appengine.api.search.Cursor.newBuilder().build(java.lang.String)", "com.google.appengine.api.search.Document.Builder.setCursor(com.google.appengine.api.search.Cursor.newBuilder().build(cursorStr))"], "Fixed commit": "41cc49ef02c2f7ccd832138367df7ecb0c25a74d", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-01-25T13:20:35Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(org.apache.commons.io.IOUtils.toString(u))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (updateId == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/194/buggy-version/verifier-cli.src.main.java.com.jetbrains.pluginverifier.repository.GlobalRepository.java", "BodyUseAPI": [], "Fixed commit": "91645d6ff083dc0f23a540f7b0d64850564606ca", "Url": "https://api.github.com/repos/JetBrains/intellij-plugin-verifier", "Date": "2014-04-01T15:37:42Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.optique.api.mapping.TriplesMap.getSubjectMap()"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((sMap.getTemplate()) == null) { subj = null; }else { subj = sMap.getTemplateString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8096/buggy-version/obdalib-sesame.src.main.java.it.unibz.krdb.obda.sesame.r2rml.R2RMLParser.java", "BodyUseAPI": ["eu.optique.api.mapping.SubjectMap.getTemplateString()"], "Fixed commit": "334690933c6f59eb6b79e5380c8d7e6ef0ba6877", "Url": "https://api.github.com/repos/ontop/ontop", "Date": "2014-06-05T09:50:13Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(audio.MusicPlayer.currentFile.equals(audio.MusicPlayer.waveBGM))) { audio.MusicPlayer.stopBGM(); audio.MusicPlayer.music(audio.MusicPlayer.waveBGM); audio.MusicPlayer.changeBGMVolume(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/3906/buggy-version/src.audio.MusicPlayer.java", "BodyUseAPI": ["audio.MusicPlayer.music(java.io.File)"], "Fixed commit": "776b40f33303a4481e05974da94c8465b5b6613b", "Url": "https://api.github.com/repos/justinasfour04/Tower-Defense", "Date": "2015-04-06T19:48:56Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getProperty(\"os.name\").toLowerCase().indexOf(\"win\")) >= 0) { org.osgi.framework.Bundle jdtLaunching = org.eclipse.core.runtime.Platform.getBundle(\"org.eclipse.jdt.launching\"); if (jdtLaunching != null) { org.osgi.framework.Version version = jdtLaunching.getVersion(); org.osgi.framework.VersionRange newEnough = new org.osgi.framework.VersionRange(\"3.7.0\"); if (!(newEnough.includes(version))) { return org.grails.ide.eclipse.core.launch.GrailsCommandLaunchConfigurationDelegate.winQuote(argument); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/4261/buggy-version/org.grails.ide.eclipse.core.src.org.grails.ide.eclipse.core.launch.GrailsCommandLaunchConfigurationDelegate.java", "BodyUseAPI": [], "Fixed commit": "e9dae7a0393208aa5e76b5e2518aa2d7a220d1f0", "Url": "https://api.github.com/repos/SpringSource/grails-ide", "Date": "2013-07-19T23:07:31Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.app.ActivityManager.getRunningAppProcesses()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (appProcesses == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1362/buggy-version/xabber.src.main.java.com.xabber.android.data.notification.MessageNotificationCreator.java", "BodyUseAPI": [], "Fixed commit": "306c9332615b12723b84d75edeeb2b095e933142", "Url": "https://api.github.com/repos/redsolution/xabber-android", "Date": "2017-09-26T12:17:46Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((attributes.getResponseCode()) >= 400) { if ((attributes.getErrorMessage()) == null) { tile.setError(tr(\"HTTP error {0} when loading tiles\", attributes.getResponseCode())); }else { tile.setError(tr(\"Error downloading tiles: {0}\", attributes.getErrorMessage())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9162/buggy-version/src.org.openstreetmap.josm.data.imagery.TMSCachedTileLoaderJob.java", "BodyUseAPI": ["org.openstreetmap.josm.data.imagery.TMSCachedTileLoaderJob.tr(java.lang.String,attributes.getResponseCode())", "org.openstreetmap.josm.data.imagery.TMSCachedTileLoaderJob.getResponseCode()", "org.openstreetmap.josm.data.imagery.TMSCachedTileLoaderJob.tr(java.lang.String,attributes.getErrorMessage())", "org.openstreetmap.gui.jmapviewer.Tile.setError(tr(\"Error downloading tiles: {0}\", attributes.getErrorMessage()))", "org.openstreetmap.josm.data.imagery.TMSCachedTileLoaderJob.getErrorMessage()", "org.openstreetmap.josm.data.imagery.TMSCachedTileLoaderJob.getErrorMessage()", "org.openstreetmap.gui.jmapviewer.Tile.setError(tr(\"HTTP error {0} when loading tiles\", attributes.getResponseCode()))"], "Fixed commit": "460421b7457fcd8f1a6b4fa5260ec32657f54699", "Url": "https://api.github.com/repos/wiktorn/josm", "Date": "2015-07-16T19:53:56Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toString()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((value != null) && ((value.length()) > 255)) { value = value.substring(0, 254); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6815/buggy-version/podium-uaa.src.main.java.org.bbmri.podium.config.audit.AuditEventConverter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "e1abb9b1b511d5f50a388d7e741c087bbed0afa9", "Url": "https://api.github.com/repos/thehyve/podium", "Date": "2017-02-22T20:40:21Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (unit == null) { throw new java.lang.IllegalArgumentException(\"null unit\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2938/buggy-version/model.src.com.redhat.ceylon.model.typechecker.model.NothingType.java", "BodyUseAPI": [], "Fixed commit": "960b0ef2343091780467584d1ce54a6648565d45", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-07-13T12:21:44Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (unit == null) { throw new java.lang.IllegalArgumentException(\"null unit\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2938/buggy-version/model.src.com.redhat.ceylon.model.typechecker.model.IntersectionType.java", "BodyUseAPI": [], "Fixed commit": "960b0ef2343091780467584d1ce54a6648565d45", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-07-13T12:21:44Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (unit == null) { throw new java.lang.IllegalArgumentException(\"null unit\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2938/buggy-version/model.src.com.redhat.ceylon.model.typechecker.model.UnionType.java", "BodyUseAPI": [], "Fixed commit": "960b0ef2343091780467584d1ce54a6648565d45", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2016-07-13T12:21:44Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (email.equals(\"user\")) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7782/buggy-version/app.src.main.java.com.turboocelots.oasis.controllers.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "59e77bc8e18c13a7d15d75237ad5e6d84c9bca1e", "Url": "https://api.github.com/repos/tiffanyrzhou/Oasis", "Date": "2017-02-16T15:52:24Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (password.equals(\"pass\")) { return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/7782/buggy-version/app.src.main.java.com.turboocelots.oasis.controllers.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "59e77bc8e18c13a7d15d75237ad5e6d84c9bca1e", "Url": "https://api.github.com/repos/tiffanyrzhou/Oasis", "Date": "2017-02-16T15:52:24Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((sensorTime) == 0L) && ((myTime) == 0L)) { sensorTime = event.timestamp; myTime = java.lang.System.currentTimeMillis(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6087/buggy-version/FallDetector.src.it.unipd.dei.esp1415.falldetector.service.FallDetectorService.java", "BodyUseAPI": [], "Fixed commit": "37682248e3b69bec401e53c07f20eac98e2268aa", "Url": "https://api.github.com/repos/MrBonty/ESP1415", "Date": "2015-08-25T09:19:28Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((math.state) != null) { this.state = math.state; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9061/buggy-version/analysis.src.main.java.edu.utah.ece.async.ibiosim.analysis.simulation.hierarchical.math.FunctionNode.java", "BodyUseAPI": [], "Fixed commit": "3ef36903ed00b2aadd4e151e4f38d28d626a2697", "Url": "https://api.github.com/repos/MyersResearchGroup/iBioSim", "Date": "2017-04-18T23:16:47Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.length()) > 2) { s = s.replaceAll(\"\\\\s\", \"\").replaceAll(\"\\\\+\", \"\\\\+\").toUpperCase(); for (int i = 0; i < (mItems.getChildCount()); i++) { android.view.View v = mItems.getChildAt(i); java.lang.String text = ((android.widget.TextView) (v)).getText().toString().toUpperCase(); if (text.contains(s)) { v.setVisibility(View.VISIBLE); if (text.equals(s)) { mItems.removeView(v); mItems.addView(v, 0); } }else v.setVisibility(View.GONE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/1046/buggy-version/app.src.main.java.com.rrc.wilson.developerreference.SearchWebActivity.java", "BodyUseAPI": ["java.lang.String.toUpperCase()", "java.lang.String.replaceAll(java.lang.String,java.lang.String)", "java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "ddb1324872ebaae01d329c384a22cbbb4eee7ea8", "Url": "https://api.github.com/repos/wilsonthehungryman/DeveloperReference", "Date": "2017-04-06T00:21:06Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.Intent.getDoubleExtra(java.lang.String,double)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if (latitude != 0) { pndvWebView.loadUrl(((((((((\"http://pressurenet.cumulonimbus.ca/?event=true&latitude=\" + latitude) + \"&longitude=\") + longitude) + \"&startTime=\") + twoDaysAgo) + \"&endTime=\") + tomorrow) + \"&zoomLevel=10\")); }else { pndvWebView.loadUrl(\"http://pressurenet.cumulonimbus.ca\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6146/buggy-version/src.ca.cumulonimbus.barometernetwork.PNDVActivity.java", "BodyUseAPI": ["android.webkit.WebView.loadUrl(java.lang.String)"], "Fixed commit": "1424daaf8e1eb1d93a9f4baead9b5ae60a2c09fe", "Url": "https://api.github.com/repos/JacobSheehy/pressureNET", "Date": "2013-01-29T01:57:45Z"},
{"Line": "=>1338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (matchTags.contains(tag.name().substring(1))) { if (res == null) { res = new java.util.ArrayList<java.lang.String>(); } java.lang.String customValue = tag.text().trim(); if ((customValue.length()) > 0) { res.add(options.replaceVars(customValue)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/6399/buggy-version/swagger-doclet.src.main.java.com.carma.swagger.doclet.parser.ParserHelper.java", "BodyUseAPI": ["java.lang.String.trim()", "com.sun.javadoc.Tag.text()"], "Fixed commit": "bdb05a61ad7c8c8c7e08cb2eecef00ff028b1aa5", "Url": "https://api.github.com/repos/umbrew/swagger-jaxrs-doclet", "Date": "2015-05-11T16:33:58Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Sirius.server.middleware.interfaces.domainserver.MetaService.getMetaObject(getUser(),int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if (object != null) { final Sirius.server.middleware.types.Node node = new Sirius.server.middleware.types.MetaObjectNode(object.getBean()); result.add(node); }else { de.cismet.cids.custom.sudplan.server.search.EtaResultSearch.LOG.warn((\"no run found for id \" + objectId)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/2820/buggy-version/src.main.java.de.cismet.cids.custom.sudplan.server.search.EtaResultSearch.java", "BodyUseAPI": ["Sirius.server.middleware.types.MetaObject.getBean()"], "Fixed commit": "53666b1e90ba9dd3fd95e1eb4ed5f60bbd759bdb", "Url": "https://api.github.com/repos/cismet/cids-custom-sudplan-server", "Date": "2012-02-10T19:24:20Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ardor3d.scenegraph.Mesh.getLocalRenderState(StateType.Texture)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep, IfRet]", "Content": "=>if ((textureState != null) && ((textureState.getTexture()) != null)) { group.textureImage = textureState.getTexture().getImage(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9018/buggy-version/src.main.java.org.concord.energy3d.util.TriangleMeshLib.java", "BodyUseAPI": ["textureState.getTexture().getImage()", "com.ardor3d.renderer.state.TextureState.getTexture()"], "Fixed commit": "d224d6b9b49cbf4a09d6a571a810799c4a08ccf0", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2017-01-23T23:32:56Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((group.textureImage) != null) { final com.ardor3d.image.Texture texture = com.ardor3d.util.TextureManager.loadFromImage(group.textureImage, Texture.MinificationFilter.Trilinear, TextureStoreFormat.GuessNoCompressedFormat); final com.ardor3d.renderer.state.TextureState ts = new com.ardor3d.renderer.state.TextureState(); ts.setTexture(texture); mesh.setRenderState(ts); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/9018/buggy-version/src.main.java.org.concord.energy3d.util.TriangleMeshLib.java", "BodyUseAPI": ["com.ardor3d.util.TextureManager.loadFromImage(group.textureImage,Texture.MinificationFilter.Trilinear,TextureStoreFormat.GuessNoCompressedFormat)"], "Fixed commit": "d224d6b9b49cbf4a09d6a571a810799c4a08ccf0", "Url": "https://api.github.com/repos/concord-consortium/energy3d", "Date": "2017-01-23T23:32:56Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nuProcesso.siblingElements().select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((nuProcSiblings.size()) > 0) { java.lang.String envNome = nuProcSiblings.get(0).text(); res.setEnvolvimento(envNome.substring(0, envNome.indexOf(':')).trim()); res.setNome(envNome.substring(((envNome.indexOf(':')) + 1), envNome.length()).trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5453/buggy-version/implementation.consultasbr.src.main.java.br.com.quintoandar.consultasbr.tjsp.ConsultarTJSP.java", "BodyUseAPI": ["org.jsoup.select.Elements.get(int)", "nuProcSiblings.get(0).text()"], "Fixed commit": "ebfaa9e9641fe5a7d65463ddb5130ba5b8334192", "Url": "https://api.github.com/repos/quintoandar/consultasbr", "Date": "2014-05-16T22:29:42Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nuProcesso.siblingElements().select(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfDep, IfRet]", "Content": "=>if ((nuProcSiblings.size()) > 1) { java.lang.String dataEVara = nuProcSiblings.get(1).text().replaceAll(\"^.*?:\", \"\"); res.setRecebidoEm(br.com.quintoandar.consultasbr.tjsp.ConsultarTJSP.sdfRecebido.parse(dataEVara.split(\"-\")[0].trim())); res.setVara(dataEVara.split(\"-\")[1].trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/5453/buggy-version/implementation.consultasbr.src.main.java.br.com.quintoandar.consultasbr.tjsp.ConsultarTJSP.java", "BodyUseAPI": ["nuProcSiblings.get(1).text().replaceAll(java.lang.String,java.lang.String)", "nuProcSiblings.get(1).text()", "org.jsoup.select.Elements.get(int)"], "Fixed commit": "ebfaa9e9641fe5a7d65463ddb5130ba5b8334192", "Url": "https://api.github.com/repos/quintoandar/consultasbr", "Date": "2014-05-16T22:29:42Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.gzinga.InputStreamConverter.getMetadata()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (metadata.isEmpty()) { try { inputStreamConverter.storeMetadata(); } catch (java.lang.Exception e) { e.printStackTrace(); } metadata = inputStreamConverter.getMetadata(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/8398/buggy-version/core.src.main.java.io.gzinga.GZipInputStreamRandomAccess.java", "BodyUseAPI": [], "Fixed commit": "6f0060707f2ae1503e5481e64bc82dd1878df12a", "Url": "https://api.github.com/repos/brahul/GZinga", "Date": "2017-05-19T00:06:39Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.coltsoftware.liquidsledgehammer.collections.FinancialTreeNode.getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (name.equals(path)) return child;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V97/949/buggy-version/liquidsledgehammerMaven.liquid-sledgehammer-command-line.src.main.java.com.coltsoftware.liquidsledgehammer.commands.PathCommandBase.java", "BodyUseAPI": [], "Fixed commit": "920e1b8ccd9aa75f96298fa83a1cbcf3fa0c5e50", "Url": "https://api.github.com/repos/westonal/liquid-sledgehammer", "Date": "2015-09-06T11:05:32Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n.effectProperty().isBound()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7620/buggy-version/org.eclipse.jubula.rc.javafx.src.org.eclipse.jubula.rc.javafx.util.HighlightNode.java", "BodyUseAPI": [], "Fixed commit": "566195fe18bb029720da4fe28b762bce7d37a294", "Url": "https://api.github.com/repos/eclipse/jubula.core", "Date": "2015-04-27T09:06:46Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n.effectProperty().isBound()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7620/buggy-version/org.eclipse.jubula.rc.javafx.src.org.eclipse.jubula.rc.javafx.util.HighlightNode.java", "BodyUseAPI": [], "Fixed commit": "566195fe18bb029720da4fe28b762bce7d37a294", "Url": "https://api.github.com/repos/eclipse/jubula.core", "Date": "2015-04-27T09:06:46Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((genericName.isWildcard()) && (genericName.hasUpperBound())) base += \" extends \" + (shortenName(genericName.getUpperBound(), includeGenericBounds));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3261/buggy-version/AnnotationProcessingUtils.src.com.yahoo.annotations.JavaFileWriter.java", "BodyUseAPI": ["com.yahoo.annotations.JavaFileWriter.2.shortenName(genericName.getUpperBound(),java.lang.Boolean)", "com.yahoo.annotations.GenericName.getUpperBound()"], "Fixed commit": "313c271212b7f7d8c8bd8005bafa602cee45e0ea", "Url": "https://api.github.com/repos/sbosley/java-traits", "Date": "2014-02-08T23:01:24Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (r != 127) com.mygdx.game.LevelParser.bulbsTarget.put(r, new com.mygdx.game.Point(x, (((map.getHeight()) - y) - 1)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8466/buggy-version/core.src.com.mygdx.game.LevelParser.java", "BodyUseAPI": ["java.util.Hashtable<java.lang.Integer, com.mygdx.game.Point>.put(int,com.mygdx.game.Point)"], "Fixed commit": "50abe4d58466454d6db6ad5e1d3bfdd583896c34", "Url": "https://api.github.com/repos/Falcon-RawByte/PixelGame", "Date": "2014-05-29T12:06:17Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.opennms.netmgt.config.datacollection.SnmpCollection.getSystems()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (systems == null) { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1304/buggy-version/opennms-config.src.main.java.org.opennms.netmgt.config.DefaultDataCollectionConfigDao.java", "BodyUseAPI": [], "Fixed commit": "21f2730376adbe050a4c0639ad485ebd11a43726", "Url": "https://api.github.com/repos/JunosSpace/opennms", "Date": "2013-10-12T03:31:52Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (incl != null) { filterBuilder.include(incl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1804/buggy-version/metron-platform.metron-common.src.main.java.org.apache.metron.common.dsl.functions.resolver.ClasspathFunctionResolver.java", "BodyUseAPI": ["org.reflections.util.FilterBuilder.include(java.lang.String)"], "Fixed commit": "2a2b207e7620dc2336756f436866d368dba5a801", "Url": "https://api.github.com/repos/justinleet/metron", "Date": "2017-03-24T12:00:11Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (excl != null) { filterBuilder.exclude(excl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1804/buggy-version/metron-platform.metron-common.src.main.java.org.apache.metron.common.dsl.functions.resolver.ClasspathFunctionResolver.java", "BodyUseAPI": ["org.reflections.util.FilterBuilder.exclude(java.lang.String)"], "Fixed commit": "2a2b207e7620dc2336756f436866d368dba5a801", "Url": "https://api.github.com/repos/justinleet/metron", "Date": "2017-03-24T12:00:11Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (updateAccount) { for (teammates.common.datatransfer.EntityAttributes entity : accountsToUpdate) { teammates.common.datatransfer.AccountAttributes account = ((teammates.common.datatransfer.AccountAttributes) (entity)); try { updateAccount(account, true); } catch (teammates.common.exception.EntityDoesNotExistException e) { teammates.common.util.Assumption.fail(\"Entity found be already existing and not existing simultaneously\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1252/buggy-version/src.main.java.teammates.storage.api.AccountsDb.java", "BodyUseAPI": [], "Fixed commit": "166ebadbfb952a590f424ceb6ca31208db2f66cb", "Url": "https://api.github.com/repos/TEAMMATES/repo", "Date": "2014-07-24T11:52:31Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (indexerClass == null) { indexerClass = KunderaMetadata.INSTANCE.getApplicationMetadata().getPersistenceUnitMetadata(persistenceUnit).getProperties().getProperty(PersistenceProperties.KUNDERA_INDEXER_CLASS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8884/buggy-version/kundera-core.src.main.java.com.impetus.kundera.loader.GenericClientFactory.java", "BodyUseAPI": [], "Fixed commit": "fe43bc46d83dd9e1447901f5711dfffecc7d4d95", "Url": "https://api.github.com/repos/sonatype/Kundera", "Date": "2013-07-26T17:38:32Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentStatus) == null) { (nullcounter)++; if (de.caluga.morphium.replicaset.RSMonitor.logger.isDebugEnabled()) de.caluga.morphium.replicaset.RSMonitor.logger.debug((\"RS status is null! Counter \" + (nullcounter))); }else { nullcounter = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7078/buggy-version/src.de.caluga.morphium.replicaset.RSMonitor.java", "BodyUseAPI": [], "Fixed commit": "4f702e78ece027fe5248e445793a1dad159e21be", "Url": "https://api.github.com/repos/jenaiz/morphium", "Date": "2014-04-28T07:34:06Z"},
{"Line": "=>387", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (tile instanceof com.bluepowermod.api.tube.ITubeConnection) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/9173/buggy-version/src.main.java.com.bluepowermod.helper.IOHelper.java", "BodyUseAPI": [], "Fixed commit": "6c28b28f9ca5ed8d9e182312c75ac6d5b5929913", "Url": "https://api.github.com/repos/Qmunity/BluePower", "Date": "2015-06-03T22:54:41Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (bid != 0) { double[] getRelativeForward = redzone.mechanics.Orienter.getDirection(Orienter.NORTH_VECTOR, world.getblockmeta(dimension, ((int) (posx)), ((int) (posy)), ((int) (posz)))); int[] rounded = new int[]{ ((int) (java.lang.Math.round(getRelativeForward[0]))), ((int) (java.lang.Math.round(getRelativeForward[1]))), ((int) (java.lang.Math.round(getRelativeForward[2]))) }; if ((world.getblock(dimension, (((int) (posx)) + (rounded[0])), (((int) (posy)) + (rounded[1])), (((int) (posz)) + (rounded[2])))) == 0) { dangerzone.blocks.Blocks.doPlaceBlock(bid, fbid, null, world, dimension, focus_x, focus_y, focus_z, side); (ic.count)--; if ((ic.count) <= 0) ic = null; } }else if (iid != 0) { boolean delme = dangerzone.items.Items.rightClickOnBlock(iid, null, dimension, focus_x, focus_y, focus_z, side); world.playSound(dangerzone.blocks.Blocks.getHitSound(fbid), dimension, focus_x, focus_y, focus_z, 0.35F, 1.0F); if (delme) { (ic.count)--; if ((ic.count) <= 0) ic = null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6090/buggy-version/RedZone.redzone.entities.EntityDispenser.java", "BodyUseAPI": ["dangerzone.blocks.Blocks.doPlaceBlock(int,int,<nulltype>,dangerzone.World,redzone.entities.EntityDispenser,int,int,int,int)"], "Fixed commit": "68c29458eca4eb6828b13ec5009a9b066fdf5cc0", "Url": "https://api.github.com/repos/eaglgenes101/RedZone", "Date": "2015-11-08T17:53:33Z"},
{"Line": "=>578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isEditingTask())) { final java.util.Calendar cal1 = java.util.Calendar.getInstance(); final java.util.Calendar cal2 = java.util.Calendar.getInstance(); cal1.setTime(etv.getDateField().getDate()); cal2.setTime(java.util.Calendar.getInstance().getTime()); return !(((cal1.get(java.util.Calendar.YEAR)) == (cal2.get(java.util.Calendar.YEAR))) && ((cal1.get(java.util.Calendar.DAY_OF_YEAR)) == (cal2.get(java.util.Calendar.DAY_OF_YEAR)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8167/buggy-version/TaskManager.src.main.java.taskManager.controller.EditTaskController.java", "BodyUseAPI": [], "Fixed commit": "dd886b374281fc553dfc43d942bc278965deaef1", "Url": "https://api.github.com/repos/slash-slash-no-comment-WPI-cs3733/wpi-suite", "Date": "2014-12-10T03:36:42Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((line.substring(0, 3).equals(\"Day\")) || (line.substring(0, 13).equals(\"Game version:\"))) { final java.lang.String message = line; sx.blah.discord.util.RequestBuffer.request(() -> { channel.sendMessage(message); }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/914/buggy-version/src.main.java.com.haaseit.sdtdisco.telnet.SdtdMessageParser.java", "BodyUseAPI": [], "Fixed commit": "b28338f45b3ffc9f268384f31230daadcb32eed4", "Url": "https://api.github.com/repos/HaaseIT/7DtDisco", "Date": "2017-08-11T16:23:36Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (endoftimestamp > 21) { if ((line.length()) >= (endoftimestamp + 17)) { if ((line.substring((endoftimestamp + 5), (endoftimestamp + 11)).equals(\"Chat: \")) && (!(line.substring((endoftimestamp + 11), (endoftimestamp + 20)).equals(\"'Server':\")))) { final java.lang.String message = line.substring(39); sx.blah.discord.util.RequestBuffer.request(() -> { channel.sendMessage(message); }); }else if ((line.substring((endoftimestamp + 5), (endoftimestamp + 17)).equals(\"GMSG: Player\")) && (((line.substring(((line.length()) - 4)).equals(\"died\")) || (line.substring(((line.length()) - 15)).equals(\"joined the game\"))) || (line.substring(((line.length()) - 13)).equals(\"left the game\")))) { final java.lang.String message = line.substring((endoftimestamp + 11)); sx.blah.discord.util.RequestBuffer.request(() -> { channel.sendMessage(message); }); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/914/buggy-version/src.main.java.com.haaseit.sdtdisco.telnet.SdtdMessageParser.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int)", "java.lang.String.substring(int,int)", "java.lang.String.equals(java.lang.String)", "java.lang.String.substring(int,int)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "b28338f45b3ffc9f268384f31230daadcb32eed4", "Url": "https://api.github.com/repos/HaaseIT/7DtDisco", "Date": "2017-08-11T16:23:36Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.indexOf(char,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((line.substring((endoftimestamp + 5), (endoftimestamp + 17)).equals(\"GMSG: Player\")) && (((line.substring(((line.length()) - 4)).equals(\"died\")) || (line.substring(((line.length()) - 15)).equals(\"joined the game\"))) || (line.substring(((line.length()) - 13)).equals(\"left the game\")))) { final java.lang.String message = line.substring((endoftimestamp + 11)); sx.blah.discord.util.RequestBuffer.request(() -> { channel.sendMessage(message); }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/914/buggy-version/src.main.java.com.haaseit.sdtdisco.telnet.SdtdMessageParser.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "b28338f45b3ffc9f268384f31230daadcb32eed4", "Url": "https://api.github.com/repos/HaaseIT/7DtDisco", "Date": "2017-08-11T16:23:36Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (prev == (javax.json.stream.JsonParser.Event.END_ARRAY)) { out.write(\", \".getBytes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6513/buggy-version/src.main.java.io.qntfy.nifi.util.StreamingJSONAppender.java", "BodyUseAPI": [], "Fixed commit": "e6267aebd09f5523ff291a05848eee894afcd68e", "Url": "https://api.github.com/repos/qntfy/nifi-redis", "Date": "2015-11-25T14:21:52Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((cal.get(java.util.Calendar.DAY_OF_WEEK)) == (java.util.Calendar.SATURDAY)) { menu.add(1, 1, 0, \"Book cafeteria hall\"); menu.add(1, 3, 1, \"No hall\"); }else { menu.add(1, 1, 0, \"Book first hall\"); menu.add(1, 2, 0, \"Book formal hall\"); menu.add(1, 3, 0, \"No hall\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4965/buggy-version/src.com.joebateson.CaiusHall.DisplayHallInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "e5655b7b16b6e5fb5735437995d8ee0caf39fe88", "Url": "https://api.github.com/repos/jdb8/caius-hall-app", "Date": "2012-10-18T23:00:30Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.thread.getState()) == (java.lang.Thread.State.NEW)) { this.thread.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3119/buggy-version/app.src.main.java.edu.umt.csci427.canary.OpenICEService.java", "BodyUseAPI": ["java.lang.Thread.start()"], "Fixed commit": "a46da9c50994221b90c3e8d69b1ff5441dbee644", "Url": "https://api.github.com/repos/csci427/canary", "Date": "2015-05-04T15:24:25Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lex.curToken()) != (Token.END)) { throw new java.lang.AssertionError(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7004/buggy-version/src.main.java.lab2.Parser.java", "BodyUseAPI": [], "Fixed commit": "5df178ed4687de0dcd7672a4fda25d3c3645e62a", "Url": "https://api.github.com/repos/romashok/Translation-methods", "Date": "2017-05-11T08:04:30Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((comboKlasa.getSelectedIndex()) == (-1)) { javax.swing.JOptionPane.showMessageDialog(null, \"Klasa artikla nije izabrana!\"); return; }else if ((((ba.unsa.etf.si.app.Inventura.Model.ValidacijaArtikla.validirajNaziv(txtNaziv.getText())) && (ba.unsa.etf.si.app.Inventura.Model.ValidacijaArtikla.validirajBarkod(txtBarkod.getText()))) && (ba.unsa.etf.si.app.Inventura.Model.ValidacijaArtikla.validirajCijenu(txtCijena.getText()))) && (ba.unsa.etf.si.app.Inventura.Model.ValidacijaArtikla.validirajKolicinu(txtKolicina.getText(), _mjera.get(comboMjera.getSelectedIndex())))) { ba.unsa.etf.si.app.Inventura.Model.Artikal a = dajArtikal(); ba.unsa.etf.si.app.Inventura.Kontroleri.ArtikliKontroler.dodaj(a); javax.swing.JOptionPane.showMessageDialog(null, \"Artikal uspjesno dodan!\"); }else { javax.swing.JOptionPane.showMessageDialog(null, \"Nisu pravilno uneseni parametri\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1440/buggy-version/Projekat.src.main.java.ba.unsa.etf.si.app.Inventura.GUI.DodavanjeArtikla.java", "BodyUseAPI": [], "Fixed commit": "a30a04634ca1dc157b801ec19c9df56b4c35f1b3", "Url": "https://api.github.com/repos/SoftverInzenjeringETFSA/Si2015Tim4", "Date": "2016-05-17T01:11:32Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.get(Keys.INVISIBLE).get()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/689/buggy-version/src.main.java.me.runescapejon.CrazyFeet.Listeners.CrazyFeetListener.java", "BodyUseAPI": [], "Fixed commit": "5a29b21ac74e25088b93a2ad5f3bb4db379cd042", "Url": "https://api.github.com/repos/runescapejon/CrazyFeet-Sponge", "Date": "2017-08-08T07:54:41Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.get(Keys.INVISIBLE).get()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/689/buggy-version/src.main.java.me.runescapejon.CrazyFeet.Listeners.CrazyHeadListener.java", "BodyUseAPI": [], "Fixed commit": "5a29b21ac74e25088b93a2ad5f3bb4db379cd042", "Url": "https://api.github.com/repos/runescapejon/CrazyFeet-Sponge", "Date": "2017-08-08T07:54:41Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((urlParts.length) < 2) { return java.util.Optional.empty(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2957/buggy-version/bromium-common.src.main.java.com.hribol.bromium.common.filtering.RequestToPageLoadingEventConverter.java", "BodyUseAPI": [], "Fixed commit": "1a901709b1d8567cb18ccf31f0c6bf7a95ebd474", "Url": "https://api.github.com/repos/hristo-vrigazov/bromium", "Date": "2017-11-24T18:05:40Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (event.getID().equals(Event.NOTIFICATION)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4928/buggy-version/src.main.java.intellimate.izou.events.EventDistributor.java", "BodyUseAPI": [], "Fixed commit": "7d916d9517fa5493015f35975e90806901c90229", "Url": "https://api.github.com/repos/intellimate/Izou", "Date": "2015-01-25T16:55:39Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (aInteger <= 2) { return newFile; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2093/buggy-version/src.main.java.com.jango.ci.util.FileCopy.java", "BodyUseAPI": [], "Fixed commit": "5d9ee4af96ee8101931032565c2160f20373bef6", "Url": "https://api.github.com/repos/ljchu/multi-channel-packer-plugin", "Date": "2014-03-13T06:05:15Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((ccc.cccCodigoEntidad.isEmpty()) && (ccc.cccCodigoOficina.isEmpty())) && (ccc.cccDigitosControl.isEmpty())) && (ccc.cccNumeroCuenta.isEmpty())) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5459/buggy-version/fap.app.validation.CCCCheck.java", "BodyUseAPI": [], "Fixed commit": "4ceea9c80c0354490123f6ccfc520a1ed616efb8", "Url": "https://api.github.com/repos/FAP-Team/Fap-Module", "Date": "2012-09-12T10:49:01Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (material == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5812/buggy-version/webapp.src.main.java.fi.foyt.fni.view.forge.AbstractForgePublicViewBackingBean.java", "BodyUseAPI": [], "Fixed commit": "7401d2af71f1aa30046876483ef52de466e4917d", "Url": "https://api.github.com/repos/foyt/fni", "Date": "2016-04-25T15:44:42Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mShareActionProvider) != null) { mTrackShareText = getString(R.string.track_share_text, mCurrentTrack.getTrackName(), mCurrentTrack.getArtistName(), mCurrentTrack.getPreviewUrl()); mShareActionProvider.setShareIntent(createShareTrackIntent(mTrackShareText)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5310/buggy-version/app.src.main.java.si.vei.pedram.spotifystreamer.fragments.MusicPlayerFragment.java", "BodyUseAPI": [], "Fixed commit": "96042715a6d3f0c544deb985a79e3679740b497b", "Url": "https://api.github.com/repos/PedramVeisi/SpotifyStreamer", "Date": "2015-08-10T16:14:25Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((monkey == null) || (filer == null)) { return filerTransaction.commit(null, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8146/buggy-version/code.com.jivesoftware.os.filer.chunk-store.src.main.java.com.jivesoftware.os.filer.chunk.store.transaction.TxNamedMapOfFiler.java", "BodyUseAPI": [], "Fixed commit": "5fd011a2cc382adaf8e841a3be145be11b0c51c2", "Url": "https://api.github.com/repos/jivesoftware/filer", "Date": "2015-01-05T22:43:09Z"},
{"Line": "=>409", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.ist.fenixframework.dml.Slot.getSlotType()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (vt.isEnum()) { print(out, \"JSONConverter.getEnumFromJSON(\"); print(out, vt.getFullname()); print(out, \".class, json);\"); }else if (vt.isBuiltin()) { print(out, ((\"JSONConverter.get\" + (capitalize(vt.getDomainName()))) + \"FromJSON(json);\")); }else { print(out, ValueTypeSerializationGenerator.SERIALIZER_CLASS_FULL_NAME); print(out, \".\"); print(out, ValueTypeSerializationGenerator.DESERIALIZATION_METHOD_PREFIX); print(out, vt.getDomainName()); print(out, \"(\"); print(out, ((\"JSONConverter.get\" + (capitalize(vt.getExternalizationElements().get(0).getType().getDomainName()))) + \"FromJSON(json));\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6063/buggy-version/backend.jvstm-common.code-generator.src.main.java.pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.java", "BodyUseAPI": ["pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.print(java.io.PrintWriter,vt.getFullname())", "vt.getExternalizationElements().get(int)", "vt.getExternalizationElements().get(0).getType()", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.capitalize(vt.getDomainName())", "vt.getExternalizationElements().get(0).getType().getDomainName()", "pt.ist.fenixframework.dml.ValueType.getExternalizationElements()", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.capitalize(vt.getExternalizationElements().get(0).getType().getDomainName())", "pt.ist.fenixframework.dml.ValueType.isBuiltin()", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.print(java.io.PrintWriter,((\"JSONConverter.get\" + (capitalize(vt.getDomainName()))) + \"FromJSON(json);\"))", "pt.ist.fenixframework.dml.ValueType.getDomainName()", "pt.ist.fenixframework.dml.ValueType.getDomainName()", "pt.ist.fenixframework.dml.ValueType.getFullname()", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.print(java.io.PrintWriter,((\"JSONConverter.get\" + (capitalize(vt.getExternalizationElements().get(0).getType().getDomainName()))) + \"FromJSON(json));\"))", "pt.ist.fenixframework.backend.jvstm.JVSTMCodeGenerator.print(java.io.PrintWriter,vt.getDomainName())"], "Fixed commit": "d4e045f5022d1f00ef48ee73f694ab5a58bb743f", "Url": "https://api.github.com/repos/jcarvalho/fenix-framework", "Date": "2013-06-17T14:14:19Z"},
{"Line": "=>282", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.scape_project.xa.tw.toolspec.Deployref.isDefault()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isDefaultDeployment) { wsdlSourceCode.create(wsdlSourcePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2041/buggy-version/xa-toolwrapper.src.main.java.eu.scape_project.xa.tw.gen.DeploymentCreator.java", "BodyUseAPI": [], "Fixed commit": "165b6d6016ef559fc51801b3df9eb97dc23685c2", "Url": "https://api.github.com/repos/openpreserve/scape", "Date": "2011-08-26T11:53:29Z"},
{"Line": "=>245", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.scape_project.xa.tw.toolspec.Deployref.isDefault()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isDefaultDeployment) { deplDepServXmlCode.create(sxmlFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2041/buggy-version/xa-toolwrapper.src.main.java.eu.scape_project.xa.tw.gen.DeploymentCreator.java", "BodyUseAPI": [], "Fixed commit": "165b6d6016ef559fc51801b3df9eb97dc23685c2", "Url": "https://api.github.com/repos/openpreserve/scape", "Date": "2011-08-26T11:53:29Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.scape_project.xa.tw.toolspec.Deployref.isDefault()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isDefaultDeployment) { htmlSourceIndexCode.create(htmlIndexSourcePath); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2041/buggy-version/xa-toolwrapper.src.main.java.eu.scape_project.xa.tw.gen.DeploymentCreator.java", "BodyUseAPI": [], "Fixed commit": "165b6d6016ef559fc51801b3df9eb97dc23685c2", "Url": "https://api.github.com/repos/openpreserve/scape", "Date": "2011-08-26T11:53:29Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((io.egreen.apistudio.bootstrap.ApiStudio.modules) != null) && ((ApiStudio.modules.length) > 0)) modules.addAll(java.util.Arrays.asList(ApiStudio.modules));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/574/buggy-version/bootstrap.src.main.scala.io.egreen.apistudio.bootstrap.rest.RestComponentInitializer.java", "BodyUseAPI": [], "Fixed commit": "0600c7fdce3f08f94e27b32d0525483ec607ed5a", "Url": "https://api.github.com/repos/ApiStudio/apistudio", "Date": "2016-11-24T06:24:23Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.phenoscape.model.DataSet.getStateForTaxon(org.phenoscape.model.Taxon,java.lang.Character)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (stateValue != null) { statesForTaxon.add(stateValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7845/buggy-version/src.org.phenoscape.view.CharacterTableComponent.java", "BodyUseAPI": ["java.util.Set<org.phenoscape.model.State>.add(org.phenoscape.model.State)"], "Fixed commit": "b9ce6f479401c092a3f11f283599c4d1b1449d5e", "Url": "https://api.github.com/repos/phenoscape/Phenex", "Date": "2013-09-13T20:51:37Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ExplosionManager.exploding.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/957/buggy-version/src.ExplosionManager.java", "BodyUseAPI": [], "Fixed commit": "8fc43d5485e1b1fce4d06811051559ca12ca2ad2", "Url": "https://api.github.com/repos/mmutzell/Bammi", "Date": "2013-05-14T21:13:29Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mods.learncraft.common.Common.getTeam(net.minecraft.entity.player.EntityPlayer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (team != null) player1.addChatMessage(((\"Welcome back! You are on the \" + (team.teamcolor)) + \" team.\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5629/buggy-version/common.ConnectionHandler.java", "BodyUseAPI": ["net.minecraft.entity.player.EntityPlayer.addChatMessage(((\"Welcome back! You are on the \" + (team.teamcolor)) + \" team.\"))"], "Fixed commit": "8ec9b8586ac4d9543df0faef2648af40493f33c3", "Url": "https://api.github.com/repos/carneymo/learncraft", "Date": "2013-08-02T18:41:18Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((values) != null) { values.clear(); add(data, offset, length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7520/buggy-version/src.main.java.syndeticlogic.catena.type.ScatterGatherValue.java", "BodyUseAPI": [], "Fixed commit": "6c7d64874b9678e6657535f5dc5c36ff83899b98", "Url": "https://api.github.com/repos/jpercent/catena", "Date": "2013-02-10T01:06:43Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.store.size()) == 0) { this.store.add(ev); }else { int numberOfItems = this.store.size(); for (int i = 0; i < numberOfItems; i++) { boolean AtRightIndex = false; if (this.ascending) { AtRightIndex = (this.store.get(i).getPriority()) > (ev.getPriority()); }else { AtRightIndex = (this.store.get(i).getPriority()) < (ev.getPriority()); } if (AtRightIndex) { this.store.add(i, ev); break; }else if ((i + 1) == (this.store.size())) { this.store.add(ev); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3915/buggy-version/SimBiz.src.simulator.SortedSequence.java", "BodyUseAPI": ["java.util.ArrayList<simulator.Event>.size()", "this.store.get(i).getPriority()", "java.util.ArrayList<simulator.Event>.size()", "java.util.ArrayList<simulator.Event>.add(simulator.Event)", "java.util.ArrayList<simulator.Event>.add(int,simulator.Event)", "this.store.get(i).getPriority()", "java.util.ArrayList<simulator.Event>.get(int)", "java.util.ArrayList<simulator.Event>.get(int)", "java.util.ArrayList<simulator.Event>.add(simulator.Event)"], "Fixed commit": "010ca1a1e871ead03dee77e51e82db67d5fb5307", "Url": "https://api.github.com/repos/DavidRutqvist/d0010elab5grupp12", "Date": "2014-03-10T17:57:53Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsonNode.get(MTT_CONSTANTS.SCHOOL_ID_REQUEST_PARAM).asText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((schoolName.length()) > 48) { schoolName = schoolName.substring(0, 45); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8834/buggy-version/src.main.java.servlet.rest.StudentsResource.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "6d89e11c1a4379a14feffbdad9d5f733e039ccbe", "Url": "https://api.github.com/repos/gopi6sigma/mtt", "Date": "2016-12-17T11:53:48Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jsonNode.get(MTT_CONSTANTS.CENTER_ID_REQUEST_PARAM).asText()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((studentCenter.length()) > 48) { studentCenter = studentCenter.substring(0, 45); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8834/buggy-version/src.main.java.servlet.rest.StudentsResource.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "6d89e11c1a4379a14feffbdad9d5f733e039ccbe", "Url": "https://api.github.com/repos/gopi6sigma/mtt", "Date": "2016-12-17T11:53:48Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Hashtable<java.lang.String, java.util.ArrayList<plugins.Plugin>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (plugins == null) { plugins = new java.util.ArrayList<plugins.Plugin>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4647/buggy-version/src.rmi.server.ServerImpl.java", "BodyUseAPI": [], "Fixed commit": "4ac2e29b51c69675d6eeceda28da4d74df443741", "Url": "https://api.github.com/repos/multidraw/MultiDraw", "Date": "2011-05-05T13:11:08Z"},
{"Line": "=>3468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elmakers.mine.bukkit.wand.Wand.getHotbar()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((hotbar != null) && (slot != null)) { player.getInventory().setItem(event.getSlot(), droppedItem); player.updateInventory(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/861/buggy-version/src.main.java.com.elmakers.mine.bukkit.magic.MagicController.java", "BodyUseAPI": [], "Fixed commit": "090f03eebedfc3ec14e5cf0e0a0bfa5d7684e3eb", "Url": "https://api.github.com/repos/elBukkit/MagicPlugin", "Date": "2015-05-04T15:46:05Z"},
{"Line": "=>877", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.limegroup.gnutella.gui.GUIMediator.Tabs.TRANSFERS.isEnabled()) { tabEnum = com.limegroup.gnutella.gui.GUIMediator.Tabs.TRANSFERS; }else if (com.limegroup.gnutella.gui.GUIMediator.Tabs.SEARCH_TRANSFERS.isEnabled()) { tabEnum = com.limegroup.gnutella.gui.GUIMediator.Tabs.SEARCH_TRANSFERS; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2677/buggy-version/desktop.src.com.limegroup.gnutella.gui.GUIMediator.java", "BodyUseAPI": [], "Fixed commit": "c83f04e3187e5ad584f0845f8c55bb5e368c6795", "Url": "https://api.github.com/repos/frostwire/frostwire", "Date": "2016-08-30T16:29:48Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (landed) { texture = com.github.dreamsnatcher.utils.Assets.spaceShipEmpty; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3813/buggy-version/core.src.com.github.dreamsnatcher.entities.SpaceShip.java", "BodyUseAPI": [], "Fixed commit": "bac5722f7be075f47fab31a8502f16321acd448b", "Url": "https://api.github.com/repos/dreamsnatcher/dreamsnatcher", "Date": "2015-04-18T17:57:40Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!optimize) { solvingPolicy = solver.ResolutionPolicy.SATISFACTION; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1763/buggy-version/choco.src.main.java.btrplace.solver.choco.DefaultReconfigurationProblem.java", "BodyUseAPI": [], "Fixed commit": "0841cef755f18beeb9950052ef295dcf25ccc42f", "Url": "https://api.github.com/repos/fhermeni/btrplace-solver", "Date": "2014-02-18T22:08:44Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (activePage == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7510/buggy-version/main.plugins.org.talend.commons.ui.src.main.java.org.talend.commons.ui.utils.CheatSheetUtils.java", "BodyUseAPI": [], "Fixed commit": "c0f345c3e5e1d5537aec5262b8b05dbd0a70a6cc", "Url": "https://api.github.com/repos/Talend/tcommon-studio-se", "Date": "2016-01-26T06:59:55Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.psi.PsiFile.findElementAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (element == null) { element = file.findElementAt((offset - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/905/buggy-version/idea.src.org.jetbrains.kotlin.idea.liveTemplates.JetTemplateContextType.java", "BodyUseAPI": [], "Fixed commit": "26dd9a8c6a49e83db7284b05fa26549efd999c49", "Url": "https://api.github.com/repos/crazyproger/kotlin", "Date": "2015-02-04T18:57:11Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (lang.equals(\"\")) lang = context.getString(R.string.language);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8667/buggy-version/app.src.main.java.teach.vietnam.asia.db.dao.BaseDao.java", "BodyUseAPI": [], "Fixed commit": "a1fc1ac4239c1d22d9491f1a732367e534a49e68", "Url": "https://api.github.com/repos/mhome527/Lvn_v2", "Date": "2017-06-15T16:34:01Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((position.equals(\"TE\")) && (player2.position.equals(\"QB\"))) || ((position.equals(\"QB\")) && (player2.position.equals(\"TE\")))) { return returnString + \"BAD\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7800/buggy-version/FFR.src.com.example.fantasyfootballrankings.ClassFiles.LittleStorage.BasicInfo.java", "BodyUseAPI": [], "Fixed commit": "823268b55a31f17c42d97861690af78f121f4515", "Url": "https://api.github.com/repos/jbailey2010/FFR", "Date": "2013-08-02T22:32:39Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (match.position.contains(\"BAD\")) { match.position = match.position.replace(\"BAD\", \"\"); return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7800/buggy-version/FFR.src.com.example.fantasyfootballrankings.ClassFiles.LittleStorage.BasicInfo.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "823268b55a31f17c42d97861690af78f121f4515", "Url": "https://api.github.com/repos/jbailey2010/FFR", "Date": "2013-08-02T22:32:39Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Integer.parseInt(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (minute == 0) { extra = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8338/buggy-version/app.src.main.java.wigleyd.witroomfinder.ResultsActivity.java", "BodyUseAPI": [], "Fixed commit": "9c6425ebbebc38d224a7a96f085ea0ac3c32d3b6", "Url": "https://api.github.com/repos/DavidWigley/WITRoomFinder", "Date": "2015-12-26T01:27:56Z"},
{"Line": "=>9", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7390/buggy-version/src.easy.MergeSortedArraySolution.java", "BodyUseAPI": [], "Fixed commit": "7069cdc4059941d7fd96299c8db6ec1b369604ff", "Url": "https://api.github.com/repos/guangleiw/leetcode", "Date": "2016-09-07T06:06:22Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(bidPrice.equals(\"null\"))) { batchOperations.add(com.sam_chordas.android.stockhawk.rest.Utils.buildBatchOperation(jsonObject)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4697/buggy-version/app.src.main.java.com.sam_chordas.android.stockhawk.rest.Utils.java", "BodyUseAPI": [], "Fixed commit": "f770f6113ec4e7fffc2dc1f9fa55aec040c24160", "Url": "https://api.github.com/repos/ClarisseSan/StockHawk", "Date": "2016-09-23T14:41:23Z"},
{"Line": "=>1696", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.metadata.schema.OClass.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (prop != null) { fieldType = prop.getType(); if (fieldType != (com.orientechnologies.orient.core.metadata.schema.OType.ANY)) setFieldType(iFieldName, fieldType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5757/buggy-version/core.src.main.java.com.orientechnologies.orient.core.record.impl.ODocument.java", "BodyUseAPI": ["com.orientechnologies.orient.core.metadata.schema.OProperty.getType()"], "Fixed commit": "7860bc3b9e7febcc3d83a5fe010efa2420a5aba6", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2014-09-25T15:30:25Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openstack.atlas.adapter.stm.LoadBalancer.getUserPages()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (userPages != null) { if ((userPages.getErrorpage()) != null) { setErrorFile(config, queLb, queLb.getUserPages().getErrorpage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3259/buggy-version/adapter.zxtm-service.src.main.java.org.openstack.atlas.adapter.stm.StmAdapterImpl.java", "BodyUseAPI": ["org.openstack.atlas.adapter.stm.UserPages.getErrorpage()"], "Fixed commit": "5650cd396b77b0158933e23ce8ce4b6306802a4c", "Url": "https://api.github.com/repos/lbrackspace/atlas-lb", "Date": "2013-07-24T17:18:10Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mArticles.isEmpty()) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5925/buggy-version/app.src.main.java.org.disciplestoday.disciplestoday.ArticleListFragment.java", "BodyUseAPI": [], "Fixed commit": "6434a8af3b95a8e57be5e87b08efab775875fd0e", "Url": "https://api.github.com/repos/neiljaywarner/CapstoneProject", "Date": "2016-06-16T03:47:06Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((bbox) == null) bbox = logicBox.util.Bbox2.createFromPoints(points);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3344/buggy-version/LogicBox.src.logicBox.gui.editor.GraphicTrace.java", "BodyUseAPI": [], "Fixed commit": "446392afac660159891135b02e899a63abf6181d", "Url": "https://api.github.com/repos/LeeCIT/LogicBox", "Date": "2014-04-28T19:40:29Z"},
{"Line": "=>628", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (v != null) { if ((lastSelectedVertex) == null) { lastSelectedVertex = v; startEdging(); }else { kj.scotlyard.graphbuilder.BuilderTool.EdgeType edgeType = ((kj.scotlyard.graphbuilder.BuilderTool.EdgeType) (getCmbEdgeType().getSelectedItem())); if (((getEdge(lastSelectedVertex, v, edgeType, true)) == null) || ((javax.swing.JOptionPane.showConfirmDialog(this, (\"An edge of same type already exists between\\nthese vertices (direction ignored).\\n\" + \"Anyway proceed adding edge?\"), null, javax.swing.JOptionPane.YES_NO_CANCEL_OPTION, javax.swing.JOptionPane.WARNING_MESSAGE)) == (javax.swing.JOptionPane.YES_OPTION))) { edges.add(0, new kj.scotlyard.graphbuilder.BuilderTool.Edge(edgeType, lastSelectedVertex, v)); if (getCbPolyline().isSelected()) { lastSelectedVertex = v; }else { endEdging(); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4040/buggy-version/GraphBuilder.src.kj.scotlyard.graphbuilder.BuilderTool.java", "BodyUseAPI": ["java.util.Vector<kj.scotlyard.graphbuilder.BuilderTool.Edge>.add(int,kj.scotlyard.graphbuilder.BuilderTool.Edge)", "kj.scotlyard.graphbuilder.BuilderTool.9.getEdge(kj.scotlyard.graphbuilder.BuilderTool.Vertex,kj.scotlyard.graphbuilder.BuilderTool.Vertex,kj.scotlyard.graphbuilder.BuilderTool.EdgeType,boolean)"], "Fixed commit": "034271e3d48f93449311e7f58a36355581fefd07", "Url": "https://api.github.com/repos/jakob190590/ScotlYard", "Date": "2012-04-20T09:35:42Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").startsWith(\"Windows\")) fileSeprator = \"\\\\\"; else fileSeprator = \"/\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8189/buggy-version/src.main.java.net.sf.rubycollect4j.RubyFile.java", "BodyUseAPI": [], "Fixed commit": "4391c29aa629a1ea8f78d9d75852ddd92ae90eb6", "Url": "https://api.github.com/repos/wnameless/rubycollect4j", "Date": "2013-10-18T09:51:36Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.support.v4.content.ContextCompat.checkSelfPermission(this, android.Manifest.permission.READ_EXTERNAL_STORAGE)) != (android.content.pm.PackageManager.PERMISSION_GRANTED)) { android.support.v4.app.ActivityCompat.requestPermissions(this, new java.lang.String[]{ android.Manifest.permission.READ_EXTERNAL_STORAGE }, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5678/buggy-version/app.src.main.java.edu.usc.parknpay.authentication.RegistrationActivity.java", "BodyUseAPI": [], "Fixed commit": "48564e6dd7473032903580b07fb423b26ce264bd", "Url": "https://api.github.com/repos/yunalee22/ParkNPay", "Date": "2016-11-04T08:14:57Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.gh4a.widget.VerticalTextView.getLayout()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (layout == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2552/buggy-version/src.com.gh4a.widget.VerticalTextView.java", "BodyUseAPI": [], "Fixed commit": "e74982b0381ee23987bd22378ea1786058547436", "Url": "https://api.github.com/repos/slapperwan/gh4a", "Date": "2014-09-13T10:23:18Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (text.startsWith(\"/leave\")) { action = new hello.Action(number, \"/leave\"); return action.leave(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/786/buggy-version/src.main.java.Text.java", "BodyUseAPI": [], "Fixed commit": "60ff76085c2c08a66772edf52962944a25e9419f", "Url": "https://api.github.com/repos/panzarino/grouper", "Date": "2016-05-26T17:51:12Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((httpMethod) == null) || ((url) == null)) || ((httpVersion) == null)) { throw new java.lang.SecurityException(\"The start line of the HTTP request is not in a legal format!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3701/buggy-version/src.HttpRequest.java", "BodyUseAPI": [], "Fixed commit": "8f90ee82e1a17359c72b0e35535fb5f4b2129309", "Url": "https://api.github.com/repos/delbarital/HTTP-Web-Server", "Date": "2014-12-24T10:05:21Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["kilim.KilimEvent.getTask()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (task.isDone()) kEvent.free();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6027/buggy-version/src.kilim.KilimEventHandler.java", "BodyUseAPI": [], "Fixed commit": "fa7ed4665c579458a691f90d871fa184313ecf4b", "Url": "https://api.github.com/repos/nqzero/kilim", "Date": "2013-12-22T06:38:31Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (nitezh.ministock.UserData.writeExternalStorage(context, backupStocks.toString(), (backupName + \".txt\"), \"widgetbackups\")) nitezh.ministock.DialogTools.showSimpleDialog(context, \"Widget backup successful.\", (\"Your widget has been backed up to ministocks/widgetbackups/\" + backupName));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8377/buggy-version/src.nitezh.ministock.domain.PortfolioStockRepository.java", "BodyUseAPI": ["nitezh.ministock.DialogTools.showSimpleDialog(android.content.Context,java.lang.String,java.lang.String)"], "Fixed commit": "881eae6d7b54e751c05857223b1b70c9ef6ffaa3", "Url": "https://api.github.com/repos/Skrittles/SPMinistocks", "Date": "2016-07-03T15:06:27Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (workItem == null) { throw new se.grouprich.projectmanagement.exception.WorkItemException(\"WorkItem must not be null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7423/buggy-version/ProjectManagement.src.main.java.se.grouprich.projectmanagement.service.ProjectManagementService.java", "BodyUseAPI": [], "Fixed commit": "698cf2b315e88b76ec9543ee589edc0ca20199e0", "Url": "https://api.github.com/repos/lindabjalla/ProjectManagement", "Date": "2016-02-04T21:21:40Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((activeJob) != null) && (activeJob.equals(p))) { activeJob = null; return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5576/buggy-version/src.com.jimweller.cpuscheduler.RoundRobinSchedulingAlgorithm.java", "BodyUseAPI": [], "Fixed commit": "b10044564f68dead2e4a794d08fb3017c5191777", "Url": "https://api.github.com/repos/EkardNT/CPUSchedulingSimulator", "Date": "2014-02-18T20:27:10Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doesFileExist == true) { directory.remove(fileToDelete); }else { outputter.printLine(\"The file specified does not exist in the directory.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4023/buggy-version/src.main.java.command.library.CmdDelFile.java", "BodyUseAPI": [], "Fixed commit": "8fd1dd7263871e5d96b79eb61cd8e89dc9b0a008", "Url": "https://api.github.com/repos/MHGRed/DosBox", "Date": "2016-11-16T16:56:52Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.komoot.photon.elasticsearch.Searcher.convert(response.getHits().getHits(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((results.size()) > limit) { results = results.subList(0, limit); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5694/buggy-version/src.main.java.de.komoot.photon.elasticsearch.Searcher.java", "BodyUseAPI": ["java.util.List<org.json.JSONObject>.subList(int,java.lang.Integer)"], "Fixed commit": "1715546a6f6a272e60e22dd24687db4f5e59cea0", "Url": "https://api.github.com/repos/Falkplan/photon", "Date": "2015-12-07T09:15:27Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hero.getGold()) < 0) { hero.setGold(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7245/buggy-version/src.jftha.spaces.Bank.java", "BodyUseAPI": ["jftha.spaces.Hero.setGold(int)"], "Fixed commit": "d89ad2f5032df5d4e0bf724d701489ed573caecc", "Url": "https://api.github.com/repos/BlackNinja0001/Board-Game-JFTHA", "Date": "2014-05-05T07:18:16Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ofbiz.entity.util.EntityUtil.getFirst(delegator.findByAnd(\"ProductContentAndInfo\", org.ofbiz.base.util.UtilMisc.toMap(\"productId\", productId, \"productContentTypeId\", \"OTHER_INSTRUCTIONS\")))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.ofbiz.base.util.UtilValidate.isNotEmpty(otherInstructionContent)) { otherInstructionElectronicText = org.ofbiz.entity.util.EntityUtil.getFirst(delegator.findByAnd(\"ElectronicText\", org.ofbiz.base.util.UtilMisc.toMap(\"dataResourceId\", otherInstructionContent.get(\"dataResourceId\")))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2606/buggy-version/hot-deploy.manufact.src.com.zuczug.product.ManufactService.java", "BodyUseAPI": ["org.ofbiz.base.util.UtilMisc.toMap(java.lang.String,otherInstructionContent.get(\"dataResourceId\"))", "org.ofbiz.entity.GenericValue.get(java.lang.String)", "org.ofbiz.entity.util.EntityUtil.getFirst(delegator.findByAnd(\"ElectronicText\", org.ofbiz.base.util.UtilMisc.toMap(\"dataResourceId\", otherInstructionContent.get(\"dataResourceId\"))))", "org.ofbiz.entity.Delegator.findByAnd(java.lang.String,org.ofbiz.base.util.UtilMisc.toMap(\"dataResourceId\", otherInstructionContent.get(\"dataResourceId\")))"], "Fixed commit": "c7e3b91a3923f765c19bdbf54c57b56458f3bd5d", "Url": "https://api.github.com/repos/zuczug/bluemountain", "Date": "2016-07-27T02:30:57Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getTargetFragment()) != null) { getTargetFragment().onActivityResult(getTargetRequestCode(), Activity.RESULT_OK, i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5623/buggy-version/Breadit.reddit.src.main.java.me.williamhester.ui.fragments.ReplyFragment.java", "BodyUseAPI": [], "Fixed commit": "47aa78b1e97637a57e43a89e8b3c9ed1025804ec", "Url": "https://api.github.com/repos/WilliamHester/breadit", "Date": "2015-01-08T05:48:22Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((message.getData().getCreatedUtc()) > latestTime) { latestTime = message.getData().getCreatedUtc(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5623/buggy-version/Breadit.reddit.src.main.java.me.williamhester.notifications.MessageNotificationBroadcastReceiver.java", "BodyUseAPI": ["message.getData().getCreatedUtc()", "me.williamhester.models.GenericResponseRedditWrapper<me.williamhester.models.Message>.getData()"], "Fixed commit": "47aa78b1e97637a57e43a89e8b3c9ed1025804ec", "Url": "https://api.github.com/repos/WilliamHester/breadit", "Date": "2015-01-08T05:48:22Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rsCourseInfo.getString(\"Waiting Status\").equals(\"waiting\")) { java.lang.System.out.println(java.lang.String.format((\"Course %s %s is full, you are \" + \"put on the waiting list\"), course, rsCourseInfo.getString(\"name\"))); }else { java.lang.System.out.println(java.lang.String.format(\"You are now successfully registered to course %s %s!\", course, rsCourseInfo.getString(\"name\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6024/buggy-version/lab5.StudentPortal.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,java.lang.String)", "java.lang.String.format(java.lang.String,java.lang.String,java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.io.PrintStream.println(java.lang.String)", "java.sql.ResultSet.getString(java.lang.String)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "8e2f4051e317b56c5692a394eb136734ee7e4913", "Url": "https://api.github.com/repos/johanamagnusson/dblabs", "Date": "2016-12-13T17:19:58Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSupportActionBar()) != null) { getSupportActionBar().setDisplayHomeAsUpEnabled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3196/buggy-version/app.src.main.java.fr.free.nrw.commons.nearby.NearbyActivity.java", "BodyUseAPI": [], "Fixed commit": "ee5df7d35ca75118a855318e8fbf12d099cf916d", "Url": "https://api.github.com/repos/misaochan/apps-android-commons", "Date": "2016-09-01T06:48:26Z"},
{"Line": "=>265", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Queue<ca.claytonrogers.Client.IntVector>.peek()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (clickLocation == null) { return GUIObject.Type.None; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4255/buggy-version/src.ca.claytonrogers.Client.Application.java", "BodyUseAPI": [], "Fixed commit": "d34cbc0672539f86b6c3838386f7e60b65a407b2", "Url": "https://api.github.com/repos/clayton-rogers/12Golf", "Date": "2015-07-12T20:32:19Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (copyFuncInput.isEmpty()) { duplicate = true; break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3294/buggy-version/de.upb.lina.transformations.src.de.upb.lina.transformations.logic.GendataPrecomputer.java", "BodyUseAPI": [], "Fixed commit": "00ee56c653716e5e9e84ee004861fe2ad89149df", "Url": "https://api.github.com/repos/oleg82upb/lina4wm-tools", "Date": "2016-09-13T09:32:26Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null == (contents.getCommentsNum())) { contents.setCommentsNum(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6435/buggy-version/src.main.java.com.wq.website.service.impl.ContentServiceImpl.java", "BodyUseAPI": ["com.wq.website.modal.Vo.ContentVo.setCommentsNum(int)"], "Fixed commit": "4a63e391c5989c86e1d03f19b449fb034aafd5cb", "Url": "https://api.github.com/repos/ted-wq-x/my-blog-project", "Date": "2017-04-23T12:01:21Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.equals(UserType.City_Official.toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (typeCO) { boolean validTitle = app.java.controller.FormValidation.textFieldNotEmpty(city_official_title, title_label, \"Required\"); }else { title_label.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1020/buggy-version/JavaApp.src.main.app.java.controller.RegistrationController.java", "BodyUseAPI": [], "Fixed commit": "66d933a32efc030987f9fd39cecd25521a35288a", "Url": "https://api.github.com/repos/fjosufi3/SLSJavaApp", "Date": "2017-04-18T20:01:22Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (techreborn.compat.CompatManager.isIC2Loaded) { net.minecraft.util.EnumActionResult result = techreborn.utils.IC2WrenchHelper.onItemUse(stack, player, world, pos, hand, facing, hitX, hitY, hitZ); if (result == (net.minecraft.util.EnumActionResult.SUCCESS)) { return result; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4312/buggy-version/src.main.java.techreborn.items.tools.ItemWrench.java", "BodyUseAPI": [], "Fixed commit": "c9ff3330ca8af53637918f1bf3d11ccb884cd280", "Url": "https://api.github.com/repos/TechReborn/TechReborn", "Date": "2016-11-05T15:10:28Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.minecraftforge.server.permission.PermissionAPI.hasPermission(player.getGameProfile(), RebornPermissions.WRENCH_BLOCK, new net.minecraftforge.server.permission.context.BlockPosContext(player, pos, world.getBlockState(pos), facing)))) { return net.minecraft.util.EnumActionResult.FAIL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4312/buggy-version/src.main.java.techreborn.items.tools.ItemWrench.java", "BodyUseAPI": [], "Fixed commit": "c9ff3330ca8af53637918f1bf3d11ccb884cd280", "Url": "https://api.github.com/repos/TechReborn/TechReborn", "Date": "2016-11-05T15:10:28Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.minecraftforge.server.permission.PermissionAPI.hasPermission(player.getGameProfile(), RebornPermissions.WRENCH_BLOCK, new net.minecraftforge.server.permission.context.BlockPosContext(player, pos, world.getBlockState(pos), side)))) { return net.minecraft.util.EnumActionResult.FAIL; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4312/buggy-version/src.main.java.techreborn.items.tools.ItemWrench.java", "BodyUseAPI": [], "Fixed commit": "c9ff3330ca8af53637918f1bf3d11ccb884cd280", "Url": "https://api.github.com/repos/TechReborn/TechReborn", "Date": "2016-11-05T15:10:28Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.minecraftforge.server.permission.PermissionAPI.hasPermission(playerIn.getGameProfile(), RebornPermissions.TAP_BLOCK, new net.minecraftforge.server.permission.context.BlockPosContext(playerIn, pos, worldIn.getBlockState(pos), side)))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4312/buggy-version/src.main.java.techreborn.blocks.BlockRubberLog.java", "BodyUseAPI": [], "Fixed commit": "c9ff3330ca8af53637918f1bf3d11ccb884cd280", "Url": "https://api.github.com/repos/TechReborn/TechReborn", "Date": "2016-11-05T15:10:28Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonObject.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(responseStationsElement.isJsonArray())) { return new java.util.ArrayList<de.schildbach.pte.Location>(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1302/buggy-version/app.de.schildbach.pte.OpenDataProvider.java", "BodyUseAPI": [], "Fixed commit": "f1c558acbf27d83a87abdc28fe0b6240c32ac894", "Url": "https://api.github.com/repos/1tchy/Advanced-Public-Transport-Timetables", "Date": "2012-05-18T20:34:35Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoveryUtils.int8ArrayToBluetoothAddress(int[])", "org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoveryUtils.byteArrayToUuid(byte[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((serviceUuid != null) && (org.thaliproject.p2p.btconnectorlib.internal.bluetooth.BluetoothUtils.isValidBluetoothMacAddress(bluetoothMacAddress))) { parsedAdvertisement = new org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoveryUtils.ParsedAdvertisement(); parsedAdvertisement.uuid = serviceUuid; parsedAdvertisement.bluetoothMacAddress = bluetoothMacAddress; }else { if (serviceUuid == null) { android.util.Log.e(org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoveryUtils.TAG, \"parseManufacturerData: Failed to parse the service UUID\"); }else { android.util.Log.e(org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoveryUtils.TAG, \"parseManufacturerData: The Bluetooth MAC address is invalid\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3380/buggy-version/BtConnectorLib.btconnectorlib2.src.main.java.org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoveryUtils.java", "BodyUseAPI": [], "Fixed commit": "208133c087e1a689993677c7ab17721f6ae8aaa6", "Url": "https://api.github.com/repos/thaliproject/Thali_CordovaPlugin_BtLibrary", "Date": "2016-03-16T14:38:18Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (parsedAdvertisement != null) { parsedAdvertisement.provideBluetoothMacAddressRequestId = org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoveryUtils.checkIfUuidContainsProvideBluetoothMacAddressRequestId(parsedAdvertisement.uuid, serviceUuid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3380/buggy-version/BtConnectorLib.btconnectorlib2.src.main.java.org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoveryUtils.java", "BodyUseAPI": ["org.thaliproject.p2p.btconnectorlib.internal.bluetooth.le.BlePeerDiscoveryUtils.checkIfUuidContainsProvideBluetoothMacAddressRequestId(java.util.UUID,java.util.UUID)"], "Fixed commit": "208133c087e1a689993677c7ab17721f6ae8aaa6", "Url": "https://api.github.com/repos/thaliproject/Thali_CordovaPlugin_BtLibrary", "Date": "2016-03-16T14:38:18Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openpnp.model.Location.getX()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.Double.isNaN(x))) { this.x = x; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6897/buggy-version/gui.src.main.java.org.openpnp.machine.reference.driver.LinuxCNC.java", "BodyUseAPI": [], "Fixed commit": "2afa2b44ccbff66368ab23540a98a17c278d61d9", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2013-06-01T19:15:12Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openpnp.model.Location.getZ()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.Double.isNaN(z))) { this.z = z; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6897/buggy-version/gui.src.main.java.org.openpnp.machine.reference.driver.LinuxCNC.java", "BodyUseAPI": [], "Fixed commit": "2afa2b44ccbff66368ab23540a98a17c278d61d9", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2013-06-01T19:15:12Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openpnp.model.Location.getY()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.Double.isNaN(y))) { this.y = y; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6897/buggy-version/gui.src.main.java.org.openpnp.machine.reference.driver.LinuxCNC.java", "BodyUseAPI": [], "Fixed commit": "2afa2b44ccbff66368ab23540a98a17c278d61d9", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2013-06-01T19:15:12Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openpnp.model.Location.getRotation()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(java.lang.Double.isNaN(c))) { this.c = c; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6897/buggy-version/gui.src.main.java.org.openpnp.machine.reference.driver.LinuxCNC.java", "BodyUseAPI": [], "Fixed commit": "2afa2b44ccbff66368ab23540a98a17c278d61d9", "Url": "https://api.github.com/repos/openpnp/openpnp", "Date": "2013-06-01T19:15:12Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.clone()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (calendar.after(selectedDate)) { calendar.add(java.util.Calendar.DATE, (-7)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1655/buggy-version/src.main.java.com.skedgo.android.weekpicker.WeekFragment.java", "BodyUseAPI": ["java.util.Calendar.add(int,int)"], "Fixed commit": "7d9b7cd77fb6eafabc19d129a9d7a322f7f06867", "Url": "https://api.github.com/repos/skedgo/WeekPicker", "Date": "2017-02-21T12:51:45Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getInventory().getKey(command.getThirdWord())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (chosenKey == null) { java.lang.System.out.println(\"You do not have that key!\"); }else if (((com.bayviewglen.zork.Chest) (currentRoom.getInventory().getItem(\"chest\"))).unlock(chosenKey)) { java.lang.System.out.println(\"The chest is unlocked!\"); }else { java.lang.System.out.println(\"That is not the right type of key.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2851/buggy-version/DictatorWars.src.com.bayviewglen.zork.Game.java", "BodyUseAPI": ["((com.bayviewglen.zork.Chest) (currentRoom.getInventory().getItem(\"chest\"))).unlock(com.bayviewglen.zork.Key)"], "Fixed commit": "84530e81e482ca26ae8b9ff89d86aac9f7c47942", "Url": "https://api.github.com/repos/ajollymarlier/Zork", "Date": "2017-05-28T23:48:28Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((net.minecraftforge.fml.common.FMLCommonHandler.instance().getEffectiveSide()) == (net.minecraftforge.fml.relauncher.Side.CLIENT)) { setBackgroundLocation(forestry.core.render.TextureManager.getInstance().getGuiTextureMap()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5719/buggy-version/src.main.java.forestry.core.gui.slots.SlotForestry.java", "BodyUseAPI": [], "Fixed commit": "8ad8597ff08ef74e2774a141cba64b8976af7f44", "Url": "https://api.github.com/repos/ForestryMC/ForestryMC", "Date": "2016-11-06T21:59:42Z"},
{"Line": "=>1756", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(sChildren.isEmpty())) { java.lang.String[] arChild = sChildren.split(\"[;]\"); for (int i = 0; i < (arChild.length); i++) { org.w3c.dom.Node ndChild = this.docProject.createElement(arChild[i]); ndChild.setNodeValue(\"\"); ndNew.appendChild(ndChild); oNew.put(arChild[i], \"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1752/buggy-version/src.nl.ru.crpx.project.CorpusResearchProject.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "0e2396bb9738cf979f8471905e582989f7b9fb39", "Url": "https://api.github.com/repos/ErwinKomen/CrpxProcessor", "Date": "2015-11-24T16:45:50Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((this.chart) != null) this.chart.setParent(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1206/buggy-version/src.org.meteoinfo.chart.ChartPanel.java", "BodyUseAPI": [], "Fixed commit": "409478dc1077e991fb8058f4bd8ecfcaf8907288", "Url": "https://api.github.com/repos/meteoinfo/MeteoInfoLib", "Date": "2017-03-13T14:55:47Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.chart) != null) chart.setParent(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1206/buggy-version/src.org.meteoinfo.chart.ChartPanel.java", "BodyUseAPI": [], "Fixed commit": "409478dc1077e991fb8058f4bd8ecfcaf8907288", "Url": "https://api.github.com/repos/meteoinfo/MeteoInfoLib", "Date": "2017-03-13T14:55:47Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((surveys.size()) == 0) { surveySelectText.setText(getResources().getString(R.string.no_survey_available_for_client)); }else { com.mifos.mifosxdroid.adapters.SurveyListAdapter surveyListAdapter = new com.mifos.mifosxdroid.adapters.SurveyListAdapter(getActivity(), surveys); lv_surveys_list.setAdapter(surveyListAdapter); lv_surveys_list.setOnItemClickListener(new android.widget.AdapterView.OnItemClickListener() { @java.lang.Override public void onItemClick(android.widget.AdapterView<?> adapterView, android.view.View view, int position, long l) { mListener.loadSurveyQuestion(surveys.get(position), clientId); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6879/buggy-version/mifosng-android.src.main.java.com.mifos.mifosxdroid.online.surveylist.SurveyListFragment.java", "BodyUseAPI": ["android.widget.ListView.setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)", "com.mifos.mifosxdroid.online.surveylist.SurveyListFragment.OnFragmentInteractionListener.loadSurveyQuestion(surveys.get(position),int)", "java.util.List<com.mifos.objects.survey.Survey>.get(int)"], "Fixed commit": "89545a17868a5fb767e352176c2d991d815a9bd9", "Url": "https://api.github.com/repos/openMF/android-client", "Date": "2016-10-03T16:48:16Z"},
{"Line": "=>643", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((entry.getValue()) != null) { dynamicQueryContext.setParameter(net.sf.saxon.om.StructuredQName.fromClarkName((parameterPrefix + (entry.getKey()))), new net.sf.saxon.value.ObjectValue(entry.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5158/buggy-version/components.camel-saxon.src.main.java.org.apache.camel.component.xquery.XQueryBuilder.java", "BodyUseAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getKey()", "net.sf.saxon.om.StructuredQName.fromClarkName(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()", "net.sf.saxon.query.DynamicQueryContext.setParameter(net.sf.saxon.om.StructuredQName.fromClarkName((parameterPrefix + (entry.getKey()))),net.sf.saxon.value.ObjectValue)"], "Fixed commit": "e5b2d7658236f910c36eddce72bc555326b31cdb", "Url": "https://api.github.com/repos/apache/camel", "Date": "2016-12-23T18:17:08Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((soapAction) != null) { postCon.setRequestProperty(com.vmware.vim25.ws.WSClient.SOAP_ACTION_HEADER, soapAction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2639/buggy-version/src.main.java.com.vmware.vim25.ws.WSClient.java", "BodyUseAPI": [], "Fixed commit": "e1a244a079b9b097c74d436e71657e9f0f48c4df", "Url": "https://api.github.com/repos/stephenc/vijava", "Date": "2015-02-16T17:38:42Z"},
{"Line": "=>512", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4138/buggy-version/java.src.com.sigmund_hansen.datastructures.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "823aeae11ceda97c920832b0a3619f14c5971ed9", "Url": "https://api.github.com/repos/Sardtok/datastructures", "Date": "2014-07-17T09:03:57Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) { throw new java.util.NoSuchElementException(\"Cannot remove the last element of an empty list.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4138/buggy-version/java.src.com.sigmund_hansen.datastructures.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "823aeae11ceda97c920832b0a3619f14c5971ed9", "Url": "https://api.github.com/repos/Sardtok/datastructures", "Date": "2014-07-17T09:03:57Z"},
{"Line": "=>524", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4138/buggy-version/java.src.com.sigmund_hansen.datastructures.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "823aeae11ceda97c920832b0a3619f14c5971ed9", "Url": "https://api.github.com/repos/Sardtok/datastructures", "Date": "2014-07-17T09:03:57Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4138/buggy-version/java.src.com.sigmund_hansen.datastructures.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "823aeae11ceda97c920832b0a3619f14c5971ed9", "Url": "https://api.github.com/repos/Sardtok/datastructures", "Date": "2014-07-17T09:03:57Z"},
{"Line": "=>471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (o == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4138/buggy-version/java.src.com.sigmund_hansen.datastructures.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "823aeae11ceda97c920832b0a3619f14c5971ed9", "Url": "https://api.github.com/repos/Sardtok/datastructures", "Date": "2014-07-17T09:03:57Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isEmpty()) { throw new java.util.NoSuchElementException(\"Cannot remove the first element of an empty list.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4138/buggy-version/java.src.com.sigmund_hansen.datastructures.LinkedList.java", "BodyUseAPI": [], "Fixed commit": "823aeae11ceda97c920832b0a3619f14c5971ed9", "Url": "https://api.github.com/repos/Sardtok/datastructures", "Date": "2014-07-17T09:03:57Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dist[x][y]) == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2366/buggy-version/src.main.java.com.mlnotes.csvdiffer.CSVDiffer.java", "BodyUseAPI": [], "Fixed commit": "49da57539824d28bbad0cd9554f2dc4130c59816", "Url": "https://api.github.com/repos/mlnotes/csvdiffer", "Date": "2015-05-11T10:11:05Z"},
{"Line": "=>877", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (found) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5843/buggy-version/mhu-lib-vaadin.src.main.java.de.mhus.lib.vaadin.container.MhuAbstractBeanContainer.java", "BodyUseAPI": [], "Fixed commit": "b4b519eb0e622ec67277863e0cc1c4117c3307b6", "Url": "https://api.github.com/repos/mhus/mhus-lib", "Date": "2016-02-23T08:26:41Z"},
{"Line": "=>367", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((rightElemntSimilarities) != null) rightElemntSimilarities.close();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7200/buggy-version/distsim.src.main.java.eu.excitementproject.eop.distsim.storage.DefaultSimilarityStorage.java", "BodyUseAPI": [], "Fixed commit": "e03b0981d59f47ba2c2a7861eaad476bb9ac19cb", "Url": "https://api.github.com/repos/astern7/Excitement-Open-Platform", "Date": "2014-03-03T17:25:29Z"},
{"Line": "=>1218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.utils.LRUCacheMap<java.lang.Long, java.util.LinkedList<jcuda.Pointer>>.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (freeList == null) { freeList = new java.util.LinkedList<jcuda.Pointer>(); org.apache.sysml.runtime.instructions.gpu.context.JCudaObject.freeCUDASpaceMap.put(size, freeList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.JCudaObject.java", "BodyUseAPI": [], "Fixed commit": "5fe6d8bfcbdbf2622bc334904f7045993a9ac631", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-03-11T01:57:14Z"},
{"Line": "=>1153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.utils.LRUCacheMap<java.lang.Long, java.util.LinkedList<jcuda.Pointer>>.get(long)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (freeList.isEmpty()) org.apache.sysml.runtime.instructions.gpu.context.JCudaObject.freeCUDASpaceMap.remove(size);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.JCudaObject.java", "BodyUseAPI": [], "Fixed commit": "5fe6d8bfcbdbf2622bc334904f7045993a9ac631", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-03-11T01:57:14Z"},
{"Line": "=>1035", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.Integer, org.bukkit.entity.Player>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((activePlayers.contains(p)) && (p.isOnline())) && (!(p.isDead()))) { debug(((((\"Teleporting \" + (p.getName())) + \" (spawn \") + a) + \")\")); p.teleport(org.mcsg.survivalgames.SettingsManager.getInstance().getSpawnPoint(gameID, a)); p.sendMessage(((org.bukkit.ChatColor.RED) + \"DeathMatch mode has begun!! Attack!!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5451/buggy-version/src.main.java.org.mcsg.survivalgames.Game.java", "BodyUseAPI": ["org.bukkit.entity.Player.getName()", "org.bukkit.entity.Player.teleport(org.mcsg.survivalgames.SettingsManager.getInstance().getSpawnPoint(gameID, a))", "org.bukkit.entity.Player.sendMessage(((org.bukkit.ChatColor.RED) + \"DeathMatch mode has begun!! Attack!!\"))", "org.mcsg.survivalgames.Game.DeathMatchTimer.debug(((((\"Teleporting \" + (p.getName())) + \" (spawn \") + a) + \")\"))"], "Fixed commit": "2813f04b13d88c82777cc5a05fc9086947ba19aa", "Url": "https://api.github.com/repos/addstar/Survival-Games", "Date": "2014-05-25T07:59:31Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.Object, java.util.List<kidnox.eventbus.impl.EventSubscriber>>.remove(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (subscribers.isEmpty()) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8322/buggy-version/src.main.java.kidnox.eventbus.impl.BusImpl.java", "BodyUseAPI": [], "Fixed commit": "4c221c1f2400f5d56ffcbb509164b13c52d9b2e1", "Url": "https://api.github.com/repos/KidNox/nox-bus", "Date": "2014-06-11T22:15:46Z"},
{"Line": "=>681", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ut.dph.service.configurationManager.getConfigurationById(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((configurationDetails.getType()) == 1) { if ((configurationTransportManager.getWSSenderList(transportId).size()) == 0) { com.ut.dph.model.configurationWebServiceSenders confWSSender = new com.ut.dph.model.configurationWebServiceSenders(); confWSSender.setTransportId(transportId); confWSSender.setDomain(domain1); configurationTransportManager.saveWSSender(confWSSender); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8887/buggy-version/src.main.java.com.ut.dph.controller.adminConfigController.java", "BodyUseAPI": [], "Fixed commit": "ef155afdd9da7d3f822307431e7d4162ea126866", "Url": "https://api.github.com/repos/thenhkid/universalTranslator", "Date": "2015-07-27T18:23:40Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (value.equals(\"6\")) { return \"COMMON_ROOM_ONE_DAY_CLINIC\"; }else if (value.equals(\"7\")) { return \"PLASTER_ROOM\"; }else if (value.equals(\"8\")) { return \"EXTRA_MUROS\"; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5520/buggy-version/src.main.java.com.codegrasp.ims.eiu.mapper.RoomTypeMapper.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "03df18dd61af7fe70fa1c4bd2c582202592434a1", "Url": "https://api.github.com/repos/n3p3nthess/EIU", "Date": "2017-04-19T11:43:02Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value.equals(\"8\")) { return \"EXTRA_MUROS\"; }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5520/buggy-version/src.main.java.com.codegrasp.ims.eiu.mapper.RoomTypeMapper.java", "BodyUseAPI": [], "Fixed commit": "03df18dd61af7fe70fa1c4bd2c582202592434a1", "Url": "https://api.github.com/repos/n3p3nthess/EIU", "Date": "2017-04-19T11:43:02Z"},
{"Line": "=>218", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.assertj.core.util.Objects.areEqual(actual, other)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7214/buggy-version/src.main.java.org.assertj.core.internal.Numbers.java", "BodyUseAPI": [], "Fixed commit": "59fc365d20c972e6b1fe2b567ba0c14a35a44b80", "Url": "https://api.github.com/repos/xasx/assertj-core", "Date": "2017-05-12T20:47:13Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Math.abs((((percentage.value) * (other.doubleValue())) / 100.0))", "org.assertj.core.util.Objects.areEqual(NUMBER,NUMBER)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((!areEqual) && (java.lang.Double.isInfinite(diff))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7214/buggy-version/src.main.java.org.assertj.core.internal.Numbers.java", "BodyUseAPI": [], "Fixed commit": "59fc365d20c972e6b1fe2b567ba0c14a35a44b80", "Url": "https://api.github.com/repos/xasx/assertj-core", "Date": "2017-05-12T20:47:13Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.voltdb.messaging.FragmentTaskMessage.getProcedureName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (procName.startsWith(\"@LoadMultipartitionTable\")) { org.voltdb.messaging.Iv2InitiateTaskMessage itm = m_fragmentMsg.getInitiateTask(); if (itm != null) { java.lang.String tableName = ((java.lang.String) (itm.getParameters()[0])); siteConnection.ensureProcLoaded(((tableName.toUpperCase()) + \".insert\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8441/buggy-version/src.frontend.org.voltdb.iv2.FragmentTask.java", "BodyUseAPI": [], "Fixed commit": "e1b0059753d105cf888af54de03bea5bb996bce5", "Url": "https://api.github.com/repos/deerwalk/voltdb", "Date": "2015-01-13T21:10:51Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.innectis.Nether.NetherMain.EnterPortal(org.bukkit.entity.Player)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (newLoc != null) event.setTo(newLoc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5712/buggy-version/org.innectis.Nether.NetherPlayerListener.java", "BodyUseAPI": ["org.bukkit.event.player.PlayerMoveEvent.setTo(org.bukkit.Location)"], "Fixed commit": "87be90954c659f01832cd57e2c7d887a9960b8c3", "Url": "https://api.github.com/repos/Brettflan/Nether", "Date": "2011-03-28T19:15:32Z"},
{"Line": "=>2030", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getRGBChannelCount()) == 1) || ((getRGBChannelCount()) == (getSizeC()))) { if (((getSizeC()) > 1) && ((getSizeT()) > 1)) { ms.dimensionOrder += \"C\"; } for (java.lang.Long nBytes : bytes) { java.lang.String axis = bytesPerAxis.get(nBytes); if ((ms.dimensionOrder.indexOf(axis)) == (-1)) { ms.dimensionOrder += axis; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4449/buggy-version/components.formats-gpl.src.loci.formats.in.LIFReader.java", "BodyUseAPI": [], "Fixed commit": "19b0d77364f177e4eae5b20c4ff554faa90ee2f9", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2016-04-12T03:01:13Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((array) == null) array = new java.util.ArrayList<MyHashMap.Bucket<K, V>>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8854/buggy-version/src.hashHap.MyHashMapImpl.java", "BodyUseAPI": [], "Fixed commit": "f2a665620482b4056b4c9234d673f5fbc684cfdb", "Url": "https://api.github.com/repos/Cristof17/Dictionary", "Date": "2014-12-14T21:51:06Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logicClasses.GraphViewCreator.nameOfTheClassCallingThis.equals(\"searchActivities.IndicatorSearchActivity\")) { IndicatorActivity.graphLayout.addView(logicClasses.GraphViewCreator.graphView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6422/buggy-version/src.logicClasses.GraphViewCreator.java", "BodyUseAPI": [], "Fixed commit": "886e42ab25b770a0f0df839bbea671cf25ea2e7a", "Url": "https://api.github.com/repos/Xynnect/GroupCproject", "Date": "2013-11-29T16:58:25Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (logicClasses.GraphViewCreator.nameOfTheClassCallingThis.equals(\"searchActivities.IndicatorSearchActivity\")) { IndicatorActivity.graphLayout.removeAllViews(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6422/buggy-version/src.logicClasses.GraphViewCreator.java", "BodyUseAPI": [], "Fixed commit": "886e42ab25b770a0f0df839bbea671cf25ea2e7a", "Url": "https://api.github.com/repos/Xynnect/GroupCproject", "Date": "2013-11-29T16:58:25Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (initialList != null) { for (T item : initialList) { items.add(new v3.M_ListWrapperV2.WrapperItem<T>(item)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7009/buggy-version/SimpleUI.src.v3.M_ListWrapperV2.java", "BodyUseAPI": [], "Fixed commit": "ebccc655b145f5120a268669aeffe57d4f05d762", "Url": "https://api.github.com/repos/bitstars/SimpleUi", "Date": "2013-04-29T13:37:26Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (list == null) { android.util.Log.e(v3.M_ListWrapperV2.LOG_TAG, \"Can't pass a null object for the target list\"); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7009/buggy-version/SimpleUI.src.v3.M_ListWrapperV2.java", "BodyUseAPI": [], "Fixed commit": "ebccc655b145f5120a268669aeffe57d4f05d762", "Url": "https://api.github.com/repos/bitstars/SimpleUi", "Date": "2013-04-29T13:37:26Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((variable.findAttribute(\"grid_mapping_name\")) != null) { return ucar.ma2.Array.makeArray(variable.getDataType(), 1, 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7515/buggy-version/geotiff-iosp.src.main.java.ucar.nc2.iosp.geotiff.GeoTiffIOServiceProvider.java", "BodyUseAPI": ["ucar.nc2.Variable.getDataType()", "ucar.ma2.Array.makeArray(variable.getDataType(),int,int,int)"], "Fixed commit": "a23487c39a257e132051aa5c742cb16e6a86ca92", "Url": "https://api.github.com/repos/tkunicki-usgs/geotiff-iosp", "Date": "2013-01-16T18:28:02Z"},
{"Line": "=>495", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dataSnapshot.child(\"stories\").child(storyKey).child(\"Featured\").exists()) { featured = dataSnapshot.child(\"stories\").child(storyKey).child(\"Featured\").getValue(boolean.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/696/buggy-version/app.src.main.java.com.projectbored.app.MapsActivityCurrentPlace.java", "BodyUseAPI": ["dataSnapshot.child(\"stories\").child(storyKey).child(\"Featured\").getValue(java.lang.Class)", "com.google.firebase.database.DataSnapshot.child(java.lang.String)", "dataSnapshot.child(\"stories\").child(java.lang.String)", "dataSnapshot.child(\"stories\").child(storyKey).child(java.lang.String)"], "Fixed commit": "1ffeb621284711e195be527c14d39095de856244", "Url": "https://api.github.com/repos/invent2017/BORED", "Date": "2017-11-04T11:06:24Z"},
{"Line": "=>729", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["sk.henrichg.phoneprofilesplus.GlobalData.getMappedProfile(sk.henrichg.phoneprofilesplus.Profile,android.content.Context)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((profile._deviceWallpaperChange) == 1) { android.content.Intent wallpaperServiceIntent = new android.content.Intent(context, sk.henrichg.phoneprofilesplus.ExecuteWallpaperProfilePrefsService.class); wallpaperServiceIntent.putExtra(GlobalData.EXTRA_PROFILE_ID, profile._id); context.startService(wallpaperServiceIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5191/buggy-version/phoneProfilesPlus.src.main.java.sk.henrichg.phoneprofilesplus.ActivateProfileHelper.java", "BodyUseAPI": ["android.content.Intent.putExtra(GlobalData.EXTRA_PROFILE_ID,profile._id)"], "Fixed commit": "c5a75e864adb5322dd2c19db6e6765e5fc5b5879", "Url": "https://api.github.com/repos/henrichg/PhoneProfilesPlus", "Date": "2015-04-02T18:45:41Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nexters.hashgoals.adapters.GoalDragSortAdapter.isOnEditMenu) { holder.orderButton.setVisibility(View.VISIBLE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3128/buggy-version/app.src.main.java.nexters.hashgoals.adapters.GoalDragSortAdapter.java", "BodyUseAPI": [], "Fixed commit": "5c2716e07dd93a3bf0f84d3f2d1b31e2897f617a", "Url": "https://api.github.com/repos/teamNakSungDae/goals", "Date": "2017-02-11T13:15:53Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.LinkedListMultimap.create()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((firedRules.size()) == 0) { java.lang.String score = ruleSet.getDefaultScore(); result.put(new org.dmg.pmml.SimpleRule(score), score, ruleSet.getDefaultConfidence()); return org.jpmml.evaluator.TargetUtil.evaluateClassification(result, context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7057/buggy-version/pmml-evaluator.src.main.java.org.jpmml.evaluator.RuleSetModelEvaluator.java", "BodyUseAPI": [], "Fixed commit": "092fb6aaf2230698fae806e67bdd6f76c4a0f58b", "Url": "https://api.github.com/repos/jpmml/jpmml-evaluator", "Date": "2014-08-06T08:38:18Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gov.nasa.jpl.mbee.ems.ImportUtility.getCreationOrder(jmsElementsToCreateLocally.values())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(creationOrder.getFailed().isEmpty())) { com.nomagic.magicdraw.core.Application.getInstance().getGUILog().log((\"[ERROR] Some elements could not be created because their owner or chain of owners could not be found in the model.\" + \" Manual validation of a containing package is required. See the User Manual section on Manual Validation for additional information.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4431/buggy-version/src.main.java.gov.nasa.jpl.mbee.ems.sync.delta.DeltaSyncRunner.java", "BodyUseAPI": [], "Fixed commit": "5ef0cc1b30d7591c650ed535187b69cd356dc001", "Url": "https://api.github.com/repos/Open-MBEE/mdk", "Date": "2016-11-16T20:24:36Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isOver()) this.state = new com.googlecode.prmf.Postgame(inputThread);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7827/buggy-version/src.com.googlecode.prmf.Game.java", "BodyUseAPI": [], "Fixed commit": "64b5f193aab3870a35a05071e10db6dc0abfaf75", "Url": "https://api.github.com/repos/miorel/prmf", "Date": "2010-04-13T01:19:56Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((st.countTokens()) < 3) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3801/buggy-version/client.DeviceClient.src.main.java.io.pivotal.demo.ProbeCaptureRunner.java", "BodyUseAPI": [], "Fixed commit": "70b83bd18a99208e855648d378e67a78af595ebc", "Url": "https://api.github.com/repos/Pivotal-Open-Source-Hub/WifiAnalyticsIoT", "Date": "2015-09-28T23:05:57Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e instanceof java.net.UnknownHostException) { this.status = R.string.error_connectivity_problem; }else { this.status = R.string.error_rendering; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1651/buggy-version/map.src.it.geosolutions.android.map.wms.renderer.WMSUntiledRenderer.java", "BodyUseAPI": [], "Fixed commit": "d36b94e219e6e3232cf19580580176c3328d241e", "Url": "https://api.github.com/repos/geosolutions-it/MapStoreMobile", "Date": "2014-02-27T10:59:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { result = inflater.inflate(R.layout.content_preview, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6794/buggy-version/app.src.main.java.ch.hsr.challp.museum.adapter.ContentPreviewAdapter.java", "BodyUseAPI": [], "Fixed commit": "d6930a47a52354a20fd0dd559ef4fecf432ef0b2", "Url": "https://api.github.com/repos/HSR-Challenge-Projekt-2014/AndroidApp", "Date": "2014-12-12T12:06:10Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (view == null) { mInflater.inflate(R.layout.preview_row, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6794/buggy-version/app.src.main.java.ch.hsr.challp.museum.adapter.ReadLaterListAdapter.java", "BodyUseAPI": [], "Fixed commit": "d6930a47a52354a20fd0dd559ef4fecf432ef0b2", "Url": "https://api.github.com/repos/HSR-Challenge-Projekt-2014/AndroidApp", "Date": "2014-12-12T12:06:10Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (view == null) { view = mInflater.inflate(R.layout.preview_row, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6794/buggy-version/app.src.main.java.ch.hsr.challp.museum.adapter.QuestionListAdapter.java", "BodyUseAPI": [], "Fixed commit": "d6930a47a52354a20fd0dd559ef4fecf432ef0b2", "Url": "https://api.github.com/repos/HSR-Challenge-Projekt-2014/AndroidApp", "Date": "2014-12-12T12:06:10Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.block.BlockBreakEvent.getPlayer()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(player.isOnline())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7471/buggy-version/src.main.java.me.zford.jobs.bukkit.listeners.JobsPaymentListener.java", "BodyUseAPI": [], "Fixed commit": "a9d1f7df96392243595f2223f3d3965582a0ceb4", "Url": "https://api.github.com/repos/phrstbrn/Jobs", "Date": "2012-09-03T14:03:14Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nextTickTime) < 0) nextTickTime = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2090/buggy-version/src.simciv.Entity.java", "BodyUseAPI": [], "Fixed commit": "eaa913565941fb2ac692c9e9912c9e250489edbd", "Url": "https://api.github.com/repos/Zylann/Simciv", "Date": "2012-03-23T13:16:12Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(context).getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((gongTimes == null) || ((gongTimes.length()) == 0)) { gongTimes = jp.newfish.gong.Prefs.GONG_TIMES_DEFAULT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3157/buggy-version/src.jp.newfish.gong.Prefs.java", "BodyUseAPI": [], "Fixed commit": "daffe457b9d4facdbc69febe44cd549b54e56ddc", "Url": "https://api.github.com/repos/toshi3221/gong", "Date": "2013-01-31T14:51:24Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(context).getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((interval == null) || ((interval.length()) == 0)) { interval = jp.newfish.gong.Prefs.GONG_INTERVAL_DEFAULT; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3157/buggy-version/src.jp.newfish.gong.Prefs.java", "BodyUseAPI": [], "Fixed commit": "daffe457b9d4facdbc69febe44cd549b54e56ddc", "Url": "https://api.github.com/repos/toshi3221/gong", "Date": "2013-01-31T14:51:24Z"},
{"Line": "=>620", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.htwg.chess.persistence.IChessDao.getGame(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((chessGame == null) || ((chessGame != null) && (!(this.dao.deleteGame(chessGame.getId()))))) { this.statusMessage = (\"Failed to delete game with id \" + id) + \".\"; }else { this.statusMessage = \"Successfully deleted game.\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2664/buggy-version/src.de.htwg.chess.controller.impl.ChessController.java", "BodyUseAPI": [], "Fixed commit": "9f731429e1709d1d8346c139c8c984d8cb73be1a", "Url": "https://api.github.com/repos/alvilgau/de.htwg.sa.chess", "Date": "2015-05-20T11:42:12Z"},
{"Line": "=>587", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.htwg.chess.persistence.IChessDao.getGame(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (chessGame == null) { this.statusMessage = (\"Failed to load game with id \" + id) + \".\"; notifyObservers(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2664/buggy-version/src.de.htwg.chess.controller.impl.ChessController.java", "BodyUseAPI": [], "Fixed commit": "9f731429e1709d1d8346c139c8c984d8cb73be1a", "Url": "https://api.github.com/repos/alvilgau/de.htwg.sa.chess", "Date": "2015-05-20T11:42:12Z"},
{"Line": "=>582", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id.lastIndexOf(\".\")) == (-1)) { id = id + \".czi\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7721/buggy-version/components.formats-gpl.src.loci.formats.in.ZeissCZIReader.java", "BodyUseAPI": [], "Fixed commit": "36dcdddde5e02b8728d3ce95189bcaccc0a9a4f8", "Url": "https://api.github.com/repos/snoopycrimecop/bioformats", "Date": "2017-08-07T00:01:08Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((returnStmt.expr) != null) returnStmt.expr.accept(this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2583/buggy-version/slp.src.slp.PrettyPrinter.java", "BodyUseAPI": ["returnStmt.expr.accept(slp.PrettyPrinter)"], "Fixed commit": "ed6e2ece8c1b3628b78f6dc302203ddd763a3a80", "Url": "https://api.github.com/repos/oriwa/TAU---Compilation", "Date": "2015-12-13T15:10:03Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["slp.Environment.getCurrentMethod()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((currentMethod.type) == null) env.handleSemanticError(\"Void methods cannot retrun value.\", currentMethod.line);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2583/buggy-version/slp.src.slp.SLPEvaluator.java", "BodyUseAPI": ["slp.Environment.handleSemanticError(java.lang.String,currentMethod.line)"], "Fixed commit": "ed6e2ece8c1b3628b78f6dc302203ddd763a3a80", "Url": "https://api.github.com/repos/oriwa/TAU---Compilation", "Date": "2015-12-13T15:10:03Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (context != null) { int[] sourceIds = context.getResources().getIntArray(R.array.currency_sources_ids); java.lang.String[] sourceNames = context.getResources().getStringArray(R.array.currency_sources); for (int i = 0; i < (sourceIds.length); i++) { if ((sourceIds[i]) == id) { return sourceNames[i]; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4353/buggy-version/src.main.java.net.vexelon.currencybg.app.common.Sources.java", "BodyUseAPI": ["android.content.Context.getResources()", "context.getResources().getIntArray(R.array.currency_sources_ids)", "android.content.Context.getResources()", "context.getResources().getStringArray(R.array.currency_sources)"], "Fixed commit": "2afbb71d2361365117e4983e342ce13b8896924f", "Url": "https://api.github.com/repos/vexelon-dot-net/currencybg.app", "Date": "2017-02-15T17:12:38Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["criteria.add(org.hibernate.criterion.Property.forName(\"sessionId\").eq(maxId)).list()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((list.size()) > 0) && ((list.get(0)) != null)) { latestSessionId = list.get(0).toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3880/buggy-version/SmsIms.src.smsims.db.DbOperation.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.util.List.get(int)"], "Fixed commit": "3af9c53060d3164b64662f8a6e1ef8aa2bcb7c1c", "Url": "https://api.github.com/repos/pmis/sms", "Date": "2014-02-23T15:42:44Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["smsims.db.DbOperation.getLatestSessionId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (latestSessionId == null) { latestSessionId = \"0\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3880/buggy-version/SmsIms.src.smsims.SmsPanel.java", "BodyUseAPI": [], "Fixed commit": "3af9c53060d3164b64662f8a6e1ef8aa2bcb7c1c", "Url": "https://api.github.com/repos/pmis/sms", "Date": "2014-02-23T15:42:44Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (offset < 0) { return offset + 7; }else { return offset; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2069/buggy-version/CalenderView.src.main.java.work.nich.calendarview.MonthView.java", "BodyUseAPI": [], "Fixed commit": "52ae6994689944e94450e9597f11b45f564b3c24", "Url": "https://api.github.com/repos/nichbar/MonthView", "Date": "2017-05-05T16:48:14Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((CourseBook) == null) { return \"No book\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8307/buggy-version/src.pollaxmud.entities.Course.java", "BodyUseAPI": [], "Fixed commit": "17bf6aada29de701ad729a3044fb3ed76c4f0c9f", "Url": "https://api.github.com/repos/danielekbom/pollaxmud", "Date": "2014-10-30T16:31:05Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.envyleague.cricket.repository.UserRepository.findOne(com.envyleague.cricket.security.SecurityUtils.getCurrentLogin())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (currentUser != null) { currentUser.getAuthorities().size(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2215/buggy-version/src.main.java.com.envyleague.cricket.service.UserService.java", "BodyUseAPI": ["com.envyleague.cricket.domain.User.getAuthorities()", "currentUser.getAuthorities().size()"], "Fixed commit": "4c97ba243f0ac5e6a273e99367019628ff9231f8", "Url": "https://api.github.com/repos/vtapadia/envyleague.cricket", "Date": "2015-01-01T00:15:49Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((reminders.size()) != (calendrier.gui.EventDetailController.VALUE_EMPTY_SIZE)) { for (int i = 0; i < (reminders.size()); i++) { strReminder += (reminders.get(i).getTime().toString()) + (calendrier.gui.EventDetailController.VALUE_ADD_COMMA); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1937/buggy-version/src.calendrier.gui.EventDetailController.java", "BodyUseAPI": ["java.util.Calendar.getTime()", "java.util.Date.toString()", "java.util.List<java.util.Calendar>.get(int)", "java.util.List<java.util.Calendar>.size()"], "Fixed commit": "f65bf039255e6768a4fb07c19871b19abbedab9a", "Url": "https://api.github.com/repos/cs2103aug2015-F11-4j/main", "Date": "2015-10-29T13:50:57Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (viewGroup != null) { viewGroup.removeAllViewsInLayout(); android.view.View rootView = inflater.inflate(R.layout.result_fragment, viewGroup); init(rootView); mOrientationChanged = true; setAnimation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3851/buggy-version/lockerui.src.main.java.cz.csas.lockerui.ResultFragment.java", "BodyUseAPI": ["android.view.LayoutInflater.inflate(R.layout.result_fragment,android.view.ViewGroup)", "android.view.ViewGroup.removeAllViewsInLayout()"], "Fixed commit": "652f390fbf85b02102edadae95abb20d494f7de8", "Url": "https://api.github.com/repos/Ceskasporitelna/cs-locker-ui-sdk-droid", "Date": "2017-07-19T09:07:46Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (originalCommand.returnsResultSet()) { columnMetadata = createProjectedSymbolMetadata(originalCommand); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5138/buggy-version/engine.src.main.java.org.teiid.dqp.internal.process.MetaDataProcessor.java", "BodyUseAPI": ["org.teiid.dqp.internal.process.MetaDataProcessor.createProjectedSymbolMetadata(org.teiid.query.sql.lang.Command)"], "Fixed commit": "55c1fa02271347c265eda688dc70f7080408906c", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2016-10-13T12:58:31Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ignoreTransform) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5926/buggy-version/jme3-core.src.main.java.com.jme3.scene.Geometry.java", "BodyUseAPI": [], "Fixed commit": "498f0d817b6b054fdecb1034fb04030fe96b9a24", "Url": "https://api.github.com/repos/MeFisto94/jmonkeyengine", "Date": "2017-09-22T16:36:52Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type == (android.view.MotionEvent.ACTION_DOWN)) { handled = handled || (listener.touchDown(com.michaelspoehr.warship.utils.ScreenUtils.getPercentFromPixelsX(pixelsX), com.michaelspoehr.warship.utils.ScreenUtils.getPercentFromPixelsY(pixelsY))); }else if (type == (android.view.MotionEvent.ACTION_UP)) { handled = handled || (listener.touchUp(com.michaelspoehr.warship.utils.ScreenUtils.getPercentFromPixelsX(pixelsX), com.michaelspoehr.warship.utils.ScreenUtils.getPercentFromPixelsY(pixelsY))); }else if (type == (android.view.MotionEvent.ACTION_MOVE)) { handled = handled || (listener.touchMove(com.michaelspoehr.warship.utils.ScreenUtils.getPercentFromPixelsX(pixelsX), com.michaelspoehr.warship.utils.ScreenUtils.getPercentFromPixelsY(pixelsY))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/673/buggy-version/app.src.main.java.com.michaelspoehr.warship.TouchManager.java", "BodyUseAPI": [], "Fixed commit": "eda4748280a7d072fdbeb43952d92e19d76afcb0", "Url": "https://api.github.com/repos/mspoehr/Warship", "Date": "2015-03-12T16:46:41Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.sf.ictalive.runtime.dashboard.Plugin.plugin) == null) { net.sf.ictalive.runtime.dashboard.Plugin.plugin = new net.sf.ictalive.runtime.dashboard.Plugin(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/826/buggy-version/net.sf.ictalive.runtime.dashboard.src.net.sf.ictalive.runtime.dashboard.Plugin.java", "BodyUseAPI": [], "Fixed commit": "5d18750af7a055685c417a3bee130338c4b6c69b", "Url": "https://api.github.com/repos/kemlg/aliveclipse", "Date": "2013-07-17T21:39:53Z"},
{"Line": "=>400", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getException().getType()) instanceof com.github.gumtreediff.gen.jdt.cd.SimpleType) { pushNode(node, ((com.github.gumtreediff.gen.jdt.cd.SimpleType) (node.getException().getType())).getName().getFullyQualifiedName()); }else { pushNode(node, ((com.github.gumtreediff.gen.jdt.cd.UnionType) (node.getException().getType())).toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3184/buggy-version/gen.jdt.src.main.java.com.github.gumtreediff.gen.jdt.cd.CdJdtVisitor.java", "BodyUseAPI": ["com.github.gumtreediff.gen.jdt.cd.CdJdtVisitor.pushNode(com.github.gumtreediff.gen.jdt.cd.CatchClause,((com.github.gumtreediff.gen.jdt.cd.SimpleType) (node.getException().getType())).getName().getFullyQualifiedName())", "com.github.gumtreediff.gen.jdt.cd.CdJdtVisitor.pushNode(com.github.gumtreediff.gen.jdt.cd.CatchClause,java.lang.String)", "node.getException().getType()", "node.getException().getType()", "((com.github.gumtreediff.gen.jdt.cd.SimpleType) (node.getException().getType())).getName().getFullyQualifiedName()", "com.github.gumtreediff.gen.jdt.cd.CatchClause.getException()", "((com.github.gumtreediff.gen.jdt.cd.UnionType) (node.getException().getType())).toString()", "com.github.gumtreediff.gen.jdt.cd.CatchClause.getException()", "((com.github.gumtreediff.gen.jdt.cd.SimpleType) (node.getException().getType())).getName()"], "Fixed commit": "24f3dc6ede75bec306144e4cf5ca4c98c4e0996f", "Url": "https://api.github.com/repos/FAU-Inf2/treedifferencing", "Date": "2015-11-15T17:08:02Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((c.isGameFinished()) == true) || (c.isGameOver())) { if (timer1.isRunning()) { timer1.stop(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2218/buggy-version/hf_brszta.src.szoftechtutor.Main.java", "BodyUseAPI": [], "Fixed commit": "a664043c9d49bc7adf89f3c51ca8aba7b5aa9982", "Url": "https://api.github.com/repos/BadoDavid/my_first_steps_in_java", "Date": "2017-05-09T13:14:55Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (issuer.startsWith(\"/\")) { javax.ws.rs.core.UriBuilder ub = mc.getUriInfo().getBaseUriBuilder(); realIssuer = ub.path(issuer).build().toString(); }else { realIssuer = issuer; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7224/buggy-version/services.oidc.src.main.java.org.apache.cxf.fediz.service.oidc.FedizSubjectCreator.java", "BodyUseAPI": ["javax.ws.rs.core.UriBuilder.path(java.lang.String)", "ub.path(issuer).build()", "ub.path(issuer).build().toString()"], "Fixed commit": "d5f30aa574f1d9d2d6dd9a047f4db21b8191a804", "Url": "https://api.github.com/repos/apache/cxf-fediz", "Date": "2017-02-21T15:18:48Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mMAScreen.getTestMode()) { if ((screenLinkedTo) != null) { mMAScreen.getmTestingActivity().showScreenWithName(screenLinkedTo); } }else { mMAScreen.onElementTapped(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/458/buggy-version/src.edu.berkeley.cs160.onesies.metaapp.MAScreenElement.java", "BodyUseAPI": ["mMAScreen.getmTestingActivity().showScreenWithName(java.lang.String)", "edu.berkeley.cs160.onesies.metaapp.MAScreen.onElementTapped(edu.berkeley.cs160.onesies.metaapp.MAScreenElement)", "edu.berkeley.cs160.onesies.metaapp.MAScreen.getmTestingActivity()"], "Fixed commit": "a245f64d23fc2df85668e3b184223c20691880fc", "Url": "https://api.github.com/repos/acrabb/businessOnesies", "Date": "2013-04-08T04:54:44Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.alfresco.devops.services.DynamicBootstrapPatchPostProcessor.getGroupsBeanDefinition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (groups != null) { registry.registerBeanDefinition(Constants.GROUPS_BEAN_ID, groups.getBeanDefinition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6047/buggy-version/alfresco-demo-data-repo-amp.src.main.java.org.alfresco.devops.services.DynamicBootstrapPatchPostProcessor.java", "BodyUseAPI": ["org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()", "org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(Constants.GROUPS_BEAN_ID,groups.getBeanDefinition())"], "Fixed commit": "c7d8c8507afcf931e9ace8247eb118bed18b6aca", "Url": "https://api.github.com/repos/Alfresco/alfresco-demo-data", "Date": "2016-04-08T10:03:22Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.alfresco.devops.services.DynamicBootstrapPatchPostProcessor.getUsersBeanDefinition()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (users != null) { registry.registerBeanDefinition(Constants.USERS_BEAN_ID, users.getBeanDefinition()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6047/buggy-version/alfresco-demo-data-repo-amp.src.main.java.org.alfresco.devops.services.DynamicBootstrapPatchPostProcessor.java", "BodyUseAPI": ["org.springframework.beans.factory.support.BeanDefinitionRegistry.registerBeanDefinition(Constants.USERS_BEAN_ID,users.getBeanDefinition())", "org.springframework.beans.factory.support.BeanDefinitionBuilder.getBeanDefinition()"], "Fixed commit": "c7d8c8507afcf931e9ace8247eb118bed18b6aca", "Url": "https://api.github.com/repos/Alfresco/alfresco-demo-data", "Date": "2016-04-08T10:03:22Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.i2p.router.peermanager.PeerProfile.getPeer()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (peer == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2260/buggy-version/router.java.src.net.i2p.router.peermanager.ProfileOrganizer.java", "BodyUseAPI": [], "Fixed commit": "65268240a3c3c89b5a1862eda16d20f497a55556", "Url": "https://api.github.com/repos/i2p/i2p.i2p", "Date": "2013-01-01T00:02:18Z"},
{"Line": "=>484", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getDefaultBaseURI().endsWith(java.io.File.separator)) { return ((getDefaultBaseURI()) + path) + (resource.getName()); }else { return (((getDefaultBaseURI()) + (java.io.File.separator)) + path) + (resource.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6331/buggy-version/flexo-foundation.src.main.java.org.openflexo.foundation.resource.FileSystemBasedResourceCenter.java", "BodyUseAPI": [], "Fixed commit": "58da15430d8ef2b8158c0898ad0916643fb69afe", "Url": "https://api.github.com/repos/openflexo-team/openflexo-core", "Date": "2015-09-18T09:16:28Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(java.io.InputStream.class)) return entityStream;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1025/buggy-version/ambari-server.src.main.java.org.apache.ambari.server.api.GsonJsonProvider.java", "BodyUseAPI": [], "Fixed commit": "f1117c25dcfe1e55e935cf641c1399b12e5846bc", "Url": "https://api.github.com/repos/apache/ambari", "Date": "2016-11-03T09:52:54Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pl.edu.amu.wmi.daut.base.AutomatonSpecification.allStates()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((labelList[states.indexOf(edgeIt.getTargetState())].length()) == 0) { labelList[states.indexOf(edgeIt.getTargetState())].append(edgeIt.getTransitionLabel()); }else { labelList[states.indexOf(edgeIt.getTargetState())].append((\", \" + (edgeIt.getTransitionLabel()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/762/buggy-version/daut-automata-base.src.main.java.pl.edu.amu.wmi.daut.base.AutomatonSpecification.java", "BodyUseAPI": ["pl.edu.amu.wmi.daut.base.OutgoingTransition.getTransitionLabel()", "java.lang.StringBuffer.append((\", \" + (edgeIt.getTransitionLabel())))", "pl.edu.amu.wmi.daut.base.OutgoingTransition.getTargetState()", "java.lang.StringBuffer.append(edgeIt.getTransitionLabel())", "java.util.List<pl.edu.amu.wmi.daut.base.State>.indexOf(edgeIt.getTargetState())", "pl.edu.amu.wmi.daut.base.OutgoingTransition.getTransitionLabel()", "java.util.List<pl.edu.amu.wmi.daut.base.State>.indexOf(edgeIt.getTargetState())", "pl.edu.amu.wmi.daut.base.OutgoingTransition.getTargetState()"], "Fixed commit": "61d3338d85d37ef50a68d491d8f57dbda4819ffd", "Url": "https://api.github.com/repos/mk70835/amu_automata_2011", "Date": "2011-10-18T21:12:33Z"},
{"Line": "=>844", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (DELIVERY_FORMAT_PDF.equals(deliveryFormat)) { rendition = _renditionService.getRenditionByName(nodeRef, org.alfresco.service.namespace.QName.createQName(NamespaceService.CONTENT_MODEL_1_0_URI, StorageService.RENDITION_NAME_PDF)); }else if (se.vgregion.alfresco.repo.storage.impl.DELIVERY_FORMAT_PDFA.equals(deliveryFormat)) { rendition = _renditionService.getRenditionByName(nodeRef, org.alfresco.service.namespace.QName.createQName(NamespaceService.CONTENT_MODEL_1_0_URI, StorageService.RENDITION_NAME_PDFA)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1866/buggy-version/repo.src.main.java.se.vgregion.alfresco.repo.storage.impl.StorageServiceImpl.java", "BodyUseAPI": ["se.vgregion.alfresco.repo.storage.impl.DELIVERY_FORMAT_PDFA.equals(java.lang.String)"], "Fixed commit": "8b6269da32e8c768fcae2bbff63a22d00d80d6fa", "Url": "https://api.github.com/repos/Vastra-Gotalandsregionen/oppna-program-alfresco", "Date": "2017-02-16T20:41:17Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((boundTripService) != null) && ((boundTripService.getCurtrip()) != null)) { Units.userFacingDouble distance = wisc.drivesense.utility.Units.largeDistance(boundTripService.getCurtrip().getDistance(), metricUnits); tvTotalDistance.setText(java.lang.String.format(\"*%.2f\", distance.value)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5862/buggy-version/app.src.main.java.wisc.drivesense.activity.MainActivity.java", "BodyUseAPI": ["wisc.drivesense.triprecorder.TripService.getCurtrip()", "wisc.drivesense.utility.Units.largeDistance(boundTripService.getCurtrip().getDistance(),boolean)", "boundTripService.getCurtrip().getDistance()"], "Fixed commit": "770f9825cb21739d1c9a8c0de92abf5599d65348", "Url": "https://api.github.com/repos/kanglei1130/DriveSense", "Date": "2017-02-23T21:30:55Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((whereWeAre.equals(\"MenuActivity\")) && (position == 0)) { }else buttonAdd_remove.setVisibility(View.VISIBLE);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8737/buggy-version/app.src.main.java.com.vibz.vibz.SongAdapter.java", "BodyUseAPI": [], "Fixed commit": "6a7424deff6c8bccb0ebc5247649e65902222602", "Url": "https://api.github.com/repos/clementf/vibz", "Date": "2015-10-24T10:19:19Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Global.game.views.board) != null) Global.game.views.board.replayRunning = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3612/buggy-version/src.com.sam.hex.replay.Load.java", "BodyUseAPI": [], "Fixed commit": "ed1053230e77e13a7c72c874559d855ca144914a", "Url": "https://api.github.com/repos/Xlythe/HexGame_Android", "Date": "2012-08-23T23:51:30Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(me.tehbeard.cititrader.WalletTrait.WalletType.ADMIN)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2888/buggy-version/src.main.java.me.tehbeard.cititrader.WalletTrait.java", "BodyUseAPI": [], "Fixed commit": "5776fdad639a2518e0838446182aae418456fd10", "Url": "https://api.github.com/repos/tenowg/CitiTraders", "Date": "2012-08-29T23:27:34Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view()) != null) { view().render(new com.nazacheres.onlinetrends.screens.start.StartModel.WhatPopularLoadingState(state, null)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4603/buggy-version/app.src.main.java.com.nazacheres.onlinetrends.screens.start.StartPresenter.java", "BodyUseAPI": [], "Fixed commit": "c74ba454692e03a20c90f5f4a902f09de3a1725a", "Url": "https://api.github.com/repos/Nazacheres/Youtube-Trends", "Date": "2017-07-27T21:48:43Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view()) != null) { view().render(new com.nazacheres.onlinetrends.screens.start.StartModel.WhatPopularLoadedState(list)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4603/buggy-version/app.src.main.java.com.nazacheres.onlinetrends.screens.start.StartPresenter.java", "BodyUseAPI": [], "Fixed commit": "c74ba454692e03a20c90f5f4a902f09de3a1725a", "Url": "https://api.github.com/repos/Nazacheres/Youtube-Trends", "Date": "2017-07-27T21:48:43Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((view()) != null) { java.lang.System.err.println(e.toString()); view().render(new com.nazacheres.onlinetrends.screens.start.StartModel.WhatPopularLoadingFailedState(R.string.errorcancelingprocess)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4603/buggy-version/app.src.main.java.com.nazacheres.onlinetrends.screens.start.StartPresenter.java", "BodyUseAPI": [], "Fixed commit": "c74ba454692e03a20c90f5f4a902f09de3a1725a", "Url": "https://api.github.com/repos/Nazacheres/Youtube-Trends", "Date": "2017-07-27T21:48:43Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((value()) instanceof java.lang.Byte) && (clazz == (char.class))) { return ((T) (java.lang.Character.valueOf(((char) (((com.javadeobfuscator.deobfuscator.executor.values.JavaByte) (this)).byteValue()))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8522/buggy-version/src.main.java.com.javadeobfuscator.deobfuscator.executor.values.JavaValue.java", "BodyUseAPI": [], "Fixed commit": "a66e8a1fa718f0d7cbac67449b0e5ff454f18b3a", "Url": "https://api.github.com/repos/ecx86/deobfuscator", "Date": "2016-08-07T15:40:25Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((cert.getMeetsCriteria()) != null) && ((cert.getMeetsCriteria()) == (java.lang.Boolean.TRUE))) { if ((((certRules.hasCertOption(cert.getNumber(), CertificationResultRules.TEST_TOOLS_USED)) && (!(cert.getNumber().equals(\"170.314 (g)(1)\")))) && (!(cert.getNumber().equals(\"170.314 (g)(2)\")))) && (((cert.getTestTools()) == null) || ((cert.getTestTools().size()) == 0))) { product.getErrorMessages().add(((\"Test Tools are required for certification \" + (cert.getNumber())) + \".\")); } if ((certRules.hasCertOption(cert.getNumber(), CertificationResultRules.TEST_DATA)) && (((cert.getTestData()) == null) || ((cert.getTestData().size()) == 0))) { product.getErrorMessages().add(((\"Test Data is required for certification \" + (cert.getNumber())) + \".\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7415/buggy-version/chpl.chpl-service.src.main.java.gov.healthit.chpl.certifiedProduct.validation.CertifiedProduct2014Validator.java", "BodyUseAPI": ["gov.healthit.chpl.dto.PendingCertificationResultDTO.getTestTools()", "gov.healthit.chpl.dto.PendingCertificationResultDTO.getNumber()", "cert.getTestData().size()", "gov.healthit.chpl.dto.PendingCertificationResultDTO.getNumber()", "cert.getNumber().equals(java.lang.String)", "gov.healthit.chpl.dto.PendingCertificationResultDTO.getNumber()", "product.getErrorMessages().add(((\"Test Data is required for certification \" + (cert.getNumber())) + \".\"))", "gov.healthit.chpl.dto.PendingCertificationResultDTO.getNumber()", "cert.getTestTools().size()", "gov.healthit.chpl.dto.PendingCertificationResultDTO.getTestData()", "product.getErrorMessages().add(((\"Test Tools are required for certification \" + (cert.getNumber())) + \".\"))", "gov.healthit.chpl.dto.PendingCertificationResultDTO.getNumber()", "cert.getNumber().equals(java.lang.String)", "gov.healthit.chpl.dto.PendingCertificationResultDTO.getTestTools()", "gov.healthit.chpl.certifiedProduct.validation.CertifiedProduct2014Validator.hasCertOption(cert.getNumber(),CertificationResultRules.TEST_TOOLS_USED)", "gov.healthit.chpl.dto.PendingCertificationResultDTO.getTestData()", "gov.healthit.chpl.dto.PendingCertificationResultDTO.getNumber()", "gov.healthit.chpl.certifiedProduct.validation.CertifiedProduct2014Validator.hasCertOption(cert.getNumber(),CertificationResultRules.TEST_DATA)"], "Fixed commit": "50bfc6404f00b2bce090054f07534a1adad9d154", "Url": "https://api.github.com/repos/kekey1/chpl-api", "Date": "2016-04-05T16:05:57Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["util.DriveUtil.getFirstParentName(com.google.api.services.drive.model.File)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (AnimeIndex.musicDialog.songsMap.containsKey(albumName)) { java.util.ArrayList<java.lang.String> list = AnimeIndex.musicDialog.songsMap.get(albumName); list.add(songName); list.sort(java.lang.String.CASE_INSENSITIVE_ORDER); AnimeIndex.musicDialog.songsMap.put(albumName, list); }else { java.util.ArrayList<java.lang.String> list = new java.util.ArrayList<java.lang.String>(); list.add(songName); list.sort(java.lang.String.CASE_INSENSITIVE_ORDER); AnimeIndex.musicDialog.songsMap.put(albumName, list); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2152/buggy-version/src.util.task.DriveFileFetcherTask.java", "BodyUseAPI": ["AnimeIndex.musicDialog.songsMap.get(java.lang.String)", "AnimeIndex.musicDialog.songsMap.put(java.lang.String,java.util.ArrayList<java.lang.String>)", "AnimeIndex.musicDialog.songsMap.put(java.lang.String,java.util.ArrayList<java.lang.String>)"], "Fixed commit": "a608deca9fb0465beb3acccc8df0e5d6094fefa1", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-12-11T09:57:50Z"},
{"Line": "=>401", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.deadmandungeons.deadmanplugin.filedata.DataEntry.getNumber(com.deadmandungeons.deadmanplugin.filedata.DataEntry.DataKey)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (pitch != null) { loc.setPitch(pitch.floatValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8399/buggy-version/src.com.deadmandungeons.deadmanplugin.filedata.DataEntry.java", "BodyUseAPI": ["org.bukkit.Location.setPitch(float)", "java.lang.Number.floatValue()"], "Fixed commit": "47d57a7a4bda24b5ab8f15e0581fc5085efea3aa", "Url": "https://api.github.com/repos/DeadmanDungeons/DeadmanPlugin", "Date": "2017-03-01T19:19:47Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (originalDatastore != null) { _datastoreNameTextField.setText(originalDatastore.getName()); _datastoreNameTextField.setEnabled(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4988/buggy-version/desktop.ui.src.main.java.org.datacleaner.windows.AbstractDatastoreDialog.java", "BodyUseAPI": [], "Fixed commit": "f51c32963365fdc310707835ec64e396c239592a", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2015-01-28T08:31:19Z"},
{"Line": "=>10", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (n == 0) return new java.util.ArrayList<TreeNode>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1239/buggy-version/src.Solution95.java", "BodyUseAPI": [], "Fixed commit": "8a644d961c66d2d2790d0684cff6300997b78aec", "Url": "https://api.github.com/repos/haezh/leetcodeJ", "Date": "2017-02-08T10:04:06Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ceylonRunnableName.startsWith(\"default::\")) { ceylonRunnableName = ceylonRunnableName.substring(9); }else { ceylonRunnableName = ceylonRunnableName.replace(\"::\", \".\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1217/buggy-version/common.src.com.redhat.ceylon.common.JVMModuleUtil.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)", "java.lang.String.substring(int)"], "Fixed commit": "62abd5f174118edb8e7435f8d0b87d5d7c37594c", "Url": "https://api.github.com/repos/eclipse/ceylon", "Date": "2017-07-26T10:58:09Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mapEntry.getValue().equals(conn))) { this.comServer.sendUpdate(mapEntry.getValue(), keys, entry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8960/buggy-version/MdsServer.src.de.hsbremen.mds.server.domain.MdsServerInterpreter.java", "BodyUseAPI": ["de.hsbremen.mds.server.domain.MdsComServer.sendUpdate(mapEntry.getValue(),java.util.List<java.lang.String>,de.hsbremen.mds.common.whiteboard.WhiteboardEntry)", "java.util.Map.Entry<java.lang.String, org.java_websocket.WebSocket>.getValue()"], "Fixed commit": "cd851171724e2c1a00cf4e3ba8dac6118f7871d5", "Url": "https://api.github.com/repos/MachDeinSpiel/MdsServer", "Date": "2014-06-18T09:34:42Z"},
{"Line": "=>247", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zenika.back.service.JmxtransService.refreshObjectNames(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (res) { response.put(\"success\", true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4853/buggy-version/back.src.main.java.com.zenika.back.web.JmxtransController.java", "BodyUseAPI": [], "Fixed commit": "62ebd9016196e2f6ce524f5585284615ee9856ed", "Url": "https://api.github.com/repos/btravers/jmxtrans_gui", "Date": "2015-04-30T15:32:28Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.zenika.back.utils.JmxUtils.objectNames(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (objectnames.isEmpty()) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4853/buggy-version/back.src.main.java.com.zenika.back.service.JmxtransServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "62ebd9016196e2f6ce524f5585284615ee9856ed", "Url": "https://api.github.com/repos/btravers/jmxtrans_gui", "Date": "2015-04-30T15:32:28Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((error_header.getVisibility()) == (android.view.View.INVISIBLE)) { error_header.setVisibility(View.VISIBLE); error_header.startAnimation(error_fade_in); error_header.setClickable(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5765/buggy-version/app.src.main.java.de.dhbw.app2night.HomeFragment.java", "BodyUseAPI": ["android.widget.LinearLayout.startAnimation(android.view.animation.Animation)", "android.widget.LinearLayout.setClickable(boolean)", "android.widget.LinearLayout.setVisibility(View.VISIBLE)"], "Fixed commit": "c1ab60f67e26e13c7703f160345407f09a81f658", "Url": "https://api.github.com/repos/App2Night/App2Night.AndroidA", "Date": "2016-12-10T14:02:05Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((error_header.getVisibility()) == (android.view.View.VISIBLE)) { error_header.startAnimation(error_fade_out); error_header.setVisibility(View.INVISIBLE); error_header.setClickable(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5765/buggy-version/app.src.main.java.de.dhbw.app2night.HomeFragment.java", "BodyUseAPI": ["android.widget.LinearLayout.setClickable(boolean)", "android.widget.LinearLayout.setVisibility(View.INVISIBLE)", "android.widget.LinearLayout.startAnimation(android.view.animation.Animation)"], "Fixed commit": "c1ab60f67e26e13c7703f160345407f09a81f658", "Url": "https://api.github.com/repos/App2Night/App2Night.AndroidA", "Date": "2016-12-10T14:02:05Z"},
{"Line": "=>448", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bestsofar == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5457/buggy-version/nars_core.nars.entity.Concept.java", "BodyUseAPI": [], "Fixed commit": "7404bd5f19f982b727b591736fe1d353a1474a56", "Url": "https://api.github.com/repos/opennars/opennars", "Date": "2016-12-25T12:15:36Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((initialJaxbParsingException.getLinkedException()) != null) { no.ntnu.okse.protocol.wsn.WSNRequestParser.log.error((\"Parsing error: \" + (initialJaxbParsingException.getLinkedException().getMessage()))); }else { no.ntnu.okse.protocol.wsn.WSNRequestParser.log.error((\"Parsing error: \" + initialJaxbParsingException)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6586/buggy-version/src.main.java.no.ntnu.okse.protocol.wsn.WSNRequestParser.java", "BodyUseAPI": ["initialJaxbParsingException.getLinkedException().getMessage()", "org.apache.log4j.Logger.error((\"Parsing error: \" + (initialJaxbParsingException.getLinkedException().getMessage())))", "javax.xml.bind.JAXBException.getLinkedException()", "org.apache.log4j.Logger.error((\"Parsing error: \" + initialJaxbParsingException))"], "Fixed commit": "6f5bebf8f23932cb8650451e29824a0c653255b3", "Url": "https://api.github.com/repos/kradalby/okse", "Date": "2015-03-24T22:36:02Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.mSplit) != null) { node = cursor.mTree.finishSplit(frame, node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6046/buggy-version/src.main.java.org.cojen.tupl._TreeValue.java", "BodyUseAPI": ["cursor.mTree.finishSplit(org.cojen.tupl._CursorFrame,org.cojen.tupl._Node)"], "Fixed commit": "098e9c769da1425ea73000617b5293f03bd7fc76", "Url": "https://api.github.com/repos/cojen/Tupl", "Date": "2017-11-26T16:28:48Z"},
{"Line": "=>325", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.mSplit) != null) { node = cursor.mTree.finishSplit(frame, node); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6046/buggy-version/src.main.java.org.cojen.tupl.TreeValue.java", "BodyUseAPI": ["cursor.mTree.finishSplit(org.cojen.tupl.CursorFrame,org.cojen.tupl.Node)"], "Fixed commit": "098e9c769da1425ea73000617b5293f03bd7fc76", "Url": "https://api.github.com/repos/cojen/Tupl", "Date": "2017-11-26T16:28:48Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cachedTimeSlice.getTimeRegion().getTimeStampEnd()) < (parameters.getTimeRegion().getTimeStampEnd())) endInterval = cachedTimeSlice.getTimeRegion().getTimeStampEnd(); else endInterval = parameters.getTimeRegion().getTimeStampEnd();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8481/buggy-version/fr.inria.soctrace.tools.ocelotl.core.src.fr.inria.soctrace.tools.ocelotl.core.itimeaggregop.MultiThreadTimeAggregationOperator.java", "BodyUseAPI": ["fr.inria.soctrace.tools.ocelotl.core.timeslice.TimeSlice.getTimeRegion()", "fr.inria.soctrace.tools.ocelotl.core.parameters.OcelotlParameters.getTimeRegion()", "cachedTimeSlice.getTimeRegion().getTimeStampEnd()", "parameters.getTimeRegion().getTimeStampEnd()"], "Fixed commit": "afe4ba427f03e74e8e29753ed82973078ff72a12", "Url": "https://api.github.com/repos/dosimont/ocelotl", "Date": "2014-08-08T15:01:39Z"},
{"Line": "=>507", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cachedTimeSlice.getTimeRegion().getTimeStampStart()) > (parameters.getTimeRegion().getTimeStampStart())) startInterval = cachedTimeSlice.getTimeRegion().getTimeStampStart(); else startInterval = parameters.getTimeRegion().getTimeStampStart();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8481/buggy-version/fr.inria.soctrace.tools.ocelotl.core.src.fr.inria.soctrace.tools.ocelotl.core.itimeaggregop.MultiThreadTimeAggregationOperator.java", "BodyUseAPI": ["cachedTimeSlice.getTimeRegion().getTimeStampStart()", "fr.inria.soctrace.tools.ocelotl.core.parameters.OcelotlParameters.getTimeRegion()", "parameters.getTimeRegion().getTimeStampStart()", "fr.inria.soctrace.tools.ocelotl.core.timeslice.TimeSlice.getTimeRegion()"], "Fixed commit": "afe4ba427f03e74e8e29753ed82973078ff72a12", "Url": "https://api.github.com/repos/dosimont/ocelotl", "Date": "2014-08-08T15:01:39Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["spade.reporter.Audit.parseKeyValPairs(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"32\".equals(args.get(\"arch\"))) { ARCH_32BIT = true; }else if (\"64\".equals(args.get(\"arch\"))) { ARCH_32BIT = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5737/buggy-version/src.spade.reporter.Audit.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "ff490b65f76ae01e50e074f7904edee861703f1f", "Url": "https://api.github.com/repos/PARC/SPADE", "Date": "2015-10-27T09:41:51Z"},
{"Line": "=>1159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (oldItem != null) { int index = drawerStringList.indexOf(oldItem); if (index == (-1)) { drawerStringList.add(newItem); }else { drawerStringList.set(drawerStringList.indexOf(oldItem), newItem); } }else { drawerStringList.add(newItem); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/9003/buggy-version/src.com.yoneko.areyouthereyet.update.MapActivity.java", "BodyUseAPI": ["java.util.ArrayList<com.yoneko.models.SimpleGeofence>.indexOf(com.yoneko.models.SimpleGeofence)", "java.util.ArrayList<com.yoneko.models.SimpleGeofence>.indexOf(com.yoneko.models.SimpleGeofence)", "java.util.ArrayList<com.yoneko.models.SimpleGeofence>.set(drawerStringList.indexOf(oldItem),com.yoneko.models.SimpleGeofence)"], "Fixed commit": "3f1e3fad64afc8ae61973243e20d942ccbd2b00e", "Url": "https://api.github.com/repos/reidisaki/dumpy", "Date": "2014-09-06T20:40:07Z"},
{"Line": "=>2246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (entity != null) { mm.putString(uuid.toString(), entity.getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/461/buggy-version/stack.core.src.main.java.org.apache.usergrid.corepersistence.CpEntityManager.java", "BodyUseAPI": ["org.apache.usergrid.persistence.Entity.getType()", "org.apache.usergrid.persistence.map.MapManager.putString(java.lang.String,entity.getType())"], "Fixed commit": "6306e2b99f4d02bcd4283f9d0e391c461048f705", "Url": "https://api.github.com/repos/snoopdave/incubator-usergrid", "Date": "2014-10-13T16:06:42Z"},
{"Line": "=>576", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((last_bmp) != null) last_bmp.recycle();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8851/buggy-version/src.study.hellogridview.CurStateActivity.java", "BodyUseAPI": [], "Fixed commit": "b24928050b3fd77016e404a971e90f81f16755e1", "Url": "https://api.github.com/repos/david-pureal/HelloGridView", "Date": "2015-04-16T07:51:31Z"},
{"Line": "=>428", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((cells) == null) return -1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6213/buggy-version/multipleGridRecyclerView.src.main.java.com.gigigo.multipleGridRecyclerView.layoutManager.SpannedGridLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "43f9d63f5840c5c173af19151182b59789005c0c", "Url": "https://api.github.com/repos/Gigigo-Android-Devs/gigigo-multipleGridRecyclerView-library-android", "Date": "2016-11-15T13:55:37Z"},
{"Line": "=>385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((path == null) && (data == null)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1495/buggy-version/src.com.androidquery.callback.BitmapAjaxCallback.java", "BodyUseAPI": [], "Fixed commit": "509b02f806ff1e4282e1db926f228ad8527fab95", "Url": "https://api.github.com/repos/androidquery/androidquery", "Date": "2013-03-18T06:08:05Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["DateDeserializer.instance.deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (date == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2525/buggy-version/src.main.java.com.alibaba.fastjson.serializer.CalendarCodec.java", "BodyUseAPI": [], "Fixed commit": "dd85c9ebf2ace48a5d7e23b29895b588159a106f", "Url": "https://api.github.com/repos/rabbitgyk/fastjson", "Date": "2014-10-02T14:34:17Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (stripped.equals(\"nullolol\")) { return new utility.decal.Decal(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/413/buggy-version/utility.decal.Decal.java", "BodyUseAPI": [], "Fixed commit": "cd0a6c6c28b762fcc974ab2ad78ed99875a4d03a", "Url": "https://api.github.com/repos/jeanralphaviles/COP4331-PirateGame", "Date": "2015-02-16T08:38:44Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getImage()) == null) { return \"[nullolol]\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/413/buggy-version/utility.decal.Decal.java", "BodyUseAPI": [], "Fixed commit": "cd0a6c6c28b762fcc974ab2ad78ed99875a4d03a", "Url": "https://api.github.com/repos/jeanralphaviles/COP4331-PirateGame", "Date": "2015-02-16T08:38:44Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kiddos.nuktimetable.View.findViewById(R.id.tvClassName)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (className != null) className.setText(course.getCourseName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3592/buggy-version/app.src.main.java.com.kiddos.nuktimetable.MainFragment.java", "BodyUseAPI": ["com.kiddos.nuktimetable.TextView.setText(course.getCourseName())"], "Fixed commit": "46e162bdd161e531bdc0c7bd364055279918ab55", "Url": "https://api.github.com/repos/kiddos/nuktimetable", "Date": "2015-09-15T10:53:11Z"},
{"Line": "=>342", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kiddos.nuktimetable.View.findViewById(R.id.background)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (background != null) background.setBackgroundColor(getResources().getColor(course.getColor()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3592/buggy-version/app.src.main.java.com.kiddos.nuktimetable.MainFragment.java", "BodyUseAPI": ["com.kiddos.nuktimetable.LinearLayout.setBackgroundColor(getResources().getColor(course.getColor()))"], "Fixed commit": "46e162bdd161e531bdc0c7bd364055279918ab55", "Url": "https://api.github.com/repos/kiddos/nuktimetable", "Date": "2015-09-15T10:53:11Z"},
{"Line": "=>341", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kiddos.nuktimetable.View.findViewById(R.id.tvClassroom)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (classroom != null) classroom.setText(course.getClassroom());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3592/buggy-version/app.src.main.java.com.kiddos.nuktimetable.MainFragment.java", "BodyUseAPI": ["com.kiddos.nuktimetable.TextView.setText(course.getClassroom())"], "Fixed commit": "46e162bdd161e531bdc0c7bd364055279918ab55", "Url": "https://api.github.com/repos/kiddos/nuktimetable", "Date": "2015-09-15T10:53:11Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(bInService)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5244/buggy-version/src.com.androidlogsuite.service.FileReadService.java", "BodyUseAPI": [], "Fixed commit": "78a5ca5f90408ac3e94dc0bd8663e29d52d7db28", "Url": "https://api.github.com/repos/duanqz/androidlogsuite", "Date": "2015-07-06T03:09:28Z"},
{"Line": "=>760", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((searchContext.getFacet(field)) != null) && (com.liferay.portal.kernel.util.Validator.isNotNull(value))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3887/buggy-version/portal-service.src.com.liferay.portal.kernel.search.BaseIndexer.java", "BodyUseAPI": [], "Fixed commit": "6b83f2dc085bd6691f02ed1abf5d88884a2d4118", "Url": "https://api.github.com/repos/codyhoag/liferay-portal", "Date": "2012-11-20T08:56:09Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeObject.oobLeft) && (timeObject.oobRight)) { setBackgroundResource(R.drawable.oob_left_right_background); }else if (timeObject.oobLeft) { setBackgroundResource(R.drawable.oob_left_background); }else if (timeObject.oobRight) { setBackgroundResource(R.drawable.oob_right_background); }else { setBackgroundResource(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6474/buggy-version/datesliderlib.src.main.java.com.slider.DateSlider.timeview.TimeLayoutView.java", "BodyUseAPI": [], "Fixed commit": "d7b7cce12fbaffef6e6f2892f10d103ce85e2f0d", "Url": "https://api.github.com/repos/mikes222/DateSlider", "Date": "2014-12-19T14:06:19Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timeObject.oobLeft) && (timeObject.oobRight)) { setBackgroundResource(R.drawable.oob_left_right_background); }else if (timeObject.oobLeft) { setBackgroundResource(R.drawable.oob_left_background); }else if (timeObject.oobRight) { setBackgroundResource(R.drawable.oob_right_background); }else { setBackgroundResource(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6474/buggy-version/datesliderlib.src.main.java.com.slider.DateSlider.timeview.TimeTextView.java", "BodyUseAPI": [], "Fixed commit": "d7b7cce12fbaffef6e6f2892f10d103ce85e2f0d", "Url": "https://api.github.com/repos/mikes222/DateSlider", "Date": "2014-12-19T14:06:19Z"},
{"Line": "=>127", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (progress < 0) progress = 0; else if (progress > 100) progress = 100;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8165/buggy-version/maxipacker.src.com.gibbon.maxipack.MaxiUploader.java", "BodyUseAPI": [], "Fixed commit": "94c42cbea38ef3d0771c5901451ee55ca90115a1", "Url": "https://api.github.com/repos/shadowislord/radakan", "Date": "2008-05-14T23:02:36Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (numTotalHits != 0) { for (int i = 0; i <= noPages; i++) { pages.add(i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8149/buggy-version/src.main.java.com.searchcode.app.service.CodeSearcher.java", "BodyUseAPI": [], "Fixed commit": "3dd54ac1b5c0b1ea30e5f0815f2bfe7da3070ace", "Url": "https://api.github.com/repos/boyter/searchcode-server", "Date": "2016-10-17T21:56:44Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count) == 1) { return (sites[0][0]) == (com.xzheng.coursera.algorithm.one.Percolation.OPEN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6419/buggy-version/percolation.src.com.xzheng.coursera.algorithm.one.Percolation.java", "BodyUseAPI": [], "Fixed commit": "177919a248fa407dbb866749e1b52c5da356a095", "Url": "https://api.github.com/repos/FrankZheng/coursera-algnorithm", "Date": "2015-10-12T08:07:10Z"},
{"Line": "=>709", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((registryYearSpinner.getSelectedItemPosition()) != 0) { etChildCumulativeSn.setError(\"Please fill the child registration number\"); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6954/buggy-version/appV2.src.main.java.mobile.tiis.appV2.fragments.RegisterChildFragment.java", "BodyUseAPI": [], "Fixed commit": "affc57c7d9ae4e434d678b2f357478439311e103", "Url": "https://api.github.com/repos/BIDMOH/TIIS2-Android-Mobile-Client-Application", "Date": "2017-05-31T07:33:59Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((tags != null) && ((tags.length) > 0)) { event.setProperty(\"tags\", java.util.Arrays.asList(tags)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3093/buggy-version/src.parser.EventParser.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String[])", "com.google.appengine.api.datastore.Entity.setProperty(java.lang.String,java.util.List<java.lang.String>)"], "Fixed commit": "870bde0cb122c9f53aeb520b63a738461a9eda71", "Url": "https://api.github.com/repos/peggy-li/hackblue", "Date": "2013-04-07T09:16:19Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) instanceof java.util.Map) { java.util.Map<java.lang.String, java.lang.Object> props = ((java.util.Map<java.lang.String, java.lang.Object>) (value)); docID = ((java.lang.String) (props.get(\"_id\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1649/buggy-version/src.main.java.com.couchbase.lite.QueryRow.java", "BodyUseAPI": [], "Fixed commit": "7d981717534c010ca021a6818ad1973770906f90", "Url": "https://api.github.com/repos/reisub/couchbase-lite-java-core", "Date": "2015-10-29T13:55:54Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.parseGraph()) != null) { return io.metal2pojo.PojoMapper.fillPojo(type, context.parseGraph()); }else { throw new io.metal2pojo.exceptions.TokenNotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1262/buggy-version/src.main.java.io.metal2pojo.DefaultConverter.java", "BodyUseAPI": ["io.metal2pojo.PojoMapper.fillPojo(java.lang.Class<?>,context.parseGraph())", "io.metal2pojo.pojo.MapContext.parseGraph()"], "Fixed commit": "a46a5e507fa4a7c0a2f9555b3d5ce043c6a1489c", "Url": "https://api.github.com/repos/TheUnknownCylon/metal2pojo", "Date": "2017-01-09T14:18:22Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newItem != null) { newItem.quantityInCart += productQuantity; newItem.save(); }else { models.Product product = potentialProduct.get(); models.CartItem cartItem = new models.CartItem(product, productQuantity); user.getShoppingCart().add(cartItem); user.save(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1540/buggy-version/app.controllers.ProductController.java", "BodyUseAPI": [], "Fixed commit": "9b3aae781b885a79cc932b3e91baec707c37c67b", "Url": "https://api.github.com/repos/agiegerich/swe_project", "Date": "2016-04-26T20:01:13Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (minEnergy < (java.lang.Double.POSITIVE_INFINITY)) { if ((_sampler) instanceof com.analog.lyric.dimple.solvers.gibbs.samplers.generic.IDiscreteDirectSampler) { ((com.analog.lyric.dimple.solvers.gibbs.samplers.generic.IDiscreteDirectSampler) (java.util.Objects.requireNonNull(_sampler))).nextSample(_outputMsg.clone(), _conditional, minEnergy, this); }else if ((_sampler) instanceof com.analog.lyric.dimple.solvers.gibbs.samplers.generic.IMCMCSampler) { rejected = !(((com.analog.lyric.dimple.solvers.gibbs.samplers.generic.IMCMCSampler) (java.util.Objects.requireNonNull(_sampler))).nextSample(_outputMsg.clone(), this)); } }else { rejected = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3595/buggy-version/solvers.java.src.main.java.com.analog.lyric.dimple.solvers.gibbs.GibbsDiscrete.java", "BodyUseAPI": ["java.lang.Object.nextSample(_outputMsg.clone(),double[],double,com.analog.lyric.dimple.solvers.gibbs.GibbsDiscrete)"], "Fixed commit": "877b3c89dcc26a0b9e4c7e0afeef4aabd5cdd707", "Url": "https://api.github.com/repos/AnalogDevicesLyricLabs/dimple", "Date": "2014-11-17T21:03:44Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((player.getHeldItemOffhand().getItem()) instanceof net.minecraft.item.ItemBlock) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6497/buggy-version/src.main.java.sorazodia.survival.mechanics.PlayerActionEvent.java", "BodyUseAPI": [], "Fixed commit": "31caeb0b0aa47639ed06d5bb446cf6ad9f708628", "Url": "https://api.github.com/repos/SoraZodia/Survival-Tweaks", "Date": "2017-04-30T08:26:40Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((arg1) != null) && ((arg2) != null)) { if (!((arg1.isString()) || (arg2.isString()))) { return super.value(pgm); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3995/buggy-version/src.com.basic.BooleanExpression.java", "BodyUseAPI": [], "Fixed commit": "774a9345a8a10129d499baa229c5af733eb84aa0", "Url": "https://api.github.com/repos/nietoperz809/quran", "Date": "2014-12-27T03:09:14Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (result == null) { payloadType = java.lang.Void.class; }else { payloadType = result.getClass(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3379/buggy-version/extension.rsb.com.src.main.java.org.dc.jul.extension.rsb.com.RPCHelper.java", "BodyUseAPI": ["java.lang.Object.getClass()"], "Fixed commit": "b77a37c5ded3eb8bd170fdc43b69f72a028a8f04", "Url": "https://api.github.com/repos/openbase/jul", "Date": "2016-04-15T15:34:44Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.Uri.getQueryParameter(AppConstant.IEXTRA_OAUTH_VERIFIER)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (verifier != null) { twitter4j.auth.AccessToken accessToken = org.fossasia.phimpme.share.twitter.LoginActivity.twitter.getOAuthAccessToken(org.fossasia.phimpme.share.twitter.LoginActivity.requestToken, verifier); bundle = new android.os.Bundle(); bundle.putString(getString(R.string.auth_token), accessToken.getToken()); bundle.putString(getString(R.string.auth_username), accessToken.getScreenName()); bundle.putString(getString(R.string.auth_secret), accessToken.getTokenSecret()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8479/buggy-version/app.src.main.java.org.fossasia.phimpme.share.twitter.LoginActivity.java", "BodyUseAPI": ["twitter4j.Twitter.getOAuthAccessToken(twitter4j.auth.RequestToken,java.lang.String)"], "Fixed commit": "6ad02ba423672a66f6c72da0943d926c5665b6b2", "Url": "https://api.github.com/repos/mayank8318/phimpme-android", "Date": "2017-08-05T18:44:30Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dotmarketing.beans.Host.isLive()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isHostRunning) conAPI.publish(otherHostContentlet, user, respectFrontendRoles);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3559/buggy-version/src.com.dotmarketing.portlets.contentlet.business.HostAPIImpl.java", "BodyUseAPI": [], "Fixed commit": "78beeac197f6565d2f9a8de831ca7e4037453108", "Url": "https://api.github.com/repos/trackcc/dotCMS", "Date": "2013-09-05T18:54:29Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (lastTestedBuildHasNoErrors()) { promoteToProd(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8961/buggy-version/src.main.java.cd.Pipeline.java", "BodyUseAPI": [], "Fixed commit": "ab148eedeeff8a53e3ef98c42253e44b868674eb", "Url": "https://api.github.com/repos/eidrien/economicsCD", "Date": "2017-08-24T17:43:42Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((hashOrClass.getIdent()) != null) { org.eclipse.xtext.util.Pair<java.lang.Integer, java.lang.Integer> expected = getNumberOfParametersForMixin(hashOrClass); int provided = mixinCall.getParameter().size(); if ((provided < (expected.getFirst())) || (provided > (expected.getSecond()))) { java.lang.String message = ((expected.getFirst()) == (expected.getSecond())) ? java.lang.String.format(messages.getString(\"illegal_number_of_parameters_for_mixin\"), hashOrClass.getIdent(), expected.getFirst(), provided) : java.lang.String.format(messages.getString(\"illegal_number_of_parameters_for_mixin_range\"), hashOrClass.getIdent(), expected.getFirst(), expected.getSecond(), provided); warning(message, mixinCall, LessPackage.eINSTANCE.getMixinCall_Selector(), 0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5915/buggy-version/src.eclipse.net.vtst.ow.eclipse.less.src.net.vtst.ow.eclipse.less.validation.LessJavaValidator.java", "BodyUseAPI": ["net.vtst.ow.eclipse.less.less.HashOrClass.getIdent()", "net.vtst.ow.eclipse.less.validation.LessJavaValidator.getNumberOfParametersForMixin(net.vtst.ow.eclipse.less.less.HashOrClass)", "java.lang.String.format(messages.getString(\"illegal_number_of_parameters_for_mixin_range\"),hashOrClass.getIdent(),expected.getFirst(),expected.getSecond(),int)", "net.vtst.ow.eclipse.less.less.HashOrClass.getIdent()", "java.lang.String.format(messages.getString(\"illegal_number_of_parameters_for_mixin\"),hashOrClass.getIdent(),expected.getFirst(),int)"], "Fixed commit": "f825944253bd6a0c5e208975c4c58621b8ec76ae", "Url": "https://api.github.com/repos/vtst/ow", "Date": "2012-05-16T17:06:41Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.ContentValues.getAsString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(idValue)) idValue = java.lang.String.valueOf(rowId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5582/buggy-version/atleap-core.src.main.java.com.blandware.android.atleap.provider.sqlite.SQLiteProvider.java", "BodyUseAPI": [], "Fixed commit": "95eef34457b684ed408ce306326831c2617fc9b3", "Url": "https://api.github.com/repos/blandware/android-atleap", "Date": "2014-03-27T18:02:02Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.sqlite.SQLiteDatabase.insertOrThrow(entry.getTablesSQL(),<nulltype>,android.content.ContentValues)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rowId == (-1)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5582/buggy-version/atleap-core.src.main.java.com.blandware.android.atleap.provider.sqlite.SQLiteProvider.java", "BodyUseAPI": [], "Fixed commit": "95eef34457b684ed408ce306326831c2617fc9b3", "Url": "https://api.github.com/repos/blandware/android-atleap", "Date": "2014-03-27T18:02:02Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (target instanceof org.wso2.developerstudio.datamapper.impl.InNodeImpl) { int existingLinks = ((org.wso2.developerstudio.datamapper.impl.InNodeImpl) (target)).getIncomingLink().size(); if (existingLinks > 0) { return false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/868/buggy-version/datamapper-tool.org.wso2.developerstudio.visualdatamapper.diagram.src.org.wso2.developerstudio.datamapper.diagram.edit.policies.DataMapperBaseItemSemanticEditPolicy.java", "BodyUseAPI": [], "Fixed commit": "df77e5bc09dd4218581c5357dc46c71a80ab7c0a", "Url": "https://api.github.com/repos/nwnpallewela/developer-studio", "Date": "2016-02-24T05:03:25Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((java.lang.Integer.parseInt(idSplit[1])) == 0) { blockId = idSplit[0]; }else { blockId = id; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5815/buggy-version/src.com.craftyn.casinoslots.slot.TypeData.java", "BodyUseAPI": [], "Fixed commit": "725614e2781b41e42d738506dee776bbf98b37f0", "Url": "https://api.github.com/repos/graywolf336/CasinoSlots", "Date": "2012-04-26T19:09:03Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (imageView1 != null) { imageView1.setImageDrawable(mDataModel.getFileIcon()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7332/buggy-version/app.src.main.java.com.slownet5.pgprootexplorer.filemanager.listview.FileListAdapter.java", "BodyUseAPI": ["android.widget.ImageView.setImageDrawable(mDataModel.getFileIcon())"], "Fixed commit": "9a4fb6565fb9466c57f9622542dab6875b1d3fe6", "Url": "https://api.github.com/repos/mosamabinomar/RootPGPExplorer", "Date": "2017-07-06T20:04:41Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i.range()) != null) { annotation.registerFix(new org.sonarlint.intellij.actions.NoSonarIntentionAction(i.range())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6483/buggy-version/src.main.java.org.sonarlint.intellij.editor.SonarExternalAnnotator.java", "BodyUseAPI": ["com.intellij.lang.annotation.Annotation.registerFix(org.sonarlint.intellij.actions.NoSonarIntentionAction)", "org.sonarlint.intellij.issue.IssuePointer.range()"], "Fixed commit": "71c59d44e0adb76e378d1f743f897602a673678b", "Url": "https://api.github.com/repos/SonarSource/sonarlint-intellij", "Date": "2016-01-13T08:20:55Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (checkDate(job.getLastUpdate())) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8692/buggy-version/src.main.java.dpfmanager.shell.modules.database.core.DatabaseConnection.java", "BodyUseAPI": [], "Fixed commit": "b5911fe92898c13d0bd3e436352fe058e038ab14", "Url": "https://api.github.com/repos/EasyinnovaSL/DPFManager", "Date": "2016-07-13T10:21:38Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (basic) { this.text = this.text.toUpperCase(); this.kunci = this.kunci.toUpperCase(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8475/buggy-version/src.kriptic.Enkripsi.java", "BodyUseAPI": [], "Fixed commit": "e9ee67647a51904b2a2e7402f56a9f4ef6447d5d", "Url": "https://api.github.com/repos/akhfa/kriptic", "Date": "2016-02-02T15:49:46Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((Enkripsi_grup.getSelection().getActionCommand().compareTo(\"vigenere_basic\")) == 0) Hasil_text.setText(dec.vigenere(true, false)); else if ((Enkripsi_grup.getSelection().getActionCommand().compareTo(\"vigenere_ext\")) == 0) Hasil_text.setText(dec.vigenere(false, false)); else javax.swing.JOptionPane.showMessageDialog(null, \"salah\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8475/buggy-version/src.kriptic.Kriptic.java", "BodyUseAPI": ["javax.swing.ButtonModel.getActionCommand()", "java.lang.String.compareTo(java.lang.String)", "javax.swing.ButtonGroup.getSelection()"], "Fixed commit": "e9ee67647a51904b2a2e7402f56a9f4ef6447d5d", "Url": "https://api.github.com/repos/akhfa/kriptic", "Date": "2016-02-02T15:49:46Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((address == null) || (address.trim().equals(\"\"))) { return null; }else { java.lang.String url = (useHTTPS) ? \"https://\" : \"http://\"; url += address.trim(); if (port != null) { url += \":\" + (port.trim()); } url += (path.trim().equals(\"\")) ? \"/\" : path; return url.trim(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7427/buggy-version/app.src.main.java.com.rastating.droidbeard.Preferences.java", "BodyUseAPI": ["java.lang.String.trim()"], "Fixed commit": "f365d874972d73aa73a97d1eee23e9ddea3cac6b", "Url": "https://api.github.com/repos/rastating/DroidBeard", "Date": "2014-10-05T16:29:07Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(updatedItems.isEmpty())) { updatedItems.remove(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6977/buggy-version/pm4j-common.src.main.java.org.pm4j.common.pageable.ModificationsImpl.java", "BodyUseAPI": ["java.util.Collection<T_ITEM>.remove(T_ITEM)"], "Fixed commit": "892c9bb7f1a9d3d4b69c8ddfe3444ec3f6030a99", "Url": "https://api.github.com/repos/pm4j/org.pm4j", "Date": "2013-01-23T15:05:47Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(addedItems.contains(item))) { addedItems.add(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6977/buggy-version/pm4j-common.src.main.java.org.pm4j.common.pageable.ModificationsImpl.java", "BodyUseAPI": ["java.util.Collection<T_ITEM>.add(T_ITEM)"], "Fixed commit": "892c9bb7f1a9d3d4b69c8ddfe3444ec3f6030a99", "Url": "https://api.github.com/repos/pm4j/org.pm4j", "Date": "2013-01-23T15:05:47Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(updatedItems.contains(item))) { updatedItems.add(item); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6977/buggy-version/pm4j-common.src.main.java.org.pm4j.common.pageable.ModificationsImpl.java", "BodyUseAPI": ["java.util.Collection<T_ITEM>.add(T_ITEM)"], "Fixed commit": "892c9bb7f1a9d3d4b69c8ddfe3444ec3f6030a99", "Url": "https://api.github.com/repos/pm4j/org.pm4j", "Date": "2013-01-23T15:05:47Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (key != null) { return mMemoryCache.get(key); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8281/buggy-version/main.java.com.bignerdranch.android.photogallery.ThumbnailDownloader.java", "BodyUseAPI": ["android.support.v4.util.LruCache<java.lang.String, android.graphics.Bitmap>.get(java.lang.String)"], "Fixed commit": "1b2c7b0f09a978b75e03236b440edbd6b1090546", "Url": "https://api.github.com/repos/Aralakh/PhotoGallery", "Date": "2017-10-24T18:51:07Z"},
{"Line": "=>13", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!match) { Entry newEntry = new Entry(name, num); this.entryList.add(newEntry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6709/buggy-version/java.JMaps.java", "BodyUseAPI": [], "Fixed commit": "341f49898d9ca599d6e146ecd9ed5d713948bb41", "Url": "https://api.github.com/repos/shreeshaagoyal/Learning_Programming", "Date": "2017-07-05T05:06:10Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (consoleCommunication != null) { consoleCommunication.sendMessage(agentDownloadGrinderMessage); }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6831/buggy-version/ngrinder-core.src.main.java.net.grinder.AgentController.java", "BodyUseAPI": ["net.grinder.AgentController.ConsoleCommunication.sendMessage(net.grinder.engine.communication.AgentDownloadGrinderMessage)"], "Fixed commit": "216bddee14761e1772415bd0c203ab54c72437fb", "Url": "https://api.github.com/repos/nhnopensource/ngrinder", "Date": "2014-01-20T04:18:03Z"},
{"Line": "=>336", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((temp == 0) && ((catTitle.getText().toString().compareTo(\"\")) == 0)) && ((catDesc.getText().toString().compareTo(\"\")) == 0)) { setupCategoryDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4786/buggy-version/src.com.classproj.placeit.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "6b2e911083279774a7babd258d6616ef389c6fad", "Url": "https://api.github.com/repos/iteriani/placeit3-11-14", "Date": "2014-03-15T06:20:08Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inHeader) { currentStart = randomAccessFile.getFilePointer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3640/buggy-version/src.main.java.uk.ac.ebi.pride.spectracluster.spectra_list.ParsingMgfScanner.java", "BodyUseAPI": [], "Fixed commit": "d05eef235d50f03f691742ec01905955aea9d586", "Url": "https://api.github.com/repos/spectra-cluster/spectra-cluster-cli", "Date": "2016-07-27T11:57:09Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inHeader && (!(line.startsWith(\"BEGIN IONS\")))) { inHeader = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3640/buggy-version/src.main.java.uk.ac.ebi.pride.spectracluster.spectra_list.ParsingMgfScanner.java", "BodyUseAPI": [], "Fixed commit": "d05eef235d50f03f691742ec01905955aea9d586", "Url": "https://api.github.com/repos/spectra-cluster/spectra-cluster-cli", "Date": "2016-07-27T11:57:09Z"},
{"Line": "=>441", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newInterLayerDistance <= 0) newInterLayerDistance = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/9208/buggy-version/Net2Plan-GUI.Net2Plan-GUI-Plugins.Net2Plan-NetworkDesign.src.main.java.com.net2plan.gui.plugins.networkDesign.topologyPane.TopologyPanel.java", "BodyUseAPI": [], "Fixed commit": "4192c8da8045c5e90fa328c1aadc035bc34b0995", "Url": "https://api.github.com/repos/girtel/Net2Plan", "Date": "2017-02-23T21:43:36Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.length()) < 1) return output;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6467/buggy-version/RaspiCar.src.serverPackage.SocketProtocoll.java", "BodyUseAPI": [], "Fixed commit": "81897454e6f7aefeee4ab375db429bd983bf2cda", "Url": "https://api.github.com/repos/GTO2013/RaspiCar", "Date": "2017-05-02T08:50:55Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (connDef instanceof org.jboss.jca.common.api.metadata.common.v12.CommonConnDef) { setAttribute(model, org.jboss.as.connector.subsystems.resourceadapters.Constants.CONNECTABLE, ((org.jboss.jca.common.api.metadata.common.v12.CommonConnDef) (connDef)).isConnectable()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8212/buggy-version/connector.src.main.java.org.jboss.as.connector.subsystems.resourceadapters.IronJacamarResourceCreator.java", "BodyUseAPI": [], "Fixed commit": "cc323e56e2b621469476ca2e66331726738f1092", "Url": "https://api.github.com/repos/maeste/jboss-as", "Date": "2014-03-20T13:52:55Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["slingRequest.getResourceResolver().getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((notificationsFolder == null) || ((this.getNotifications(slingRequest, notificationsFolder).size()) < 1)) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5689/buggy-version/bundle.src.main.java.com.adobe.acs.commons.wcm.notifications.impl.SystemNotificationsImpl.java", "BodyUseAPI": [], "Fixed commit": "926be40b27e4a3cc8e9f3f961f07f52cfbc6285c", "Url": "https://api.github.com/repos/bstopp/acs-aem-commons", "Date": "2015-11-11T17:10:55Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.adobe.acs.commons.util.ModeUtil.isAuthor()) { super.registerAsSlingFilter(ctx, (-10000), \".*\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5689/buggy-version/bundle.src.main.java.com.adobe.acs.commons.wcm.notifications.impl.SystemNotificationsImpl.java", "BodyUseAPI": [], "Fixed commit": "926be40b27e4a3cc8e9f3f961f07f52cfbc6285c", "Url": "https://api.github.com/repos/bstopp/acs-aem-commons", "Date": "2015-11-11T17:10:55Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["field.getElement().getAttribute(java.lang.String)", "com.google.gwt.dom.client.Node.getNodeName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (((!(name.equals(\"data-i18n-key\"))) || (newValue == null)) || (\"\".equals(newValue))) field.getElement().setAttribute(name, oldValue);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2088/buggy-version/errai-ui.src.main.java.org.jboss.errai.ui.shared.TemplateUtil.java", "BodyUseAPI": ["field.getElement().setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "82adb08d22f95401341a06962f67909643030911", "Url": "https://api.github.com/repos/mbarkley/errai", "Date": "2013-09-23T17:24:38Z"},
{"Line": "=>827", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (line != null) { if ((logging) == true) fileWriteLine(line); display_view.addLine(line, col, font); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1235/buggy-version/src.org.e2k.Rivet.java", "BodyUseAPI": ["org.e2k.Rivet.fileWriteLine(java.lang.String)", "org.e2k.DisplayView.addLine(java.lang.String,java.awt.Color,java.awt.Font)"], "Fixed commit": "fcd823de10e93f9243625edd218ec9984b7cca48", "Url": "https://api.github.com/repos/IanWraith/Rivet", "Date": "2012-10-30T19:57:11Z"},
{"Line": "=>835", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ct != null) { display_view.addChar(ct, col, font); if ((logging) == true) fileWriteChar(ct); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1235/buggy-version/src.org.e2k.Rivet.java", "BodyUseAPI": ["org.e2k.Rivet.fileWriteChar(java.lang.String)", "org.e2k.DisplayView.addChar(java.lang.String,java.awt.Color,java.awt.Font)"], "Fixed commit": "fcd823de10e93f9243625edd218ec9984b7cca48", "Url": "https://api.github.com/repos/IanWraith/Rivet", "Date": "2012-10-30T19:57:11Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startPickLoc) == null) { java.util.logging.Logger.getLogger(this.getClass().getSimpleName()).warning(\"startPickLoc null in PickManager#getRotation()\"); return transform; }else if ((finalPickLoc) == null) { java.util.logging.Logger.getLogger(this.getClass().getSimpleName()).warning(\"finalPickLoc null in PickManager#getRotation()\"); return transform; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4638/buggy-version/jme3-scenecomposer.src.com.jme3.gde.scenecomposer.tools.PickManager.java", "BodyUseAPI": [], "Fixed commit": "d6cfad5ba5353305dd37f11a0f88626d2e7c7861", "Url": "https://api.github.com/repos/jMonkeyEngine/sdk", "Date": "2017-07-10T14:09:39Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((whitelist == null) || ((whitelist.size()) == 0)) { neigh = this.getNeighborsP(); }else { for (WPI.CampusMap.Backend.Core.Point.IPoint point : this.getNeighborsP()) { if (whitelist.contains(point.getMap())) { neigh.add(point); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6918/buggy-version/src.main.java.WPI.CampusMap.Backend.Core.Point.RealPoint.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.contains(point.getMap())"], "Fixed commit": "31640147e9151e0d6a4dcab0104b4ce423a2026a", "Url": "https://api.github.com/repos/Team11b/CampusMap", "Date": "2015-12-07T00:24:00Z"},
{"Line": "=>708", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ptr >= (_inputEnd)) { if (!(loadMore())) { _owner._reportCsvError(\"Missing closing quote for value\"); } ptr = _inputPtr; if (checkLF && ((inputBuffer[ptr]) == '\\n')) { --(_currInputRow); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7647/buggy-version/src.main.java.com.fasterxml.jackson.dataformat.csv.impl.CsvReader.java", "BodyUseAPI": [], "Fixed commit": "e7560f4376e6ee440bac3fa964bee50f01195a44", "Url": "https://api.github.com/repos/FasterXML/jackson-dataformat-csv", "Date": "2012-11-21T21:28:38Z"},
{"Line": "=>745", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (c == '\\n') { ++(_currInputRow); _currInputRowStart = ptr; }else if (c == (_escapeChar)) { _inputPtr = ptr; c = _unescape(); outBuf[(outPtr++)] = c; continue main_loop; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7647/buggy-version/src.main.java.com.fasterxml.jackson.dataformat.csv.impl.CsvReader.java", "BodyUseAPI": [], "Fixed commit": "e7560f4376e6ee440bac3fa964bee50f01195a44", "Url": "https://api.github.com/repos/FasterXML/jackson-dataformat-csv", "Date": "2012-11-21T21:28:38Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["msgEdit.getText().toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (sendText.isEmpty()) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4317/buggy-version/InstaChatX.src.at.sw_xp_02.whisper.ChatActivity.java", "BodyUseAPI": [], "Fixed commit": "23cee6ef3f44926426919502533ace1c6f6b6db6", "Url": "https://api.github.com/repos/DusanTrkulja/sw14_xp_02", "Date": "2014-05-14T14:20:44Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(window.loaded())) logic.nextTurn();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4030/buggy-version/Ponder.src.game.Ponder.java", "BodyUseAPI": [], "Fixed commit": "002dedae25fd7927adae257475a548cad7bfd2fb", "Url": "https://api.github.com/repos/chcoppernoll/Ponder", "Date": "2015-11-20T17:05:19Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.ui.IEditorPart.getAdapter(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (styledText == null) { throw new com.prairie.eemory.exception.NoDataFoundException(com.prairie.eemory.Messages.Plugin_Error_NoText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2482/buggy-version/com.prairie.eemory.src.com.prairie.eemory.handlers.EeHandler.java", "BodyUseAPI": [], "Fixed commit": "52cde472470cb55ea3ac9f8b6d3936c914751243", "Url": "https://api.github.com/repos/LTTPP/Eemory", "Date": "2015-01-03T12:38:26Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.phloc.commons.mime.MimeTypeParser.parseMimeType(this.m_aHttpRequest.getContentType())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((aMimeType != null) && (aMimeType.getAsStringWithoutParameters().equals(CMimeType.APPLICATION_JSON.getAsStringWithoutParameters()))) { try { final java.lang.String sJSON = com.phloc.commons.io.streams.StreamUtils.getAllBytesAsString(this.m_aHttpRequest.getInputStream(), CCharset.CHARSET_UTF_8_OBJ); final com.phloc.json.IJSONObject aJSON = com.phloc.json.impl.JSONReader.parseObject(sJSON); for (final java.lang.String sProperty : aJSON.getAllPropertyNames()) { setAttribute(sProperty, aJSON.getPropertyValueData(sProperty)); } } catch (final java.io.IOException aEx) { com.phloc.webscopes.impl.RequestWebScopeNoMultipart.LOG.error(\"Error reading request body\", aEx); } catch (final com.phloc.json.impl.JSONParsingException aEx) { com.phloc.webscopes.impl.RequestWebScopeNoMultipart.LOG.error(\"Error parsing JSON request body\", aEx); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/326/buggy-version/phloc-webscopes.src.main.java.com.phloc.webscopes.impl.RequestWebScopeNoMultipart.java", "BodyUseAPI": [], "Fixed commit": "41dbb0bede85a33f4a38fcf6aff6f60476aa82b7", "Url": "https://api.github.com/repos/phlocbg/phloc-webbasics", "Date": "2015-11-05T22:07:53Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.phloc.webscopes.impl.RequestInitializerHandler.getInstance().initRequestScope(this)) { initJSONBody(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/326/buggy-version/phloc-webscopes.src.main.java.com.phloc.webscopes.impl.RequestWebScopeNoMultipart.java", "BodyUseAPI": [], "Fixed commit": "41dbb0bede85a33f4a38fcf6aff6f60476aa82b7", "Url": "https://api.github.com/repos/phlocbg/phloc-webbasics", "Date": "2015-11-05T22:07:53Z"},
{"Line": "=>1385", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["state.getP1Hand().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((state.getP1Gold()) >= (cardToBuild.getCost())) { cardInfo.setText(((cardToBuild.getName()) + \" Built.\")); humanPlayerBuildDistrict(cardToBuild); p1HandAdapter.remove(p1HandAdapter.getItem(selectedCard)); p1HandAdapter.notifyDataSetChanged(); hasBuilt = true; }else { cardInfo.setText(\"Not Enough Gold to Build\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7949/buggy-version/app.src.main.java.edu.up.citadels.citadels.CitadelsHumanPlayer.java", "BodyUseAPI": ["android.widget.TextView.setText(((cardToBuild.getName()) + \" Built.\"))", "edu.up.citadels.citadels.CitadelsDistrictCard.getName()", "edu.up.citadels.citadels.CitadelsHumanPlayer.P1ActionSpinnerListener.humanPlayerBuildDistrict(edu.up.citadels.citadels.CitadelsDistrictCard)"], "Fixed commit": "9b2cc753e197c8835e7b9751824c2f50a8a48bea", "Url": "https://api.github.com/repos/davidsku18/Citadels", "Date": "2017-04-19T04:54:15Z"},
{"Line": "=>408", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTagsLoaded()) { getTagsPresenter().getDisplay().getDriver().flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5838/buggy-version/src.main.java.org.jboss.pressgang.ccms.ui.client.local.mvp.presenter.search.BaseTopicSearchTagsFieldsAndFiltersPresenter.java", "BodyUseAPI": [], "Fixed commit": "33b14f287d93c7a0533cbb33d1de11f27e1ae539", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSUI", "Date": "2014-07-16T03:09:12Z"},
{"Line": "=>430", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isTagsLoaded()) { getTagsPresenter().getDisplay().getDriver().flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5838/buggy-version/src.main.java.org.jboss.pressgang.ccms.ui.client.local.mvp.presenter.search.BaseTopicSearchTagsFieldsAndFiltersPresenter.java", "BodyUseAPI": [], "Fixed commit": "33b14f287d93c7a0533cbb33d1de11f27e1ae539", "Url": "https://api.github.com/repos/pressgang-ccms/PressGangCCMSUI", "Date": "2014-07-16T03:09:12Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((board[row][col]) instanceof NumberTile) { reveals.add(board[row][col]); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/102/buggy-version/src.Minesweeper.java", "BodyUseAPI": ["java.util.ArrayList<Tile>.add(board[row][col])"], "Fixed commit": "85f03f2ba7b086ce3816f09cd35f83fa94eb4433", "Url": "https://api.github.com/repos/ktzyskowski/minesweeper", "Date": "2017-05-13T00:23:45Z"},
{"Line": "=>853", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m_manager.m_config.revertToClassicDiscoveryIfNeeded) { m_manager.getLogger().i(\"Reverting to a CLASSIC scan...\"); tryClassicDiscovery(PA_StateTracker.E_Intent.UNINTENTIONAL, false); m_mode = com.idevicesinc.sweetblue.P_ScanManager.Mode_CLASSIC; }else fail();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3769/buggy-version/library.src.main.java.com.idevicesinc.sweetblue.P_ScanManager.java", "BodyUseAPI": ["com.idevicesinc.sweetblue.BleManager.getLogger()", "m_manager.getLogger().i(java.lang.String)"], "Fixed commit": "8537a540c09662a7fde310f82c02bc663cb062cf", "Url": "https://api.github.com/repos/iDevicesInc/SweetBlue", "Date": "2017-10-18T20:52:20Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.poi.ss.usermodel.Row.getCell(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cell.getCellType()) == (org.apache.poi.ss.usermodel.Cell.CELL_TYPE_NUMERIC)) { if (cell instanceof org.apache.poi.xssf.usermodel.XSSFCell) { org.apache.poi.xssf.usermodel.XSSFCell x = ((org.apache.poi.xssf.usermodel.XSSFCell) (cell)); datas.add(x.getRawValue()); } }else { datas.add(cell.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3006/buggy-version/src.main.java.cn.sp.ofs.excel.Helper.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(cell.toString())", "org.apache.poi.ss.usermodel.Cell.toString()"], "Fixed commit": "693f0a5aacd5eb069578d437b04ec1bae00d4908", "Url": "https://api.github.com/repos/benjamin555/ohc", "Date": "2014-10-28T08:15:58Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cellVal.indexOf(\"'\")) >= 0) { cellVal = cellVal.replaceAll(\"'\", \"''\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3006/buggy-version/src.main.java.cn.sp.ofs.excel.model.Table.java", "BodyUseAPI": ["java.lang.String.replaceAll(java.lang.String,java.lang.String)"], "Fixed commit": "693f0a5aacd5eb069578d437b04ec1bae00d4908", "Url": "https://api.github.com/repos/benjamin555/ohc", "Date": "2014-10-28T08:15:58Z"},
{"Line": "=>849", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.litecoin.core.Block.getDifficultyTargetAsInteger()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((newDifficulty.compareTo(receivedDifficulty)) != 0) { com.google.litecoin.core.AbstractBlockChain.log.info((((\"\\\"Network provided difficulty bits do not match what was calculated: \" + (receivedDifficulty.toString(16))) + \" vs \") + (newDifficulty.toString(16)))); throw new com.google.litecoin.core.VerificationException((((\"Network provided difficulty bits do not match what was calculated: \" + (receivedDifficulty.toString(16))) + \" vs \") + (newDifficulty.toString(16)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/296/buggy-version/core.src.main.java.com.google.litecoin.core.AbstractBlockChain.java", "BodyUseAPI": ["java.math.BigInteger.toString(int)", "org.slf4j.Logger.info(java.lang.String)", "java.math.BigInteger.toString(int)", "java.math.BigInteger.toString(int)", "java.math.BigInteger.toString(int)"], "Fixed commit": "5aff60b286c12421bb6733b1de895c4f41fdc3a3", "Url": "https://api.github.com/repos/hank/litecoinj-new", "Date": "2013-12-10T18:42:12Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ECSMapper.state.get(com.warsheep.scamp.processors.Entity)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((state.state) != (StateComponent.State.DEAD)) { com.warsheep.scamp.processors.DamageableComponent damageable = ECSMapper.damage.get(entity); if (damageable != null) { damageable.currentHealth -= damageEffect.damage; com.warsheep.scamp.processors.DropComponent dropComponent = ECSMapper.drop.get(entity); if (((damageable.currentHealth) <= 0) && (dropComponent != null)) { com.warsheep.scamp.processors.LevelComponent levelComp = ECSMapper.level.get(casterEntity); if (levelComp != null) { levelComp.experiencePoints += dropComponent.experience; if ((dropComponent.itemDrop) != null) { } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/9058/buggy-version/core.src.com.warsheep.scamp.processors.SpellCastProcessor.java", "BodyUseAPI": [], "Fixed commit": "a9c1f2a3fc3e00bb666e3fddb9f7c9046ed8b525", "Url": "https://api.github.com/repos/warreq/Ready-Set-Rogue", "Date": "2014-12-13T11:33:49Z"},
{"Line": "=>536", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (abiListQuery) { if (((args.length) - curArg) > 0) { throw new java.lang.IllegalArgumentException(\"Unexpected arguments after --query-abi-list.\"); } }else { if (!seenRuntimeArgs) { throw new java.lang.IllegalArgumentException((\"Unexpected argument : \" + (args[curArg]))); } remainingArgs = new java.lang.String[(args.length) - curArg]; java.lang.System.arraycopy(args, curArg, remainingArgs, 0, remainingArgs.length); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3874/buggy-version/core.java.com.android.internal.os.ZygoteConnection.java", "BodyUseAPI": [], "Fixed commit": "0a7936b7c54fb7dff0406a40452cb0242f66a067", "Url": "https://api.github.com/repos/aosp-mirror/platform_frameworks_base", "Date": "2015-02-19T10:17:31Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!retrieved) throw new java.lang.Exception(\"Game creation failed after 5 trials\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/608/buggy-version/app.models.game.GameFactory.java", "BodyUseAPI": [], "Fixed commit": "07e24efad38a8096ce9b733c5a84c0ab3f34fee8", "Url": "https://api.github.com/repos/pasinipolimi/Sketchness", "Date": "2014-05-02T16:03:06Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.Sketchness.getLocalUser(session())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (localUser != null) { final java.lang.String username = localUser.name; models.IsOnline.keepOnline(username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/608/buggy-version/app.controllers.Sketchness.java", "BodyUseAPI": [], "Fixed commit": "07e24efad38a8096ce9b733c5a84c0ab3f34fee8", "Url": "https://api.github.com/repos/pasinipolimi/Sketchness", "Date": "2014-05-02T16:03:06Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.kit.joana.wala.core.SDGBuilder.getPDGforMethod(com.ibm.wala.ipa.callgraph.CGNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (allocPdg == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2785/buggy-version/wala.joana.wala.core.src.edu.kit.joana.wala.core.AllocationSiteFinder.java", "BodyUseAPI": [], "Fixed commit": "1675dc80d8b7126dc31f6eb5576316885e71e6a2", "Url": "https://api.github.com/repos/jgf/joana", "Date": "2014-05-20T14:53:10Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.chiptrip.tvsettings.MainActivity.mIsFinsined) { com.chiptrip.tvsettings.MainActivity.mIsFinsined = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7821/buggy-version/src.com.chiptrip.tvsettings.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "84641a5bd6e74a6647c708198e3fcd4c9a3d206c", "Url": "https://api.github.com/repos/dd403161681/GLBoxSetting", "Date": "2017-08-03T10:38:58Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.firebase.database.DataSnapshot.getValue(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (user != null) { timber.log.Timber.d((\"Loaded profile data for %s\" + uid)); android.widget.Toast.makeText(getApplicationContext(), java.lang.String.format(\"Welcome, %s!\", user.displayName), Toast.LENGTH_SHORT).show(); }else { timber.log.Timber.w(\"Could not load profile for user %s, may be during account creation\", uid); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/556/buggy-version/app.src.main.java.org.naturenet.NatureNetApplication.java", "BodyUseAPI": ["android.widget.Toast.makeText(getApplicationContext(),java.lang.String,Toast.LENGTH_SHORT)", "android.widget.Toast.makeText(getApplicationContext(), java.lang.String.format(\"Welcome, %s!\", user.displayName), Toast.LENGTH_SHORT).show()", "java.lang.String.format(java.lang.String,user.displayName)"], "Fixed commit": "73c97f25b8d05cccaca6186855c88863a27175ed", "Url": "https://api.github.com/repos/rigotre7/naturenet-android-app", "Date": "2017-03-22T20:27:12Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (excludeColumns.contains(column)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1504/buggy-version/src.main.java.com.sop4j.dbutils.QueryRunner.java", "BodyUseAPI": [], "Fixed commit": "ef30e6c766a5d5162ee7a59bee9e3ae422ad3055", "Url": "https://api.github.com/repos/wspeirs/sop4j-dbutils", "Date": "2014-05-22T01:10:41Z"},
{"Line": "=>769", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index < 0) || (index >= (valueCount))) { throw new java.lang.IllegalArgumentException((((((\"Expected index \" + index) + \" to \") + \"be greater than 0 and less than the maximum value count \") + \"of \") + (valueCount))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/372/buggy-version/src.main.java.com.jakewharton.disklrucache.DiskLruCache.java", "BodyUseAPI": [], "Fixed commit": "401c9c9797a6e1d0987a634ec993376d8870fcab", "Url": "https://api.github.com/repos/JakeWharton/DiskLruCache", "Date": "2014-06-30T14:36:03Z"},
{"Line": "=>818", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.util.Map<java.lang.String, java.lang.Object>>.getKey()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(bCommands.contains(bCommand))) { bCommands.add(bCommand); }else { for (java.lang.String alias : ((java.util.List<java.lang.String>) (aliases))) { if (!(bCommands.contains(alias))) { bCommands.add(alias); bCommand = alias; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6289/buggy-version/src.main.java.blue.lapis.pore.impl.PoreServer.java", "BodyUseAPI": ["java.util.List<java.lang.String>.contains(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "9fbffc353e4bb17e6dcd4d50c6a1789131aba880", "Url": "https://api.github.com/repos/Lamp-Post/Pore", "Date": "2015-05-03T10:58:57Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.github.obase.mysql.config.ConfigSAXParser.ELEM_SQL.equals(localName)) { if ((config.sqls.put(id, com.github.obase.mysql.config.ConfigSAXParser.filterWhiteSpaces(content))) != null) { throw new com.github.obase.MessageException(com.github.obase.mysql.MysqlErrno.SOURCE, com.github.obase.mysql.MysqlErrno.SQL_CONFIG_DUPLICATE, (((\"Duplicate sql id: \" + (config.namespace)) + '.') + (id))); } content.setLength(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4055/buggy-version/obase-mysql.src.main.java.com.github.obase.mysql.config.ConfigSAXParser.java", "BodyUseAPI": [], "Fixed commit": "0561f278cd241203f23d8b5dbf90d62c285990a8", "Url": "https://api.github.com/repos/obase/java", "Date": "2017-09-19T10:20:16Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (size <= 0) { throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6011/buggy-version/core.src.main.java.org.ehcache.core.config.SizedResourcePoolImpl.java", "BodyUseAPI": [], "Fixed commit": "c216a7864a52c8785f3c5b618fbd76c4cd90f25e", "Url": "https://api.github.com/repos/GaryWKeim/ehcache3", "Date": "2016-07-18T09:36:29Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (homeMatch.matches()) { newDir = new java.io.File(java.lang.System.getProperty(\"user.dir\")); }else if ((commandLine.charAt(3)) == '/') { newDir = new java.io.File(newDirStr); }else { newDir = new java.io.File(((pwd + \"/\") + newDirStr)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1290/buggy-version/src.CSE.Lab1.SimpleShell.java", "BodyUseAPI": [], "Fixed commit": "829aa8606c7f839375136f087472ac3793a9ee96", "Url": "https://api.github.com/repos/TenzinCHW/MeowLab", "Date": "2017-02-01T09:12:15Z"},
{"Line": "=>900", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mIsSamsungCdma) { android.util.Log.d(com.android.internal.telephony.LOG_TAG, \"Set ril.cdma.data_state=0 to make sure pppd_cdma is stopped.\"); android.os.SystemProperties.set(\"ril.cdma.data_state\", \"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3274/buggy-version/telephony.java.com.android.internal.telephony.SamsungRIL.java", "BodyUseAPI": [], "Fixed commit": "3e45ecbd82b0c3c0777bce457a4f5441103930c8", "Url": "https://api.github.com/repos/Kali-/android_frameworks_base", "Date": "2012-03-09T05:50:44Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((analyseSpot(pos, time)) != (hallChar)) { storageMap.get(time)[pos.x][pos.y] = boxChar; char[][] storageChanges = analyseSurrounding(pos, time); applyChanges(pos, storageChanges, time); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4489/buggy-version/source.Storage.java", "BodyUseAPI": ["source.Storage.applyChanges(source.Position,char[][],int)", "java.util.List<char[][]>.get(int)", "source.Storage.analyseSurrounding(source.Position,int)"], "Fixed commit": "c5b875ab9fab6b68d26345937bfba6b9a912b199", "Url": "https://api.github.com/repos/N33t/WallE", "Date": "2016-05-07T09:56:13Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((io.getBitno()) >= 0) && ((io.getBitno()) < 8)) { c.set(io.getBitno(), dout); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3179/buggy-version/src.main.java.se.marell.dvesta.iodevices.k8055.impl.K8055IoController.java", "BodyUseAPI": ["K8055Configuration.BitIO.getBitno()", "java.util.List<se.marell.dvesta.iodevices.k8055.impl.BitOutput>.set(io.getBitno(),se.marell.dvesta.iodevices.k8055.impl.BitOutput)"], "Fixed commit": "ff913d4bc21662db2b403015c838d9fad05c608c", "Url": "https://api.github.com/repos/dmarell/dvesta", "Date": "2016-03-07T05:39:30Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((io.getBitno()) >= 0) && ((io.getBitno()) < 6)) { c.set(io.getBitno(), din); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3179/buggy-version/src.main.java.se.marell.dvesta.iodevices.k8055.impl.K8055IoController.java", "BodyUseAPI": ["K8055Configuration.BitIO.getBitno()", "java.util.List<se.marell.dvesta.iodevices.k8055.impl.BitInput>.set(io.getBitno(),se.marell.dvesta.iodevices.k8055.impl.BitInput)"], "Fixed commit": "ff913d4bc21662db2b403015c838d9fad05c608c", "Url": "https://api.github.com/repos/dmarell/dvesta", "Date": "2016-03-07T05:39:30Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isVertical) { mPhoto.setScaleType(ImageView.ScaleType.FIT_XY); }else { mPhoto.setScaleType(ImageView.ScaleType.CENTER_INSIDE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6946/buggy-version/camera.src.main.java.com.cjt2325.cameralibrary.JCameraView.java", "BodyUseAPI": [], "Fixed commit": "8cd0772808e16a6853f96514386c7ed53fcc7c3c", "Url": "https://api.github.com/repos/CJT2325/CameraView", "Date": "2017-06-08T10:32:58Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isMovie(siblingFile))) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5161/buggy-version/src.main.java.crema.service.impl.MovieFileDiscoveryServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "945455153ee734673d441f62d7da0e8b24ff2824", "Url": "https://api.github.com/repos/jasonandersen/crema", "Date": "2013-12-30T23:48:05Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (movie.hasMultipleParts()) { numFiles = java.lang.String.format(\" (1st of %d files)\", movie.getMediaFiles().size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5161/buggy-version/src.main.java.crema.view.pivot.domain.MovieView.java", "BodyUseAPI": ["movie.getMediaFiles().size()", "crema.domain.Movie.getMediaFiles()", "java.lang.String.format(java.lang.String,movie.getMediaFiles().size())"], "Fixed commit": "945455153ee734673d441f62d7da0e8b24ff2824", "Url": "https://api.github.com/repos/jasonandersen/crema", "Date": "2013-12-30T23:48:05Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof play.Invoker.Suspend) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/9220/buggy-version/app.controllers.hermes.ErrorMailer.java", "BodyUseAPI": [], "Fixed commit": "a0fd46ae1530d8816aac418b3821cdc86069e095", "Url": "https://api.github.com/repos/maklemenz/errorMailer", "Date": "2012-07-25T12:03:20Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<java.lang.String, java.lang.String>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (imageUrl != null) { com.squareup.picasso.Picasso.with(this).load(imageUrl).placeholder(R.drawable.photo).error(R.drawable.photo).noFade().into(imageView); }else { com.squareup.picasso.Picasso.with(this).load(R.drawable.photo).placeholder(R.drawable.photo).error(R.drawable.photo).noFade().into(imageView); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4985/buggy-version/TheRedJournal.app.src.main.java.com.example.alphacr.theredjournal.UserProfile.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(this).load(imageUrl).placeholder(R.drawable.photo).error(R.drawable.photo)", "com.squareup.picasso.Picasso.with(this).load(imageUrl).placeholder(R.drawable.photo)", "com.squareup.picasso.Picasso.with(this).load(imageUrl).placeholder(R.drawable.photo).error(R.drawable.photo).noFade()", "com.squareup.picasso.Picasso.with(this).load(imageUrl).placeholder(R.drawable.photo).error(R.drawable.photo).noFade().into(de.hdodenhof.circleimageview.CircleImageView)", "com.squareup.picasso.Picasso.with(this).load(java.lang.String)"], "Fixed commit": "42f633271e49790083f135f8228d926c8295f1d8", "Url": "https://api.github.com/repos/galeslash/Aegis", "Date": "2016-11-05T04:25:01Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getStringSet(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (bookJ != null) { for (java.lang.String r : bookJ) { book.addRecipe(x.desjsonify(r)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5584/buggy-version/android-client.MaoNaMassa.src.br.edu.ufcg.maonamassa.SessionManager.java", "BodyUseAPI": [], "Fixed commit": "086e38ff7e781e48c4343bd2497dca910fcbc553", "Url": "https://api.github.com/repos/leticiawanderley/projeto-es", "Date": "2014-08-25T02:29:39Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(nodeNames.contains(((org.w3c.dom.Node) (child)).getNodeName()))) nodeNames.add(((org.w3c.dom.Node) (child)).getNodeName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5502/buggy-version/src.main.java.com.ibm.spss.hive.serde2.xml.processor.java.JavaXmlProcessor.java", "BodyUseAPI": ["org.w3c.dom.Node.getNodeName()", "java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "a700dd26c541466a7f2ef27a65e5465cffd5868f", "Url": "https://api.github.com/repos/jabberwockkie/Hive-XML-SerDe", "Date": "2017-01-26T21:56:35Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((switchCompat) != null) && ((switchCompat.isChecked()) != checked)) { switchCompat.setChecked(checked); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1746/buggy-version/preference-v7.src.main.java.com.takisoft.fix.support.v7.preference.SwitchPreferenceCompat.java", "BodyUseAPI": ["android.support.v7.widget.SwitchCompat.setChecked(boolean)"], "Fixed commit": "14c7bf17a4091355cbc1d9bf163d634c6010ea8b", "Url": "https://api.github.com/repos/Gericop/Android-Support-Preference-V7-Fix", "Date": "2016-05-25T21:12:43Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((switchCompat) != null) && ((switchCompat.isChecked()) != (this.mChecked))) { switchCompat.setChecked(this.mChecked); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1746/buggy-version/preference-v7.src.main.java.com.takisoft.fix.support.v7.preference.SwitchPreferenceCompat.java", "BodyUseAPI": ["android.support.v7.widget.SwitchCompat.setChecked(this.mChecked)"], "Fixed commit": "14c7bf17a4091355cbc1d9bf163d634c6010ea8b", "Url": "https://api.github.com/repos/Gericop/Android-Support-Preference-V7-Fix", "Date": "2016-05-25T21:12:43Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((refs) != null) && ((refs.size()) > 0)) { for (com.a.eye.skywalking.trace.TraceSegmentRef ref : refs) { segmentBuilder.addRefs(ref.serialize()); } for (com.a.eye.skywalking.trace.Span span : spans) { segmentBuilder.addSpans(span.serialize()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8089/buggy-version/skywalking-commons.skywalking-trace.src.main.java.com.a.eye.skywalking.trace.TraceSegment.java", "BodyUseAPI": [], "Fixed commit": "52883b8f43369cbb7dca9bdb51a748ee993ab94d", "Url": "https://api.github.com/repos/apache/incubator-skywalking", "Date": "2017-03-05T13:10:51Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((primaryRef) != null) { segmentBuilder.setPrimaryRef(primaryRef.serialize()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8089/buggy-version/skywalking-commons.skywalking-trace.src.main.java.com.a.eye.skywalking.trace.TraceSegment.java", "BodyUseAPI": [], "Fixed commit": "52883b8f43369cbb7dca9bdb51a748ee993ab94d", "Url": "https://api.github.com/repos/apache/incubator-skywalking", "Date": "2017-03-05T13:10:51Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.a.eye.skywalking.trace.proto.SegmentMessage.getPrimaryRef()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (messagePrimaryRef != null) { (primaryRef = new com.a.eye.skywalking.trace.TraceSegmentRef()).deserialize(messagePrimaryRef); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8089/buggy-version/skywalking-commons.skywalking-trace.src.main.java.com.a.eye.skywalking.trace.TraceSegment.java", "BodyUseAPI": ["(primaryRef = new com.a.eye.skywalking.trace.TraceSegmentRef()).deserialize(com.a.eye.skywalking.trace.proto.SegmentRefMessage)"], "Fixed commit": "52883b8f43369cbb7dca9bdb51a748ee993ab94d", "Url": "https://api.github.com/repos/apache/incubator-skywalking", "Date": "2017-03-05T13:10:51Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(m.containsKey(\"duplicate\"))) { duplicate = true; }else if (m.get(\"duplicate\").equals(message.duplicate)) { duplicate = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/851/buggy-version/Lab0.src.MessagePasser.java", "BodyUseAPI": ["java.lang.Object.equals(message.duplicate)", "java.util.Map.get(java.lang.String)"], "Fixed commit": "af39a58b4ba82518240d5224a40bab17987b1ba6", "Url": "https://api.github.com/repos/siyuanlyn/DistributedSystemLab0", "Date": "2014-01-19T21:17:17Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(m.containsKey(\"duplicate\"))) { duplicate = true; }else if (m.get(\"duplicate\").equals(message.duplicate)) { duplicate = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/851/buggy-version/Lab0.src.MessagePasser.java", "BodyUseAPI": ["java.lang.Object.equals(message.duplicate)", "java.util.Map.get(java.lang.String)"], "Fixed commit": "af39a58b4ba82518240d5224a40bab17987b1ba6", "Url": "https://api.github.com/repos/siyuanlyn/DistributedSystemLab0", "Date": "2014-01-19T21:17:17Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jenkinsci.plugins.workflow.graphanalysis.ForkScanner.getNodeType(org.jenkinsci.plugins.workflow.graph.BlockStartNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (type == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4191/buggy-version/src.main.java.org.jenkinsci.plugins.workflow.graphanalysis.ForkScanner.java", "BodyUseAPI": [], "Fixed commit": "82eae2cb4fba1c690ae1aa5c8ad5d21dd22c6f0e", "Url": "https://api.github.com/repos/svanoort/workflow-api-plugin", "Date": "2017-02-22T16:02:55Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jenkinsci.plugins.workflow.graphanalysis.ForkScanner.findLastStartedNode(java.util.List<org.jenkinsci.plugins.workflow.graph.FlowNode>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (last != null) { visitor.parallelEnd(this.currentParallelStartNode, last, this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4191/buggy-version/src.main.java.org.jenkinsci.plugins.workflow.graphanalysis.ForkScanner.java", "BodyUseAPI": ["org.jenkinsci.plugins.workflow.graphanalysis.SimpleChunkVisitor.parallelEnd(org.jenkinsci.plugins.workflow.graph.FlowNode,org.jenkinsci.plugins.workflow.graph.FlowNode,org.jenkinsci.plugins.workflow.graphanalysis.ForkScanner)"], "Fixed commit": "82eae2cb4fba1c690ae1aa5c8ad5d21dd22c6f0e", "Url": "https://api.github.com/repos/svanoort/workflow-api-plugin", "Date": "2017-02-22T16:02:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lastcar.dashboard.get_start_ccs()) && (!(car.dashboard.get_start_ccs()))) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2919/buggy-version/src.CruiseControlSystem.java", "BodyUseAPI": [], "Fixed commit": "fd7fae538ee7f1e4ae07f364fce4ae0dda1cd5df", "Url": "https://api.github.com/repos/kazzacarrot/Inf2c-se-Cruise-Control-System", "Date": "2014-11-10T18:17:39Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (newLabel != null) { incrementTagNoteCount(newLabel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5339/buggy-version/app.src.main.java.productivity.notes.rivisto.OpenNoteActivity.java", "BodyUseAPI": ["productivity.notes.rivisto.OpenNoteActivity.incrementTagNoteCount(java.lang.String)"], "Fixed commit": "e9a9de9b75a6ab37cf9dd0e214999901b58129a5", "Url": "https://api.github.com/repos/ParitoshBh/Rivisto-Android", "Date": "2016-10-19T23:33:38Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (oldLabel != null) { decrementTagNoteCount(oldLabel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5339/buggy-version/app.src.main.java.productivity.notes.rivisto.OpenNoteActivity.java", "BodyUseAPI": ["productivity.notes.rivisto.OpenNoteActivity.decrementTagNoteCount(java.lang.String)"], "Fixed commit": "e9a9de9b75a6ab37cf9dd0e214999901b58129a5", "Url": "https://api.github.com/repos/ParitoshBh/Rivisto-Android", "Date": "2016-10-19T23:33:38Z"},
{"Line": "=>156", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["productivity.notes.rivisto.OpenNoteActivity.extractTag(noteContent.getText().toString())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (noteLabel != null) { incrementTagNoteCount(noteLabel); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5339/buggy-version/app.src.main.java.productivity.notes.rivisto.OpenNoteActivity.java", "BodyUseAPI": ["productivity.notes.rivisto.OpenNoteActivity.incrementTagNoteCount(java.lang.String)"], "Fixed commit": "e9a9de9b75a6ab37cf9dd0e214999901b58129a5", "Url": "https://api.github.com/repos/ParitoshBh/Rivisto-Android", "Date": "2016-10-19T23:33:38Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (alg == null) { throw new java.lang.IllegalStateException(\"alg result is null!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7465/buggy-version/src.main.java.BaseballElimination.java", "BodyUseAPI": [], "Fixed commit": "01d7ae782acd70c75cae18aa17c4dc169e8c2e85", "Url": "https://api.github.com/repos/lostMohican/baseball_calculation", "Date": "2014-12-10T20:22:54Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Model.getStoneNumber(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (stoneNumber == 0) { java.lang.System.out.println(\"Please pick a pit with stones inside. \"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2870/buggy-version/src.MancalaPanel.java", "BodyUseAPI": [], "Fixed commit": "58906f583f25b5257042381f41dd5b4ed109e362", "Url": "https://api.github.com/repos/dang3/Mancala", "Date": "2017-11-27T21:45:00Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.HttpURLConnection.getContentLength()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (pageSize == (-1)) { return \"The size of the web page is unpublished.\"; }else { java.lang.String size = hrbCount(pageSize, false); java.lang.System.out.println(size); retVal = (\"The size of the web page is: \" + size) + \"\\n\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/250/buggy-version/src.edu.virginia.cs4240.webmetrics.modules.PageModule.java", "BodyUseAPI": ["edu.virginia.cs4240.webmetrics.modules.PageModule.hrbCount(long,boolean)"], "Fixed commit": "549a3a8ce76aaec3275f680fc3e3d9265fe1dff5", "Url": "https://api.github.com/repos/samiam14/cs4240", "Date": "2011-12-06T05:35:56Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.yammer.dropwizard.cli.Options.getOptionGroup(com.yammer.dropwizard.cli.Option)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (group != null) { options.addOptionGroup(group); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8521/buggy-version/dropwizard-core.src.main.java.com.yammer.dropwizard.cli.Command.java", "BodyUseAPI": ["com.yammer.dropwizard.cli.Options.addOptionGroup(com.yammer.dropwizard.cli.OptionGroup)"], "Fixed commit": "f2a1976917f391ba1fb8cb044690172565f8d416", "Url": "https://api.github.com/repos/nhuray/dropwizard", "Date": "2012-11-05T13:08:45Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (npc.isSpawned()) { net.minecraft.server.EntityLiving entity = npc.getHandle(); entity.motX = entity.motY = entity.motZ = 0.0F; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4085/buggy-version/src.main.java.net.citizensnpcs.npc.ai.CitizensNavigator.java", "BodyUseAPI": ["net.citizensnpcs.npc.CitizensNPC.getHandle()"], "Fixed commit": "41ba6b1f645dea40736a7d0a90e9146244737640", "Url": "https://api.github.com/repos/CitizensDev/Citizens2", "Date": "2012-09-24T08:40:13Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pingus.vent.Model.ChatArrayAdapter.getItem(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (chatMessageObj == null) { return row; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1305/buggy-version/app.src.main.java.com.pingus.vent.Model.ChatArrayAdapter.java", "BodyUseAPI": [], "Fixed commit": "6fed8e2dc609c7db1071a61e7929b1af47b177af", "Url": "https://api.github.com/repos/darrencl95/Vent", "Date": "2017-04-03T21:23:58Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((username) == null) { username = \"no_username\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1305/buggy-version/app.src.main.java.com.pingus.vent.Model.ChatArrayAdapter.java", "BodyUseAPI": [], "Fixed commit": "6fed8e2dc609c7db1071a61e7929b1af47b177af", "Url": "https://api.github.com/repos/darrencl95/Vent", "Date": "2017-04-03T21:23:58Z"},
{"Line": "=>259", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (line.trim().isEmpty()) { inCodeTagCodeBlock = false; continue; }else { codeBlockEndsWithNextLine = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/383/buggy-version/src.de.unitrier.st.soposthistory.history.PostHistory.java", "BodyUseAPI": [], "Fixed commit": "29df4eda29d8bec3c9c12fd21e082a2809f57f56", "Url": "https://api.github.com/repos/sotorrent/posthistory-extractor", "Date": "2017-10-12T13:33:58Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isStockFragment) { android.support.v4.content.LocalBroadcastManager.getInstance(activity).registerReceiver(surveyReceiver, new android.content.IntentFilter(org.eyeseetea.malariacare.services.SurveyService.GET_SURVEYS_FROM_PROGRAM)); }else { super.registerSurveyReceiver(activity, surveyReceiver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4246/buggy-version/app.src.cnm.java.org.eyeseetea.malariacare.strategies.DashboardUnsentFragmentStrategy.java", "BodyUseAPI": [], "Fixed commit": "30d3ba57440a672b56e723ca0377ec0d49c41e34", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2017-12-11T09:58:27Z"},
{"Line": "=>955", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (paymentExternalKey != null) { paymentTransaction.setPaymentExternalKey(paymentExternalKey); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5277/buggy-version/src.main.java.org.killbill.billing.client.KillBillClient.java", "BodyUseAPI": ["org.killbill.billing.client.model.PaymentTransaction.setPaymentExternalKey(java.lang.String)"], "Fixed commit": "179222c520276b6a08ad5d5e70f17030df161347", "Url": "https://api.github.com/repos/killbill/killbill-client-java", "Date": "2015-07-23T18:57:03Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mPaused) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4918/buggy-version/app.src.main.java.com.shockn745.moovin5.motivation.recyclerview.animation.SwipeDismissRecyclerViewTouchListener.java", "BodyUseAPI": [], "Fixed commit": "526b4c5a26507a224b820525a1fdb3f88f3d7ec9", "Url": "https://api.github.com/repos/FlorianKempenich/MoovIn5", "Date": "2015-05-16T14:59:06Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hub.sam.dmx.DbxPreProcessor.processExtensionDefinitionsOutsideToInside(java.lang.String,org.eclipse.core.runtime.IPath)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (extensionDefinitionsAdded) { extensionDefinitionApplier.syntaxChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8209/buggy-version/dev-plugins.hub.sam.dmx.src.hub.sam.dmx.DbxPreProcessor.java", "BodyUseAPI": [], "Fixed commit": "794f38ced9d7bad7bbdd1c5a413dd72e2de2207c", "Url": "https://api.github.com/repos/ablunk/dmx", "Date": "2014-08-22T11:30:12Z"},
{"Line": "=>563", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (location == null) { homeLocations.clear(); }else { homeLocations.put(number, new org.bukkit.Location(location.getWorld(), location.getBlockX(), location.getBlockY(), location.getBlockZ())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2409/buggy-version/src.com.wasteofplastic.askyblock.Players.java", "BodyUseAPI": ["org.bukkit.Location.getBlockY()", "org.bukkit.Location.getWorld()", "java.util.HashMap<java.lang.Integer, org.bukkit.Location>.put(int,org.bukkit.Location)", "org.bukkit.Location.getBlockZ()", "org.bukkit.Location.getBlockX()"], "Fixed commit": "850fea723522fde48fea39f00e0080350454ced4", "Url": "https://api.github.com/repos/tastybento/askyblock", "Date": "2015-03-15T00:14:34Z"},
{"Line": "=>808", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.projectkorra.ProjectKorra.ComboManager.checkForValidCombo(event.getEntity().getKiller())) != null) { java.lang.String combo = com.projectkorra.ProjectKorra.ComboManager.checkForValidCombo(event.getEntity().getKiller()).getName(); if (((combo != null) && (!(combo.isEmpty()))) && (combo.equalsIgnoreCase(ability))) { element = com.projectkorra.ProjectKorra.GeneralMethods.getAbilityElement(com.projectkorra.ProjectKorra.GeneralMethods.getLastUsedAbility(event.getEntity().getKiller(), false)).name(); ability = element + \"Combo\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8308/buggy-version/src.com.projectkorra.ProjectKorra.PKListener.java", "BodyUseAPI": ["org.bukkit.event.entity.PlayerDeathEvent.getEntity()", "com.projectkorra.ProjectKorra.GeneralMethods.getAbilityElement(com.projectkorra.ProjectKorra.GeneralMethods.getLastUsedAbility(event.getEntity().getKiller(), false)).name()", "event.getEntity().getKiller()", "org.bukkit.event.entity.PlayerDeathEvent.getEntity()", "com.projectkorra.ProjectKorra.ComboManager.checkForValidCombo(event.getEntity().getKiller())", "event.getEntity().getKiller()", "com.projectkorra.ProjectKorra.GeneralMethods.getAbilityElement(com.projectkorra.ProjectKorra.GeneralMethods.getLastUsedAbility(event.getEntity().getKiller(), false))", "com.projectkorra.ProjectKorra.GeneralMethods.getLastUsedAbility(event.getEntity().getKiller(),boolean)", "com.projectkorra.ProjectKorra.ComboManager.checkForValidCombo(event.getEntity().getKiller()).getName()"], "Fixed commit": "4cfd3872de8ef368ad35032d44a180e52667fd3e", "Url": "https://api.github.com/repos/Alex-The-Coder/ProjectKorra", "Date": "2015-06-18T00:26:22Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.DataAccessor.getUserAuthorList(com.pratilipi.filter.AccessTokenFilter.getAccessToken().getUserId(),java.util.List<java.lang.Long>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((userAuthorList.size()) != 0) for (int i = 0; i < (authorIdList.size()); i++) if (((userAuthorList.get(i)) != null) && (userAuthorList.get(i).isFollowing())) userDataList.get(i).getAuthor().setFollowing(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5831/buggy-version/src.main.java.com.pratilipi.data.util.UserAuthorDataUtil.java", "BodyUseAPI": ["java.util.List<com.pratilipi.data.type.UserAuthor>.get(int)", "userAuthorList.get(i).isFollowing()", "java.util.List<com.pratilipi.data.type.UserAuthor>.get(int)"], "Fixed commit": "8408e28ebfd83629b2c5d2cd992d5bf1a6ce9009", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2016-07-15T10:23:11Z"},
{"Line": "=>709", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (dr.inference.operators.AdaptableVarianceMultivariateNormalOperator.DEBUG) { java.lang.System.err.println(\"Old parser\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4892/buggy-version/src.dr.inference.operators.AdaptableVarianceMultivariateNormalOperator.java", "BodyUseAPI": [], "Fixed commit": "391a03b31f41214dffed89133550cc605a4b14d4", "Url": "https://api.github.com/repos/beast-dev/beast-mcmc", "Date": "2017-04-28T16:15:14Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((config != null) && ((config.getModuleNamingScheme()) != null)) && ((config.getModuleNamingScheme().length()) > 0)) { java.lang.String defaultModuleName = config.getModuleNamingScheme().replaceAll(java.util.regex.Pattern.quote(\"${modulename}\"), module.getName()); useProjectDefaultModuleNameRadioButton.setText(((\"Use default (\" + defaultModuleName) + \")\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8472/buggy-version/src.com.mediaworx.intellij.opencmsplugin.configuration.OpenCmsModuleConfigurationForm.java", "BodyUseAPI": [], "Fixed commit": "5ef3a6de392b45c7f590e8302d2f10c57c7429cb", "Url": "https://api.github.com/repos/mediaworx/opencms-intellijplugin", "Date": "2014-10-22T09:21:20Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (savedInstanceState.containsKey(com.project.movies.popular.popularmovies.MainActivity.INSTANCE_STATE_ORDER_LIST_KEY)) { movieOrderType = com.project.movies.popular.popularmovies.MovieOrderType.getFromString(savedInstanceState.getString(com.project.movies.popular.popularmovies.MainActivity.INSTANCE_STATE_ORDER_LIST_KEY)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3322/buggy-version/app.src.main.java.com.project.movies.popular.popularmovies.MainActivity.java", "BodyUseAPI": ["com.project.movies.popular.popularmovies.MovieOrderType.getFromString(savedInstanceState.getString(com.project.movies.popular.popularmovies.MainActivity.INSTANCE_STATE_ORDER_LIST_KEY))", "android.os.Bundle.getString(java.lang.String)"], "Fixed commit": "d4fe340e116ec6998f1563aa07095fc8dd30d256", "Url": "https://api.github.com/repos/ordasf/popular-movies", "Date": "2017-04-03T22:05:42Z"},
{"Line": "=>658", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(gameOverLabel.isVisible())) { timeline.playFromStart(); moveGhostsStep(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1019/buggy-version/src.main.java.mainPackage.MazeGui.java", "BodyUseAPI": [], "Fixed commit": "b864bd40fef503746262cc0e416c0beaa5bd1c69", "Url": "https://api.github.com/repos/LGott/Pacman", "Date": "2016-06-02T02:33:18Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((LinkDetectionRunner.LAST_POSITION) > 0) (LinkDetectionRunner.LAST_POSITION)--;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3583/buggy-version/src.main.java.gr.iti.mklab.reveal.crawler.IndexingRunner.java", "BodyUseAPI": [], "Fixed commit": "2e5bc728a04fae26e36b6b2fa0dd45bb1425a38e", "Url": "https://api.github.com/repos/MKLab-ITI/reveal-media-webservice", "Date": "2015-05-12T09:30:11Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result.next()) { name = result.getString(\"kayttajanimi\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3950/buggy-version/src.main.java.tsoha.ystavapalvelu.models.message.ViestiDao.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "84e1b70cf4cc67cd5bf5f2f7ba076e4157a9509f", "Url": "https://api.github.com/repos/Zudoku/tsoha-ystavapalvelu", "Date": "2016-12-07T19:25:01Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.PreparedStatement.executeQuery()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result.next()) { name = result.getString(\"kayttajanimi\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3950/buggy-version/src.main.java.tsoha.ystavapalvelu.models.message.ViestiDao.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)"], "Fixed commit": "84e1b70cf4cc67cd5bf5f2f7ba076e4157a9509f", "Url": "https://api.github.com/repos/Zudoku/tsoha-ystavapalvelu", "Date": "2016-12-07T19:25:01Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(retrieveTrackGeometryFailDialog.isShowing())) { retrieveTrackGeometryFailDialog.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2473/buggy-version/UI_Code.TrainTrax.app.src.main.java.edu.uah.cpe.traintrax.MainActivity.java", "BodyUseAPI": ["android.app.AlertDialog.show()"], "Fixed commit": "54a9b8a21f7592be257ab30e9ac7db39aa81d94d", "Url": "https://api.github.com/repos/Rmadyun/CPE656TL", "Date": "2016-05-06T12:22:18Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((study.getAbstract()) != null) { label_Abstract_conteudo.setText(study.getAbstract()); }else { label_Abstract_conteudo.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3446/buggy-version/code.br.ufpe.cin.reviewer.ui.rcp.src.br.ufpe.cin.reviewer.ui.rcp.literaturereview.StudyAnalysisView.java", "BodyUseAPI": ["br.ufpe.cin.reviewer.model.common.Study.getAbstract()", "org.eclipse.swt.widgets.Label.setText(study.getAbstract())"], "Fixed commit": "f6d8b42cd12394b1a5e7f9380d6beb8fd436d1f6", "Url": "https://api.github.com/repos/bfsc/reviewer", "Date": "2013-05-15T18:34:43Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((study.getUrl()) != null) { label_Link_conteudo.setText(study.getUrl()); }else { label_Link_conteudo.setText(\"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3446/buggy-version/code.br.ufpe.cin.reviewer.ui.rcp.src.br.ufpe.cin.reviewer.ui.rcp.literaturereview.StudyAnalysisView.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Label.setText(study.getUrl())", "br.ufpe.cin.reviewer.model.common.Study.getUrl()"], "Fixed commit": "f6d8b42cd12394b1a5e7f9380d6beb8fd436d1f6", "Url": "https://api.github.com/repos/bfsc/reviewer", "Date": "2013-05-15T18:34:43Z"},
{"Line": "=>463", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (name.toLowerCase().startsWith(\"mel\")) { name = \"Melissa(heart)\"; }else if (name.toLowerCase().startsWith(\"ben\")) { name = \"Franklin\"; }else if (name.equals(\"\")) { name = \"YOUR_NAME_HERE\"; }else if (name.toLowerCase().contains(\"open\")) { name = \"TEN_YEAR_OLD_BOY\"; }else if (name.toLowerCase().contains(\"closed\")) { name = \"SOME_NOBODY\"; }else if (name.toLowerCase().contains(\"game created\")) { name = \"gamer\"; }else if (name.toLowerCase().contains(\"chess\")) { name = \"teamawesome\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1072/buggy-version/src.severalClientProject.MiniServer.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)", "java.lang.String.toLowerCase()"], "Fixed commit": "1e2764299f8773d2b21becff78e22fe42a7d8903", "Url": "https://api.github.com/repos/hidny/AIGameServer", "Date": "2015-10-29T19:36:57Z"},
{"Line": "=>446", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (giveFalseError && (response.equals(\"\"))) { response = \"evalExpr error(1): NOTE: Our program can handle more than 2 terms, the result is: \" + text; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7909/buggy-version/src.main.RatNum.java", "BodyUseAPI": [], "Fixed commit": "3e51405a630741adb0eca3a2fb109a2a261a5d1a", "Url": "https://api.github.com/repos/Serock3/RatNumTesting", "Date": "2016-12-08T20:00:19Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parts.length) > 3) { giveFalseError = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7909/buggy-version/src.main.RatNum.java", "BodyUseAPI": [], "Fixed commit": "3e51405a630741adb0eca3a2fb109a2a261a5d1a", "Url": "https://api.github.com/repos/Serock3/RatNumTesting", "Date": "2016-12-08T20:00:19Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((a.getPredictionString()) != null) && (a.getPredictionString().equalsIgnoreCase(\"bio\"))) assembly_string += (\"<table cellpadding=0 cellspacing=0><tr><td><span class='eppic-general-info-label-new'>Prediction</span></td><td>&nbsp;&nbsp;<span class='eppic-general-info-label-value-new' style='color:green'><b>\" + (a.getPredictionString())) + \"</b></span></td></tr>\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8196/buggy-version/eppic-wui.src.main.java.ch.systemsx.sybit.crkwebui.client.main.controllers.MainController.java", "BodyUseAPI": ["ch.systemsx.sybit.crkwebui.shared.model.Assembly.getPredictionString()"], "Fixed commit": "b46cdb47c3c0e122faf8d94832495b0b79d6967d", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2015-10-19T15:36:24Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getPdbInfo().getExpMethod()) != null) && (!(ch.systemsx.sybit.crkwebui.client.commons.appdata.ApplicationContext.getPdbInfo().getExpMethod().contains(\"NMR\")))) html_experiment_info += (((\"&nbsp;&nbsp;&nbsp;&nbsp;<span class='eppic-general-info-label-new'>\" + (AppPropertiesManager.CONSTANTS.info_panel_spacegroup())) + \"</span> <span class='eppic-general-info-label-value-new'>\") + (resultsData.getSpaceGroup())) + \"</span>\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8196/buggy-version/eppic-wui.src.main.java.ch.systemsx.sybit.crkwebui.client.main.controllers.MainController.java", "BodyUseAPI": [], "Fixed commit": "b46cdb47c3c0e122faf8d94832495b0b79d6967d", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2015-10-19T15:36:24Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((a.getPredictionString()) != null) && (a.getPredictionString().equalsIgnoreCase(\"xtal\"))) assembly_string += (\"<table cellpadding=0 cellspacing=0><tr><td><span class='eppic-general-info-label-new'>Prediction</span></td><td>&nbsp;&nbsp;<span class='eppic-general-info-label-value-new' style='color:red'><b>\" + (a.getPredictionString())) + \"</b></span></td></tr>\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8196/buggy-version/eppic-wui.src.main.java.ch.systemsx.sybit.crkwebui.client.main.controllers.MainController.java", "BodyUseAPI": ["ch.systemsx.sybit.crkwebui.shared.model.Assembly.getPredictionString()"], "Fixed commit": "b46cdb47c3c0e122faf8d94832495b0b79d6967d", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2015-10-19T15:36:24Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ch.systemsx.sybit.crkwebui.shared.model.PdbInfo.getResolution()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (resolution < 99) html_experiment_info += (((\"&nbsp;&nbsp;&nbsp;&nbsp;<span class='eppic-general-info-label-new'>\" + (AppPropertiesManager.CONSTANTS.info_panel_resolution())) + \"</span> <span class='eppic-general-info-label-value-new'>\") + (com.google.gwt.i18n.client.NumberFormat.getFormat(\"0.0\").format(resultsData.getResolution()))) + \"</span>\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8196/buggy-version/eppic-wui.src.main.java.ch.systemsx.sybit.crkwebui.client.main.controllers.MainController.java", "BodyUseAPI": [], "Fixed commit": "b46cdb47c3c0e122faf8d94832495b0b79d6967d", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2015-10-19T15:36:24Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Double.parseDouble(com.google.gwt.i18n.client.NumberFormat.getFormat(\"0.00\").format(resultsData.getRfreeValue()))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (rfree < 1) html_experiment_info += (((\"&nbsp;&nbsp;&nbsp;&nbsp;<span class='eppic-general-info-label-new'>\" + (AppPropertiesManager.CONSTANTS.info_panel_rfree())) + \"</span> <span class='eppic-general-info-label-value-new'>\") + (com.google.gwt.i18n.client.NumberFormat.getFormat(\"0.00\").format(resultsData.getRfreeValue()))) + \"</span>\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8196/buggy-version/eppic-wui.src.main.java.ch.systemsx.sybit.crkwebui.client.main.controllers.MainController.java", "BodyUseAPI": [], "Fixed commit": "b46cdb47c3c0e122faf8d94832495b0b79d6967d", "Url": "https://api.github.com/repos/eppic-team/eppic", "Date": "2015-10-19T15:36:24Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Properties.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (val == null) val = props.getProperty(ca.nrc.cadc.dlm.handlers.DataLinkServiceResolver.DEFAULT_KEY);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8919/buggy-version/cadc-download-manager.src.main.java.ca.nrc.cadc.dlm.handlers.DataLinkServiceResolver.java", "BodyUseAPI": [], "Fixed commit": "109e3a38fbae68baacbd38a2cb03b4e887c49448", "Url": "https://api.github.com/repos/opencadc/apps", "Date": "2016-12-07T16:40:08Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((savedBlock.getType()) == (org.bukkit.Material.PORTAL)) { org.bukkit.block.Block realBlock = baseLocation.clone().add(savedBlock.getRelativeX(), savedBlock.getRelativeY(), savedBlock.getRelativeZ()).getBlock(); portals.add(realBlock); }else if (savedBlock.isAttachable()) { doLater.add(0, savedBlock); }else { org.bukkit.block.Block realBlock = baseLocation.clone().add(savedBlock.getRelativeX(), savedBlock.getRelativeY(), savedBlock.getRelativeZ()).getBlock(); realBlock.setType(savedBlock.getType()); realBlock.setData(savedBlock.getData()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3389/buggy-version/src.me.jacobcrofts.simplestructureloader.SimpleStructureLoader.java", "BodyUseAPI": ["java.util.List<me.jacobcrofts.simplestructureloader.util.SavedBlock>.add(int,me.jacobcrofts.simplestructureloader.util.SavedBlock)", "baseLocation.clone().add(savedBlock.getRelativeX(),savedBlock.getRelativeY(),savedBlock.getRelativeZ())", "baseLocation.clone().add(savedBlock.getRelativeX(), savedBlock.getRelativeY(), savedBlock.getRelativeZ()).getBlock()", "baseLocation.clone().add(savedBlock.getRelativeX(), savedBlock.getRelativeY(), savedBlock.getRelativeZ()).getBlock()", "me.jacobcrofts.simplestructureloader.util.SavedBlock.getRelativeZ()", "org.bukkit.block.Block.setType(savedBlock.getType())", "org.bukkit.block.Block.setData(savedBlock.getData())", "baseLocation.clone().add(savedBlock.getRelativeX(),savedBlock.getRelativeY(),savedBlock.getRelativeZ())", "me.jacobcrofts.simplestructureloader.util.SavedBlock.getRelativeY()", "me.jacobcrofts.simplestructureloader.util.SavedBlock.isAttachable()", "me.jacobcrofts.simplestructureloader.util.SavedBlock.getRelativeX()", "me.jacobcrofts.simplestructureloader.util.SavedBlock.getRelativeX()", "me.jacobcrofts.simplestructureloader.util.SavedBlock.getRelativeY()", "me.jacobcrofts.simplestructureloader.util.SavedBlock.getRelativeZ()", "me.jacobcrofts.simplestructureloader.util.SavedBlock.getType()", "me.jacobcrofts.simplestructureloader.util.SavedBlock.getData()"], "Fixed commit": "b4664b6f5e23e4d8461b244a4d219b069f2dd4c1", "Url": "https://api.github.com/repos/JacobCrofts/structure-loader", "Date": "2016-08-08T00:10:56Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (sdate == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6454/buggy-version/src.main.java.framework.com.giisoo.framework.web.Language.java", "BodyUseAPI": [], "Fixed commit": "4419d720f27cbede8dae2e158fb8f533a59898e5", "Url": "https://api.github.com/repos/s20000/webgiisoo", "Date": "2015-09-04T12:51:01Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((classes.length()) > 0) writer.writeAttribute(net.bootsfaces.component.CLASS, classes, net.bootsfaces.component.CLASS);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3569/buggy-version/src.net.bootsfaces.component.TabView.java", "BodyUseAPI": ["javax.faces.context.ResponseWriter.writeAttribute(net.bootsfaces.component.CLASS,java.lang.String,net.bootsfaces.component.CLASS)"], "Fixed commit": "7e3f87bb536d5f3fce7264c73d30a60d3ffb6c56", "Url": "https://api.github.com/repos/okroener/BootsFaces-OSP", "Date": "2014-12-28T16:19:04Z"},
{"Line": "=>784", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(expressionsPostFix.empty())) expressionsPostFix.pop();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1578/buggy-version/CalcV7.src.Model.java", "BodyUseAPI": ["java.util.Stack<java.lang.String>.pop()"], "Fixed commit": "3304f7c47ec8c15b8868d2c072bf11f2a727ec4d", "Url": "https://api.github.com/repos/Bastani/PostfixCalc", "Date": "2016-03-30T11:52:05Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selection) != null) nbt.setTag(\"selection\", selection.toNBT());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2847/buggy-version/src.main.java.com.builtbroken.addictedtored.content.detector.selection.TileSelectionDetector.java", "BodyUseAPI": [], "Fixed commit": "4886624c1aca50c3f071d56ca9e9cd34408b5358", "Url": "https://api.github.com/repos/BuiltBrokenModding/AddictedToRed", "Date": "2015-04-25T22:39:09Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (doneMatching) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2003/buggy-version/core.src.main.java.org.modelmapper.internal.PropertyMappingBuilder.java", "BodyUseAPI": [], "Fixed commit": "0752497f3713129d4870c97101cce006bfd67a91", "Url": "https://api.github.com/repos/jhalterman/modelmapper", "Date": "2013-03-03T22:33:00Z"},
{"Line": "=>352", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNewTrack) != null) { mOrigTrack.mLoved = mNewTrack.mLoved; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4106/buggy-version/app.src.main.java.uk.co.spookypeanut.lovetag.TrackListActivity.java", "BodyUseAPI": [], "Fixed commit": "5a07d57715e61c8e62d615e72596a46f197e2528", "Url": "https://api.github.com/repos/spookypeanut/Love-Tag", "Date": "2015-03-11T21:12:28Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(filename.equals(\"close\"))) fds_temp = GetFlightDataStep();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5919/buggy-version/swing.src.net.sf.openrocket.startup.OpenRocketAPI.java", "BodyUseAPI": [], "Fixed commit": "88bd3fdd5ddfcd295445fd9b24c7cfa2eb53a9cf", "Url": "https://api.github.com/repos/PSUcapstonefall2013TeamA-PSAS/openrocket", "Date": "2014-02-24T21:32:57Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mSlideItemPosition) != (-1)) { onItemDelete(view, position); mSlideItemPosition = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6994/buggy-version/sdlv.src.main.java.com.yydcdut.sdlv.WrapperAdapter.java", "BodyUseAPI": [], "Fixed commit": "78405aa034056ac6cf4dd0eef64c1df69ed1f8f4", "Url": "https://api.github.com/repos/yydcdut/SlideAndDragListView", "Date": "2016-01-23T09:26:40Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((first.equals(\"\")) && (last.trim().equals(\"\"))) throw new com.solutioninventors.tournament.exceptions.NoCompetitorNameException(\"Invalid competitor name \");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8464/buggy-version/TournamentAppJavaFX.src.com.solutioninventors.tournament.utils.Competitor.java", "BodyUseAPI": [], "Fixed commit": "fbf9bbbc4e481c98a68e3c678eaaa2af696551e4", "Url": "https://api.github.com/repos/SolutionInventors/TournamentAppJavaFX", "Date": "2017-10-13T10:09:07Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((workerAddress) == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4975/buggy-version/simulator.src.main.java.com.hazelcast.simulator.protocol.operation.FailureOperation.java", "BodyUseAPI": [], "Fixed commit": "11c6b904f44cff7a507772da8de19ec5025253b6", "Url": "https://api.github.com/repos/hazelcast/hazelcast-simulator", "Date": "2016-03-24T16:29:45Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDocumentOpen()) { if ((showUnsavedChangeWarning()) && (showIncompleteTagsWarning())) { try { getDriver().destroy(); java.lang.System.exit(0); } catch (edu.brandeis.cs.nlp.mae.database.MaeDBException e) { showError(e); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6915/buggy-version/src.main.java.edu.brandeis.cs.nlp.mae.controller.MaeMainController.java", "BodyUseAPI": [], "Fixed commit": "a2a86362d46d92178aceb4d54b17d9b0ddf86680", "Url": "https://api.github.com/repos/keighrim/mae-annotation", "Date": "2016-02-17T20:05:40Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isUsingBitmap)) { path.lineTo(lastX, lastY); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3645/buggy-version/app.src.main.java.mshultz.charpel.rstead.bgoff.paintingapplication.PaintView.java", "BodyUseAPI": [], "Fixed commit": "95dcfa7e6541a66ce79728b22b3337510133edd1", "Url": "https://api.github.com/repos/MShultz/PaintingApplication", "Date": "2017-04-21T20:55:26Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasBeenStarted) { try { java.lang.Thread.sleep(1000); } catch (java.lang.InterruptedException e) { throw new gda.device.DeviceException(e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7592/buggy-version/uk.ac.gda.epics.src.gda.device.scannable.PIE725ConstantVelocityRasterScannable.java", "BodyUseAPI": [], "Fixed commit": "54c5a5899c46548b3967e42da5907fc4a25bc823", "Url": "https://api.github.com/repos/openGDA/gda-epics", "Date": "2014-03-14T15:16:21Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((relatedItemEntity.getRtype()) == 3) { lpCard.width = mCardWidth; lpCard.height = ((int) (((mCardWidth) * 9) / 16.0F)); }else { lpCard.width = mCardWidth; lpCard.height = mCardHeight; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2544/buggy-version/qidiansdk.src.main.java.com.news.yazhidao.adapter.NewsDetailFgtAdapter.java", "BodyUseAPI": [], "Fixed commit": "4f40020ee7dedf0470fc4aa2596710c5b7b3018e", "Url": "https://api.github.com/repos/YuanHuiAce/AndroidNewsSDK", "Date": "2017-04-26T08:25:42Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JComboBox<tc.fab.pdf.signer.options.AppearanceOptions>.getItemAt(cbAppearance.getSelectedIndex())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((selected.getGraphic()) != null) org.apache.commons.io.FileUtils.deleteQuietly(new java.io.File(selected.getGraphic()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4524/buggy-version/src.main.java.tc.fab.firma.app.dialogs.SignDocumentDialog.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)", "tc.fab.pdf.signer.options.AppearanceOptions.getGraphic()"], "Fixed commit": "b0cd5c91dc960846e8b822a65a5c4c56d2bc6908", "Url": "https://api.github.com/repos/fabianonunes/firma", "Date": "2013-04-03T11:55:02Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((nodes.size()) == 1) { return new Tour(new java.util.ArrayList<java.lang.Integer>(nodes)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5554/buggy-version/src.ClarkeWright.java", "BodyUseAPI": [], "Fixed commit": "3b364fda641e39497771d95c8ecbc587d16ca16c", "Url": "https://api.github.com/repos/ragnhildkarlsson/TSPsolver", "Date": "2014-12-01T11:47:40Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasToolkitComponent()) { getToolkitComponent().setScrollOffset(x, y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1021/buggy-version/main.info.bioinfweb.tic.core.src.info.bioinfweb.tic.scrolling.ScrollingTICComponent.java", "BodyUseAPI": [], "Fixed commit": "7c51e5d51230a454f7a4ca23b505409a7ec13341", "Url": "https://api.github.com/repos/bioinfweb/TIC", "Date": "2017-10-28T09:06:54Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasToolkitComponent()) { getToolkitComponent().setScrollOffset(x, getScrollOffsetY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1021/buggy-version/main.info.bioinfweb.tic.core.src.info.bioinfweb.tic.scrolling.ScrollingTICComponent.java", "BodyUseAPI": [], "Fixed commit": "7c51e5d51230a454f7a4ca23b505409a7ec13341", "Url": "https://api.github.com/repos/bioinfweb/TIC", "Date": "2017-10-28T09:06:54Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasToolkitComponent()) { getToolkitComponent().setScrollOffset(getScrollOffsetX(), y); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1021/buggy-version/main.info.bioinfweb.tic.core.src.info.bioinfweb.tic.scrolling.ScrollingTICComponent.java", "BodyUseAPI": [], "Fixed commit": "7c51e5d51230a454f7a4ca23b505409a7ec13341", "Url": "https://api.github.com/repos/bioinfweb/TIC", "Date": "2017-10-28T09:06:54Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasToolkitComponent()) { return getToolkitComponent().getVisibleRectangle(); }else { return new java.awt.Rectangle(0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1021/buggy-version/main.info.bioinfweb.tic.core.src.info.bioinfweb.tic.scrolling.ScrollingTICComponent.java", "BodyUseAPI": [], "Fixed commit": "7c51e5d51230a454f7a4ca23b505409a7ec13341", "Url": "https://api.github.com/repos/bioinfweb/TIC", "Date": "2017-10-28T09:06:54Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (exception instanceof com.yalin.style.data.exception.ReswitchException) { message = context.getString(R.string.exception_message_resync); }else if (exception instanceof java.net.SocketTimeoutException) { message = context.getString(R.string.exception_message_remote_service); }else if (exception instanceof com.yalin.style.data.exception.RemoteServerException) { message = context.getString(R.string.exception_message_remote_service); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7539/buggy-version/presentation.src.main.java.com.yalin.style.exception.ErrorMessageFactory.java", "BodyUseAPI": [], "Fixed commit": "f076783a0d78c5e0c1ebaf1e388130e3362beb52", "Url": "https://api.github.com/repos/jinkg/Style", "Date": "2017-08-04T03:08:39Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((courseClassTO.getCourseDetailsSections()) != null) { for (kornell.core.entity.CourseDetailsSection courseDetailsSection : courseClassTO.getCourseDetailsSections()) { infoPanel.add(getInfoPanel(courseDetailsSection.getTitle(), courseDetailsSection.getText())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1306/buggy-version/kornell-gwt.src.main.java.kornell.gui.client.presentation.classroom.generic.details.GenericCourseDetailsView.java", "BodyUseAPI": ["kornell.core.to.CourseClassTO.getCourseDetailsSections()"], "Fixed commit": "0a65e39a8f2ed5b7a0093da9edb3c603ca762371", "Url": "https://api.github.com/repos/Craftware/Kornell", "Date": "2017-05-06T23:09:51Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((courseClassTO.getCourseDetailsHints()) != null) { for (kornell.core.entity.CourseDetailsHint courseDetailsHint : courseClassTO.getCourseDetailsHints()) { hintsPanel.add(getHintPanel(courseDetailsHint.getFontAwesomeClassName(), courseDetailsHint.getText())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1306/buggy-version/kornell-gwt.src.main.java.kornell.gui.client.presentation.classroom.generic.details.GenericCourseDetailsView.java", "BodyUseAPI": ["kornell.core.to.CourseClassTO.getCourseDetailsHints()"], "Fixed commit": "0a65e39a8f2ed5b7a0093da9edb3c603ca762371", "Url": "https://api.github.com/repos/Craftware/Kornell", "Date": "2017-05-06T23:09:51Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (viewCacheEnabled) { classToView.put(newViewClass, view); }else { return view; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3847/buggy-version/webapp.src.main.java.org.vaadin.tori.ToriNavigator.java", "BodyUseAPI": [], "Fixed commit": "dcc071d0f8fdad30dea8a4a4954ebe93dfad848f", "Url": "https://api.github.com/repos/vaadin/tori", "Date": "2011-11-16T10:49:41Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ModularStorageConfiguration.autofocusSearch) { window.setTextFocus(filter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6436/buggy-version/src.main.java.mcjty.rftools.blocks.storage.GuiModularStorage.java", "BodyUseAPI": [], "Fixed commit": "f518f95bc7fef2fe804f1093d542663ee869a76d", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-08-12T07:00:18Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getLastId()) != 0) return ((c.getString(0)) + \", \") + (c.getString(1)); else return \"Nessun rifornimento\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2655/buggy-version/KiloLiters.app.src.main.java.it.beer2beer.kiloliters.DatabaseAdapter.java", "BodyUseAPI": [], "Fixed commit": "6d3426fe69da3cc2a7a345e0207456dcd2a4a540", "Url": "https://api.github.com/repos/Beer2Beer/KiloLiters", "Date": "2014-04-13T17:46:40Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSet.getObject(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((object != null) && ((enumClass) != null)) { java.lang.String enumValueName = object.toString().trim(); return java.lang.Enum.valueOf(enumClass, enumValueName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/860/buggy-version/data-usertype.src.main.java.de.alpharogroup.db.postgres.usertype.PGEnumUserType.java", "BodyUseAPI": ["java.lang.Object.toString()", "java.lang.String.trim()"], "Fixed commit": "3bd34b2c4fa1aefb5b24776cded949888f00814c", "Url": "https://api.github.com/repos/lightblueseas/persistence-api", "Date": "2017-02-26T14:44:02Z"},
{"Line": "=>2690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (foundProblem == null) { foundProblem = new org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding(compatibleMethod, selector, compatibleMethod.parameters, ProblemReasons.NotVisible); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3235/buggy-version/jdt-patch.e46.org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.lookup.Scope.java", "BodyUseAPI": [], "Fixed commit": "77da6d9e5e558e8c7c4eff51a97bfe18c6fa5523", "Url": "https://api.github.com/repos/felixdo/groovy-eclipse", "Date": "2016-08-11T15:14:08Z"},
{"Line": "=>2681", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.internal.compiler.lookup.Scope.computeCompatibleMethod(org.eclipse.jdt.internal.compiler.lookup.MethodBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding[],org.eclipse.jdt.internal.compiler.lookup.InvocationSite)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((visible == null) || (!(visible.contains(compatibleMethod)))) { org.eclipse.jdt.internal.compiler.lookup.ImportReference importReference = importBinding.reference; if (importReference != null) { importReference.bits |= ASTNode.Used; } if (visible == null) visible = new org.eclipse.jdt.internal.compiler.util.ObjectVector(3); visible.add(compatibleMethod); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3235/buggy-version/jdt-patch.e46.org.eclipse.jdt.core.compiler.org.eclipse.jdt.internal.compiler.lookup.Scope.java", "BodyUseAPI": ["org.eclipse.jdt.internal.compiler.util.ObjectVector.add(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)"], "Fixed commit": "77da6d9e5e558e8c7c4eff51a97bfe18c6fa5523", "Url": "https://api.github.com/repos/felixdo/groovy-eclipse", "Date": "2016-08-11T15:14:08Z"},
{"Line": "=>511", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fPython.exists()) { return fPython; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8309/buggy-version/API.src.main.java.org.sikuli.util.JythonHelper.java", "BodyUseAPI": [], "Fixed commit": "4a6bc67a82a047266ae865e7f8f633021774d63f", "Url": "https://api.github.com/repos/rssdev10/SikuliX-2014", "Date": "2015-10-25T17:37:10Z"},
{"Line": "=>477", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fModule.getName().endsWith(\".sikuli\"))) { fModule = fModule.getParentFile(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8309/buggy-version/API.src.main.java.org.sikuli.util.JythonHelper.java", "BodyUseAPI": ["java.io.File.getParentFile()"], "Fixed commit": "4a6bc67a82a047266ae865e7f8f633021774d63f", "Url": "https://api.github.com/repos/rssdev10/SikuliX-2014", "Date": "2015-10-25T17:37:10Z"},
{"Line": "=>308", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((symbols.length()) > 0) { b.append(org.rascalmpl.values.uptr.SymbolAdapter.toString(((org.eclipse.imp.pdb.facts.IConstructor) (symbols.get(0))))); for (int i = 1; i < (symbols.length()); i++) { b.append(','); b.append(org.rascalmpl.values.uptr.SymbolAdapter.toString(((org.eclipse.imp.pdb.facts.IConstructor) (symbols.get(i))))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4963/buggy-version/src.org.rascalmpl.values.uptr.SymbolAdapter.java", "BodyUseAPI": ["org.eclipse.imp.pdb.facts.IList.length()", "java.lang.StringBuilder.append(java.lang.String)", "org.rascalmpl.values.uptr.SymbolAdapter.toString(((org.eclipse.imp.pdb.facts.IConstructor) (symbols.get(0))))", "org.eclipse.imp.pdb.facts.IList.get(int)", "org.eclipse.imp.pdb.facts.IList.get(int)", "java.lang.StringBuilder.append(java.lang.String)", "org.rascalmpl.values.uptr.SymbolAdapter.toString(((org.eclipse.imp.pdb.facts.IConstructor) (symbols.get(i))))"], "Fixed commit": "29576b29a802102061d1914c5eb9fa298d7254d2", "Url": "https://api.github.com/repos/cwi-swat/rascal", "Date": "2013-04-03T09:47:00Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (groupBy) { if (barSizeSec != null) { s = (((((((((DBQuery.GROUP.toString().toUpperCase()) + \" \") + (DBQuery.BY.toString().toUpperCase())) + \" \") + (DBQuery.TIME.toString().toUpperCase())) + \"(\") + barSizeSec) + \"s\") + \")\") + \" \"; }else { com.onenow.hedgefund.logging.Watchr.warning(\"QUERY GROUPBY REQUESTED WITH NULL BARSIZE\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8203/buggy-version/src.main.java.com.onenow.hedgefund.series.QueryDB.java", "BodyUseAPI": [], "Fixed commit": "b320bebc37439dc0be84c1c602f47973f10b5557", "Url": "https://api.github.com/repos/pablo-tech/Influx--Database-TimeSeries", "Date": "2017-08-01T16:06:00Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (org.apache.commons.lang.StringUtils.isNotEmpty(getAppTypeId())) { appType.setId(getAppTypeId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1339/buggy-version/phresco-service-web.src.main.java.com.photon.phresco.service.admin.actions.components.ApplicationTypes.java", "BodyUseAPI": [], "Fixed commit": "9518102a794e09e794c3b902534a5e06fb6959ed", "Url": "https://api.github.com/repos/phresco/service", "Date": "2012-11-09T10:09:04Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (te != null) { recTo = te.getStartTimestamp(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3774/buggy-version/ebms-sed-tasks.sed-basic-tasks.src.main.java.si.sed.task.TaskEmailInboxMailReport.java", "BodyUseAPI": ["org.sed.ebms.cron.SEDTaskExecution.getStartTimestamp()"], "Fixed commit": "3a300a86cb0eb1b9fe1d39137c653934f5db4be3", "Url": "https://api.github.com/repos/VsrsCif/ebms-sed", "Date": "2016-05-27T09:39:24Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jObj.has(fields.get(i).getFieldName())) org.openx.data.jsonserde.objectinspector.JsonStructObjectInspector.values.add(jObj.get(fields.get(i).getFieldName())); else org.openx.data.jsonserde.objectinspector.JsonStructObjectInspector.values.add(null);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6042/buggy-version/src.main.java.org.openx.data.jsonserde.objectinspector.JsonStructObjectInspector.java", "BodyUseAPI": ["org.openx.data.jsonserde.objectinspector.JsonStructObjectInspector.get(int)", "fields.get(i).getFieldName()", "java.util.List<java.lang.Object>.add(jObj.get(fields.get(i).getFieldName()))", "org.openx.data.jsonserde.json.JSONObject.get(fields.get(i).getFieldName())"], "Fixed commit": "8755589c2a33d852074ed04c07712ce6bccbf879", "Url": "https://api.github.com/repos/foursquare/Hive-JSON-Serde-1", "Date": "2012-07-26T17:06:51Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (obj.has(f.getFieldName())) return obj.get(f.getFieldName()); else return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6042/buggy-version/src.main.java.org.openx.data.jsonserde.objectinspector.JsonStructObjectInspector.java", "BodyUseAPI": ["org.openx.data.jsonserde.json.JSONObject.get(f.getFieldName())", "org.openx.data.jsonserde.objectinspector.MyField.getFieldName()"], "Fixed commit": "8755589c2a33d852074ed04c07712ce6bccbf879", "Url": "https://api.github.com/repos/foursquare/Hive-JSON-Serde-1", "Date": "2012-07-26T17:06:51Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ja) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1101/buggy-version/app.src.main.java.com.themealz.www.themealz.HomeFragment.java", "BodyUseAPI": [], "Fixed commit": "2b40e8112833e052d08395746e28ddace56ea8d4", "Url": "https://api.github.com/repos/sagyeli/themealzapp", "Date": "2015-10-07T07:00:39Z"},
{"Line": "=>187", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["WAVLTree.findNearestNode(int,WAVLTree.WAVLNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (parent != nearestNode) { s.right = nearestNode.right; }else parent = s;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/944/buggy-version/WAVLTree.src.WAVLTree.java", "BodyUseAPI": [], "Fixed commit": "a74c7bce252235e185d1eddfb8baf2dfd7643b76", "Url": "https://api.github.com/repos/rotemtzaban/WAVLTreeIntelliJ", "Date": "2016-12-27T16:22:30Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["WAVLTree.findSuccessorInSubTree(WAVLTree.WAVLNode)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(s.right.isExternalNode())) s.right.parent = s;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/944/buggy-version/WAVLTree.src.WAVLTree.java", "BodyUseAPI": [], "Fixed commit": "a74c7bce252235e185d1eddfb8baf2dfd7643b76", "Url": "https://api.github.com/repos/rotemtzaban/WAVLTreeIntelliJ", "Date": "2016-12-27T16:22:30Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Scanner.nextLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((row.charAt(j)) == 48) { insert = 0; }else if ((row.charAt(j)) == 49) { insert = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/779/buggy-version/Main.java", "BodyUseAPI": ["java.lang.String.charAt(int)"], "Fixed commit": "de8ab824e805c3b8e872da42c1f5491659f0bbdf", "Url": "https://api.github.com/repos/DanielBachler/GraphLab", "Date": "2017-10-13T01:42:09Z"},
{"Line": "=>355", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((com.orientechnologies.orient.core.type.tree.OMVRBTreeRIDSet) (iFieldValue)).size()) == 1) iVertex.field(iFieldName, ((com.orientechnologies.orient.core.type.tree.OMVRBTreeRIDSet) (iFieldValue)).iterator().next()); else if ((((com.orientechnologies.orient.core.type.tree.OMVRBTreeRIDSet) (iFieldValue)).size()) == 0) iVertex.removeField(iFieldName);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5877/buggy-version/blueprints-orient-graph.src.main.java.com.tinkerpop.blueprints.impls.orient.OrientEdge.java", "BodyUseAPI": ["com.orientechnologies.orient.core.record.impl.ODocument.field(java.lang.String,((com.orientechnologies.orient.core.type.tree.OMVRBTreeRIDSet) (iFieldValue)).iterator().next())", "((com.orientechnologies.orient.core.type.tree.OMVRBTreeRIDSet) (iFieldValue)).iterator().next()", "java.lang.Object.iterator()", "java.lang.Object.size()"], "Fixed commit": "7736728e2e222102af0897303d685c3a7b6e7ca2", "Url": "https://api.github.com/repos/nuvolabase/blueprints", "Date": "2013-04-22T20:11:03Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((featureType.getCoordinateReferenceSystem()) != null) { geometryBuilder = new org.opengis.geometry.ISOGeometryBuilder(featureType.getCoordinateReferenceSystem()); }else { geometryBuilder = new org.opengis.geometry.ISOGeometryBuilder(featureType.getGeometryDescriptor().getType().getCoordinateReferenceSystem()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7209/buggy-version/library.jdbc-iso.src.main.java.org.geotools.jdbc.iso.JDBCFeatureReader.java", "BodyUseAPI": ["featureType.getGeometryDescriptor().getType()", "org.opengis.feature.simple.SimpleFeatureType.getCoordinateReferenceSystem()", "featureType.getGeometryDescriptor().getType().getCoordinateReferenceSystem()", "org.opengis.feature.simple.SimpleFeatureType.getGeometryDescriptor()"], "Fixed commit": "64ab44acb6d5ed7ef036415b1737301fc44635b8", "Url": "https://api.github.com/repos/STEMLab/geotools-3d-extension", "Date": "2017-08-03T17:44:09Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((collection.charAt(0)) == '/') { collection = collection.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5814/buggy-version/org.onexus.website.api.src.main.java.org.onexus.website.api.widgets.tableviewer.TableViewerStatus.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "a95e6e0bb58dde903d8254a6b619a640d94d0f95", "Url": "https://api.github.com/repos/onexus/onexus", "Date": "2013-04-21T00:45:06Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stoped) == true) { loop = false; return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4251/buggy-version/src.org.wjw.jmxagent.CleanupThread.java", "BodyUseAPI": [], "Fixed commit": "cc7e7bae36d05b29bc57797f58a3b014ec377a08", "Url": "https://api.github.com/repos/wjw465150/jmx-agent", "Date": "2014-02-26T09:42:39Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.getSession().getAttribute(\"role\").equals(\"student\")) { return mapping.findForward(\"goStudentMain\"); }else { request.setAttribute(\"msg\", \"ERROR: Permission denied.\"); return mapping.findForward(\"goLogin\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6756/buggy-version/src.com.uic.web.struts.action.GoUIAction.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "64685c2b653504eb0433bf10137ef38118e0a3b1", "Url": "https://api.github.com/repos/UIC-FYP-2014-Fall/FYP-Coordination-System", "Date": "2014-12-01T14:53:28Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reciverRegister) == 1) { reciverRegister = 0; this.unregisterReceiver(receiver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/309/buggy-version/src.com.carlos.tomatoclock.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1adf105c1e7b6290105bddeb7b1e3ecf150778f7", "Url": "https://api.github.com/repos/carlos-wong/TomatoClock", "Date": "2012-08-08T08:22:03Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reciverRegister) == 1) { reciverRegister = 0; this.unregisterReceiver(receiver); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/309/buggy-version/src.com.carlos.tomatoclock.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1adf105c1e7b6290105bddeb7b1e3ecf150778f7", "Url": "https://api.github.com/repos/carlos-wong/TomatoClock", "Date": "2012-08-08T08:22:03Z"},
{"Line": "=>306", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reciverRegister) == 0) { reciverRegister = 1; this.registerReceiver(receiver, filter); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/309/buggy-version/src.com.carlos.tomatoclock.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "1adf105c1e7b6290105bddeb7b1e3ecf150778f7", "Url": "https://api.github.com/repos/carlos-wong/TomatoClock", "Date": "2012-08-08T08:22:03Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.getMainWindow()) != null) { this.getMainWindow().refresh(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7391/buggy-version/src.core.Timeflecks.java", "BodyUseAPI": [], "Fixed commit": "9dea2d83c79b73f5ae28b993709c5ef5327f7e67", "Url": "https://api.github.com/repos/MarkWesterhoff/timeflecks", "Date": "2014-10-27T17:20:19Z"},
{"Line": "=>404", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (timezone != null) { dateFormat.setTimeZone(timezone); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4511/buggy-version/MetroBike.src.com.HuskySoft.metrobike.backend.Utility.java", "BodyUseAPI": ["java.text.SimpleDateFormat.setTimeZone(java.util.TimeZone)"], "Fixed commit": "fc8d231363aed4513a950424f5f9a500ed18c1b0", "Url": "https://api.github.com/repos/alaurenz/metrobike", "Date": "2013-05-31T23:39:54Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.editor.EditorFactory.getInstance().createDocument(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (document instanceof com.intellij.openapi.editor.impl.DocumentImpl) { ((com.intellij.openapi.editor.impl.DocumentImpl) (document)).setAcceptSlashR(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/255/buggy-version/platform.xdebugger-impl.src.com.intellij.xdebugger.impl.ui.DebuggerUIUtil.java", "BodyUseAPI": [], "Fixed commit": "06dc4c08ac5a274bfcadded83abfb3d53da013c7", "Url": "https://api.github.com/repos/jgindin/intellij-community", "Date": "2013-10-21T10:04:44Z"},
{"Line": "=>315", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((stockpileTab) != null) { stockpileTab.updateStockpileDialog(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/331/buggy-version/src.main.java.net.nikr.eve.jeveasset.Program.java", "BodyUseAPI": [], "Fixed commit": "e8a176cbfe641ae9c83b2d879cff0ceefa0891b1", "Url": "https://api.github.com/repos/GoldenGnu/jeveassets", "Date": "2015-11-02T15:38:23Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (com.opensymphony.xwork2.ActionContext.getContext())) { javax.servlet.ServletContext sc = org.apache.struts2.ServletActionContext.getServletContext(); if (null != sc) context = sc.getContextPath(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2235/buggy-version/struts2.view.src.main.java.org.beangle.struts2.view.bean.DefaultActionUriRender.java", "BodyUseAPI": [], "Fixed commit": "1045538297591e65b9e45a61a898ae5fb500793b", "Url": "https://api.github.com/repos/beangle/library", "Date": "2013-12-13T10:05:19Z"},
{"Line": "=>492", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.lastIndexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((-1) == orderIdx) orderIdx = genQueryStr.length();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/942/buggy-version/commons.org.beangle.commons.dao.src.main.java.org.beangle.commons.dao.query.builder.OqlBuilder.java", "BodyUseAPI": [], "Fixed commit": "12aa4a1c99862e5da9674fe05d4609c676d6e472", "Url": "https://api.github.com/repos/beangle/library", "Date": "2012-10-18T07:38:19Z"},
{"Line": "=>504", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (query.startsWith(\"from\")) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/942/buggy-version/commons.org.beangle.commons.dao.src.main.java.org.beangle.commons.dao.query.builder.OqlBuilder.java", "BodyUseAPI": [], "Fixed commit": "12aa4a1c99862e5da9674fe05d4609c676d6e472", "Url": "https://api.github.com/repos/beangle/library", "Date": "2012-10-18T07:38:19Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (from != null) { return ((from.getGroupId()) + \":\") + (from.getArtifactId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5758/buggy-version/src.main.java.net.oneandone.maven.rules.common.RuleHelper.java", "BodyUseAPI": ["org.apache.maven.model.Dependency.getGroupId()", "org.apache.maven.model.Dependency.getArtifactId()"], "Fixed commit": "3b93aa00bbfea7c0c2b6b879e013c350c55e97d8", "Url": "https://api.github.com/repos/1and1/ono-extra-enforcer-rules", "Date": "2015-04-23T11:47:53Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) < 11) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7677/buggy-version/src.com.firebirdberlin.nightdream.ui.ClockLayout.java", "BodyUseAPI": [], "Fixed commit": "67bf61b328d32ddfd1600668d33af967b249b2e6", "Url": "https://api.github.com/repos/firebirdberlin/nightdream", "Date": "2016-12-02T09:54:28Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(net.aufdemrand.denizen.utilities.DenizenAPI.getCurrentInstance().isEnabled())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7611/buggy-version/plugin.src.main.java.net.aufdemrand.denizen.utilities.maps.DenizenMapRenderer.java", "BodyUseAPI": [], "Fixed commit": "bc718638e1205678c6ae94dab7f828ed0e88cbfb", "Url": "https://api.github.com/repos/mergu/Denizen", "Date": "2017-09-19T20:02:59Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parseX) { hivemall.common.FeatureValue fv = hivemall.common.FeatureValue.parse(k, feature_hashing); feature = fv.getFeature(); }else { feature = org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorUtils.copyToStandardObject(k, featureInspector); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8093/buggy-version/src.main.hivemall.regression.LogressIterUDTF.java", "BodyUseAPI": [], "Fixed commit": "22a3c7c333c2e4d295f28a02096f797669c28cf7", "Url": "https://api.github.com/repos/myui/hivemall", "Date": "2014-07-04T15:28:23Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["projectModel.getRootFileModel().getPrettyPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (projectPrettyPath == null) { throw new org.jboss.windup.util.exception.WindupException(((\"Path for project: \" + projectModel) + \" evaluated to null!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7766/buggy-version/rules-java.api.src.main.java.org.jboss.windup.rules.apps.java.reporting.rules.CreateJavaApplicationOverviewReportRuleProvider.java", "BodyUseAPI": [], "Fixed commit": "887d5fb497147e362c81826216c33c11ee7901ab", "Url": "https://api.github.com/repos/jsight/windup", "Date": "2015-05-08T14:08:14Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.windup.reporting.model.OverviewReportLineMessageModel.getProject()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((project.getRootFileModel()) == null) { throw new org.jboss.windup.util.exception.WindupException(((\"Root file for project: \" + project) + \" evaluated to null!\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7766/buggy-version/rules-java.api.src.main.java.org.jboss.windup.rules.apps.java.reporting.rules.CreateJavaApplicationOverviewReportRuleProvider.java", "BodyUseAPI": [], "Fixed commit": "887d5fb497147e362c81826216c33c11ee7901ab", "Url": "https://api.github.com/repos/jsight/windup", "Date": "2015-05-08T14:08:14Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((payload.getProjectModel()) != null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7766/buggy-version/rules-java.api.src.main.java.org.jboss.windup.rules.apps.java.scan.provider.DiscoverMavenProjectsRuleProvider.java", "BodyUseAPI": [], "Fixed commit": "887d5fb497147e362c81826216c33c11ee7901ab", "Url": "https://api.github.com/repos/jsight/windup", "Date": "2015-05-08T14:08:14Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((bodySB.indexOf(\"<p>\", bodySB.indexOf((\"<p>\" + 3)))) < (bodySB.indexOf(\"</p>\"))) { bodyTxt.append(bodySB.substring(bodySB.indexOf(\"<p>\"), ((bodySB.indexOf(\"</p>\")) + 4))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/301/buggy-version/src.main.java.nl.youngcapital.nuws.Scraper.java", "BodyUseAPI": ["java.lang.StringBuilder.indexOf(java.lang.String)", "java.lang.StringBuilder.substring(int,int)", "java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.indexOf(java.lang.String)"], "Fixed commit": "9bb3ae93f1a5e1ff99370bdfef4c48803f4ff50a", "Url": "https://api.github.com/repos/JoostvanEsch/nuws", "Date": "2017-10-17T14:33:30Z"},
{"Line": "=>372", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URI.getScheme()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((\"https\".equalsIgnoreCase(schema)) && (uri.getHost().matches(Constants.IP_PATTERN))) { errorMsgs.add(\"You should use FQDN instead of ip address when using https protocol\"); result = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/9001/buggy-version/common.src.main.java.com.vmware.bdd.utils.CommonUtil.java", "BodyUseAPI": [], "Fixed commit": "ffc368f63e70f5055ad3471b18f9e1b938c790af", "Url": "https://api.github.com/repos/vmware-serengeti/serengeti-ws", "Date": "2014-09-10T00:26:05Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pullFilters.downloadData())) { convertFromSDK(callback, false); }else { pullData(pullFilters, organisationUnits, callback); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2617/buggy-version/app.src.main.java.org.eyeseetea.malariacare.data.sync.importer.PullController.java", "BodyUseAPI": ["org.eyeseetea.malariacare.data.sync.importer.PullController.1.pullData(org.eyeseetea.malariacare.domain.usecase.pull.PullFilters,java.util.List<org.hisp.dhis.client.sdk.models.organisationunit.OrganisationUnit>,org.eyeseetea.malariacare.data.sync.importer.Callback)"], "Fixed commit": "fccd00acfd58c834a4633f9f060cc3b5715a0b44", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2017-03-03T08:12:38Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (convertData) { convertData(callback); }else { callback.onComplete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2617/buggy-version/app.src.main.java.org.eyeseetea.malariacare.data.sync.importer.PullController.java", "BodyUseAPI": [], "Fixed commit": "fccd00acfd58c834a4633f9f060cc3b5715a0b44", "Url": "https://api.github.com/repos/EyeSeeTea/pictureapp", "Date": "2017-03-03T08:12:38Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msgEdit.getText().toString().equals(\"\")) { android.widget.Toast.makeText(this, \"\u8bf7\u8bf4\u70b9\u4ec0\u4e48\u5427~\", Toast.LENGTH_SHORT).show(); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6427/buggy-version/app.src.main.java.me.zq.youjoin.activity.PublishActivity.java", "BodyUseAPI": [], "Fixed commit": "3aebbd79e683f81ffd0bafe7a600dc38348537e4", "Url": "https://api.github.com/repos/FreedomZZQ/YouJoin-Android", "Date": "2016-05-14T16:10:24Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (new java.io.File(pidFile).exists()) { new com.object0r.TorRange.CommandRunner((\"kill -9 \" + (com.object0r.TorRange.Utilities.readFile(pidFile))), true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/9073/buggy-version/src.main.java.com.object0r.TorRange.TorConnection.java", "BodyUseAPI": ["com.object0r.TorRange.Utilities.readFile(java.lang.String)"], "Fixed commit": "00bafd9d441b69f37fe5600d92df402e30079c0f", "Url": "https://api.github.com/repos/nikos-glikis/TorRange", "Date": "2016-04-27T19:55:54Z"},
{"Line": "=>510", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.charAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (org.develnext.jphp.core.tokenizer.GrammarUtils.isCloseTag(java.lang.String.valueOf(new char[]{ prev_ch, ch }))) { i -= 2; closed = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4427/buggy-version/jphp-core.src.org.develnext.jphp.core.tokenizer.Tokenizer.java", "BodyUseAPI": [], "Fixed commit": "b95407b25438455f26c66b7ea5b9aa3ce5c0c958", "Url": "https://api.github.com/repos/dim-s/jphp", "Date": "2014-04-15T13:33:45Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(options.isVirtual())) { process.getReader().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/515/buggy-version/components.loci-plugins.src.loci.plugins.BF.java", "BodyUseAPI": [], "Fixed commit": "5ee75aa1d91a461936f22517e5ac87b9475dffc8", "Url": "https://api.github.com/repos/melissalinkert/bioformats", "Date": "2012-03-26T00:39:13Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(options.isVirtual())) { process.getReader().close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/515/buggy-version/components.loci-plugins.src.loci.plugins.BF.java", "BodyUseAPI": [], "Fixed commit": "5ee75aa1d91a461936f22517e5ac87b9475dffc8", "Url": "https://api.github.com/repos/melissalinkert/bioformats", "Date": "2012-03-26T00:39:13Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.lock = channel.tryLock()) == null) throw new java.lang.Exception(\"wallet.txt is locked by another process\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2537/buggy-version/lab1.src.Wallet.java", "BodyUseAPI": [], "Fixed commit": "f5fa2e5197f20726c109e0cfaa87df2aaf2e54b0", "Url": "https://api.github.com/repos/civspan/LangSec", "Date": "2017-04-07T18:43:39Z"},
{"Line": "=>264", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dbSingleEvent.getUpdatedSingleEvent()) != 0) { singleEventUpdates.add(new unicopa.copa.base.event.SingleEventUpdate(getSingleEvent(dbSingleEvent.getUpdatedSingleEvent()), dbSingleEvent.getOldSingleEventID(), new java.util.Date(dbSingleEvent.getUpdateDate()), dbSingleEvent.getCreatorName(), dbSingleEvent.getComment())); }else { singleEventUpdates.add(new unicopa.copa.base.event.SingleEventUpdate(null, dbSingleEvent.getOldSingleEventID(), new java.util.Date(dbSingleEvent.getUpdateDate()), dbSingleEvent.getCreatorName(), dbSingleEvent.getComment())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6510/buggy-version/src.main.java.unicopa.copa.server.database.DatabaseService.java", "BodyUseAPI": ["java.util.List<unicopa.copa.base.event.SingleEventUpdate>.add(unicopa.copa.base.event.SingleEventUpdate)", "unicopa.copa.server.database.data.db.DBSingleEventUpdate.getOldSingleEventID()", "unicopa.copa.server.database.data.db.DBSingleEventUpdate.getOldSingleEventID()", "unicopa.copa.server.database.data.db.DBSingleEventUpdate.getComment()", "unicopa.copa.server.database.data.db.DBSingleEventUpdate.getUpdateDate()", "unicopa.copa.server.database.data.db.DBSingleEventUpdate.getCreatorName()", "unicopa.copa.server.database.DatabaseService.getSingleEvent(dbSingleEvent.getUpdatedSingleEvent())", "unicopa.copa.server.database.data.db.DBSingleEventUpdate.getUpdateDate()", "unicopa.copa.server.database.data.db.DBSingleEventUpdate.getCreatorName()", "java.util.List<unicopa.copa.base.event.SingleEventUpdate>.add(unicopa.copa.base.event.SingleEventUpdate)", "unicopa.copa.server.database.data.db.DBSingleEventUpdate.getComment()", "unicopa.copa.server.database.data.db.DBSingleEventUpdate.getUpdatedSingleEvent()"], "Fixed commit": "1462123d830317fc355de0dd252bf295246c08f8", "Url": "https://api.github.com/repos/UniCopa/CopaServer", "Date": "2013-06-30T10:34:44Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((description.length()) > 10) && (description.contains(\"Overview\"))) { gameViewHolder.description.setText(description.substring(10)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8294/buggy-version/app.src.main.java.com.apps.danielbarr.gamecollection.Adapter.GameListAdapter.java", "BodyUseAPI": ["java.lang.String.substring(int)", "android.widget.TextView.setText(java.lang.String)"], "Fixed commit": "43d86a77e2a78817d073f2f260e0168d78cfb13f", "Url": "https://api.github.com/repos/dbarr33/Game-Vault", "Date": "2017-10-26T00:40:22Z"},
{"Line": "=>191", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["n.getNodeData().getAttributes().getValue(closenessColumn.getIndex())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (centrality != 0.0) standardizedCloseness = roundTwoD((1 / centrality));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6190/buggy-version/src.gexfWebservice.Gephi.java", "BodyUseAPI": ["gexfWebservice.Gephi.roundTwoD(double)"], "Fixed commit": "9c537f86d6f656cd88a4b3f792192e37d66bad07", "Url": "https://api.github.com/repos/PlasmaLampe/GEXFVizz_server", "Date": "2012-06-24T13:39:21Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (map != null) expectedParentModCount = parent.modCount();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4663/buggy-version/src.main.java.bdv.behaviour.BehaviourMap.java", "BodyUseAPI": [], "Fixed commit": "92e9a386f4c1ad8a4698c2de55fb64b3d5ef05b7", "Url": "https://api.github.com/repos/scijava/ui-behaviour", "Date": "2015-12-12T01:23:46Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (map != null) expectedParentModCount = parent.modCount();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4663/buggy-version/src.main.java.bdv.behaviour.InputTriggerMap.java", "BodyUseAPI": [], "Fixed commit": "92e9a386f4c1ad8a4698c2de55fb64b3d5ef05b7", "Url": "https://api.github.com/repos/scijava/ui-behaviour", "Date": "2015-12-12T01:23:46Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Model.Utility.MapParsers.DaveBuilderTile.getRivers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (areValidRivers(rivers)) { riverEdges = \" (\"; for (int i = 0; i < (rivers.length); i++) { riverEdges += (rivers[i]) + \" \"; } riverEdges += \")\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3185/buggy-version/src.Model.Utility.MapParsers.DaveBuilder.java", "BodyUseAPI": [], "Fixed commit": "5d1be79f21518b5f6b8e5f503f3de43f429c37f4", "Url": "https://api.github.com/repos/zrolston/OOPTeam14", "Date": "2017-03-28T17:09:58Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((curRna) == null) || ((curGene.id) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7287/buggy-version/src.main.java.jannovar.gff.TranscriptModelBuilder.java", "BodyUseAPI": [], "Fixed commit": "e13a969e28b5824d78f9a8f55e1c7d7649384efc", "Url": "https://api.github.com/repos/charite/jannovar", "Date": "2013-12-19T21:23:47Z"},
{"Line": "=>346", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((img.getWidth()) > ((int) (imgSize.getWidth()))) || ((img.getHeight()) > ((int) (imgSize.getHeight())))) { if (((img.getWidth()) / (imgSize.getWidth())) > ((img.getHeight()) / (imgSize.getHeight()))) { thumbImg = img.getScaledInstance(((int) (imgSize.getWidth())), (-1), java.awt.Image.SCALE_SMOOTH); }else { thumbImg = img.getScaledInstance((-1), ((int) (imgSize.getHeight())), java.awt.Image.SCALE_SMOOTH); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/9025/buggy-version/component.src.main.java.com.celements.photo.image.GenerateThumbnail.java", "BodyUseAPI": ["java.awt.image.BufferedImage.getScaledInstance(int,((int) (imgSize.getHeight())),int)", "com.celements.photo.container.ImageDimensions.getHeight()", "java.awt.image.BufferedImage.getHeight()", "com.celements.photo.container.ImageDimensions.getWidth()", "java.awt.image.BufferedImage.getScaledInstance(((int) (imgSize.getWidth())),int,int)", "com.celements.photo.container.ImageDimensions.getWidth()", "java.awt.image.BufferedImage.getWidth()", "com.celements.photo.container.ImageDimensions.getHeight()"], "Fixed commit": "434d1576b4c2d06ff627fde8f49f775730e980e7", "Url": "https://api.github.com/repos/celements/celements-photo", "Date": "2015-10-09T14:03:39Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(fileData.required)) { com.hearthproject.oneclient.api.DownloadManager.updateMessage(instance.getName(), \"%s - Skipping Disabled Mod %s\", instance.getName(), org.apache.commons.io.FilenameUtils.getBaseName(fileData.getURL())); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3474/buggy-version/src.main.java.com.hearthproject.oneclient.api.curse.CurseModInstaller.java", "BodyUseAPI": ["com.hearthproject.oneclient.api.DownloadManager.updateMessage(instance.getName(),java.lang.String,instance.getName(),org.apache.commons.io.FilenameUtils.getBaseName(fileData.getURL()))", "org.apache.commons.io.FilenameUtils.getBaseName(fileData.getURL())", "com.hearthproject.oneclient.api.curse.data.FileData.getURL()"], "Fixed commit": "7cf877f6e583f23586684b9711dea7c4eb151994", "Url": "https://api.github.com/repos/HearthProject/OneClient", "Date": "2017-09-25T00:04:34Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(org.bonitasoft.studio.common.emf.tools.ModelHelper.isInEvenementialSubProcessPool(event))) { final org.bonitasoft.studio.model.process.ContractContainer contractContainer = org.bonitasoft.studio.common.emf.tools.ModelHelper.getFirstContainerOfType(event, org.bonitasoft.studio.model.process.ContractContainer.class); if (!(contractContainer.getContract().getInputs().isEmpty())) { return ctx.createFailureStatus(Messages.cannotUseThisStartEventTypeWithAContract); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5895/buggy-version/bundles.plugins.org.bonitasoft.studio.validation.src.org.bonitasoft.studio.validation.constraints.process.StartEventWithContractConstraint.java", "BodyUseAPI": ["org.bonitasoft.studio.common.emf.tools.ModelHelper.getFirstContainerOfType(org.bonitasoft.studio.model.process.Event,java.lang.Class)"], "Fixed commit": "085f83e43927743cad519c2908a7f168e774e1ff", "Url": "https://api.github.com/repos/bonitasoft/bonita-studio", "Date": "2015-06-10T09:26:19Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (passwort.isEmpty()) { map.addAttribute(\"registrationError\", true); return \"forward:registration\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8579/buggy-version/src.main.java.de.tudresden.swt14ws18.controller.LotterieController.java", "BodyUseAPI": [], "Fixed commit": "5fc078d5e193373490bc24911c10d2d2ac3a864f", "Url": "https://api.github.com/repos/SWT14W18/MDG-2000", "Date": "2014-12-07T19:05:16Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (vorname.isEmpty()) { map.addAttribute(\"registrationError\", true); return \"forward:registration\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8579/buggy-version/src.main.java.de.tudresden.swt14ws18.controller.LotterieController.java", "BodyUseAPI": [], "Fixed commit": "5fc078d5e193373490bc24911c10d2d2ac3a864f", "Url": "https://api.github.com/repos/SWT14W18/MDG-2000", "Date": "2014-12-07T19:05:16Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pourcent <= 0) && (pourcent > 100)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4898/buggy-version/src.fr.skyforce77.towerminer.render.RenderHelper.java", "BodyUseAPI": [], "Fixed commit": "e3310f0739f59d30fec415b96801bcca9793d5fe", "Url": "https://api.github.com/repos/skyforce77/TowerMiner", "Date": "2014-09-19T05:41:01Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((returnValue < 0) && (com.codesunday.ceres.core.domain.ApplicationContext.globalMap.containsKey(context))) && (com.codesunday.ceres.core.domain.ApplicationContext.globalMap.get(context).containsKey(key))) { org.json.JSONObject json = com.codesunday.ceres.core.domain.ApplicationContext.globalMap.get(context).get(key).optJSONObject(com.codesunday.ceres.core.domain.ApplicationContext.VALUE); if (json.has(value)) { returnValue = json.optInt(value, 0); }else { returnValue = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/871/buggy-version/ceres-core.src.main.java.com.codesunday.ceres.core.domain.ApplicationContext.java", "BodyUseAPI": ["com.codesunday.ceres.core.domain.ApplicationContext.globalMap.get(context).get(key).optJSONObject(java.lang.String)", "com.codesunday.ceres.core.domain.ApplicationContext.globalMap.get(context).get(java.lang.String)", "java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.json.JSONObject>>.get(java.lang.String)"], "Fixed commit": "35f00171a50a71313bf1e2a3b440319498bd6d6c", "Url": "https://api.github.com/repos/sourcemodules/nosql-mongodb-join-api", "Date": "2016-12-10T17:48:19Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((itemListView.getAdapter()) == null) { com.hirez.smiteoracle.ItemListAdapter adapter = new com.hirez.smiteoracle.ItemListAdapter(this, R.layout.item_row, allItems); itemListView.setAdapter(adapter); itemListView.setOnItemClickListener(new android.widget.AdapterView.OnItemClickListener() { public void onItemClick(android.widget.AdapterView<?> parent, android.view.View view, int position, long id) { if (allItems.get(position).getStartingItem()) { android.content.Intent i = getStarterItemIntent(allItems.get(position)); startActivity(i); } } }); adapter.notifyDataSetChanged(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1606/buggy-version/SmiteOracleProject.SmiteOracle.src.main.java.com.hirez.smiteoracle.ItemList.java", "BodyUseAPI": ["android.widget.ListView.setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)", "android.widget.ListView.setAdapter(com.hirez.smiteoracle.ItemListAdapter)"], "Fixed commit": "9f50501e691b28c0e31c84437a03be1e928e84d3", "Url": "https://api.github.com/repos/andrew-wilcox/smiteOracle", "Date": "2014-02-12T22:41:32Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((code.type.receiver()) != null) { environment.push(code.type.receiver()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3936/buggy-version/src.wyil.transforms.BackPropagation.java", "BodyUseAPI": ["code.type.receiver()", "wyil.transforms.BackPropagation.Env.push(code.type.receiver())"], "Fixed commit": "ec12675358ad32551a8ecc9161841f996561190c", "Url": "https://api.github.com/repos/Whiley/WhileyCompiler", "Date": "2011-06-12T04:16:14Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(steps.equals(\"0\"))) { java.lang.String[] parts = steps.split(\",\"); stepsUntilNow = java.lang.Integer.parseInt(parts[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8270/buggy-version/app.src.main.java.com.project.libertyhacks.mutual.liberty.care.services.StepCounterAndDetectActivityService.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "8c72f902b6acd4dc9531b903aaa4a590d83bd1b8", "Url": "https://api.github.com/repos/rlamsal1256/HacksProject", "Date": "2017-08-17T20:04:19Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (value instanceof org.parse4j.ParseQuery) { return ((org.parse4j.ParseQuery) (value)).toREST(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3295/buggy-version/src.main.java.org.parse4j.util.ParseEncoder.java", "BodyUseAPI": [], "Fixed commit": "607cec5f72100b6e3a66812412af0f3a731aa310", "Url": "https://api.github.com/repos/raytrask/parse4j", "Date": "2015-03-02T14:35:57Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (value != null) { put(name, value, value.getClass()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1897/buggy-version/src.main.java.selcrowler.runner.binding.BindingImpl.java", "BodyUseAPI": ["java.lang.Object.getClass()", "selcrowler.runner.binding.BindingImpl.put(java.lang.String,java.lang.Object,java.lang.Class<? extends java.lang.Object>)"], "Fixed commit": "3c2403760a017f2abe9d21c30fb56c5c8271f26b", "Url": "https://api.github.com/repos/sprilukin/selcrowler", "Date": "2012-10-28T19:50:16Z"},
{"Line": "=>338", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["response.getOptions().getBlock1()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((block1.getSize()) < currentSize) { newSize = block1.getSize(); newSzx = block1.getSzx(); }else { newSize = currentSize; newSzx = status.getCurrentSzx(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7976/buggy-version/californium-core.src.main.java.org.eclipse.californium.core.network.stack.BlockwiseLayer.java", "BodyUseAPI": ["org.eclipse.californium.core.coap.BlockOption.getSize()", "org.eclipse.californium.core.coap.BlockOption.getSzx()"], "Fixed commit": "780f1858e0832e6c7e5ba557ba91e3fca63a394a", "Url": "https://api.github.com/repos/eclipse/californium", "Date": "2016-10-03T09:42:01Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(profile instanceof com.github.gekoh.yagen.ddl.DDLGenerator.Profile)) { throw new java.lang.IllegalArgumentException((\"profile parameter needs to be an instance of \" + (com.github.gekoh.yagen.api.Profile.class.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3675/buggy-version/lib.yagen-generator-lib.src.main.java.com.github.gekoh.yagen.ddl.CreateDDL.java", "BodyUseAPI": [], "Fixed commit": "3b85ec63b3d55489fab9e510577eb2d291ab323f", "Url": "https://api.github.com/repos/gekoh/yaGen", "Date": "2015-05-18T17:17:45Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((x) != null) && ((y) != null)) { org.cirqwizard.geom.Point point = new org.cirqwizard.geom.Point(x, y); drillPoints.add(new org.cirqwizard.toolpath.DrillPoint(point, currentDiameter)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2329/buggy-version/src.org.cirqwizard.excellon.ExcellonParser.java", "BodyUseAPI": [], "Fixed commit": "ead9b0298bf5a685cd0823d5fcd664da2e0c32bc", "Url": "https://api.github.com/repos/simonsalykov/cirqwizard", "Date": "2014-04-08T15:01:39Z"},
{"Line": "=>358", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((parts.length) != 2) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6478/buggy-version/jsystem-core-projects.jsystemAgent.src.main.java.jsystem.extensions.report.xml.XmlReportHandler.java", "BodyUseAPI": [], "Fixed commit": "9d7e0cb1f8da0cb92f442d168a448b830e8489b7", "Url": "https://api.github.com/repos/Top-Q/jsystem", "Date": "2012-11-21T11:46:00Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((board[row][col]) != (-1)) { java.lang.System.out.println(((row + \" \") + col)); java.lang.System.out.println(board[row][col]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2636/buggy-version/FInalProject.Board.java", "BodyUseAPI": ["java.io.PrintStream.println(int)", "java.io.PrintStream.println(java.lang.String)"], "Fixed commit": "5eec516ead073247c872fba6782b819a7510db77", "Url": "https://api.github.com/repos/xeliot/Kinect4", "Date": "2017-05-09T17:15:05Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((choreographer) != null) { choreographer.postFrameCallbackDelayed(this, com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.CHOREOGRAPHER_SAMPLE_DELAY_MILLIS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6129/buggy-version/library.core.src.main.java.com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.java", "BodyUseAPI": [], "Fixed commit": "c7e2c0c25751bbf9faf9d49130cc63294cfe64d8", "Url": "https://api.github.com/repos/michalliu/Google_ExoPlayer", "Date": "2017-07-12T11:11:30Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (_mQQConnectOAuth)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5489/buggy-version/src.com.segotech.ipetchat.account.AccountSetting4FirstActivity.java", "BodyUseAPI": [], "Fixed commit": "ca2980e1f8bf5a02d500b8f6f9c28f83bb9c92cd", "Url": "https://api.github.com/repos/chelseazhai/IPetChat_android", "Date": "2013-12-26T08:06:07Z"},
{"Line": "=>513", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["eu.europeana.corelib.solr.utils.MongoConstructor.constructFullBean(eu.europeana.corelib.definitions.jibx.RDF,eu.europeana.uim.enrichment.utils.OsgiEdmMongoServer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fullBean.getEuropeanaAggregation().getEdmLanguage()) != null) { fullBean.setLanguage(new java.lang.String[]{ fullBean.getEuropeanaAggregation().getEdmLanguage().values().iterator().next().get(0) }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5892/buggy-version/workflow_plugins.europeana-uim-plugin-enrichment.src.main.java.eu.europeana.uim.enrichment.EnrichmentPlugin.java", "BodyUseAPI": ["fullBean.getEuropeanaAggregation().getEdmLanguage().values().iterator()", "fullBean.getEuropeanaAggregation().getEdmLanguage().values().iterator().next().get(int)", "eu.europeana.corelib.solr.bean.impl.FullBeanImpl.getEuropeanaAggregation()", "fullBean.getEuropeanaAggregation().getEdmLanguage().values()", "eu.europeana.corelib.solr.bean.impl.FullBeanImpl.setLanguage(java.lang.String[])", "fullBean.getEuropeanaAggregation().getEdmLanguage().values().iterator().next()", "fullBean.getEuropeanaAggregation().getEdmLanguage()"], "Fixed commit": "f4b6f402de7e92e0a5eb96e1a2d4d02c2822404e", "Url": "https://api.github.com/repos/europeana/uim-europeana", "Date": "2013-11-01T11:05:58Z"},
{"Line": "=>219", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Maps.newHashMap()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((commentMap.get(fieldInfo.getFieldName())) != null) { if ((org.apache.commons.lang3.StringUtils.isBlank(language)) || (language.equals(\"EN\"))) { return fieldInfo.getFieldName(); }else { return commentMap.get(fieldInfo.getFieldName()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8523/buggy-version/src.com.ccnode.codegenerator.genCode.GenSqlService.java", "BodyUseAPI": ["com.ccnode.codegenerator.pojo.PojoFieldInfo.getFieldName()", "com.ccnode.codegenerator.pojo.PojoFieldInfo.getFieldName()", "java.util.Map<java.lang.String, java.lang.String>.get(fieldInfo.getFieldName())"], "Fixed commit": "e01142d4b99f08ea58eb673a2ec5a8bc739c3852", "Url": "https://api.github.com/repos/zhengjunbase/codehelper.generator", "Date": "2016-07-25T07:11:07Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.ccnode.codegenerator.util.RegexUtil.getMatch(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (com.google.common.base.Objects.equal(newComment, match)) { return oldList; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8523/buggy-version/src.com.ccnode.codegenerator.genCode.GenSqlService.java", "BodyUseAPI": [], "Fixed commit": "e01142d4b99f08ea58eb673a2ec5a8bc739c3852", "Url": "https://api.github.com/repos/zhengjunbase/codehelper.generator", "Date": "2016-07-25T07:11:07Z"},
{"Line": "=>240", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((dataContent) == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5486/buggy-version/EvalTool.src.evaluationtool.gui.EvalGUI.java", "BodyUseAPI": [], "Fixed commit": "ea33933747fb12c81985c1fe99f45180e2365b6f", "Url": "https://api.github.com/repos/knowing/annotation-tool", "Date": "2012-04-12T20:37:55Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((value) != 0) { evaluate(); operator = com.olleicua.calculator.CalculatorActivity.DIVIDE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6045/buggy-version/src.com.olleicua.calculator.CalculatorActivity.java", "BodyUseAPI": [], "Fixed commit": "8d5a9cf4e6ca9e38d3b707947730dc895551fb54", "Url": "https://api.github.com/repos/olleicua/calculator-android-app", "Date": "2012-04-10T18:42:00Z"},
{"Line": "=>618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").contains(\"Windows\")) { logger.info(\"Parsing windows path...\"); directoryPattern = \"^(.*\\\\\\\\)?(?:$|(.+?)(?:(\\\\\\\\.[^.]*$)|$))\"; }else { directoryPattern = \"^(.*/)?(?:$|(.+?)(?:(\\\\\\\\.[^.]*$)|$))\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8533/buggy-version/src.edu.ksu.cis.seacas.MainScreenSwing.java", "BodyUseAPI": [], "Fixed commit": "9dd4a754031ec57ef95a6778299330f09313d0ff", "Url": "https://api.github.com/repos/chandanchowdhury/BLOT-Gui", "Date": "2016-02-17T23:46:59Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (setVoidedObs(observationData, observation)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4555/buggy-version/api.src.main.java.org.openmrs.module.emrapi.encounter.mapper.ObsMapper.java", "BodyUseAPI": [], "Fixed commit": "4fc07b8dd7fd67f59c42e501ff8a224bdbe47460", "Url": "https://api.github.com/repos/vinayvenu/openmrs-module-emrapi", "Date": "2015-10-22T06:34:04Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.github.jasminb.jsonapi.ResourceConverter.Resource>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (resource == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3220/buggy-version/src.main.java.com.github.jasminb.jsonapi.ResourceConverter.java", "BodyUseAPI": [], "Fixed commit": "f42905dd5ae6109f22806a8d29e9a7d1134c2a68", "Url": "https://api.github.com/repos/Kevinrob/jsonapi-converter", "Date": "2016-07-26T14:34:28Z"},
{"Line": "=>285", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (includedResource == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3220/buggy-version/src.main.java.com.github.jasminb.jsonapi.ResourceConverter.java", "BodyUseAPI": [], "Fixed commit": "f42905dd5ae6109f22806a8d29e9a7d1134c2a68", "Url": "https://api.github.com/repos/Kevinrob/jsonapi-converter", "Date": "2016-07-26T14:34:28Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (frameToSend == null) { java.lang.System.err.println(\"FRAME SET WRONG\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5830/buggy-version/src.link.jack.DCFDXLLSSReadSendManager2000.java", "BodyUseAPI": [], "Fixed commit": "ece2b7c3cc709cfef816dbd78b0f948c999949be", "Url": "https://api.github.com/repos/i3anaan/serialkiller", "Date": "2014-05-27T08:36:35Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e.getKey().equalsIgnoreCase(\"Content-Length\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2931/buggy-version/containers.jersey2-routing.src.main.java.com.yahoo.gondola.container.client.ApacheHttpComponentProxyClient.java", "BodyUseAPI": [], "Fixed commit": "cc5097448d69f2c4fd7495499c51842ed32e31d1", "Url": "https://api.github.com/repos/yahoo/gondola", "Date": "2015-11-14T23:31:07Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.event.entity.EntityDamageEvent.getEntity()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((horse.getPassenger()) != null) { if ((damager != null) && (damager instanceof org.bukkit.entity.Player)) if (!(net.piratjsk.saddles.Saddles.hasAccess(saddle, damager))) event.setCancelled(true); }else { if (!(net.piratjsk.saddles.Saddles.hasAccess(saddle, damager))) event.setCancelled(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7994/buggy-version/src.main.java.net.piratjsk.saddles.listeners.HorseListener.java", "BodyUseAPI": [], "Fixed commit": "9ca0c15afa4631f392e0525ab7012c4479e8cdd5", "Url": "https://api.github.com/repos/piratjsk/Sddls", "Date": "2016-05-27T10:10:30Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((android.os.Build.VERSION.SDK_INT) < (android.os.Build.VERSION_CODES.HONEYCOMB)) { }else { progressBar.setAlpha(1.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5288/buggy-version/src.it.wm.CachedAsyncImageView.java", "BodyUseAPI": [], "Fixed commit": "f218477ce195c61c5cae30129cf96c4749680e31", "Url": "https://api.github.com/repos/eltazar/x2Android", "Date": "2012-12-10T20:40:12Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.asu.spring.quadriga.service.textfile.IFileSaveService.saveFileToLocal(edu.asu.spring.quadriga.domain.workspace.ITextFile)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (status == true) { txtFileDAO.saveNewDTO(txtFileDTO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1695/buggy-version/Quadriga.src.main.java.edu.asu.spring.quadriga.service.textfile.impl.TextFileManager.java", "BodyUseAPI": [], "Fixed commit": "70a0cda64e8e4572b19efc4ea0436353c1cbbd97", "Url": "https://api.github.com/repos/diging/quadriga", "Date": "2016-05-02T15:54:40Z"},
{"Line": "=>948", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((state) == (com.shinymayhem.radiopresets.RadioPlayer.STATE_STOPPED)) || ((state) == (com.shinymayhem.radiopresets.RadioPlayer.STATE_STOPPING))) { str += \" but stopped so it doesn't matter. \"; }else if ((mInterrupted) == false) { updateNotification(\"Network updated, reconnecting\", \"Cancel\", true); str += \" and now interrupted\"; mInterrupted = true; }else { str += \" but previously interrupted\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8184/buggy-version/src.com.shinymayhem.radiopresets.RadioPlayer.java", "BodyUseAPI": [], "Fixed commit": "6d2434ffc017a5d12e7b5771be65e60bf3938ee3", "Url": "https://api.github.com/repos/shinymayhem/radio-presets-widget", "Date": "2013-02-25T01:31:57Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4746/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "be2c83f21fdb11ec100b961e237c075e698e8e41", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.configRegistry) != null) { java.lang.String childCountPattern = this.configRegistry.getConfigAttribute(GroupByConfigAttributes.GROUP_BY_CHILD_COUNT_PATTERN, DisplayMode.NORMAL, labelStack.getLabels()); if ((childCountPattern != null) && ((childCountPattern.length()) > 0)) { return ((groupByObject.getValue()) + \" \") + (java.text.MessageFormat.format(childCountPattern, children.size())); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4205/buggy-version/org.eclipse.nebula.widgets.nattable.extension.glazedlists.src.org.eclipse.nebula.widgets.nattable.extension.glazedlists.groupBy.GroupByColumnAccessor.java", "BodyUseAPI": [], "Fixed commit": "4930c6157b86edea7d80ec2389420ea3971a1700", "Url": "https://api.github.com/repos/apauzies/nebula.widgets.nattable", "Date": "2013-11-21T19:52:06Z"},
{"Line": "=>1224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstSpecialIndex == (-1)) { firstSpecialIndex = i; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3968/buggy-version/src.main.java.com.alibaba.fastjson.serializer.SerializeWriter.java", "BodyUseAPI": [], "Fixed commit": "d91e38d6ef33f1e91a4bbe19fa5e660b8751e751", "Url": "https://api.github.com/repos/bohrqiu/fastjson", "Date": "2014-02-04T03:54:31Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["server.helpers.TileConnections.getConnectedTile(player.getStageID(),player.getRoomID(),java.awt.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (d != null) { gameWorld.removePlayers(); player.setLocation(d.getStage(), d.getRoom(), d.getLocation()); gameWorld.addPlayersToRooms(); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4774/buggy-version/src.server.gameWorld.GameLogic.java", "BodyUseAPI": ["server.helpers.TileFullLocation.getLocation()", "server.movable.Player.setLocation(d.getStage(),d.getRoom(),d.getLocation())", "server.helpers.TileFullLocation.getStage()", "server.helpers.TileFullLocation.getRoom()"], "Fixed commit": "4942cdc94990b8830119a38e89d20fcb66a6f762", "Url": "https://api.github.com/repos/chloegraham/adventureGame", "Date": "2015-10-14T09:57:41Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) != null) { return getArrayElementGetterType(variable.getType()); }else { return variable.getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8396/buggy-version/RonproEditorPlugin.BCsrc.bc.j2b.model.ExVariableGetterModel.java", "BodyUseAPI": [], "Fixed commit": "ef8e062ee91c7ef0e43cff3ab1779108ac2c8e65", "Url": "https://api.github.com/repos/macc704/CRiPS", "Date": "2015-05-19T04:36:32Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((index) != null) { return getArrayElementGetterType(variable.getType()); }else { return variable.getType(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8396/buggy-version/BlockConverter.src.bc.j2b.model.ExVariableGetterModel.java", "BodyUseAPI": [], "Fixed commit": "ef8e062ee91c7ef0e43cff3ab1779108ac2c8e65", "Url": "https://api.github.com/repos/macc704/CRiPS", "Date": "2015-05-19T04:36:32Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDead) { mergeDrawableStates(drawableState, se.chalmers.halfwaytospirit.waveapp.AvatarView.STATE_DEAD); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6381/buggy-version/WaveApp.app.src.main.java.se.chalmers.halfwaytospirit.waveapp.AvatarView.java", "BodyUseAPI": [], "Fixed commit": "db27ccad48ebfd7ed67a7e0282e24039297d1c50", "Url": "https://api.github.com/repos/noiselesslark/WeWave", "Date": "2016-01-09T10:36:24Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nodes == 0) { return java.lang.Long.MAX_VALUE; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6966/buggy-version/management.src.main.java.aic12.project3.service.loadBalancing.BalancingAlgorithmKeepQueueConstantImpl_Thread.java", "BodyUseAPI": [], "Fixed commit": "05470131c5a13f25b0c926321736e52c8cbc4bf0", "Url": "https://api.github.com/repos/johannesmauerer/aic12_project3", "Date": "2013-01-17T01:07:56Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mPresenter) != null) { mPresenter.unsubscribe(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7277/buggy-version/library.src.main.java.io.julian.appchooser.AppChooser.java", "BodyUseAPI": [], "Fixed commit": "2bfd7f0b770b94401f2671f71c16228cee5f1363", "Url": "https://api.github.com/repos/Pigcasso/AppChooser", "Date": "2017-05-09T05:57:50Z"},
{"Line": "=>723", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (curSecond < 5) { speed = ((com.app.Utils.Settings.MAX_SPEED_FOR_MINUTES[0]) * curSecond) / 5; }else { speed = com.app.Utils.Settings.MAX_SPEED_FOR_MINUTES[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3475/buggy-version/src.com.app.TerrainerApp.WorkoutActivity.java", "BodyUseAPI": [], "Fixed commit": "f6123079901f69b50be605d527b0a8f86a9d2cd2", "Url": "https://api.github.com/repos/sherryren/TerrainerApp", "Date": "2014-12-02T03:07:55Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<java.lang.Integer>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((stockPricesYesterday.get(i)) < minPrice) { minPrice = stockPricesYesterday.get(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5902/buggy-version/src.main.java.interviewcake.InterviewCake1.java", "BodyUseAPI": ["java.util.List<java.lang.Integer>.get(int)"], "Fixed commit": "7c158b36634b45ae4b76e8242dba2bf069dd9612", "Url": "https://api.github.com/repos/teeceli/BasicJava-Sandbox", "Date": "2016-02-25T06:02:10Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (nodeMetadata == null) { return false; }else { return (nodeMetadata.getUserMetadata().containsKey(tagKey)) && (nodeMetadata.getUserMetadata().get(tagKey).equals(tagValue)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/677/buggy-version/hazelcast-cloud.src.main.java.com.hazelcast.cloud.CloudClient.java", "BodyUseAPI": ["nodeMetadata.getUserMetadata().get(java.lang.String)", "nodeMetadata.getUserMetadata().get(tagKey).equals(java.lang.String)", "nodeMetadata.getUserMetadata().containsKey(java.lang.String)", "org.jclouds.compute.domain.NodeMetadata.getUserMetadata()", "org.jclouds.compute.domain.NodeMetadata.getUserMetadata()"], "Fixed commit": "e68b81b81f00cfa30576cfca18bd9a5ee13b6465", "Url": "https://api.github.com/repos/pires/hazelcast", "Date": "2014-04-18T10:14:31Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nars.language.Conjunction.removeFirstInterval(nars.language.Term[])"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((newArgList.length) == 1) { return newArgList[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/151/buggy-version/nars_core.nars.language.Conjunction.java", "BodyUseAPI": [], "Fixed commit": "bdd8e0d800f89847b85bec9ac26a56c04f007329", "Url": "https://api.github.com/repos/opennars/opennars", "Date": "2016-12-25T12:15:30Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(sc.mixUpdates)) && ((updating) != (fe.annotations().contains(Ann.Q_UPDATING)))) throw (updating ? UPFUNCNOTUP : UPFUNCUP).get(info);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2045/buggy-version/basex-core.src.main.java.org.basex.query.func.DynFuncCall.java", "BodyUseAPI": [], "Fixed commit": "846dbbecadd00d898b90acbb95184d5295d39233", "Url": "https://api.github.com/repos/BaseXdb/basex", "Date": "2014-11-24T05:53:29Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.Event.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((p.getOwner().getCurrentAmmo()) == 0) { if (!(controller.AudioController.soundSys.playing(\"noAmmo\"))) playFX(\"noAmmo\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3378/buggy-version/src.controller.AudioController.java", "BodyUseAPI": [], "Fixed commit": "766375e0b80a6407f219100e7568997ec796e236", "Url": "https://api.github.com/repos/johanbrook/medioqre", "Date": "2012-05-22T14:20:10Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (mapEscanos.containsKey(i.getKey())) { mapEscanos.put(i.getKey(), ((i.getValue()) + (mapEscanos.get(i.getKey())))); }else { mapEscanos.put(i.getKey(), i.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/252/buggy-version/EleccionsParlament.src.Modelo.Elecciones.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,int)", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getKey()", "java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String)", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getValue()", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getValue()", "java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String,java.lang.Integer)", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getKey()", "java.util.Map.Entry<java.lang.String, java.lang.Integer>.getKey()"], "Fixed commit": "972a72300d91186bce7854b7e5a183f049924234", "Url": "https://api.github.com/repos/ariadnana/ProjecteCdP", "Date": "2017-12-29T22:09:49Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (e.getPlayer().hasPermission(\"randomspawn.makesign\")) { org.bukkit.configuration.file.FileConfiguration c = com.matthewhatcher.randomspawn.RandomSpawn.getInstance().getConfig(); e.setLine(0, \"[Random Spawn]\"); e.setLine(1, c.getString(\"sign-messages.line-1\").replaceAll(\"&\", \"\u00a7\")); e.setLine(2, c.getString(\"sign-messages.line-2\").replaceAll(\"&\", \"\u00a7\")); e.setLine(3, c.getString(\"sign-messages.line-3\").replaceAll(\"&\", \"\u00a7\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5809/buggy-version/src.main.java.com.matthewhatcher.randomspawn.Listeners.SignListener.java", "BodyUseAPI": ["org.bukkit.event.block.SignChangeEvent.setLine(int,c.getString(\"sign-messages.line-1\").replaceAll(\"&\", \"\u00a7\"))", "org.bukkit.event.block.SignChangeEvent.setLine(int,c.getString(\"sign-messages.line-2\").replaceAll(\"&\", \"\u00a7\"))", "org.bukkit.event.block.SignChangeEvent.setLine(int,c.getString(\"sign-messages.line-3\").replaceAll(\"&\", \"\u00a7\"))", "org.bukkit.event.block.SignChangeEvent.setLine(int,java.lang.String)"], "Fixed commit": "0ee2008f257ac6490cb33711eb409abe1eb4ebdc", "Url": "https://api.github.com/repos/MatthewSH/spigot-RandomSpawn", "Date": "2017-01-16T09:43:58Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (requestData.get(\"grant_type\").equals(\"authorization_code\")) { if ((controllers.AuthorizationGrant.findByCode(requestData.get(\"code\"))) == null) { errs.put(\"code\", \"invalid\"); }else if ((controllers.AuthorizationGrant.findByCode(requestData.get(\"code\")).client) != client) { errs.put(\"client_id\", \"provided client_id does not fit authorization code\"); } }else if (requestData.get(\"grant_type\").equals(\"refresh_token\")) { if ((controllers.Token.findByRefreshToken(requestData.get(\"refresh_token\"))) == null) { errs.put(\"refresh_token\", \"invalid\"); }else if ((controllers.Token.findByRefreshToken(requestData.get(\"refresh_token\")).client) != client) { errs.put(\"client_id\", \"provided client_id does not fit refresh_token\"); }else { errs.put(\"grant_type\", \"invalid, only serving code and refresh_token\"); } }else { errs.put(\"client_secret\", \"invalid\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6909/buggy-version/app.controllers.APIOAuthController.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "controllers.Token.findByRefreshToken(java.lang.String)", "controllers.Token.findByRefreshToken(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String)", "controllers.AuthorizationGrant.findByCode(java.lang.String)", "controllers.AuthorizationGrant.findByCode(java.lang.String)"], "Fixed commit": "924eb0f814a86072913852874663258cc2d0e588", "Url": "https://api.github.com/repos/roechi/htwplus_restAPI", "Date": "2015-10-02T19:18:37Z"},
{"Line": "=>20", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((_myrows) == 0) { _min[(ncols - 1)] = java.lang.Double.POSITIVE_INFINITY; _max[(ncols - 1)] = java.lang.Double.NEGATIVE_INFINITY; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4554/buggy-version/src.main.java.water.parser.SVMLightDParseTask.java", "BodyUseAPI": [], "Fixed commit": "dda24ac5c7275ef240ce9dd55df17c24e47b995b", "Url": "https://api.github.com/repos/0xdata/h2o", "Date": "2013-08-05T20:32:01Z"},
{"Line": "=>291", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (errorMsg.equals(\"pm_messagesent\")) { return errorMsg; }else if (errorMsg.equals(\"nopermission_loggedout\")) { loginAttempt(); if (getConnected()) { return sendMsg(user, title, message); }else { return errorMsg; } }else { Base.Console.warning(((\"SC2Mafia Forum API unable send message! Reason: '\" + errorMsg) + \"'\")); return errorMsg; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4277/buggy-version/src.com.inverseinnovations.eMafiaServer.includes.classes.Server.SC2MafiaAPI.java", "BodyUseAPI": ["Base.Console.warning(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "cc78677b6dac5689da90c55aef73915767daf027", "Url": "https://api.github.com/repos/apocist/eMafiaServer", "Date": "2014-02-07T13:14:15Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(fkStatement.equals(\"\"))) { colsCreateStmnt += \",\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3256/buggy-version/app.src.main.java.me.shalvah.simpledb.Table.java", "BodyUseAPI": [], "Fixed commit": "996740c62090656adb76a346afeb4558fa98d1b4", "Url": "https://api.github.com/repos/shalvah/dbtest", "Date": "2016-10-25T00:09:32Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.values.length) >= 6) { return new org.sensingkit.sensingkitlib.model.data.RotationData(java.lang.System.currentTimeMillis(), event.values[0], event.values[1], event.values[2], event.values[3], event.values[4]); }else { return new org.sensingkit.sensingkitlib.model.data.RotationData(java.lang.System.currentTimeMillis(), event.values[0], event.values[1], event.values[2]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3137/buggy-version/SensingKitLib.src.main.java.org.sensingkit.sensingkitlib.modules.Rotation.java", "BodyUseAPI": [], "Fixed commit": "8a4e6cea18c96dc34850179a24be7f5611f8a11d", "Url": "https://api.github.com/repos/SensingKit/SensingKit-Android", "Date": "2015-02-19T21:19:38Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isAdded())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6243/buggy-version/src.com.firebirdberlin.nightdream.PreferencesFragment.java", "BodyUseAPI": [], "Fixed commit": "861f012b784ffca0047c2e8cdcc0459c6861f214", "Url": "https://api.github.com/repos/firebirdberlin/nightdream", "Date": "2016-08-06T20:15:15Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<html2windows.dom.AttrInter>.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (index == (-1)) attributeList.add(newAttr); else attributeList.set(index, newAttr);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/297/buggy-version/src.html2windows.dom.ElementInter.java", "BodyUseAPI": ["java.util.ArrayList<html2windows.dom.AttrInter>.set(int,html2windows.dom.AttrInter)"], "Fixed commit": "c396ac0cdb1b0745fa3e6a9a23cbc193a61e4117", "Url": "https://api.github.com/repos/HtmlToJavaWindowsBuilder/HtmlToJavaWindowsBuilder", "Date": "2013-01-15T13:17:32Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.LinearLayout.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((int) (ev.getY())) > (view.getHeight())) { super.onTouchEvent(ev); return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3711/buggy-version/app.src.main.java.com.example.peterchu.watplanner.ui.WeekViewScrollView.java", "BodyUseAPI": ["android.widget.ScrollView.onTouchEvent(android.view.MotionEvent)"], "Fixed commit": "4f1cf6fbab0df087050a013b10cec84d20e6bc91", "Url": "https://api.github.com/repos/PeterChu2/WATPlanner", "Date": "2017-07-21T15:34:00Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (source instanceof org.opencds.cqf.cql.data.fhir.InstantType) { return toDateTime(((org.opencds.cqf.cql.data.fhir.InstantType) (source))); }else if (result instanceof org.opencds.cqf.cql.data.fhir.PrimitiveType) { return ((org.opencds.cqf.cql.data.fhir.PrimitiveType) (result)).getValue(); }else { return result; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8634/buggy-version/cql-engine-fhir.src.main.java.org.opencds.cqf.cql.data.fhir.BaseFhirDataProvider.java", "BodyUseAPI": [], "Fixed commit": "39f04eb74b23a29ae0bc8e5ebd4b81bc8ba49deb", "Url": "https://api.github.com/repos/DBCG/cql_engine", "Date": "2017-05-11T23:54:05Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Calendar.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((reports[month]) == null) reports[month] = new Rev_report();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1814/buggy-version/src.Rev_rep_list.java", "BodyUseAPI": [], "Fixed commit": "18fc8426f3c8e0ae79c39f42a000e6c7271d407b", "Url": "https://api.github.com/repos/Chen-Hailin/RRPSS", "Date": "2016-11-07T15:44:26Z"},
{"Line": "=>268", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((funcComboBox2.getItemCount()) > 1) funcComboBox2.setSelectedIndex(1);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4790/buggy-version/lorian.graph.CalculateFrame.java", "BodyUseAPI": ["javax.swing.JComboBox<java.lang.String>.setSelectedIndex(int)"], "Fixed commit": "aead62b151307497b0c123f344f88b1b72f60522", "Url": "https://api.github.com/repos/lorian1333/graph", "Date": "2013-04-04T20:42:47Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(_defDirPath.equals(\"\"))) { controller.toConsole(((\"New default result directory:\\n\" + (_defDirPath)) + \"\\n\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1198/buggy-version/QvMeas_0.2.src.main.IOWrapper.java", "BodyUseAPI": [], "Fixed commit": "5e29fed82bb340da236901a7cb15678dbc95e774", "Url": "https://api.github.com/repos/samooja316/QvMeas_0.2", "Date": "2015-08-19T09:16:45Z"},
{"Line": "=>1056", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(_controller.getDefaultDirectory().equals(\"\"))) { _filePathField.setText((((_controller.getDefaultDirectory()) + \"\\\\\") + (generateName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1198/buggy-version/QvMeas_0.2.src.main.Window.java", "BodyUseAPI": ["javax.swing.JTextField.setText((((_controller.getDefaultDirectory()) + \"\\\\\") + (generateName())))", "main.Core.getDefaultDirectory()"], "Fixed commit": "5e29fed82bb340da236901a7cb15678dbc95e774", "Url": "https://api.github.com/repos/samooja316/QvMeas_0.2", "Date": "2015-08-19T09:16:45Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getGraphicalRepresentation().getIsMultilineAllowed())) { if ((text.equals(\"\\n\")) || (text.equals(\"\\r\\n\"))) { return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2306/buggy-version/flexodesktop.GUI.flexographicalengine.src.main.java.org.openflexo.fge.view.LabelView.java", "BodyUseAPI": [], "Fixed commit": "bde49bb0b594d7f5752212bdcd45491e88f14c0e", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-02-27T14:48:41Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getGraphicalRepresentation().getIsMultilineAllowed())) { if (length == 0) { if ((text.equals(\"\\n\")) || (text.equals(\"\\r\\n\"))) { return; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2306/buggy-version/flexodesktop.GUI.flexographicalengine.src.main.java.org.openflexo.fge.view.LabelView.java", "BodyUseAPI": [], "Fixed commit": "bde49bb0b594d7f5752212bdcd45491e88f14c0e", "Url": "https://api.github.com/repos/agilebirds/openflexo", "Date": "2013-02-27T14:48:41Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.bukkit.inventory.PlayerInventory.getHelmet()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (!(oldItem == null)) inv.addItem(oldItem);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5654/buggy-version/src.main.java.cz.sycha.hattie.Main.java", "BodyUseAPI": ["org.bukkit.inventory.PlayerInventory.addItem(org.bukkit.inventory.ItemStack)"], "Fixed commit": "f55c1f40b99d63b98abe76e0fa7937f80c68b9d7", "Url": "https://api.github.com/repos/ImagineCraft/Hattie", "Date": "2016-09-02T22:07:45Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((blockData.slickness) > 0) slipperiness = blockData.slickness; else quadrum.Quadrum.log(Level.WARN, \"%s had a slickness value of 0 or lower, this could cause unstable blocks or even world corruption when not used right. Slickness has not been set!\", blockData.name);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7985/buggy-version/src.main.java.quadrum.block.BlockQuadrum.java", "BodyUseAPI": [], "Fixed commit": "f1d2c153cd16d4a04626dd788b4f9a6b6f41b3ff", "Url": "https://api.github.com/repos/BigXplosion/Quadrum-2", "Date": "2015-02-19T12:52:21Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (p != null) { me.wirlie.allbanks.tempdata.BankSession.closeSession(p.getUniqueId()); if (p.isOnline()) p.playSound(p.getLocation(), Sound.BLOCK_NOTE_PLING, 9, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5557/buggy-version/AllBanks2.src.main.java.me.wirlie.allbanks.tempdata.BankSession.java", "BodyUseAPI": ["org.bukkit.entity.Player.playSound(p.getLocation(),Sound.BLOCK_NOTE_PLING,int,int)", "org.bukkit.entity.Player.isOnline()", "org.bukkit.entity.Player.getUniqueId()", "org.bukkit.entity.Player.getLocation()", "me.wirlie.allbanks.tempdata.BankSession.closeSession(p.getUniqueId())"], "Fixed commit": "e0ae52119b4ada0844b37a4c245e0a5bf0943940", "Url": "https://api.github.com/repos/Wirlie/AllBanks-2", "Date": "2016-05-06T07:19:01Z"},
{"Line": "=>168", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.bukkit.Bukkit.getPlayer(uuid).isOnline()) me.wirlie.allbanks.Translation.getAndSendMessage(org.bukkit.Bukkit.getPlayer(uuid), StringsID.SESSION_CLOSED, true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5557/buggy-version/AllBanks2.src.main.java.me.wirlie.allbanks.tempdata.BankSession.java", "BodyUseAPI": ["me.wirlie.allbanks.Translation.getAndSendMessage(org.bukkit.Bukkit.getPlayer(uuid),StringsID.SESSION_CLOSED,boolean)", "org.bukkit.Bukkit.getPlayer(java.util.UUID)"], "Fixed commit": "e0ae52119b4ada0844b37a4c245e0a5bf0943940", "Url": "https://api.github.com/repos/Wirlie/AllBanks-2", "Date": "2016-05-06T07:19:01Z"},
{"Line": "=>21", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((featureHouseComposer) != null) { featureHouseComposer.setUseFuji((!(featureHouseComposer.usesFuji()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8569/buggy-version/plugins.de.ovgu.featureide.core.featurehouse.src.de.ovgu.featureide.featurehouse.ui.actions.EnableFujiAction.java", "BodyUseAPI": [], "Fixed commit": "55e91b1fe53a4c2f46977b63e038386cb57f1b0f", "Url": "https://api.github.com/repos/kruegers/FeatureIDE", "Date": "2014-12-18T15:31:51Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tableTool.getOptions().getRowOption(OptionsRunner.DEFAULT_CODE,R)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (option != null) { optionsRunner.runOption(option, row, newTab, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4652/buggy-version/src.main.java.uk.co.nickthecoder.wrkfoo.TableToolPanel.java", "BodyUseAPI": ["uk.co.nickthecoder.wrkfoo.OptionsRunner.runOption(uk.co.nickthecoder.wrkfoo.option.Option,R,boolean,boolean)"], "Fixed commit": "31c5b2bd25f89100ff82d2bd84498296c6947ac3", "Url": "https://api.github.com/repos/nickthecoder/wrkfoo", "Date": "2017-03-17T13:28:29Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (set.isEmpty()) { map.remove(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4347/buggy-version/core.src.main.java.org.ogcs.event.MultiListenerEventDispatcher.java", "BodyUseAPI": [], "Fixed commit": "2e11ea20e25ee36d07972107535f23ba725563f7", "Url": "https://api.github.com/repos/ogcs/Okra", "Date": "2016-05-14T11:22:14Z"},
{"Line": "=>248", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isRecipe)) if (list.isShared()) { ch.unibe.ese.shopnote.share.requests.GetSharedFriendsRequest gsfRequest = new ch.unibe.ese.shopnote.share.requests.GetSharedFriendsRequest(getMyPhoneNumber(), list.getId()); syncManager.addRequest(gsfRequest); syncManager.synchronise(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6437/buggy-version/Code.ShoppingList.src.ch.unibe.ese.shopnote.activities.ShareActivity.java", "BodyUseAPI": [], "Fixed commit": "5b3749e8765228b3394fa519b6be642925ff64cb", "Url": "https://api.github.com/repos/ese-unibe-ch/ese2013-team8", "Date": "2013-12-03T16:18:11Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["command.library.CmdVer.getParameterCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (paramCount > 1) { sb.append(\" invalid number of parameters\"); outputter.printLine(sb.toString()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3942/buggy-version/src.main.java.command.library.CmdVer.java", "BodyUseAPI": [], "Fixed commit": "23ac99f04acb301a6f32027c9e6d2b72eb158c69", "Url": "https://api.github.com/repos/MHGRed/DosBox", "Date": "2016-11-15T05:29:45Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["command.library.CmdVer.getParameterCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (paramCount == 0) { outputter.printLine(\" version 4.2 \"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3942/buggy-version/src.main.java.command.library.CmdVer.java", "BodyUseAPI": [], "Fixed commit": "23ac99f04acb301a6f32027c9e6d2b72eb158c69", "Url": "https://api.github.com/repos/MHGRed/DosBox", "Date": "2016-11-15T05:29:45Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["command.library.CmdVer.getParameterCount()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (paramCount == 1) { if (validateParameter(this.getParameterAt(0))) { sb.append(\"version 4.2 \\n\"); sb.append(\"Team Members: Jay Holmes, Adrian Acala, Josh Daniels, Luis C. Cisneros\"); }else { sb.append((\" unrecognized parameter \" + (this.getParameterAt(0)))); } outputter.printLine(sb.toString()); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3942/buggy-version/src.main.java.command.library.CmdVer.java", "BodyUseAPI": [], "Fixed commit": "23ac99f04acb301a6f32027c9e6d2b72eb158c69", "Url": "https://api.github.com/repos/MHGRed/DosBox", "Date": "2016-11-15T05:29:45Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.ArrayList<hu.bivia.bivia.model.MeasuredDay>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((ridingDay.getRideCount()) == 1) { myRidingDays.remove(dayIndex); }else { ridingDay.deleteRideFromPosition(rideIndex); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8455/buggy-version/BMeterApp.BiVia.src.hu.bivia.bivia.view.BiViaMainActivityView.java", "BodyUseAPI": ["hu.bivia.bivia.model.MeasuredDay.deleteRideFromPosition(int)"], "Fixed commit": "8348847aad3475442a3d7280f55716de1ada2bc9", "Url": "https://api.github.com/repos/throbi/BiVia", "Date": "2013-12-01T21:19:47Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.players) != null) { this.players.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1854/buggy-version/src.de.mitnehmenplugin.MitnehmenPlugin.java", "BodyUseAPI": [], "Fixed commit": "ae65440b0b2bd2d9548d6c1d3801e73a6221c82c", "Url": "https://api.github.com/repos/Craftolution/MitnehmenPlugin", "Date": "2014-08-29T13:53:03Z"},
{"Line": "=>224", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((this.getDataFolder().listFiles()) != null) && (!(this.getDataFolder().listFiles().isEmpty()))) { for (final java.io.File file : this.getDataFolder().listFiles()) { if ((file.getName().contains(\".yml\")) && (!(file.getName().contains(\"config\")))) { this.players.add(file.getName().substring(0, ((file.getName().length()) - 4))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1854/buggy-version/src.de.mitnehmenplugin.MitnehmenPlugin.java", "BodyUseAPI": [], "Fixed commit": "ae65440b0b2bd2d9548d6c1d3801e73a6221c82c", "Url": "https://api.github.com/repos/Craftolution/MitnehmenPlugin", "Date": "2014-08-29T13:53:03Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pieces[x][y]) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6873/buggy-version/src.com.sweetdum.dschess.game.ChessBoard.java", "BodyUseAPI": [], "Fixed commit": "128447c94aaa1a20629743941269e6ce5b9ac99d", "Url": "https://api.github.com/repos/linmx0130/DSChess", "Date": "2017-01-04T07:18:20Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pieces[nx][ny]) != null) { if ((pieces[nx][ny].getOwner()) == (pieces[x][y].getOwner())) return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6873/buggy-version/src.com.sweetdum.dschess.game.ChessBoard.java", "BodyUseAPI": ["pieces[x][y].getOwner()", "pieces[nx][ny].getOwner()"], "Fixed commit": "128447c94aaa1a20629743941269e6ce5b9ac99d", "Url": "https://api.github.com/repos/linmx0130/DSChess", "Date": "2017-01-04T07:18:20Z"},
{"Line": "=>289", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (current == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2116/buggy-version/src.main.java.lang.celadon.Manager.java", "BodyUseAPI": [], "Fixed commit": "3c26442c98bb9260fe1a8684d444fb11a42de49d", "Url": "https://api.github.com/repos/tommyettinger/celadon", "Date": "2017-11-17T03:57:23Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jivesoftware.smack.packet.AbstractError.getDescriptiveText(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (descriptiveText == null) { descriptiveText = getDescriptiveText(\"en\"); if (descriptiveText == null) { descriptiveText = getDescriptiveText(\"\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1622/buggy-version/smack-core.src.main.java.org.jivesoftware.smack.packet.AbstractError.java", "BodyUseAPI": [], "Fixed commit": "8a8c01a4e5e8f35d5e29d50c89afc2a3bf9dbe3d", "Url": "https://api.github.com/repos/Flowdalic/Smack", "Date": "2017-03-16T10:25:38Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.theiner.kinoxscanner.context.KinoxScannerApplication.getErgebnisliste()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ergebnisse != null) for (int e = 0; e < (ergebnisse.size()); e++) { if (ergebnisse.get(e).foundElement.equals(aktuelleSerie)) ergebnisse.remove(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7938/buggy-version/app.src.main.java.org.theiner.kinoxscanner.activities.ManageSerienFragment.java", "BodyUseAPI": ["java.util.List<org.theiner.kinoxscanner.data.CheckErgebnis>.remove(int)", "java.util.List<org.theiner.kinoxscanner.data.CheckErgebnis>.get(int)", "ergebnisse.get(e).foundElement.equals(org.theiner.kinoxscanner.data.Serie)", "java.util.List<org.theiner.kinoxscanner.data.CheckErgebnis>.size()"], "Fixed commit": "f3c64ce4824e2a28aa2416e1c512a2870b706dcb", "Url": "https://api.github.com/repos/devnull69/KinoxScanner", "Date": "2016-04-16T08:04:04Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((adapter) != null) adapter.notifyDataSetChanged();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7938/buggy-version/app.src.main.java.org.theiner.kinoxscanner.activities.OverviewFragment.java", "BodyUseAPI": [], "Fixed commit": "f3c64ce4824e2a28aa2416e1c512a2870b706dcb", "Url": "https://api.github.com/repos/devnull69/KinoxScanner", "Date": "2016-04-16T08:04:04Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.theiner.kinoxscanner.context.KinoxScannerApplication.getErgebnisliste()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (ergebnisse != null) for (int e = 0; e < (ergebnisse.size()); e++) { if (ergebnisse.get(e).foundElement.equals(aktuellerFilm)) ergebnisse.remove(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7938/buggy-version/app.src.main.java.org.theiner.kinoxscanner.activities.ManageFilmeFragment.java", "BodyUseAPI": ["ergebnisse.get(e).foundElement.equals(org.theiner.kinoxscanner.data.Film)", "java.util.List<org.theiner.kinoxscanner.data.CheckErgebnis>.get(int)", "java.util.List<org.theiner.kinoxscanner.data.CheckErgebnis>.remove(int)", "java.util.List<org.theiner.kinoxscanner.data.CheckErgebnis>.size()"], "Fixed commit": "f3c64ce4824e2a28aa2416e1c512a2870b706dcb", "Url": "https://api.github.com/repos/devnull69/KinoxScanner", "Date": "2016-04-16T08:04:04Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["models.module.University.findByName(form.get().university)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (university != null) { user.studentProfile.university = university; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8159/buggy-version/etoile-play.app.controllers.StudentController.java", "BodyUseAPI": [], "Fixed commit": "cbee05e1bfba04481d03c12cbd247fdf004b1dc2", "Url": "https://api.github.com/repos/lopesdasilva/etoile", "Date": "2013-05-20T15:11:13Z"},
{"Line": "=>1578", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (targetOption != (beast.app.treeannotator.TreeAnnotator.Target.USER_TARGET_TREE)) targetTree.initAndValidate();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2469/buggy-version/src.beast.app.treeannotator.TreeAnnotator.java", "BodyUseAPI": [], "Fixed commit": "2a192e8ec6401971019ea0a9ad76675539842f83", "Url": "https://api.github.com/repos/tgvaughan/beast2", "Date": "2016-10-13T01:02:16Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((output_pipes[k]) != null) { output_pipes[k].activation_times[i] = input_pipes[j].activation_times[i]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/911/buggy-version/src.Engine.Module.java", "BodyUseAPI": [], "Fixed commit": "c05d47ad5c04d9cc687ba2e5f3a36206a1259869", "Url": "https://api.github.com/repos/Orpheon/Synthesizer", "Date": "2013-10-03T11:44:16Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.mount) != null) { this.removeMount(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7689/buggy-version/src.main.java.com.github.dsh105.echopet.entity.pet.Pet.java", "BodyUseAPI": [], "Fixed commit": "2f7e50c98c6fc2e0fd6f356ada43495aa1094644", "Url": "https://api.github.com/repos/DSH105/EchoPet", "Date": "2013-07-14T07:37:46Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.size) < 0) { this.size = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6096/buggy-version/catroid.src.org.catrobat.catroid.livewallpaper.WallpaperCostume.java", "BodyUseAPI": [], "Fixed commit": "41e70e62966d5f8900e267fec518119280e07a84", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2012-12-07T09:44:12Z"},
{"Line": "=>539", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.widget.EditText.getSelectionEnd()", "android.widget.EditText.getSelectionStart()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (currentStart == currentEnd) { currentPosition = currentStart; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6758/buggy-version/android.libraries.TweetLanesCore.src.com.tweetlanes.android.core.view.ComposeBaseFragment.java", "BodyUseAPI": [], "Fixed commit": "7ec43e40ef4c6446ffe36937fefe5d73ead3410e", "Url": "https://api.github.com/repos/chrislacy/TweetLanes", "Date": "2014-01-15T14:41:31Z"},
{"Line": "=>542", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentPosition < 0) currentPosition = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6758/buggy-version/android.libraries.TweetLanesCore.src.com.tweetlanes.android.core.view.ComposeBaseFragment.java", "BodyUseAPI": [], "Fixed commit": "7ec43e40ef4c6446ffe36937fefe5d73ead3410e", "Url": "https://api.github.com/repos/chrislacy/TweetLanes", "Date": "2014-01-15T14:41:31Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 0) { if ((ps.insertText(pid, text)) > 0) { java.lang.System.out.println(\"Text \uc785\ub825\uc131\uacf5\"); }else { java.lang.System.out.println(\"Text \uc785\ub825\uc2e4\ud328\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3951/buggy-version/src.main.java.only.controller.FileUploadController.java", "BodyUseAPI": [], "Fixed commit": "41d2375c78c5ce5e84082a7ee2062be4bdb485a5", "Url": "https://api.github.com/repos/chloeYu/OnlySpring", "Date": "2017-09-20T10:28:14Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (i == 1) { java.lang.String filePath = ((java.lang.System.getProperty(\"catalina.home\")) + (java.io.File.separator)) + \"uploadFiles\"; java.lang.System.out.println(imageUpload.getOriginalFilename()); if ((ps.insertImage(pid, imageUpload.getOriginalFilename())) > 0) { java.lang.System.out.println(\"Image \uc785\ub825\uc131\uacf5\"); }else { java.lang.System.out.println(\"Image \uc785\ub825\uc2e4\ud328\"); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3951/buggy-version/src.main.java.only.controller.FileUploadController.java", "BodyUseAPI": [], "Fixed commit": "41d2375c78c5ce5e84082a7ee2062be4bdb485a5", "Url": "https://api.github.com/repos/chloeYu/OnlySpring", "Date": "2017-09-20T10:28:14Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args.version) org.gitools.cli.Main.printVersion();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4901/buggy-version/gitools-cli.src.main.java.org.gitools.cli.AnalysisTool.java", "BodyUseAPI": [], "Fixed commit": "f7668dff48f004efefd378c598ef11cbf8071fb8", "Url": "https://api.github.com/repos/gitools/gitools", "Date": "2012-04-11T11:19:56Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (args.version) org.gitools.cli.Main.printVersion();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4901/buggy-version/gitools-cli.src.main.java.org.gitools.cli.convert.ConvertTool.java", "BodyUseAPI": [], "Fixed commit": "f7668dff48f004efefd378c598ef11cbf8071fb8", "Url": "https://api.github.com/repos/gitools/gitools", "Date": "2012-04-11T11:19:56Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!isLastEditorEmailInMap) { teammates.common.datatransfer.attributes.InstructorAttributes instructor = instructorsDb.getInstructorForEmail(response.courseId, comment.lastEditorEmail); java.lang.String commentLastEditorName = ((instructor.displayedName) + \" \") + (instructor.name); bundle.instructorEmailNameTable.put(comment.lastEditorEmail, commentLastEditorName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8224/buggy-version/src.main.java.teammates.storage.search.FeedbackResponseCommentSearchDocument.java", "BodyUseAPI": [], "Fixed commit": "9eb8677eb3d61c92b9fc01e5ce367d6b6f1ac837", "Url": "https://api.github.com/repos/whipermr5/teammates", "Date": "2017-07-07T08:59:16Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((getValue(name)) instanceof java.util.Calendar) { return ((java.util.Calendar) (getValue(name))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5393/buggy-version/src.org.futurepages.menta.core.input.AbstractInput.java", "BodyUseAPI": ["org.futurepages.menta.core.input.AbstractInput.getValue(java.lang.String)"], "Fixed commit": "20988a4f918fbfadf9682f5d02395c229171151f", "Url": "https://api.github.com/repos/futurepages/4", "Date": "2016-10-21T05:26:50Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.sql.method.misc.OSQLMethodFormat.getParameterValue(com.orientechnologies.orient.core.db.record.OIdentifiable,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (v == null) v = iParams[0].toString();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5153/buggy-version/core.src.main.java.com.orientechnologies.orient.core.sql.method.misc.OSQLMethodFormat.java", "BodyUseAPI": [], "Fixed commit": "ffc3884f1d02dab462e4eac09a08a645505e1ceb", "Url": "https://api.github.com/repos/maggiolo00/orientdb", "Date": "2014-04-01T10:51:19Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fresh) { if ((command.length()) > 21) command = command.substring(21, command.length()); fresh = false; java.lang.System.out.println(command); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2775/buggy-version/src.ConnectionHandler.java", "BodyUseAPI": [], "Fixed commit": "b20bb809e57c08319a16897f36083b29badd2414", "Url": "https://api.github.com/repos/Frontlinjen/CDIO2-D2", "Date": "2016-04-08T19:10:22Z"},
{"Line": "=>658", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!peerNameFound) { ((org.jdiameter.client.api.controller.IRealm) (r)).addPeerName(peerURI.getFQDN()); org.jdiameter.server.impl.MutablePeerTableImpl.logger.debug(\"Adding peerName-{} to realm-{}\", peerURI.getFQDN(), realm); }else { org.jdiameter.server.impl.MutablePeerTableImpl.logger.debug(\"Skipped adding peerName-{} to realm-{}, because it already exists\", peerURI.getFQDN(), realm); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3528/buggy-version/core.jdiameter.impl.src.main.java.org.jdiameter.server.impl.MutablePeerTableImpl.java", "BodyUseAPI": [], "Fixed commit": "47448f3989c8f36b26a1d33e2fb0630e9ca8c092", "Url": "https://api.github.com/repos/tomazas/jdiameter", "Date": "2015-09-02T09:10:50Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((column instanceof org.safris.xdb.xds.xe.$xds_clob) || (column instanceof org.safris.xdb.xds.xe.$xds_blob)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2499/buggy-version/xdb.schema.src.main.java.org.safris.xdb.schema.spec.SQLSpec.java", "BodyUseAPI": [], "Fixed commit": "59e3acede01ebaf29df4513b36ed0bd59d632417", "Url": "https://api.github.com/repos/SevaSafris/java", "Date": "2016-12-23T03:39:28Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.randoom.setlx.types.Value.toJDoubleValue(org.randoom.setlx.utilities.State)", "java.util.HashMap<org.randoom.setlx.parameters.ParameterDefinition, org.randoom.setlx.types.Value>.get(org.randoom.setlx.parameters.ParameterDefinition)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((k.toJDoubleValue(state)) == 1) && (minLowerBound == 0)) { minLowerBound = minLowerBound + (interval.toJDoubleValue(state)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3388/buggy-version/interpreter.stat_addon.src.main.java.org.randoom.setlx.functions.PD_stat_chiSquared_plot.java", "BodyUseAPI": ["org.randoom.setlx.types.Value.toJDoubleValue(org.randoom.setlx.utilities.State)"], "Fixed commit": "964c97166337f6b402c066f7b0fff3f6b8a9a564", "Url": "https://api.github.com/repos/jonassiefker/setlX", "Date": "2017-07-25T12:33:02Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (com.google.gwt.core.client.GWT.isClient()) { com.googlecode.mgwt.ui.client.MGWT.setupOrientation(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1476/buggy-version/src.main.java.com.googlecode.mgwt.ui.client.MGWT.java", "BodyUseAPI": [], "Fixed commit": "bc20d7f40a2d7a33af71177a9861a591a48515c5", "Url": "https://api.github.com/repos/dankurka/mgwt", "Date": "2011-11-06T19:47:38Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fileName.equals(\"iphone 5_14.html\")) passed = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2711/buggy-version/src.main.java.wdc.LabelingTool.FeatureLabelinginHTML.java", "BodyUseAPI": [], "Fixed commit": "3df44efc3a80812698927f6f7d743b221709d297", "Url": "https://api.github.com/repos/aprimpeli/LabellingTool", "Date": "2016-03-19T16:27:15Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!passed) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2711/buggy-version/src.main.java.wdc.LabelingTool.FeatureLabelinginHTML.java", "BodyUseAPI": [], "Fixed commit": "3df44efc3a80812698927f6f7d743b221709d297", "Url": "https://api.github.com/repos/aprimpeli/LabellingTool", "Date": "2016-03-19T16:27:15Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getenv(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (mklRoot == null) { java.lang.System.out.println(\"To build native library, MKLROOT needs to be set. Enter MKLROOT path or press enter to skip:\"); mklRoot = java.lang.System.console().readLine().trim(); if (mklRoot.equals(\"\")) { java.lang.System.out.println(\"Skipping the build of native systemml library.\"); return; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1510/buggy-version/src.main.java.org.apache.sysml.utils.BuildNativeLibrary.java", "BodyUseAPI": [], "Fixed commit": "6edb0d3ed2b8ec1dc6060113e52d35193825f54e", "Url": "https://api.github.com/repos/niketanpansare/systemml", "Date": "2016-12-17T20:16:40Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getView().getSizeUnit()) == (SizeUnits.Count)) { getView().enableSizeValue(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/769/buggy-version/src.gui.product.AddProductController.java", "BodyUseAPI": [], "Fixed commit": "9cef9994fbfc6528ef71ecda647eb8835ca5307c", "Url": "https://api.github.com/repos/caseymonc/hit", "Date": "2012-10-09T00:05:56Z"},
{"Line": "=>1145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((command.getOrderBy()) != null) { parentOrderBys.remove(((parentOrderBys.size()) - 1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5897/buggy-version/engine.src.main.java.org.teiid.query.optimizer.relational.RelationalPlanner.java", "BodyUseAPI": [], "Fixed commit": "d6714bc88dcef0f20c457c45b267f9edd8b0ec11", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2016-02-25T23:06:35Z"},
{"Line": "=>1669", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (parentOrderBys != null) { for (org.teiid.query.optimizer.relational.OrderBy parentOrderBy : parentOrderBys) { replaceExpressions(parentOrderBy, mapping, subMapping); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5897/buggy-version/engine.src.main.java.org.teiid.query.optimizer.relational.RelationalPlanner.java", "BodyUseAPI": [], "Fixed commit": "d6714bc88dcef0f20c457c45b267f9edd8b0ec11", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2016-02-25T23:06:35Z"},
{"Line": "=>1138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((command.getOrderBy()) != null) { if (parentOrderBys == null) { parentOrderBys = new java.util.ArrayList<org.teiid.query.optimizer.relational.OrderBy>(2); } parentOrderBys.add(command.getOrderBy()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5897/buggy-version/engine.src.main.java.org.teiid.query.optimizer.relational.RelationalPlanner.java", "BodyUseAPI": ["org.teiid.query.optimizer.relational.QueryCommand.getOrderBy()", "java.util.List<org.teiid.query.optimizer.relational.OrderBy>.add(command.getOrderBy())"], "Fixed commit": "d6714bc88dcef0f20c457c45b267f9edd8b0ec11", "Url": "https://api.github.com/repos/teiid/teiid", "Date": "2016-02-25T23:06:35Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.aedge90.nmm.Mill7.getGameBoardPosAt(com.github.aedge90.nmm.Position)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(critical.getColor().equals(player))) && (!(critical.equals(getGameBoardPosAt(p))))) { return super.getMill(p, player); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3052/buggy-version/app.src.main.java.com.github.aedge90.nmm.Mill7.java", "BodyUseAPI": ["com.github.aedge90.nmm.GameBoard.getMill(com.github.aedge90.nmm.Position,Options.Color)"], "Fixed commit": "210a561f560c77dc91facd9761a01c273743ce27", "Url": "https://api.github.com/repos/Aedge90/Nine-Mens-Morris-Android", "Date": "2017-03-13T21:05:39Z"},
{"Line": "=>263", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (data != null) { java.lang.String key = data.key(); gov.sandia.n2a.ui.eq.tree.NodeBase existingEquation = child(key); if (existingEquation != null) { key = key.substring(1); java.lang.String combiner = new gov.sandia.n2a.eqset.Variable.ParsedValue(source.get()).combiner; PanelModel.instance.undoManager.add(new gov.sandia.n2a.ui.eq.undo.ChangeEquation(this, key, combiner, existingEquation.source.get(), key, combiner, data.get())); return existingEquation; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6490/buggy-version/N2A.src.gov.sandia.n2a.ui.eq.tree.NodeVariable.java", "BodyUseAPI": ["PanelModel.instance.undoManager.add(gov.sandia.n2a.ui.eq.undo.ChangeEquation)", "gov.sandia.n2a.db.MNode.key()", "gov.sandia.n2a.db.MNode.get()"], "Fixed commit": "696730d61ee2f5100f09f4cc93b0595a820062e9", "Url": "https://api.github.com/repos/frothga/n2a", "Date": "2017-08-02T23:29:02Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentCraft) != null) { oldCrafts.add(currentCraft); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5227/buggy-version/src.com.teatime.game.model.Human.java", "BodyUseAPI": [], "Fixed commit": "c0f266cf8aaed25b4bf93a88a73b68f1d4a03b98", "Url": "https://api.github.com/repos/Pururun/TeaTime", "Date": "2012-04-17T23:30:36Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count <= 0) return \"\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6797/buggy-version/source.java.HttpHandler.java", "BodyUseAPI": [], "Fixed commit": "06e27814961a8590281789da31978c06c0094b08", "Url": "https://api.github.com/repos/johnperry/HttpTest", "Date": "2015-10-13T16:11:45Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((response.length()) > 0) { stream.write(response.toString().getBytes()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6797/buggy-version/source.java.HttpResponse.java", "BodyUseAPI": ["java.lang.StringBuffer.toString()", "java.io.OutputStream.write(byte[])", "java.lang.String.getBytes()"], "Fixed commit": "06e27814961a8590281789da31978c06c0094b08", "Url": "https://api.github.com/repos/johnperry/HttpTest", "Date": "2015-10-13T16:11:45Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (ptDest != null) { DisplayOrders(ptDest); path = CalculatePathPlus1(getMe(), ptDest); sendOrders.invoke(\"move\", path, pickup); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1573/buggy-version/src.net.windward.Windwardopolis2.AI.MyPlayerBrain.java", "BodyUseAPI": ["net.windward.Windwardopolis2.AI.MyPlayerBrain.DisplayOrders(java.awt.Point)", "net.windward.Windwardopolis2.AI.MyPlayerBrain.CalculatePathPlus1(net.windward.Windwardopolis2.api.Player,java.awt.Point)"], "Fixed commit": "dc48f781bf93a9a27c46cb974e7746d94d295470", "Url": "https://api.github.com/repos/teambingo/helloc", "Date": "2014-02-01T20:43:20Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getPlayer().getName()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(_playerDB.remove(name))) { for (net.md_5.bungee.api.connection.ProxiedPlayer player : net.md_5.bungee.api.ProxyServer.getInstance().getPlayers()) { player.sendMessage(new net.md_5.bungee.api.chat.TextComponent((((net.md_5.bungee.api.ChatColor.YELLOW) + name) + \" left the network.\"))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4548/buggy-version/src.com.ipwnage.bungeejoinmessages.BungeeJoin.java", "BodyUseAPI": ["net.md_5.bungee.api.connection.ProxiedPlayer.sendMessage(net.md_5.bungee.api.chat.TextComponent)"], "Fixed commit": "d0cfd73adb03e62cd1c6983222934575fc8182b2", "Url": "https://api.github.com/repos/iPwnAge/BetterBungeeJoinMessages", "Date": "2016-06-09T20:32:26Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((state) == (ch.srg.mediaplayer.internal.nativeplayer.NativePlayerDelegate.State.READY)) { controller.onPlayerDelegateBuffering(this); nativeMp.seekTo(((int) (msec))); }else { throw new java.lang.IllegalStateException(\"no ready\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4292/buggy-version/srgmediaplayer.src.main.java.ch.srg.mediaplayer.internal.nativeplayer.NativePlayerDelegate.java", "BodyUseAPI": [], "Fixed commit": "2725d230d20d1bcc1bde1a4b8156814a2370345b", "Url": "https://api.github.com/repos/SRGSSR/SRGMediaPlayer-Android", "Date": "2015-11-13T08:21:07Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.pms.util.StringUtil.hasValue(tagInfo.year)) { if ((tagInfo.year.length()) > 4) { result.updateString(\"YEAR\", tagInfo.year.substring(0, 4)); }else { result.updateString(\"YEAR\", tagInfo.year); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/9114/buggy-version/src.main.java.net.pms.database.TableMusicBrainzReleases.java", "BodyUseAPI": ["java.sql.ResultSet.updateString(java.lang.String,tagInfo.year)", "java.sql.ResultSet.updateString(java.lang.String,tagInfo.year.substring(0, 4))", "tagInfo.year.length()", "tagInfo.year.substring(int,int)"], "Fixed commit": "3cad6f347b15020757a5fa92ce42be6635009c97", "Url": "https://api.github.com/repos/UniversalMediaServer/UniversalMediaServer", "Date": "2016-12-18T06:28:01Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.constellio.app.ui.framework.components.table.columns.TableColumnsManager.toColumnId(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!collapsed) || (table.isColumnCollapsible(columnId))) { table.setColumnCollapsed(propertyId, collapsed); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1010/buggy-version/app.src.com.constellio.app.ui.framework.components.table.columns.TableColumnsManager.java", "BodyUseAPI": ["com.vaadin.ui.Table.setColumnCollapsed(java.lang.Object,boolean)"], "Fixed commit": "c260a54401f77bae00e56a6324f019e1892afdf7", "Url": "https://api.github.com/repos/doculibre/constellio", "Date": "2017-03-23T20:27:40Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (col == 0) { src.Cell firstRow = head; src.Cell lastCol = getCol(((colNum) - 1)); for (int i = 0; i < (rowNum); i++) { src.Cell toAdd = new src.Cell(print_width); lastCol.right = toAdd; toAdd.right = firstRow; firstRow = firstRow.down; lastCol = lastCol.down; } lastCol = getCol(((colNum) - 1)); for (int i = 0; i < (rowNum); i++) { lastCol.right.down = lastCol.down.right; lastCol = lastCol.down; } head = getCol(colNum); }else insertColumn(col);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3120/buggy-version/src.src.Grid.java", "BodyUseAPI": ["src.Grid.insertColumn(int)"], "Fixed commit": "d474599e982dcce1c5621b655665e0fee41f1392", "Url": "https://api.github.com/repos/ascended27/cs310-Project2", "Date": "2017-04-03T21:17:36Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (row == 0) { src.Cell firstRow = head; src.Cell lastRow = getRow(((rowNum) - 1)); for (int i = 0; i < (colNum); i++) { src.Cell toAdd = new src.Cell(print_width); lastRow.down = toAdd; toAdd.down = firstRow; firstRow = firstRow.right; lastRow = lastRow.right; } lastRow = getRow(((rowNum) - 1)); for (int i = 0; i < (colNum); i++) { lastRow.down.right = lastRow.right.down; lastRow = lastRow.right; } head = getRow(rowNum); }else insertRow(row);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3120/buggy-version/src.src.Grid.java", "BodyUseAPI": ["src.Grid.insertRow(int)"], "Fixed commit": "d474599e982dcce1c5621b655665e0fee41f1392", "Url": "https://api.github.com/repos/ascended27/cs310-Project2", "Date": "2017-04-03T21:17:36Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((folder.getName().equalsIgnoreCase(\"Inbox\")) || (folder.getName().equalsIgnoreCase(\"Trash\"))) throw new java.lang.Exception(\"Inbox and Trash are default folders, folders with those names cannot be added\"); else { if (folders.isEmpty()) folders.add(folder); else { for (Folder item : folders) { if (item.getName().equalsIgnoreCase(folder.getName())) throw new java.lang.Exception(\"Folder name already exist\"); } folders.add(folder); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6805/buggy-version/src.Mailbox.java", "BodyUseAPI": ["item.getName().equalsIgnoreCase(folder.getName())", "java.util.ArrayList<Folder>.add(Folder)", "java.util.ArrayList<Folder>.add(Folder)", "Folder.getName()"], "Fixed commit": "88782f7ea3338b882e0d5f2241c994347a9e9b1c", "Url": "https://api.github.com/repos/adityataday/Mailbox", "Date": "2017-08-14T20:15:22Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (choice.equalsIgnoreCase(\"T\")) { Driver.menuOptions(Driver.mailbox.getTrash()); }else if (choice.equalsIgnoreCase(\"E\")) { Driver.mailbox.clearTrash(); }else if (!(choice.equalsIgnoreCase(\"Q\"))) throw new java.lang.Exception(\"Incorrect input, please try again\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6805/buggy-version/src.Driver.java", "BodyUseAPI": ["java.lang.String.equalsIgnoreCase(java.lang.String)", "java.lang.String.equalsIgnoreCase(java.lang.String)"], "Fixed commit": "88782f7ea3338b882e0d5f2241c994347a9e9b1c", "Url": "https://api.github.com/repos/adityataday/Mailbox", "Date": "2017-08-14T20:15:22Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) != (elementOrder.length)) { throw new java.util.ConcurrentModificationException(\"Iterator expired as the queue has been modified\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7823/buggy-version/assignment-002.src.RandomizedQueue.java", "BodyUseAPI": [], "Fixed commit": "54a10fa12f886d07155ac9e2c6162d5a4673f02e", "Url": "https://api.github.com/repos/raamburle/princeton-algorithms", "Date": "2017-05-17T00:37:01Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((size) != (elementOrder.length)) { throw new java.util.ConcurrentModificationException(\"Iterator expired as the queue has been modified\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7823/buggy-version/assignment-002.src.RandomizedQueue.java", "BodyUseAPI": [], "Fixed commit": "54a10fa12f886d07155ac9e2c6162d5a4673f02e", "Url": "https://api.github.com/repos/raamburle/princeton-algorithms", "Date": "2017-05-17T00:37:01Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (btype == null) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1661/buggy-version/AllBanks.src.main.java.me.wirlie.allbanks.Banks.java", "BodyUseAPI": [], "Fixed commit": "a038fb02ee272e3d8849cd4443abdaac48e51796", "Url": "https://api.github.com/repos/Wirlie/AllBanks-2", "Date": "2016-03-20T06:21:19Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["hivemall.regression.OnlineRegressionUDTF.processOptions(org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector[])"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (cl == null) { this.eta0 = 0.1F; this.eps = 1.0F; this.scaling = 100.0F; }else { this.eta0 = hivemall.utils.lang.Primitives.parseFloat(cl.getOptionValue(\"eta0\"), 0.1F); this.eps = hivemall.utils.lang.Primitives.parseFloat(cl.getOptionValue(\"eps\"), 1.0F); this.scaling = hivemall.utils.lang.Primitives.parseFloat(cl.getOptionValue(\"scale\"), 100.0F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2437/buggy-version/src.main.hivemall.regression.AdaGradUDTF.java", "BodyUseAPI": ["hivemall.utils.lang.Primitives.parseFloat(cl.getOptionValue(\"eps\"),float)", "hivemall.utils.lang.Primitives.parseFloat(cl.getOptionValue(\"scale\"),float)", "org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)", "hivemall.utils.lang.Primitives.parseFloat(cl.getOptionValue(\"eta0\"),float)", "org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)", "org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)"], "Fixed commit": "919203310a4fae327b5ea0858f85a23b41f0cdec", "Url": "https://api.github.com/repos/myui/hivemall", "Date": "2014-09-08T14:40:57Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.jboss.shrinkwrap.api.Node.getAsset()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((asset.getClass()) == (org.jboss.shrinkwrap.api.asset.ArchiveAsset.class)) { return org.jboss.shrinkwrap.api.asset.ArchiveAsset.class.cast(asset).getArchive().as(type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5823/buggy-version/impl-base.src.main.java.org.jboss.shrinkwrap.impl.base.ArchiveBase.java", "BodyUseAPI": ["org.jboss.shrinkwrap.api.asset.ArchiveAsset.class.cast(asset).getArchive().as(java.lang.Class<X>)", "org.jboss.shrinkwrap.api.asset.ArchiveAsset.getArchive()", "java.lang.Class.cast(org.jboss.shrinkwrap.api.asset.Asset)"], "Fixed commit": "f950f012a77490e900844b05d870de77197f7aa6", "Url": "https://api.github.com/repos/shrinkwrap/shrinkwrap", "Date": "2014-03-03T06:52:57Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((tag == null) || ((tag.length()) == 0)) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4351/buggy-version/src.ParseUtils.java", "BodyUseAPI": [], "Fixed commit": "a4f694d1b66866936091273b461de492e15e8dbc", "Url": "https://api.github.com/repos/llaki/InstantScore", "Date": "2014-04-09T08:42:38Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((phoneNumber) == null) || ((phoneNumber.length()) == 0)) { u = User.TEST_USER; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4351/buggy-version/src.Request.java", "BodyUseAPI": [], "Fixed commit": "a4f694d1b66866936091273b461de492e15e8dbc", "Url": "https://api.github.com/repos/llaki/InstantScore", "Date": "2014-04-09T08:42:38Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isNotBlank(propValue)) { return propValue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4728/buggy-version/nuxeo-core-binarymanager-common.src.main.java.org.nuxeo.ecm.blob.AbstractCloudBinaryManager.java", "BodyUseAPI": [], "Fixed commit": "a2207c6fdfefe4905f0f2d526b1560261c7bc644", "Url": "https://api.github.com/repos/nuxeo/nuxeo-core-binarymanager-cloud", "Date": "2016-01-08T15:59:09Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((expression.length()) > 0) { expression = expression.substring(0, ((expression.length()) - 1)); textView1.setText(expression); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1394/buggy-version/androidhw4.src.ru.ifmo.ctddev.skripnikov.androidhw4.MainActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "134915e67979a2fbc215eff48af35149831415bf", "Url": "https://api.github.com/repos/SkripnikovSI/lesson4", "Date": "2013-10-20T19:06:07Z"},
{"Line": "=>699", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pp.getErrorIndex()) >= 0) { throw new java.text.ParseException(string, pp.getErrorIndex()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6955/buggy-version/core.src.org.pentaho.di.core.row.value.ValueMetaBase.java", "BodyUseAPI": ["java.text.ParsePosition.getErrorIndex()"], "Fixed commit": "fa823d7cb6ac85a295ec05599176bcb01cb9acde", "Url": "https://api.github.com/repos/AlexanderBuloichik/pentaho-kettle", "Date": "2015-08-13T08:59:03Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (entityClass.getCanonicalName().equals(targetClass.getCanonicalName())) { limitedQuery = em.createQuery(query); }else { limitedQuery = em.createQuery(cq); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3907/buggy-version/src.main.java.cquerybuilder.CQueryBuilder.java", "BodyUseAPI": [], "Fixed commit": "b60c99039bc5dc6a3241918af3656887c8054fd4", "Url": "https://api.github.com/repos/vankor/Criteria-Query-Builder", "Date": "2016-02-10T09:46:47Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((timer) != null) timer.cancel();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8706/buggy-version/src.main.java.br.com.codecode.workix.ejb.TimerBean.java", "BodyUseAPI": [], "Fixed commit": "e723deae7d729d28a359c54a6e5346cd6498844e", "Url": "https://api.github.com/repos/frmichetti/workix", "Date": "2016-11-20T01:01:46Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["brooklyn.util.task.system.ProcessTaskWrapper<java.lang.Integer>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (result != 0) throw new java.lang.IllegalStateException((\"Error creating image directory: \" + name));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5734/buggy-version/docker.src.main.java.brooklyn.entity.container.docker.DockerHostSshDriver.java", "BodyUseAPI": [], "Fixed commit": "a411851889fa30b24ea1ec2f526feed5370e2e92", "Url": "https://api.github.com/repos/brooklyncentral/clocker", "Date": "2014-06-19T14:31:04Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((com.android2.calculator3.CalculatorPageAdapter) (getAdapter())).getPages()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pages.size()) != 0) { int halfwayDownTheInfiniteList = ((((com.android2.calculator3.view.CalculatorViewPager.MAX_SIZE_CONSTANT) / (pages.size())) / 2) * (pages.size())) + (com.android2.calculator3.Page.getOrder(pages, new com.android2.calculator3.Page(getContext(), com.android2.calculator3.Page.NormalPanel.BASIC))); setCurrentItem(halfwayDownTheInfiniteList); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/833/buggy-version/Calculator.src.main.java.com.android2.calculator3.view.CalculatorViewPager.java", "BodyUseAPI": ["com.android2.calculator3.Page.getOrder(java.util.List<com.android2.calculator3.Page>,com.android2.calculator3.Page)", "java.util.List<com.android2.calculator3.Page>.size()", "java.util.List<com.android2.calculator3.Page>.size()"], "Fixed commit": "6b2da6ab947e03968158102b5d2c559c4ed05f16", "Url": "https://api.github.com/repos/Xlythe/android_packages_apps_Calculator", "Date": "2014-04-17T12:29:20Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fraglab.school.relationship.ChildGuardianRelationship.getRelationshipMetadata()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((otherRelationshipMetadata == null) || ((otherRelationshipMetadata.getType()) == null)) { return -1; }else if ((thisRelationshipMetadata == null) || ((thisRelationshipMetadata.getType()) == null)) { return 1; }else { return thisRelationshipMetadata.getType().compareTo(otherRelationshipMetadata.getType()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5605/buggy-version/src.main.java.fraglab.school.relationship.GuardianRelationshipDto.java", "BodyUseAPI": ["thisRelationshipMetadata.getType().compareTo(otherRelationshipMetadata.getType())", "fraglab.school.relationship.RelationshipMetadata.getType()"], "Fixed commit": "357bb2239c657ee30f85078b648f10a0c9735934", "Url": "https://api.github.com/repos/yannisf/school", "Date": "2014-10-13T18:50:11Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((((ActivityHooks.packageName) != null) && (ActivityHooks.packageName.startsWith(\"com.android.chrome\"))) && (newx == 0)) && (newy == 0)) { if (((x) == 0) && ((y) == 0)) { newx = 1; newy = 1; }else if (((x) == 1) && ((y) == 1)) { newx = 0; newy = 0; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1047/buggy-version/app.src.main.java.com.zst.xposed.halo.floatingwindow3.tasks.WindowHolder.java", "BodyUseAPI": [], "Fixed commit": "ecd8e6a1c6596efcc486a9b847c82f8db496d052", "Url": "https://api.github.com/repos/shooash/XHFW3", "Date": "2016-09-15T18:37:08Z"},
{"Line": "=>300", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (data != null) { int polyObjectId = data.getIntExtra(android.ohdm.de.editor.activities.MainActivity.EXTRA_POLYOBJECTID, 0); if (polyObjectId == (-1)) { android.widget.Toast.makeText(getApplicationContext(), R.string.no_real_id_error, Toast.LENGTH_SHORT).show(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1933/buggy-version/app.src.main.java.android.ohdm.de.editor.activities.MainActivity.java", "BodyUseAPI": ["android.content.Intent.getIntExtra(java.lang.String,int)"], "Fixed commit": "94ca348f6820d2868f0497f5e63e041787f5a576", "Url": "https://api.github.com/repos/OpenHistoricalDataMap/OHDMAndroidEditor", "Date": "2015-05-19T15:02:40Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (positiveResult) { mApi.logout(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6141/buggy-version/app.src.main.java.mx.itesm.logistics.vehicle_tracking.preferences.LogoutDialogPreference.java", "BodyUseAPI": [], "Fixed commit": "6b27a96e57988707112a75d32b14545e68e29861", "Url": "https://api.github.com/repos/pablo-co/insight-android-vehicle", "Date": "2016-02-04T06:28:46Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.fastfourier.something.request.HTMLRequest.parseDocument(com.android.volley.NetworkResponse)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (document.body().hasClass(\"database_error\")) { throw new net.fastfourier.something.request.SomeError(\"SA Database Unavailable, try again later.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6469/buggy-version/Something.src.main.java.net.fastfourier.something.request.HTMLRequest.java", "BodyUseAPI": [], "Fixed commit": "3b23b8e9c44484e813bf91c6daaf73006f81e0dc", "Url": "https://api.github.com/repos/2fast2fourier/something.apk", "Date": "2014-06-16T18:08:50Z"},
{"Line": "=>767", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((skillUseInfo.getType()) == (cfvbaibai.cardfantasy.data.SkillType.\u732e\u796d)) { cfvbaibai.cardfantasy.engine.Sacrifice.apply(this, skillUseInfo, attacker, null); }else if ((skillUseInfo.getType()) == (cfvbaibai.cardfantasy.data.SkillType.\u6c89\u9ed8)) { cfvbaibai.cardfantasy.engine.Silence.apply(this, skillUseInfo, attacker, defender); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7726/buggy-version/workspace.CardFantasyCore.src.cfvbaibai.cardfantasy.engine.SkillResolver.java", "BodyUseAPI": ["cfvbaibai.cardfantasy.engine.SkillUseInfo.getType()", "cfvbaibai.cardfantasy.engine.Sacrifice.apply(cfvbaibai.cardfantasy.engine.SkillResolver,cfvbaibai.cardfantasy.engine.SkillUseInfo,cfvbaibai.cardfantasy.engine.CardInfo,<nulltype>)", "cfvbaibai.cardfantasy.engine.Silence.apply(cfvbaibai.cardfantasy.engine.SkillResolver,cfvbaibai.cardfantasy.engine.SkillUseInfo,cfvbaibai.cardfantasy.engine.CardInfo,cfvbaibai.cardfantasy.engine.CardInfo)"], "Fixed commit": "75ffb9c3c3ab9097fc235b406289981cbe3d9bc6", "Url": "https://api.github.com/repos/cfvbaibai/CardFantasy", "Date": "2015-12-22T13:42:53Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (newCapacity == 0) { newCapacity = 4; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8416/buggy-version/src.main.java.com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.java", "BodyUseAPI": [], "Fixed commit": "586d5c2211059c7f49946cecf79de82207226f06", "Url": "https://api.github.com/repos/mosoft521/druid", "Date": "2017-07-13T03:14:59Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_char < 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6131/buggy-version/src.struct.TrieNode.java", "BodyUseAPI": [], "Fixed commit": "c336e91db49396144c493dc0ba635e329ab8dbd0", "Url": "https://api.github.com/repos/haeroe/WordIndex", "Date": "2012-05-26T00:04:27Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["logic.Contacts.createContact(java.net.InetAddress,java.lang.String,logic.UserColors.getRandomColor())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(contact.getMessages().isEmpty())) mainWindow.addMessages(((gui.ChatMessageBlueprint[]) (contact.getMessages().toArray())), contact.getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5147/buggy-version/src.logic.CallbackListener.java", "BodyUseAPI": ["gui.MainWindow.addMessages(((gui.ChatMessageBlueprint[]) (contact.getMessages().toArray())),contact.getId())", "contact.getMessages().toArray()", "logic.Contact.getMessages()", "logic.Contact.getId()"], "Fixed commit": "788ac798f9889b53f345ae81a26329e47f8968c2", "Url": "https://api.github.com/repos/Awlexus/TP_Chat", "Date": "2017-12-20T09:16:27Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["logic.Contacts.createContact(java.net.InetAddress,java.lang.String,logic.UserColors.getRandomColor())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(contact.getMessages().isEmpty())) mainWindow.addMessages(((gui.ChatMessageBlueprint[]) (contact.getMessages().toArray())), contact.getId());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5147/buggy-version/src.logic.CallbackListener.java", "BodyUseAPI": ["gui.MainWindow.addMessages(((gui.ChatMessageBlueprint[]) (contact.getMessages().toArray())),contact.getId())", "logic.Contact.getMessages()", "logic.Contact.getId()", "contact.getMessages().toArray()"], "Fixed commit": "788ac798f9889b53f345ae81a26329e47f8968c2", "Url": "https://api.github.com/repos/Awlexus/TP_Chat", "Date": "2017-12-20T09:16:27Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((willNotify) == true) { mJSModule.emit(\"onVolumeChange\", (currentVolume / maxVolume)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2423/buggy-version/android.src.main.java.com.reactlibrary.RNVolumeModule.java", "BodyUseAPI": [], "Fixed commit": "c6f7e849f6d314f530e6ed897b2e4a01a1963d93", "Url": "https://api.github.com/repos/nuke99/react-native-volume", "Date": "2017-03-22T10:30:43Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if ((!needExchange) && (desc != null)) { if ((desc.clientCacheStartVersion()) != null) waitTopVer = desc.clientCacheStartVersion(); else { org.apache.ignite.internal.processors.affinity.AffinityTopologyVersion nodeStartVer = new org.apache.ignite.internal.processors.affinity.AffinityTopologyVersion(ctx.discovery().localNode().order(), 0); if ((desc.startTopologyVersion()) != null) waitTopVer = desc.startTopologyVersion(); else waitTopVer = desc.receivedFromStartVersion(); if ((waitTopVer == null) || ((nodeStartVer.compareTo(waitTopVer)) > 0)) waitTopVer = nodeStartVer; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/218/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.ClusterCachesInfo.java", "BodyUseAPI": ["org.apache.ignite.internal.processors.cache.DynamicCacheDescriptor.clientCacheStartVersion()", "org.apache.ignite.internal.processors.cache.DynamicCacheDescriptor.receivedFromStartVersion()", "org.apache.ignite.internal.processors.cache.DynamicCacheDescriptor.startTopologyVersion()", "org.apache.ignite.internal.processors.cache.DynamicCacheDescriptor.startTopologyVersion()", "org.apache.ignite.internal.processors.cache.DynamicCacheDescriptor.clientCacheStartVersion()"], "Fixed commit": "d9a30e8bc285672418f800b527d0aa8e7dd3a4ff", "Url": "https://api.github.com/repos/apache/ignite", "Date": "2017-05-19T07:27:24Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((waitTopVer == null) || ((nodeStartVer.compareTo(waitTopVer)) > 0)) waitTopVer = nodeStartVer;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/218/buggy-version/modules.core.src.main.java.org.apache.ignite.internal.processors.cache.ClusterCachesInfo.java", "BodyUseAPI": [], "Fixed commit": "d9a30e8bc285672418f800b527d0aa8e7dd3a4ff", "Url": "https://api.github.com/repos/apache/ignite", "Date": "2017-05-19T07:27:24Z"},
{"Line": "=>253", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (g.gl.isExtensionAvailable(\"GL_SGIS_texture_edge_clamp\")) { g.gl.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_S, GL.GL_CLAMP_TO_EDGE); g.gl.glTexParameteri(GL.GL_TEXTURE_2D, GL.GL_TEXTURE_WRAP_T, GL.GL_CLAMP_TO_EDGE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4192/buggy-version/org.caleydo.view.heatmap.src.org.caleydo.view.heatmap.v2.internal.HeatMapTextureRenderer.java", "BodyUseAPI": ["g.gl.glTexParameteri(GL.GL_TEXTURE_2D,GL.GL_TEXTURE_WRAP_S,GL.GL_CLAMP_TO_EDGE)", "g.gl.glTexParameteri(GL.GL_TEXTURE_2D,GL.GL_TEXTURE_WRAP_T,GL.GL_CLAMP_TO_EDGE)"], "Fixed commit": "a5aa13c0686a9065ddc0a4fe34481c6b199fe531", "Url": "https://api.github.com/repos/Caleydo/caleydo", "Date": "2013-09-26T19:12:53Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URL.getFile()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (com.cotescu.radu.commons.StringUtils.isEmpty(fullPath)) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(\"yyyyMMdd_HHmmss\"); tmpfile = sdf.format(new java.util.Date()); }else if ((com.cotescu.radu.commons.StringUtils.isEmpty(tmpfile)) && ((fullPath.length()) == 1)) { java.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(\"yyyyMMdd_HHmmss\"); tmpfile = sdf.format(new java.util.Date()); }else { tmpfile = fullPath.substring(((fullPath.lastIndexOf(\"/\")) + 1), fullPath.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4223/buggy-version/src.main.java.com.cotescu.radu.commons.Downloader.java", "BodyUseAPI": ["java.lang.String.length()", "java.lang.String.lastIndexOf(java.lang.String)", "java.lang.String.length()", "java.lang.String.substring(int,int)"], "Fixed commit": "5bb9b912cf61005f84f03eb48830608f3a0b1c17", "Url": "https://api.github.com/repos/raducotescu/commons", "Date": "2011-07-04T17:44:37Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.oddjob.schedules.schedules.BrokenSchedule.mergeBreaks(context.move(next.getFromDate()))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (lastUse.before(exclude.getFromDate())) { lastUse = exclude.getFromDate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/718/buggy-version/src.java.org.oddjob.schedules.schedules.BrokenSchedule.java", "BodyUseAPI": ["org.oddjob.schedules.Interval.getFromDate()"], "Fixed commit": "2eb56a3f46306b819a7ccec6de920133d42c3cfe", "Url": "https://api.github.com/repos/robjg/oddjob", "Date": "2012-03-29T16:27:17Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((closestNodes.subList(0, ((java.lang.Math.min(closestNodes.size(), maxNodes)) - 1)).size()) == 20) java.lang.System.out.println(\"woot\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7629/buggy-version/src.poldercast.protocols.VicinityProtocol.java", "BodyUseAPI": [], "Fixed commit": "bad6a8a0035c095e2b6d9bde9fa91248e28d6ce8", "Url": "https://api.github.com/repos/liamzebedee/peersim-poldercast", "Date": "2014-06-30T04:06:39Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (charset == null) throw new java.lang.IllegalArgumentException((\"invalid character set: \" + (option.getValue())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/18/buggy-version/jaqy-json.src.main.java.com.teradata.jaqy.importer.JsonImporterFactory.java", "BodyUseAPI": [], "Fixed commit": "2d1304aef3695b6d834f160924d6ec0512d3a039", "Url": "https://api.github.com/repos/Teradata/jaqy", "Date": "2017-08-09T07:36:42Z"},
{"Line": "=>438", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((strVal.length()) == 0) return java.util.Optional.empty();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4698/buggy-version/src.instructable.server.ccg.CcgUtils.java", "BodyUseAPI": [], "Fixed commit": "f286e54a7dfba2aeb80e21e4a9b4ca29ea65eab4", "Url": "https://api.github.com/repos/azariaa/InstructableServer", "Date": "2017-03-05T08:32:21Z"},
{"Line": "=>296", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((data.isForceUpdate) == 0) { if ((data.versionCode) > (com.cretin.www.cretinautoupdatelibrary.utils.CretinAutoUpdateUtils.getVersionCode(com.cretin.www.cretinautoupdatelibrary.utils.CretinAutoUpdateUtils.mContext))) { java.lang.String dataVersion = data.versionName; if (!(android.text.TextUtils.isEmpty(dataVersion))) { java.util.List listCodes = loadArray(); if (!(listCodes.contains(dataVersion))) { showUpdateDialog(data, false, true); }else { android.util.Log.e(\"cretinautoupdatelibrary\", \"\u81ea\u52a8\u66f4\u65b0library\u5df2\u7ecf\u5ffd\u7565\u6b64\u7248\u672c\"); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4890/buggy-version/cretinautoupdatelibrary.src.main.java.com.cretin.www.cretinautoupdatelibrary.utils.CretinAutoUpdateUtils.java", "BodyUseAPI": ["com.cretin.www.cretinautoupdatelibrary.utils.CretinAutoUpdateUtils.DownDataAsyncTask.showUpdateDialog(com.cretin.www.cretinautoupdatelibrary.model.UpdateEntity,boolean,boolean)"], "Fixed commit": "f3801ee9c61ec62c25c90c94fd2c5f124053abf5", "Url": "https://api.github.com/repos/MZCretin/AutoUpdateProject", "Date": "2017-12-08T08:41:30Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.dasein.cloud.aws.compute.AMI.getImage(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (img == null) { for (int i = 0; i < 5; i++) { try { java.lang.Thread.sleep((5000L * i)); } catch (java.lang.InterruptedException ignore) { } img = getImage(id); if (img != null) { break; } } if (img == null) { throw new org.dasein.cloud.CloudException(((\"No image exists for \" + id) + \" as created during the capture process\")); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/658/buggy-version/src.main.java.org.dasein.cloud.aws.compute.AMI.java", "BodyUseAPI": [], "Fixed commit": "63dfa49d9bbe6fdf387777647e578a05025876dd", "Url": "https://api.github.com/repos/greese/dasein-cloud-aws", "Date": "2013-01-11T14:58:24Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((train.getPosition()) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1760/buggy-version/taxe.core.src.fvs.taxe.dialog.DialogStationMultitrain.java", "BodyUseAPI": [], "Fixed commit": "3b6e739fbdbeb13007b772aabf92bccddd7d9cb2", "Url": "https://api.github.com/repos/SEPRFVS/FVS4", "Date": "2015-04-27T22:02:04Z"},
{"Line": "=>243", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.mycat.backend.PhysicalDBPool.loop(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((dataHostConfig.getSwitchType()) == (io.mycat.server.config.node.DataHostConfig.NOT_SWITCH_DS)) && (j > 0)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4544/buggy-version/src.main.java.io.mycat.backend.PhysicalDBPool.java", "BodyUseAPI": [], "Fixed commit": "582673587bac0bc852aa3663bca99a890e6a1058", "Url": "https://api.github.com/repos/magicdoom/Mycat-Server", "Date": "2015-12-04T07:32:32Z"},
{"Line": "=>366", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class.getResource(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if (en != null) { btnEn.setIcon(new javax.swing.ImageIcon(en)); }else { btnEn.setText(\"EN\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7047/buggy-version/src.main.java.org.waarp.administrator.AdminGui.java", "BodyUseAPI": ["javax.swing.JButton.setIcon(javax.swing.ImageIcon)"], "Fixed commit": "55f9aa9f19e19c9f6b0ef46370ee677edd75ed75", "Url": "https://api.github.com/repos/waarp/WaarpAdministrator", "Date": "2013-11-11T20:49:38Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.github.koshamo.fastmail.mail.MailAccount.i18n) == null) com.github.koshamo.fastmail.mail.MailAccount.i18n = com.github.koshamo.fastmail.util.SerializeManager.getLocaleMessages();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3850/buggy-version/src.main.java.com.github.koshamo.fastmail.mail.MailAccount.java", "BodyUseAPI": [], "Fixed commit": "10c32c740f4c1c869bc4bd68cf44248b233944d6", "Url": "https://api.github.com/repos/koshamo/Fastmail", "Date": "2017-09-10T08:00:09Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hour == 12) { AMPM = \"PM\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7536/buggy-version/Phoebe.java", "BodyUseAPI": [], "Fixed commit": "6b09e88ad8bef99fc18b6d1273ae930c0f64e58f", "Url": "https://api.github.com/repos/Weihwu/Project-Aeon", "Date": "2015-06-06T00:06:41Z"},
{"Line": "=>486", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (countGoogle == 2) { int placeGoogle = (prompt.indexOf(\"google\")) + 7; while (placeGoogle < (prompt.length())) { itemWanted += prompt.charAt(placeGoogle); placeGoogle++; } if (itemWanted.equals(\"google\")) { valid = true; itemWanted = \"\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7536/buggy-version/Phoebe.java", "BodyUseAPI": [], "Fixed commit": "6b09e88ad8bef99fc18b6d1273ae930c0f64e58f", "Url": "https://api.github.com/repos/Weihwu/Project-Aeon", "Date": "2015-06-06T00:06:41Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((segment.length()) == 0) { xml.writeEmptyElement(\"\", \"rdg\", eu.interedition.collatex.simple.SimpleVariantGraphSerializer.TEI_NS); }else { xml.writeStartElement(\"\", \"rdg\", eu.interedition.collatex.simple.SimpleVariantGraphSerializer.TEI_NS); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8449/buggy-version/collatex-core.src.main.java.eu.interedition.collatex.simple.SimpleVariantGraphSerializer.java", "BodyUseAPI": [], "Fixed commit": "944e25dce8e59176649364e765beeeb4a25c5fed", "Url": "https://api.github.com/repos/interedition/collatex", "Date": "2013-03-05T20:40:33Z"},
{"Line": "=>152", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((segment.length()) > 0) { xml.writeCharacters(segment); xml.writeEndElement(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/8449/buggy-version/collatex-core.src.main.java.eu.interedition.collatex.simple.SimpleVariantGraphSerializer.java", "BodyUseAPI": ["javax.xml.stream.XMLStreamWriter.writeCharacters(java.lang.String)"], "Fixed commit": "944e25dce8e59176649364e765beeeb4a25c5fed", "Url": "https://api.github.com/repos/interedition/collatex", "Date": "2013-03-05T20:40:33Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(client.hasMoreIncidents())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7587/buggy-version/src.edu.grinnell.csc207.fletcher1.hw5.UshahidiExtensions.java", "BodyUseAPI": [], "Fixed commit": "efe9f2ea9e3b666ecbde94e12c22e13fe377a8e8", "Url": "https://api.github.com/repos/marsha-fletcher/csc207-hw5", "Date": "2013-10-01T20:43:17Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (afterEnd) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7587/buggy-version/src.edu.grinnell.csc207.fletcher1.hw5.UshahidiExtensions.java", "BodyUseAPI": [], "Fixed commit": "efe9f2ea9e3b666ecbde94e12c22e13fe377a8e8", "Url": "https://api.github.com/repos/marsha-fletcher/csc207-hw5", "Date": "2013-10-01T20:43:17Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (afterEnd) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/7587/buggy-version/src.edu.grinnell.csc207.fletcher1.hw5.UshahidiExtensions.java", "BodyUseAPI": [], "Fixed commit": "efe9f2ea9e3b666ecbde94e12c22e13fe377a8e8", "Url": "https://api.github.com/repos/marsha-fletcher/csc207-hw5", "Date": "2013-10-01T20:43:17Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFirstShow) { decorView.postDelayed(new java.lang.Runnable() { @java.lang.Override public void run() { show(); } }, outAnim.getDuration()); isFirstShow = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/58/buggy-version/dialogplus.src.main.java.com.orhanobut.dialogplus.DialogPlus.java", "BodyUseAPI": [], "Fixed commit": "33a3ebcd3de3827c291d61d7f934af6ccbaabbc2", "Url": "https://api.github.com/repos/jtfeng/dialogplus", "Date": "2016-07-22T06:55:09Z"},
{"Line": "=>925", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.comze_instancelabs.minigamesapi.MinigamesAPI.economy) { money_ = ((int) (MinigamesAPI.econ.getBalance(p.getName()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/9061/buggy-version/API.src.main.java.com.comze_instancelabs.minigamesapi.util.Util.java", "BodyUseAPI": [], "Fixed commit": "a369877368c9383960910d9e5a64884071565af0", "Url": "https://api.github.com/repos/instance01/MinigamesAPI", "Date": "2015-01-01T21:54:45Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(bldg.isActive())) || (!(bldg.exists()))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3764/buggy-version/src.main.java.org.terasology.tutorialDynamicCities.settlement.MarketManagementSystem.java", "BodyUseAPI": [], "Fixed commit": "95e14449a4fd8d2e27be082bd7a3782a31fabd45", "Url": "https://api.github.com/repos/Terasology/TutorialDynamicCities", "Date": "2016-08-21T22:32:10Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((closest.size()) >= numNodesRequired) { return closest; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/589/buggy-version/src.kademlia.routing.RoutingTable.java", "BodyUseAPI": [], "Fixed commit": "6462722227437f2f72e27c4c929ea662ad571dda", "Url": "https://api.github.com/repos/JoshuaKissoon/Kademlia", "Date": "2014-03-29T06:59:13Z"},
{"Line": "=>333", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep, IfNull]", "Content": "=>if (groups != null) for (int i = 0; i < (groups.length()); i++) this.groups.add(new it.polimi.dima.model.Group(groups.getJSONObject(i).getInt(\"id\"), c));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2035/buggy-version/app.src.main.java.it.polimi.dima.model.User.java", "BodyUseAPI": ["groups.getJSONObject(i).getInt(java.lang.String)", "org.json.JSONArray.length()", "java.util.ArrayList<it.polimi.dima.model.Group>.add(it.polimi.dima.model.Group)", "org.json.JSONArray.getJSONObject(int)"], "Fixed commit": "3faaa75648cfd5a29c630b107935763182de5c68", "Url": "https://api.github.com/repos/davidecitterio/SkiTalk", "Date": "2017-07-23T08:08:48Z"},
{"Line": "=>270", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMinHeight) < 600) { json = json.optJSONObject(\"4x4\"); }else { json = json.optJSONObject(\"5x4\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/2375/buggy-version/launcher.src.main.java.com.android.launcher3.DynamicGrid.java", "BodyUseAPI": [], "Fixed commit": "300a13e8cd48f95d81bb971aefb48f4855496491", "Url": "https://api.github.com/repos/mengzhiya/Launcher", "Date": "2016-02-18T11:49:51Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(input.isKeyPressed(java.awt.event.KeyEvent.VK_SPACE))) { spaceflag = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3393/buggy-version/SupermeatBoy.src.character.MeatBoy.java", "BodyUseAPI": [], "Fixed commit": "d09eb32387c211832183a17571880f909d3ebaed", "Url": "https://api.github.com/repos/danielpygo/Supermeatboy", "Date": "2015-05-20T00:37:45Z"},
{"Line": "=>420", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { if (android.provider.DocumentsContract.isDocumentUri(context, uri)) { java.lang.String documentId = android.provider.DocumentsContract.getDocumentId(uri); selectionArgs = new java.lang.String[]{ documentId.split(\":\")[1] }; tmpUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI; selection = \"_id=?\"; }else { tmpUri = uri; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/6591/buggy-version/src.com.qiniu.utils.InputStreamAt.java", "BodyUseAPI": [], "Fixed commit": "ce0eae4e4f82b713ec88b99dabfd1dff73ff0da8", "Url": "https://api.github.com/repos/yiranshaPATHo/android-sdk", "Date": "2014-10-13T10:27:01Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((curIt) != null) { curIt.next(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/1052/buggy-version/src.main.java.com.ctriposs.tsdb.iterator.SeekIteratorAdapter.java", "BodyUseAPI": [], "Fixed commit": "b534a2dc40588d8335376ff2a8c462564bec8e0f", "Url": "https://api.github.com/repos/jinfei21/timesquencedb", "Date": "2014-11-17T07:32:28Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.scijava.util.ConversionUtils.getClass(java.lang.reflect.Type)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep, IfNull]", "Content": "=>if ((c != null) && (org.scijava.util.ConversionUtils.canCast(value, c))) return org.scijava.util.ConversionUtils.cast(value, c);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4254/buggy-version/src.main.java.org.scijava.util.ConversionUtils.java", "BodyUseAPI": ["org.scijava.util.ConversionUtils.cast(java.lang.Object,java.lang.Class<?>)"], "Fixed commit": "f1c7ce5a7ca9af95b9e4de41b5022891eacc53e9", "Url": "https://api.github.com/repos/scijava/scijava-common", "Date": "2013-10-21T22:28:21Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(node.getMutable())) { throw new com.miracle.exceptions.MiracleExceptionLeftValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4046/buggy-version/src.com.miracle.astree.node.expression.unary.suffix.MiracleASTreeSuffixIntegral.java", "BodyUseAPI": [], "Fixed commit": "6fff2c71439c70b4028a076214c1250ae80d8b32", "Url": "https://api.github.com/repos/Kipsora/x86-64-Java-Miracle-Compiler", "Date": "2017-04-02T13:46:29Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(node.getMutable())) { throw new com.miracle.exceptions.MiracleExceptionLeftValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/4046/buggy-version/src.com.miracle.astree.node.expression.unary.prefix.MiracleASTreePrefixIntegral.java", "BodyUseAPI": [], "Fixed commit": "6fff2c71439c70b4028a076214c1250ae80d8b32", "Url": "https://api.github.com/repos/Kipsora/x86-64-Java-Miracle-Compiler", "Date": "2017-04-02T13:46:29Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((first) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5453/buggy-version/src.main.mondrian.util.ChunkList.java", "BodyUseAPI": [], "Fixed commit": "e7c125362f42321b6be4df892466d645d3369ded", "Url": "https://api.github.com/repos/pentaho/mondrian", "Date": "2013-04-16T17:05:49Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((point1.getY()) > (yPixel(getYMIN(), p))) && ((point2.getY()) < (yPixel(getYMAX(), p)))) || (((point2.getY()) > (yPixel(getYMIN(), p))) && ((point1.getY()) < (yPixel(getYMAX(), p))))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/3902/buggy-version/src.me.npatelaz.functiongrapher.graph.Function.java", "BodyUseAPI": [], "Fixed commit": "019652132acc77aa37d58cf5e6c6aa3b376a30e0", "Url": "https://api.github.com/repos/nikhilpatel1/FunctionGrapher", "Date": "2014-04-16T05:57:00Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (file.getPath().equals(memTable.getLogFile())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V98/5024/buggy-version/src.main.java.com.ctriposs.tsdb.DBEngine.java", "BodyUseAPI": [], "Fixed commit": "35b7b54f9affd0fa7355ca67448171fabd38a396", "Url": "https://api.github.com/repos/jinfei21/timesquencedb", "Date": "2014-11-06T08:41:28Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isMergeData)) onError();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2082/buggy-version/app.src.main.java.vn.com.phongnguyen93.readmee.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "8ba60cbce5a83c46aa8f5acaa28847119303a589", "Url": "https://api.github.com/repos/phongnguyen93/coderschool-week2", "Date": "2017-02-26T19:18:41Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (element.getName().equalsIgnoreCase(AttributeMatchesCondition.NAME)) { return org.freeplane.features.attribute.AttributeMatchesCondition.load(element); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3793/buggy-version/freeplane.src.org.freeplane.features.attribute.AttributeConditionController.java", "BodyUseAPI": ["org.freeplane.features.attribute.AttributeMatchesCondition.load(org.freeplane.n3.nanoxml.XMLElement)"], "Fixed commit": "052ae07498d4444a5d069d50c79b51da33fb4cd1", "Url": "https://api.github.com/repos/freeplane/freeplane", "Date": "2015-04-20T18:02:35Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (heigit.ors.routing.RoutingProfileType.isDriving(_profileType)) { heigit.ors.routing.VehicleParameters vehicleParams = new heigit.ors.routing.VehicleParameters(); _profileParams = vehicleParams; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3261/buggy-version/openrouteservice.src.main.java.heigit.ors.routing.RouteSearchParameters.java", "BodyUseAPI": [], "Fixed commit": "dd754fb27d770df66c685d11eff8e6857d7e6aac", "Url": "https://api.github.com/repos/GIScience/openrouteservice", "Date": "2017-11-07T12:23:50Z"},
{"Line": "=>2590", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o instanceof byte[]) { s = new java.lang.String(((byte[]) (o)), \"ISO-8859-1\"); char[] quoted = org.codehaus.jackson.io.JsonStringEncoder.getInstance().quoteAsString(s); s = ('\\\"' + (new java.lang.String(quoted))) + '\\\"'; }else { s = org.apache.avro.generic.GenericData.get().toString(o); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/896/buggy-version/lang.java.avro.src.main.java.org.apache.avro.SchemaBuilder.java", "BodyUseAPI": ["org.apache.avro.generic.GenericData.get().toString(java.lang.Object)"], "Fixed commit": "db6bb9d7a9f404e907d12a1380b65caac776b8a3", "Url": "https://api.github.com/repos/FundingCircle/avro", "Date": "2017-02-07T18:52:08Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(topic.equals(that.topic))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6737/buggy-version/camus-etl-kafka.src.main.java.com.linkedin.camus.etl.kafka.common.EtlRequest.java", "BodyUseAPI": [], "Fixed commit": "6fdb967907ede5bbb70de85354e3c7c8d4c444f7", "Url": "https://api.github.com/repos/shangan/camus", "Date": "2014-05-29T16:39:26Z"},
{"Line": "=>212", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(o instanceof com.linkedin.camus.etl.kafka.common.EtlRequest)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6737/buggy-version/camus-etl-kafka.src.main.java.com.linkedin.camus.etl.kafka.common.EtlRequest.java", "BodyUseAPI": [], "Fixed commit": "6fdb967907ede5bbb70de85354e3c7c8d4c444f7", "Url": "https://api.github.com/repos/shangan/camus", "Date": "2014-05-29T16:39:26Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == o) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6737/buggy-version/camus-etl-kafka.src.main.java.com.linkedin.camus.etl.kafka.common.EtlRequest.java", "BodyUseAPI": [], "Fixed commit": "6fdb967907ede5bbb70de85354e3c7c8d4c444f7", "Url": "https://api.github.com/repos/shangan/camus", "Date": "2014-05-29T16:39:26Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((partition) != (that.partition)) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6737/buggy-version/camus-etl-kafka.src.main.java.com.linkedin.camus.etl.kafka.common.EtlRequest.java", "BodyUseAPI": [], "Fixed commit": "6fdb967907ede5bbb70de85354e3c7c8d4c444f7", "Url": "https://api.github.com/repos/shangan/camus", "Date": "2014-05-29T16:39:26Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.sf.ehcache.config.CacheConfiguration.getPersistenceConfiguration()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (pconf != null) { org.apache.kylin.storage.cache.AbstractCacheFledgedStorageEngine.logger.info((\"PersistenceConfiguration strategy: \" + (pconf.getStrategy()))); }else { org.apache.kylin.storage.cache.AbstractCacheFledgedStorageEngine.logger.warn(\"PersistenceConfiguration is null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8120/buggy-version/storage.src.main.java.org.apache.kylin.storage.cache.AbstractCacheFledgedStorageEngine.java", "BodyUseAPI": ["net.sf.ehcache.config.PersistenceConfiguration.getStrategy()", "org.slf4j.Logger.info((\"PersistenceConfiguration strategy: \" + (pconf.getStrategy())))"], "Fixed commit": "731f33b0c047f1b572ebb7b8d434b6a2e3e8c85e", "Url": "https://api.github.com/repos/apache/kylin", "Date": "2015-06-01T11:29:36Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(rc.hasMoved())) mapping.Global.dodge(rc, myLocation);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/318/buggy-version/src.mapping.Lumberjack.java", "BodyUseAPI": ["mapping.Global.dodge(battlecode.common.RobotController,battlecode.common.MapLocation)"], "Fixed commit": "e105a2331168291980ed2205cb5a4ae2b6e6268a", "Url": "https://api.github.com/repos/kevin-who/starcraft", "Date": "2017-01-13T02:53:30Z"},
{"Line": "=>260", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (aGui != null) { aGui.setupStation(this.address); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6504/buggy-version/src.station.JE802Station.java", "BodyUseAPI": [], "Fixed commit": "0b5a2bec623054abab4eddae1479b17bff9b57c3", "Url": "https://api.github.com/repos/schmist/Jemula802", "Date": "2013-10-06T19:27:28Z"},
{"Line": "=>546", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.sbml.jsbml.Species.getExtension(FBCConstants.namespaceURI)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (fbcSpecies == null) { org.cy3sbml.SBMLReaderTask.logger.info((\"No information for fbcSpecies: \" + (species.getId()))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5157/buggy-version/src.main.java.org.cy3sbml.SBMLReaderTask.java", "BodyUseAPI": [], "Fixed commit": "6f5d98194fb3037a9ff78c79cd18a1b403c94df5", "Url": "https://api.github.com/repos/matthiaskoenig/cy3sbml", "Date": "2015-06-26T09:55:13Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (executed) throw new java.lang.IllegalStateException((\"Scenarios may use execute() just once per Scenario.run(). \" + \"Please create a new Scenario.run().\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/329/buggy-version/camunda-bpm-assert-scenario.src.src.main.java.org.camunda.bpm.scenario.impl.ScenarioExecutorImpl.java", "BodyUseAPI": [], "Fixed commit": "1e6f93b55fe117d66f0ef628de94a0c41f03982d", "Url": "https://api.github.com/repos/camunda/camunda-bpm-assert", "Date": "2016-08-28T15:54:51Z"},
{"Line": "=>153", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (user == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6420/buggy-version/backend-repository.src.main.java.com.dwalldorf.timetrack.repository.dao.UserDao.java", "BodyUseAPI": [], "Fixed commit": "313880e22849640665ebde56eb7a5e25f194c246", "Url": "https://api.github.com/repos/dwalldorf/timetrack", "Date": "2017-02-11T10:06:00Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (m == null) { m = net.tsz.afinal.reflect.FieldUtils.getFieldGetMethod(clazz, fn); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4468/buggy-version/src.net.tsz.afinal.reflect.FieldUtils.java", "BodyUseAPI": [], "Fixed commit": "ce2893959086bff42ea33833c550d30e5b029527", "Url": "https://api.github.com/repos/breaklayer/afinal", "Date": "2012-12-13T14:08:09Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((submissionIds == null) || ((submissionIds.size()) == 0)) return new java.util.ArrayList<org.tdl.vireo.model.Submission>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/770/buggy-version/app.org.tdl.vireo.model.jpa.JpaSubmissionRepositoryImpl.java", "BodyUseAPI": [], "Fixed commit": "3736d50b33bea3f3cd42c956a25ab97e1314a6da", "Url": "https://api.github.com/repos/TexasDigitalLibrary/Vireo", "Date": "2012-07-02T13:48:23Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((logIds == null) || ((logIds.size()) == 0)) return new java.util.ArrayList<org.tdl.vireo.model.ActionLog>();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/770/buggy-version/app.org.tdl.vireo.model.jpa.JpaSubmissionRepositoryImpl.java", "BodyUseAPI": [], "Fixed commit": "3736d50b33bea3f3cd42c956a25ab97e1314a6da", "Url": "https://api.github.com/repos/TexasDigitalLibrary/Vireo", "Date": "2012-07-02T13:48:23Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((oldFormat) == null) { oldFormat = !(containsEntry(SurveyBackupJob.INFO_FILE_NAME)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1258/buggy-version/collect-core.src.main.java.org.openforis.collect.io.NewBackupFileExtractor.java", "BodyUseAPI": [], "Fixed commit": "cc169b4d83bb7d8e858fd889a81ccc62f4a0b6b2", "Url": "https://api.github.com/repos/openforis/collect", "Date": "2016-05-13T08:15:08Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.System.getProperty(\"log.tomcat.vm.args\")) != null) { org.bonitasoft.studio.common.log.BonitaStudioLog.info(res, EnginePlugin.PLUGIN_ID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7150/buggy-version/bundles.plugins.org.bonitasoft.studio.engine.src.org.bonitasoft.studio.engine.TomcatVmArgsBuilder.java", "BodyUseAPI": [], "Fixed commit": "33677a15c2632237df11bb58f8ce276c6d84bc57", "Url": "https://api.github.com/repos/bonitasoft/bonita-studio", "Date": "2015-08-13T15:15:32Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.System.getProperty(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((tomcatExtraParams == null) || (!(tomcatExtraParams.contains(\"-Djava.util.logging.config.file=\")))) { addSystemProperty(args, \"java.util.logging.config.file\", (((((\"\\\"\" + tomcatInstanceLocation) + (java.io.File.separatorChar)) + \"conf\") + (java.io.File.separatorChar)) + \"logging.properties\\\"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7150/buggy-version/bundles.plugins.org.bonitasoft.studio.engine.src.org.bonitasoft.studio.engine.TomcatVmArgsBuilder.java", "BodyUseAPI": [], "Fixed commit": "33677a15c2632237df11bb58f8ce276c6d84bc57", "Url": "https://api.github.com/repos/bonitasoft/bonita-studio", "Date": "2015-08-13T15:15:32Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.alternativmud.App.getApp().getWorld().getCharactersManager().getCharacter(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (character != null) { ebus.register(new net.alternativmud.system.unityserver.Unity3DModeSubscriber(srv, ebus, user, character, sceneID)); }else { ebus.post(new net.alternativmud.system.nebus.server.AuthenticatedBusSubscriber.Unity3DModeEnterFailed((\"There is no such character \" + (evt.getCharacterName())))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5646/buggy-version/alternativmud-server.src.main.java.net.alternativmud.system.nebus.server.AuthenticatedBusSubscriber.java", "BodyUseAPI": ["com.google.common.eventbus.EventBus.register(net.alternativmud.system.unityserver.Unity3DModeSubscriber)"], "Fixed commit": "00bb7f0c16e52e2ca887d6d6c43d578ddd37ee7d", "Url": "https://api.github.com/repos/Jblew/alternativ-mud", "Date": "2014-01-14T23:15:57Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gameImpl.getId()) == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2942/buggy-version/tournament-system.tournament-system-processor.src.main.java.org.toursys.processor.service.GameService.java", "BodyUseAPI": [], "Fixed commit": "d16de5e82bac6201742b5722f1573197385ab17e", "Url": "https://api.github.com/repos/hudi1/tournamenSystem", "Date": "2014-03-13T13:27:07Z"},
{"Line": "=>110", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.your.worth.model.PIN.isPINComplete(mPIN)) && (com.your.worth.model.PIN.isPINOk(mPIN))) { android.content.Intent intent = new android.content.Intent(this, com.your.worth.controller.MainActivity.class); startActivity(intent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/425/buggy-version/src.com.your.worth.controller.LoginActivity.java", "BodyUseAPI": [], "Fixed commit": "60ae7a96fdda9f0745745a08d7a9548ab75e8887", "Url": "https://api.github.com/repos/blind675/YourWorth", "Date": "2013-11-16T20:42:45Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["inventorySlots.getSlot(ModularStorageContainer.SLOT_STORAGE_MODULE).getStack()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (stack == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5237/buggy-version/src.main.java.mcjty.rftools.blocks.storage.GuiModularStorage.java", "BodyUseAPI": [], "Fixed commit": "421b892c1daa66997528cd9b2478994bec5fd0ee", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-06-19T16:06:35Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((slotFactory.getSlotType()) == (SlotType.SLOT_PLAYERINV)) { slot = new mcjty.rftools.blocks.storage.BaseSlot(inventories.get(slotFactory.getInventoryName()), slotFactory.getIndex(), slotFactory.getX(), slotFactory.getY()); }else { slot = new mcjty.rftools.blocks.storage.BaseSlot(inventories.get(slotFactory.getInventoryName()), slotFactory.getIndex(), slotFactory.getX(), slotFactory.getY()) { @java.lang.Override public boolean isItemValid(net.minecraft.item.ItemStack stack) { if (isServer()) { mcjty.rftools.blocks.storage.RemoteStorageTileEntity storage = getRemoteStorage(); int si = -1; if (storage != null) { si = storage.findRemoteIndex(getStorageID()); } if (si != (-1)) { entityPlayer.getHeldItem().getTagCompound().setInteger(\"maxSize\", storage.getMaxStacks(si)); return storage.isItemValidForSlot(getSlotIndex(), stack); }else { entityPlayer.getHeldItem().getTagCompound().setInteger(\"maxSize\", 0); return false; } }else { int maxSize = entityPlayer.getHeldItem().getTagCompound().getInteger(\"maxSize\"); if ((getSlotIndex()) >= maxSize) { return false; } return super.isItemValid(stack); } } }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5237/buggy-version/src.main.java.mcjty.rftools.blocks.storage.RemoteStorageItemContainer.java", "BodyUseAPI": ["mcjty.rftools.blocks.storage.RemoteStorageItemContainer.get(slotFactory.getInventoryName())", "mcjty.rftools.blocks.storage.SlotFactory.getInventoryName()", "mcjty.rftools.blocks.storage.SlotFactory.getIndex()", "mcjty.rftools.blocks.storage.RemoteStorageItemContainer.get(slotFactory.getInventoryName())", "mcjty.rftools.blocks.storage.SlotFactory.getIndex()", "mcjty.rftools.blocks.storage.SlotFactory.getY()", "mcjty.rftools.blocks.storage.SlotFactory.getX()", "mcjty.rftools.blocks.storage.SlotFactory.getInventoryName()", "mcjty.rftools.blocks.storage.SlotFactory.getX()", "mcjty.rftools.blocks.storage.SlotFactory.getY()"], "Fixed commit": "421b892c1daa66997528cd9b2478994bec5fd0ee", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-06-19T16:06:35Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((slotFactory.getIndex()) == (tabletIndex)) { slot = new mcjty.rftools.blocks.storage.BaseSlot(inventories.get(slotFactory.getInventoryName()), slotFactory.getIndex(), slotFactory.getX(), slotFactory.getY()) { @java.lang.Override public boolean canTakeStack(net.minecraft.entity.player.EntityPlayer player) { return false; } }; }else { slot = new mcjty.rftools.blocks.storage.BaseSlot(inventories.get(slotFactory.getInventoryName()), slotFactory.getIndex(), slotFactory.getX(), slotFactory.getY()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5237/buggy-version/src.main.java.mcjty.rftools.blocks.storage.RemoteStorageItemContainer.java", "BodyUseAPI": ["mcjty.rftools.blocks.storage.SlotFactory.getInventoryName()", "mcjty.rftools.blocks.storage.SlotFactory.getIndex()", "mcjty.rftools.blocks.storage.SlotFactory.getInventoryName()", "mcjty.rftools.blocks.storage.SlotFactory.getY()", "mcjty.rftools.blocks.storage.RemoteStorageItemContainer.get(slotFactory.getInventoryName())", "mcjty.rftools.blocks.storage.SlotFactory.getIndex()", "mcjty.rftools.blocks.storage.SlotFactory.getX()", "mcjty.rftools.blocks.storage.RemoteStorageItemContainer.get(slotFactory.getInventoryName())", "mcjty.rftools.blocks.storage.SlotFactory.getX()", "mcjty.rftools.blocks.storage.SlotFactory.getY()"], "Fixed commit": "421b892c1daa66997528cd9b2478994bec5fd0ee", "Url": "https://api.github.com/repos/McJtyMods/RFTools", "Date": "2015-06-19T16:06:35Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.globus.cog.karajan.analyzer.ArgRef<org.griphyn.vdl.mapping.nodes.AbstractDataNode>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (param.isClosed()) { org.griphyn.vdl.mapping.DSHandle handle = function(param); if (staticReturn(scope, handle)) { if (org.griphyn.vdl.karajan.lib.swiftscript.AbstractUnarySingleValuedSwiftFunction.PROVENANCE_ENABLED) { int provid = org.griphyn.vdl.karajan.lib.SwiftFunction.nextProvenanceID(); org.griphyn.vdl.karajan.lib.SwiftFunction.logProvenanceParameter(provid, param, \"param\"); org.griphyn.vdl.karajan.lib.SwiftFunction.logProvenanceResult(provid, handle, name); } return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1963/buggy-version/src.org.griphyn.vdl.karajan.lib.swiftscript.AbstractUnarySingleValuedSwiftFunction.java", "BodyUseAPI": ["org.griphyn.vdl.karajan.lib.SwiftFunction.logProvenanceParameter(int,org.griphyn.vdl.mapping.nodes.AbstractDataNode,java.lang.String)", "org.griphyn.vdl.karajan.lib.swiftscript.AbstractUnarySingleValuedSwiftFunction<R, P>.function(org.griphyn.vdl.mapping.nodes.AbstractDataNode)"], "Fixed commit": "738841c76f23219e231b831b3fd6cc1e07a925e5", "Url": "https://api.github.com/repos/swift-lang/swift-k", "Date": "2016-06-21T20:28:59Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((last == null) || (last instanceof org.peg4d.regex.RegNull)) { return k; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8708/buggy-version/src.org.peg4d.regex.RegexObjectGenerator.java", "BodyUseAPI": [], "Fixed commit": "94ec0a1745bc7212d8525db98dc0656d5409f772", "Url": "https://api.github.com/repos/Y--Tamura/peg4d-java", "Date": "2015-02-24T08:58:00Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (matcher.find()) { taskCleanupTypeMsg = matcher.group(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1331/buggy-version/SingularityService.src.main.java.com.hubspot.singularity.smtp.SingularityMailer.java", "BodyUseAPI": ["java.util.regex.Matcher.group(int)"], "Fixed commit": "2e316498a58c98f1c7f2f7ba017aa7608f8163b7", "Url": "https://api.github.com/repos/HubSpot/Singularity", "Date": "2015-12-28T17:02:26Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((path.size) < (size)) { parentPath = false; }else { for (int i = 0; i < (size); i++) { if (!(pathElements[i].equals(path.pathElements[i]))) { parentPath = false; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3061/buggy-version/jetro-path.src.main.java.net.sf.jetro.path.JsonPath.java", "BodyUseAPI": ["pathElements[i].equals(path.pathElements[i])"], "Fixed commit": "8616398d1c034a747c853449fb02a6c00a5dbb73", "Url": "https://api.github.com/repos/mimarox/jetro", "Date": "2013-04-02T21:27:32Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sysPasswordParam) == null) throw new java.lang.IllegalArgumentException(\"A sys password is required to copy xcodebuild artefacts\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8369/buggy-version/src.main.java.com.memtrip.xcodebuild.EntryPoint.java", "BodyUseAPI": [], "Fixed commit": "bcef5406729247dd0de9562313cf6a80cefb0932", "Url": "https://api.github.com/repos/samkirton/xcode-maven-build", "Date": "2014-09-01T10:25:56Z"},
{"Line": "=>298", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (updateMgr != null) updateMgr.addDirtyRegion(connection, out);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7554/buggy-version/org.dawb.workbench.plotting.src.org.dawb.workbench.plotting.system.swtxy.selection.RingSelection.java", "BodyUseAPI": ["org.eclipse.draw2d.UpdateManager.addDirtyRegion(org.eclipse.draw2d.Figure,org.eclipse.draw2d.geometry.Rectangle)"], "Fixed commit": "ea2e6fa2ffa34edc1d1a5f8474449d3dc7d94aa1", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2012-06-06T11:04:39Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (updateMgr != null) updateMgr.addDirtyRegion(label, r);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7554/buggy-version/org.dawb.workbench.plotting.src.org.dawb.workbench.plotting.system.swtxy.selection.RingSelection.java", "BodyUseAPI": ["org.eclipse.draw2d.UpdateManager.addDirtyRegion(org.dawb.workbench.plotting.system.swtxy.selection.RingSelection,org.eclipse.draw2d.geometry.Rectangle)"], "Fixed commit": "ea2e6fa2ffa34edc1d1a5f8474449d3dc7d94aa1", "Url": "https://api.github.com/repos/DawnScience/dawn-ui", "Date": "2012-06-06T11:04:39Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!flag) { sb.setLength(((sb.length()) - 2)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8686/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.model.Deck.java", "BodyUseAPI": [], "Fixed commit": "80af6dbb435117067024dd2b1b111a2206bf8b13", "Url": "https://api.github.com/repos/alexbragdon/wpi-suite", "Date": "2014-05-04T14:42:39Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (album_id == (-1)) return \"-1\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7783/buggy-version/app.src.main.java.com.example.white.wmusic.db.MusicDB.java", "BodyUseAPI": [], "Fixed commit": "f2d006fc3c6222b72b30673cdae889edcc9c5eae", "Url": "https://api.github.com/repos/whitestarlau/WMusic", "Date": "2016-08-27T15:28:54Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (map.containsKey(OpsGenieClientConstants.API.START_DATE)) { startDateObj = map.get(OpsGenieClientConstants.API.START_DATE); }else { startDateObj = map.get(OpsGenieClientConstants.API.START_TIME); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/55/buggy-version/sdk.src.java.com.ifountain.opsgenie.client.model.beans.ScheduleRule.java", "BodyUseAPI": ["java.util.Map.get(OpsGenieClientConstants.API.START_TIME)", "java.util.Map.get(OpsGenieClientConstants.API.START_DATE)"], "Fixed commit": "b74e42d180ff171323bb7d76613f223d189e8f70", "Url": "https://api.github.com/repos/opsgenie/opsgenieclient", "Date": "2013-10-30T14:37:55Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (map.containsKey(OpsGenieClientConstants.API.PARTICIPANT)) { participant = ((java.lang.String) (map.get(OpsGenieClientConstants.API.PARTICIPANT))); }else { participant = ((java.lang.String) (map.get(OpsGenieClientConstants.API.NAME))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/55/buggy-version/sdk.src.java.com.ifountain.opsgenie.client.model.beans.ScheduleParticipant.java", "BodyUseAPI": ["java.util.Map.get(OpsGenieClientConstants.API.PARTICIPANT)", "java.util.Map.get(OpsGenieClientConstants.API.NAME)"], "Fixed commit": "b74e42d180ff171323bb7d76613f223d189e8f70", "Url": "https://api.github.com/repos/opsgenie/opsgenieclient", "Date": "2013-10-30T14:37:55Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((components[0].length()) == 0) { if ((components.length) == 1) { throw new au.com.glassechidna.openddl.OpenDDLException(\"Encountered reference (%) without a name\"); } componentIndex = 1; rootName = \"%\" + (components[1]); }else { componentIndex = 0; rootName = components[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8587/buggy-version/java.library.src.au.com.glassechidna.openddl.primitives.Reference.java", "BodyUseAPI": [], "Fixed commit": "32531a9dd14ccef314028f345066524643c96b0a", "Url": "https://api.github.com/repos/Benjamin-Dobell/libopenddl", "Date": "2015-02-05T14:29:34Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (fieldValue.contains(\"%\")) { if (alias == null) { criteria.add(org.hibernate.criterion.Restrictions.ilike(fieldName, field.get(entity))); }else { criteria.add(org.hibernate.criterion.Restrictions.ilike(((alias + \".\") + fieldName), field.get(entity))); } }else { if ((c.getTypeName()) == \"java.util.Date\") { date = ((java.util.Date) (field.get(entity))); if (alias == null) { criteria.add(org.hibernate.criterion.Restrictions.eq(fieldName, new java.util.Date(date.getYear(), date.getMonth(), date.getDate()))); }else { criteria.add(org.hibernate.criterion.Restrictions.eq(((alias + \".\") + fieldName), new java.util.Date(date.getYear(), date.getMonth(), date.getDate()))); } }else { if (alias == null) { criteria.add(org.hibernate.criterion.Restrictions.eq(fieldName, field.get(entity))); }else { criteria.add(org.hibernate.criterion.Restrictions.eq(((alias + \".\") + fieldName), field.get(entity))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3477/buggy-version/src.main.java.com.atai.dental.generic.dao.AbstractDao.java", "BodyUseAPI": [], "Fixed commit": "2716e766541cfcbeec4519b97b5c2af6d775380c", "Url": "https://api.github.com/repos/eighti-atai/Dental", "Date": "2016-12-24T04:48:24Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.startsWith(\"http\")) { android.content.Intent webIntent = new android.content.Intent(android.content.Intent.ACTION_VIEW, android.net.Uri.parse(url)); startActivity(webIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/861/buggy-version/app.src.main.java.com.ghostflying.portalwaitinglist.fragment.PortalDetailFragment.java", "BodyUseAPI": ["android.net.Uri.parse(java.lang.String)"], "Fixed commit": "f198bdee7e4e83b8a9e2aef5d8de7857e2fbab19", "Url": "https://api.github.com/repos/GhostFlying/PortalWaitingList", "Date": "2014-12-15T10:24:16Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!found) && ((next.across) != null)) { java.lang.String nametest = next.across.name; found = this.isUnique(pageName, next.across); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8823/buggy-version/Site.src.Site.java", "BodyUseAPI": ["Site.isUnique(java.lang.String,Site.PageNode)"], "Fixed commit": "e92aefcbca655e8fa2dd394acaf103d9dfa19496", "Url": "https://api.github.com/repos/ildi-ildi/wp_dynamic-data-structure-", "Date": "2017-04-16T21:37:12Z"},
{"Line": "=>724", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (semester != null) { params.put(\"Semester\", java.lang.Integer.toString(semester)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7935/buggy-version/src.com.nuscomputing.ivlelapi.IVLE.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)", "java.lang.Integer.toString(java.lang.Integer)"], "Fixed commit": "fff84968b4f611546c1abdb4ab0051b87aa7fab3", "Url": "https://api.github.com/repos/yjwong/com.nuscomputing.ivlelapi", "Date": "2012-06-28T04:47:58Z"},
{"Line": "=>721", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (acadYear != null) { params.put(\"AcadYear\", acadYear); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7935/buggy-version/src.com.nuscomputing.ivlelapi.IVLE.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "fff84968b4f611546c1abdb4ab0051b87aa7fab3", "Url": "https://api.github.com/repos/yjwong/com.nuscomputing.ivlelapi", "Date": "2012-06-28T04:47:58Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((tender.getImageResource()) != null) && (!(tender.getImageResource().isEmpty()))) { com.squareup.picasso.Picasso.with(activity).load(tender.getImageResource()).into(activity.getPhotoImageView()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4654/buggy-version/app.src.main.java.isshukan.com.bukatender.screen.activity.controller.TenderDetailController.java", "BodyUseAPI": ["com.squareup.picasso.Picasso.with(activity).load(tender.getImageResource()).into(activity.getPhotoImageView())", "com.squareup.picasso.Picasso.with(activity).load(tender.getImageResource())", "isshukan.com.bukatender.model.Tender.getImageResource()"], "Fixed commit": "68106e9e218a91cd610727d7aeed7920cf90751e", "Url": "https://api.github.com/repos/umarfarisi/BukaTender", "Date": "2017-05-25T11:34:03Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { android.widget.Toast.makeText(getContext(), error.getMessage(), Toast.LENGTH_SHORT).show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5542/buggy-version/app.src.main.java.com.brunoaybar.unofficialupc.modules.base.BaseFragment.java", "BodyUseAPI": [], "Fixed commit": "2e309a0b59f304663db3ec5a790ea70495463fc0", "Url": "https://api.github.com/repos/Bruno125/Unofficial-Ups", "Date": "2016-10-21T16:44:42Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((field.getType().equals(java.lang.Long.class)) || (field.getType().equals(java.lang.Long.TYPE))) { val = java.lang.Long.parseLong((val + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/410/buggy-version/library.src.main.java.com.guster.skydb.Repository.java", "BodyUseAPI": [], "Fixed commit": "ec605745f3a7f058705dd0cd16f16111335d3639", "Url": "https://api.github.com/repos/gusterwoei/skydb", "Date": "2015-07-21T11:28:05Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((field.getType().equals(java.lang.Double.class)) || (field.getType().equals(java.lang.Double.TYPE))) { val = java.lang.Double.parseDouble((val + \"\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/410/buggy-version/library.src.main.java.com.guster.skydb.Repository.java", "BodyUseAPI": [], "Fixed commit": "ec605745f3a7f058705dd0cd16f16111335d3639", "Url": "https://api.github.com/repos/gusterwoei/skydb", "Date": "2015-07-21T11:28:05Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (j == ((pattern.length) - 1)) return i;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7412/buggy-version/imagepipeline-base.src.main.java.com.facebook.imageformat.ImageFormatCheckerUtils.java", "BodyUseAPI": [], "Fixed commit": "9f2eb2a3cc754a48a108b9acbeb0fa503a44f971", "Url": "https://api.github.com/repos/a-d-collins/fresco", "Date": "2017-07-30T15:44:06Z"},
{"Line": "=>489", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.xml.xpath.XPath.evaluate(java.lang.String,org.w3c.dom.Document,javax.xml.namespace.QName)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (propNode != null) { property_string = propNode.getNodeValue(); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5399/buggy-version/src.main.java.org.varnerlab.kwatee.foundation.VLCGTransformationPropertyTree.java", "BodyUseAPI": ["org.w3c.dom.Node.getNodeValue()"], "Fixed commit": "f8992cc5173c7b60fee9f56f756574aefdb81df9", "Url": "https://api.github.com/repos/varnerlab/KwateeServer", "Date": "2015-11-24T15:55:42Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.ufpr.qrcdoor.service.EstruturaService.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((estrutura.getFoto()) != null) { mediaType = (estrutura.getFotoExtensao().equals(\"png\")) ? org.springframework.http.MediaType.IMAGE_PNG : org.springframework.http.MediaType.IMAGE_JPEG; }else { java.io.InputStream foto = br.ufpr.qrcdoor.controller.EstruturaController.class.getClassLoader().getResourceAsStream(\"img/lock.png\"); estrutura.setFoto(org.apache.commons.io.IOUtils.toByteArray(foto)); mediaType = org.springframework.http.MediaType.IMAGE_PNG; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4637/buggy-version/qrcdoor.src.main.java.br.ufpr.qrcdoor.controller.EstruturaController.java", "BodyUseAPI": ["estrutura.getFotoExtensao().equals(java.lang.String)", "br.ufpr.qrcdoor.entity.Estrutura.setFoto(org.apache.commons.io.IOUtils.toByteArray(foto))", "br.ufpr.qrcdoor.entity.Estrutura.getFotoExtensao()"], "Fixed commit": "fecb53eff42f558faac9448ac9d895da40d72b71", "Url": "https://api.github.com/repos/AlunoTADS/QRCDoor", "Date": "2017-12-07T00:10:59Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.ufpr.qrcdoor.service.PessoaService.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pessoa.getFoto()) != null) { mediaType = (pessoa.getFotoExtensao().equals(\"png\")) ? org.springframework.http.MediaType.IMAGE_PNG : org.springframework.http.MediaType.IMAGE_JPEG; foto = pessoa.getFoto(); }else { java.io.InputStream inputStream = br.ufpr.qrcdoor.controller.PessoaController.class.getClassLoader().getResourceAsStream(\"img/profile.png\"); foto = org.apache.commons.io.IOUtils.toByteArray(inputStream); inputStream.close(); mediaType = org.springframework.http.MediaType.IMAGE_PNG; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4637/buggy-version/qrcdoor.src.main.java.br.ufpr.qrcdoor.controller.PessoaController.java", "BodyUseAPI": ["br.ufpr.qrcdoor.entity.Pessoa.getFoto()", "br.ufpr.qrcdoor.entity.Pessoa.getFotoExtensao()", "pessoa.getFotoExtensao().equals(java.lang.String)"], "Fixed commit": "fecb53eff42f558faac9448ac9d895da40d72b71", "Url": "https://api.github.com/repos/AlunoTADS/QRCDoor", "Date": "2017-12-07T00:10:59Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!brokenLine) { for (se.chalmers.roguelike.Components.Position p : aoe) { se.chalmers.roguelike.World.Tile tile = dungeon.getTile(p.getX(), p.getY()); if ((!(tile == null)) && (!(tile.blocksLineOfSight()))) { entities.add(ec.createHighlight(p)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9172/buggy-version/se.chalmers.roguelike.Systems.HighlightSystem.java", "BodyUseAPI": [], "Fixed commit": "edddfb17cdd42e300ce77fdaba19ab80e07f23e9", "Url": "https://api.github.com/repos/ravertass/KandidatRoguelike", "Date": "2014-03-06T16:45:52Z"},
{"Line": "=>456", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!parentIsArray) { this.setContext(context); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2269/buggy-version/src.main.java.com.alibaba.fastjson.parser.DefaultJSONParser.java", "BodyUseAPI": [], "Fixed commit": "5cec6a5f0f81987faaa7b6290dfc590798ea1a25", "Url": "https://api.github.com/repos/alibaba/fastjson", "Date": "2016-10-20T01:16:43Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (im.vector.PublicRoomsManager.mSession)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9096/buggy-version/vector.src.main.java.im.vector.PublicRoomsManager.java", "BodyUseAPI": [], "Fixed commit": "6bc7317719909526fae21b2197b643c7ab57d2eb", "Url": "https://api.github.com/repos/vector-im/riot-android", "Date": "2016-12-12T08:12:39Z"},
{"Line": "=>1396", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["node.attributes.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (query != null) { annotation.ddl = query; }else { annotation.ddl = m_tableNameToDDL.get(name.toUpperCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/981/buggy-version/src.frontend.org.voltdb.compiler.DDLCompiler.java", "BodyUseAPI": [], "Fixed commit": "d76cd3ca02bb1cb35e6ae67e2871e4cb6d5de5a9", "Url": "https://api.github.com/repos/bsmr-voltdb/voltdb", "Date": "2014-07-24T22:11:35Z"},
{"Line": "=>138", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index != ((_size) - 1)) tmp.getNext().setLast(tmp);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/786/buggy-version/LList.java", "BodyUseAPI": [], "Fixed commit": "f88ef7b8554ae2be35a3b2e9ac9176f7f049b0c8", "Url": "https://api.github.com/repos/dng1999/Advay", "Date": "2016-03-17T04:23:29Z"},
{"Line": "=>24", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cursor == null) return com.google.common.collect.ImmutableList.of();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6707/buggy-version/mongo.src.main.java.org.soluvas.mongo.MongoUtils.java", "BodyUseAPI": [], "Fixed commit": "2f4254745cc7a6c3c32e6c766c4601d11e89428a", "Url": "https://api.github.com/repos/soluvas/soluvas-framework", "Date": "2012-09-17T10:41:30Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cursor == null) return com.google.common.collect.ImmutableList.of();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6707/buggy-version/mongo.src.main.java.org.soluvas.mongo.MongoUtils.java", "BodyUseAPI": [], "Fixed commit": "2f4254745cc7a6c3c32e6c766c4601d11e89428a", "Url": "https://api.github.com/repos/soluvas/soluvas-framework", "Date": "2012-09-17T10:41:30Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (XP < (Level.CHAMPION.getMaxXP())) level = level.MASTER; else if (XP > (Level.CHAMPION.getMaxXP())) level = level.CHAMPION;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3701/buggy-version/AlmendeMotivator.src.alm.motiv.AlmendeMotivator.ProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "c7e33e1b5b6cee880e61b7df7c3c6166c10995fa", "Url": "https://api.github.com/repos/madnessxd/almende", "Date": "2014-05-07T13:01:28Z"},
{"Line": "=>334", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (line.contains(\" \\t\")) { line = line.replace(\" \\t\", StringPool.FOUR_SPACES); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/885/buggy-version/modules.util.source-formatter.src.main.java.com.liferay.source.formatter.PropertiesSourceProcessor.java", "BodyUseAPI": ["java.lang.String.replace(java.lang.String,StringPool.FOUR_SPACES)"], "Fixed commit": "0a7343f66ea7b7cabf7a8915bf175f92c0a2d421", "Url": "https://api.github.com/repos/mhan810/liferay-portal", "Date": "2016-01-26T01:58:21Z"},
{"Line": "=>314", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (operation instanceof com.owncloud.android.operations.GetSharesForFileOperation) { if ((result.getCode()) == (com.owncloud.android.lib.common.operations.RemoteOperationResult.ResultCode.MAINTENANCE_MODE)) { message = res.getString(R.string.maintenance_mode); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3146/buggy-version/src.com.owncloud.android.utils.ErrorMessageAdapter.java", "BodyUseAPI": [], "Fixed commit": "3218b10b845b590d59f3f1e091fe9685b6c5add3", "Url": "https://api.github.com/repos/nextcloud/android", "Date": "2016-12-28T09:27:05Z"},
{"Line": "=>683", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getSelectedUnit()) != null) { if ((getSelectedAction()) != null) { return atotb.controller.BattleController.MouseAction.NO_TARGET; }else { return atotb.controller.BattleController.MouseAction.MOVE; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4802/buggy-version/core.src.atotb.controller.BattleController.java", "BodyUseAPI": [], "Fixed commit": "75b80073117cd3db7619d8b02264a61aa8019996", "Url": "https://api.github.com/repos/alestrooisma/ATaleOfTwoBrothers", "Date": "2014-12-31T11:46:01Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mouseX > 400) && (mouseX < 600)) { if ((mouseY > 100) && (mouseY < 300)) { profilePage.attemptEvolution(1, CharacterProfile.Path.RED); }else if ((mouseY > 400) && (mouseY < 600)) { profilePage.attemptEvolution(1, CharacterProfile.Path.YELLOW); }else if ((mouseY > 700) && (mouseY < 900)) { profilePage.attemptEvolution(1, CharacterProfile.Path.BLUE); } }else if ((mouseX > 700) && (mouseX < 900)) { if ((mouseY > 100) && (mouseY < 300)) { profilePage.attemptEvolution(2, CharacterProfile.Path.RED); }else if ((mouseY > 400) && (mouseY < 600)) { profilePage.attemptEvolution(2, CharacterProfile.Path.YELLOW); }else if ((mouseY > 700) && (mouseY < 900)) { profilePage.attemptEvolution(2, CharacterProfile.Path.BLUE); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3488/buggy-version/screens.GameScreen.java", "BodyUseAPI": [], "Fixed commit": "af9b4b8413dda7f0257864264f7998baea3fce52", "Url": "https://api.github.com/repos/CathyWrHua/SquarePG", "Date": "2017-08-02T04:40:21Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pathIndex < 3) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3488/buggy-version/characterEntities.Hero.java", "BodyUseAPI": [], "Fixed commit": "af9b4b8413dda7f0257864264f7998baea3fce52", "Url": "https://api.github.com/repos/CathyWrHua/SquarePG", "Date": "2017-08-02T04:40:21Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getString(cursor.getColumnIndex(QueryBillDeposits.PAYEENAME))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (android.text.TextUtils.isEmpty(payeeName)) payeeName = cursor.getString(cursor.getColumnIndex(QueryBillDeposits.TOACCOUNTNAME));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6413/buggy-version/src.com.money.manager.ex.notifications.RepeatingTransactionNotifications.java", "BodyUseAPI": [], "Fixed commit": "fe5e41ca5184740989cf8b0412128ef1b2d7d98a", "Url": "https://api.github.com/repos/moneymanagerex/android-money-manager-ex", "Date": "2015-04-12T09:37:48Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.github.gongshw.chisu.dal.dao.MailDao.getUnsentMailBefore(java.util.Date)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((io.github.gongshw.chisu.biz.mail.DelayMailSender.logger.isDebugEnabled()) && ((delayMails.size()) == 0)) { io.github.gongshw.chisu.biz.mail.DelayMailSender.logger.debug(\"no mail to send.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4997/buggy-version/src.main.java.io.github.gongshw.chisu.biz.mail.DelayMailSender.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String)"], "Fixed commit": "21cc6299bbcc4803c1a49a3875d2c594db5c6acd", "Url": "https://api.github.com/repos/gongshw/ChiSu", "Date": "2014-08-09T13:34:31Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["br.com.caelum.tubaina.parser.html.desktop.ImageTag.getScale(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (scale == null) scale = 100;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3298/buggy-version/src.main.java.br.com.caelum.tubaina.resources.HtmlResourceManipulator.java", "BodyUseAPI": [], "Fixed commit": "7dc7373a3c23b52b7db0cdaa338a73aa6d2b20c5", "Url": "https://api.github.com/repos/caelum/tubaina", "Date": "2012-05-07T22:01:11Z"},
{"Line": "=>12", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((command) != null) { command.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1265/buggy-version/src.com.team1389.base.TeleopBase.java", "BodyUseAPI": [], "Fixed commit": "15631162188e449ac0ecf19d9d27c26ceb548007", "Url": "https://api.github.com/repos/Team-1389-Archives/Team1389-Robot-Code-Base", "Date": "2016-01-13T21:31:07Z"},
{"Line": "=>17", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((command) != null) { command.cancel(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1265/buggy-version/src.com.team1389.base.TeleopBase.java", "BodyUseAPI": [], "Fixed commit": "15631162188e449ac0ecf19d9d27c26ceb548007", "Url": "https://api.github.com/repos/Team-1389-Archives/Team1389-Robot-Code-Base", "Date": "2016-01-13T21:31:07Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<Token.Token>.remove(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((op.getTokenType()) != (Token.Token.TokenType.EQUALS)) java.lang.System.out.println(\"Variable2 not defined!\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7934/buggy-version/src.Interpreter.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "50820f2de6a27cc00167e56c07c73c674a39f5c5", "Url": "https://api.github.com/repos/sharans003/CompilerDesignAssignment", "Date": "2017-08-25T07:18:39Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args.length) == 1) { for (java.lang.String arg : args) { if (arg.startsWith(\"(\")) { query.append(\" IN \").append(arg); }else { query.append(\" IN (\").append(\"\\'\").append(arg).append(\"\\'\").append(\")\"); } } return this; }else { query.append(\" IN (\"); for (java.lang.String arg : args) { query.append(\"\\'\").append(arg).append(\"\\'\").append(\", \"); } query.delete(query.lastIndexOf(\", \"), query.length()).append(\")\"); return this; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3196/buggy-version/src.com.simplequeries.SQQuery.SelectQuery.java", "BodyUseAPI": [], "Fixed commit": "b265e78ab7c09568b24ac8ed9cc0dfe680a9dc24", "Url": "https://api.github.com/repos/Lilykos/SimpleQueries", "Date": "2014-08-08T14:32:08Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["jdbcTemplate.getConnection().getMetaData().getIndexInfo(java.lang.String,java.lang.String,org.flywaydb.core.internal.database.cloudspanner.CloudSpannerTable,boolean,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(rs.getString(\"INDEX_NAME\").equalsIgnoreCase(\"PRIMARY_KEY\"))) { jdbcTemplate.execute((\"DROP INDEX \" + (database.quote(rs.getString(\"INDEX_NAME\"))))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3589/buggy-version/flyway-core.src.main.java.org.flywaydb.core.internal.database.cloudspanner.CloudSpannerTable.java", "BodyUseAPI": ["java.sql.ResultSet.getString(java.lang.String)", "org.flywaydb.core.internal.database.cloudspanner.CloudSpannerTable.quote(java.lang.String)", "org.flywaydb.core.internal.database.cloudspanner.CloudSpannerTable.execute((\"DROP INDEX \" + (database.quote(rs.getString(\"INDEX_NAME\")))))"], "Fixed commit": "8555dac61bf3a91694951729c925311b4ee875bb", "Url": "https://api.github.com/repos/olavloite/flyway", "Date": "2017-12-30T06:59:59Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (revealed > 0) bwyap.familyfeud.sound.SoundManager.getInstance().playClip(\"bell\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3855/buggy-version/src.bwyap.familyfeud.render.state.play.RenderQuestionSet.java", "BodyUseAPI": [], "Fixed commit": "c1b2d78fdf519de4f28a68dd8b94c7e77f6920a2", "Url": "https://api.github.com/repos/bwyap/java-familyfeud", "Date": "2017-05-22T17:51:55Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (getRendererDisabled(rendererIndex)) setRendererDisabled(rendererIndex, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5058/buggy-version/app.src.main.java.com.monsterbutt.homeview.player.TrackSelector.java", "BodyUseAPI": ["com.monsterbutt.homeview.player.TrackSelector.setRendererDisabled(int,boolean)"], "Fixed commit": "131eea7e9a2ff206fe0ff6314293fd0e91d5111c", "Url": "https://api.github.com/repos/drhill/homeview", "Date": "2016-11-07T02:18:00Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.elytradev.teckle.api.capabilities.CapabilityWorldNetworkTile.getNetworkTileAtPosition(net.minecraft.world.World,net.minecraft.util.math.BlockPos,facing.getOpposite())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((neighbourNetworkTile.getNode()) == null) || ((neighbourNetworkTile.getNode().getNetwork()) == null)) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7439/buggy-version/src.main.java.com.elytradev.teckle.api.capabilities.impl.ItemNetworkAssistant.java", "BodyUseAPI": [], "Fixed commit": "3c006e3409084adfee2175fab84ba8bca7590ec4", "Url": "https://api.github.com/repos/elytra/Teckle", "Date": "2017-08-28T01:49:04Z"},
{"Line": "=>164", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((api == (Api.Keywords)) && ((extraParams.get(\"language\")) != null)) && ((extraParams.get(\"language\")) != \"english\")) { version = \"1\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3958/buggy-version/src.io.indico.api.ApiClient.java", "BodyUseAPI": [], "Fixed commit": "2f6d21965ce4c0cd15d5cbc74be0d63a446265d8", "Url": "https://api.github.com/repos/IndicoDataSolutions/IndicoIo-Java", "Date": "2016-03-07T19:20:20Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (readyToPutVideo) { outputStream.putFrame(mask); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6875/buggy-version/src.org.usfirst.frc.team1895.robot.subsystems.FilteredCamera.java", "BodyUseAPI": [], "Fixed commit": "61645b4d7bc1ab53ee116a18c4ec812b59ef4e19", "Url": "https://api.github.com/repos/Lambda-Corps/2017Steamworks", "Date": "2017-04-06T16:03:31Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nullprogram.chess.purdue_unstable_ai.MoveScore.getMove()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (m == null) throw new java.lang.NullPointerException(\"null move returned\"); else return m;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5401/buggy-version/src.com.nullprogram.chess.purdue_unstable_ai.AlphaBetaPruningAI.java", "BodyUseAPI": [], "Fixed commit": "c203b3eea313538efce83cd41266efdd34747b69", "Url": "https://api.github.com/repos/PurdueSIGAI/Chess-AI", "Date": "2016-11-12T18:00:09Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (subQuery != null) { subQuery.where(builder.equal(userId, jobFilter.getUserId())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7417/buggy-version/eureka-protempa-etl.src.main.java.edu.emory.cci.aiw.cvrg.eureka.etl.dao.JpaJobDao.java", "BodyUseAPI": ["edu.emory.cci.aiw.cvrg.eureka.etl.dao.Subquery<java.util.Date>.where(builder.equal(userId, jobFilter.getUserId()))"], "Fixed commit": "1d929ea15378fd3df4ff62b827cc26e9aee01da2", "Url": "https://api.github.com/repos/arpost/eureka", "Date": "2016-08-30T22:10:56Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.commons.lang.ArrayUtils.toObject(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((null != runHistory) && ((runHistory.length) > 0)) { runHistoryLong = new java.lang.Long[runHistory.length]; for (int i = 0; i < (runHistory.length); i++) { runHistoryLong[i] = runHistory[i].longValue(); } }else { runHistoryLong = new java.lang.Long[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1417/buggy-version/src.main.java.com.spotify.reaper.storage.postgresql.RepairScheduleMapper.java", "BodyUseAPI": ["java.lang.Integer.longValue()"], "Fixed commit": "ae5cbe52456e5047ed87e08b15eecc1a902f537c", "Url": "https://api.github.com/repos/varjoranta/cassandra-reaper", "Date": "2015-02-11T17:31:01Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rs.next()) { java.lang.Integer left = rs.getInt(\"leftStudId\"); java.lang.Integer right = rs.getInt(\"rightStudId\"); if (left != 0) { partners.add(left); } if (right != 0) { partners.add(right); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4088/buggy-version/woServer.src.edu.umass.ckc.wo.PartnerManager.java", "BodyUseAPI": ["java.sql.ResultSet.getInt(java.lang.String)", "java.sql.ResultSet.getInt(java.lang.String)"], "Fixed commit": "0e1dc79ed47617a169d71d13223766ca966b0900", "Url": "https://api.github.com/repos/marshall62/mathspring", "Date": "2015-06-05T19:27:37Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((select - (pendingFriends.size())) <= (pendingGroups.size())) { pendingGroups.get((select - ((pendingFriends.size()) + 1))).confirm(); confirmed[(select - 1)] = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1777/buggy-version/FaceSpaceDriven.java", "BodyUseAPI": ["java.util.ArrayList<Tables.Friends>.size()", "pendingGroups.get((select - ((pendingFriends.size()) + 1))).confirm()", "java.util.ArrayList<Tables.GroupMembership>.get((select - ((pendingFriends.size()) + 1)))"], "Fixed commit": "00404fe2a7644862794bdc028a31a6b3f26524cb", "Url": "https://api.github.com/repos/off2/DB_Project", "Date": "2017-12-11T03:59:10Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.common.collect.Sets.newLinkedHashSet()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((!(principals.isEmpty())) && (!(origin.isDefaultOverride()))) && (net.ripe.db.whois.common.profiles.WhoisProfile.isDeployed())) { if ((!(origin.allowAdminOperations())) || (!(ipRanges.isInRipeRange(net.ripe.db.whois.update.authentication.IpInterval.parse(origin.getFrom()))))) { authenticationMessages.add(net.ripe.db.whois.update.authentication.UpdateMessages.ripeMntnerUpdatesOnlyAllowedFromWithinNetwork()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3531/buggy-version/whois-update.src.main.java.net.ripe.db.whois.update.authentication.Authenticator.java", "BodyUseAPI": ["net.ripe.db.whois.update.authentication.Origin.allowAdminOperations()", "net.ripe.db.whois.update.authentication.IpRanges.isInRipeRange(net.ripe.db.whois.update.authentication.IpInterval.parse(origin.getFrom()))", "net.ripe.db.whois.update.authentication.Origin.getFrom()", "net.ripe.db.whois.update.authentication.IpInterval.parse(origin.getFrom())"], "Fixed commit": "286e710b00bd364e720718712b18e61f4ea9686f", "Url": "https://api.github.com/repos/APNIC-net/whois", "Date": "2013-05-21T08:29:17Z"},
{"Line": "=>1189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getCurrent().getContainedInBOM()) != null) { return getCurrent().getContainedInBOM().isApplyPermissionToAllNewParts(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6434/buggy-version/src.java.CdbWebPortal.src.java.gov.anl.aps.cdb.portal.controllers.ItemDomainInventoryController.java", "BodyUseAPI": [], "Fixed commit": "c890bbdf9b30bc1d92f8c4b4b098f195d79609b9", "Url": "https://api.github.com/repos/iTerminate/Component.DB", "Date": "2017-07-13T15:13:51Z"},
{"Line": "=>235", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mBlocks) == null) { mBlocks = com.hyena.coretext.builder.CYBlockProvider.getBlockProvider().build(this, mText); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1837/buggy-version/library.src.main.java.com.hyena.coretext.CYSinglePageView.java", "BodyUseAPI": [], "Fixed commit": "23132c5715a741f567a91f7d92194a51e21079f7", "Url": "https://api.github.com/repos/yangzc/AndroidCoreText", "Date": "2017-08-03T12:13:01Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((binding.getHistoryArray()) != null) { outState.putStringArrayList(com.stationmillenium.android.activities.fragments.PlayerFragment.HISTORY_LIST_SAVE, new java.util.ArrayList(binding.getHistoryArray())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2212/buggy-version/app.src.main.java.com.stationmillenium.android.activities.fragments.PlayerFragment.java", "BodyUseAPI": ["com.stationmillenium.android.databinding.PlayerFragmentBinding.getHistoryArray()", "android.os.Bundle.putStringArrayList(java.lang.String,java.util.ArrayList)"], "Fixed commit": "497fcb02e00eb43a8c0315ff6d5fc04987aecce1", "Url": "https://api.github.com/repos/vdavy/android", "Date": "2017-03-08T16:03:49Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((store.retrieveMetadata(key).getLength()) < ((5 * 1024) * 1024)) { this.algorithmVersion = 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1229/buggy-version/hadoop-tools.hadoop-aliyun.src.main.java.com.aliyun.fs.oss.nat.BufferReader.java", "BodyUseAPI": [], "Fixed commit": "ab5cdd091e70624affc53d224107ffb10a8b3e55", "Url": "https://api.github.com/repos/uncleGen/hadoop", "Date": "2016-07-12T15:54:40Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!sameDate) { numDates++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7838/buggy-version/src.application.utils.TasksFormatter.java", "BodyUseAPI": [], "Fixed commit": "7e8514171ad59c35251873c60c2ed734ad1f2396", "Url": "https://api.github.com/repos/cs2103aug2015-f09-3j/main", "Date": "2015-11-09T04:54:10Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (status != null) this.status = status;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4018/buggy-version/cascading-hadoop2-tez.src.main.java.cascading.stats.tez.TezSliceStats.java", "BodyUseAPI": [], "Fixed commit": "3cec0e46d5484cd51c8a5d465155b2f79729cc81", "Url": "https://api.github.com/repos/nahguam/cascading", "Date": "2015-06-29T22:23:48Z"},
{"Line": "=>99", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.KeyEvent.getKeyCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (key != (e.VK_BACK_SPACE)) { keystck.push(e); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5344/buggy-version/src.htmleditor.HTMLeditor.java", "BodyUseAPI": ["htmleditor.Stackll<java.awt.event.KeyEvent>.push(java.awt.event.KeyEvent)"], "Fixed commit": "80f3b8b2019b0ed2faa77bb3c479d2caa2db307d", "Url": "https://api.github.com/repos/ianrau9/HTMLEDIT", "Date": "2017-04-13T20:26:35Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.event.KeyEvent.getKeyCode()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (key == (java.awt.event.KeyEvent.VK_BACK_SPACE)) { java.lang.StringBuffer undo = new java.lang.StringBuffer(); java.awt.event.KeyEvent prevkey = keystck.pop(); undo.append(textArea.getText()); if ((prevkey.getKeyCode()) != (java.awt.event.KeyEvent.VK_BACK_SPACE)) { undo.append(prevkey.getKeyChar()); } undostck.push(undo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5344/buggy-version/src.htmleditor.HTMLeditor.java", "BodyUseAPI": [], "Fixed commit": "80f3b8b2019b0ed2faa77bb3c479d2caa2db307d", "Url": "https://api.github.com/repos/ianrau9/HTMLEDIT", "Date": "2017-04-13T20:26:35Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.ownerName.equals(player.getName())) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5520/buggy-version/src.me.ryanhamshire.GriefPrevention.Claim.java", "BodyUseAPI": [], "Fixed commit": "5a791c4532ce48eafaf64fd499e543736cfdbcb1", "Url": "https://api.github.com/repos/lihad/GriefPrevention", "Date": "2012-10-06T23:57:15Z"},
{"Line": "=>2618", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.internal.telephony.RIL.responseStrings(android.os.Parcel)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (response[i].trim().equals(\"46003\")) response[i] = \"\u4e2d\u56fd\u7535\u4fe1\"; else if (response[i].trim().equals(\"China Mobile\")) response[i] = \"\u4e2d\u56fd\u79fb\u52a8\"; else if (response[i].trim().equals(\"China Unicom\")) response[i] = \"\u4e2d\u56fd\u8054\u901a\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6722/buggy-version/src.java.com.android.internal.telephony.RIL.java", "BodyUseAPI": ["java.lang.String.trim()", "java.lang.String.equals(java.lang.String)", "java.lang.String.trim()", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "73133d44b4f08b80ffcd4aef7c41d278887d9e1a", "Url": "https://api.github.com/repos/LOSP/frameworks_opt_telephony", "Date": "2013-08-12T03:43:51Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null != (this._cookiesToAdd)) { for (int i = 0; i < len; i++) { newCookiesToAdd[i] = this._cookiesToAdd[i]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/470/buggy-version/src.main.java.com.agiletec.aps.tags.InternalServletTag.java", "BodyUseAPI": [], "Fixed commit": "448056b7c61229cd7aec9335dd6e5907c1837082", "Url": "https://api.github.com/repos/entando/entando-core-engine", "Date": "2012-08-10T16:51:25Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (data.hasKey(\"markerFile\")) { markerFile = new java.io.File(data.get(\"markerFile\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7087/buggy-version/src.btwmod.livemap.mod_MapMarkers.java", "BodyUseAPI": ["btwmods.io.Settings.get(java.lang.String)"], "Fixed commit": "31115d37876cfa3015f57f42daa1d9f931567023", "Url": "https://api.github.com/repos/btwmodsbiz/server-mods", "Date": "2013-01-15T15:44:33Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.osmand.data.Ring.getBorder()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((polyNodes.size()) == 0) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7565/buggy-version/DataExtractionOSM.src.net.osmand.data.Ring.java", "BodyUseAPI": [], "Fixed commit": "a6c5950d31e438482581b9a2b8f856f85daad821", "Url": "https://api.github.com/repos/osmandapp/Osmand", "Date": "2012-09-18T10:53:31Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cycle) return new org.nutz.dao.impl.ext.LazyAnnotationEntityMaker(dataSource, expert, holder, this);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3067/buggy-version/src.org.nutz.dao.impl.ext.LazyNutDao.java", "BodyUseAPI": [], "Fixed commit": "b14f099760021d839513ce3b86c961895861416b", "Url": "https://api.github.com/repos/elkan1788/nutz", "Date": "2013-03-15T09:57:13Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((targetDistance) < (distanceToNearestTransitStop)) minWalk = targetDistance; else minWalk = distanceToNearestTransitStop;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7892/buggy-version/opentripplanner-routing.src.main.java.org.opentripplanner.routing.impl.raptor.TargetBound.java", "BodyUseAPI": [], "Fixed commit": "b6f8ba9c64aecfb5721c21830bdc86c336fbb2b0", "Url": "https://api.github.com/repos/openplans/OpenTripPlanner", "Date": "2012-08-07T19:25:41Z"},
{"Line": "=>519", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((moleculeBounds == null) && (reactionBounds == null)) return new java.awt.Rectangle();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/203/buggy-version/src.main.org.openscience.jchempaint.renderer.Renderer.java", "BodyUseAPI": [], "Fixed commit": "4cadcf503668ed960cf6fbdcde855e4e47115e11", "Url": "https://api.github.com/repos/rwst/jchempaint", "Date": "2012-10-15T06:28:34Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(model.containsAttribute(\"username\"))) { model.addAttribute(\"username\", \"false\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3439/buggy-version/src.main.java.FBLT.controllers.advert.AdvertController.java", "BodyUseAPI": ["org.springframework.ui.Model.addAttribute(java.lang.String,java.lang.String)"], "Fixed commit": "a4ad974f5f1dfaea69ca64ae4205471188efd8e2", "Url": "https://api.github.com/repos/FerinT/FBLT", "Date": "2016-12-12T10:47:56Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.content.SharedPreferences.getString(Constants.USERNAME,Constants.NO_USERNAME)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (username != (org.catrobat.catroid.common.Constants.NO_USERNAME)) { usernameEditText.setText(username); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6883/buggy-version/catroid.src.org.catrobat.catroid.ui.dialogs.LoginDialog.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "d9a3c4652a07ed4d17b6a9377462ca11c4dfbd2b", "Url": "https://api.github.com/repos/Catrobat/Catroid", "Date": "2013-08-20T21:17:53Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mMap) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1015/buggy-version/src.com.geo.GeoQuake.QuakeMapFragment.java", "BodyUseAPI": [], "Fixed commit": "bd0788a8b0112405819f8a2f1aff33ebec60f48b", "Url": "https://api.github.com/repos/stinsonga/GeoQuake", "Date": "2016-09-27T01:59:08Z"},
{"Line": "=>354", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reference == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5039/buggy-version/src.main.java.us.hawtrey.preconditions.Assure.java", "BodyUseAPI": [], "Fixed commit": "2a62e5f0767fd6a846bd104ba6b50c746c54c44a", "Url": "https://api.github.com/repos/chawtrey/preconditions", "Date": "2016-10-28T14:45:17Z"},
{"Line": "=>488", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Object.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((funcName.equals(\"def\")) && ((n.getArgsSize()) == 1)) { final java.util.regex.Matcher m = java.util.regex.Pattern.compile(\"\\\\((\\\\w+).get(\\\\w+)\\\\(\\\\) != null\\\\)\").matcher(s); if ((m.matches()) && (!(m.group(2).endsWith(\"List\")))) st.add(\"call\", ((((m.group(1)) + \".has\") + (m.group(2))) + \"()\")); else if ((((n.getArg(0).type) instanceof boa.compiler.visitors.BoaScalar) && (!((n.getArg(0).type) instanceof boa.compiler.visitors.BoaString))) && (!((n.getArg(0).type) instanceof boa.compiler.visitors.BoaTuple))) st.add(\"call\", \"true\"); else st.add(\"call\", s); }else { st.add(\"call\", s); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3999/buggy-version/src.java.boa.compiler.visitors.CodeGeneratingVisitor.java", "BodyUseAPI": ["boa.compiler.visitors.Call.getArg(int)", "boa.compiler.visitors.Call.getArg(int)", "boa.compiler.visitors.Call.getArg(int)"], "Fixed commit": "5b7f8c0f78b6d020296008e4aa34435f1b2a2e4c", "Url": "https://api.github.com/repos/boalang/compiler", "Date": "2016-12-19T19:07:47Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.getFollower()) != null) { s.setFollower(null); it.polimi.dei.provafinale.carcassonne.model.card.Card c = s.getOwnerCard(); if (!(updatedCards.contains(c))) updatedCards.add(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/211/buggy-version/src.main.java.it.polimi.dei.provafinale.carcassonne.model.entity.Road.java", "BodyUseAPI": ["it.polimi.dei.provafinale.carcassonne.model.card.Side.getOwnerCard()", "it.polimi.dei.provafinale.carcassonne.model.card.Side.setFollower(<nulltype>)"], "Fixed commit": "06fd7eb17e536a24c0bd258fca980244bf6417fb", "Url": "https://api.github.com/repos/heartripper/pf_carcassonne", "Date": "2012-05-16T20:24:24Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((s.getFollower()) != null) { s.setFollower(null); it.polimi.dei.provafinale.carcassonne.model.card.Card c = s.getOwnerCard(); if (!(updatedCards.contains(c))) updatedCards.add(c); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/211/buggy-version/src.main.java.it.polimi.dei.provafinale.carcassonne.model.entity.City.java", "BodyUseAPI": ["it.polimi.dei.provafinale.carcassonne.model.card.Side.setFollower(<nulltype>)", "it.polimi.dei.provafinale.carcassonne.model.card.Side.getOwnerCard()"], "Fixed commit": "06fd7eb17e536a24c0bd258fca980244bf6417fb", "Url": "https://api.github.com/repos/heartripper/pf_carcassonne", "Date": "2012-05-16T20:24:24Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((input.d) && ((wait) > 5)) && ((files) != null)) { wait = 0; if ((files.length) >= ((location) + 1)) { deleting = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7541/buggy-version/Maker.src.Game.graphics.menus.TitleMenu.java", "BodyUseAPI": [], "Fixed commit": "bc1e80cf6c3af23b7ff90eaf7281762816fe3a54", "Url": "https://api.github.com/repos/axoh17/GamesBackup", "Date": "2014-10-22T16:06:47Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files) != null) { if (((((input.enter) && ((wait) > 10)) && ((fileName.length()) == 0)) && (!(getFileName))) && (((location) + 1) > (files.length))) { x += 10; wait = 0; getFileName = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7541/buggy-version/Maker.src.Game.graphics.menus.TitleMenu.java", "BodyUseAPI": [], "Fixed commit": "bc1e80cf6c3af23b7ff90eaf7281762816fe3a54", "Url": "https://api.github.com/repos/axoh17/GamesBackup", "Date": "2014-10-22T16:06:47Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files) != null) { for (int i = 0; i < (files.length); i++) { font.render(xp, ((yp) + (i * 40)), files[i], screen); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7541/buggy-version/Maker.src.Game.graphics.menus.TitleMenu.java", "BodyUseAPI": [], "Fixed commit": "bc1e80cf6c3af23b7ff90eaf7281762816fe3a54", "Url": "https://api.github.com/repos/axoh17/GamesBackup", "Date": "2014-10-22T16:06:47Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((files) == null) { if ((((input.enter) && ((wait) > 10)) && ((fileName.length()) == 0)) && (!(getFileName))) { x += 10; wait = 0; getFileName = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7541/buggy-version/Maker.src.Game.graphics.menus.TitleMenu.java", "BodyUseAPI": [], "Fixed commit": "bc1e80cf6c3af23b7ff90eaf7281762816fe3a54", "Url": "https://api.github.com/repos/axoh17/GamesBackup", "Date": "2014-10-22T16:06:47Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (firstDsKey == null) { firstDsKey = dsKey; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5894/buggy-version/src.main.java.halo.query.dal.HaloDALC3p0PropertiesDataSource.java", "BodyUseAPI": [], "Fixed commit": "cce4fd848c6b6d76b76656f17df9eca9bda19027", "Url": "https://api.github.com/repos/akwei/halo-query", "Date": "2014-08-27T07:42:47Z"},
{"Line": "=>526", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(token.value.equals(\"{\"))) { lexer.putback(); findEndOfStatement(); }else { find_eob(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2090/buggy-version/Interpreter.java", "BodyUseAPI": [], "Fixed commit": "ef79fc365001901ab56a22d26d39b10944206cd1", "Url": "https://api.github.com/repos/jjhall89/citrin-1", "Date": "2013-04-05T03:17:24Z"},
{"Line": "=>468", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(token.value.equals(\"{\"))) { lexer.putback(); findEndOfStatement(); }else { find_eob(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2090/buggy-version/Interpreter.java", "BodyUseAPI": [], "Fixed commit": "ef79fc365001901ab56a22d26d39b10944206cd1", "Url": "https://api.github.com/repos/jjhall89/citrin-1", "Date": "2013-04-05T03:17:24Z"},
{"Line": "=>204", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((savedPrice) < 0.0) tskprice.setText(\"\"); else tskprice.setText(java.lang.Double.toString(savedPrice));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7801/buggy-version/app.src.main.java.edu.uwm.ibidder.TaskActivity.java", "BodyUseAPI": [], "Fixed commit": "bbc22e49494378d61079d443a100b5f5851a7048", "Url": "https://api.github.com/repos/patel8/IBidderCapstone", "Date": "2016-10-30T06:52:20Z"},
{"Line": "=>232", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tskprice.getText().toString().equals(\"\"))) { savedPrice = java.lang.Double.parseDouble(tskprice.getText().toString()); }else { savedPrice = -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7801/buggy-version/app.src.main.java.edu.uwm.ibidder.TaskActivity.java", "BodyUseAPI": ["tskprice.getText().toString()", "java.lang.Double.parseDouble(tskprice.getText().toString())", "android.widget.EditText.getText()"], "Fixed commit": "bbc22e49494378d61079d443a100b5f5851a7048", "Url": "https://api.github.com/repos/patel8/IBidderCapstone", "Date": "2016-10-30T06:52:20Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((java.lang.Double.parseDouble(price)) < 0) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7801/buggy-version/app.src.main.java.edu.uwm.ibidder.ProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "bbc22e49494378d61079d443a100b5f5851a7048", "Url": "https://api.github.com/repos/patel8/IBidderCapstone", "Date": "2016-10-30T06:52:20Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Optional<com.skelril.skree.content.zone.group.freakyfour.FreakyFourInstance>.get()", "java.util.Optional<org.spongepowered.api.entity.living.player.Player>.get()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(inst.getRegion(boss).contains(player.getLocation().getPosition()))) { player.setLocation(new org.spongepowered.api.world.Location(inst.getRegion().getExtent(), inst.getCenter(boss))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1812/buggy-version/src.main.java.com.skelril.skree.content.zone.group.freakyfour.FreakyFourListener.java", "BodyUseAPI": ["com.skelril.skree.content.zone.group.freakyfour.FreakyFourInstance.getCenter(com.skelril.skree.content.zone.group.freakyfour.FreakyFourBoss)", "com.skelril.skree.content.zone.group.freakyfour.FreakyFourInstance.getRegion()", "org.spongepowered.api.entity.living.player.Player.setLocation(org.spongepowered.api.world.Location)", "inst.getRegion().getExtent()"], "Fixed commit": "42fb590885b3039ceb21759012b8a3c9c9db6099", "Url": "https://api.github.com/repos/Skelril/Skree", "Date": "2016-03-13T05:29:39Z"},
{"Line": "=>500", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((newBlock.inst.getSize()) > 2) newBlock.push(new v9t9.machine.ti99.cpu.Changes.AdvancePC(changes, ((newBlock.inst.getSize()) - 2)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2664/buggy-version/v9t9.v9t9-java.v9t9-machines.ti99.v9t9.machine.ti99.interpreter.Interpreter9900.java", "BodyUseAPI": ["newBlock.inst.getSize()", "v9t9.machine.ti99.cpu.ChangeBlock9900.push(v9t9.machine.ti99.cpu.Changes.AdvancePC)"], "Fixed commit": "31fbf0c1ce7142b4b57dea672821d72e69e090bb", "Url": "https://api.github.com/repos/eswartz/emul", "Date": "2016-10-22T17:27:18Z"},
{"Line": "=>27", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(isStarted)) { for (int i = 0; i < (minWorkerCount); i++) { workers.add(new ru.sbt.hometask13.threadpool.ScalableThreadPool.Worker()); workers.get(i).start(); } isStarted = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/82/buggy-version/src.main.java.ru.sbt.hometask13.threadpool.ScalableThreadPool.java", "BodyUseAPI": [], "Fixed commit": "142a222dbcf874138dcd7dee97483bb97697801b", "Url": "https://api.github.com/repos/Kirikar/HomeTask13", "Date": "2016-09-05T23:48:22Z"},
{"Line": "=>947", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(dataValidationErrors.isEmpty())) { throw new org.apache.fineract.infrastructure.core.exception.PlatformApiDataValidationException(dataValidationErrors); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2865/buggy-version/fineract-provider.src.main.java.org.apache.fineract.portfolio.shareaccounts.serialization.ShareAccountDataSerializer.java", "BodyUseAPI": [], "Fixed commit": "172e80ae050abfcd6e0343d14692ff4679ef5730", "Url": "https://api.github.com/repos/nazeer1100126/incubator-fineract", "Date": "2016-10-12T10:49:24Z"},
{"Line": "=>501", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((transport) != null) { transport.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6958/buggy-version/mqtt-client.src.main.java.org.fusesource.mqtt.client.CallbackConnection.java", "BodyUseAPI": [], "Fixed commit": "6fb152f460d14df6b8fae4ce40337e948f546e9f", "Url": "https://api.github.com/repos/dobermai/mqtt-client", "Date": "2012-07-02T18:53:24Z"},
{"Line": "=>208", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((text == null) || (text.equals(\"\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5044/buggy-version/src.main.java.com.shc.silenceengine.graphics.TrueTypeFont.java", "BodyUseAPI": [], "Fixed commit": "76a08793fb893a8806c1ea6a3342955ef2b3a5ff", "Url": "https://api.github.com/repos/ShadowLordAlpha/SilenceEngine", "Date": "2015-04-28T05:11:45Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["Selectable.getInstance()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((selectable.getSelected()) != \"\") { matrix.refreshMatrix(new ElementFactory().newElement(selectable.getSelected(), posX, posY, selectable.getRotation())); repaint(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3536/buggy-version/src.Canvas.java", "BodyUseAPI": ["Selectable.getSelected()", "Matrix.refreshMatrix(new ElementFactory().newElement(selectable.getSelected(), posX, posY, selectable.getRotation()))", "ElementFactory.newElement(selectable.getSelected(),int,int,selectable.getRotation())", "Selectable.getRotation()"], "Fixed commit": "9967e749a65175a62d02dd0a004d98b44a317933", "Url": "https://api.github.com/repos/Kanister10l/WireWorld", "Date": "2017-05-09T18:15:44Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(mSubscription.isUnsubscribed())) { mSubscription.unsubscribe(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9238/buggy-version/farondroid.src.com.openfarmanager.android.fragments.NetworkPanel.java", "BodyUseAPI": ["rx.Subscription.unsubscribe()"], "Fixed commit": "492004dbd81f2f94440364bae76d9cf4ffdef945", "Url": "https://api.github.com/repos/nvv/Far-On-Droid", "Date": "2015-12-10T21:47:25Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (java.lang.Double.isFinite(r.getPreference().doubleValue())) { prediction = delfos.rs.output.RecommendationsOutputStandardRaw.format.format(r.getPreference().doubleValue()); }else { prediction = \"NaN\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2901/buggy-version/src.main.java.delfos.rs.output.RecommendationsOutputStandardRaw.java", "BodyUseAPI": ["delfos.rs.recommendation.Recommendation.getPreference()", "r.getPreference().doubleValue()", "java.text.DecimalFormat.format(r.getPreference().doubleValue())"], "Fixed commit": "bf1a09a653b2b95792fb0ba53d0afa692daed359", "Url": "https://api.github.com/repos/jcastro-inf/delfos", "Date": "2016-03-04T06:56:20Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (starttime != null) { medModel.setStarttime(starttime); medicineList.addOneRecord(medModel); return medModel; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1058/buggy-version/src.com.android.entity.AddMedicineDialogPopup.java", "BodyUseAPI": ["com.android.entity.MedicineModel.setStarttime(java.util.Date)"], "Fixed commit": "5b884d6982ea3bf2a9e6c59d25fb876cac565dcd", "Url": "https://api.github.com/repos/tliu784/missYoga", "Date": "2014-04-22T22:26:55Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.android.entity.AddMedicineDialogPopup.2.addMedicineModel()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (med != null) profileAct.addViewInMedSec(addMedicineModel()); else android.widget.Toast.makeText(context, \"Incorrect Time Format\", Toast.LENGTH_SHORT).show();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1058/buggy-version/src.com.android.entity.AddMedicineDialogPopup.java", "BodyUseAPI": [], "Fixed commit": "5b884d6982ea3bf2a9e6c59d25fb876cac565dcd", "Url": "https://api.github.com/repos/tliu784/missYoga", "Date": "2014-04-22T22:26:55Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<ru.besttuts.stockwidget.model.Model>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (null == model) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8307/buggy-version/android.src.main.java.ru.besttuts.stockwidget.service.FetchStockData.java", "BodyUseAPI": [], "Fixed commit": "3c33f25aded2f951e77c84dbd3a3d5e6499dce7b", "Url": "https://api.github.com/repos/romanchekashov/currency-and-stock-widget", "Date": "2017-03-17T20:10:34Z"},
{"Line": "=>305", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (maxComp > 1) { sheet.addMergedRegion(new org.apache.poi.ss.util.CellRangeAddress(3, 3, 1, maxComp)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6867/buggy-version/java.SEC.src.FN.Excel.java", "BodyUseAPI": ["org.apache.poi.ss.usermodel.Sheet.addMergedRegion(org.apache.poi.ss.util.CellRangeAddress)"], "Fixed commit": "79e9951887fa308002802f820c576c07d54536ca", "Url": "https://api.github.com/repos/iosep/portafolioduoc", "Date": "2016-11-27T21:14:45Z"},
{"Line": "=>460", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File(org.mailster.gui.prefs.ConfigurationManager.CONFIGURATION_FILENAME).exists())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3253/buggy-version/org.mailster.MailsterSWT.java", "BodyUseAPI": [], "Fixed commit": "3fc74007dee5aa376b44613df1e81f30666fda91", "Url": "https://api.github.com/repos/edeoliveira/mailster", "Date": "2013-01-10T16:44:16Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((newickFile.getValue()) != null) { node = new nl.tudelft.dnainator.parser.TreeParser(getNewickFile()).parse(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2180/buggy-version/dnainator-javafx.src.main.java.nl.tudelft.dnainator.javafx.services.GraphLoadService.java", "BodyUseAPI": [], "Fixed commit": "3204cfd2409e34297943c6c7c415c522a309e5a2", "Url": "https://api.github.com/repos/gfokkema/dnainator", "Date": "2015-06-16T19:17:27Z"},
{"Line": "=>350", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.net.URI.getRawPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((path.length()) < (backendPrefixLength)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2646/buggy-version/src.main.java.eu.spitfire_project.smart_service_proxy.core.EntityManager.java", "BodyUseAPI": [], "Fixed commit": "cce4bd20c7d23ae2b3af2d6d8734714eb45bc3c1", "Url": "https://api.github.com/repos/smartsantander/smart-service-proxy", "Date": "2012-04-27T11:22:49Z"},
{"Line": "=>531", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.equals(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (equalSig) { requestParameters.put(\"userid\", new java.lang.Object[]{ java.lang.String.valueOf(user.getId()) }); requestParameters.put(\"account\", new java.lang.Object[]{ account.getAccountName() }); requestParameters.put(\"accountobj\", new java.lang.Object[]{ account }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6206/buggy-version/server.src.com.cloud.servlet.ConsoleProxyServlet.java", "BodyUseAPI": [], "Fixed commit": "716827845556c6d0e1636b53bd21fe77db27ea7b", "Url": "https://api.github.com/repos/wido/CloudStack", "Date": "2011-03-21T18:28:16Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["i.getFileName().toLowerCase()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (lc.contains(\"openmaps\")) { nameId = R.string.index_name_openmaps; order = 10; }else if ((lc.contains(\"northamerica\")) || (lc.contains(\"north-america\"))) { nameId = R.string.index_name_north_america; order = 30; }else if (((lc.contains(\"centralamerica\")) || (lc.contains(\"central-america\"))) || (lc.contains(\"caribbean\"))) { nameId = R.string.index_name_central_america; order = 40; }else if ((lc.contains(\"southamerica\")) || (lc.contains(\"south-america\"))) { nameId = R.string.index_name_south_america; order = 45; }else if (lc.startsWith(\"france_\")) { nameId = R.string.index_name_france; order = 17; }else if (lc.contains(\"germany\")) { nameId = R.string.index_name_germany; order = 16; }else if (lc.contains(\"europe\")) { nameId = R.string.index_name_europe; order = 15; }else if (lc.contains(\"russia\")) { nameId = R.string.index_name_russia; order = 18; }else if (lc.contains(\"africa\")) { nameId = R.string.index_name_africa; order = 80; }else if ((lc.contains(\"_asia\")) || (lc.startsWith(\"asia\"))) { nameId = R.string.index_name_asia; order = 50; }else if ((lc.contains(\"oceania\")) || (lc.contains(\"australia\"))) { nameId = R.string.index_name_oceania; order = 70; }else if (lc.contains(\"_wiki_\")) { nameId = R.string.index_name_wiki; order = 10; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8550/buggy-version/OsmAnd-java.src.net.osmand.plus.download.IndexItemCategory.java", "BodyUseAPI": ["java.lang.String.contains(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.startsWith(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "df950e940efd659a7941a219eac57b6e145c11ff", "Url": "https://api.github.com/repos/osmandapp/OsmAnd-core", "Date": "2013-02-08T22:51:32Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(checkLoggedIn())) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8943/buggy-version/PlanYourParty.src.fr.insalyon.pyp.gui.main.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "133ff58a916604756fbcb09025e853fceda5f172", "Url": "https://api.github.com/repos/omg-insa/client", "Date": "2013-03-13T09:58:04Z"},
{"Line": "=>378", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Class<?>.getSuperclass()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (subSuperclass != null) { try { final int candidate = 1 + (org.datacleaner.util.ReflectionUtils.getInterfaceHierarchyDistance(subSuperclass, supertype)); bestCandidate = java.lang.Math.min(bestCandidate, candidate); } catch (java.lang.IllegalArgumentException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9200/buggy-version/engine.core.src.main.java.org.datacleaner.util.ReflectionUtils.java", "BodyUseAPI": ["org.datacleaner.util.ReflectionUtils.getInterfaceHierarchyDistance(java.lang.Class<?>,java.lang.Class<?>)"], "Fixed commit": "8f1ffdd5a7e843a92fdb2c6d5bacae93a22300f8", "Url": "https://api.github.com/repos/datacleaner/DataCleaner", "Date": "2015-04-22T18:01:18Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (extensions.isEmpty()) { return ( asset) -> true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7485/buggy-version/src.main.java.com.github.horrorho.inflatabledonkey.Filters.java", "BodyUseAPI": [], "Fixed commit": "87ddbb2390ef55621c50955fb96b82f1cf54271d", "Url": "https://api.github.com/repos/horrorho/InflatableDonkey", "Date": "2016-04-21T19:00:14Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subStrings.isEmpty()) { return ( device) -> true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7485/buggy-version/src.main.java.com.github.horrorho.inflatabledonkey.Filters.java", "BodyUseAPI": [], "Fixed commit": "87ddbb2390ef55621c50955fb96b82f1cf54271d", "Url": "https://api.github.com/repos/horrorho/InflatableDonkey", "Date": "2016-04-21T19:00:14Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (subStrings.isEmpty()) { return ( assets) -> true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7485/buggy-version/src.main.java.com.github.horrorho.inflatabledonkey.Filters.java", "BodyUseAPI": [], "Fixed commit": "87ddbb2390ef55621c50955fb96b82f1cf54271d", "Url": "https://api.github.com/repos/horrorho/InflatableDonkey", "Date": "2016-04-21T19:00:14Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gwt.user.client.ui.Widget.getOffsetWidth()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (width > 0) frame.setWidth((width + \"px\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5926/buggy-version/jbpm-form-modeler-panels.jbpm-form-modeler-editor.jbpm-form-modeler-editor-client.src.main.java.org.jbpm.formModeler.editor.client.editors.FormModelerPanelViewImpl.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.Frame.setWidth(java.lang.String)"], "Fixed commit": "86acdd54910839482973cff578d67cf45aa9d3a7", "Url": "https://api.github.com/repos/etirelli/jbpm-form-modeler", "Date": "2014-03-18T16:05:53Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (height > 0) frame.setHeight((height + \"px\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5926/buggy-version/jbpm-form-modeler-panels.jbpm-form-modeler-editor.jbpm-form-modeler-editor-client.src.main.java.org.jbpm.formModeler.editor.client.editors.FormModelerPanelViewImpl.java", "BodyUseAPI": ["com.google.gwt.user.client.ui.Frame.setHeight(java.lang.String)"], "Fixed commit": "86acdd54910839482973cff578d67cf45aa9d3a7", "Url": "https://api.github.com/repos/etirelli/jbpm-form-modeler", "Date": "2014-03-18T16:05:53Z"},
{"Line": "=>51", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clazz.getClassLoader()) == (addon.getClassLoader())) { type = clazz; }else { type = ((java.lang.Class<T>) (java.lang.Class.forName(clazz.getName(), true, addon.getClassLoader()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8503/buggy-version/container.src.main.java.org.jboss.forge.container.impl.ServiceRegistryImpl.java", "BodyUseAPI": ["java.lang.Class.forName(java.lang.String,boolean,addon.getClassLoader())", "org.jboss.forge.container.impl.AddonImpl.getClassLoader()", "java.lang.Class<T>.getName()"], "Fixed commit": "ad6b96b364ca93dcbb788764dec389f9389bd75e", "Url": "https://api.github.com/repos/forge/core", "Date": "2013-01-21T21:01:12Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.ddd.demo.flickrpicdemo.FetchFlickr.items.size()) != 0) { com.ddd.demo.flickrpicdemo.FetchFlickr.items.clear(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/773/buggy-version/app.src.main.java.com.ddd.demo.flickrpicdemo.FetchFlickr.java", "BodyUseAPI": ["java.util.List<com.ddd.demo.flickrpicdemo.dao.PhotoItem>.clear()"], "Fixed commit": "977a3cf8a19584613c7f4230bed4ec7ca6aa62a4", "Url": "https://api.github.com/repos/IceDcap/FlickrPicDemo", "Date": "2014-09-24T11:37:51Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_is_alive) { _current_time = 1; tryStartTimer(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/409/buggy-version/app.src.main.java.com.example.michael.technotreck_hw_01.SecondActivity.java", "BodyUseAPI": [], "Fixed commit": "051f462918a06e5452b149749a1f079b87e4c3f5", "Url": "https://api.github.com/repos/MartinsonMichael/android-Technotrack", "Date": "2017-10-10T22:09:27Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["m.name().substring(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((name.length()) > 1) { b.append(name.substring(1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7962/buggy-version/src.main.java.be.redlab.jaxb.swagger.SwaggerAnnotationsJaxbPlugin.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "09d31fc30ceffcec4016ceb721e7c631b4ae444e", "Url": "https://api.github.com/repos/redlab/swagger-jaxb", "Date": "2013-02-22T08:33:52Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (encode) { a = urlEncode(k.toString()); b = urlEncode(v.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/364/buggy-version/src.ox.HttpRequest.java", "BodyUseAPI": [], "Fixed commit": "fd00ba6cd9b298fffe4618551ba49876235a4730", "Url": "https://api.github.com/repos/mirraj2/ox", "Date": "2016-07-07T03:37:18Z"},
{"Line": "=>508", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (encode) { k = urlEncode(k.toString()); v = urlEncode(v.toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/364/buggy-version/src.ox.HttpRequest.java", "BodyUseAPI": [], "Fixed commit": "fd00ba6cd9b298fffe4618551ba49876235a4730", "Url": "https://api.github.com/repos/mirraj2/ox", "Date": "2016-07-07T03:37:18Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((renderer.getFramebufferWidth()) > (renderer.getFramebufferHeight())) { renderer.loadTransformationMatrix(0, 0, 2, ((2 * (renderer.getFramebufferWidth())) / (renderer.getFramebufferHeight())), 0); }else { renderer.loadTransformationMatrix(0, 0, ((2 * (renderer.getFramebufferHeight())) / (renderer.getFramebufferWidth())), 2, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7497/buggy-version/src.graphics.Background.java", "BodyUseAPI": ["graphics.Renderer.getFramebufferWidth()", "graphics.Renderer.getFramebufferWidth()", "graphics.Renderer.loadTransformationMatrix(int,int,int,((2 * (renderer.getFramebufferWidth())) / (renderer.getFramebufferHeight())),int)", "graphics.Renderer.getFramebufferHeight()", "graphics.Renderer.getFramebufferHeight()", "graphics.Renderer.loadTransformationMatrix(int,int,((2 * (renderer.getFramebufferHeight())) / (renderer.getFramebufferWidth())),int,int)"], "Fixed commit": "93067752ff7ceb33bad49029f2f63af99ba4845f", "Url": "https://api.github.com/repos/blobjim/Sandbox2D", "Date": "2016-10-10T04:54:04Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.util.List<java.util.Map>>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (groups.isEmpty()) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9159/buggy-version/src.main.java.com.huhaoyu.thu.service.impl.ScheduledTaskServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "691c1733677d6ae4ec5ef5cae02d2a01135ca86a", "Url": "https://api.github.com/repos/HaoyuHu/thu-stadium-reservation-server", "Date": "2017-02-17T00:50:44Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.huhaoyu.thu.service.impl.WechatUser.getAccountBeingUsed()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(accountMap.containsKey(acc.getUsername()))) { java.util.Map<java.lang.String, java.lang.String> accInfo = createAccountInfo(acc); if (accInfo == null) continue; accountMap.put(acc.getUsername(), accInfo); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9159/buggy-version/src.main.java.com.huhaoyu.thu.service.impl.ScheduledTaskServiceImpl.java", "BodyUseAPI": ["com.huhaoyu.thu.service.impl.ScheduledTaskServiceImpl.createAccountInfo(com.huhaoyu.thu.service.impl.THUAccount)", "com.huhaoyu.thu.service.impl.THUAccount.getUsername()", "java.util.Map<java.lang.String, java.util.Map>.put(acc.getUsername(),java.util.Map<java.lang.String, java.lang.String>)"], "Fixed commit": "691c1733677d6ae4ec5ef5cae02d2a01135ca86a", "Url": "https://api.github.com/repos/HaoyuHu/thu-stadium-reservation-server", "Date": "2017-02-17T00:50:44Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (allTotemsNotSummonable) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2855/buggy-version/src.com.hearthsim.card.minion.heroes.Shaman.java", "BodyUseAPI": [], "Fixed commit": "e41caab7bfb1145be2201360bb95bdb6f00aad49", "Url": "https://api.github.com/repos/oyachai/HearthSim", "Date": "2014-08-20T15:22:38Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (decodeGifImage) { builder.append(\"_\").append(\"decodeGifImage\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1016/buggy-version/sketch.src.main.java.me.PATHopan.sketch.request.LoadOptions.java", "BodyUseAPI": [], "Fixed commit": "481d194eac90d48c008f746edd5b811934eff80a", "Url": "https://api.github.com/repos/panpf/sketch", "Date": "2017-11-03T10:40:43Z"},
{"Line": "=>166", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getIndexOpPreviousElement(com.puppycrawl.tools.checkstyle.api.DetailAST)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (resultAst == null) { whitespaceFollowedAst = ast; }else { whitespaceFollowedAst = com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.getIndexOpPreviousElement(ast); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/188/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck.java", "BodyUseAPI": [], "Fixed commit": "9f66cf6dd6ac0d444fd3dac52fb1ac5c9c7c97c3", "Url": "https://api.github.com/repos/sergileon/checkstyle", "Date": "2017-08-30T08:52:53Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((operand.length()) > 0) { java.lang.Double d = java.lang.Double.parseDouble(operand.toString()); result.add(d); result.add(com.example.jiewu.calculator.util.OperatorUtils.create(java.lang.Character.toString(c))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4286/buggy-version/app.src.main.java.com.example.jiewu.calculator.util.Calculator.java", "BodyUseAPI": ["java.lang.StringBuilder.toString()", "java.lang.Double.parseDouble(java.lang.String)"], "Fixed commit": "ad5e32148000389d93f2f7ecd280658072ea1c18", "Url": "https://api.github.com/repos/JieJacket/calculator", "Date": "2017-05-09T09:10:55Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mCallback) != null) { mCallback.callBack(model); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8214/buggy-version/lib.src.main.java.com.kcode.lib.UpdateWrapper.java", "BodyUseAPI": [], "Fixed commit": "6b71d842d0b7a5954e7cbac88d236f6ebe96fdcb", "Url": "https://api.github.com/repos/fccaikai/AppUpdate", "Date": "2017-03-25T04:25:19Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.Train.session(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((uid == null) || ((uid.length()) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6018/buggy-version/app.controllers.Train.java", "BodyUseAPI": [], "Fixed commit": "7e372670c8960f534c288d80a0e99f16b93aa761", "Url": "https://api.github.com/repos/jiangecho/maopao_server", "Date": "2015-07-25T01:26:25Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["controllers.Challenge.session(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((uid == null) || ((uid.length()) == 0)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6018/buggy-version/app.controllers.Challenge.java", "BodyUseAPI": [], "Fixed commit": "7e372670c8960f534c288d80a0e99f16b93aa761", "Url": "https://api.github.com/repos/jiangecho/maopao_server", "Date": "2015-07-25T01:26:25Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (votingUser == null) throw new java.lang.IllegalArgumentException(\"Cannot vote without a user\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6799/buggy-version/src.main.java.ch.lukasmartinelli.redditclone.bl.reddit.Voter.java", "BodyUseAPI": [], "Fixed commit": "d2c41753f6faecf4849d2fd558ce496fc326799b", "Url": "https://api.github.com/repos/lukasmartinelli/reddit-clone", "Date": "2014-10-22T18:36:09Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (votingUser == null) throw new java.lang.IllegalArgumentException(\"Cannot vote without a user\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6799/buggy-version/src.main.java.ch.lukasmartinelli.redditclone.bl.reddit.Voter.java", "BodyUseAPI": [], "Fixed commit": "d2c41753f6faecf4849d2fd558ce496fc326799b", "Url": "https://api.github.com/repos/lukasmartinelli/reddit-clone", "Date": "2014-10-22T18:36:09Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((GameLayer.world) != null) { font.draw(spriteBatch, (((((\"C: \" + (GameLayer.world.visibleChunks)) + \" / \") + (GameLayer.world.loadedChunks)) + \" / \") + (GameLayer.world.chunks)), 0, ((Gdx.graphics.getHeight()) - 20)); font.draw(spriteBatch, (((\"E: \" + (GameLayer.world.visibleEntities)) + \" / \") + (GameLayer.world.totalEntities)), 0, ((Gdx.graphics.getHeight()) - 40)); font.draw(spriteBatch, (\"X: \" + (GameLayer.camera.position.x)), 0, ((Gdx.graphics.getHeight()) - 60)); font.draw(spriteBatch, (\"Y: \" + (GameLayer.camera.position.y)), 0, ((Gdx.graphics.getHeight()) - 80)); font.draw(spriteBatch, (\"Z: \" + (GameLayer.camera.position.z)), 0, ((Gdx.graphics.getHeight()) - 100)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1976/buggy-version/core.src.de.dakror.vloxlands.layer.DebugLayer.java", "BodyUseAPI": [], "Fixed commit": "53ab54005ff56f760439fb0fc72bf05fc049a613", "Url": "https://api.github.com/repos/Dakror/Vloxlands", "Date": "2014-06-25T17:03:34Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((misc.Logger.output) != null) { misc.Logger.makeEntry(\"Logger closed.\\r\\n\", true); misc.Logger.output.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3696/buggy-version/enigma-project.cryptoanalysis.misc.Logger.java", "BodyUseAPI": [], "Fixed commit": "3376201c30cb764660a77aba40edec20e6e45f93", "Url": "https://api.github.com/repos/bmwinstead/enigma-project", "Date": "2013-11-21T18:46:49Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((misc.Logger.output) != null) { misc.Logger.output.append(entry); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3696/buggy-version/enigma-project.cryptoanalysis.misc.Logger.java", "BodyUseAPI": [], "Fixed commit": "3376201c30cb764660a77aba40edec20e6e45f93", "Url": "https://api.github.com/repos/bmwinstead/enigma-project", "Date": "2013-11-21T18:46:49Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (oldData.exists()) { try { java.nio.file.Files.move(oldData.toPath(), getDataFolder().toPath(), java.nio.file.StandardCopyOption.ATOMIC_MOVE); } catch (java.io.IOException e) { e.printStackTrace(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7971/buggy-version/src.au.com.mineauz.MobHunting.MobHunting.java", "BodyUseAPI": ["java.io.File.toPath()", "java.nio.file.Files.move(java.nio.file.Path,getDataFolder().toPath(),java.nio.file.StandardCopyOption)"], "Fixed commit": "5d73d3e3b056c8437c996916607e1a0ab13819c0", "Url": "https://api.github.com/repos/Schmoller/MobHunting", "Date": "2013-06-15T13:45:55Z"},
{"Line": "=>119", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!initialized) { tmf.init(ks); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4576/buggy-version/activemq-spring.src.main.java.org.apache.activemq.spring.SpringSslContext.java", "BodyUseAPI": [], "Fixed commit": "a53d4cf7bf4de769d59850c33346c59ee8035aea", "Url": "https://api.github.com/repos/apache/activemq", "Date": "2015-07-01T10:08:57Z"},
{"Line": "=>180", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (info.guardianproject.mrapp.Utils.stringNotBlank(type)) { selection += (\" and \" + (StoryMakerDB.Schema.Jobs.COL_TYPE)) + \"=?\"; selArgs.add((\"\" + type)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2666/buggy-version/app.src.info.guardianproject.mrapp.model.PublishJob.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "28efb58ec649b3cedb429ef68f2da23ed56cbece", "Url": "https://api.github.com/repos/guardianproject/storymaker", "Date": "2014-09-01T16:46:13Z"},
{"Line": "=>290", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((getType()) == (pcl.lc.api.EnumStargateType.ATLANTIS)) || ((getType()) == (pcl.lc.api.EnumStargateType.WRAITH))) dest += chevronAngle;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9030/buggy-version/src.main.java.pcl.lc.module.stargate.tile.TileStargateBase.java", "BodyUseAPI": [], "Fixed commit": "65927e1b0278f3016f16cd144353cb7187eec2a1", "Url": "https://api.github.com/repos/PC-Logix/LanteaCraft", "Date": "2014-07-31T05:11:03Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (position >= (com.example.macbookair.demo.Contacts.getNames().size())) { while (position != ((com.example.macbookair.demo.Contacts.getNames().size()) - 1)) position--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9123/buggy-version/app.src.main.java.com.example.macbookair.demo.ListAdapter.java", "BodyUseAPI": [], "Fixed commit": "08198a28c3b384e9c3c48988c4d1a972be1dbc2f", "Url": "https://api.github.com/repos/mart111/MyFriends", "Date": "2017-12-20T18:42:11Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((ioe.getInventory().getType()) == (org.bukkit.event.inventory.InventoryType.CRAFTING)) && (io.github.yannici.bedwars.Main.getInstance().getBooleanConfig(\"allow-crafting\", false))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4798/buggy-version/src.io.github.yannici.bedwars.Listener.PlayerListener.java", "BodyUseAPI": [], "Fixed commit": "d4554b67506e1c9fafe68185af7bc3cf8c4e2634", "Url": "https://api.github.com/repos/BedwarsRel/BedwarsRel", "Date": "2015-09-09T10:54:27Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (message == \"\") break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4184/buggy-version/src.hardscene.HardScene.java", "BodyUseAPI": [], "Fixed commit": "381a0d317f86e9ccf354f4d9b1a567afc353674f", "Url": "https://api.github.com/repos/Speentie8081/HardScene-Client", "Date": "2016-12-03T18:45:29Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"presentationformat\".equals(aName)) { return \"presentation-format\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5777/buggy-version/src.main.java.de.mirkosertic.desktopsearch.ContentExtractor.java", "BodyUseAPI": [], "Fixed commit": "ffc2e95f1f47250f64b5b4159004bfa821855da3", "Url": "https://api.github.com/repos/mirkosertic/FXDesktopSearch", "Date": "2014-08-20T16:08:27Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"contentstatus\".equals(aName)) { return \"content-status\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5777/buggy-version/src.main.java.de.mirkosertic.desktopsearch.ContentExtractor.java", "BodyUseAPI": [], "Fixed commit": "ffc2e95f1f47250f64b5b4159004bfa821855da3", "Url": "https://api.github.com/repos/mirkosertic/FXDesktopSearch", "Date": "2014-08-20T16:08:27Z"},
{"Line": "=>382", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (info.isValid()) { synchronized(this.contextMap) { final java.util.List<org.apache.felix.http.base.internal.whiteboard.ContextHandler> handlerList = this.servicesMap.remove(info); if (handlerList != null) { for (final org.apache.felix.http.base.internal.whiteboard.ContextHandler h : handlerList) { this.unregisterWhiteboardService(h, info); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6292/buggy-version/http.base.src.main.java.org.apache.felix.http.base.internal.whiteboard.ServletContextHelperManager.java", "BodyUseAPI": ["org.apache.felix.http.base.internal.whiteboard.ServletContextHelperManager.unregisterWhiteboardService(org.apache.felix.http.base.internal.whiteboard.ContextHandler,org.apache.felix.http.base.internal.runtime.WhiteboardServiceInfo<?>)", "java.util.Map<org.apache.felix.http.base.internal.runtime.WhiteboardServiceInfo<?>, java.util.List<org.apache.felix.http.base.internal.whiteboard.ContextHandler>>.remove(org.apache.felix.http.base.internal.runtime.WhiteboardServiceInfo<?>)"], "Fixed commit": "538e225c236f246d87aa4bd428d6d05623173564", "Url": "https://api.github.com/repos/blowfeld/felix", "Date": "2015-02-26T18:28:58Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (info.isValid()) { synchronized(this.contextMap) { final java.util.List<org.apache.felix.http.base.internal.whiteboard.ContextHandler> handlerList = this.contextMap.get(info.getName()); if (handlerList != null) { final java.util.Iterator<org.apache.felix.http.base.internal.whiteboard.ContextHandler> i = handlerList.iterator(); boolean first = true; boolean activateNext = false; while (i.hasNext()) { final org.apache.felix.http.base.internal.whiteboard.ContextHandler handler = i.next(); if ((handler.getContextInfo().compareTo(info)) == 0) { i.remove(); if (first) { this.deactivate(handler); activateNext = true; } break; } first = false; } if (handlerList.isEmpty()) { this.contextMap.remove(info.getName()); }else if (activateNext) { this.activate(handlerList.get(0)); } listenerRegistry.removeContext(info); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6292/buggy-version/http.base.src.main.java.org.apache.felix.http.base.internal.whiteboard.ServletContextHelperManager.java", "BodyUseAPI": ["org.apache.felix.http.base.internal.runtime.ServletContextHelperInfo.getName()", "handler.getContextInfo().compareTo(org.apache.felix.http.base.internal.runtime.ServletContextHelperInfo)", "java.util.Map<java.lang.String, java.util.List<org.apache.felix.http.base.internal.whiteboard.ContextHandler>>.get(info.getName())", "java.util.Map<java.lang.String, java.util.List<org.apache.felix.http.base.internal.whiteboard.ContextHandler>>.remove(info.getName())", "org.apache.felix.http.base.internal.runtime.ServletContextHelperInfo.getName()", "org.apache.felix.http.base.internal.whiteboard.ListenerRegistry.removeContext(org.apache.felix.http.base.internal.runtime.ServletContextHelperInfo)"], "Fixed commit": "538e225c236f246d87aa4bd428d6d05623173564", "Url": "https://api.github.com/repos/blowfeld/felix", "Date": "2015-02-26T18:28:58Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((keys.length) == 1) { java.lang.String[] temporal = new java.lang.String[(keys.length) + 1]; temporal[0] = keys[0]; temporal[1] = null; keys = temporal; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3612/buggy-version/src.main.java.org.opencompare.CountPairs.java", "BodyUseAPI": [], "Fixed commit": "dab6cee229bf977460fd10f8c9ff15a16e5ed254", "Url": "https://api.github.com/repos/miage-pdl/groupe3", "Date": "2017-12-17T13:26:33Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (ShareVariable.isChangeMarkerIndex) { if (y < (_screenW * 0.4)) { ShareVariable.selectedMarkerIndex = 0; }else { int currentIndex = ((int) (java.lang.Math.floor(((y + (_screenW * 0.4)) / (_screenW / 2))))); ShareVariable.selectedMarkerIndex = currentIndex; } if ((ShareVariable.arrMarker.size()) > 0) { ShareVariable.arrMarker.get(ShareVariable.selectedMarkerIndex).showInfoWindow(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3005/buggy-version/Soda.src.com.planb.soda.ScrollViewForPlaceItem.java", "BodyUseAPI": [], "Fixed commit": "10899c3bf73af533f43cdb9b15c90e6c151b8f51", "Url": "https://api.github.com/repos/miterfrants/android-soda", "Date": "2014-02-17T09:40:30Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.net.ConnectivityManager.getActiveNetworkInfo()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (networkInfo == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6658/buggy-version/app.src.main.java.com.example.admin.aqm.ConnectToRouterFragment.java", "BodyUseAPI": [], "Fixed commit": "dfaab1c1b003c4665874d475bbad9cbbd8733cae", "Url": "https://api.github.com/repos/vartika1403/AQM", "Date": "2017-11-20T06:07:26Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.company.draw.shapes.Columns.getMinColSpan(com.company.draw.shapes.Layout)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (minColSpan == ((nColumns) - columnIndex)) { if ((columnIndex == ((nColumns) - 1)) && ((child.getMinWidth()) > (columnWidths))) { saveRow(); currRow.add(child); columnIndex = minColSpan; }else { currRow.add(child); saveRow(); columnIndex = 0; } }else if (minColSpan < ((nColumns) - columnIndex)) { currRow.add(child); columnIndex += minColSpan; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6354/buggy-version/src.com.company.draw.shapes.Columns.java", "BodyUseAPI": [], "Fixed commit": "41dc9006326efd8a67649ff50eefdcc40d8dd913", "Url": "https://api.github.com/repos/mn263/DrawTree", "Date": "2014-12-11T19:38:00Z"},
{"Line": "=>92", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((aKeys.length) == 2) { limitAttemptsEl.select(org.olat.ims.qti21.ui.editor.ItemSessionControlController.attemtpsKeys[0], true); maxAttemptsEl.setValue(\"1\"); }else { limitAttemptsEl.select(org.olat.ims.qti21.ui.editor.ItemSessionControlController.attemtpsKeys[2], true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4587/buggy-version/src.main.java.org.olat.ims.qti21.ui.editor.ItemSessionControlController.java", "BodyUseAPI": [], "Fixed commit": "861cde2295c3e182cb1f0638df194722099bfb20", "Url": "https://api.github.com/repos/klemens/openolat", "Date": "2016-06-20T09:06:14Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.nextweb.Node.value()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(value instanceof com.appjangle.rsm.client.commands.ComponentCommand)) { latch.registerSuccess(); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8114/buggy-version/src.main.java.com.appjangle.rsm.server.internal.RsmServerComponent.java", "BodyUseAPI": [], "Fixed commit": "fe93a3041bfc1b42de87b067ba45ed07cae14a0b", "Url": "https://api.github.com/repos/mxro/remote-server-management", "Date": "2012-12-19T23:21:33Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(cur instanceof com.orientechnologies.orient.core.record.impl.ODocument)) cur = sourceRecord;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8547/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ORecordLazySet.java", "BodyUseAPI": [], "Fixed commit": "eee41f745ac41683304dcf0cb74d5de40a328a3c", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-05-19T12:32:39Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((sourceRecord) != null) cur = sourceRecord.getOwner();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8547/buggy-version/core.src.main.java.com.orientechnologies.orient.core.db.record.ORecordLazySet.java", "BodyUseAPI": [], "Fixed commit": "eee41f745ac41683304dcf0cb74d5de40a328a3c", "Url": "https://api.github.com/repos/orientechnologies/orientdb", "Date": "2015-05-19T12:32:39Z"},
{"Line": "=>498", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isPlaying) { sendChatMessage((((this.name) + \": \") + message)); game.players.get(otherPlayerID).sendChatMessage((((this.name) + \": \") + message)); }else { sendChatMessage((((this.name) + \": \") + message)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5190/buggy-version/src.poker.HeadsUpPlayer.java", "BodyUseAPI": [], "Fixed commit": "bf4e8f7733f55096f59e77687424f3350f834944", "Url": "https://api.github.com/repos/dennisdeng2002/PokerAppOnline", "Date": "2015-10-15T12:45:21Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["RepoHandler.searchAuthor(MainWindow.getRepo(),java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((a.getGender()) != null) && (!(a.getGender().equals(\"\")))) { authorInfoPanel.add(new javax.swing.JLabel(\"Gender:\")); authorInfoPanel.add(new javax.swing.JLabel(a.getGender())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2792/buggy-version/project.src.main.java.ShowBooksDialog.java", "BodyUseAPI": ["Author.getGender()", "javax.swing.JPanel.add(javax.swing.JLabel)"], "Fixed commit": "37a3a32061cefb1532be40178255b728bfad0890", "Url": "https://api.github.com/repos/flomic/semanticTechnologies", "Date": "2017-02-02T17:27:30Z"},
{"Line": "=>1018", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((selectCourse.getSchedule().getSeatPool()) != null) { seatPoolDetailManager.updateSeatPoolDetailStatus(selectCourse.getSchedule().getSeatPool().getId(), selectCourse.getSelectCourseSeat().getSeatDetail().getId(), SeatPoolDetail.SEATDETAIL_STATUS_VALID); }else { selectCourseSeatManager.deleteSelectCourseSeatOfSelectCourse(selectCourse.getId()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/934/buggy-version/src.main.java.com.huivip.webapp.action.SelectAction.java", "BodyUseAPI": ["com.huivip.webapp.action.SelectCourse.getSchedule()", "selectCourse.getSchedule().getSeatPool().getId()", "com.huivip.webapp.action.SeatPoolDetailManager.updateSeatPoolDetailStatus(selectCourse.getSchedule().getSeatPool().getId(),selectCourse.getSelectCourseSeat().getSeatDetail().getId(),SeatPoolDetail.SEATDETAIL_STATUS_VALID)", "selectCourse.getSelectCourseSeat().getSeatDetail().getId()", "com.huivip.webapp.action.SelectCourseSeatManager.deleteSelectCourseSeatOfSelectCourse(selectCourse.getId())", "selectCourse.getSchedule().getSeatPool()", "selectCourse.getSelectCourseSeat().getSeatDetail()", "com.huivip.webapp.action.SelectCourse.getSelectCourseSeat()", "com.huivip.webapp.action.SelectCourse.getId()"], "Fixed commit": "859a76aabeeff2c1adf191de885d80a59be2dc3e", "Url": "https://api.github.com/repos/laihui0207/jwsystem", "Date": "2017-07-11T06:08:47Z"},
{"Line": "=>403", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((srcDevice == null) || (dstDevice == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6498/buggy-version/src.main.java.net.floodlightcontroller.loadbalancer.LoadBalancer.java", "BodyUseAPI": [], "Fixed commit": "8c8993703c520933a067921a71e414af14bb73c4", "Url": "https://api.github.com/repos/korablin/ucc", "Date": "2013-03-28T21:02:07Z"},
{"Line": "=>6294", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((entities.getEntities().get(players.get(playerIndex).getPositionOnGameBoard()).getOwner()) != null) && ((entities.getEntities().get(players.get(playerIndex).getPositionOnGameBoard()).getOwner().getName()) != (players.get(playerIndex).getName()))) { sentByChanceCard = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6629/buggy-version/src.Monopoly.java", "BodyUseAPI": [], "Fixed commit": "150ed0fe39875557a78cc3d836ce3322c0307f75", "Url": "https://api.github.com/repos/pawelpaszki/monopoly", "Date": "2015-08-01T17:03:03Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (p != null) setParametersAsString(p.toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3311/buggy-version/src.main.java.org.ecocean.media.Feature.java", "BodyUseAPI": ["org.ecocean.media.Feature.setParametersAsString(p.toString())", "org.json.JSONObject.toString()"], "Fixed commit": "6c7e68bee294dd642b10ed4f7b03ce82ebf52edb", "Url": "https://api.github.com/repos/WildbookOrg/Wildbook", "Date": "2016-10-13T20:52:18Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["cei.getE().getParameters().get(0).asType()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(setterArgType instanceof javax.lang.model.type.DeclaredType)) throw new com.predic8.membrane.annot.ProcessingException(\"Setter argument must be of an @MCElement-annotated type.\", cei.getE().getParameters().get(0));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8981/buggy-version/annot.src.main.java.com.predic8.membrane.annot.SpringConfigurationXSDGeneratingAnnotationProcessor.java", "BodyUseAPI": [], "Fixed commit": "bd83ca59ede8c60b89e6a7e9ade9f5a38f5149ed", "Url": "https://api.github.com/repos/membrane/service-proxy", "Date": "2013-06-03T16:11:07Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userPanel) != null) userPanel.clearTable();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5884/buggy-version/logtracker.src.main.java.org.sper.logtracker.servstat.ui.ServiceStatsTabs.java", "BodyUseAPI": [], "Fixed commit": "2ab7c04064aed66a9dcadd4626706ab437d50bfb", "Url": "https://api.github.com/repos/silvanperego/LogTracker", "Date": "2015-05-05T10:50:59Z"},
{"Line": "=>650", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (pointCloud != null) { pointCloud.points.get(pcarray); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8987/buggy-version/app.src.main.java.com.projecttango.examples.java.pointcloud.MainActivity.java", "BodyUseAPI": ["pointCloud.points.get(float[])"], "Fixed commit": "48a4b6425aae3f3d2c61f3c5fd9611b96afff144", "Url": "https://api.github.com/repos/Rafcin/ThatRobotThing", "Date": "2017-05-19T05:38:12Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (relativeTime.equals(\"Yesterday\")) { relativeTime = \"1d\"; }else if (relativeTime.contains(\"day\")) { replace = relativeTime.indexOf(\" \"); relativeTime = relativeTime.substring(0, replace); relativeTime += \"d\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/972/buggy-version/app.src.main.java.com.codepath.apps.mysimpletweets.models.Tweet.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.indexOf(java.lang.String)", "java.lang.String.contains(java.lang.String)"], "Fixed commit": "12507446d195fd86c48ee0f6d3e79ebabf38d34e", "Url": "https://api.github.com/repos/camcuz97/TwitterClientApp", "Date": "2016-06-29T20:22:59Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entity instanceof net.minecraft.entity.player.EntityPlayer) && (((net.minecraft.entity.player.EntityPlayer) (entity)).isSpectator())) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7899/buggy-version/src.main.java.de.teamlapen.vampirism.util.Helper.java", "BodyUseAPI": [], "Fixed commit": "02abf3e0365992463d8c5f7aa236739ae8d7ca54", "Url": "https://api.github.com/repos/TeamLapen/Vampirism", "Date": "2016-07-21T12:05:40Z"},
{"Line": "=>189", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (player.isSpectator()) { VampirismMod.log.w(de.teamlapen.vampirism.player.vampire.VampirePlayer.TAG, \"Player can't bite in spectator mode\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7899/buggy-version/src.main.java.de.teamlapen.vampirism.player.vampire.VampirePlayer.java", "BodyUseAPI": [], "Fixed commit": "02abf3e0365992463d8c5f7aa236739ae8d7ca54", "Url": "https://api.github.com/repos/TeamLapen/Vampirism", "Date": "2016-07-21T12:05:40Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map.Entry<java.lang.String, java.lang.Object>.getValue()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value instanceof java.lang.String) { java.lang.String s = ((java.lang.String) (value)); if ((s.length()) > 1500) { value = new com.google.appengine.api.datastore.Text(s); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3382/buggy-version/kdata-gae.src.main.java.org.eck.kdata.KGaeStorager.java", "BodyUseAPI": [], "Fixed commit": "d8155e0700d929ffb28eb6b2f0626f4e971060bf", "Url": "https://api.github.com/repos/erickzanardo/kdata", "Date": "2015-05-22T20:58:50Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { com.aspsine.zhihu.daily.util.SharedPrefUtils.setSplashJson(getActivity().getApplicationContext(), new com.google.gson.Gson().toJson(startImage)); com.aspsine.zhihu.daily.util.L.i(com.aspsine.zhihu.daily.ui.fragment.SplashFragment.TAG, \"new image.\"); setData(startImage); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8048/buggy-version/app.src.main.java.com.aspsine.zhihu.daily.ui.fragment.SplashFragment.java", "BodyUseAPI": [], "Fixed commit": "dac884ec632ce50a9e44a4653d6df7c23954732e", "Url": "https://api.github.com/repos/Aspsine/Daily", "Date": "2015-04-07T11:06:05Z"},
{"Line": "=>322", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i != j) DM.setValue(i, j, score);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4960/buggy-version/biojava-phylo.src.main.java.org.biojava.nbio.phylo.DistanceMatrixCalculator.java", "BodyUseAPI": ["org.forester.evoinference.matrix.distance.DistanceMatrix.setValue(int,int,double)"], "Fixed commit": "9cabf41018736fa76273e50823c55b152c40bf37", "Url": "https://api.github.com/repos/lafita/biojava", "Date": "2015-11-17T14:21:11Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.catalog) != null) { org.verapdf.pd.optionalcontent.PDOptionalContentProperties ocProperties = this.catalog.getOCProperties(); if (ocProperties != null) { java.util.List<org.verapdf.model.impl.pd.PDOCProperties> result = new java.util.ArrayList<>(); org.verapdf.model.impl.pd.PDOCProperties pdOCProperties = new org.verapdf.model.impl.pd.GFPDOCProperties(ocProperties); result.add(pdOCProperties); return result; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2612/buggy-version/validation-model.src.main.java.org.verapdf.model.impl.pd.GFPDDocument.java", "BodyUseAPI": [], "Fixed commit": "406722563e62161724816ec91a427eb82968a065", "Url": "https://api.github.com/repos/timurkamalov/veraPDF-validation", "Date": "2016-09-14T13:41:09Z"},
{"Line": "=>200", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= 11) accountExpand.setActivated(accountSwitcherVisible);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7549/buggy-version/opacclient.opacapp.src.main.java.de.geeksfactory.opacclient.frontend.OpacActivity.java", "BodyUseAPI": [], "Fixed commit": "fd038b49464d8a04b2c51e35a5fe0e83ce22f05e", "Url": "https://api.github.com/repos/johan12345/opacclient", "Date": "2016-02-02T17:22:24Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (completeRow[row][1]) { incompleteCol = 0; completeSet = rollinetude2.TeamJAPRollin.setIndices[row][1]; incompleteSet = rollinetude2.TeamJAPRollin.setIndices[row][0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5528/buggy-version/src.rollinetude2.TeamJAPRollin.java", "BodyUseAPI": [], "Fixed commit": "c695ef6b759fd4e8fbf55f9629521ca1de7a3100", "Url": "https://api.github.com/repos/jacqlesage/rollin", "Date": "2016-03-08T20:56:45Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fi.otavanopisto.muikku.users.UserEmailEntityController.getUserEmailAddresses(fi.otavanopisto.muikku.schooldata.SchoolDataIdentifier)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (org.apache.commons.collections.CollectionUtils.isNotEmpty(addresses)) mailer.sendMail(message.getEmailMimeType(context), systemSettingsController.getSystemEmailSenderAddress(), addresses, message.getEmailSubject(context), message.getEmailContent(context));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5101/buggy-version/muikku-core-plugins.src.main.java.fi.otavanopisto.muikku.plugins.notifier.email.NotifierEmailMethod.java", "BodyUseAPI": ["fi.otavanopisto.muikku.mail.Mailer.sendMail(message.getEmailMimeType(context),systemSettingsController.getSystemEmailSenderAddress(),java.util.List<java.lang.String>,message.getEmailSubject(context),message.getEmailContent(context))"], "Fixed commit": "a0786a156c456d6c0a9a81c61e26223064f7cc56", "Url": "https://api.github.com/repos/otavanopisto/muikku", "Date": "2016-12-22T12:57:53Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((type) == (com.thecolony.tractus.ServerInfoWindow.CLIENT)) { version = tVersion.getText(); ip = tIp.getText(); port = tPort.getText(); com.thecolony.tractus.networking.Globals.setInfo(name, version, ip, port); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/771/buggy-version/Game.src.com.thecolony.tractus.ServerInfoWindow.java", "BodyUseAPI": [], "Fixed commit": "b6f7fc4368cf7ac5a361de0aec4dcfcdeae6193f", "Url": "https://api.github.com/repos/CS-196-Space-Colonization/Game", "Date": "2014-12-06T20:36:45Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["this.inner().dnsSettings()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (dnsSettings != null) { if (((((dnsSettings.domainNameLabel()) == null) || (dnsSettings.domainNameLabel().isEmpty())) && (((dnsSettings.fqdn()) == null) || (dnsSettings.fqdn().isEmpty()))) && (((dnsSettings.reverseFqdn()) == null) || (dnsSettings.reverseFqdn().isEmpty()))) { this.inner().withDnsSettings(null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3665/buggy-version/azure-mgmt-network.src.main.java.com.microsoft.azure.management.network.implementation.PublicIpAddressImpl.java", "BodyUseAPI": ["com.microsoft.azure.management.network.implementation.api.PublicIPAddressDnsSettings.fqdn()", "dnsSettings.reverseFqdn().isEmpty()", "com.microsoft.azure.management.network.implementation.api.PublicIPAddressDnsSettings.reverseFqdn()", "dnsSettings.domainNameLabel().isEmpty()", "com.microsoft.azure.management.network.implementation.api.PublicIPAddressDnsSettings.domainNameLabel()", "com.microsoft.azure.management.network.implementation.api.PublicIPAddressDnsSettings.domainNameLabel()", "dnsSettings.fqdn().isEmpty()", "com.microsoft.azure.management.network.implementation.api.PublicIPAddressDnsSettings.fqdn()", "com.microsoft.azure.management.network.implementation.api.PublicIPAddressDnsSettings.reverseFqdn()"], "Fixed commit": "89725a4672ec924cd3c95c08d771bbb586d2841c", "Url": "https://api.github.com/repos/martinsawicki/azure-sdk-for-java", "Date": "2016-06-13T13:54:14Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((input.getText().length()) > 0) { java.lang.String siteUrl = input.getText().toString(); android.util.Log.d(\"siteurl\", siteUrl); doSearch(siteUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4069/buggy-version/app.src.main.java.se.edinjakupovic.mobilescraper.ViewActivities.MainActivity.java", "BodyUseAPI": ["input.getText().toString()", "android.widget.EditText.getText()"], "Fixed commit": "50365f6c0b21bc69fef52f351e6ba129bfaddff2", "Url": "https://api.github.com/repos/endj/SmartScraper", "Date": "2017-05-06T14:10:19Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osgi.framework.Bundle.adapt(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (wiring != null) { results.addAll(wiring.findEntries(\"/\", \"*.xtext\", BundleWiring.LISTRESOURCES_RECURSE)); results.addAll(wiring.findEntries(\"/\", \"*.___xtype\", BundleWiring.LISTRESOURCES_RECURSE)); results.addAll(wiring.findEntries(\"/\", \"*.___xbase\", BundleWiring.LISTRESOURCES_RECURSE)); results.addAll(wiring.findEntries(\"/\", \"*.___xbasewithannotations\", BundleWiring.LISTRESOURCES_RECURSE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6474/buggy-version/org.lunifera.xtext.builder.participant.xbase.src.org.lunifera.dsl.xtext.builder.participant.xbase.impl.XbaseBuilderParticipant.java", "BodyUseAPI": ["java.util.List<java.net.URL>.addAll(wiring.findEntries(\"/\", \"*.___xtype\", BundleWiring.LISTRESOURCES_RECURSE))", "org.osgi.framework.wiring.BundleWiring.findEntries(java.lang.String,java.lang.String,BundleWiring.LISTRESOURCES_RECURSE)", "java.util.List<java.net.URL>.addAll(wiring.findEntries(\"/\", \"*.___xbase\", BundleWiring.LISTRESOURCES_RECURSE))", "org.osgi.framework.wiring.BundleWiring.findEntries(java.lang.String,java.lang.String,BundleWiring.LISTRESOURCES_RECURSE)", "java.util.List<java.net.URL>.addAll(wiring.findEntries(\"/\", \"*.___xbasewithannotations\", BundleWiring.LISTRESOURCES_RECURSE))", "org.osgi.framework.wiring.BundleWiring.findEntries(java.lang.String,java.lang.String,BundleWiring.LISTRESOURCES_RECURSE)", "org.osgi.framework.wiring.BundleWiring.findEntries(java.lang.String,java.lang.String,BundleWiring.LISTRESOURCES_RECURSE)", "java.util.List<java.net.URL>.addAll(wiring.findEntries(\"/\", \"*.xtext\", BundleWiring.LISTRESOURCES_RECURSE))"], "Fixed commit": "b852067309b98fc2bb04131ecc614e15aab63d68", "Url": "https://api.github.com/repos/lunifera/lunifera-xtext-runtimebuilder", "Date": "2015-07-28T09:28:56Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((end.getChronology()) != (getChronology())) { throw new org.threeten.extra.chrono.DateTimeException(\"Unable to calculate period between two different chronologies\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1054/buggy-version/src.main.java.org.threeten.extra.chrono.DiscordianDate.java", "BodyUseAPI": [], "Fixed commit": "8191414921540bf6f75ce6e3f5dc18c1aadd9faf", "Url": "https://api.github.com/repos/robfletcher/threetenbp-extra", "Date": "2013-04-12T12:10:25Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(org.threeten.extra.chrono.ChronoLocalDate.class.isAssignableFrom(endDateTime.getClass()))) { throw new org.threeten.extra.chrono.DateTimeException(\"Unable to calculate period between objects of two different types\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1054/buggy-version/src.main.java.org.threeten.extra.chrono.DiscordianDate.java", "BodyUseAPI": [], "Fixed commit": "8191414921540bf6f75ce6e3f5dc18c1aadd9faf", "Url": "https://api.github.com/repos/robfletcher/threetenbp-extra", "Date": "2013-04-12T12:10:25Z"},
{"Line": "=>118", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["edu.mit.media.funf.config.SingletonTypeAdapterFactory.SingletonTypeAdapter<E>.immutable(com.google.gson.JsonElement)", "edu.mit.media.funf.config.RuntimeTypeAdapterFactory.getRuntimeType(com.google.gson.JsonElement,com.google.gson.reflect.TypeToken<E>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((runtimeType == null) || (immutable == null)) { android.util.Log.e(LogUtil.TAG, (((\"runtimeType: \" + runtimeType) + \" immutable: \") + immutable)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5536/buggy-version/funf_v4.src.main.java.edu.mit.media.funf.config.SingletonTypeAdapterFactory.java", "BodyUseAPI": ["android.util.Log.e(LogUtil.TAG,(((\"runtimeType: \" + runtimeType) + \" immutable: \") + immutable))"], "Fixed commit": "346bb297ac62fc102b77d37e74aab0cf5f81fa8a", "Url": "https://api.github.com/repos/arcticahealth/funf-core-android", "Date": "2016-12-03T00:24:27Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.mit.media.funf.BuildConfig.DEBUG) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5536/buggy-version/funf_v4.src.main.java.edu.mit.media.funf.storage.AmazonS3Archive.java", "BodyUseAPI": [], "Fixed commit": "346bb297ac62fc102b77d37e74aab0cf5f81fa8a", "Url": "https://api.github.com/repos/arcticahealth/funf-core-android", "Date": "2016-12-03T00:24:27Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (targets.contains(location)) targets.remove(location);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4371/buggy-version/experiment.IntBoard.java", "BodyUseAPI": ["java.util.HashSet<java.lang.Integer>.remove(int)"], "Fixed commit": "1cabb06c21ce4f3b0c9135a8c611b8952502d85c", "Url": "https://api.github.com/repos/tsallee/ClueGame", "Date": "2013-02-25T18:15:06Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getIntent().getExtras()) != null) { com.example.bruno.myapplication.aboutus.btimg = dataSet(new android.view.View(this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5700/buggy-version/app.src.main.java.com.example.bruno.myapplication.aboutus.java", "BodyUseAPI": [], "Fixed commit": "6e447dea4e355f05830d9461bf001d5329c7184b", "Url": "https://api.github.com/repos/brunofornazari/PI_Grupo_2", "Date": "2015-06-15T21:52:03Z"},
{"Line": "=>17920", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (resultTo != null) { final com.android.server.am.BroadcastQueue queue = broadcastQueueForIntent(intent); try { queue.performReceiveLocked(callerApp, resultTo, intent, Activity.RESULT_CANCELED, null, null, false, false, userId); } catch (android.os.RemoteException e) { android.util.Slog.w(com.android.server.am.ActivityManagerService.TAG, (((\"Failure [\" + (queue.mQueueName)) + \"] sending broadcast result of \") + intent), e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1896/buggy-version/services.core.java.com.android.server.am.ActivityManagerService.java", "BodyUseAPI": ["com.android.server.am.BroadcastQueue.performReceiveLocked(com.android.server.am.ProcessRecord,android.content.IIntentReceiver,android.content.Intent,Activity.RESULT_CANCELED,<nulltype>,<nulltype>,boolean,boolean,int)"], "Fixed commit": "d2480ab7bb70c8150a2c663fe049370b0860553d", "Url": "https://api.github.com/repos/PWaCA/android_frameworks_base", "Date": "2016-06-20T22:09:27Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.common.IpConversionUtil.hasIpv6Prefix(org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.class.cast(match.getLayer3Match()).getIpv6Source()))) { return java.util.Objects.nonNull(org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.common.IpConversionUtil.extractIpv6Prefix(org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.class.cast(match.getLayer3Match()).getIpv6Source())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1912/buggy-version/openflowplugin-impl.src.main.java.org.opendaylight.openflowplugin.impl.protocol.serialization.match.Ipv6SourceEntrySerializer.java", "BodyUseAPI": ["java.util.Objects.nonNull(org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.common.IpConversionUtil.extractIpv6Prefix(org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.class.cast(match.getLayer3Match()).getIpv6Source()))", "org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.Match.getLayer3Match()", "org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.common.IpConversionUtil.extractIpv6Prefix(org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.class.cast(match.getLayer3Match()).getIpv6Source())", "org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.getIpv6Source()", "java.lang.Class.cast(match.getLayer3Match())"], "Fixed commit": "c1eaf465f43b9cddf8065bafbc04af408cd134ee", "Url": "https://api.github.com/repos/opendaylight/openflowplugin", "Date": "2017-05-25T18:17:25Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null != (org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.common.IpConversionUtil.hasIpv6Prefix(org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.class.cast(match.getLayer3Match()).getIpv6Destination()))) { return java.util.Objects.nonNull(org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.common.IpConversionUtil.extractIpv6Prefix(org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.class.cast(match.getLayer3Match()).getIpv6Destination())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1912/buggy-version/openflowplugin-impl.src.main.java.org.opendaylight.openflowplugin.impl.protocol.serialization.match.Ipv6DestinationEntrySerializer.java", "BodyUseAPI": ["java.util.Objects.nonNull(org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.common.IpConversionUtil.extractIpv6Prefix(org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.class.cast(match.getLayer3Match()).getIpv6Destination()))", "org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.getIpv6Destination()", "org.opendaylight.openflowplugin.openflow.md.core.sal.convertor.common.IpConversionUtil.extractIpv6Prefix(org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.match.layer._3.match.Ipv6Match.class.cast(match.getLayer3Match()).getIpv6Destination())", "java.lang.Class.cast(match.getLayer3Match())", "org.opendaylight.yang.gen.v1.urn.opendaylight.model.match.types.rev131026.Match.getLayer3Match()"], "Fixed commit": "c1eaf465f43b9cddf8065bafbc04af408cd134ee", "Url": "https://api.github.com/repos/opendaylight/openflowplugin", "Date": "2017-05-25T18:17:25Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (onGround()) { isJumping = false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6610/buggy-version/core.src.com.dirtycrew.dirtyame.Player.java", "BodyUseAPI": [], "Fixed commit": "49cc00b448c69faeae4cd83784beec56f050b48a", "Url": "https://api.github.com/repos/DirtyCrew/dirtygame", "Date": "2015-01-25T17:45:10Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fpga.getConnectionsOut(component).iterator()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (iterator.hasNext()) { builder.append(java.lang.String.format(\",\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5524/buggy-version/src.easyfpga.generator.TLEBuilder.java", "BodyUseAPI": [], "Fixed commit": "1b37996a60f101df3275216aad3376c2458a67d8", "Url": "https://api.github.com/repos/os-cillation/easyfpga-sdk-java", "Date": "2015-07-22T14:33:08Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (pos == 0) { idx = (random.nextInt(((org.talend.dataquality.duplicating.FieldModifier.DIGIT.length()) - 1))) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3269/buggy-version/main.plugins.org.talend.dataquality.sampling.src.main.java.org.talend.dataquality.duplicating.FieldModifier.java", "BodyUseAPI": [], "Fixed commit": "a64e54477b8698d9ce943536282e6ede490142d9", "Url": "https://api.github.com/repos/Talend/tdq-studio-se", "Date": "2014-07-01T10:39:54Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ryanbelt.utscroom.EmptyRoomOutput.min) < 10) { textView.setText(java.lang.String.format(\"%s: %d:%s\", ryanbelt.utscroom.EmptyRoomOutput.weekDay, ryanbelt.utscroom.EmptyRoomOutput.hour, (\"0\" + (java.lang.String.valueOf(ryanbelt.utscroom.EmptyRoomOutput.min))))); }else { textView.setText(java.lang.String.format(\"%s: %d:%d\", ryanbelt.utscroom.EmptyRoomOutput.weekDay, ryanbelt.utscroom.EmptyRoomOutput.hour, ryanbelt.utscroom.EmptyRoomOutput.min)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1285/buggy-version/app.src.main.java.ryanbelt.utscroom.EmptyRoomOutput.java", "BodyUseAPI": [], "Fixed commit": "f95b753c677fe08d5e0158f346ab31d57b348ed7", "Url": "https://api.github.com/repos/ryanbelt/UTSCroom", "Date": "2016-04-29T01:17:28Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((integers[2]) < 10) { min = \"0\" + min; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1285/buggy-version/app.src.main.java.ryanbelt.utscroom.OnlineWraper.java", "BodyUseAPI": [], "Fixed commit": "f95b753c677fe08d5e0158f346ab31d57b348ed7", "Url": "https://api.github.com/repos/ryanbelt/UTSCroom", "Date": "2016-04-29T01:17:28Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liferay.micro.maintainance.candidate.service.CandidateEntryLocalServiceUtil.getCandidateByWikiPageId(long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (candidateEntry == null) { return runningVotes; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3379/buggy-version/modules.micro-maintainance-portlet.src.main.java.com.liferay.micro.maintainance.task.TaskHandlerImpl.java", "BodyUseAPI": [], "Fixed commit": "2d19231d49dfd10f055cd7495dcaf135b4d85ce9", "Url": "https://api.github.com/repos/hudakl/OWXP", "Date": "2017-03-30T08:45:55Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((id) != 0) navMenu.findItem(id).setChecked(true);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/615/buggy-version/app.src.main.java.com.zacharee1.modcontrol.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "fecebb77150c6f35e0692adc1956bf5a0aab6412", "Url": "https://api.github.com/repos/zacharee/ModControl", "Date": "2017-04-12T20:17:53Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.Boolean.parseBoolean(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (doGenerateAlphabet) edu.cmu.cs.lti.ark.fn.parsing.CreateAlphabet.logger.info(\"Done creating alphabet\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1844/buggy-version/src.main.java.edu.cmu.cs.lti.ark.fn.parsing.CreateAlphabet.java", "BodyUseAPI": [], "Fixed commit": "46f43035102d8cea6960fabfbd10722d5a1558c9", "Url": "https://api.github.com/repos/akb89/semafor", "Date": "2017-04-21T07:27:01Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (human) gameState.getBoard().get(cell2.first, cell2.second).getModifiers().add(new game.model.Modifier(game.model.Modifier.ModifierType.HUMAN, java.lang.Integer.MAX_VALUE));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6664/buggy-version/src.main.java.game.model.cards.zombies.Mass.java", "BodyUseAPI": [], "Fixed commit": "471948673a9fe1e7f18c0ef266ceece64b525e1a", "Url": "https://api.github.com/repos/piobpl/Zombies", "Date": "2013-06-01T10:32:27Z"},
{"Line": "=>862", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (playerSupport) { $.id(R.id.app_video_loading).visible(); videoView.setVideoPath(url); if (isLive) { videoView.seekTo(0); }else if (currentPosition > 0) { seekTo(currentPosition, false); } videoView.start(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1018/buggy-version/libIjkPlayer.src.main.java.com.zplayer.library.ZPlayer.java", "BodyUseAPI": [], "Fixed commit": "9053ff9ccd6a5dbfb30395e83aba3bf9efe0d011", "Url": "https://api.github.com/repos/zcolin/ZIjkPlayer", "Date": "2017-03-01T05:24:13Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((part.split(\":\").length) > 1) { aspect.setSentiment(part.split(\":\")[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5017/buggy-version/src.main.java.de.germeval2017.Evaluation.io.GermevalReader.java", "BodyUseAPI": ["de.germeval2017.Evaluation.objectBindings.SentimentAspect.setSentiment(java.lang.String)", "java.lang.String.split(java.lang.String)"], "Fixed commit": "64459fec54e6eb13c029a7feb585e4c3e9b60e1e", "Url": "https://api.github.com/repos/muchafel/GermEval2017", "Date": "2017-09-06T22:59:59Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pt.webdetails.cdb.connector.Connector.exportCdaConnection(org.json.JSONObject)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (connection == null) { pt.webdetails.cdb.connector.ConnectorEngine.logger.error(((\"Connection is null. Something is wrong with query \" + (query.getString(\"name\"))) + \". Ignoring.\")); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3458/buggy-version/src.pt.webdetails.cdb.connector.ConnectorEngine.java", "BodyUseAPI": [], "Fixed commit": "185b6f7168d4f4b986fc133b7af20f1f9c27f628", "Url": "https://api.github.com/repos/webdetails/cdb", "Date": "2012-05-09T14:40:08Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.support.v4.view.MotionEventCompat.getActionMasked(android.view.MotionEvent)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (action == (e.ACTION_DOWN)) { mListener.onPositionTapped(); view.startAnimation(android.view.animation.AnimationUtils.loadAnimation(getContext(), R.anim.image_tap)); android.util.Log.d(com.example.yzhan14.soccerkeeper.FieldFragment.DEBUG_TAG, (\"OnTouch\" + (e.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8281/buggy-version/app.src.main.java.com.example.yzhan14.soccerkeeper.FieldFragment.java", "BodyUseAPI": ["android.view.MotionEvent.toString()", "android.util.Log.d(java.lang.String,(\"OnTouch\" + (e.toString())))"], "Fixed commit": "5731b0b833dacafed9005df7779a73912592c7e8", "Url": "https://api.github.com/repos/Yuxi84/SoccerKeeper", "Date": "2016-11-29T04:02:08Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((storageApi) == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2502/buggy-version/src.main.java.com.github.liosha2007.android.controller.DashboardController.java", "BodyUseAPI": [], "Fixed commit": "e4595adf0f1b61de68e3a1020f5f1a7c4a11a937", "Url": "https://api.github.com/repos/liosha2007/groupdocs-manager", "Date": "2014-03-09T01:38:44Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args == null) || ((args.length) == 0)) { args = new java.lang.String[]{ \"target\" }; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5940/buggy-version/src.main.java.gov.vha.isaac.expression.service.Main.java", "BodyUseAPI": [], "Fixed commit": "be057fab01626b48f285a983bb908d5bbad7e180", "Url": "https://api.github.com/repos/Apelon-VA/va-expression-service", "Date": "2015-03-18T04:10:26Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l1 < 0) l1 += 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4285/buggy-version/src.main.java.de.gdoeppert.sky.model.SolarElements.java", "BodyUseAPI": [], "Fixed commit": "e987c92da4bf6f840fd33518e7dd5692a9030b2b", "Url": "https://api.github.com/repos/gdoepp/skyreigen", "Date": "2017-06-12T19:00:48Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (l1 < 0) l1 += 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4285/buggy-version/src.main.java.de.gdoeppert.sky.model.SolarElements.java", "BodyUseAPI": [], "Fixed commit": "e987c92da4bf6f840fd33518e7dd5692a9030b2b", "Url": "https://api.github.com/repos/gdoepp/skyreigen", "Date": "2017-06-12T19:00:48Z"},
{"Line": "=>214", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.valueOf(java.lang.Object)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((playerPushoverKey.equals(\"INVALID\")) || (playerPushoverKey.equals(\"BANNED\"))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4644/buggy-version/src.net.jopv.minecraft.bukkit.minecraftpush.MinecraftPush.java", "BodyUseAPI": [], "Fixed commit": "30c9a44df429b805ca13281e1016ee076e57cbda", "Url": "https://api.github.com/repos/Jop-V/MinecraftPush", "Date": "2014-05-29T11:31:30Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.netflix.zuul.context.RequestContext.getCurrentContext().getResponse().getStatus()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (httpStatus > 0) { this.tracer.addTag(this.traceKeys.getHttp().getStatusCode(), java.lang.String.valueOf(httpStatus)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4009/buggy-version/spring-cloud-sleuth-core.src.main.java.org.springframework.cloud.sleuth.instrument.zuul.TracePostZuulFilter.java", "BodyUseAPI": ["org.springframework.cloud.sleuth.Tracer.addTag(this.traceKeys.getHttp().getStatusCode(),java.lang.String)", "java.lang.String.valueOf(int)"], "Fixed commit": "be6165e69ca9d5d42efc95e5be9a8560fd709a18", "Url": "https://api.github.com/repos/spring-cloud/spring-cloud-sleuth", "Date": "2016-06-17T08:23:47Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!customExplosion) { addBehavior(new org.jtrfp.trcl.beh.ExplodesOnDeath(org.jtrfp.trcl.obj.Explosion.ExplosionType.Blast)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/744/buggy-version/src.main.java.org.jtrfp.trcl.obj.DEFObject.java", "BodyUseAPI": [], "Fixed commit": "df9b6af83977636432d856361ca9416840c93f76", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-02-15T05:06:17Z"},
{"Line": "=>642", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (capabilities.isSetCapabilities()) { abstractProcess.addCapabilities(capabilities); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4964/buggy-version/coding.sensorML-v20.src.main.java.org.n52.sos.decode.SensorMLDecoderV20.java", "BodyUseAPI": ["org.n52.sos.ogc.sensorML.AbstractProcess.addCapabilities(org.n52.sos.ogc.sensorML.elements.SmlCapabilities)"], "Fixed commit": "91261281a888719d2f737328f5a1a534e44134e1", "Url": "https://api.github.com/repos/EHJ-52n/SOS", "Date": "2017-04-07T14:35:31Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(getFetLifeApplication().getPasswordAlwaysPreference())) { editor.putString(FetLifeApplication.CONSTANT_PREF_KEY_ME_JSON, meAsJson).putString(com.bitlove.fetlife.model.service.FetLifeApiIntentService.CONSTANT_PREF_KEY_REFRESH_TOKEN, tokenResponse.body().getRefreshToken()); }else { editor.remove(FetLifeApplication.CONSTANT_PREF_KEY_ME_JSON).remove(com.bitlove.fetlife.model.service.FetLifeApiIntentService.CONSTANT_PREF_KEY_REFRESH_TOKEN); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1905/buggy-version/FetLife.fetlife.src.main.java.com.bitlove.fetlife.model.service.FetLifeApiIntentService.java", "BodyUseAPI": [], "Fixed commit": "460893b308d7bd4a2c18448e3df45c1538cefeac", "Url": "https://api.github.com/repos/fetlife/android", "Date": "2016-08-18T11:14:36Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(selectProgramTextField.getText().equals(\"\"))) { task.addAction(new dingo.Action(\"program\", selectProgramTextField.getText())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6636/buggy-version/src.ui.TaskEditDialogController.java", "BodyUseAPI": ["dingo.Task.addAction(dingo.Action)", "javafx.scene.control.TextField.getText()"], "Fixed commit": "046d7ffc445ee944e2c8d606fea18185fd2998fb", "Url": "https://api.github.com/repos/jmlassen/Dingo", "Date": "2014-12-17T22:18:53Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["state.getVehicles().get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((vehicle.getDestination().isPresent()) && (!(newSchedule.get(i).get(0).equals(vehicle.getDestination().get())))) { newSchedule.get(i).remove(vehicle.getDestination().get()); newSchedule.get(i).add(0, vehicle.getDestination().get()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/653/buggy-version/central.src.main.java.com.github.rinde.rinsim.central.rt.ScheduleUtil.java", "BodyUseAPI": ["vehicle.getDestination().get()", "newSchedule.get(i).add(int,vehicle.getDestination().get())", "com.github.rinde.rinsim.central.GlobalStateObject.VehicleStateObject.getDestination()", "java.util.List<java.util.List<com.github.rinde.rinsim.core.model.pdp.Parcel>>.get(int)", "vehicle.getDestination().get()", "java.util.List<java.util.List<com.github.rinde.rinsim.core.model.pdp.Parcel>>.get(int)", "com.github.rinde.rinsim.central.GlobalStateObject.VehicleStateObject.getDestination()", "newSchedule.get(i).remove(vehicle.getDestination().get())"], "Fixed commit": "e941f391959d483c82b780a733cd76c806401569", "Url": "https://api.github.com/repos/rinde/RinSim", "Date": "2015-09-04T13:45:27Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(min)) { logger.error((((((\"Min value is NaN: \" + (aAttributeID)) + \", \") + (aAttributeName)) + \", \") + (aCategoryID))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1962/buggy-version/src.main.java.ca.mcgill.cs.creco.logic.ScoredAttribute.java", "BodyUseAPI": [], "Fixed commit": "6a0183a638bdabfcfecf61d54c55b45894c700c1", "Url": "https://api.github.com/repos/prmr/Creco", "Date": "2014-03-18T14:09:23Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.Double.isNaN(max)) { logger.error((((((\"Max value is NaN: \" + (aAttributeID)) + \", \") + (aAttributeName)) + \", \") + (aCategoryID))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1962/buggy-version/src.main.java.ca.mcgill.cs.creco.logic.ScoredAttribute.java", "BodyUseAPI": [], "Fixed commit": "6a0183a638bdabfcfecf61d54c55b45894c700c1", "Url": "https://api.github.com/repos/prmr/Creco", "Date": "2014-03-18T14:09:23Z"},
{"Line": "=>105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<org.wilson.world.star.StarProvider, java.util.List>.get(org.wilson.world.star.StarProvider)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (list != null) { for (java.lang.Object item : list) { if (provider.equals(item, target)) { return true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1591/buggy-version/src.main.java.org.wilson.world.manager.StarManager.java", "BodyUseAPI": [], "Fixed commit": "c02920580981a2bd8e16859eca7000116fec8fb7", "Url": "https://api.github.com/repos/liumiaowilson/world", "Date": "2016-07-17T05:52:35Z"},
{"Line": "=>434", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (columnType != null) { currentModelMap.put(currentProp, columnType); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4342/buggy-version/src.org.john.bin.TplGen.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "d5f34c74e264b7df1f40507e3dc377d847c914b6", "Url": "https://api.github.com/repos/overkazaf/TplGen", "Date": "2016-05-26T08:41:52Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mResultsContainer) != null) { mResultsContainer.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6365/buggy-version/src.org.cityspot.CitySpotActivity.java", "BodyUseAPI": [], "Fixed commit": "3f0337f7ea971944af007cf34fe17534881c054a", "Url": "https://api.github.com/repos/EmirWeb/CitySpot", "Date": "2014-08-30T20:22:05Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (((trip != null) && ((trip.getStopUpdates()) != null)) && ((trip.getStopUpdates().getUpdates()) != null)) { for (org.onebusaway.realtime.soundtransit.model.StopUpdate su : trip.getStopUpdates().getUpdates()) { if ((su.getArrivalTime().getActual()) == null) { foundNullSchedule = true; break; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4948/buggy-version/onebusaway-gtfs-rt-feed-builder.src.main.java.org.onebusaway.realtime.soundtransit.services.TUFeedBuilderScheduleServiceImpl.java", "BodyUseAPI": ["org.onebusaway.realtime.soundtransit.model.TripInfo.getStopUpdates()", "trip.getStopUpdates().getUpdates()"], "Fixed commit": "a36d2504bd243e5a74f075004f31466b2c44c643", "Url": "https://api.github.com/repos/camsys/onebusaway-gtfs-realtime-feed", "Date": "2017-01-31T20:11:33Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((callers.getCallers()) != null) { if ((uk.ac.openlab.radio.activities.ShowOverviewActivity.callersArrayList) != null) { uk.ac.openlab.radio.activities.ShowOverviewActivity.callersArrayList.clear(); uk.ac.openlab.radio.activities.ShowOverviewActivity.callersArrayList.addAll(callers.getCallers()); uk.ac.openlab.radio.activities.ShowOverviewActivity.callerListRecyclerView.post(new java.lang.Runnable() { @java.lang.Override public void run() { uk.ac.openlab.radio.activities.ShowOverviewActivity.callerListAdapter.notifyDataSetChanged(); uk.ac.openlab.radio.activities.ShowOverviewActivity.tvTotalCallers.setText((\"Total callers \" + ((callers.getListeners()) - 1))); } }); }else { if ((callers.getListeners()) >= 0) { uk.ac.openlab.radio.activities.ShowOverviewActivity.tvTotalCallers.setText((\"Total callers \" + ((callers.getListeners()) - 1))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5838/buggy-version/app.src.main.java.uk.ac.openlab.radio.activities.ShowOverviewActivity.java", "BodyUseAPI": ["uk.ac.openlab.radio.datatypes.TopicInfoResult.getCallers()", "android.support.v7.widget.RecyclerView.post(java.lang.Runnable)", "android.widget.TextView.setText((\"Total callers \" + ((callers.getListeners()) - 1)))", "android.widget.TextView.setText((\"Total callers \" + ((callers.getListeners()) - 1)))", "uk.ac.openlab.radio.datatypes.TopicInfoResult.getListeners()", "uk.ac.openlab.radio.datatypes.TopicInfoResult.getListeners()", "uk.ac.openlab.radio.datatypes.TopicInfoResult.getListeners()", "java.util.List<uk.ac.openlab.radio.datatypes.Callers>.addAll(callers.getCallers())"], "Fixed commit": "3378d7f449d69856b63acd6e447d3c9f688c1dbe", "Url": "https://api.github.com/repos/deepak15013/Sangoshthi", "Date": "2016-06-21T16:37:43Z"},
{"Line": "=>383", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((callers.getListeners()) >= 0) { uk.ac.openlab.radio.activities.ShowOverviewActivity.tvTotalCallers.setText((\"Total callers \" + ((callers.getListeners()) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5838/buggy-version/app.src.main.java.uk.ac.openlab.radio.activities.ShowOverviewActivity.java", "BodyUseAPI": ["uk.ac.openlab.radio.datatypes.TopicInfoResult.getListeners()", "android.widget.TextView.setText((\"Total callers \" + ((callers.getListeners()) - 1)))"], "Fixed commit": "3378d7f449d69856b63acd6e447d3c9f688c1dbe", "Url": "https://api.github.com/repos/deepak15013/Sangoshthi", "Date": "2016-06-21T16:37:43Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.sweetdum.dschess.game.IGameControllerAdapter.getPieceAt(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (p != null) { writer.println(p.toString()); }else { writer.println(\"null\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4560/buggy-version/src.com.sweetdum.dschess.ai.NetAI.java", "BodyUseAPI": ["java.io.PrintWriter.println(p.toString())", "com.sweetdum.dschess.game.piece.Piece.toString()"], "Fixed commit": "3ac47d01222a0e26d39bfdac23ee43fc4679fa4a", "Url": "https://api.github.com/repos/linmx0130/DSChess", "Date": "2017-01-04T05:29:33Z"},
{"Line": "=>239", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (RunwayClassLoader.arrayPattern.matcher(name).matches()) { return com.runwaysdk.generation.loader.RunwayClassLoader.loadArray(name); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/30/buggy-version/runwaysdk-common.src.main.java.com.runwaysdk.generation.loader.DelegatingClassLoader.java", "BodyUseAPI": ["com.runwaysdk.generation.loader.RunwayClassLoader.loadArray(java.lang.String)"], "Fixed commit": "02df1b4a769500f6419e9b6cddd93d84dc8e84e4", "Url": "https://api.github.com/repos/terraframe/Runway-SDK", "Date": "2015-05-22T22:49:43Z"},
{"Line": "=>746", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.replace(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (isElementNotPresent(navigation)) { org.exoplatform.selenium.platform.WebElement element = waitForAndGetElement(org.exoplatform.selenium.platform.By.id(\"GroupNavigationList\")); org.exoplatform.selenium.platform.JavascriptExecutor executor = ((org.exoplatform.selenium.platform.JavascriptExecutor) (driver)); executor.executeScript(\"arguments[0].scrollIntoView(false);\", element); click(navigation); }else { click(navigation); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4008/buggy-version/ui-common.src.main.java.org.exoplatform.selenium.platform.PlatformBase.java", "BodyUseAPI": ["org.exoplatform.selenium.platform.PlatformBase.click(java.lang.String)", "org.exoplatform.selenium.platform.PlatformBase.click(java.lang.String)"], "Fixed commit": "0b5063fa0a3ddfc02046924e49c715151826e208", "Url": "https://api.github.com/repos/exoplatform/ui-test", "Date": "2013-12-11T12:07:30Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == o) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/815/buggy-version/services.common.src.main.java.com.epam.dlab.dto.exploratory.ExploratoryURL.java", "BodyUseAPI": [], "Fixed commit": "61b4772856f6e9afd9f5939d8707b14e36528519", "Url": "https://api.github.com/repos/epam/DLab", "Date": "2017-10-18T15:59:29Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (distinct) { elProp = beanDescriptor.getElGetValue(expression); }else { elProp = beanDescriptor.getElPropertyDeploy(expression); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8768/buggy-version/src.main.java.io.ebeaninternal.server.deploy.DeployPropertyParser.java", "BodyUseAPI": [], "Fixed commit": "15116dea4b7c1fc13536a9c671c9069d67199b60", "Url": "https://api.github.com/repos/FOCONIS/ebean", "Date": "2017-05-10T09:52:28Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["metaVariable.getMetaConstraint().getMetaValues(org.metacsp.framework.meta.MetaVariable)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (values != null) for (org.metacsp.framework.ConstraintNetwork value : values) value.setAnnotation(metaVariable);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9130/buggy-version/src.main.java.org.metacsp.framework.meta.MetaConstraintSolver.java", "BodyUseAPI": [], "Fixed commit": "bd14d56a7bbf3714b62b766f0590cdddf41cb634", "Url": "https://api.github.com/repos/FedericoPecora/meta-csp-framework", "Date": "2015-06-30T18:51:26Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kaoba.expo.service.HistorialUsuariosExpoService.save(com.kaoba.expo.service.dto.HistorialUsuariosExpoDTO)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((result.getId()) != null) { return org.springframework.http.ResponseEntity.created(new java.net.URI((\"/api/historial-usuarios-expos/\" + (result.getId())))).headers(com.kaoba.expo.web.rest.util.HeaderUtil.createEntityCreationAlert(com.kaoba.expo.web.rest.HistorialUsuariosExpoResource.ENTITY_NAME, result.getId().toString())).body(result); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5627/buggy-version/expoCR.src.main.java.com.kaoba.expo.web.rest.HistorialUsuariosExpoResource.java", "BodyUseAPI": ["com.kaoba.expo.web.rest.util.HeaderUtil.createEntityCreationAlert(java.lang.String,result.getId().toString())", "org.springframework.http.ResponseEntity.created(new java.net.URI((\"/api/historial-usuarios-expos/\" + (result.getId())))).headers(com.kaoba.expo.web.rest.util.HeaderUtil.createEntityCreationAlert(com.kaoba.expo.web.rest.HistorialUsuariosExpoResource.ENTITY_NAME, result.getId().toString()))", "org.springframework.http.ResponseEntity.created(new java.net.URI((\"/api/historial-usuarios-expos/\" + (result.getId())))).headers(com.kaoba.expo.web.rest.util.HeaderUtil.createEntityCreationAlert(com.kaoba.expo.web.rest.HistorialUsuariosExpoResource.ENTITY_NAME, result.getId().toString())).body(com.kaoba.expo.service.dto.HistorialUsuariosExpoDTO)", "result.getId().toString()", "com.kaoba.expo.service.dto.HistorialUsuariosExpoDTO.getId()", "com.kaoba.expo.service.dto.HistorialUsuariosExpoDTO.getId()", "org.springframework.http.ResponseEntity.created(java.net.URI)"], "Fixed commit": "a33c609db83aaef148f47c9334e3ffa51e85343d", "Url": "https://api.github.com/repos/K-oba/ExpoWeb", "Date": "2017-08-18T19:00:27Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (disposeGame) previousGame.dispose();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7878/buggy-version/core.src.net.net63.codearcade.LSD.screens.overlays.AbstractOverlay.java", "BodyUseAPI": [], "Fixed commit": "0ff9c3baad9a708625a6ac5532d8546448b95bc1", "Url": "https://api.github.com/repos/basimkhajwal/LSD", "Date": "2015-12-17T20:35:07Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mNumExercises) > 0) { childUpdates.put(((\"/workouts/\" + (mWorkoutKey)) + \"/numExercises/\"), mNumExercises); childUpdates.put((((((\"/user-workouts/\" + (getUid())) + \"/\") + (mWorkoutKey)) + \"/\") + \"/numExercises/\"), mNumExercises); }else { childUpdates.put((\"/workouts/\" + (mWorkoutKey)), null); childUpdates.put((((\"/user-workouts/\" + (getUid())) + \"/\") + (mWorkoutKey)), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7071/buggy-version/app.src.main.java.com.zonesciences.pyrros.NewWorkoutActivity.java", "BodyUseAPI": [], "Fixed commit": "a1dc3ef81e138500dc8109b882a7a6027b95abe6", "Url": "https://api.github.com/repos/pd6569/pyrros", "Date": "2016-11-06T22:40:51Z"},
{"Line": "=>139", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["id.base.app.rest.RestCaller<id.base.app.valueobject.advisory.AdvisoryConsulting>.findById(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (detail != null) { if ((detail.getName()) != null) { java.lang.String dataTitle = detail.getName().replace(\" \", \"-\"); if (dataTitle.equals(title)) { setMenu(model); model.addAttribute(\"detail\", detail); return \"/advisory/detail\"; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6168/buggy-version/Site.src.id.base.app.site.controller.web.AdvisoryWebController.java", "BodyUseAPI": ["id.base.app.valueobject.advisory.AdvisoryConsulting.getName()", "detail.getName().replace(java.lang.String,java.lang.String)", "id.base.app.valueobject.advisory.AdvisoryConsulting.getName()", "org.springframework.ui.ModelMap.addAttribute(java.lang.String,id.base.app.valueobject.advisory.AdvisoryConsulting)"], "Fixed commit": "6d7276b125e90c43bb827f38c8fe4678054cd9ca", "Url": "https://api.github.com/repos/utharamadhan/base.app", "Date": "2017-07-11T00:55:43Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSingleValue()) { org.pikater.core.ontology.subtrees.newOption.values.interfaces.IValueData valueData = toSingleValue().getCurrentValue(); if (valueData instanceof org.pikater.core.ontology.subtrees.newOption.base.BooleanValue) { org.pikater.core.ontology.subtrees.newOption.base.BooleanValue booleanValue = ((org.pikater.core.ontology.subtrees.newOption.base.BooleanValue) (valueData)); if (booleanValue.getValue()) { return (\"-\" + (this.getName())) + \" \"; }else { return \"\"; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7609/buggy-version/src.org.pikater.core.ontology.subtrees.newOption.base.NewOption.java", "BodyUseAPI": [], "Fixed commit": "89c401f57f99e762797c32f7d7e80a94ad9b215a", "Url": "https://api.github.com/repos/krajj7/pikater", "Date": "2014-08-15T17:08:18Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.fraction) == '9') { return entity; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5685/buggy-version/src.main.java.net.time4j.FractionOperator.java", "BodyUseAPI": [], "Fixed commit": "3ba3885920ab7e646df1f4ed4817e0254528558b", "Url": "https://api.github.com/repos/MenoData/Time4J", "Date": "2014-04-19T06:45:48Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((io.github.mthli.Ninja.Activity.BrowserContainer.size()) <= 0) { newTab(R.string.browser_tab_home, BrowserUnit.ABOUT_HOME, true, null); }else { pinTabs(((io.github.mthli.Ninja.Activity.BrowserContainer.size()) - 1), null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5950/buggy-version/Ninja.src.io.github.mthli.Ninja.Activity.BrowserActivity.java", "BodyUseAPI": [], "Fixed commit": "57eb48df7a7a60d2d1cbd601435b85026b9bf945", "Url": "https://api.github.com/repos/mthli/Ninja", "Date": "2015-04-25T10:09:13Z"},
{"Line": "=>394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (issue.getCategory().equals(ScrumEnum.STORY_ISSUE_TYPE)) { childrenId.clear(); java.util.ArrayList<ntut.csie.ezScrum.web.dataObject.TaskObject> tasks = ntut.csie.ezScrum.dao.TaskDAO.getInstance().getTasksByStory(issue.getIssueID()); for (ntut.csie.ezScrum.web.dataObject.TaskObject task : tasks) { childrenId.add(task.getId()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1526/buggy-version/java.ntut.csie.ezScrum.issue.sql.service.internal.MantisService.java", "BodyUseAPI": ["ntut.csie.ezScrum.dao.TaskDAO.getInstance().getTasksByStory(issue.getIssueID())", "ntut.csie.ezScrum.issue.core.IIssue.getIssueID()"], "Fixed commit": "118688f808f1adcbe8471877c3021efcd9f1d562", "Url": "https://api.github.com/repos/ezScrum/ezScrum", "Date": "2015-01-28T07:36:59Z"},
{"Line": "=>1836", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isWellSampleDataSelection(selected)) { return; }else if (selected instanceof omero.gateway.model.DataObject) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((omero.gateway.model.DataObject) (selected))); accept(visitor); foundNode = visitor.getSelectedNode(); if (foundNode != null) { if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else view.setFoundNode(null); }else if (selected instanceof org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) { foundNode = ((org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay) (selected)); if (multiSelection) model.addFoundNode(foundNode); else model.setSelectedDisplay(foundNode, true); view.setFoundNode(model.getSelectedDisplays()); }else if (selected instanceof java.util.List) { org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor visitor = new org.openmicroscopy.shoola.agents.util.browser.NodeSelectionVisitor(parent, ((java.util.List<omero.gateway.model.DataObject>) (selected))); accept(visitor); java.util.List<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> nodes = visitor.getSelectedNodes(); if ((nodes.size()) == 0) { view.setFoundNode(null); }else if ((nodes.size()) == 1) { model.setSelectedDisplay(nodes.get(0), true); view.setFoundNode(model.getSelectedDisplays()); }else { model.setSelectedDisplay(null, true); java.util.Iterator<org.openmicroscopy.shoola.agents.util.browser.TreeImageDisplay> i = nodes.iterator(); while (i.hasNext()) model.addFoundNode(i.next()); view.setFoundNode(model.getSelectedDisplays()); } }else if (selected instanceof java.lang.String) { model.setSelectedDisplay(null, true); view.setFoundNode(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1570/buggy-version/components.insight.SRC.org.openmicroscopy.shoola.agents.treeviewer.browser.BrowserComponent.java", "BodyUseAPI": [], "Fixed commit": "f25739ca4455cf6f3d4d4373f03cc606fe41a06f", "Url": "https://api.github.com/repos/snoopycrimecop/openmicroscopy", "Date": "2016-05-25T02:32:03Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (gistData.isValid()) { restTemplate.postForObject(url, gistData, java.lang.Object.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5182/buggy-version/src.main.java.com.assignment.service.gist.GistServiceImpl.java", "BodyUseAPI": ["org.springframework.web.client.RestTemplate.postForObject(java.lang.String,com.assignment.dto.GistData,java.lang.Class)"], "Fixed commit": "0a0e4e1bed1adaa550c979507d6dfb7a5aba9878", "Url": "https://api.github.com/repos/nitinshrm/playing-with-github", "Date": "2017-02-11T16:29:58Z"},
{"Line": "=>881", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (character == '\\\\') { backslashes++; }else { backslashes = 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2632/buggy-version/src.com.patrick_vane.unrealscript.editor.parser.UnrealScriptParser.java", "BodyUseAPI": [], "Fixed commit": "9cee49bb571c257b7eb5b643c6cf639940d13464", "Url": "https://api.github.com/repos/patrickvane/unrealscript_editor", "Date": "2013-03-29T15:13:29Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (world instanceof net.minecraft.world.World) { return super.collisionRayTrace(((net.minecraft.world.World) (world)), x, y, z, start, end); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7702/buggy-version/src.powercrystals.minefactoryreloaded.block.BlockFactory.java", "BodyUseAPI": [], "Fixed commit": "0c044a08a46498bcba481e82f70a70312b819dd5", "Url": "https://api.github.com/repos/skyboy/MineFactoryReloaded", "Date": "2014-08-18T02:15:45Z"},
{"Line": "=>293", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Iterator.next()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (num instanceof java.lang.Integer) { orgId = new java.lang.Long(((java.lang.Integer) (num))); }else { orgId = ((java.lang.Long) (num)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8969/buggy-version/biz.src.main.java.com.dingtalk.isv.rsq.biz.service.RsqAccountService.java", "BodyUseAPI": [], "Fixed commit": "3a2fe24665f48256c619c81b59f4d2c94ff1dece", "Url": "https://api.github.com/repos/WallaceMao/ding-isv-access", "Date": "2017-01-11T13:55:38Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getPlatformServices().getServiceReferences(com.ibm.jaggr.core.IAggregator.class.getName(), ((\"(name=\" + (getName())) + \")\"))) != null) { throw new java.lang.IllegalStateException(\"Name already registered\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7745/buggy-version/jaggr-service.src.main.java.com.ibm.jaggr.service.impl.AggregatorImpl.java", "BodyUseAPI": [], "Fixed commit": "f4e5667cce1e36b721583051eef20715de279eb4", "Url": "https://api.github.com/repos/chuckdumont/JavascriptAggregator", "Date": "2014-06-04T20:08:35Z"},
{"Line": "=>329", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(parser.isComplete())) { buffer.compact(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5592/buggy-version/api.src.main.java.org.xnio.http.HttpUpgrade.java", "BodyUseAPI": [], "Fixed commit": "a9150e99c2c6ab305d3302f1a5d63a0f2fff20df", "Url": "https://api.github.com/repos/iweiss/xnio", "Date": "2014-09-15T04:14:35Z"},
{"Line": "=>179", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.mi.ur.states.PlayState.soundEffects) { de.mi.ur.gameLogic.Score.powerUp.play(0.5F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4191/buggy-version/core.src.de.mi.ur.gameLogic.Score.java", "BodyUseAPI": [], "Fixed commit": "b9ab199424df836fbadcfcced2801cf317dfb2ee", "Url": "https://api.github.com/repos/Maxikilliane/NerdyNumeralChallenge", "Date": "2016-09-29T10:52:47Z"},
{"Line": "=>149", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (de.mi.ur.states.PlayState.soundEffects) { de.mi.ur.gameLogic.Score.fail.play(0.5F); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4191/buggy-version/core.src.de.mi.ur.gameLogic.Score.java", "BodyUseAPI": [], "Fixed commit": "b9ab199424df836fbadcfcced2801cf317dfb2ee", "Url": "https://api.github.com/repos/Maxikilliane/NerdyNumeralChallenge", "Date": "2016-09-29T10:52:47Z"},
{"Line": "=>319", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ctdbase.util.CtdUtil.axnCode(org.ctdbase.converter.IxnType)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (axnCode == (AxnCode.ACT)) { control = create(org.ctdbase.converter.Control.class, rdfId); control.setControlType(ControlType.ACTIVATION); }else if (axnCode == (AxnCode.W)) { control = create(org.ctdbase.converter.Control.class, rdfId); control.setControlType(ControlType.ACTIVATION); }else { control = create(org.ctdbase.converter.Modulation.class, rdfId); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/500/buggy-version/src.main.java.org.ctdbase.converter.CTDInteractionConverter.java", "BodyUseAPI": [], "Fixed commit": "74a627dbb972004f10f20558bf6bd8cf7db1160c", "Url": "https://api.github.com/repos/PathwayCommons/ctd-to-biopax", "Date": "2017-04-18T00:03:27Z"},
{"Line": "=>690", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (o.isDirty()) { if (o.isSparse()) { org.apache.sysml.runtime.instructions.gpu.context.CSRPointer p = o.getSparseMatrixCudaPointer(); if (p == null) throw new java.lang.RuntimeException(\"CSRPointer is null in clearTemporaryMemory\"); if (((p.rowPtr) != null) && (cudaBlockSizeMap.containsKey(p.rowPtr))) { tmpCudaBlockSizeMap.put(p.rowPtr, cudaBlockSizeMap.get(p.rowPtr)); } if (((p.colInd) != null) && (cudaBlockSizeMap.containsKey(p.colInd))) { tmpCudaBlockSizeMap.put(p.colInd, cudaBlockSizeMap.get(p.colInd)); } if (((p.val) != null) && (cudaBlockSizeMap.containsKey(p.val))) { tmpCudaBlockSizeMap.put(p.val, cudaBlockSizeMap.get(p.val)); } }else { jcuda.Pointer p = o.getJcudaDenseMatrixPtr(); if (p == null) throw new java.lang.RuntimeException(\"Pointer is null in clearTemporaryMemory\"); tmpCudaBlockSizeMap.put(p, cudaBlockSizeMap.get(p)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4422/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUContext.java", "BodyUseAPI": ["org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getSparseMatrixCudaPointer()", "org.apache.sysml.runtime.instructions.gpu.context.GPUObject.isSparse()", "org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getJcudaDenseMatrixPtr()"], "Fixed commit": "9d4a236ae9478aa4af1258853a994bf85472790d", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-08-16T23:07:01Z"},
{"Line": "=>693", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getSparseMatrixCudaPointer()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p == null) throw new java.lang.RuntimeException(\"CSRPointer is null in clearTemporaryMemory\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4422/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUContext.java", "BodyUseAPI": [], "Fixed commit": "9d4a236ae9478aa4af1258853a994bf85472790d", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-08-16T23:07:01Z"},
{"Line": "=>707", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.apache.sysml.runtime.instructions.gpu.context.GPUObject.getJcudaDenseMatrixPtr()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (p == null) throw new java.lang.RuntimeException(\"Pointer is null in clearTemporaryMemory\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4422/buggy-version/src.main.java.org.apache.sysml.runtime.instructions.gpu.context.GPUContext.java", "BodyUseAPI": [], "Fixed commit": "9d4a236ae9478aa4af1258853a994bf85472790d", "Url": "https://api.github.com/repos/nakul02/systemml", "Date": "2017-08-16T23:07:01Z"},
{"Line": "=>197", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.md2k.ema_scheduler.scheduler.RandomEMAScheduler.getLogInfos(LogInfo.OP_SCHEDULE,LogInfo.STATUS_SCHEDULER_SCHEDULED,emaType.getType(),emaType.getId())"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((logInfoArrayList.get(i).getLogSchedule()) == null) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5824/buggy-version/ema_scheduler.src.main.java.org.md2k.ema_scheduler.scheduler.RandomEMAScheduler.java", "BodyUseAPI": [], "Fixed commit": "08d234192869b70923456436b9bbc2cab960ebaf", "Url": "https://api.github.com/repos/MD2Korg/mCerebrum-EMAScheduler", "Date": "2016-05-17T10:44:21Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((confidentiality == null) || (\"\".equals(confidentiality))) { return false; }else { return confidentiality.equals(\"V\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2285/buggy-version/shr.src.main.java.org.freeshr.infrastructure.persistence.PatientRepository.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "10e0499996714a8cb97b1eac6b05b054740e022b", "Url": "https://api.github.com/repos/SharedHealth/FreeSHR", "Date": "2015-03-19T12:34:07Z"},
{"Line": "=>130", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.zxing.integration.android.IntentResult.getContents()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (scanContent == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6770/buggy-version/app.src.main.java.com.jonathan.bookshelf.BookInfoActivity.java", "BodyUseAPI": [], "Fixed commit": "47175491cd90f85727404ed0f50c1df4075265a3", "Url": "https://api.github.com/repos/joesnason/Bookshelf", "Date": "2017-03-02T07:23:15Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userSet.isValidUser()) { response.sendRedirect(\"CustomerHomePage.jsp\"); }else { response.sendRedirect(\"Register.jsp\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/37/buggy-version/src.servlets.Login.java", "BodyUseAPI": [], "Fixed commit": "4970a7cfef8a3cb07e806f59ca9c9b457dc3900d", "Url": "https://api.github.com/repos/joshg0006/CSCE-464-repos", "Date": "2017-02-07T18:36:55Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((googleApiClient) != null) { android.util.Log.d(com.sarahrobinson.finalyearproject.HomeActivity.TAG, \"onClick: signing out google user\"); Auth.GoogleSignInApi.signOut(googleApiClient).setResultCallback(new com.google.android.gms.common.api.ResultCallback<com.google.android.gms.common.api.Status>() { @java.lang.Override public void onResult(com.google.android.gms.common.api.Status status) { android.util.Log.d(com.sarahrobinson.finalyearproject.HomeActivity.TAG, \"onClick: google sign out\"); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9160/buggy-version/app.src.main.java.com.sarahrobinson.finalyearproject.HomeActivity.java", "BodyUseAPI": [], "Fixed commit": "da81bbd0f03432a7f2378d0a944986d44e01363b", "Url": "https://api.github.com/repos/sarahrobinson94/final-year-project", "Date": "2017-03-24T21:54:08Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (p.isPublished()) { pageLinks.put(p.getPageId(), p.getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6945/buggy-version/OneFinalNote.src.main.java.com.ofn.dao.impl.PageDaoDbImpl.java", "BodyUseAPI": ["com.ofn.model.Page.getTitle()", "java.util.Map<java.lang.Integer, java.lang.String>.put(p.getPageId(),p.getTitle())", "com.ofn.model.Page.getPageId()"], "Fixed commit": "d16bfde56a0e1ed4ae094a17a30c238f15dc8c31", "Url": "https://api.github.com/repos/theuwtseth/SoftwareGuildJavaCapstoneAug2017", "Date": "2017-11-02T15:13:25Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((edt1) == null) { edt1.setText(\"\"); }else { mValueOne = java.lang.Float.parseFloat(((edt1.getText()) + \"\")); mAddition = true; edt1.setText(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2396/buggy-version/App.app.src.main.java.com.hackpundit.www.assignment1.second.java", "BodyUseAPI": [], "Fixed commit": "0b1051c98f0f15e42c675f2ffb3d3e66b2a4e613", "Url": "https://api.github.com/repos/henrybojanowski/Lab-repo", "Date": "2017-12-08T06:02:03Z"},
{"Line": "=>171", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (validateInput(entryValue)) { addItems(); }else { callNewRowDialog(objType, \"Only letters, digits and spaces are allowed for input.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5179/buggy-version/JudgeCompanion.src.com.example.judgecompanion.server.fragments.ServerSetupPageFragment.java", "BodyUseAPI": [], "Fixed commit": "20529b022b9e3619eab0a0452791198dd281396c", "Url": "https://api.github.com/repos/scouthound/judge", "Date": "2013-03-20T17:47:07Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (msg != null) { alert.setMessage(\"Message\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5179/buggy-version/JudgeCompanion.src.com.example.judgecompanion.server.fragments.ServerSetupPageFragment.java", "BodyUseAPI": [], "Fixed commit": "20529b022b9e3619eab0a0452791198dd281396c", "Url": "https://api.github.com/repos/scouthound/judge", "Date": "2013-03-20T17:47:07Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { params.setMarginStart((userAuthor ? largeSpace : smallSpace)); }else { params.leftMargin = (userAuthor) ? largeSpace : smallSpace; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8747/buggy-version/fcm-channel.src.main.java.io.rapidpro.sdk.chat.ChatMessageViewHolder.java", "BodyUseAPI": [], "Fixed commit": "f8aed4facc55ed2aecb8bb893e8ed03904bd3276", "Url": "https://api.github.com/repos/Ilhasoft/rapidpro-android-sdk", "Date": "2017-05-19T21:25:01Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.JELLY_BEAN_MR1)) { params.setMarginEnd((userAuthor ? smallSpace : largeSpace)); }else { params.rightMargin = (userAuthor) ? smallSpace : largeSpace; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8747/buggy-version/fcm-channel.src.main.java.io.rapidpro.sdk.chat.ChatMessageViewHolder.java", "BodyUseAPI": [], "Fixed commit": "f8aed4facc55ed2aecb8bb893e8ed03904bd3276", "Url": "https://api.github.com/repos/Ilhasoft/rapidpro-android-sdk", "Date": "2017-05-19T21:25:01Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.osgi.framework.BundleContext.getServiceReferences(java.lang.String,<nulltype>)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (references != null) for (org.osgi.framework.ServiceReference sr : bundleContext.getServiceReferences(org.ow2.chameleon.fuchsia.core.ImportationLinkerIntrospection.class.getName(), null)) { linkers.add(((org.ow2.chameleon.fuchsia.core.ImportationLinkerIntrospection) (bundleContext.getService(sr)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1076/buggy-version/tools.fuchsia-grid.src.main.java.org.ow2.chameleon.fuchsia.tools.grid.GridWebView.java", "BodyUseAPI": [], "Fixed commit": "b92df9bb69004ef250ce8861b45c38834617dba7", "Url": "https://api.github.com/repos/ow2-chameleon/fuchsia", "Date": "2013-10-23T14:32:14Z"},
{"Line": "=>457", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.pratilipi.data.access.DataAccessor.getAuthor(pratilipi.getAuthorId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((author.getUserId()) != null) task.addParam(\"recipientId\", author.getUserId().toString());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8903/buggy-version/src.com.pratilipi.service.server.PratilipiServiceImpl.java", "BodyUseAPI": ["com.claymus.taskqueue.Task.addParam(java.lang.String,author.getUserId().toString())", "author.getUserId().toString()", "com.pratilipi.data.transfer.Author.getUserId()"], "Fixed commit": "b8495db6231f2fae15c5d72b289895e861db2414", "Url": "https://api.github.com/repos/Pratilipi/pratilipi", "Date": "2015-06-08T09:30:29Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ivorius.reccomplex.commands.RCCommands.getStructureEntityInfo(net.minecraft.entity.player.EntityPlayerMP)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((structureEntityInfo.selectedPoint2) == null) structureEntityInfo.selectedPoint2 = new ivorius.ivtoolkit.blocks.BlockCoord(net.minecraft.util.MathHelper.floor_double(entityPlayerMP.posX), net.minecraft.util.MathHelper.floor_double(entityPlayerMP.posY), net.minecraft.util.MathHelper.floor_double(entityPlayerMP.posZ));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4641/buggy-version/src.main.java.ivorius.reccomplex.commands.CommandSelect.java", "BodyUseAPI": [], "Fixed commit": "faebe09b7e58ac5329357dcdf0b4bff5328ec2f5", "Url": "https://api.github.com/repos/Ivorforce/RecurrentComplex", "Date": "2015-03-04T15:49:05Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ivorius.reccomplex.commands.RCCommands.getStructureEntityInfo(net.minecraft.entity.player.EntityPlayerMP)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((structureEntityInfo.selectedPoint1) == null) structureEntityInfo.selectedPoint1 = new ivorius.ivtoolkit.blocks.BlockCoord(net.minecraft.util.MathHelper.floor_double(entityPlayerMP.posX), net.minecraft.util.MathHelper.floor_double(entityPlayerMP.posY), net.minecraft.util.MathHelper.floor_double(entityPlayerMP.posZ));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4641/buggy-version/src.main.java.ivorius.reccomplex.commands.CommandSelect.java", "BodyUseAPI": [], "Fixed commit": "faebe09b7e58ac5329357dcdf0b4bff5328ec2f5", "Url": "https://api.github.com/repos/Ivorforce/RecurrentComplex", "Date": "2015-03-04T15:49:05Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((validDeviceIds) == null) || (((validDeviceIds) != null) && (validDeviceIds.contains(deviceID)))) { com.appium.manager.AndroidDeviceConfiguration.deviceSerail.add(deviceID); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4639/buggy-version/src.main.java.com.appium.manager.AndroidDeviceConfiguration.java", "BodyUseAPI": ["java.util.ArrayList<java.lang.String>.add(java.lang.String)"], "Fixed commit": "41c773dfc4722c6109d4d2d518fb48b74c32398b", "Url": "https://api.github.com/repos/brtu/AppiumTestDistribution", "Date": "2016-12-28T20:09:21Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((com.afternooncoffeesoftware.sass.InventoryScreen.obj[0]) != null) { if ((Gdx.input.isButtonPressed(0)) && (com.badlogic.gdx.math.Intersector.overlaps(com.afternooncoffeesoftware.sass.InventoryScreen.obj[0].box, mouseBox))) { com.afternooncoffeesoftware.sass.InventoryScreen.obj[0].isDragged = true; }else if ((Gdx.input.isButtonPressed(0)) && (!(com.badlogic.gdx.math.Intersector.overlaps(com.afternooncoffeesoftware.sass.InventoryScreen.obj[0].box, mouseBox)))) { com.afternooncoffeesoftware.sass.InventoryScreen.obj[0].isDragged = true; } if (com.afternooncoffeesoftware.sass.InventoryScreen.obj[0].isDragged) { com.afternooncoffeesoftware.sass.InventoryScreen.obj[0].box.setPosition(x, (480 - (y))); com.afternooncoffeesoftware.sass.InventoryScreen.obj[0].sprite.setPosition(com.afternooncoffeesoftware.sass.InventoryScreen.obj[0].box.x, com.afternooncoffeesoftware.sass.InventoryScreen.obj[0].box.y); com.afternooncoffeesoftware.sass.InventoryScreen.obj[0].sprite.draw(com.afternooncoffeesoftware.sass.InventoryScreen.batch); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1001/buggy-version/core.src.com.afternooncoffeesoftware.sass.InventoryScreen.java", "BodyUseAPI": ["com.afternooncoffeesoftware.sass.InventoryScreen.obj[0].sprite.setPosition(com.afternooncoffeesoftware.sass.InventoryScreen.obj[0].box.x,com.afternooncoffeesoftware.sass.InventoryScreen.obj[0].box.y)", "com.afternooncoffeesoftware.sass.InventoryScreen.obj[0].sprite.draw(com.badlogic.gdx.graphics.g2d.SpriteBatch)", "com.afternooncoffeesoftware.sass.InventoryScreen.obj[0].box.setPosition(int,int)", "com.badlogic.gdx.math.Intersector.overlaps(com.afternooncoffeesoftware.sass.InventoryScreen.obj[0].box,com.badlogic.gdx.math.Rectangle)", "com.badlogic.gdx.math.Intersector.overlaps(com.afternooncoffeesoftware.sass.InventoryScreen.obj[0].box,com.badlogic.gdx.math.Rectangle)"], "Fixed commit": "788b5c063f16ccae6f1853835085772dee96f885", "Url": "https://api.github.com/repos/ColeHub/Secret-Agent-SS", "Date": "2014-10-22T17:00:18Z"},
{"Line": "=>866", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.orientechnologies.orient.core.id.ORID.getRecord()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (doc != null) underlying.delete(doc);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8168/buggy-version/object.src.main.java.com.orientechnologies.orient.object.db.OObjectDatabaseTx.java", "BodyUseAPI": ["com.orientechnologies.orient.object.db.OObjectDatabaseTx.delete(com.orientechnologies.orient.core.record.impl.ODocument)"], "Fixed commit": "108373f95098061206f52388bfcc547071e6eec0", "Url": "https://api.github.com/repos/sonatype/orientdb", "Date": "2016-02-15T06:37:22Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(wasOnPlatform)) { if ((state.action) instanceof com.github.kkysen.supersmashbros.actions.AirAttack) { com.badlogic.gdx.utils.Timer.instance().clear(); } stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7186/buggy-version/core.src.com.github.kkysen.supersmashbros.core.Player.java", "BodyUseAPI": [], "Fixed commit": "79990323089014afbbf61eb55a6fa0e9c4ca44e8", "Url": "https://api.github.com/repos/kkysen/Mega-Mash-Bros", "Date": "2017-06-09T22:29:55Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((savedData) == null) { savedData = android.preference.PreferenceManager.getDefaultSharedPreferences(this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5992/buggy-version/app.src.main.java.de.tobiasbielefeld.brickgames.ui.Settings.java", "BodyUseAPI": [], "Fixed commit": "e707b8c3291467afbe78f7521000ae6a25819909", "Url": "https://api.github.com/repos/TobiasBielefeld/Simple-Brick-Games", "Date": "2017-06-15T18:57:10Z"},
{"Line": "=>59", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["de.gwdg.metadataqa.api.model.JsonPathCache.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((((values.isEmpty()) || ((values.size()) == 0)) || ((values.get(0)) == null)) || ((values.get(0).getValue()) == null)) { value = null; }else { value = values.get(0).getValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7383/buggy-version/src.main.java.de.gwdg.metadataqa.api.calculator.FieldExtractor.java", "BodyUseAPI": ["values.get(0).getValue()", "java.util.List<de.gwdg.metadataqa.api.model.XmlFieldInstance>.get(int)"], "Fixed commit": "4627752c1cfe301b8dd68ae18684c83f46fdb418", "Url": "https://api.github.com/repos/pkiraly/metadata-qa-api", "Date": "2016-10-28T06:32:44Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lock) != null) { lock.lock(); locked = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5006/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.Cmwc4096Random.java", "BodyUseAPI": [], "Fixed commit": "b396ca47c7a6d8a2a3908ec2b461ec7a49b697c0", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-11-28T23:31:38Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (locked) { lock.unlock(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5006/buggy-version/betterrandom.src.main.java.io.github.pr0methean.betterrandom.prng.Cmwc4096Random.java", "BodyUseAPI": [], "Fixed commit": "b396ca47c7a6d8a2a3908ec2b461ec7a49b697c0", "Url": "https://api.github.com/repos/Pr0methean/BetterRandom", "Date": "2017-11-28T23:31:38Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((boolean) (excute(framework.common.Object_Description, framework.common.Operation_Exists, \"\u64ad\u653e\u89c6\u9891\")))) { com.android.uiautomator.core.UiDevice.getInstance().click(x, y); Wait(1000); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1874/buggy-version/uiautomator51.src.framework.common.VideoPlayerCommon.java", "BodyUseAPI": [], "Fixed commit": "ee825f082e56f864c009a11512bf5e3a0dd1d23f", "Url": "https://api.github.com/repos/awaiwyy/UIcase", "Date": "2016-05-06T05:09:02Z"},
{"Line": "=>273", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["myRepository.getConfig().getString(ConfigConstants.CONFIG_BRANCH_SECTION,java.lang.String,ConfigConstants.CONFIG_KEY_REMOTE)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((!(remote.isEmpty())) && (!(remote.equals(\".\")))) { fromBranch.setText(((remote + \"/\") + merge)); }else { fromBranch.setText(fromBranch.getItem(0)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7683/buggy-version/org.ancit.github.utils.pr.src.org.ancit.github.utils.pr.wizards.PullRequestWizardPage.java", "BodyUseAPI": ["org.eclipse.swt.widgets.Combo.setText(java.lang.String)"], "Fixed commit": "aeb64780010e2acac6be7efab20723cc256c9f38", "Url": "https://api.github.com/repos/subramanyamcs/eGit-extensions", "Date": "2014-04-03T20:14:28Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (lastMchEnrollmentWrapped != null) { hivStatusObs = lastMchEnrollmentWrapped.firstObs(org.openmrs.module.kenyaemr.Dictionary.getConcept(Dictionary.HIV_STATUS)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4147/buggy-version/omod.src.main.java.org.openmrs.module.kenyaemr.fragment.controller.program.mchms.MchmsCarePanelFragmentController.java", "BodyUseAPI": ["org.openmrs.module.kenyaemr.wrapper.EncounterWrapper.firstObs(org.openmrs.module.kenyaemr.Dictionary.getConcept(Dictionary.HIV_STATUS))"], "Fixed commit": "f1058297012e101a2df04db44bd64ba5608a7caf", "Url": "https://api.github.com/repos/moshonk/openmrs-module-kenyaemr", "Date": "2016-10-28T02:45:37Z"},
{"Line": "=>223", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((att.getDefaultValue()) != null) && (!(att.getDefaultValue().equals(\"\")))) { defValue = att.getDefaultValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/453/buggy-version/kevoree-core.org.kevoree.bootstrap.src.main.java.org.kevoree.bootstrap.kernel.KevoreeCLKernel.java", "BodyUseAPI": ["org.kevoree.bootstrap.kernel.DictionaryAttribute.getDefaultValue()"], "Fixed commit": "2ed9f84c42865f8d4d810bb2df7126dba0af3e56", "Url": "https://api.github.com/repos/dukeboard/kevoree", "Date": "2014-02-20T16:50:19Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((defValue != null) && (value == null)) { internalInjectField(att.getName(), value, target); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/453/buggy-version/kevoree-core.org.kevoree.bootstrap.src.main.java.org.kevoree.bootstrap.kernel.KevoreeCLKernel.java", "BodyUseAPI": ["org.kevoree.bootstrap.kernel.KevoreeCLKernel.internalInjectField(att.getName(),java.lang.String,java.lang.Object)"], "Fixed commit": "2ed9f84c42865f8d4d810bb2df7126dba0af3e56", "Url": "https://api.github.com/repos/dukeboard/kevoree", "Date": "2014-02-20T16:50:19Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dealer.getHand().totalHandValue()) > 21) { java.lang.System.out.println(((dealer.getName()) + \" busts!\")); playAgain(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1114/buggy-version/src.week3.Game.java", "BodyUseAPI": ["java.io.PrintStream.println(((dealer.getName()) + \" busts!\"))", "week3.Player.getName()"], "Fixed commit": "e1e2eba8a4b1e92999480ca6cf9377d31dbd668b", "Url": "https://api.github.com/repos/spassantino/JackBlackProject", "Date": "2016-10-17T15:25:11Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((virtualPort.getVlanId()) != null) { vlanRange = virtualPort.getVlanId().toString(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8272/buggy-version/src.main.java.nl.surfnet.bod.web.NsiTopologyController.java", "BodyUseAPI": ["nl.surfnet.bod.domain.VirtualPort.getVlanId()", "virtualPort.getVlanId().toString()"], "Fixed commit": "bd38debc3a6344b531949405d9161798aa09341d", "Url": "https://api.github.com/repos/BandwidthOnDemand/bandwidth-on-demand", "Date": "2013-08-26T06:48:45Z"},
{"Line": "=>97", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<com.v2soft.AndLib.dataproviders.ITaskListener, java.util.List<com.v2soft.AndLib.dataproviders.ITask>>.get(com.v2soft.AndLib.dataproviders.ITaskListener)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tasks.size()) < 1) { mTasksByListener.remove(listener); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1550/buggy-version/src.com.v2soft.AndLib.dataproviders.TasksMultiplexor.java", "BodyUseAPI": [], "Fixed commit": "0b554f510485830e21a14e94069f12db290a5f2c", "Url": "https://api.github.com/repos/vshcryabets/V2AndLib.UI", "Date": "2013-04-10T11:04:07Z"},
{"Line": "=>54", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (listener == null) { throw new java.lang.NullPointerException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1550/buggy-version/src.com.v2soft.AndLib.dataproviders.TasksMultiplexor.java", "BodyUseAPI": [], "Fixed commit": "0b554f510485830e21a14e94069f12db290a5f2c", "Url": "https://api.github.com/repos/vshcryabets/V2AndLib.UI", "Date": "2013-04-10T11:04:07Z"},
{"Line": "=>115", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(url.endsWith(\".png\"))) { url = url + \".png\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5831/buggy-version/src.com.tisawesomeness.minecord.util.MessageUtils.java", "BodyUseAPI": [], "Fixed commit": "5c5e1d1350d1f13f0eb67848eb3eb8570c23aee6", "Url": "https://api.github.com/repos/Tisawesomeness/Minecord", "Date": "2017-05-08T15:23:46Z"},
{"Line": "=>655", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((title != null) && (!(title.isEmpty()))) { criteria.add(org.hibernate.criterion.Restrictions.ilike(configurationManager.getConfiguration(club.seedymusic.jpa.dao.CdDAO.CONFIG_TITLE, club.seedymusic.jpa.dao.CdDAO.DEFAULT_FIELD_TITLE), title, MatchMode.ANYWHERE)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3661/buggy-version/src.club.seedymusic.jpa.dao.CdDAO.java", "BodyUseAPI": ["org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.ilike(configurationManager.getConfiguration(club.seedymusic.jpa.dao.CdDAO.CONFIG_TITLE, club.seedymusic.jpa.dao.CdDAO.DEFAULT_FIELD_TITLE), title, MatchMode.ANYWHERE))", "org.hibernate.criterion.Restrictions.ilike(configurationManager.getConfiguration(club.seedymusic.jpa.dao.CdDAO.CONFIG_TITLE, club.seedymusic.jpa.dao.CdDAO.DEFAULT_FIELD_TITLE),java.lang.String,MatchMode.ANYWHERE)"], "Fixed commit": "41ec9c4925bb22e145af077975b0ad5bfb2f7a7b", "Url": "https://api.github.com/repos/Sultaneous/SeedyMusicClub", "Date": "2017-10-28T21:06:20Z"},
{"Line": "=>662", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((genre != null) && (!(genre.isEmpty()))) { criteria.add(org.hibernate.criterion.Restrictions.eq(configurationManager.getConfiguration(club.seedymusic.jpa.dao.CdDAO.CONFIG_GENRE, club.seedymusic.jpa.dao.CdDAO.DEFAULT_FIELD_GENRE), genre)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3661/buggy-version/src.club.seedymusic.jpa.dao.CdDAO.java", "BodyUseAPI": ["org.hibernate.criterion.Restrictions.eq(configurationManager.getConfiguration(club.seedymusic.jpa.dao.CdDAO.CONFIG_GENRE, club.seedymusic.jpa.dao.CdDAO.DEFAULT_FIELD_GENRE),java.lang.String)", "org.hibernate.Criteria.add(org.hibernate.criterion.Restrictions.eq(configurationManager.getConfiguration(club.seedymusic.jpa.dao.CdDAO.CONFIG_GENRE, club.seedymusic.jpa.dao.CdDAO.DEFAULT_FIELD_GENRE), genre))"], "Fixed commit": "41ec9c4925bb22e145af077975b0ad5bfb2f7a7b", "Url": "https://api.github.com/repos/Sultaneous/SeedyMusicClub", "Date": "2017-10-28T21:06:20Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == (paramClass)) && (jsystem.framework.scenario.ParametersManager.isReferenceValue(value))) { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3322/buggy-version/jsystem-core-projects.jsystemCore.src.main.java.jsystem.framework.scenario.Parameter.java", "BodyUseAPI": [], "Fixed commit": "2bcfc89b6006efddb99b512a1efcc288daed863b", "Url": "https://api.github.com/repos/Top-Q/jsystem", "Date": "2016-04-11T10:38:02Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((progress) > 1) response = response + \"s.\"; else response = response + \".\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8169/buggy-version/src.main.java.com.norcode.bukkit.dailyquests.quest.HuntingQuest.java", "BodyUseAPI": [], "Fixed commit": "0d70a4d4ec604d359095561dae8158993bdfd098", "Url": "https://api.github.com/repos/andrepl/DailyQuest", "Date": "2014-01-02T00:02:54Z"},
{"Line": "=>206", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reader.readLine()) == null) { return view; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3833/buggy-version/src.main.java.com.googlecode.paradox.data.ViewData.java", "BodyUseAPI": [], "Fixed commit": "06c57fe21facf97204ab389f11c10eedb30e1c84", "Url": "https://api.github.com/repos/leonhad/paradoxdriver", "Date": "2016-06-21T23:45:11Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reader.readLine()) == null) { return view; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3833/buggy-version/src.main.java.com.googlecode.paradox.data.ViewData.java", "BodyUseAPI": [], "Fixed commit": "06c57fe21facf97204ab389f11c10eedb30e1c84", "Url": "https://api.github.com/repos/leonhad/paradoxdriver", "Date": "2016-06-21T23:45:11Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reader.readLine()) == null) { return view; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3833/buggy-version/src.main.java.com.googlecode.paradox.data.ViewData.java", "BodyUseAPI": [], "Fixed commit": "06c57fe21facf97204ab389f11c10eedb30e1c84", "Url": "https://api.github.com/repos/leonhad/paradoxdriver", "Date": "2016-06-21T23:45:11Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reader.readLine()) == null) { return view; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3833/buggy-version/src.main.java.com.googlecode.paradox.data.ViewData.java", "BodyUseAPI": [], "Fixed commit": "06c57fe21facf97204ab389f11c10eedb30e1c84", "Url": "https://api.github.com/repos/leonhad/paradoxdriver", "Date": "2016-06-21T23:45:11Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((reader.readLine()) == null) { return view; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3833/buggy-version/src.main.java.com.googlecode.paradox.data.ViewData.java", "BodyUseAPI": [], "Fixed commit": "06c57fe21facf97204ab389f11c10eedb30e1c84", "Url": "https://api.github.com/repos/leonhad/paradoxdriver", "Date": "2016-06-21T23:45:11Z"},
{"Line": "=>151", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((hudson.Util.fixEmpty(region)) == null) { region = DEFAULT_EC2_HOST; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2911/buggy-version/src.main.java.hudson.plugins.ec2.AmazonEC2Cloud.java", "BodyUseAPI": [], "Fixed commit": "ed8486de882ea852f9de0ac5041c698d87a51af9", "Url": "https://api.github.com/repos/syncron/ec2-plugin", "Date": "2014-09-12T16:29:19Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.lock = channel.tryLock()) == null) throw new java.lang.Exception(\"pocket.txt is locked by another process\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8485/buggy-version/lab1.src.Pocket.java", "BodyUseAPI": [], "Fixed commit": "ee3dc9526700d3ca5975eda3f9682518e4a9b8f2", "Url": "https://api.github.com/repos/civspan/LangSec", "Date": "2017-04-07T18:58:22Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.monroe.team.android.box.ui.PushToGridView.getChildAt(int)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (c == null) scrollYPx = 0; else { scrollYPx = (-(c.getTop())) + ((getFirstVisiblePosition()) * (c.getHeight())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8586/buggy-version/src.main.java.org.monroe.team.android.box.ui.PushToGridView.java", "BodyUseAPI": ["android.view.View.getTop()", "android.view.View.getHeight()"], "Fixed commit": "1676153e574b0db3efe84d11999925beb6528ab8", "Url": "https://api.github.com/repos/mrjbee/androidbox", "Date": "2014-12-25T01:26:34Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.histories) != null) { procedureRequest.append(edu.uniandes.ecos.codeaholics.persistence.ProcedureRequest.HISTORIES, historiesDocuments()); }else { procedureRequest.append(edu.uniandes.ecos.codeaholics.persistence.ProcedureRequest.HISTORIES, null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1353/buggy-version/CA-Factory.src.main.java.edu.uniandes.ecos.codeaholics.persistence.ProcedureRequest.java", "BodyUseAPI": [], "Fixed commit": "98817907972de35aa183422b6a40d3e26c51aaed", "Url": "https://api.github.com/repos/ecos-codeaholics/factory-of-procedures-back", "Date": "2016-10-29T15:30:12Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (objectName.contains(\"Parking_page\")) { android.util.Log.d(\"elazarkin16\", java.lang.String.format(\"%s:[(%3.2f, %3.2f)->(%3.2f, %3.2f)] clicked(%3.2f, %3.2f)\", objectName, ((x0()) - ((width()) / 2)), ((y0()) - ((height()) / 2)), ((x0()) + ((width()) / 2)), ((y0()) + ((height()) / 2)), x, y)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8931/buggy-version/app.src.main.java.com.lesswalk.bases.RectObject3D.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String,float,float,float,float,float,float)", "android.util.Log.d(java.lang.String,java.lang.String)"], "Fixed commit": "dffb726ec62ec2a49ce7a63512edd9b136073422", "Url": "https://api.github.com/repos/dallade/lesswalk", "Date": "2017-06-13T15:13:11Z"},
{"Line": "=>221", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (csvString != null) { return java.util.Arrays.asList(csvString.split(\",\")); }else { return java.util.Collections.emptyList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9067/buggy-version/src.main.java.com.ge.predix.uaa.token.lib.AbstractZoneAwareTokenService.java", "BodyUseAPI": ["java.util.Arrays.asList(java.lang.String[])", "java.lang.String.split(java.lang.String)"], "Fixed commit": "63b4d1d354f16f31607bd1b9a63c4441d9a90070", "Url": "https://api.github.com/repos/predix/spring-jwt-validation-filter", "Date": "2016-10-28T17:45:16Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["net.thucydides.core.requirements.FileSystemRequirementsTagProvider.getRootDirectoryPath()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (rootDirectoryPath.isPresent()) { java.io.File rootDirectory = new java.io.File(rootDirectoryPath.get()); if (rootDirectory.exists()) { java.util.Collection<java.io.File> files = org.apache.commons.io.FileUtils.listFiles(rootDirectory, new net.thucydides.cucumber.ThucydidesReporter.FeatureFileFilter(uri), TrueFileFilter.INSTANCE); if ((files.size()) > 0) { java.io.File firstMatch = files.iterator().next(); currentUri = firstMatch.getAbsolutePath().substring(((rootDirectoryPath.get().length()) + 1)); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9022/buggy-version/src.main.java.net.thucydides.cucumber.ThucydidesReporter.java", "BodyUseAPI": ["java.util.Optional<java.lang.String>.get()", "java.lang.String.length()", "java.util.Optional<java.lang.String>.get()", "java.lang.String.substring(int)"], "Fixed commit": "1b7770f66ac0e5c0d96a5637a988fb75c438de6e", "Url": "https://api.github.com/repos/thucydides-webtests/thucydides-cucumber", "Date": "2014-09-22T08:41:28Z"},
{"Line": "=>18", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["tachyon.client.WritableBlockChannel.write(java.nio.ByteBuffer)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (r > 0) { mWritten.addAndGet(r); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/330/buggy-version/core.src.main.java.tachyon.client.CountingWritableBlockChannel.java", "BodyUseAPI": ["java.util.concurrent.atomic.AtomicLong.addAndGet(int)"], "Fixed commit": "80137d7a5fb2bebbc92544d563c3636b6c766fb4", "Url": "https://api.github.com/repos/dcapwell/tachyon", "Date": "2014-09-11T03:46:38Z"},
{"Line": "=>552", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((selected) instanceof com.mojang.mojam.entity.ICarrySwap) { carrying = ((com.mojang.mojam.entity.ICarrySwap) (selected)).tryToSwap(carrying); if ((carrying) != null) { carrying.onPickup(this); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3506/buggy-version/src.com.mojang.mojam.entity.Player.java", "BodyUseAPI": [], "Fixed commit": "2915ee461249b168250da48e51c9dffd14a9ff0f", "Url": "https://api.github.com/repos/Maescool/Catacomb-Snatch", "Date": "2012-05-19T08:46:32Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (context instanceof com.raxdenstudios.app.activity.ModularActivity) { if ((((com.raxdenstudios.app.activity.ModularActivity) (context)).getSupportFragmentManager().getBackStackEntryCount()) > 0) { return true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1145/buggy-version/library.src.main.java.com.raxdenstudios.app.module.countback.CountBackModuleImpl.java", "BodyUseAPI": [], "Fixed commit": "7a3aa3d9d018694ba4885fcd0ab56da8c501081c", "Url": "https://api.github.com/repos/raxden/AndroidApp", "Date": "2015-06-08T16:17:39Z"},
{"Line": "=>1643", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (p > 100) { p = 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1784/buggy-version/Persistence.Persistence.src.edu.ycp.cs481.linkup.persistence.MysqlDatabase.java", "BodyUseAPI": [], "Fixed commit": "c0a28b2bbcdf8dbcc5cfc00b5c6e94f8df8e64e8", "Url": "https://api.github.com/repos/ajcummins/LinkUp", "Date": "2013-12-09T15:01:27Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["fjorde.ui.TileSet.tryGet(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (fjorde.ui.Regles.canPutItem(item, t)) t.setItem(item);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6584/buggy-version/src.fjorde.ui.Plateau.java", "BodyUseAPI": ["fjorde.ui.Tile.setItem(fjorde.ui.PlayerItem)"], "Fixed commit": "2b09795c68bcf65fff25f8552f8b8d0e1ee9b4b6", "Url": "https://api.github.com/repos/cabaf-lehavre/fjorde", "Date": "2015-01-15T11:12:09Z"},
{"Line": "=>276", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((resourceTank.getFluidAmount()) < (fuelCurrentFerment)) setErrorState(EnumErrorCode.NORESOURCE); else setErrorState(EnumErrorCode.OK);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5630/buggy-version/src.main.java.forestry.factory.gadgets.MachineFermenter.java", "BodyUseAPI": [], "Fixed commit": "d385a25efa9e4a6a65cb165d39fb3cd224b3cf27", "Url": "https://api.github.com/repos/ForestryMC/ForestryMC", "Date": "2014-11-07T03:18:33Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.sql.ResultSetMetaData.getColumnType(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((java.sql.Types.BLOB) == colType) || ((java.sql.Types.STRUCT) == colType)) { tmpRow.put(intShowColIndex, rs.getObject(intColIndex)); }else if ((java.sql.Types.FLOAT) == colType) { tmpRow.put(intShowColIndex, rs.getFloat(intColIndex)); }else if ((java.sql.Types.DOUBLE) == colType) { tmpRow.put(intShowColIndex, rs.getDouble(intColIndex)); }else { tmpRow.put(intShowColIndex, com.hangum.tadpole.engine.sql.util.SQLConvertCharUtil.toClient(userDB, rs.getString(intColIndex))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1030/buggy-version/com.hangum.tadpole.commons.sql.src.com.hangum.tadpole.engine.sql.util.resultset.ResultSetUtils.java", "BodyUseAPI": [], "Fixed commit": "c17d27390c036d7d49e0bb3deea204ce59d57cd4", "Url": "https://api.github.com/repos/jeongjaehong/TadpoleForDBTools", "Date": "2017-11-24T03:57:29Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((currDateTime.equals(getEndDateTime())) && ((getEndDateTime().getHourOfDay()) == 0)) { leaveCalendarDay.setGray(true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9263/buggy-version/src.main.java.org.kuali.hr.time.calendar.LeaveCalendar.java", "BodyUseAPI": [], "Fixed commit": "65be0e5241df49608fd9dc42652a13c38ac3a90a", "Url": "https://api.github.com/repos/kuali/kpme", "Date": "2012-07-31T21:27:29Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(new java.io.File((((getFilesDir()) + \"/\") + (com.thm.sensors.activity.SettingsActivity.SETTINGS_FILE_NAME))).delete())) { android.util.Log.d(com.thm.sensors.activity.SettingsActivity.class.getName(), \"Found no settings file\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/741/buggy-version/app.src.main.java.com.thm.sensors.activity.SettingsActivity.java", "BodyUseAPI": [], "Fixed commit": "43be5b7143c2fde573331c99308711edb5e684d6", "Url": "https://api.github.com/repos/Mordag/soundbox", "Date": "2016-05-13T15:12:51Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.jhoogland.jautomata.Automata.isFinalState(this, state)) finalStates.add(state);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4772/buggy-version/jautomata.src.main.java.net.jhoogland.jautomata.HashAutomaton.java", "BodyUseAPI": ["net.jhoogland.jautomata.HashAutomaton.add(java.lang.Object)"], "Fixed commit": "1d05d19d11cf29b1290d4fb0cc5bb2a2c7705c7b", "Url": "https://api.github.com/repos/jasperhoogland/jautomata", "Date": "2014-12-11T13:52:20Z"},
{"Line": "=>94", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.jhoogland.jautomata.Automata.isInitialState(this, state)) initialStates.add(state);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4772/buggy-version/jautomata.src.main.java.net.jhoogland.jautomata.HashAutomaton.java", "BodyUseAPI": ["net.jhoogland.jautomata.HashAutomaton.add(java.lang.Object)"], "Fixed commit": "1d05d19d11cf29b1290d4fb0cc5bb2a2c7705c7b", "Url": "https://api.github.com/repos/jasperhoogland/jautomata", "Date": "2014-12-11T13:52:20Z"},
{"Line": "=>297", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (speed.equals(\"NaN\")) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7156/buggy-version/src.ru.ioffe.school.buses.gui.GUIControl.java", "BodyUseAPI": [], "Fixed commit": "fab99c58d2e417d967106071c76eaf792a9f1164", "Url": "https://api.github.com/repos/lyceum-pths/buses", "Date": "2015-02-26T17:14:20Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(updateTimeTimer.isRunning())) updateTimeTimer.start();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7156/buggy-version/src.ru.ioffe.school.buses.gui.GUIControl.java", "BodyUseAPI": ["javax.swing.Timer.start()"], "Fixed commit": "fab99c58d2e417d967106071c76eaf792a9f1164", "Url": "https://api.github.com/repos/lyceum-pths/buses", "Date": "2015-02-26T17:14:20Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trigger.equals(\"Treasure\")) { return 9; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8454/buggy-version/Android.src.com.example.weissdb.Util.java", "BodyUseAPI": [], "Fixed commit": "105c2f87b0cdfd30a68ffd195afa06ab3304d974", "Url": "https://api.github.com/repos/lmnz/WeissWebApp", "Date": "2014-01-05T04:48:35Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (trigger.equals(\"Stock\")) { return 8; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8454/buggy-version/Android.src.com.example.weissdb.Util.java", "BodyUseAPI": [], "Fixed commit": "105c2f87b0cdfd30a68ffd195afa06ab3304d974", "Url": "https://api.github.com/repos/lmnz/WeissWebApp", "Date": "2014-01-05T04:48:35Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((root) != null) { return root.getDescriptionForProduct(productBarcode); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7118/buggy-version/src.plugin.ProductIdentificationPluginManager.java", "BodyUseAPI": [], "Fixed commit": "53f18eb1cde5ec5ca0442d3db291486cf0318e31", "Url": "https://api.github.com/repos/cletusw/hit", "Date": "2013-04-10T05:05:58Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((values.size()) > id) { values.remove(id); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3331/buggy-version/parceler-api.src.main.java.org.parceler.IdentityCollection.java", "BodyUseAPI": ["java.util.List<java.lang.Object>.remove(int)"], "Fixed commit": "72cc29634852893f8b19362a56260c00a0d851e1", "Url": "https://api.github.com/repos/johncarl81/parceler", "Date": "2016-07-11T21:54:21Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (result.getText().toString().equals(\"-\")) { result.setText(\"\"); }else result.setText(\"-\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2406/buggy-version/app.src.main.java.org.altervista.paologianfelici.calculator.MainActivity.java", "BodyUseAPI": ["android.widget.EditText.setText(java.lang.String)", "android.widget.EditText.setText(java.lang.String)"], "Fixed commit": "78b55c1f6a0d0f73af29877dba70887369e4275e", "Url": "https://api.github.com/repos/PaoloGi/Calculator", "Date": "2016-09-06T22:25:20Z"},
{"Line": "=>184", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (company != null) { companyName.setText(company.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3155/buggy-version/app.src.main.java.edu.umd.cs.jobi.CompanyListFragment.java", "BodyUseAPI": ["edu.umd.cs.jobi.model.Company.getName()", "android.widget.TextView.setText(company.getName())"], "Fixed commit": "5f81294c20ee6104722032ac943cc4dc37308094", "Url": "https://api.github.com/repos/LunaOak/Jobi_App", "Date": "2017-05-08T02:32:47Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (extractedOrgId.equals(orgId)) { org.openscoring.service.ModelResponse response = org.openscoring.service.ModelResource.createModelResponse(entry.getKey(), entry.getValue(), false); responses.add(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5848/buggy-version/openscoring-service.src.main.java.org.openscoring.service.ModelResource.java", "BodyUseAPI": [], "Fixed commit": "02e56ee01109aef30ca1f82778b058ffc3b0cf77", "Url": "https://api.github.com/repos/nhan-jsl/openscoring", "Date": "2017-03-14T16:30:09Z"},
{"Line": "=>1819", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((path.length()) == 1) { path = path + \"/\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5045/buggy-version/src.org.ibex.nestedvm.UnixRuntime.java", "BodyUseAPI": [], "Fixed commit": "783ad8e6f523f8affd908504b1b96bac35857183", "Url": "https://api.github.com/repos/jdstroy/nestedvm", "Date": "2014-04-13T22:57:04Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (tmp == ((int) (tmp))) { this.gainView.setText(java.lang.Integer.toString(((int) (tmp)))); }else { this.gainView.setText(java.lang.Float.toString(tmp)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6211/buggy-version/app.src.main.java.com.hrca.bode.customs.displaycustoms.TransferFunctionView.java", "BodyUseAPI": ["this.gainView.setText(java.lang.String)", "this.gainView.setText(java.lang.String)", "java.lang.Float.toString(float)", "java.lang.Integer.toString(float)"], "Fixed commit": "0cb2299efc88733b5b431dd1902474cd504ad3e8", "Url": "https://api.github.com/repos/Firtzberg/BodeDiagram", "Date": "2015-11-03T22:53:27Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getSupportFragmentManager().findFragmentById(R.id.fragment_container)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (fragment != null) { getSupportFragmentManager().beginTransaction().remove(fragment).commit(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9244/buggy-version/app.src.main.java.com.blstream.studybox.activities.ExamActivity.java", "BodyUseAPI": ["getSupportFragmentManager().beginTransaction().remove(fragment).commit()", "getSupportFragmentManager().beginTransaction().remove(android.support.v4.app.Fragment)"], "Fixed commit": "e3a60d739914ec7dcfbc16a642973ad7de4254a1", "Url": "https://api.github.com/repos/blstream/StudyBox_Android", "Date": "2016-05-03T17:47:50Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (jsonObj.has(\"CONSTRAINT\")) jsonConstraint = jsonObj.getJSONObject(\"CONSTRAINT\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8849/buggy-version/src.main.java.util.ScheduleData.java", "BodyUseAPI": ["org.json.JSONObject.getJSONObject(java.lang.String)"], "Fixed commit": "4e7aa1c1da25abb42bce28e7aec72057ec460374", "Url": "https://api.github.com/repos/kairos-scheduling-software/constraint_solver", "Date": "2015-03-10T05:17:36Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (jsonObj == null) return list.toArray(new scheduleSolver.Schedule.EventConstraint[0]);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8849/buggy-version/src.main.java.util.ScheduleData.java", "BodyUseAPI": [], "Fixed commit": "4e7aa1c1da25abb42bce28e7aec72057ec460374", "Url": "https://api.github.com/repos/kairos-scheduling-software/constraint_solver", "Date": "2015-03-10T05:17:36Z"},
{"Line": "=>146", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (blackNegativeResult.isValid()) return new net.named_data.jndn.encrypt.Schedule.Result(true, whitePositiveResult.intersectWith(blackNegativeResult)); else return new net.named_data.jndn.encrypt.Schedule.Result(true, whitePositiveResult);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6624/buggy-version/src.net.named_data.jndn.encrypt.Schedule.java", "BodyUseAPI": ["net.named_data.jndn.encrypt.Interval.intersectWith(net.named_data.jndn.encrypt.Interval)"], "Fixed commit": "d39f52416402ae365e9164392eb197950ecfb729", "Url": "https://api.github.com/repos/named-data/jndn", "Date": "2016-03-10T19:16:12Z"},
{"Line": "=>133", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((whitePositiveResult.isEmpty()) && (!(whiteNegativeResult.isValid()))) { double timeStampDateOnly = net.named_data.jndn.encrypt.RepetitiveInterval.toDateOnlyMilliseconds(timeStamp); return new net.named_data.jndn.encrypt.Schedule.Result(false, new net.named_data.jndn.encrypt.Interval(timeStampDateOnly, (timeStampDateOnly + (net.named_data.jndn.encrypt.Schedule.MILLISECONDS_IN_DAY)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6624/buggy-version/src.net.named_data.jndn.encrypt.Schedule.java", "BodyUseAPI": [], "Fixed commit": "d39f52416402ae365e9164392eb197950ecfb729", "Url": "https://api.github.com/repos/named-data/jndn", "Date": "2016-03-10T19:16:12Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.storage.backup.sftp.APIAddSftpBackupStorageMsg.getUrl()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((dir.startsWith(\"/proc\")) || (dir.startsWith(\"/dev\"))) { throw new org.zstack.header.apimediator.ApiMessageInterceptionException(argerr(\"the url not a path: %s\", dir)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2921/buggy-version/plugin.sftpBackupStorage.src.main.java.org.zstack.storage.backup.sftp.SftpBackupStorageApiInterceptor.java", "BodyUseAPI": ["org.zstack.storage.backup.sftp.SftpBackupStorageApiInterceptor.argerr(java.lang.String,java.lang.String)"], "Fixed commit": "b828a3ff8886ad0756a29b3c7a332c332070ef18", "Url": "https://api.github.com/repos/camilesing/zstack", "Date": "2017-04-08T13:37:32Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.flywaydb.core.internal.dbsupport.SqlStatementBuilder.removeCharsetCasting(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (cleanToken.startsWith(\"/*\")) { delimitingTokens.add(org.flywaydb.core.internal.dbsupport.SqlStatementBuilder.TokenType.MULTI_LINE_COMMENT); }else if (cleanToken.startsWith(\"'\")) { delimitingTokens.add(org.flywaydb.core.internal.dbsupport.SqlStatementBuilder.TokenType.QUOTE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1004/buggy-version/flyway-core.src.main.java.org.flywaydb.core.internal.dbsupport.SqlStatementBuilder.java", "BodyUseAPI": ["java.lang.String.startsWith(java.lang.String)"], "Fixed commit": "b6cbead2f7438086dbf41915ffe7bc91c55eb626", "Url": "https://api.github.com/repos/devburn/flyway", "Date": "2014-05-26T12:31:16Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (intent == null) { org.andstatus.app.util.MyLog.e(this, \"Launching next activity from firstActivity\", e); }else { try { intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK); myContext.context().startActivity(intent); launched = true; } catch (java.lang.Exception e2) { org.andstatus.app.util.MyLog.e(this, \"Launching activity with Intent.FLAG_ACTIVITY_NEW_TASK flag\", e); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/348/buggy-version/app.src.main.java.org.andstatus.app.context.MyFutureContext.java", "BodyUseAPI": ["myContext.context().startActivity(android.content.Intent)", "android.content.Intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)"], "Fixed commit": "aa9c2d01550c209b1af3ca13837c56c69c7e4c8d", "Url": "https://api.github.com/repos/andstatus/andstatus", "Date": "2017-07-26T04:50:34Z"},
{"Line": "=>229", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(privateMessages.containsKey(sid))) { privateMessages.put(sid, new java.util.ArrayList<java.lang.String>()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8203/buggy-version/DcChat.src.net.kaleidos.dcchat.ChatActivity.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentHashMap<java.lang.String, java.util.ArrayList<java.lang.String>>.put(java.lang.String,java.util.ArrayList<java.lang.String>)"], "Fixed commit": "8cd04a9361a9fffb6620eabedf1b8827e2eacbfd", "Url": "https://api.github.com/repos/superalex/dcchat", "Date": "2014-07-25T22:05:10Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (getDecisionRule().evaluate(yeas, nays)) { this.isApproved = true; }else { this.isRejected = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6625/buggy-version/Thoth2.src.com.thoth.states.ProposalState.java", "BodyUseAPI": [], "Fixed commit": "93804ce7d35fd0f9596eb4633c3c5000febe5ded", "Url": "https://api.github.com/repos/frankhoogeveen/A", "Date": "2014-07-30T17:49:32Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((gov.type()) == (com.thoth.governable.GovernableType.MEETING)) { services.getMinutesSender().send(new com.thoth.tasks.MeetingData(((com.thoth.governable.Meeting) (gov)), statusTracker.getStatusReader())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6625/buggy-version/Thoth2.src.com.thoth.tasks.OpenCloseSuspend.java", "BodyUseAPI": [], "Fixed commit": "93804ce7d35fd0f9596eb4633c3c5000febe5ded", "Url": "https://api.github.com/repos/frankhoogeveen/A", "Date": "2014-07-30T17:49:32Z"},
{"Line": "=>140", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fundaciotapies.ac.logic.support.LegalDefinition.getBlock(r.getResult().getBlock())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (b2 == null) throw new java.lang.Exception((\"Cannot fin block \" + (r.getResult().getBlock())));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1339/buggy-version/src.org.fundaciotapies.ac.logic.LegalProcess.java", "BodyUseAPI": [], "Fixed commit": "ab4b7bb1688ed59cfb2dbac798fbebee7b77fc8f", "Url": "https://api.github.com/repos/FATac/ArtsCombinatoriesRest", "Date": "2011-07-26T14:30:17Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (url.getProtocol().equalsIgnoreCase(\"http\")) { c = ((java.net.HttpURLConnection) (url.openConnection())); ((java.net.HttpURLConnection) (c)).setRequestMethod(\"GET\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4414/buggy-version/modules.tellows.src.de.janrufmonitor.service.tellows.TellowsProxy.java", "BodyUseAPI": ["java.net.URL.openConnection()"], "Fixed commit": "8873bb2aa5faae6cbfdd028211cf35ce52b59ebc", "Url": "https://api.github.com/repos/tbrandt77/janrufmonitor", "Date": "2017-12-05T19:55:11Z"},
{"Line": "=>148", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (length != 0) java.lang.System.arraycopy(src, srcPos, dest, destPos, length);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/237/buggy-version/src.main.java.pjson.CharArrayTool.java", "BodyUseAPI": ["java.lang.System.arraycopy(char[],int,char[],int,int)"], "Fixed commit": "87e1e117b8f5c563acac9460d6e5f2e732c4dd3c", "Url": "https://api.github.com/repos/gerritjvv/pjson", "Date": "2015-11-05T08:56:54Z"},
{"Line": "=>884", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.contextMenu) != null) { onPrepareOptionsMenu(contextMenu); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2261/buggy-version/rapidandroid.org.rapidandroid.src.org.rapidandroid.activity.Dashboard.java", "BodyUseAPI": [], "Fixed commit": "66919d3662efab7fd075d5c8cd0ecfdf0d23f0fa", "Url": "https://api.github.com/repos/Dustin-Filippi/sagesmobile-receiver", "Date": "2013-07-18T15:13:49Z"},
{"Line": "=>312", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((statuses[i]) == null) break;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3104/buggy-version/app.src.main.java.com.andreapivetta.blu.activities.UserProfileActivity.java", "BodyUseAPI": [], "Fixed commit": "834b817080b0965745f676c9e2097daf97b86a47", "Url": "https://api.github.com/repos/ziggy42/Blum-legacy-", "Date": "2015-02-20T15:25:53Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(file.exists())) { throw new org.entirej.framework.core.EJApplicationException(java.lang.String.format(\"File not found :%s\", file.getName())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2926/buggy-version/entirej-rwt-rap.src.org.entirej.applicationframework.rwt.file.EJRWTFileDownload.java", "BodyUseAPI": ["java.lang.String.format(java.lang.String,java.lang.String)", "java.io.File.getName()"], "Fixed commit": "3c571c1ded8509c7591985f79a5c61cba76c0efb", "Url": "https://api.github.com/repos/entirej/rap", "Date": "2015-04-09T15:11:29Z"},
{"Line": "=>629", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (cnt == 0) cnt = super.getNumberOfPTMs(proteinId);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3948/buggy-version/src.main.java.uk.ac.ebi.pride.utilities.data.controller.impl.ControllerImpl.CachedDataAccessController.java", "BodyUseAPI": [], "Fixed commit": "366e9d6dce7371ec12561ff02ff5bc23bb304a75", "Url": "https://api.github.com/repos/PRIDE-Utilities/ms-data-core-api", "Date": "2015-09-10T10:11:13Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this) == object) { return true; }else if ((object != null) && (object instanceof io.delimeat.core.show.Episode)) { io.delimeat.core.show.Episode otherEp = ((io.delimeat.core.show.Episode) (object)); equal = (((((((episodeId) == (otherEp.getEpisodeId())) && ((seasonNum) == (otherEp.getSeasonNum()))) && ((episodeNum) == (otherEp.getEpisodeNum()))) && ((title) == (otherEp.getTitle()))) && (((airDate) != null) && ((otherEp.getAirDate()) != null) ? airDate.equals(otherEp.getAirDate()) : false)) && ((doubleEp) == (otherEp.isDoubleEp()))) && ((show) == (otherEp.getShow())); }else if ((object != null) && (object instanceof io.delimeat.core.guide.GuideEpisode)) { io.delimeat.core.show.Episode otherEp = new io.delimeat.core.show.Episode(((io.delimeat.core.guide.GuideEpisode) (object))); equal = ((seasonNum) == (otherEp.getSeasonNum())) && ((episodeNum) == (otherEp.getEpisodeNum())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6120/buggy-version/src.main.java.io.delimeat.core.show.Episode.java", "BodyUseAPI": [], "Fixed commit": "e5821e20671f64c508c468b5c9b81f0a84cb0a6d", "Url": "https://api.github.com/repos/delimeat/delimeat", "Date": "2016-02-13T07:14:24Z"},
{"Line": "=>272", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((i == (-1)) || (j == (-1))) { i = adjacentGrid[0]; j = adjacentGrid[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6370/buggy-version/src.mansionBandit.gameWorld.matter.Bandit.java", "BodyUseAPI": [], "Fixed commit": "e56be04f29d7e2036f8ebd747b1ee4e4289cca54", "Url": "https://api.github.com/repos/LiamDeGrey/Mansion-Bandit", "Date": "2014-10-15T04:41:47Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (flag) t++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7123/buggy-version/src.main.java.RW.java", "BodyUseAPI": [], "Fixed commit": "2da7cc742bd35866bb79e230beaa189b062adefe", "Url": "https://api.github.com/repos/AlNat/Crypto", "Date": "2016-09-16T10:14:12Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (enableAlpha) { org.lwjgl.opengl.GL11.glEnable(GL11.GL_BLEND); org.lwjgl.opengl.GL11.glBlendFunc(GL11.GL_SRC_ALPHA, GL11.GL_ONE_MINUS_SRC_ALPHA); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7394/buggy-version/src.main.java.evilcraft.core.helper.RenderHelpers.java", "BodyUseAPI": [], "Fixed commit": "9d5cb342a90434fa3767c20e362c6b411cd9161c", "Url": "https://api.github.com/repos/CyclopsMC/EvilCraft", "Date": "2016-02-21T11:06:39Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (removeIndex == 0) { removeIndex = (charArray.length) - 2; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/225/buggy-version/src.main.java.org.jackey.leetcode.medium.SmallestNumAfterReplace.java", "BodyUseAPI": [], "Fixed commit": "da4bd3ef67565c4f4de7d62ca29438128eb50a65", "Url": "https://api.github.com/repos/jackey90/topcoder", "Date": "2016-10-10T11:31:38Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.evilengineers.templates4j.Interpreter.trace) || (debug)) trace(scope, ip);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8172/buggy-version/templates4j-core.src.main.java.net.evilengineers.templates4j.Interpreter.java", "BodyUseAPI": [], "Fixed commit": "5a24eb864fcf7f9135fe1c9b756bd047552b0b4a", "Url": "https://api.github.com/repos/danishdynamite/templates4j", "Date": "2014-04-26T00:42:28Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pictures) == null) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7776/buggy-version/src.com.tenderloinhousing.apps.adapter.CasePictureAdatper.java", "BodyUseAPI": [], "Fixed commit": "00f1413e82a1872d72f94515db15b6820a6cb229", "Url": "https://api.github.com/repos/Codepath-THC/tenderloin_housing", "Date": "2014-07-14T00:46:51Z"},
{"Line": "=>516", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (f == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7023/buggy-version/pinus-orm.src.main.java.org.pinus4j.datalayer.SQLBuilder.java", "BodyUseAPI": [], "Fixed commit": "19d1014a68b4681544fbabb0957ad271dfb336bb", "Url": "https://api.github.com/repos/duanbn/pinus4j", "Date": "2015-08-21T06:44:16Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (f == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7023/buggy-version/pinus-orm.src.main.java.org.pinus4j.datalayer.SQLBuilder.java", "BodyUseAPI": [], "Fixed commit": "19d1014a68b4681544fbabb0957ad271dfb336bb", "Url": "https://api.github.com/repos/duanbn/pinus4j", "Date": "2015-08-21T06:44:16Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((this.recipes[i]) != null) { net.minecraft.item.ItemStack output = this.recipes[i].getRecipeOutput(); if (output != null) { if (!(this.arePageStacksWildcard)) { stacks[i] = output; }else { net.minecraft.item.ItemStack wildcardOutput = output.copy(); wildcardOutput.setItemDamage(Util.WILDCARD); stacks[i] = wildcardOutput; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8584/buggy-version/src.main.java.ellpeck.actuallyadditions.booklet.page.PageCrafting.java", "BodyUseAPI": ["this.recipes[i].getRecipeOutput()"], "Fixed commit": "a7fe955e6f241f76480e5d67fe2313831f1a3daa", "Url": "https://api.github.com/repos/Ellpeck/ActuallyAdditions", "Date": "2015-12-04T11:19:04Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (t instanceof edu.columbia.mipl.runtime.traverse.JobExpr) { return reachJobExpr(((edu.columbia.mipl.runtime.traverse.JobExpr) (t))); }else if (t instanceof edu.columbia.mipl.runtime.traverse.Program) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4430/buggy-version/src.edu.columbia.mipl.runtime.traverse.RuntimeTraverser.java", "BodyUseAPI": [], "Fixed commit": "b0c19463fa414f4f13f98fe4de6f1c5a902ed141", "Url": "https://api.github.com/repos/jinhyung/MIPL", "Date": "2012-04-11T21:05:09Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(parser.getProgram().traverse(new edu.columbia.mipl.SemanticChecker()))) { java.lang.System.out.println(\"There are semantic errors!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4430/buggy-version/src.edu.columbia.mipl.Main.java", "BodyUseAPI": [], "Fixed commit": "b0c19463fa414f4f13f98fe4de6f1c5a902ed141", "Url": "https://api.github.com/repos/jinhyung/MIPL", "Date": "2012-04-11T21:05:09Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((parser.getNumError()) != 0) { java.lang.System.out.println(\"Error on parsing input!\"); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4430/buggy-version/src.edu.columbia.mipl.Main.java", "BodyUseAPI": [], "Fixed commit": "b0c19463fa414f4f13f98fe4de6f1c5a902ed141", "Url": "https://api.github.com/repos/jinhyung/MIPL", "Date": "2012-04-11T21:05:09Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["CheckersServer.NetworkUtil.read()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (s.startsWith(\"surrender\")) { int sz = ncs.size(); for (int i = sz - 1; i >= 0; i--) { if ((ncs.get(i)) == _nc) { off[i] = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6133/buggy-version/Network-Checkers.server.src.CheckersServer.Server.java", "BodyUseAPI": [], "Fixed commit": "1a6f4c6ad0bb74c4245c1ae2fd7116ca2c79ca5b", "Url": "https://api.github.com/repos/ShafinKhadem/Javafx-Network-Checkers", "Date": "2017-12-15T05:12:12Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (backup.delete()) { if (bytes != null) { org.dsa.iot.dslink.util.FileUtils.write(file, bytes); } org.dsa.iot.dslink.serializer.SerializationManager.LOGGER.debug(\"Moved backup data to regular data for deserialization\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8447/buggy-version/sdk.dslink.src.main.java.org.dsa.iot.dslink.serializer.SerializationManager.java", "BodyUseAPI": [], "Fixed commit": "ef2df29789797da5620ece5f0be2109fe4d65d58", "Url": "https://api.github.com/repos/IOT-DSA/sdk-dslink-java", "Date": "2015-04-01T00:42:19Z"},
{"Line": "=>91", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (backup.delete()) { org.dsa.iot.dslink.serializer.SerializationManager.LOGGER.debug(\"Backup data removed\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8447/buggy-version/sdk.dslink.src.main.java.org.dsa.iot.dslink.serializer.SerializationManager.java", "BodyUseAPI": [], "Fixed commit": "ef2df29789797da5620ece5f0be2109fe4d65d58", "Url": "https://api.github.com/repos/IOT-DSA/sdk-dslink-java", "Date": "2015-04-01T00:42:19Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.kashdeya.tinyprogressions.inits.TechBlocks.growth_upgrade) != null) com.kashdeya.tinyprogressions.handlers.RenderHandler.setCustomStateMap(TechBlocks.growth_upgrade, new net.minecraft.client.renderer.block.statemap.StateMap.Builder().ignore(new net.minecraft.block.properties.IProperty[]{ net.minecraft.block.BlockLiquid.LEVEL }).build());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6935/buggy-version/src.main.java.com.kashdeya.tinyprogressions.handlers.RenderHandler.java", "BodyUseAPI": [], "Fixed commit": "ab209679b3babde381141f5d3a33f57f7b5bf79e", "Url": "https://api.github.com/repos/jtmnf/Tiny-Progressions", "Date": "2016-12-22T01:05:11Z"},
{"Line": "=>554", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (listenedNodeAndTypes.containsKey(newNode)) cmd += \"; \" + (genAddEventListeners(newNode));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5185/buggy-version/swows-web.src.main.java.org.swows.web.WebApp.java", "BodyUseAPI": ["org.swows.web.WebApp.genAddEventListeners(org.w3c.dom.Node)"], "Fixed commit": "cc92eabf093455c17a1e6f81196e758eb9706449", "Url": "https://api.github.com/repos/miguel76/swows-web", "Date": "2013-10-17T18:08:23Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(time)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6057/buggy-version/src.com.rise.component.TimePreference.java", "BodyUseAPI": [], "Fixed commit": "e57b4ca0b0e426c627320a490a2bb1b37818546c", "Url": "https://api.github.com/repos/kai-wang-john/hummer", "Date": "2014-05-20T03:39:46Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (android.text.TextUtils.isEmpty(time)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6057/buggy-version/src.com.rise.component.TimePreference.java", "BodyUseAPI": [], "Fixed commit": "e57b4ca0b0e426c627320a490a2bb1b37818546c", "Url": "https://api.github.com/repos/kai-wang-john/hummer", "Date": "2014-05-20T03:39:46Z"},
{"Line": "=>755", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((journeyQuery.transportModes) == null) || (journeyQuery.transportModes.isEmpty())) { inactiveColor = activeColor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2146/buggy-version/sthlmtraveling.src.main.java.com.markupartist.sthlmtraveling.PlannerFragment.java", "BodyUseAPI": [], "Fixed commit": "57123cfe18795f7f6328fb28783736f24c1c0eb1", "Url": "https://api.github.com/repos/powder366/sthlmtraveling", "Date": "2015-11-28T14:38:16Z"},
{"Line": "=>326", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((journeyQuery.transportModes) == null) || (journeyQuery.transportModes.isEmpty())) { inactiveColor = activeColor; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2146/buggy-version/sthlmtraveling.src.main.java.com.markupartist.sthlmtraveling.FavoritesFragment.java", "BodyUseAPI": [], "Fixed commit": "57123cfe18795f7f6328fb28783736f24c1c0eb1", "Url": "https://api.github.com/repos/powder366/sthlmtraveling", "Date": "2015-11-28T14:38:16Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (posing) com.vloxlands.util.MapAssistant.pos += pos;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8100/buggy-version/src.com.vloxlands.util.MapAssistant.java", "BodyUseAPI": [], "Fixed commit": "13642dba9bb5aa115ef43712c48732dc1fc93dae", "Url": "https://api.github.com/repos/Ichmed/Vloxlands", "Date": "2013-09-10T20:20:47Z"},
{"Line": "=>137", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (key == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1756/buggy-version/src.main.java.com.kasirgalabs.tilki.utils.Exam.java", "BodyUseAPI": [], "Fixed commit": "9f00efa32ac9046df94a747d05d134e6fc1edd8b", "Url": "https://api.github.com/repos/kasirgalabs/TilkiClient", "Date": "2017-02-09T14:01:34Z"},
{"Line": "=>112", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (space == 28) (com.dockdev.chance.Data.wautil)++; else if (space == 29) (com.dockdev.chance.Data.margar)++; else if (space == 30) (com.dockdev.chance.Data.gojail)++; else if (space == 31) (com.dockdev.chance.Data.pacave)++; else if (space == 32) (com.dockdev.chance.Data.norave)++; else if (space == 34) (com.dockdev.chance.Data.penave)++; else if (space == 35) (com.dockdev.chance.Data.shline)++; else if (space == 37) (com.dockdev.chance.Data.parpla)++; else if (space == 38) (com.dockdev.chance.Data.luxtax)++; else if (space == 39) (com.dockdev.chance.Data.boardw)++;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1201/buggy-version/chance.src.com.dockdev.chance.Data.java", "BodyUseAPI": [], "Fixed commit": "fe4559a3e5ffd983709edcddaf24c4f5b2911f99", "Url": "https://api.github.com/repos/TheOnlyMrCat/monopolysim", "Date": "2017-04-06T09:56:01Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.String>.get(placeName2.getLanguage())", "java.util.Map<java.lang.String, java.lang.String>.get(placeName1.getLanguage())"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((localizedLanguage1 != null) && (localizedLanguage2 != null)) langComp = java.text.Collator.getInstance(locale).compare(localizedLanguage1, localizedLanguage2); else langComp = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1181/buggy-version/src.main.java.org.dainst.gazetteer.helpers.PlaceNameHelper.java", "BodyUseAPI": ["java.text.Collator.compare(java.lang.String,java.lang.String)"], "Fixed commit": "695ffe735d7af50ad2c0253f43766d4342b17322", "Url": "https://api.github.com/repos/dainst/gazetteer", "Date": "2016-04-04T14:12:38Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.interestGroups) == null) { this.interestGroups = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1862/buggy-version/affinityMapper.src.main.java.com.affinitymapper.affinitymapper.model.Person.java", "BodyUseAPI": [], "Fixed commit": "1e426eaf74a32ee1890d75b00b98a0e90ac02ecc", "Url": "https://api.github.com/repos/udeebsdev/AffinityMapper", "Date": "2014-05-10T00:50:47Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (swapRight) { backViewLeft.setVisibility(View.GONE); backViewRight.setVisibility(View.VISIBLE); }else { backViewLeft.setVisibility(View.VISIBLE); backViewRight.setVisibility(View.GONE); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5330/buggy-version/swipelistview.src.main.java.com.fortysevendeg.swipelistview.SwipeListViewTouchListener.java", "BodyUseAPI": [], "Fixed commit": "95df029cf771e2f705d564f2d86c79b787498d24", "Url": "https://api.github.com/repos/antonkrasov/android-swipelistview", "Date": "2014-05-22T11:49:26Z"},
{"Line": "=>134", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (progressPercentage >= 50.0) { if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) listProgress.setBackground(mContext.getResources().getDrawable(R.drawable.yellow_rect, mContext.getResources().newTheme())); else listProgress.setBackgroundDrawable(mContext.getResources().getDrawable(R.drawable.yellow_rect)); }else { if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.LOLLIPOP)) listProgress.setBackground(mContext.getResources().getDrawable(R.drawable.red_rect, mContext.getResources().newTheme())); else listProgress.setBackgroundDrawable(mContext.getResources().getDrawable(R.drawable.red_rect)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5198/buggy-version/app.src.main.java.com.pear.shopz.adapters.ShoppingListAdapter.java", "BodyUseAPI": [], "Fixed commit": "acac146e8b33b262cf796e3604367b8559f7cf7e", "Url": "https://api.github.com/repos/Daskott/Shopz", "Date": "2016-05-07T08:10:09Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((typeRegistry) == null) { typeRegistry = org.spine3.server.storage.datastore.type.DatastoreTypeRegistry.defaultInstance(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6510/buggy-version/gcd.src.main.java.org.spine3.server.storage.datastore.DatastoreStorageFactory.java", "BodyUseAPI": [], "Fixed commit": "43234059e02f43eae4fc3e73a5f59c587cd3c101", "Url": "https://api.github.com/repos/SpineEventEngine/gcloud-java", "Date": "2017-04-11T11:24:24Z"},
{"Line": "=>154", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.isDirectory()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7133/buggy-version/xchart.src.main.java.com.xeiam.xchart.XChartPanel.java", "BodyUseAPI": [], "Fixed commit": "73d5bf1a47e7205852aa1263c39771c79838e553", "Url": "https://api.github.com/repos/knowm/XChart", "Date": "2015-03-17T17:49:42Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.isDirectory()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7133/buggy-version/xchart.src.main.java.com.xeiam.xchart.XChartPanel.java", "BodyUseAPI": [], "Fixed commit": "73d5bf1a47e7205852aa1263c39771c79838e553", "Url": "https://api.github.com/repos/knowm/XChart", "Date": "2015-03-17T17:49:42Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.isDirectory()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7133/buggy-version/xchart.src.main.java.com.xeiam.xchart.XChartPanel.java", "BodyUseAPI": [], "Fixed commit": "73d5bf1a47e7205852aa1263c39771c79838e553", "Url": "https://api.github.com/repos/knowm/XChart", "Date": "2015-03-17T17:49:42Z"},
{"Line": "=>198", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (f.isDirectory()) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7133/buggy-version/xchart.src.main.java.com.xeiam.xchart.XChartPanel.java", "BodyUseAPI": [], "Fixed commit": "73d5bf1a47e7205852aa1263c39771c79838e553", "Url": "https://api.github.com/repos/knowm/XChart", "Date": "2015-03-17T17:49:42Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(org.apache.commons.lang.math.NumberUtils.isNumber(strApplyAmount))) { throw new com.techmask.ressack.core.error.ValidationException(\"error.applyAmount.formatError\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5949/buggy-version/src.main.java.com.techmask.ressack.accountmanager.service.AccountServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "681ba5eede781dc191562ae2748960dfcf7e461a", "Url": "https://api.github.com/repos/ji-jiang/ResourceSackServices", "Date": "2016-06-25T04:40:24Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (attr.equals(WebLogicMBeanPropConstants.SERVER_STATE)) { line.append(((domainhealth.frontend.data.ServerState.getValueForState(serverObjectRecord.getAttrValue(attr))) + (SEPARATOR))); }else line.append(((serverObjectRecord.getAttrValue(attr)) + (SEPARATOR)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/440/buggy-version/src.main.java.domainhealth.backend.wldfcapture.StatisticCapturerWLDFQuery.java", "BodyUseAPI": ["domainhealth.frontend.data.ServerState.getValueForState(serverObjectRecord.getAttrValue(attr))", "java.lang.StringBuilder.append(((serverObjectRecord.getAttrValue(attr)) + (SEPARATOR)))", "domainhealth.backend.wldfcapture.data.InstanceDataRecord.getAttrValue(java.lang.String)", "domainhealth.backend.wldfcapture.data.InstanceDataRecord.getAttrValue(java.lang.String)", "java.lang.StringBuilder.append(((domainhealth.frontend.data.ServerState.getValueForState(serverObjectRecord.getAttrValue(attr))) + (SEPARATOR)))"], "Fixed commit": "b5ab79fe6f79f856072fb2a0e72bc4f80d981273", "Url": "https://api.github.com/repos/ccristian/domainhealth", "Date": "2014-12-04T16:13:44Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.sardine.model.Propstat.getProp()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (null == (prop.getQuotaUsedBytes())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2064/buggy-version/src.main.java.com.github.sardine.DavQuota.java", "BodyUseAPI": [], "Fixed commit": "16bcae76d6ecfb0eca9e31898f3a7d66f67c04fa", "Url": "https://api.github.com/repos/iterate-ch/sardine", "Date": "2016-06-30T18:38:43Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.sardine.model.Propstat.getProp()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (null == (prop.getQuotaAvailableBytes())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2064/buggy-version/src.main.java.com.github.sardine.DavQuota.java", "BodyUseAPI": [], "Fixed commit": "16bcae76d6ecfb0eca9e31898f3a7d66f67c04fa", "Url": "https://api.github.com/repos/iterate-ch/sardine", "Date": "2016-06-30T18:38:43Z"},
{"Line": "=>41", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (input != null) { for (com.qualogy.example.react.KeyPressedSubscriber subscriber : com.qualogy.example.react.ReactSample.subscribers) { subscriber.onNext(input); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6762/buggy-version/src.main.java.com.qualogy.example.react.ReactSample.java", "BodyUseAPI": ["com.qualogy.example.react.KeyPressedSubscriber.onNext(java.lang.String)"], "Fixed commit": "09bf8813b64ab0a383dd7659767ead7b29ff5b46", "Url": "https://api.github.com/repos/adiazQualogy/java9samples", "Date": "2017-11-27T08:24:49Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["inspector.getFieldTypes().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((((fieldType == null) && ((fieldName.length()) > 1)) && (java.lang.Character.isLowerCase(fieldName.charAt(0)))) && (java.lang.Character.isUpperCase(fieldName.charAt(1)))) { java.lang.String altFieldName = (java.lang.Character.toUpperCase(fieldName.charAt(0))) + (fieldName.substring(1)); fieldType = ((java.lang.Class<?>) (inspector.getFieldTypes().get(altFieldName))); if (fieldType != null) { getterMethod = ((java.lang.reflect.Method) (inspector.getGetterMethods().get(altFieldName))); index = ((java.lang.Integer) (inspector.getFieldNames().get(altFieldName))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4102/buggy-version/drools-core.src.main.java.org.drools.base.ClassFieldAccessorFactory.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.Character.toUpperCase(char)", "java.lang.String.charAt(int)"], "Fixed commit": "10f4a0e6cf331d5875b1d60a48733aed6d351efa", "Url": "https://api.github.com/repos/kiegroup/drools", "Date": "2011-09-30T20:18:31Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["inspector.getSetterMethods().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((((setterMethod == null) && ((fieldName.length()) > 1)) && (java.lang.Character.isLowerCase(fieldName.charAt(0)))) && (java.lang.Character.isUpperCase(fieldName.charAt(1)))) { java.lang.String altFieldName = (java.lang.Character.toUpperCase(fieldName.charAt(0))) + (fieldName.substring(1)); setterMethod = ((java.lang.reflect.Method) (inspector.getSetterMethods().get(altFieldName))); index = ((java.lang.Integer) (inspector.getFieldNames().get(altFieldName))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4102/buggy-version/drools-core.src.main.java.org.drools.base.ClassFieldAccessorFactory.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.charAt(int)", "java.lang.Character.toUpperCase(char)"], "Fixed commit": "10f4a0e6cf331d5875b1d60a48733aed6d351efa", "Url": "https://api.github.com/repos/kiegroup/drools", "Date": "2011-09-30T20:18:31Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(transcriptVariation.getPeptideAlleleString().equals(\"\\\\N\"))) { java.lang.String[] peptideAlleles = transcriptVariation.getPeptideAlleleString().split(\"/\"); peptideReference = peptideAlleles[0]; if ((peptideAlleles.length) == 1) { peptideAlternate = peptideAlleles[0]; }else { peptideAlternate = peptideAlleles[1]; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3471/buggy-version/cellbase-app.src.main.java.org.opencb.cellbase.app.transform.VariationParser.java", "BodyUseAPI": ["org.opencb.biodata.models.variation.TranscriptVariation.getPeptideAlleleString()", "transcriptVariation.getPeptideAlleleString().split(java.lang.String)"], "Fixed commit": "16e2b2faceef7156aa4acb99716508d535a099ed", "Url": "https://api.github.com/repos/opencb/cellbase", "Date": "2015-11-09T16:12:41Z"},
{"Line": "=>359", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((((executors) == null) || (executors.isShutdown())) || (executors.isTerminated())) { com.notnoop.apns.internal.ApnsConnectionImpl.logger.debug(\"CC SSSSSSSSSSS-2-1 executors is shutdown, XXXXXXXXXXXXXXXXXX setup a new one. nitifacation = {}\", m); executors = java.util.concurrent.Executors.newSingleThreadExecutor(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5210/buggy-version/src.main.java.com.notnoop.apns.internal.ApnsConnectionImpl.java", "BodyUseAPI": [], "Fixed commit": "72a2fbdc13bf1d31f00205e820ffdcff50d7c857", "Url": "https://api.github.com/repos/chencao0524/java-apns", "Date": "2015-10-21T13:15:56Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((compressed) == null) { throw new java.lang.RuntimeException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5974/buggy-version/core.src.main.java.io.undertow.conduits.InflatingStreamSourceConduit.java", "BodyUseAPI": [], "Fixed commit": "db96484dd05ac2d1489c269926ee78bc0cca3246", "Url": "https://api.github.com/repos/undertow-io/undertow", "Date": "2016-12-07T02:06:33Z"},
{"Line": "=>321", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(chan.util.StringUtils.isEmpty(string))) { android.content.ClipboardManager clipboard = ((android.content.ClipboardManager) (context.getSystemService(Context.CLIPBOARD_SERVICE))); clipboard.setPrimaryClip(android.content.ClipData.newPlainText(null, string)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3038/buggy-version/src-api.chan.util.StringUtils.java", "BodyUseAPI": ["android.content.ClipboardManager.setPrimaryClip(android.content.ClipData.newPlainText(null, string))", "android.content.ClipData.newPlainText(<nulltype>,java.lang.String)"], "Fixed commit": "55cf4b6db5a7a6ed0c7f086e75ace22357bf158e", "Url": "https://api.github.com/repos/Mishiranu/Dashchan", "Date": "2017-05-21T20:58:15Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((ps.get(i)) != p) { if ((roboticsimproc.ImProcUtils.euclideanDistance(bestP, p)) > (roboticsimproc.ImProcUtils.euclideanDistance(bestP, ps.get(i)))) { bestP = ps.get(i); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8350/buggy-version/src.roboticsimproc.ImProcUtils.java", "BodyUseAPI": ["roboticsimproc.ImProcUtils.euclideanDistance(java.awt.Point,java.awt.Point)", "java.util.Vector<java.awt.Point>.get(int)", "java.util.Vector<java.awt.Point>.get(int)", "roboticsimproc.ImProcUtils.euclideanDistance(java.awt.Point,java.awt.Point)"], "Fixed commit": "563283b50413a02eb5aff85e230ed22ffa8e0c2a", "Url": "https://api.github.com/repos/fallen-s4e/RoboticsFinalB", "Date": "2013-02-27T12:50:47Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (polman.openPolygon()) { if (!(polman.finishPolygon())) { showFeedback = true; } }else { showFeedback = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4517/buggy-version/src.hci.viewer.Viewer.java", "BodyUseAPI": ["hci.viewer.PolygonManager.finishPolygon()"], "Fixed commit": "ceb0ef3d3da5682f5c939c3b534c1ee0bc4d37df", "Url": "https://api.github.com/repos/DavidWillHCI/HCI", "Date": "2012-09-28T15:12:54Z"},
{"Line": "=>211", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (polman.openPolygon()) { if (polman.removeLastPoint()) { repaint(); }else { showFeedback = true; } }else { if (polman.removeHighlighted()) { repaint(); }else { showFeedback = true; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4517/buggy-version/src.hci.viewer.Viewer.java", "BodyUseAPI": ["hci.viewer.PolygonManager.removeHighlighted()", "hci.viewer.PolygonManager.removeLastPoint()"], "Fixed commit": "ceb0ef3d3da5682f5c939c3b534c1ee0bc4d37df", "Url": "https://api.github.com/repos/DavidWillHCI/HCI", "Date": "2012-09-28T15:12:54Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((pathInfo) != null) { try { pathInfo = new java.net.URI(pathInfo).getPath(); } catch (java.net.URISyntaxException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5181/buggy-version/extensions.servlet.src.com.google.inject.servlet.ServletDefinition.java", "BodyUseAPI": [], "Fixed commit": "3dbe3bdf3e38cce8f6b38ff8cc95f34a16c12ed1", "Url": "https://api.github.com/repos/sonatype/sisu-guice", "Date": "2014-02-14T11:22:31Z"},
{"Line": "=>623", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((mLastDimensionH) == h) && ((mLastDimensionW) == w)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/930/buggy-version/freedrawview.src.main.java.com.rm.freedrawview.FreeDrawView.java", "BodyUseAPI": [], "Fixed commit": "fc104c17173ebaf511757dcfa8882da49913eb76", "Url": "https://api.github.com/repos/shashpash/FreeDrawView", "Date": "2017-11-15T11:04:18Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentSession) != null) { api.logout(currentSession); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/224/buggy-version/app.src.main.java.alex.imhere.activity.model.ImhereModel.java", "BodyUseAPI": [], "Fixed commit": "61abe7960421acbcbff6f6eaefe980e5542976c2", "Url": "https://api.github.com/repos/Nexen23/I_am_here", "Date": "2015-08-16T16:03:33Z"},
{"Line": "=>36", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (japp.util.StringHelper.isNullOrBlank(string)) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5895/buggy-version/JAppUtil.src.main.java.japp.util.JsonHelper.java", "BodyUseAPI": [], "Fixed commit": "f4913dd5b012d0a502cd685ab6675de8b9b0b1e6", "Url": "https://api.github.com/repos/daviarimateia93/JApp", "Date": "2017-01-03T17:19:56Z"},
{"Line": "=>202", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((pair.length) == 2) { parameters.put(pair[0], pair[1]); }else { com.officedrop.redis.failover.Node.log.warn(\"Info line is empty - {}\", line); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4334/buggy-version/src.main.java.com.officedrop.redis.failover.Node.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "b4c0abb071a04db318d9fd992a794877371b5101", "Url": "https://api.github.com/repos/officedrop/jedis_failover", "Date": "2013-01-15T20:54:34Z"},
{"Line": "=>194", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["context.getCallBackPool().get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(context.getUnHealthyLBEPQueue().contains(callBack.getLbOutboundEndpoint()))) { context.getUnHealthyLBEPQueue().add(callBack.getLbOutboundEndpoint()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/79/buggy-version/carbon-gw-lb.components.org.wso2.carbon.gateway.httploadbalancer.src.main.java.org.wso2.carbon.gateway.httploadbalancer.utils.handlers.scheduled.TimeoutHandler.java", "BodyUseAPI": ["context.getUnHealthyLBEPQueue().add(callBack.getLbOutboundEndpoint())", "org.wso2.carbon.gateway.httploadbalancer.callback.LoadBalancerMediatorCallBack.getLbOutboundEndpoint()", "org.wso2.carbon.gateway.httploadbalancer.context.LoadBalancerConfigContext.getUnHealthyLBEPQueue()"], "Fixed commit": "3ef5f634fc23311e770d7f9b7369414d3b6165aa", "Url": "https://api.github.com/repos/Venkat2811/product-http-load-balancer", "Date": "2016-06-12T10:01:58Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mAuthFound)) { notifyAuthenticationFailed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9211/buggy-version/library.src.main.java.com.whiterabbit.postman.oauth.OAuthFragment.java", "BodyUseAPI": [], "Fixed commit": "3453164f4c4926f24f506f46bacb5aca559c6ae4", "Url": "https://api.github.com/repos/fedepaol/PostmanLib--Rings-Twice--Android", "Date": "2013-01-23T22:39:42Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(mAuthFound)) { notifyAuthenticationFailed(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9211/buggy-version/library.src.main.java.com.whiterabbit.postman.oauth.OAuthFragment.java", "BodyUseAPI": [], "Fixed commit": "3453164f4c4926f24f506f46bacb5aca559c6ae4", "Url": "https://api.github.com/repos/fedepaol/PostmanLib--Rings-Twice--Android", "Date": "2013-01-23T22:39:42Z"},
{"Line": "=>281", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (null == (ZDPZL)) { return new java.math.BigDecimal(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8796/buggy-version/com.topsun.posclient.datamodel.src.com.topsun.posclient.datamodel.Item.java", "BodyUseAPI": [], "Fixed commit": "49f5f0e8463ea55362336d772b71eff334ff1033", "Url": "https://api.github.com/repos/tandong8888/topsun", "Date": "2014-02-14T04:18:58Z"},
{"Line": "=>353", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["napakalaki.Monster.getBadConsequence()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((thisBadCon.getLevels()) > 0) java.lang.System.out.println(unMonstruo.getName());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9184/buggy-version/src.napakalaki.PruebaNapakalaki.java", "BodyUseAPI": [], "Fixed commit": "99720c697fe122b518a17e0b25bd2874cb98b076", "Url": "https://api.github.com/repos/dvcarrillo/napakalaki", "Date": "2015-10-28T23:05:38Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (editorType.equals(ICellEditor.CE_FORMULA)) { value = \"=\" + (cell.getFormula()); }else if (org.openl.rules.lang.xls.types.CellMetaInfo.isCellContainsNodeUsages(cell)) { value = cell.getStringValue(); }else if (editorType.equals(ICellEditor.CE_DATE)) { value = org.openl.rules.table.formatters.FormattersManager.format(cell.getObjectValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8429/buggy-version/STUDIO.org.openl.rules.tableeditor.src.org.openl.rules.tableeditor.event.TableEditorController.java", "BodyUseAPI": ["java.lang.String.equals(ICellEditor.CE_DATE)"], "Fixed commit": "0deb37957e6832c280db5f0723b2d6e7a50e2613", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2017-10-30T16:34:32Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.hibernate.SessionFactory.openSession()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (session != null) { session.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6223/buggy-version/modules.nexus-core.src.main.java.com.youama.nexus.core.base.BaseService.java", "BodyUseAPI": ["org.hibernate.Session.close()"], "Fixed commit": "a5c4cb8d453ded1b89c084850f75570d9fe3e836", "Url": "https://api.github.com/repos/Youama/Nexus-Engine", "Date": "2015-10-10T21:00:31Z"},
{"Line": "=>275", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (success) { table.setModel(model); if ((table.getRowCount()) == 0) { message = \"No result found!\"; displayMessageDialogBox(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9054/buggy-version/src.swing.studentiPanels.StudentPregled.java", "BodyUseAPI": [], "Fixed commit": "13f765f8fc452e1088ec05af76db271c42ca802d", "Url": "https://api.github.com/repos/namikklapic/library", "Date": "2017-08-26T17:41:34Z"},
{"Line": "=>348", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (dialog.isShowing()) { dialog.dismiss(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1215/buggy-version/src.android.VideoPlayer.java", "BodyUseAPI": ["android.app.Dialog.dismiss()"], "Fixed commit": "a5e413b1389db8782e011a8c71ba0d910346fcfa", "Url": "https://api.github.com/repos/saschalink/cordova-plugin-videoplayer", "Date": "2016-09-07T14:17:21Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (amount.isEmpty()) { addLicenseView.showError(com.odde.bbuddy.license.viewModel.AddLicense.ErrorMessage.EMPTY_AMOUNT); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7007/buggy-version/app.src.main.java.com.odde.bbuddy.license.viewModel.AddLicense.java", "BodyUseAPI": [], "Fixed commit": "dd019662e9f1ce16c26af24b6b50318c975493ec", "Url": "https://api.github.com/repos/bbuddies/bbuddy-android-20170418", "Date": "2017-04-20T02:29:57Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (doctypeIOf != (-1)) { doctypeIOf = (sb.indexOf(\">\", sb.indexOf(\"<!doctype\"))) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3715/buggy-version/src.main.java.com.github.bedrin.jdbc.sniffer.servlet.HtmlInjector.java", "BodyUseAPI": [], "Fixed commit": "8ba3b9694063aba17fe894f7a065226dea361b2f", "Url": "https://api.github.com/repos/sniffy/sniffy", "Date": "2015-10-29T06:06:43Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (htmlIOf != (-1)) { htmlIOf = (sb.indexOf(\">\", sb.indexOf(\"<html\"))) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3715/buggy-version/src.main.java.com.github.bedrin.jdbc.sniffer.servlet.HtmlInjector.java", "BodyUseAPI": [], "Fixed commit": "8ba3b9694063aba17fe894f7a065226dea361b2f", "Url": "https://api.github.com/repos/sniffy/sniffy", "Date": "2015-10-29T06:06:43Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.StringBuilder.indexOf(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (headIOf != (-1)) { headIOf = (sb.indexOf(\">\", sb.indexOf(\"<head\"))) + 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3715/buggy-version/src.main.java.com.github.bedrin.jdbc.sniffer.servlet.HtmlInjector.java", "BodyUseAPI": [], "Fixed commit": "8ba3b9694063aba17fe894f7a065226dea361b2f", "Url": "https://api.github.com/repos/sniffy/sniffy", "Date": "2015-10-29T06:06:43Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((cards.size()) != 0) { number_of_words = (cards.size()) / (players.size()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8395/buggy-version/src.com.curchod.wherewithal.GameReadingStonesActivity.java", "BodyUseAPI": ["java.util.Hashtable<java.lang.String, com.curchod.domartin.Card>.size()"], "Fixed commit": "2f6680f4250a21b354c9395f0c965691e0ac9fc8", "Url": "https://api.github.com/repos/timofeysie/wherewithal", "Date": "2013-12-16T20:33:57Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.servlet.http.HttpServletRequest.getParameter((\"\" + (aToy.getToyid())))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (\"\".equals(recycle_status)) { pstmt_update_application.setNull(1, java.sql.Types.CHAR); }else { pstmt_update_application.setString(1, recycle_status); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/698/buggy-version/ToyMarket.src.java.ManageRecycleServlet.java", "BodyUseAPI": ["java.sql.PreparedStatement.setString(int,java.lang.String)"], "Fixed commit": "ac06ad8b88bf1e11fbad517f583f6834675a57a6", "Url": "https://api.github.com/repos/ConnieIp/tm", "Date": "2016-04-24T18:13:03Z"},
{"Line": "=>207", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((custOrdrDet.getReceivedQuantity()) == null) { custOrdrDet.setReceivedQuantity(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4477/buggy-version/dps-web-service.src.main.java.com.dps.web.service.controller.CustomerOrderController.java", "BodyUseAPI": ["com.dps.web.service.model.CustomerOrderDetailsDTO.setReceivedQuantity(int)"], "Fixed commit": "38f9b3b01975109a3cfa18a1490f88efdeb491cb", "Url": "https://api.github.com/repos/ashanbhag12/dps", "Date": "2017-01-29T10:54:09Z"},
{"Line": "=>425", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((custOrdrDet.getReceivedQuantity()) == null) { custOrdrDet.setReceivedQuantity(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4477/buggy-version/dps-web-service.src.main.java.com.dps.web.service.controller.CustomerOrderController.java", "BodyUseAPI": ["com.dps.web.service.model.CustomerOrderDetailsDTO.setReceivedQuantity(int)"], "Fixed commit": "38f9b3b01975109a3cfa18a1490f88efdeb491cb", "Url": "https://api.github.com/repos/ashanbhag12/dps", "Date": "2017-01-29T10:54:09Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((entity instanceof io.galeb.manager.entity.WithFarmID) && ((((io.galeb.manager.entity.WithFarmID) (entity)).getFarmId()) < 0)) { throw new io.galeb.manager.exceptions.BadRequestException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1327/buggy-version/src.main.java.io.galeb.manager.handler.AbstractHandler.java", "BodyUseAPI": [], "Fixed commit": "7549d62132610d60f407a90de50a6bc3084e9024", "Url": "https://api.github.com/repos/galeb/galeb-manager", "Date": "2016-11-22T18:58:31Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((e.getBlock().getType()) == (org.bukkit.Material.MOB_SPAWNER)) { removeSpawner(e.getBlock()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7931/buggy-version/src.main.java.com.github.soerxpso.xpspawners.listeners.BlockListener.java", "BodyUseAPI": ["org.bukkit.event.block.BlockExplodeEvent.getBlock()", "com.github.soerxpso.xpspawners.listeners.BlockListener.removeSpawner(e.getBlock())"], "Fixed commit": "03f07636aacae536e89100cf776943475325fa4b", "Url": "https://api.github.com/repos/DevotedMC/XPSpawners", "Date": "2016-10-19T19:29:03Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["piggene.serialisation.workflow.actions.WorkflowSerialisation.load(java.lang.String,piggene.serialisation.workflow.actions.WorkflowSerialisation.determineType(workflowName))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (workflowContainsWorkflowReferences(referencedWorkflow)) { workflowOrdering = piggene.representation.WorkflowFlowSequence.constructWorkflowFlowSequence(referencedWorkflow); }else { workflowOrdering = referencedWorkflow.getComponents(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7975/buggy-version/PigGeneWebApp.src.piggene.serialisation.workflow.WorkflowReference.java", "BodyUseAPI": ["piggene.representation.WorkflowFlowSequence.constructWorkflowFlowSequence(piggene.serialisation.workflow.Workflow)", "piggene.serialisation.workflow.Workflow.getComponents()"], "Fixed commit": "67f0ed10d52427202974be10658162f038712d71", "Url": "https://api.github.com/repos/genepi/pig-gene", "Date": "2015-04-30T10:48:45Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (bestMatch == null) { return org.netbeans.api.java.platform.JavaPlatform.getDefault(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/714/buggy-version/netbeans-gradle-plugin.src.main.java.org.netbeans.gradle.project.properties.DefaultPropertySources.java", "BodyUseAPI": [], "Fixed commit": "32bea8d0953163aba317225905197b16cd921908", "Url": "https://api.github.com/repos/kelemen/netbeans-gradle-project", "Date": "2013-10-20T21:01:33Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((com.dc.service.CacheService.cacheTableIdAndSidMap) == null) { com.dc.service.CacheService.cacheTableIdAndSidMap = new java.util.HashMap<java.lang.String, java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/973/buggy-version/dc.src.main.java.com.dc.service.CacheService.java", "BodyUseAPI": [], "Fixed commit": "adb762e5de57a1e6776c80bbb618f6e1be79f3a0", "Url": "https://api.github.com/repos/toby941/dc", "Date": "2012-12-19T03:36:47Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == (org.antlr.v4.misc.CharSupport.ToRangeMode.BRACKETED)) { sb.append(\"]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5236/buggy-version/tool.src.org.antlr.v4.misc.CharSupport.java", "BodyUseAPI": [], "Fixed commit": "c972cb3cf0110ed8cc2aeb91a9b23768bdd88298", "Url": "https://api.github.com/repos/bhamiltoncx/antlr4", "Date": "2017-02-15T17:37:51Z"},
{"Line": "=>186", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mode == (org.antlr.v4.misc.CharSupport.ToRangeMode.BRACKETED)) { sb.append(\"[\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5236/buggy-version/tool.src.org.antlr.v4.misc.CharSupport.java", "BodyUseAPI": [], "Fixed commit": "c972cb3cf0110ed8cc2aeb91a9b23768bdd88298", "Url": "https://api.github.com/repos/bhamiltoncx/antlr4", "Date": "2017-02-15T17:37:51Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (infrastructureArgs[index].equals(\"\")) { java.lang.String contents = \"\"; queryStringBuilder.add(\"infrastructureFileParameters\", contents); }else { java.lang.String contents = org.ow2.proactive_grid_cloud_portal.cli.utils.FileUtility.readFileToString(new java.io.File(infrastructureArgs[index])); queryStringBuilder.add(\"infrastructureFileParameters\", contents); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6429/buggy-version/rest.rest-cli.src.main.java.org.ow2.proactive_grid_cloud_portal.cli.cmd.rm.SetInfrastructureCommand.java", "BodyUseAPI": ["org.ow2.proactive_grid_cloud_portal.cli.utils.FileUtility.readFileToString(java.io.File)"], "Fixed commit": "84a488911a4346d4838608288f67b2ff4f9047d2", "Url": "https://api.github.com/repos/fviale/scheduling", "Date": "2017-01-05T11:35:59Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.actionMode) == null) { this.actionMode = com.matburt.mobileorg.Gui.NodeEditActivity.ACTIONMODE_CREATE; node = new com.matburt.mobileorg.Parsing.Node(\"\"); android.content.Intent intent = getIntent(); java.lang.String subject = intent.getStringExtra(\"android.intent.extra.SUBJECT\"); java.lang.String text = intent.getStringExtra(\"android.intent.extra.TEXT\"); titleView.setText(subject); payloadView.setText(text); }else if (this.actionMode.equals(com.matburt.mobileorg.Gui.NodeEditActivity.ACTIONMODE_CREATE)) { node = new com.matburt.mobileorg.Parsing.Node(\"\"); }else if (this.actionMode.equals(com.matburt.mobileorg.Gui.NodeEditActivity.ACTIONMODE_EDIT)) { node = appInst.nodestackTop(); titleView.setText(node.name); payloadView.setText(node.payload.getContent()); tagsView.setText(node.getTagString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8440/buggy-version/src.com.matburt.mobileorg.Gui.NodeEditActivity.java", "BodyUseAPI": [], "Fixed commit": "5449a07bd17f61cb9389422261e2ddf872d6f12c", "Url": "https://api.github.com/repos/matburt/mobileorg-android", "Date": "2011-12-07T13:08:17Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((order_type) <= 3) { orderPresenter.getOrders(sharedPrefs.getAccessToken(), order_type); }else { orderPresenter.getOrders(sharedPrefs.getAccessToken(), (-1)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7950/buggy-version/app.src.main.java.com.codenicely.project.groceryappadmin.orders.view.OrdersListFragment.java", "BodyUseAPI": [], "Fixed commit": "1f25d7c8af710775cdf208f451da5a52c80d904d", "Url": "https://api.github.com/repos/CodeNicely/CodeNicelyApp-Admin-", "Date": "2017-01-30T13:35:37Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((info.length) == 1) { password = null; }else { password = info[1]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6456/buggy-version/src.codeu.chat.server.Controller.java", "BodyUseAPI": [], "Fixed commit": "33c21bb6f4fc323ca5064f83c27965e309d0d49d", "Url": "https://api.github.com/repos/mganesh6/codeu_project_2017", "Date": "2017-05-31T02:06:09Z"},
{"Line": "=>215", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (itemName.substring(0, 1).equals(\"\\\"\")) { itemName = itemName.substring(1, itemName.length()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9132/buggy-version/android.src.com.aj3.kiss.AddItemActivity.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "354240e153c55dcf796a309d8eb52147d648f033", "Url": "https://api.github.com/repos/jsjones27/kiss", "Date": "2013-10-31T16:50:54Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new com.google.gson.JsonParser().parse(preference.getValue().toString()).getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((oldPostData.has(\"operatingSystem\")) && (!(oldPostData.get(\"operatingSystem\").isJsonNull()))) { postData.addProperty(\"operatingSystem\", oldPostData.get(\"operatingSystem\").getAsString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/485/buggy-version/aerogear-android-push.src.main.java.org.jboss.aerogear.android.unifiedpush.gcm.UnifiedPushInstanceIDListenerService.java", "BodyUseAPI": ["com.google.gson.JsonObject.get(java.lang.String)", "com.google.gson.JsonObject.addProperty(java.lang.String,oldPostData.get(\"operatingSystem\").getAsString())", "oldPostData.get(\"operatingSystem\").getAsString()"], "Fixed commit": "3182b805b284405c8084e675d05f2093729132cb", "Url": "https://api.github.com/repos/secondsun/aerogear-android-push", "Date": "2015-07-17T02:11:16Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new com.google.gson.JsonParser().parse(preference.getValue().toString()).getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((oldPostData.has(\"osVersion\")) && (!(oldPostData.get(\"osVersion\").isJsonNull()))) { postData.addProperty(\"osVersion\", oldPostData.get(\"osVersion\").getAsString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/485/buggy-version/aerogear-android-push.src.main.java.org.jboss.aerogear.android.unifiedpush.gcm.UnifiedPushInstanceIDListenerService.java", "BodyUseAPI": ["com.google.gson.JsonObject.addProperty(java.lang.String,oldPostData.get(\"osVersion\").getAsString())", "com.google.gson.JsonObject.get(java.lang.String)", "oldPostData.get(\"osVersion\").getAsString()"], "Fixed commit": "3182b805b284405c8084e675d05f2093729132cb", "Url": "https://api.github.com/repos/secondsun/aerogear-android-push", "Date": "2015-07-17T02:11:16Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new com.google.gson.JsonParser().parse(preference.getValue().toString()).getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((oldPostData.has(\"alias\")) && (!(oldPostData.get(\"alias\").isJsonNull()))) { postData.addProperty(\"alias\", oldPostData.get(\"alias\").getAsString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/485/buggy-version/aerogear-android-push.src.main.java.org.jboss.aerogear.android.unifiedpush.gcm.UnifiedPushInstanceIDListenerService.java", "BodyUseAPI": ["oldPostData.get(\"alias\").getAsString()", "com.google.gson.JsonObject.get(java.lang.String)", "com.google.gson.JsonObject.addProperty(java.lang.String,oldPostData.get(\"alias\").getAsString())"], "Fixed commit": "3182b805b284405c8084e675d05f2093729132cb", "Url": "https://api.github.com/repos/secondsun/aerogear-android-push", "Date": "2015-07-17T02:11:16Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["new com.google.gson.JsonParser().parse(preference.getValue().toString()).getAsJsonObject()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((oldPostData.has(\"deviceType\")) && (!(oldPostData.get(\"deviceType\").isJsonNull()))) { postData.addProperty(\"deviceType\", oldPostData.get(\"deviceType\").getAsString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/485/buggy-version/aerogear-android-push.src.main.java.org.jboss.aerogear.android.unifiedpush.gcm.UnifiedPushInstanceIDListenerService.java", "BodyUseAPI": ["com.google.gson.JsonObject.get(java.lang.String)", "oldPostData.get(\"deviceType\").getAsString()", "com.google.gson.JsonObject.addProperty(java.lang.String,oldPostData.get(\"deviceType\").getAsString())"], "Fixed commit": "3182b805b284405c8084e675d05f2093729132cb", "Url": "https://api.github.com/repos/secondsun/aerogear-android-push", "Date": "2015-07-17T02:11:16Z"},
{"Line": "=>157", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(active)) { io.novaordis.esa.core.impl.ComponentBase.log.debug(((this) + \" not active\")); return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1922/buggy-version/src.main.java.io.novaordis.esa.core.impl.ComponentBase.java", "BodyUseAPI": [], "Fixed commit": "8ce2a8ace472f6803de6c4165a20995bc7552505", "Url": "https://api.github.com/repos/NovaOrdis/events", "Date": "2016-04-22T22:20:17Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((eu.fiveminutes.cipele46.model.User.getActiveUser(getActivity().getApplicationContext())) == null) menu.findItem(R.id.details_favorites).setVisible(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/170/buggy-version/src.eu.fiveminutes.cipele46.fragment.AdDetailsFragment.java", "BodyUseAPI": [], "Fixed commit": "0a314e5442cb98cbfa5409e73b60ef091b2a790f", "Url": "https://api.github.com/repos/cipele46/cipele46-android", "Date": "2014-01-10T12:27:06Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.aph.braillezephyr.Main.bzStyledText.getNeedsRedraw()) org.aph.braillezephyr.Main.bzStyledText.redraw();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2259/buggy-version/src.main.java.org.aph.braillezephyr.Main.java", "BodyUseAPI": ["org.aph.braillezephyr.BZStyledText.redraw()"], "Fixed commit": "9ed933bb085e7d94d6bc00d788f37cd7b0b74908", "Url": "https://api.github.com/repos/MikeGray-APH/BrailleZephyr", "Date": "2015-08-18T13:48:40Z"},
{"Line": "=>316", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!ifFailedToLoadTheCache) { return cc.easyandroid.easyhttp.core.retrofit.Response.success(null, rawResponse); }else { throw new java.io.IOException(\"code == 204 || code == 205\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/508/buggy-version/app.src.main.java.cc.easyandroid.easyhttp.core.retrofit.KOkHttpCall.java", "BodyUseAPI": [], "Fixed commit": "f1dd8c133ff5dc63092391c73d2ef028f1edc85a", "Url": "https://api.github.com/repos/cgpllx/easyandroid", "Date": "2016-02-26T03:27:43Z"},
{"Line": "=>269", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if ((jsonBuf == null) || (jsonBuf.isEmpty())) { com.android.calendar.Log.v((\"Empty string: \" + jsonBuf)); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4205/buggy-version/src.com.android.calendar.therapy.Therapy.java", "BodyUseAPI": ["com.android.calendar.Log.v(java.lang.String)"], "Fixed commit": "1afc258d5b30bbc978599fcc251f4af5895566dd", "Url": "https://api.github.com/repos/sausame/calendar", "Date": "2013-12-25T11:22:57Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((0 <= value) && (value < (com.blochstech.bitcoincardterminal.Interfaces.Currency.values().length))) return com.blochstech.bitcoincardterminal.Interfaces.Currency.values()[value]; else { if (com.blochstech.bitcoincardterminal.Utils.Tags.DEBUG) android.util.Log.e(Tags.APP_TAG, ((\"Attempted to convert invalid integer \" + value) + \" to currency.\")); android.widget.Toast.makeText(com.blochstech.bitcoincardterminal.MainActivity.GetMainContext(), ((\"ERR: Attempted to convert invalid integer \" + value) + \" to currency.\"), Toast.LENGTH_LONG).show(); return com.blochstech.bitcoincardterminal.Interfaces.Currency.MicroBitcoins; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7478/buggy-version/src.com.blochstech.bitcoincardterminal.Interfaces.Currency.java", "BodyUseAPI": ["android.util.Log.e(Tags.APP_TAG,java.lang.String)", "android.widget.Toast.makeText(com.blochstech.bitcoincardterminal.MainActivity.GetMainContext(),java.lang.String,Toast.LENGTH_LONG)", "android.widget.Toast.makeText(com.blochstech.bitcoincardterminal.MainActivity.GetMainContext(), ((\"ERR: Attempted to convert invalid integer \" + value) + \" to currency.\"), Toast.LENGTH_LONG).show()"], "Fixed commit": "90c563ec99678833c3e7bfc037f61fdb9502ac69", "Url": "https://api.github.com/repos/BlochsTech/BitcoinCardTerminal", "Date": "2016-07-12T06:27:00Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.nbossard.packlist.model.Trip>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((oneTrip.getName()) != null) { firstLetter = oneTrip.getName().substring(0, 1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1975/buggy-version/app.src.main.groovy.com.nbossard.packlist.gui.TripAdapter.java", "BodyUseAPI": ["oneTrip.getName().substring(int,int)", "com.nbossard.packlist.model.Trip.getName()"], "Fixed commit": "07da1601e91aef76ab81fd42e555cc4c3ff971dc", "Url": "https://api.github.com/repos/nbossard/packlist", "Date": "2016-07-22T14:28:23Z"},
{"Line": "=>405", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isDateStringEqualToToday(dateInstallmentsLastQueued)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5709/buggy-version/budgetApp.src.main.java.budgetapp.models.BudgetModel.java", "BodyUseAPI": [], "Fixed commit": "82683a7e7c7d30dc094789a663cf6fd87342e9fa", "Url": "https://api.github.com/repos/steenstn/BudgetApp", "Date": "2015-02-07T19:16:41Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.eclipse.eatop.eastadl21.FunctionAllocation_allocatedElement) (eo)).getAllocateableElement().equals(rowObject)) { org.eclipse.emf.ecore.EObject eContainer = eo.eContainer(); if (eContainer instanceof org.eclipse.eatop.eastadl21.FunctionAllocation) { org.eclipse.eatop.eastadl21.FunctionAllocation funcAllocation = ((org.eclipse.eatop.eastadl21.FunctionAllocation) (eContainer)); allocations.add(funcAllocation.getTarget()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/119/buggy-version/examples.org.eclipse.eatop.examples.tableview.ui.src.org.eclipse.eatop.examples.tableview.accessors.FunctionAllocationAccessor.java", "BodyUseAPI": [], "Fixed commit": "81bb960b629036c6d0fec400437c23433223d8a5", "Url": "https://api.github.com/repos/Arccore/synligare", "Date": "2015-04-02T08:52:55Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((org.eclipse.eatop.eastadl21.FunctionAllocation_target) (eo)).getAllocationTarget().equals(rowObject)) { org.eclipse.emf.ecore.EObject eContainer = eo.eContainer(); if (eContainer instanceof org.eclipse.eatop.eastadl21.FunctionAllocation) { org.eclipse.eatop.eastadl21.FunctionAllocation funcAllocation = ((org.eclipse.eatop.eastadl21.FunctionAllocation) (eContainer)); allocations.add(funcAllocation.getAllocatedElement()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/119/buggy-version/examples.org.eclipse.eatop.examples.tableview.ui.src.org.eclipse.eatop.examples.tableview.accessors.FunctionAllocationAccessor.java", "BodyUseAPI": [], "Fixed commit": "81bb960b629036c6d0fec400437c23433223d8a5", "Url": "https://api.github.com/repos/Arccore/synligare", "Date": "2015-04-02T08:52:55Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fd) != null) { fd.messageSent(monitored, time, MessageType.PING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/566/buggy-version/src.br.edu.ufcg.lsd.oursim.entities.ActiveEntity.java", "BodyUseAPI": [], "Fixed commit": "f29b33e1d1c45e27a91160109ed71dc74f7431d5", "Url": "https://api.github.com/repos/abmargb/oursim-ext", "Date": "2011-07-15T22:29:51Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fd) != null) { fd.messageReceived(monitored, time, MessageType.PING); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/566/buggy-version/src.br.edu.ufcg.lsd.oursim.entities.ActiveEntity.java", "BodyUseAPI": [], "Fixed commit": "f29b33e1d1c45e27a91160109ed71dc74f7431d5", "Url": "https://api.github.com/repos/abmargb/oursim-ext", "Date": "2011-07-15T22:29:51Z"},
{"Line": "=>74", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ourSim.getBooleanProperty(Configuration.PROP_USE_FAILURE_DETECTOR)) { br.edu.ufcg.lsd.oursim.events.Event isItAliveSentEvent = ourSim.createEvent(FailureDetectionEvents.IS_IT_ALIVE_SENT, (time + (interestedObj.getTimeToNextPing(monitored, time))), interested, monitored); ourSim.addEvent(isItAliveSentEvent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/566/buggy-version/src.br.edu.ufcg.lsd.oursim.events.fd.MonitorUtil.java", "BodyUseAPI": ["br.edu.ufcg.lsd.oursim.OurSim.createEvent(FailureDetectionEvents.IS_IT_ALIVE_SENT,(time + (interestedObj.getTimeToNextPing(monitored, time))),java.lang.String,java.lang.String)", "br.edu.ufcg.lsd.oursim.OurSim.addEvent(br.edu.ufcg.lsd.oursim.events.Event)"], "Fixed commit": "f29b33e1d1c45e27a91160109ed71dc74f7431d5", "Url": "https://api.github.com/repos/abmargb/oursim-ext", "Date": "2011-07-15T22:29:51Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (ourSim.getBooleanProperty(Configuration.PROP_USE_FAILURE_DETECTOR)) { br.edu.ufcg.lsd.oursim.events.fd.MonitorUtil.checkLiveness(ourSim, getTime(), interested, monitored); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/566/buggy-version/src.br.edu.ufcg.lsd.oursim.events.fd.UpdateStatusAvailableEvent.java", "BodyUseAPI": ["br.edu.ufcg.lsd.oursim.events.fd.MonitorUtil.checkLiveness(br.edu.ufcg.lsd.oursim.OurSim,getTime(),java.lang.String,java.lang.String)"], "Fixed commit": "f29b33e1d1c45e27a91160109ed71dc74f7431d5", "Url": "https://api.github.com/repos/abmargb/oursim-ext", "Date": "2011-07-15T22:29:51Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.RouteController.findNodeForDoor(com.Door)", "com.RouteController.findNodeForDoor(com.Door)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if ((startNode == null) || (endNode == null)) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8620/buggy-version/src.main.java.com.RouteController.java", "BodyUseAPI": [], "Fixed commit": "ed25fe64fd04df6e0c2dea50cea9ffbfea1ed15a", "Url": "https://api.github.com/repos/JDSustar/wayfinding-osu-capstone-api", "Date": "2015-04-14T00:24:53Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.RouteController.findNodeForDoor(com.Door)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (endNode == null) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8620/buggy-version/src.main.java.com.RouteController.java", "BodyUseAPI": [], "Fixed commit": "ed25fe64fd04df6e0c2dea50cea9ffbfea1ed15a", "Url": "https://api.github.com/repos/JDSustar/wayfinding-osu-capstone-api", "Date": "2015-04-14T00:24:53Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((passedInTown.getDescription().size()) == 0) { passedInTown.getDescription().add(ev.getText().toString()); }else { passedInTown.getDescription().set(0, ev.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4349/buggy-version/PaperTown.app.src.main.java.edu.ucsb.cs.cs190i.papertown.town.newtown.NewDescriptionActivity.java", "BodyUseAPI": ["edu.ucsb.cs.cs190i.papertown.models.Town.getDescription()", "passedInTown.getDescription().set(int,ev.getText().toString())", "passedInTown.getDescription().add(ev.getText().toString())", "edu.ucsb.cs.cs190i.papertown.models.Town.getDescription()"], "Fixed commit": "2da03068943891df7af48d2c51638f25d64fd45d", "Url": "https://api.github.com/repos/keyrrae/PaperTown", "Date": "2017-06-10T17:39:31Z"},
{"Line": "=>159", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAttached()) { item.show(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5872/buggy-version/src.main.java.ru.fly.client.ui.panel.tab.TabPanel.java", "BodyUseAPI": [], "Fixed commit": "72bb7f46adeaad2448c2c588a454525c3b05c3de", "Url": "https://api.github.com/repos/filius/fly-gwt", "Date": "2015-07-23T00:01:25Z"},
{"Line": "=>33", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["player.getInventory().getBoots()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((boots.getItemMeta().getLore()) != null) { if (boots.getItemMeta().getLore().contains(Main.ICE_SKATES_ITEM_IDENTIFIER)) { if ((io.github.legosteen11.iceSkates.Main.PLAYERSPECIFIC_SKATE_ITEMS) && (!(boots.getItemMeta().getLore().contains(player.getUniqueId().toString())))) { return; } if ((player.getPotionEffect(PotionEffectType.SPEED)) != null) { if ((player.getPotionEffect(PotionEffectType.SPEED).getDuration()) > ((duration) - (timePassedBeforeCheck))) { return; } } if (((java.lang.Math.abs(((e.getFrom().getX()) - (e.getTo().getX())))) > (minimumDifference)) || ((java.lang.Math.abs(((e.getFrom().getZ()) - (e.getTo().getZ())))) > (minimumDifference))) { org.bukkit.Location location = e.getTo().clone(); location.setY(((e.getTo().getY()) - 1)); org.bukkit.Material blockType = location.getBlock().getType(); if (((blockType == (org.bukkit.Material.ICE)) || (blockType == (org.bukkit.Material.PACKED_ICE))) || (blockType == (org.bukkit.Material.FROSTED_ICE))) { player.addPotionEffect(new org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType.SPEED, duration, speed)); } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2056/buggy-version/src.io.github.legosteen11.iceSkates.Listeners.PlayerMove.java", "BodyUseAPI": ["org.bukkit.inventory.ItemStack.getItemMeta()", "boots.getItemMeta().getLore().contains(Main.ICE_SKATES_ITEM_IDENTIFIER)", "boots.getItemMeta().getLore()", "boots.getItemMeta().getLore().contains(player.getUniqueId().toString())", "boots.getItemMeta().getLore()", "org.bukkit.inventory.ItemStack.getItemMeta()"], "Fixed commit": "cadb13d8a6382315f98c44c9cf2d5d43fcef44a8", "Url": "https://api.github.com/repos/Legosteen11/iceSkates", "Date": "2017-02-09T19:42:46Z"},
{"Line": "=>29", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((capienza) == null) capienza = 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2045/buggy-version/src.main.java.it.tecnosphera.booking.classroom.model.Aula.java", "BodyUseAPI": [], "Fixed commit": "73631a7885852687a1575396a39d767a9a1f2222", "Url": "https://api.github.com/repos/madamadore/ClassroomBooking", "Date": "2016-08-02T13:10:21Z"},
{"Line": "=>174", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(member.isUseAlias())) roomInfo += (((\" \" + (org.symphonyoss.webdesk.constants.WebDeskConstants.MEMBER_LABEL)) + \": \") + (member.getEmail())) + (org.symphonyoss.ai.constants.MLTypes.BREAK); else roomInfo += (((\" \" + (org.symphonyoss.webdesk.constants.WebDeskConstants.MEMBER_LABEL)) + \": \") + (member.getAlias())) + (org.symphonyoss.ai.constants.MLTypes.BREAK);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5178/buggy-version/web-desk.src.main.java.org.symphonyoss.webdesk.models.calls.MultiChatHelpCall.java", "BodyUseAPI": ["org.symphonyoss.webdesk.models.users.Member.getEmail()", "org.symphonyoss.webdesk.models.users.Member.getAlias()"], "Fixed commit": "6f6df9959874045790969ecb52216d7b213a1085", "Url": "https://api.github.com/repos/symphonyoss/helpdesk-bot", "Date": "2016-07-20T14:01:47Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (nameAndType[1].equals(\"java.lang.Integer\")) { try { value = java.lang.Integer.valueOf(((java.lang.String) (value))); } catch (java.lang.NumberFormatException e) { throw new org.mobicents.slee.container.management.console.client.ManagementConsoleException((((\"Value of \" + (nameAndType[0])) + \" should be java.lang.Integer. \") + (e.getMessage()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7032/buggy-version/tools.slee-management-console.server.src.main.java.org.mobicents.slee.container.management.console.server.PropertiesInfoUtils.java", "BodyUseAPI": [], "Fixed commit": "c835fe627dfa424bc9e81f9ee4a2951125d7cba1", "Url": "https://api.github.com/repos/SergeyLee/jain-slee", "Date": "2016-02-26T12:49:13Z"},
{"Line": "=>793", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.araqne.msgbus.Request.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (minFreeDiskSpaceType != null) { if ((!(minFreeDiskSpaceType.equals(\"Percentage\"))) && (!(minFreeDiskSpaceType.equals(\"Megabyte\")))) throw new org.araqne.msgbus.MsgbusException(\"logdb\", \"invalid-unit\"); else { m.put(\"min_free_disk_space_type\", minFreeDiskSpaceType); if (minFreeDiskSpaceType.equals(\"Percentage\")) { reqParams.put(\"disk_space_unit\", \"%\"); }else { reqParams.put(\"disk_space_unit\", \"MB\"); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1167/buggy-version/araqne-logdb.src.main.java.org.araqne.logdb.msgbus.ManagementPlugin.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String,java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)", "java.lang.String.equals(java.lang.String)"], "Fixed commit": "a3b3bc101c5da0a4f925aed42c715208341b4685", "Url": "https://api.github.com/repos/araqne/logdb", "Date": "2015-02-11T08:05:25Z"},
{"Line": "=>493", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (nodeView) { for (org.gephi.graph.api.Edge e : graphStore.edgeStore) { boolean t = edgeBitVector.get(e.getStoreId()); if (t && ((!(nodeBitVector.get(e.getSource().getStoreId()))) || (!(nodeBitVector.get(e.getTarget().getStoreId()))))) { removeEdge(((org.gephi.graph.impl.EdgeImpl) (e))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1260/buggy-version/store.src.main.java.org.gephi.graph.impl.GraphViewImpl.java", "BodyUseAPI": [], "Fixed commit": "c2548f4f33d7d6cfbce27de570839f9dafd055a3", "Url": "https://api.github.com/repos/gephi/graphstore", "Date": "2015-11-21T14:35:22Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["exp.getType().isSequencing()", "uk.ac.ebi.fg.annotare2.integration.DataFileManager.getAssignedFiles(uk.ac.ebi.fg.annotare2.db.model.Submission,FileType.RAW_FILE)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isSequencing && ((rawDataFiles.size()) > 0)) { if (!(ftpManager.doesExist(ftpSubDirectory))) { ftpManager.createDirectory(ftpSubDirectory); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5782/buggy-version/app.integration.ae-integration.src.main.java.uk.ac.ebi.fg.annotare2.integration.AeIntegrationWatchdog.java", "BodyUseAPI": [], "Fixed commit": "b0310f8a2a4d1f1c7dc679137c62529ddb5c86e1", "Url": "https://api.github.com/repos/arrayexpress/annotare2", "Date": "2017-07-05T08:42:31Z"},
{"Line": "=>23", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i < (getCount())) { android.os.Bundle args = new android.os.Bundle(); args.putString(PhotoFragment.ARG_IMAGE_URL, photos.get(i).getPhotoURL()); fragment.setArguments(args); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3853/buggy-version/src.com.lopefied.pepemon.fragment.ViewPhotoFragmentAdapter.java", "BodyUseAPI": ["android.os.Bundle.putString(PhotoFragment.ARG_IMAGE_URL,photos.get(i).getPhotoURL())", "photos.get(i).getPhotoURL()", "java.util.List<com.lopefied.pepemon.db.model.Photo>.get(int)"], "Fixed commit": "0c5efbce2a3eb04b2e1655e45fbd7fc82bc9897d", "Url": "https://api.github.com/repos/z0lope0z/pepemon", "Date": "2013-02-10T09:00:06Z"},
{"Line": "=>38", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.acme.ecommerce.repository.ProductRepository.findOne(java.lang.Long)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (result == null) { throw new com.acme.ecommerce.web.exceptions.ProductIdNotFoundException(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3257/buggy-version/src.main.java.com.acme.ecommerce.service.ProductServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "2f1a269a7f76367cf6f620a6d9d6de0cd2703f9b", "Url": "https://api.github.com/repos/dbriesz/e-commerce-shopping-cart", "Date": "2017-03-13T23:24:17Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (progressDialog.isShowing()) progressDialog.dismiss();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/395/buggy-version/CacheCleaner.src.main.java.com.frozendevs.cache.cleaner.activity.CleanerActivity.java", "BodyUseAPI": ["android.app.ProgressDialog.dismiss()"], "Fixed commit": "92a8c6187751fc5d299d4b0d6216e0bc60abf543", "Url": "https://api.github.com/repos/Frozen-Developers/android-cache-cleaner", "Date": "2014-01-08T21:06:20Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isProgressBarShowing()) showProgressBar(false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/395/buggy-version/CacheCleaner.src.main.java.com.frozendevs.cache.cleaner.activity.CleanerActivity.java", "BodyUseAPI": [], "Fixed commit": "92a8c6187751fc5d299d4b0d6216e0bc60abf543", "Url": "https://api.github.com/repos/Frozen-Developers/android-cache-cleaner", "Date": "2014-01-08T21:06:20Z"},
{"Line": "=>918", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["e.attributes.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (conflictResolver == null) { conflictResolver = \"\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2233/buggy-version/src.frontend.org.voltdb.compiler.DDLCompiler.java", "BodyUseAPI": [], "Fixed commit": "9d1af82784719ef0e0eb6c013faeb9749bfb9fc7", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2017-08-09T18:43:49Z"},
{"Line": "=>161", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(twoPaneLayout)) { mPresenter.onResume(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3586/buggy-version/app.src.main.java.com.axolotl.popmovies.ui.MainFragment.java", "BodyUseAPI": [], "Fixed commit": "7f41e7a86cc39e65f7c53692f4b56068f13c7835", "Url": "https://api.github.com/repos/Axolot1/popmovies", "Date": "2016-04-28T09:28:33Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (canDash) isDashing = true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7054/buggy-version/src.rsmg.model.object.unit.PCharacter.java", "BodyUseAPI": [], "Fixed commit": "f2ecc1637a3ef63c98741d11b835fc704e20bf77", "Url": "https://api.github.com/repos/MaTachi/Robots-Stole-My-Girlfriend", "Date": "2012-04-21T15:02:14Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasListFragment()) { ft.add(R.id.fragment_container, fragment, tagForFragment); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3260/buggy-version/src.org.wordpress.android.ui.reader.ReaderActivity.java", "BodyUseAPI": [], "Fixed commit": "88da6145789a20885702f5406ed48b11b44357f7", "Url": "https://api.github.com/repos/wordpress-mobile/WordPress-Android", "Date": "2014-04-17T20:19:46Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useTDC) { dc = ctofPix[ilmap].Lmap_t; mapz = ctofPix[ilmap].Lmap_t_z; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7280/buggy-version/clas-fc.src.org.clas.fcmon.tools.FCDetector.java", "BodyUseAPI": [], "Fixed commit": "615a5c834437d56099f9039b344014aca213b024", "Url": "https://api.github.com/repos/forcar/fc", "Date": "2017-09-12T04:02:55Z"},
{"Line": "=>216", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!useTDC) { dc = ctofPix[ilmap].Lmap_a; mapz = ctofPix[ilmap].Lmap_a_z; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7280/buggy-version/clas-fc.src.org.clas.fcmon.tools.FCDetector.java", "BodyUseAPI": [], "Fixed commit": "615a5c834437d56099f9039b344014aca213b024", "Url": "https://api.github.com/repos/forcar/fc", "Date": "2017-09-12T04:02:55Z"},
{"Line": "=>100", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.peg4d.regex.RegexObject.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (((child.getQuantifier()) != null) && (!(child.getTag().equals(\"Times\")))) { continuation.pushHead(child); continuation = continuationBasedConversion(((org.peg4d.regex.RegSeq) (child)), continuation); child.rmQuantifier(); return continuation.get(0); }else { target.concat(continuation); return target; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5847/buggy-version/src.org.peg4d.regex.RegexObjectConverter.java", "BodyUseAPI": ["org.peg4d.regex.RegexObject.pushHead(org.peg4d.regex.RegexObject)", "org.peg4d.regex.RegexObject.rmQuantifier()"], "Fixed commit": "2c34573227bb7c55bf2da71ce54794bb39bdd4f5", "Url": "https://api.github.com/repos/Y--Tamura/peg4d-java", "Date": "2015-01-14T11:40:36Z"},
{"Line": "=>122", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.peg4d.regex.RegexObject.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((rHead instanceof org.peg4d.regex.RegCharSet) && (charSet.contains(rHead))) { if (((charSet.getQuantifier()) != null) && (!(charSet.getTag().equals(\"Times\")))) { return continuationBasedConversion(charSet, continuation); }else { target.concat(continuation); return target; } }else { target.concat(continuation); return target; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5847/buggy-version/src.org.peg4d.regex.RegexObjectConverter.java", "BodyUseAPI": ["charSet.getTag().equals(java.lang.String)", "org.peg4d.regex.RegCharSet.getQuantifier()", "org.peg4d.regex.RegexObjectConverter.continuationBasedConversion(org.peg4d.regex.RegCharSet,org.peg4d.regex.RegexObject)", "org.peg4d.regex.RegCharSet.getTag()"], "Fixed commit": "2c34573227bb7c55bf2da71ce54794bb39bdd4f5", "Url": "https://api.github.com/repos/Y--Tamura/peg4d-java", "Date": "2015-01-14T11:40:36Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (entityType != null) { org.apache.uima.cas.Type type = mappingProvider.getTagType(entityType); de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity neAnno = ((de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity) (cas.createAnnotation(type, entityBegin, entityEnd))); neAnno.setValue(entityType); neAnno.addToIndexes(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/217/buggy-version/dkpro-core-stanfordnlp-gpl.src.main.java.de.tudarmstadt.ukp.dkpro.core.stanfordnlp.StanfordNamedEntityRecognizer.java", "BodyUseAPI": ["de.tudarmstadt.ukp.dkpro.core.api.ner.type.NamedEntity.setValue(java.lang.String)", "de.tudarmstadt.ukp.dkpro.core.api.resources.MappingProvider.getTagType(java.lang.String)"], "Fixed commit": "d712259d42413b5730fc78e7616c89dfde8b79b0", "Url": "https://api.github.com/repos/kouylekov-usit/dkpro-core", "Date": "2017-03-16T18:03:53Z"},
{"Line": "=>927", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mService.isConnected()) listFragment.updateChannelList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5818/buggy-version/src.com.morlunk.mumbleclient.app.ChannelActivity.java", "BodyUseAPI": [], "Fixed commit": "dd62fdc3404858fbea1924bd5edb79130d2664b5", "Url": "https://api.github.com/repos/lugkhast/Plumble", "Date": "2013-03-27T09:57:18Z"},
{"Line": "=>933", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mService.isConnected()) listFragment.updateChannelList();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5818/buggy-version/src.com.morlunk.mumbleclient.app.ChannelActivity.java", "BodyUseAPI": [], "Fixed commit": "dd62fdc3404858fbea1924bd5edb79130d2664b5", "Url": "https://api.github.com/repos/lugkhast/Plumble", "Date": "2013-03-27T09:57:18Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(programmeQueries.hasNext())) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3564/buggy-version/src.main.java.org.atlasapi.remotesite.bbc.nitro.PaginatedProgrammeRequest.java", "BodyUseAPI": [], "Fixed commit": "aca4c6edd34c177bcf422c20f59830fc41468a9a", "Url": "https://api.github.com/repos/atlasapi/atlas", "Date": "2016-05-18T11:52:49Z"},
{"Line": "=>175", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!read) { setPagesRead(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8827/buggy-version/app.src.main.java.ar.rulosoft.mimanganu.componentes.Chapter.java", "BodyUseAPI": [], "Fixed commit": "b780979f7cf738bebaec1c37b60cbdb62c3bd462", "Url": "https://api.github.com/repos/raulhaag/MiMangaNu", "Date": "2016-05-06T16:24:26Z"},
{"Line": "=>193", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mustBootstrap) throw new php.runtime.launcher.LaunchException(\"Please set value of the `bootstrap.file` option in the launcher.conf file\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4869/buggy-version/jphp-core.src.php.runtime.launcher.Launcher.java", "BodyUseAPI": [], "Fixed commit": "5806569b70df26c30fde6a7d20e0d944924b6ccb", "Url": "https://api.github.com/repos/dim-s/jphp", "Date": "2014-03-10T13:40:13Z"},
{"Line": "=>854", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (m_field.getValue().isEmpty()) { updateFormFeedback(FormFeedback.NONE, \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6531/buggy-version/spiffyui.src.main.java.org.spiffyui.client.widgets.multivaluesuggest.MultivalueSuggestBoxBase.java", "BodyUseAPI": [], "Fixed commit": "99f8799aef531c92bb5332ca3051a607e3983893", "Url": "https://api.github.com/repos/spiffyui/spiffyui", "Date": "2014-03-03T20:56:35Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["is.ru.stringcalculator.Calculator.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((is.ru.stringcalculator.Calculator.toInt(tokens[i])) < 1000) sum = sum + (is.ru.stringcalculator.Calculator.toInt(tokens[i]));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/319/buggy-version/stringcalculator.src.main.java.is.ru.stringcalculator.Calculator.java", "BodyUseAPI": ["is.ru.stringcalculator.Calculator.toInt(java.lang.String)"], "Fixed commit": "91b213d8b6702f11387f6890de8018b34e66b8f9", "Url": "https://api.github.com/repos/helgib10/StringCalculator", "Date": "2014-10-18T22:00:15Z"},
{"Line": "=>473", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["gpu.getTr().getWorld()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (world == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8913/buggy-version/src.main.java.org.jtrfp.trcl.core.Renderer.java", "BodyUseAPI": [], "Fixed commit": "98c95252035e5eeb9dfbfd094ba73112f13dae6b", "Url": "https://api.github.com/repos/jtrfp/terminal-recall", "Date": "2014-11-03T04:18:36Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fedoraproject.maven.dependency.DependencyExtractor.extract(org.fedoraproject.maven.dependency.DependencyExtractionRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((result.getJavaVersion()) != null) metadata.addJavaVersionBuildDependency(result.getJavaVersion());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3150/buggy-version/xmvn-core.src.main.java.org.fedoraproject.maven.installer.impl.DefaultInstaller.java", "BodyUseAPI": ["org.fedoraproject.maven.dependency.DependencyExtractionResult.getJavaVersion()", "org.fedoraproject.maven.installer.impl.FragmentFile.addJavaVersionBuildDependency(result.getJavaVersion())"], "Fixed commit": "1cd3a55224b96a314bf602db01d5f2b225eeef68", "Url": "https://api.github.com/repos/mizdebsk/xmvn", "Date": "2013-09-02T14:33:04Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.fedoraproject.maven.dependency.DependencyExtractor.extract(org.fedoraproject.maven.dependency.DependencyExtractionRequest)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((result.getJavaVersion()) != null) metadata.addJavaVersionRuntimeDependency(result.getJavaVersion());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3150/buggy-version/xmvn-core.src.main.java.org.fedoraproject.maven.installer.impl.DefaultInstaller.java", "BodyUseAPI": ["org.fedoraproject.maven.installer.impl.FragmentFile.addJavaVersionRuntimeDependency(result.getJavaVersion())", "org.fedoraproject.maven.dependency.DependencyExtractionResult.getJavaVersion()"], "Fixed commit": "1cd3a55224b96a314bf602db01d5f2b225eeef68", "Url": "https://api.github.com/repos/mizdebsk/xmvn", "Date": "2013-09-02T14:33:04Z"},
{"Line": "=>2459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.cloud.dc.dao.DataCenterDao.findById(vm.getDataCenterId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((zone.getNetworkType()) == (com.cloud.dc.DataCenter.NetworkType.Basic)) { defaultNetwork = _networkModel.getExclusiveGuestNetwork(zone.getId()); }else { if (zone.isSecurityGroupEnabled()) { com.cloud.vm.NicVO defaultNic = _nicDao.findDefaultNicForVM(vm.getId()); if (defaultNic != null) { defaultNetwork = _networkDao.findById(defaultNic.getNetworkId()); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2686/buggy-version/server.src.com.cloud.vm.UserVmManagerImpl.java", "BodyUseAPI": ["com.cloud.dc.DataCenterVO.isSecurityGroupEnabled()", "com.cloud.network.NetworkModel.getExclusiveGuestNetwork(zone.getId())", "com.cloud.dc.DataCenterVO.getId()"], "Fixed commit": "0aff983cc81895a45295df6671b584d45975453e", "Url": "https://api.github.com/repos/DaanHoogland/cloudstack", "Date": "2016-01-12T09:56:07Z"},
{"Line": "=>2471", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((defaultNetwork == null) || ((defaultNetwork.getGuestType()) != (Network.GuestType.Shared))) { throw new com.cloud.exception.InvalidParameterValueException((\"Cannot find default network for vm:\" + (vm.getId()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2686/buggy-version/server.src.com.cloud.vm.UserVmManagerImpl.java", "BodyUseAPI": [], "Fixed commit": "0aff983cc81895a45295df6671b584d45975453e", "Url": "https://api.github.com/repos/DaanHoogland/cloudstack", "Date": "2016-01-12T09:56:07Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFilterSecondTextureCoordinateAttribute) >= 0) { android.opengl.GLES20.glEnableVertexAttribArray(mFilterSecondTextureCoordinateAttribute); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3485/buggy-version/gpuimage.src.jp.co.cyberagent.android.gpuimage.GPUImageTwoInputFilter.java", "BodyUseAPI": [], "Fixed commit": "83c10466775244c817177c7d74abce132611ce6b", "Url": "https://api.github.com/repos/houshunwei/TestGpuImageFilter", "Date": "2017-05-25T14:11:05Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mFilterSecondTextureCoordinateAttribute) >= 0) { android.opengl.GLES20.glEnableVertexAttribArray(mFilterSecondTextureCoordinateAttribute); mTexture2CoordinatesBuffer.position(0); android.opengl.GLES20.glVertexAttribPointer(mFilterSecondTextureCoordinateAttribute, 2, GLES20.GL_FLOAT, false, 0, mTexture2CoordinatesBuffer); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3485/buggy-version/gpuimage.src.jp.co.cyberagent.android.gpuimage.GPUImageTwoInputFilter.java", "BodyUseAPI": [], "Fixed commit": "83c10466775244c817177c7d74abce132611ce6b", "Url": "https://api.github.com/repos/houshunwei/TestGpuImageFilter", "Date": "2017-05-25T14:11:05Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (range.getDirection().equals(\"desc\")) { since = safeGetProperty(maxRs, range.getSortProperty()); max = safeGetProperty(minRs, range.getSortProperty()); }else { since = safeGetProperty(minRs, range.getSortProperty()); max = safeGetProperty(maxRs, range.getSortProperty()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2293/buggy-version/trenako-services.src.main.java.com.trenako.results.RollingStockResults.java", "BodyUseAPI": [], "Fixed commit": "85feaa926e7f20db1b1902e46c603065bd1326ad", "Url": "https://api.github.com/repos/CarloMicieli/trenako", "Date": "2012-10-13T09:26:26Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((types.size()) > 0) { this.type = types.get(0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7938/buggy-version/modules.ballerina-lang.src.main.java.org.wso2.ballerinalang.compiler.tree.expressions.BLangInvocation.java", "BodyUseAPI": [], "Fixed commit": "4a3fa9750000dec1c8ed33ed47be0bb346999800", "Url": "https://api.github.com/repos/ballerina-platform/ballerina-lang", "Date": "2017-10-05T12:37:57Z"},
{"Line": "=>1105", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (start == end) { return ((\"c.\" + start) + \"del\") + (seqComp.getReferenceAllele().substring(seqComp.getAlternateAllele().length()).toUpperCase()); }else { return ((((\"c.\" + start) + \"_\") + end) + \"del\") + (seqComp.getReferenceAllele().substring(seqComp.getAlternateAllele().length()).toUpperCase()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8088/buggy-version/src.main.java.org.broadinstitute.hellbender.tools.funcotator.FuncotatorUtils.java", "BodyUseAPI": [], "Fixed commit": "a6e330b236bea624417809b2b3f758ca7944f0c0", "Url": "https://api.github.com/repos/broadinstitute/gatk", "Date": "2017-11-08T15:31:37Z"},
{"Line": "=>50", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((clusteredPSMReport.getSequence()) != null) && ((clusteredPSMReport.getSequence().length()) > 0)) { int position = 1; for (char character : clusteredPSMReport.getSequence().toCharArray()) { translatedSequence.append(character); if ((modificationsMap.get(position)) != null) { translatedSequence.append(java.lang.String.format(\"(%s)\", java.lang.String.join(\",\", modificationsMap.get(position)))); } position++; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6695/buggy-version/src.main.java.uk.ac.ebi.pride.proteogenomics.pogo.model.translator.PoGoEntryTranslatorForClusteredPsmReport.java", "BodyUseAPI": ["clusteredPSMReport.getSequence().toCharArray()", "uk.ac.ebi.pride.spectracluster.repo.model.ClusteredPSMReport.getSequence()"], "Fixed commit": "5e287cb236aedeea02e1759e33d854a4317b4024", "Url": "https://api.github.com/repos/Proteogenomics/libpogo", "Date": "2017-06-14T12:49:22Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((clusteredPSMReport.getModifications()) != null) { for (uk.ac.ebi.pride.archive.dataprovider.identification.ModificationProvider modification : clusteredPSMReport.getModifications()) { java.lang.String modificationShortName = uk.ac.ebi.pride.utilities.pridemod.ModReader.getInstance().getShortNamePRIDEModByChildAccession(modification.getAccession()); if ((modificationsMap.get(modification.getMainPosition())) == null) { modificationsMap.put(modification.getMainPosition(), new java.util.ArrayList()); } modificationsMap.get(modification.getMainPosition()).add(modificationShortName); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6695/buggy-version/src.main.java.uk.ac.ebi.pride.proteogenomics.pogo.model.translator.PoGoEntryTranslatorForClusteredPsmReport.java", "BodyUseAPI": ["uk.ac.ebi.pride.spectracluster.repo.model.ClusteredPSMReport.getModifications()"], "Fixed commit": "5e287cb236aedeea02e1759e33d854a4317b4024", "Url": "https://api.github.com/repos/Proteogenomics/libpogo", "Date": "2017-06-14T12:49:22Z"},
{"Line": "=>1407", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((count < 0) && ((_model) instanceof org.zkoss.zul.ext.Pageable)) { org.zkoss.zul.ext.Pageable p = ((org.zkoss.zul.ext.Pageable) (_model)); int actpg = p.getActivePage(); int maxPageIndex = (p.getPageCount()) - 1; if (actpg > maxPageIndex) { p.setActivePage(maxPageIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1065/buggy-version/zul.src.org.zkoss.zul.Listbox.java", "BodyUseAPI": [], "Fixed commit": "4636ae9f8bb485da05a34ed96624c022086d9bf1", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2016-05-11T05:22:04Z"},
{"Line": "=>1941", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isRemove && ((_model) instanceof org.zkoss.zul.ext.Pageable)) { org.zkoss.zul.ext.Pageable p = ((org.zkoss.zul.ext.Pageable) (_model)); int actpg = p.getActivePage(); int maxPageIndex = (p.getPageCount()) - 1; if (actpg > maxPageIndex) { p.setActivePage(maxPageIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1065/buggy-version/zul.src.org.zkoss.zul.Listbox.java", "BodyUseAPI": [], "Fixed commit": "4636ae9f8bb485da05a34ed96624c022086d9bf1", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2016-05-11T05:22:04Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.zul.Grid.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((count < 0) && (model instanceof org.zkoss.zul.ext.Pageable)) { org.zkoss.zul.ext.Pageable p = ((org.zkoss.zul.ext.Pageable) (model)); int actpg = p.getActivePage(); int maxPageIndex = (p.getPageCount()) - 1; if (actpg > maxPageIndex) { p.setActivePage(maxPageIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1065/buggy-version/zul.src.org.zkoss.zul.Rows.java", "BodyUseAPI": [], "Fixed commit": "4636ae9f8bb485da05a34ed96624c022086d9bf1", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2016-05-11T05:22:04Z"},
{"Line": "=>565", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zkoss.zul.Grid.getModel()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (isRemove && (model instanceof org.zkoss.zul.ext.Pageable)) { org.zkoss.zul.ext.Pageable p = ((org.zkoss.zul.ext.Pageable) (model)); int actpg = p.getActivePage(); int maxPageIndex = (p.getPageCount()) - 1; if (actpg > maxPageIndex) { p.setActivePage(maxPageIndex); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1065/buggy-version/zul.src.org.zkoss.zul.Rows.java", "BodyUseAPI": [], "Fixed commit": "4636ae9f8bb485da05a34ed96624c022086d9bf1", "Url": "https://api.github.com/repos/christopher-szu/zk", "Date": "2016-05-11T05:22:04Z"},
{"Line": "=>1900", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mCurrentFragment.posts) == null) { if (mCurrentFragment.isAdded()) { mCurrentFragment.doAdapter(); }else { me.ccrama.redditslide.Activities.MainActivity.hasDone = false; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9210/buggy-version/app.src.main.java.me.ccrama.redditslide.Activities.MainActivity.java", "BodyUseAPI": ["me.ccrama.redditslide.Fragments.SubmissionsView.isAdded()", "me.ccrama.redditslide.Fragments.SubmissionsView.doAdapter()"], "Fixed commit": "d4a77e6eea383424ae3c35420281894b553e6239", "Url": "https://api.github.com/repos/Nxt3/Slide", "Date": "2016-03-04T23:48:42Z"},
{"Line": "=>475", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((model.getClass()) == (java.util.LinkedHashMap.class)) { return com.github.jknack.handlebars.Context.newContext(model); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9097/buggy-version/handlebars.src.main.java.com.github.jknack.handlebars.Options.java", "BodyUseAPI": ["com.github.jknack.handlebars.Context.newContext(java.lang.Object)"], "Fixed commit": "8211cc51daff2e20f452a634d231cbe9b05df890", "Url": "https://api.github.com/repos/bartekdobija/handlebars.java", "Date": "2014-08-12T01:58:56Z"},
{"Line": "=>613", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((port) != 0) { java.net.SocketAddress localDestination; if ((localAddress) != null) { localDestination = new java.net.InetSocketAddress(localAddress, localPort); }else { localDestination = new java.net.InetSocketAddress(localPort); } future = bootstrap.connect(remoteDestination, localDestination); }else { future = bootstrap.connect(remoteDestination); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3951/buggy-version/hornetq-core-client.src.main.java.org.hornetq.core.remoting.impl.netty.NettyConnector.java", "BodyUseAPI": [], "Fixed commit": "990ad92c0edc7d7c3b93dbd4993f697023d9040e", "Url": "https://api.github.com/repos/gaohoward/hornetq", "Date": "2013-04-15T15:55:00Z"},
{"Line": "=>185", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (tmp[0].equals(\"IgnoreEmptyParameters\")) continue; else { if (((tmp.length) == 1) || ((tmp[1].length()) == 0)) { if (de.ipbhalle.phenomenal.main.MetFragParameterExporter.ignoreEmptyParameters) { continue; }else { de.ipbhalle.phenomenal.main.MetFragParameterExporter.jlog.warning(((\"Error: Missing value for \" + (arguments_splitted[i])) + \". Execution halted.\")); return false; } } de.ipbhalle.phenomenal.main.MetFragParameterExporter.parameters.put(tmp[0], tmp[1]); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4318/buggy-version/src.main.java.de.ipbhalle.phenomenal.main.MetFragParameterExporter.java", "BodyUseAPI": ["java.lang.String.length()", "java.util.Hashtable<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "a75d1fbd8ed32aceee8ac51498e98c4cbcf6e49c", "Url": "https://api.github.com/repos/c-ruttkies/MetFragParameterExport", "Date": "2017-02-10T15:09:30Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["event.getComment().getOwner()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (owner instanceof com.atlassian.confluence.pages.AbstractPage) { if (owner instanceof com.atlassian.confluence.pages.Page) { action = \"Page commented\"; }else { action = \"Blog commented\"; } message = getMessage(((com.atlassian.confluence.pages.AbstractPage) (owner)), action, false); java.util.List<java.lang.String> channels = this.getChannels(((com.atlassian.confluence.pages.AbstractPage) (owner))); if ((channels != null) && (!(channels.isEmpty()))) { channel = channels.get(0); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2420/buggy-version/src.main.java.com.bearychat.components.AnnotatedListener.java", "BodyUseAPI": [], "Fixed commit": "2bc6b01cd53adc1eaceb4c06bec1b7f78736b719", "Url": "https://api.github.com/repos/bearyinnovative/bearychat-for-confluence", "Date": "2015-10-13T17:48:57Z"},
{"Line": "=>266", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((saveCreativeBlocks) == null) || ((saveCreativeEntities) == null)) { return 100; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4159/buggy-version/src.main.java.com.turt2live.antishare.blocks.ChunkWrapper.java", "BodyUseAPI": [], "Fixed commit": "9f9eadae7ce0ee353423e2ce9fa56314006e7631", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2013-01-13T07:00:14Z"},
{"Line": "=>163", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((activeSaves.get(key)) == null) { activeSaves.put(key, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4159/buggy-version/src.main.java.com.turt2live.antishare.blocks.BlockManager.java", "BodyUseAPI": ["java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.Boolean>.put(java.lang.String,boolean)"], "Fixed commit": "9f9eadae7ce0ee353423e2ce9fa56314006e7631", "Url": "https://api.github.com/repos/turt2live/AntiShare", "Date": "2013-01-13T07:00:14Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((children) == null) { children = createChildrenList(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5683/buggy-version/runtime.Java.src.main.java.org.antlr.runtime.tree.BaseTree.java", "BodyUseAPI": [], "Fixed commit": "4d13d25c8bf19869160cc4b86ddf8963e57eb267", "Url": "https://api.github.com/repos/Zannick/antlr3", "Date": "2013-01-02T03:09:19Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user.isSet()) { if ((user.get().access()) == (AccessLevel.teacher)) { flash.card.java.model.Student s = new flash.card.java.model.Student(name, userID, pass); return this.db.putStudent(s); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6218/buggy-version/src.flash.card.java.model.School.java", "BodyUseAPI": ["user.get().access()", "flash.card.java.model.CurrentUser.get()"], "Fixed commit": "1f26ea1c47b8210a6573fe1d938411d01ed424f2", "Url": "https://api.github.com/repos/ddmills/flash.card.java", "Date": "2015-04-09T08:36:47Z"},
{"Line": "=>201", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endPos == (end)) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3010/buggy-version/cdap-api.src.main.java.co.cask.cdap.internal.io.SQLSchemaParser.java", "BodyUseAPI": [], "Fixed commit": "1eeb40657fa5fad5e5d750ee571135219eea2b32", "Url": "https://api.github.com/repos/caskdata/cdap", "Date": "2015-01-24T01:02:42Z"},
{"Line": "=>514", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.ndexbio.common.models.dao.postgresql.NetworkDAO.getMetaDataCollection(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((metadata.getMetaDataElement(NodesElement.ASPECT_NAME)) != null) { java.lang.Long cgL = metadata.getMetaDataElement(NodesElement.ASPECT_NAME).getConsistencyGroup(); if (cgL != null) cg = cgL.longValue(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8574/buggy-version/src.main.java.org.ndexbio.common.models.dao.postgresql.NetworkDAO.java", "BodyUseAPI": ["org.cxio.metadata.MetaDataCollection.getMetaDataElement(NodesElement.ASPECT_NAME)", "metadata.getMetaDataElement(NodesElement.ASPECT_NAME).getConsistencyGroup()"], "Fixed commit": "046068184aa8ccea7dc62a15288c29d96be676f7", "Url": "https://api.github.com/repos/ndexbio/ndex-rest", "Date": "2016-11-10T23:36:02Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((metadata.getMetaDataElement(NodesElement.ASPECT_NAME)) != null) && ((metadata.getMetaDataElement(NodesElement.ASPECT_NAME).getConsistencyGroup()) != null)) e.setConsistencyGroup(metadata.getMetaDataElement(NodesElement.ASPECT_NAME).getConsistencyGroup());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8574/buggy-version/src.main.java.org.ndexbio.common.cx.CXNetworkFileGenerator.java", "BodyUseAPI": ["org.cxio.metadata.MetaDataCollection.getMetaDataElement(NodesElement.ASPECT_NAME)", "metadata.getMetaDataElement(NodesElement.ASPECT_NAME).getConsistencyGroup()", "org.cxio.metadata.MetaDataElement.setConsistencyGroup(metadata.getMetaDataElement(NodesElement.ASPECT_NAME).getConsistencyGroup())"], "Fixed commit": "046068184aa8ccea7dc62a15288c29d96be676f7", "Url": "https://api.github.com/repos/ndexbio/ndex-rest", "Date": "2016-11-10T23:36:02Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.File.listFiles()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (contents == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2044/buggy-version/MultiSubDownloader.src.main.java.org.lodder.subtools.multisubdownloader.gui.workers.TypedRenameWorker.java", "BodyUseAPI": [], "Fixed commit": "1e6c2b6417f4a772b57ab34cf944ba623c0c5d63", "Url": "https://api.github.com/repos/phdelodder/SubTools", "Date": "2015-02-17T09:54:40Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (release != null) { publish(release.getFilename()); if ((release.getVideoType()) == (videoType)) renameAction.rename(file, release); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2044/buggy-version/MultiSubDownloader.src.main.java.org.lodder.subtools.multisubdownloader.gui.workers.TypedRenameWorker.java", "BodyUseAPI": ["org.lodder.subtools.sublibrary.model.Release.getFilename()", "org.lodder.subtools.multisubdownloader.actions.RenameAction.rename(java.io.File,org.lodder.subtools.sublibrary.model.Release)", "org.lodder.subtools.multisubdownloader.gui.workers.TypedRenameWorker.publish(release.getFilename())", "org.lodder.subtools.sublibrary.model.Release.getVideoType()"], "Fixed commit": "1e6c2b6417f4a772b57ab34cf944ba623c0c5d63", "Url": "https://api.github.com/repos/phdelodder/SubTools", "Date": "2015-02-17T09:54:40Z"},
{"Line": "=>369", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(authFlg)) || (authInputStatus)) { makeAndExecuteTTL(node, 1, null); jp.co.tabocom.teratermstation.Main main = ((jp.co.tabocom.teratermstation.Main) (getParent().getShell().getData(\"main\"))); if (main.isTtlOnly()) { org.eclipse.jface.dialogs.MessageDialog.openInformation(getParent().getShell(), \"TTL\u30de\u30af\u30ed\u751f\u6210\", \"TTL\u30de\u30af\u30ed\u3092\u751f\u6210\u3057\u307e\u3057\u305f\u3002\"); } }else { org.eclipse.jface.dialogs.MessageDialog.openError(getParent().getShell(), \"\u30b5\u30fc\u30d0\u63a5\u7d9a\", \"\u8a8d\u8a3c\u60c5\u5831\u304c\u5165\u529b\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2092/buggy-version/src.main.java.jp.co.tabocom.teratermstation.ui.EnvTabItem.java", "BodyUseAPI": [], "Fixed commit": "7e7817b8b062eb61e91202bdc7eceb33977b7d72", "Url": "https://api.github.com/repos/turbou/TeratermStation", "Date": "2015-11-05T07:59:01Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (com.effectiv.crm.util.ServletUtil.isRecycleRequest()) { mv.addObject(RECYCLE, true); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6385/buggy-version/crm.src.main.java.com.effectiv.crm.controller.AbstractBaseController.java", "BodyUseAPI": [], "Fixed commit": "1fdcad42841f6dbed28eaed7602ed01b69f212f6", "Url": "https://api.github.com/repos/kdhrubo/hooghlycrm", "Date": "2017-01-30T21:43:37Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (net.dreiucker.decdesclanguage.tracebility.data.DataCollector.DEBUG) { java.lang.System.out.println((\"MDD URL to decision: \" + uriString)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3265/buggy-version/net.dreiucker.DecDescLanguage.tracebility.src.net.dreiucker.decdesclanguage.tracebility.data.DataCollector.java", "BodyUseAPI": [], "Fixed commit": "9ec900971b462b43659bd548c1a21bc9441e63bd", "Url": "https://api.github.com/repos/MarkDrei/DecDescLang", "Date": "2016-09-21T14:36:11Z"},
{"Line": "=>782", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(downloadDriveTask.isCancelled())) setMusicTrack((((util.MAMUtil.getMusicPath()) + musicName) + \".mp3\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7428/buggy-version/src.util.window.MusicDialog.java", "BodyUseAPI": [], "Fixed commit": "70c6d2ca6232ace61abeca7e2e139188a7dbde8a", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-12-07T00:05:46Z"},
{"Line": "=>773", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(downloadDriveTask.isCancelled())) setMusicTrack((((util.MAMUtil.getMusicPath()) + song) + \".mp3\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7428/buggy-version/src.util.window.MusicDialog.java", "BodyUseAPI": [], "Fixed commit": "70c6d2ca6232ace61abeca7e2e139188a7dbde8a", "Url": "https://api.github.com/repos/MyAnimeManager/MyAnimeManager", "Date": "2015-12-07T00:05:46Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.x) > (avs.ui.MainFrame.WIDTH)) this.alive = false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4363/buggy-version/src.EggWaffle.java", "BodyUseAPI": [], "Fixed commit": "256375d7cefdb8362d6c3cee1df9257c6e07a5f6", "Url": "https://api.github.com/repos/antonrufino/UP-vs-Zzztudentz", "Date": "2016-06-02T13:07:00Z"},
{"Line": "=>362", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (child.hasAttributeNS(org.xmlresolver.Catalog.NS_XMLRESOURCE_EXT, \"redir\")) { entry_redir = child.getAttributeNS(org.xmlresolver.Catalog.NS_XMLRESOURCE_EXT, \"redir\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1292/buggy-version/src.org.xmlresolver.Catalog.java", "BodyUseAPI": ["org.w3c.dom.Element.getAttributeNS(java.lang.String,java.lang.String)"], "Fixed commit": "d99f99a81e53dd4ac03552f8f09c33660b72ee82", "Url": "https://api.github.com/repos/ndw/xmlresolver", "Date": "2013-01-25T16:08:24Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["bma.siteone.cloud.CloudUtil.explodeContentType(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (list != null) { for (java.lang.String s : list) { s = s.trim(); if (s.equalsIgnoreCase(\"text\")) { return \"UTF-8\"; } if (s.toLowerCase().startsWith(\"text/\")) { return s.substring(5).trim(); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6577/buggy-version/cloud.core.src.main.java.bma.siteone.cloud.CloudUtil.java", "BodyUseAPI": [], "Fixed commit": "04e93e2546f30045da07a2b40a9871f09d43186b", "Url": "https://api.github.com/repos/catyguan/bma.java.siteone", "Date": "2012-09-25T07:52:09Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.openlmis.referencedata.repository.UserRepository.findOne(java.util.UUID)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (user == null) { org.openlmis.referencedata.web.UserController.LOGGER.error(\"User not found\"); return org.springframework.http.ResponseEntity.notFound().build(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6670/buggy-version/src.main.java.org.openlmis.referencedata.web.UserController.java", "BodyUseAPI": [], "Fixed commit": "ddbd64dc2d3a6d73edc87a6a4779217875edff2a", "Url": "https://api.github.com/repos/OpenLMIS/openlmis-referencedata", "Date": "2016-09-06T20:46:34Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((userName) == null) { database.getRoot().child(\"users\").child(user.getUid()).setValue(new com.pingus.vent.Model.User(\"no_username\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7804/buggy-version/app.src.main.java.com.pingus.vent.Controller.ChatroomActivity.java", "BodyUseAPI": [], "Fixed commit": "878c9ab1d7b9e1c80b3538904ec24cf9b73eac89", "Url": "https://api.github.com/repos/darrencl95/Vent", "Date": "2017-04-03T21:27:41Z"},
{"Line": "=>22", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((soundPlayer) != null) { soundPlayer.close(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4519/buggy-version/src.Model.GameSoundModel.java", "BodyUseAPI": [], "Fixed commit": "f73bc7555b059170a73da64aec019365289ce3ae", "Url": "https://api.github.com/repos/NubCoda/Ultimate-Snake", "Date": "2014-06-05T19:27:11Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (multi == null) multi = new com.lambdaworks.redis.MultiOutput<K, V>(codec);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1144/buggy-version/src.main.java.com.lambdaworks.redis.RedisAsyncConnection.java", "BodyUseAPI": [], "Fixed commit": "e2bc2614fabc2bdee8f52d764f84f474b859ea84", "Url": "https://api.github.com/repos/wg/lettuce", "Date": "2013-05-29T00:16:00Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((childFirstRow.getAttributes().getNamedItem(\"colspan\")) != null) { number = java.lang.Integer.parseInt(childFirstRow.getAttributes().getNamedItem(\"colspan\").getNodeValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4462/buggy-version/src.org.emed.main.TableFunctions.java", "BodyUseAPI": ["org.w3c.dom.NamedNodeMap.getNamedItem(java.lang.String)", "org.w3c.dom.Node.getAttributes()", "org.w3c.dom.Node.getNodeValue()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "27edba6175466b20a256279a6b5a81eeb8bde852", "Url": "https://api.github.com/repos/ubbdst/JATS2LaTeX", "Date": "2017-11-10T13:23:58Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.w3c.dom.NodeList.item(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((cellNode.getAttributes().getNamedItem(\"rowspan\")) != null) { rowSpan = java.lang.Integer.parseInt(cellNode.getAttributes().getNamedItem(\"rowspan\").getNodeValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4462/buggy-version/src.org.emed.main.TableFunctions.java", "BodyUseAPI": ["org.w3c.dom.Node.getNodeValue()", "org.w3c.dom.NamedNodeMap.getNamedItem(java.lang.String)", "org.w3c.dom.Node.getAttributes()", "java.lang.Integer.parseInt(java.lang.String)"], "Fixed commit": "27edba6175466b20a256279a6b5a81eeb8bde852", "Url": "https://api.github.com/repos/ubbdst/JATS2LaTeX", "Date": "2017-11-10T13:23:58Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(model.getLastListing().equals(\"all\"))) { targetIndex = (targetIndex - 1) - i; }else { targetIndex--; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/9174/buggy-version/src.main.java.seedu.ggist.logic.commands.DoneCommand.java", "BodyUseAPI": [], "Fixed commit": "3726ad39eb7020f703d1b9bcd81c1047011d2ea6", "Url": "https://api.github.com/repos/CS2103AUG2016-W13-C2/main", "Date": "2016-11-02T10:56:43Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (this.timeOut) { return this.timeOut; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2131/buggy-version/src.edu.duke.cs.osprey.partitionfunctionbounds.SequenceFreeEnergy.java", "BodyUseAPI": [], "Fixed commit": "9eb7c6d2fa75607351ae55f418e5dcfdc887d907", "Url": "https://api.github.com/repos/donaldlab/OSPREY3", "Date": "2017-01-18T01:22:17Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!web) { java.lang.System.out.println(java.lang.System.getProperty(\"os.name\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8863/buggy-version/src.uk.ac.gla.dcs.tp3.w.Main.java", "BodyUseAPI": [], "Fixed commit": "cb52e55a5b987b40a1c0bef0e65f234b81930492", "Url": "https://api.github.com/repos/TeamW/Sports-Elimination-TP3", "Date": "2013-02-06T09:50:44Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!web) { for (uk.ac.gla.dcs.tp3.w.league.Division d2 : map.values()) { new uk.ac.gla.dcs.tp3.w.algorithm.Algorithm(d2).FirstNonTrivTeamElim(); java.lang.System.out.println((((d2.getFirstNTTeamElim()) + \" \") + (d2.getFirstNTTeamElimdate()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8863/buggy-version/src.uk.ac.gla.dcs.tp3.w.Main.java", "BodyUseAPI": [], "Fixed commit": "cb52e55a5b987b40a1c0bef0e65f234b81930492", "Url": "https://api.github.com/repos/TeamW/Sports-Elimination-TP3", "Date": "2013-02-06T09:50:44Z"},
{"Line": "=>244", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((kylinDependency.length()) > 0) kylinDependency.append(\",\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7982/buggy-version/engine-mr.src.main.java.org.apache.kylin.engine.mr.common.AbstractHadoopJob.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "5e69ffd2c01495c05242f42819a5b3e9cb8fd689", "Url": "https://api.github.com/repos/ashikaumanga/kylin", "Date": "2016-09-28T03:49:15Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fileName == null) || (fileName.isEmpty())) continue;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7982/buggy-version/engine-mr.src.main.java.org.apache.kylin.engine.mr.common.AbstractHadoopJob.java", "BodyUseAPI": [], "Fixed commit": "5e69ffd2c01495c05242f42819a5b3e9cb8fd689", "Url": "https://api.github.com/repos/ashikaumanga/kylin", "Date": "2016-09-28T03:49:15Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!onDemandRegistration) { try { restartMesos(); } finally { JenkinsScheduler.SUPERVISOR_LOCK.unlock(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5380/buggy-version/src.main.java.org.jenkinsci.plugins.mesos.MesosCloud.java", "BodyUseAPI": [], "Fixed commit": "14a67b8699013cef581e49053e688eb4a7df3b91", "Url": "https://api.github.com/repos/maselvaraj/mesos-plugin", "Date": "2015-03-25T16:55:23Z"},
{"Line": "=>250", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liulishuo.filedownloader.BaseDownloadTask.getListener()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (listener != null) { listener.callback(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6464/buggy-version/library.src.main.java.com.liulishuo.filedownloader.FileDownloadMessenger.java", "BodyUseAPI": ["com.liulishuo.filedownloader.FileDownloadListener.callback(com.liulishuo.filedownloader.message.FileDownloadMessage)"], "Fixed commit": "0a931f082353c50d45143044b333e8547dcdc442", "Url": "https://api.github.com/repos/lingochamp/FileDownloader", "Date": "2016-10-09T14:04:03Z"},
{"Line": "=>242", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.liulishuo.filedownloader.BaseDownloadTask.getListener()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (listener != null) { listener.callback(message); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6464/buggy-version/library.src.main.java.com.liulishuo.filedownloader.FileDownloadMessenger.java", "BodyUseAPI": ["com.liulishuo.filedownloader.FileDownloadListener.callback(com.liulishuo.filedownloader.message.FileDownloadMessage)"], "Fixed commit": "0a931f082353c50d45143044b333e8547dcdc442", "Url": "https://api.github.com/repos/lingochamp/FileDownloader", "Date": "2016-10-09T14:04:03Z"},
{"Line": "=>310", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((lhs.getLong(\"version\")) > (rhs.getLong(\"version\"))) { return 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6606/buggy-version/opensrp-app.src.main.java.org.ei.opensrp.sync.CloudantDataHandler.java", "BodyUseAPI": [], "Fixed commit": "8aa6278a6927ffa4413c3c12f773a2c94a82930f", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client", "Date": "2016-08-09T13:53:28Z"},
{"Line": "=>307", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(rhs.has(\"version\"))) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6606/buggy-version/opensrp-app.src.main.java.org.ei.opensrp.sync.CloudantDataHandler.java", "BodyUseAPI": [], "Fixed commit": "8aa6278a6927ffa4413c3c12f773a2c94a82930f", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client", "Date": "2016-08-09T13:53:28Z"},
{"Line": "=>295", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (eventAndAlerts.isEmpty()) { return eventAndAlerts; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6606/buggy-version/opensrp-app.src.main.java.org.ei.opensrp.sync.CloudantDataHandler.java", "BodyUseAPI": [], "Fixed commit": "8aa6278a6927ffa4413c3c12f773a2c94a82930f", "Url": "https://api.github.com/repos/OpenSRP/opensrp-client", "Date": "2016-08-09T13:53:28Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.kisst.item4j.struct.Struct.getDirectFieldValue(java.lang.String,java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"UNKNOWN_FIELD\".equals(version)) return 0;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5823/buggy-version/src.main.java.org.kisst.pko4j.PkoObject.java", "BodyUseAPI": [], "Fixed commit": "989d17b072a3f4dc2c4038a459e1555c139e3ce3", "Url": "https://api.github.com/repos/MarkHooijkaas/pko4j", "Date": "2016-01-05T00:38:52Z"},
{"Line": "=>789", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((scanTimeoutDuration) < 1) { scanTimeoutDuration = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6251/buggy-version/src.main.java.com.checkmarx.jenkins.CxScanBuilder.java", "BodyUseAPI": [], "Fixed commit": "92cef6aef23f345692814bcf5eafdf61f8e07f10", "Url": "https://api.github.com/repos/jenkinsci/checkmarx-plugin", "Date": "2015-11-24T12:52:24Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (type.equals(QueryType.ALL)) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2528/buggy-version/src.main.java.com.litb.search.eval.service.QueryService.java", "BodyUseAPI": [], "Fixed commit": "535b2f89cef8930192eecf2e4b563e74279e4572", "Url": "https://api.github.com/repos/zydoi/search-eval", "Date": "2016-08-14T15:40:35Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.breadwallet.tools.sqlite.CurrencyDataSource.getInstance(this).getCurrencyByIso(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (entity != null) { java.lang.String finalExchangeRate = com.breadwallet.tools.util.BRCurrency.getFormattedCurrencyString(this, com.breadwallet.tools.manager.SharedPreferencesManager.getIso(this), new java.math.BigDecimal(entity.rate)); exchangeText.setText((finalExchangeRate + \" = 1BTC\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4542/buggy-version/app.src.main.java.com.breadwallet.presenter.activities.settings.DefaultCurrencyActivity.java", "BodyUseAPI": ["com.breadwallet.tools.util.BRCurrency.getFormattedCurrencyString(com.breadwallet.presenter.activities.settings.DefaultCurrencyActivity,com.breadwallet.tools.manager.SharedPreferencesManager.getIso(this),java.math.BigDecimal)"], "Fixed commit": "0421a5085d93be758c5e7f6a6a0aa28748fde73f", "Url": "https://api.github.com/repos/breadwallet/breadwallet-android", "Date": "2017-03-30T21:31:37Z"},
{"Line": "=>286", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isAdded()) { getActivity().runOnUiThread(new java.lang.Runnable() { @java.lang.Override public void run() { ((com.cntt.freemusicdownloadnow.MyApplication) (getActivity().getApplicationContext())).getMusicService().getSongs().addAll(songs); adapter.getData().addAll(songs); adapter.notifyDataSetChanged(); listView.invalidateViews(); listView.requestLayout(); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5124/buggy-version/app.src.main.java.com.cntt.freemusicdownloadnow.ui.fragment.SongListFragment.java", "BodyUseAPI": [], "Fixed commit": "59c40316488c4f5b379aea5f7ea6c4d7a4167823", "Url": "https://api.github.com/repos/trungptdhcn/mp3onlinepro", "Date": "2016-09-26T14:48:13Z"},
{"Line": "=>178", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (request.mPromote) { try { mWorker.moveBlock(request.mSessionId, request.mId, mStorageTierAssoc.getAlias(0)); } catch (java.lang.Exception e) { alluxio.worker.netty.DataServerBlockReadHandler.LOG.warn(\"Failed to promote block {}: {}\", request.mId, e.getMessage()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6051/buggy-version/core.server.worker.src.main.java.alluxio.worker.netty.DataServerBlockReadHandler.java", "BodyUseAPI": ["org.slf4j.Logger.warn(java.lang.String,request.mId,java.lang.String)", "alluxio.worker.block.BlockWorker.moveBlock(request.mSessionId,request.mId,mStorageTierAssoc.getAlias(0))"], "Fixed commit": "b2ac56428bcc52348127e2d63ce96da96e686147", "Url": "https://api.github.com/repos/peisun1115/alluxio", "Date": "2017-05-11T22:50:21Z"},
{"Line": "=>210", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (resultCode == 0) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7308/buggy-version/app.src.main.java.com.lazyengineers.gradecalculator.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "52d5cf287f97956c3b56ae1b72d8de7d9207fd3f", "Url": "https://api.github.com/repos/brendonsalinas/GradeCalculator", "Date": "2014-12-23T19:39:15Z"},
{"Line": "=>40", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((regionMsg.regions) == null) || ((regionMsg.regions.length) == 0)) { regionMsg.regions = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/833/buggy-version/src.edu.mit.csail.jasongao.roadrunner.ext.RegionAndPathHandler.java", "BodyUseAPI": [], "Fixed commit": "670e8c7a86e4f55b205b666eb105fb6aa47166a7", "Url": "https://api.github.com/repos/sorlok/RoadRunner", "Date": "2014-04-15T03:26:41Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((regionMsg.path) == null) || ((regionMsg.path.length) == 0)) { regionMsg.path = null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/833/buggy-version/src.edu.mit.csail.jasongao.roadrunner.ext.RegionAndPathHandler.java", "BodyUseAPI": [], "Fixed commit": "670e8c7a86e4f55b205b666eb105fb6aa47166a7", "Url": "https://api.github.com/repos/sorlok/RoadRunner", "Date": "2014-04-15T03:26:41Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((min) == null) || ((max) == null)) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/8186/buggy-version/src.main.java.org.reactome.web.diagram.context.dialogs.MoleculesDialogPanel.java", "BodyUseAPI": [], "Fixed commit": "c2353e621c35b78355aaf3c4ce93bf19c4752907", "Url": "https://api.github.com/repos/reactome-pwp/diagram", "Date": "2015-10-13T09:00:17Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((fKeyLabel) != null) { return org.eclipse.imp.pdb.facts.type.TypeFactory.getInstance().mapType(getKeyType().instantiate(bindings), fKeyLabel, getValueType().instantiate(bindings), fValueLabel); }else { return org.eclipse.imp.pdb.facts.type.TypeFactory.getInstance().mapType(getKeyType().instantiate(bindings), getValueType().instantiate(bindings)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3075/buggy-version/src.org.eclipse.imp.pdb.facts.type.MapType.java", "BodyUseAPI": [], "Fixed commit": "4d8636446014353fb95885b09538713b0e904d29", "Url": "https://api.github.com/repos/impulse-org/pdb.values", "Date": "2012-12-27T11:19:10Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endx < (window.actualMap.map.length)) { endx++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2910/buggy-version/src.game.MapSurface.java", "BodyUseAPI": [], "Fixed commit": "c39f2c88f86a0fe346757232c1f030227f2ebd9a", "Url": "https://api.github.com/repos/propra13-orga/gruppe94", "Date": "2013-07-16T17:42:20Z"},
{"Line": "=>62", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (endy < (window.actualMap.map[0].length)) { endy++; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2910/buggy-version/src.game.MapSurface.java", "BodyUseAPI": [], "Fixed commit": "c39f2c88f86a0fe346757232c1f030227f2ebd9a", "Url": "https://api.github.com/repos/propra13-orga/gruppe94", "Date": "2013-07-16T17:42:20Z"},
{"Line": "=>181", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.data.VM19ColourChanger.getDrawPerLine_NOCLONE()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(drawPerLine.containsValue(subf))) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2585/buggy-version/src.org.nschmidt.ldparteditor.data.VM19ColourChanger.java", "BodyUseAPI": [], "Fixed commit": "328204e857bd2b26eca7a9167aba194bdcc365e1", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-06-26T13:00:37Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["getArguments().getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(user_post.equals(\"\"))) { for (java.lang.String comment : user_post.split(\":\")) { android.util.Pair<java.lang.String, java.lang.String> cPair = android.util.Pair.create(comment.split(\"-\")[0], comment.split(\"-\")[1]); android.util.Log.d(\"MT\", ((((\"The Comment pair is : <\" + (cPair.first)) + \", \") + (cPair.second)) + \">\")); post.add(cPair); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5282/buggy-version/app.src.main.java.com.murraycole.ucrrunner.view.activities.activities.Profile.ProfileFragments.NewsFeedFragments.IndivNewsFeedFragment.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)"], "Fixed commit": "e9964f498dcaa71dacca897c5cc456f4b88db48b", "Url": "https://api.github.com/repos/CS180Fall2014/UcrRunner", "Date": "2014-12-01T07:56:57Z"},
{"Line": "=>613", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["be.hyperrail.android.irail.contracts.IrailStationProvider.getStationById(object.getString(\"from\"))"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (from != null) { be.hyperrail.android.persistence.RouteQuery query = new be.hyperrail.android.persistence.RouteQuery(from, to); query.created_at = new java.util.Date(object.getLong(\"created_at\")); query.type = type; results.add(query); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1175/buggy-version/Hyperrail.src.main.java.be.hyperrail.android.persistence.PersistentQueryProvider.java", "BodyUseAPI": [], "Fixed commit": "2c95a4b2f62f4172b30969cc072d9edbd600cc16", "Url": "https://api.github.com/repos/hyperrail/hyperrail-for-android", "Date": "2017-07-01T21:25:29Z"},
{"Line": "=>230", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((item instanceof com.shatteredpixel.shatteredpixeldungeon.items.scrolls.Scroll) && (!(item.isIdentified()))) com.shatteredpixel.shatteredpixeldungeon.utils.GLog.w(\"You're not sure what type of scroll this is yet.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5162/buggy-version/src.com.shatteredpixel.shatteredpixeldungeon.items.artifacts.UnstableSpellbook.java", "BodyUseAPI": [], "Fixed commit": "1e3bc31c6b10cdee16b1fa119f870c566f189465", "Url": "https://api.github.com/repos/00-Evan/shattered-pixel-dungeon", "Date": "2014-12-14T19:17:56Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.intellij.sequencer.generator.PsiMethod.getContainingClass()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (containingClass == null) { containingClass = ((org.intellij.sequencer.generator.PsiClass) (psiMethod.getParent().getContext())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1549/buggy-version/src.org.intellij.sequencer.generator.SequenceGenerator.java", "BodyUseAPI": [], "Fixed commit": "b1275de6d32a4ca99a9f43c18c621649394d5058", "Url": "https://api.github.com/repos/Vanco/SequencePlugin", "Date": "2015-04-30T02:24:58Z"},
{"Line": "=>93", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (publication.isValid()) { java.net.URI uri = getURI(publication, baseUri); org.silverpeas.publication.web.PublicationEntity entity = org.silverpeas.publication.web.PublicationEntity.fromPublicationDetail(publication, uri); if (withAttachments) { java.util.Collection<org.silverpeas.attachment.model.SimpleDocument> attachments = org.silverpeas.attachment.AttachmentServiceFactory.getAttachmentService().listDocumentsByForeignKey(publication.getPK(), null); entity.withAttachments(attachments, getUriInfo().getBaseUri().toString(), token); } entities.add(entity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4126/buggy-version/web-core.src.main.java.org.silverpeas.publication.web.PublicationResource.java", "BodyUseAPI": ["org.silverpeas.publication.web.PublicationResource.getURI(com.stratelia.webactiv.util.publication.model.PublicationDetail,java.lang.String)", "org.silverpeas.publication.web.PublicationEntity.fromPublicationDetail(com.stratelia.webactiv.util.publication.model.PublicationDetail,java.net.URI)", "org.silverpeas.attachment.AttachmentServiceFactory.getAttachmentService().listDocumentsByForeignKey(publication.getPK(),<nulltype>)", "com.stratelia.webactiv.util.publication.model.PublicationDetail.getPK()"], "Fixed commit": "5488db5ca06337094caf4f2652e06d27120d12c5", "Url": "https://api.github.com/repos/Silverpeas/Silverpeas-Core", "Date": "2013-11-05T21:21:44Z"},
{"Line": "=>246", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((mListener) != null) && ((mListener.getPathBuffers()) != null)) { for (java.util.List<com.mapbox.mapboxsdk.geometry.LatLng> polygonPoints : mListener.getPathBuffers()) { com.mapbox.mapboxsdk.annotations.PolygonOptions polygonOptions = mListener.getAnnotationsFactory().getDefaultPolygonOptions().addAll(polygonPoints); map.addPolygon(polygonOptions); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3122/buggy-version/airmapsdk.src.main.java.com.airmap.airmapsdk.UI.Fragments.ReviewFlightFragment.java", "BodyUseAPI": ["mListener.getAnnotationsFactory().getDefaultPolygonOptions().addAll(java.util.List<com.mapbox.mapboxsdk.geometry.LatLng>)", "com.airmap.airmapsdk.util.AnnotationsFactory.getDefaultPolygonOptions()", "com.airmap.airmapsdk.ui.fragments.ReviewFlightFragment.OnFragmentInteractionListener.getAnnotationsFactory()", "com.airmap.airmapsdk.ui.fragments.ReviewFlightFragment.OnFragmentInteractionListener.getPathBuffers()"], "Fixed commit": "5b231375a29be81210c610e5f5bc3f3014afa60a", "Url": "https://api.github.com/repos/airmap/AirMapSDK-Android", "Date": "2017-01-20T00:49:13Z"},
{"Line": "=>452", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isFS && (!(direction))) eDownstream = subEles.getPrevious(e); else if ((!isFS) && (direction)) eDownstream = subEles.getNext(e);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6778/buggy-version/edu.hit.mlg.individual.EctypalElement.java", "BodyUseAPI": [], "Fixed commit": "f72bb6c35a8f85071b71b5a36b5e1015eabf5df2", "Url": "https://api.github.com/repos/ljuan/gbhit", "Date": "2013-06-27T06:09:21Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.preference.PreferenceManager.getDefaultSharedPreferences(getApplicationContext()).getString(java.lang.String,getString(R.string.defurl))"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (server.trim().isEmpty()) { server = getString(R.string.defurl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2683/buggy-version/app.src.main.java.com.nv95.fbchat.ChatService.java", "BodyUseAPI": [], "Fixed commit": "77ad43b59d0c92e7e8a257cd59a8c9f892efe79b", "Url": "https://api.github.com/repos/ficbook/FicbookChatClient", "Date": "2017-07-18T14:30:21Z"},
{"Line": "=>147", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (constantDefinitions.containsKey(e.id)) { return constantDefinitions.get(e.id).accept(this); }else { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3956/buggy-version/jkind.src.jkind.analysis.evaluation.ConstantEvaluator.java", "BodyUseAPI": ["constantDefinitions.get(e.id).accept(jkind.analysis.evaluation.ConstantEvaluator)", "java.util.Map<java.lang.String, jkind.lustre.Expr>.get(e.id)"], "Fixed commit": "2fade2755611e33b2932be08751b924d05bdfdc0", "Url": "https://api.github.com/repos/agacek/jkind", "Date": "2014-07-30T16:13:44Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (user.addInterestedBook(b)) { b.attach(user); return true; }else { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6188/buggy-version/src.main.java.Library.java", "BodyUseAPI": ["Book.attach(User)"], "Fixed commit": "8221e46fe2aa0a1d9a6aec49c11e4bc5154573c1", "Url": "https://api.github.com/repos/ngri0024/SoftwareEngineeringNickyGian", "Date": "2016-05-31T15:36:44Z"},
{"Line": "=>288", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["backend.ModulesParser.generateDependencyStringWithoutNesting(backend.ModulesParser.Operator,java.util.ArrayList<java.lang.String>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((internal.contains(backend.ModulesParser.OR_WORD)) || (internal.contains(backend.ModulesParser.AND_WORD))) { prereqBuilder.append(backend.ModulesParser.OPEN_BRACKET); prereqBuilder.append(internal); prereqBuilder.append(backend.ModulesParser.CLOSE_BRACKET); }else { prereqBuilder.append(internal); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7230/buggy-version/KBMP.src.backend.ModulesParser.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)", "java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "f5933c4a786e9a63092d42b7d07df3e0e0517318", "Url": "https://api.github.com/repos/bsmmoon/KBMP", "Date": "2016-04-10T13:48:22Z"},
{"Line": "=>299", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mAdjacentHexes.size()) != 0) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6907/buggy-version/RiskyBusinessProject.RiskyBusiness.src.main.java.com.slothproductions.riskybusiness.view.BoardObjectManager.java", "BodyUseAPI": [], "Fixed commit": "e175c112afbe1d7900f7ab8b81b1020958527b81", "Url": "https://api.github.com/repos/maharlikans/riskybusiness", "Date": "2014-04-25T04:17:33Z"},
{"Line": "=>209", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!callbackSent) { cardView.animateSuccessfulSet(callback); callbackSent = true; }else { cardView.animateSuccessfulSet(null); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/122/buggy-version/app.src.main.java.com.shakeup.setofthree.setgame.GameFragment.java", "BodyUseAPI": [], "Fixed commit": "76206d0eb3d8d79f838179c6e2bbea6327635d49", "Url": "https://api.github.com/repos/jaysondc/TripleTap", "Date": "2017-08-09T20:38:43Z"},
{"Line": "=>505", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (callback != null) { callback.onAnimationFinish(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/122/buggy-version/app.src.main.java.com.shakeup.setofthree.customviews.SetGameCardView.java", "BodyUseAPI": ["com.shakeup.setofthree.customviews.SetGameCardView.AnimationEndCallback.onAnimationFinish()"], "Fixed commit": "76206d0eb3d8d79f838179c6e2bbea6327635d49", "Url": "https://api.github.com/repos/jaysondc/TripleTap", "Date": "2017-08-09T20:38:43Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((currentMarker) != null) { currentMarker.setIcon(com.google.android.gms.maps.model.BitmapDescriptorFactory.fromResource(R.drawable.marker_red)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6347/buggy-version/app.src.main.java.com.dmi.minesafety.demo.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "d7852a7d0d333503332aa7b2f2fd02ecef01d3b9", "Url": "https://api.github.com/repos/MacKakade/MineSafetyDemo", "Date": "2015-03-02T09:24:37Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((requestString.split(\"\\r\\n\\r\\n\").length) < 2) && ((requestString.split(\"\\r\\n\\r\\n\")[0].indexOf(\"?\")) == (-1))) { return; }else if (((reqStr != null) && (!(reqStr.isEmpty()))) && ((reqStr.indexOf(\"=\")) != (-1))) { for (java.lang.String s : reqStr.split(\"&\")) { reqParams.put(s.split(\"=\")[0], s.split(\"=\")[1]); } }else if ((split == null) || ((split.isEmpty()) && ((reqStr.indexOf(\"=\")) != (-1)))) { reqStr = requestString.split(\"\\r\\n\\r\\n\")[1]; for (java.lang.String s : reqStr.split(\"&\")) { reqParams.put(s.split(\"=\")[0], s.split(\"=\")[1]); } }else if (!(split.isEmpty())) { java.lang.String reqbody = requestString.substring(requestString.indexOf(\"\\r\\n\\r\\n\"), requestString.lastIndexOf(((\"\\r\\n--\" + (toString())) + \"--\\r\\n\"))); for (java.lang.String s : reqbody.split(((\"\\r\\n--\" + reqbody) + \"\\r\\n\"))) { if ((s.indexOf(\"Content-Type\")) == (-1)) { java.lang.String k = s.split(\"\\\"\\r\\n\\r\\n\")[0]; reqParams.put(k.substring(k.indexOf(\"name=\\\"\"), ((k.length()) - 1)), s.split(\"\\\"\\r\\n\\r\\n\")[1]); }else { java.lang.String k = s.split(\"\\r\\n\\r\\n\")[0]; reqParams.put(k.substring(k.indexOf(\"name=\\\"\"), k.indexOf(\"\\\"\")), s.split(\"\\r\\n\\r\\n\")[1]); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5821/buggy-version/agile-core.src.main.java.com.di.agile.core.server.bean.HttpRequest.java", "BodyUseAPI": [], "Fixed commit": "7efd764c154eb6d85e2f824e83f22270ce71e047", "Url": "https://api.github.com/repos/dingey/agile", "Date": "2017-01-13T03:15:54Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (i == 0) { setMethod(s.substring(0, s.indexOf(\" \"))); reqStr = s.substring(((s.indexOf(\"?\")) + 1), s.lastIndexOf(\" \")); }else if (s.contains(\"Accept\")) { setAccept(spit(s)); }else if ((s.indexOf(\"Accept-Encoding\")) != (-1)) { setAcceptEncoding(spit(s)); }else if ((s.indexOf(\"Accept-Language\")) != (-1)) { setAcceptLanguage(spit(s)); }else if ((s.indexOf(\"Cookie\")) != (-1)) { setCookie(spit(s)); }else if ((s.indexOf(\"Connection\")) != (-1)) { setConnection(spit(s)); }else if ((s.indexOf(\"Host\")) != (-1)) { setHost(spit(s)); }else if ((s.indexOf(\"Referer\")) != (-1)) { setReferer(s.substring(((s.indexOf(\":\")) + 1), ((s.indexOf(\"?\")) > 0 ? s.indexOf(\"?\") : s.length())).trim()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5821/buggy-version/agile-core.src.main.java.com.di.agile.core.server.bean.HttpRequest.java", "BodyUseAPI": [], "Fixed commit": "7efd764c154eb6d85e2f824e83f22270ce71e047", "Url": "https://api.github.com/repos/dingey/agile", "Date": "2017-01-13T03:15:54Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (it.polito.mad.streamsender.NetworkMonitor.VERBOSE) android.util.Log.d(it.polito.mad.streamsender.NetworkMonitor.TAG, \"Started\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7940/buggy-version/app.src.main.java.it.polito.mad.streamsender.NetworkMonitor.java", "BodyUseAPI": [], "Fixed commit": "4be888acb28973aa89206ece1598ea14bdc76a18", "Url": "https://api.github.com/repos/tolkkiMetal/StreamSender", "Date": "2016-04-07T09:58:25Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (it.polito.mad.streamsender.NetworkMonitor.VERBOSE) android.util.Log.d(it.polito.mad.streamsender.NetworkMonitor.TAG, \"Stopped\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7940/buggy-version/app.src.main.java.it.polito.mad.streamsender.NetworkMonitor.java", "BodyUseAPI": [], "Fixed commit": "4be888acb28973aa89206ece1598ea14bdc76a18", "Url": "https://api.github.com/repos/tolkkiMetal/StreamSender", "Date": "2016-04-07T09:58:25Z"},
{"Line": "=>14", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(com.sbar.smsnenado.Common.isServiceRunning(context))) { android.content.Intent serviceIntent = new android.content.Intent(context, com.sbar.smsnenado.BootService.class); context.startService(serviceIntent); }else { com.sbar.smsnenado.BootService service = com.sbar.smsnenado.BootService.getInstance(); if (service != null) { service.updateInternalQueue(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7117/buggy-version/src.com.sbar.smsnenado.receivers.NetworkChangeReceiver.java", "BodyUseAPI": ["android.content.Context.startService(android.content.Intent)"], "Fixed commit": "02f8042351ed58f0b94e6c43283b4f6241974f8b", "Url": "https://api.github.com/repos/sbar/smsnenado", "Date": "2013-10-19T16:21:03Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasDinner()) return toMenuItemList(dinner);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5117/buggy-version/app.src.main.java.com.dayzerostudio.slugguide.slugmenu.menu.menuobjects.JsonMenuObject.java", "BodyUseAPI": [], "Fixed commit": "4e52ceaa02c10497c48d7e7e59263a4878bbfbaf", "Url": "https://api.github.com/repos/Pancia/SlugMenu", "Date": "2015-01-18T08:27:01Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasBreakfast()) return toMenuItemList(breakfast);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5117/buggy-version/app.src.main.java.com.dayzerostudio.slugguide.slugmenu.menu.menuobjects.JsonMenuObject.java", "BodyUseAPI": [], "Fixed commit": "4e52ceaa02c10497c48d7e7e59263a4878bbfbaf", "Url": "https://api.github.com/repos/Pancia/SlugMenu", "Date": "2015-01-18T08:27:01Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (hasLunch()) return toMenuItemList(lunch);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/5117/buggy-version/app.src.main.java.com.dayzerostudio.slugguide.slugmenu.menu.menuobjects.JsonMenuObject.java", "BodyUseAPI": [], "Fixed commit": "4e52ceaa02c10497c48d7e7e59263a4878bbfbaf", "Url": "https://api.github.com/repos/Pancia/SlugMenu", "Date": "2015-01-18T08:27:01Z"},
{"Line": "=>534", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.toString()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (dataset_name.equals(EnrichmentMap.DATASET1)) { java.io.File current_ranks_backcomp = new java.io.File(tmpDir, (((name + \".\") + ranks_name) + \".RANKS.txt\")); java.io.BufferedWriter subrank1writer_backcomp = new java.io.BufferedWriter(new java.io.FileWriter(current_ranks_backcomp)); subrank1writer_backcomp.write(params.printHashmap(all_ranks.get(current_ranks_name).getRanking())); subrank1writer_backcomp.close(); pFileList.add(current_ranks_backcomp); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4745/buggy-version/EnrichmentMapPlugin.src.main.java.org.baderlab.csplugins.enrichmentmap.actions.EnrichmentMapSessionAction.java", "BodyUseAPI": [], "Fixed commit": "cec2b5d3545ab8caca06b53fae03a349559c2842", "Url": "https://api.github.com/repos/BaderLab/EnrichmentMapApp", "Date": "2014-10-01T13:49:05Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (i == 0) { bIMinus1 = calcMiddle(polygon[((polygon.length) - 1)].getA(), polygon[((polygon.length) - 1)].getB()); }else { bIMinus1 = calcMiddle(polygon[(i - 1)].getA(), polygon[(i - 1)].getB()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7227/buggy-version/src.de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.potrace.algorithm.BezierCurveFinder.java", "BodyUseAPI": ["de.htw.fb4.imi.master.ws15_16.foellmer_feldmann.ip.potrace.algorithm.BezierCurveFinder.calcMiddle(polygon[(i - 1)].getA(),polygon[(i - 1)].getB())", "polygon[(i - 1)].getA()", "polygon[(i - 1)].getB()"], "Fixed commit": "f7f688215a77019f0e90dc9c58ad1e5468ce72b3", "Url": "https://api.github.com/repos/sasfeld/IP_Uebung_5", "Date": "2016-01-07T17:54:19Z"},
{"Line": "=>19", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (shooter == null) throw new worms.model.ModelException(\"Shooter must not be null.\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6905/buggy-version/1314-Worms-Part1.src.worms.model.Projectile.java", "BodyUseAPI": [], "Fixed commit": "9a86a7fb0902edd7ac74eb99f8148b3a580d4819", "Url": "https://api.github.com/repos/MatthiasValvekens/OOP1314-Worms", "Date": "2014-04-23T13:21:46Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((node.getParent().getName()) != null) { tempFile = java.io.File.createTempFile((((node.getParent().getName()) + \"_\") + (node.getName())), jp.co.tabocom.tsplugin.infonotepad.InfoNotePadAction.SUFFIX); }else { tempFile = java.io.File.createTempFile(node.getName(), jp.co.tabocom.tsplugin.infonotepad.InfoNotePadAction.SUFFIX); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/4800/buggy-version/src.jp.co.tabocom.tsplugin.infonotepad.InfoNotePadAction.java", "BodyUseAPI": ["java.io.File.createTempFile(node.getName(),java.lang.String)", "jp.co.tabocom.teratermstation.model.TargetNode.getName()", "jp.co.tabocom.teratermstation.model.TargetNode.getName()", "jp.co.tabocom.teratermstation.model.TargetNode.getParent()", "java.io.File.createTempFile((((node.getParent().getName()) + \"_\") + (node.getName())),java.lang.String)", "node.getParent().getName()"], "Fixed commit": "63d35ff9ad3663fe43d8593db7a099e1c51cb035", "Url": "https://api.github.com/repos/turbou/TS_InfoNotePad", "Date": "2016-06-17T06:08:36Z"},
{"Line": "=>131", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if (mimeType == null) { mimeType = \"application/pdf\"; java.lang.System.out.println((\"Mime Type (default): \" + mimeType)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6927/buggy-version/src.android.DocumentHandler.java", "BodyUseAPI": [], "Fixed commit": "802a8b8b066ec31e3179196c6635e694ba73dfc7", "Url": "https://api.github.com/repos/PolarCape/polarcape-cordova-plugin-document-handler", "Date": "2016-03-07T13:52:02Z"},
{"Line": "=>82", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.webkit.MimeTypeMap.getFileExtensionFromUrl(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (extension.equals(\"\")) { extension = \"pdf\"; java.lang.System.out.println((\"extension (default): \" + extension)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6927/buggy-version/src.android.DocumentHandler.java", "BodyUseAPI": [], "Fixed commit": "802a8b8b066ec31e3179196c6635e694ba73dfc7", "Url": "https://api.github.com/repos/PolarCape/polarcape-cordova-plugin-document-handler", "Date": "2016-03-07T13:52:02Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (s == null) { throw new java.util.NoSuchElementException(\"Empty tree file.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7587/buggy-version/dnainator-core.src.main.java.nl.tudelft.dnainator.parser.TreeParser.java", "BodyUseAPI": [], "Fixed commit": "8275810711ad3f6ac6aa988001da8a448e442361", "Url": "https://api.github.com/repos/ohuang12/dnainator", "Date": "2015-06-16T22:31:01Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (obs == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3825/buggy-version/bahmni-emr-api.src.main.java.org.openmrs.module.bahmniemrapi.encountertransaction.mapper.OMRSObsToBahmniObsMapper.java", "BodyUseAPI": [], "Fixed commit": "8da202aea2e45c76b1d44f82ee34e75c06390aa9", "Url": "https://api.github.com/repos/Bahmni/bahmni-core", "Date": "2016-03-02T10:45:24Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((temRegion.get(((temRegion.size()) - 1)).getWidth()) > 30) addHallway(((temRegion.size()) - 1), 33, false);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7787/buggy-version/src.zis.map.Building.java", "BodyUseAPI": ["zis.map.Building.addHallway(((temRegion.size()) - 1),int,boolean)", "java.util.ArrayList<org.newdawn.slick.geom.Rectangle>.size()"], "Fixed commit": "f0100daae7df3623de7e29fd2b4dd1f07378c91e", "Url": "https://api.github.com/repos/norgas/ZIS", "Date": "2012-06-29T02:31:15Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((position == 50) && ((H) >= 40)) { addLoopHallway(0); if ((temRegion.get(((temRegion.size()) - 2)).getWidth()) > 30) { addHallway(((temRegion.size()) - 2), 33, false); addHallway(((temRegion.size()) - 1), 50, false); }else addHallway(((temRegion.size()) - 1), 33, false); }else if (position == 25) { addLoopHallway(1); if ((temRegion.get(((temRegion.size()) - 2)).getWidth()) > 30) { addHallway(((temRegion.size()) - 2), 33, false); addHallway(((temRegion.size()) - 1), 50, false); }else addHallway(((temRegion.size()) - 2), 50, false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7787/buggy-version/src.zis.map.Building.java", "BodyUseAPI": [], "Fixed commit": "f0100daae7df3623de7e29fd2b4dd1f07378c91e", "Url": "https://api.github.com/repos/norgas/ZIS", "Date": "2012-06-29T02:31:15Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((mapping.getSourceReference()) == null) { appliesToAll.add(mapping); }else { nonNested.put(entry.getKey(), entry.getValue()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/1221/buggy-version/processor.src.main.java.org.mapstruct.ap.internal.model.source.GroupedSourceReferences.java", "BodyUseAPI": ["java.util.List<org.mapstruct.ap.internal.model.source.Mapping>.add(org.mapstruct.ap.internal.model.source.Mapping)"], "Fixed commit": "6707c33ebe596bf139689f1ab3f8f295cc25f028", "Url": "https://api.github.com/repos/sjaakd/mapstruct", "Date": "2017-02-12T19:31:58Z"},
{"Line": "=>284", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (type.contains(\"[\")) type = type.split(\"\\\\[\")[0].trim();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/3987/buggy-version/ProcessRun.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String)", "java.lang.String.trim()"], "Fixed commit": "528f31c68ac63eb164d6db0e560941aa17f5b77c", "Url": "https://api.github.com/repos/JamesWWalker/SecureCvisualJ", "Date": "2017-09-04T21:17:25Z"},
{"Line": "=>96", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (due > 0) this.list.add(new model.DueReport(sl, category, model, name, phone, address, price, total, due));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7794/buggy-version/src.controller.DueReportController.java", "BodyUseAPI": ["java.util.List<model.DueReport>.add(model.DueReport)"], "Fixed commit": "62e6bcd4ec0a3db1cb78315085258014e1a0414c", "Url": "https://api.github.com/repos/mahmudkuet11/jamuna", "Date": "2015-09-08T05:14:47Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.storagedriver.storagecapabilities.DataStorageServiceOption.getCapabilities()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet]", "Content": "=>if (capabilityList != null) { for (com.emc.storageos.storagedriver.storagecapabilities.CapabilityInstance ci : capabilityList) { java.lang.String provTypeValue = ci.getPropertyValue(DeduplicationCapabilityDefinition.PROPERTY_NAME.ENABLED.name()); if (provTypeValue.equalsIgnoreCase(java.lang.Boolean.TRUE.toString())) { IsDeDupEnabled = true; } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6146/buggy-version/exportLibraries.storagedrivers.3par.src.main.java.com.emc.storageos.hp3par.impl.HP3PARProvisioningHelper.java", "BodyUseAPI": [], "Fixed commit": "4e6d42371c1b4d16797640d8326c48f3993b0a23", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-08-06T13:59:31Z"},
{"Line": "=>43", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.emc.storageos.storagedriver.storagecapabilities.StorageCapabilities.getCommonCapabilitis()"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if (commonCapabilities != null) { java.util.List<com.emc.storageos.storagedriver.storagecapabilities.DataStorageServiceOption> dataService = commonCapabilities.getDataStorage(); if (dataService != null) { for (com.emc.storageos.storagedriver.storagecapabilities.DataStorageServiceOption dataServiceOption : dataService) { java.util.List<com.emc.storageos.storagedriver.storagecapabilities.CapabilityInstance> capabilityList = dataServiceOption.getCapabilities(); if (capabilityList != null) { for (com.emc.storageos.storagedriver.storagecapabilities.CapabilityInstance ci : capabilityList) { java.lang.String provTypeValue = ci.getPropertyValue(DeduplicationCapabilityDefinition.PROPERTY_NAME.ENABLED.name()); if (provTypeValue.equalsIgnoreCase(java.lang.Boolean.TRUE.toString())) { IsDeDupEnabled = true; } } } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/6146/buggy-version/exportLibraries.storagedrivers.3par.src.main.java.com.emc.storageos.hp3par.impl.HP3PARProvisioningHelper.java", "BodyUseAPI": ["com.emc.storageos.storagedriver.storagecapabilities.CommonStorageCapabilities.getDataStorage()"], "Fixed commit": "4e6d42371c1b4d16797640d8326c48f3993b0a23", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2016-08-06T13:59:31Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((paquet.code) == (serie.trame.Frame.IncomingCode.EXECUTION_END)) paquet.ticket.set(InOrder.LONG_ORDER_ACK); else if ((data.length) != 0) log.critical(((((\"On a ignor\u00e9 un paquet d'origine \" + (paquet.origine)) + \" (taille : \") + (data.length)) + \")\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/7343/buggy-version/pc.src.threads.serie.ThreadSerialInputCoucheOrdre.java", "BodyUseAPI": ["paquet.ticket.set(InOrder.LONG_ORDER_ACK)", "utils.Log.critical(((((\"On a ignor\u00e9 un paquet d'origine \" + (paquet.origine)) + \" (taille : \") + (data.length)) + \")\"))"], "Fixed commit": "49dcd81fb6dfbbfaa566c6846a022fc9d1d6378d", "Url": "https://api.github.com/repos/INTechSenpai/moon-rover", "Date": "2017-05-08T14:25:06Z"},
{"Line": "=>182", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.Gson.fromJson(java.lang.String,java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfNull, IfRet, IfDep]", "Content": "=>if ((link != null) && ((link.getRelatedItems()) != null)) { output.addAll(link.getRelatedItems()); for (com.atum.tunetube.youtube.YoutubeLink l : link.getRelatedItems()) { java.lang.System.out.println((\"recentlyRec: \" + (l.getYoutubeTitle()))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/2869/buggy-version/app.src.main.java.com.atum.tunetube.sql.DatabaseConnection.java", "BodyUseAPI": ["java.util.LinkedList<com.atum.tunetube.youtube.YoutubeLink>.addAll(link.getRelatedItems())", "com.atum.tunetube.youtube.YoutubeLink.getRelatedItems()", "com.atum.tunetube.youtube.YoutubeLink.getRelatedItems()"], "Fixed commit": "a7f7746d0cbd2f9f668b8eb8309fd117313ea587", "Url": "https://api.github.com/repos/atum-martin/TuneTube", "Date": "2017-07-23T22:01:28Z"},
{"Line": "=>274", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((null == (mDecoratedChildWidth)) || (null == (mDecoratedChildHeight))) { return 0; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V99/949/buggy-version/CarouselLayoutManager.carousel.src.main.java.com.azoft.carousellayoutmanager.CarouselLayoutManager.java", "BodyUseAPI": [], "Fixed commit": "a67b7acd9455e091e1c4853406c3e132c0527dad", "Url": "https://api.github.com/repos/Azoft/CarouselLayoutManager", "Date": "2017-01-10T08:42:38Z"},
{"Line": "=>71", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((waitForAndGetElement(ELEMENT_REMOVE_CONNECTION_BUTTON.replace(\"${peopleName}\", peopleName), 5000, 0)) != null) { click(ELEMENT_REMOVE_CONNECTION_BUTTON.replace(\"${peopleName}\", peopleName)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1580/buggy-version/ui-common.src.main.java.org.exoplatform.selenium.platform.social.PeopleConnection.java", "BodyUseAPI": ["org.exoplatform.selenium.platform.social.PeopleConnection.click(java.lang.String)", "java.lang.String.replace(java.lang.String,java.lang.String)"], "Fixed commit": "6bac9d035c0fd825b77df91e3f0577d946bc46c6", "Url": "https://api.github.com/repos/exoplatform/ui-test", "Date": "2014-01-15T06:48:43Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["io.mycat.MycatServer.getInstance().getConfig().getSystem()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if ((system != null) && (system.isGlobalTableCheckSwitchOn())) result = io.mycat.server.interceptor.impl.GlobalTableUtil.interceptSQL(result, sqlType);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2111/buggy-version/src.main.java.io.mycat.server.interceptor.impl.DefaultSqlInterceptor.java", "BodyUseAPI": [], "Fixed commit": "f1f87839e939df03f5faa353a84857ad3c282afd", "Url": "https://api.github.com/repos/kingzone/Mycat-Server", "Date": "2016-01-07T03:49:09Z"},
{"Line": "=>743", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.List<com.alamkanak.weekview.WeekView.EventRect>.get(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (eventRect.originalEvent.shouldExpand()) { hasEventsForDate = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7640/buggy-version/library.src.main.java.com.alamkanak.weekview.WeekView.java", "BodyUseAPI": [], "Fixed commit": "31ad21c8c22d4c8a0c129c62b279f5cf7d5e5e37", "Url": "https://api.github.com/repos/BreezeWorks/Android-Week-View", "Date": "2015-06-18T00:40:24Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["android.database.Cursor.getDouble(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.lang.Double.isNaN(acidity)) { ((android.graphics.drawable.GradientDrawable) (textView.getBackground())).setColor(android.graphics.Color.parseColor(\"#83AE9B\")); textView.setText(\"N\"); }else { int colorHex = ((int) ((com.example.cchiv.acidreflux.IngredientsCursorAdapter.blueHex) + ((((com.example.cchiv.acidreflux.IngredientsCursorAdapter.redHex) - (com.example.cchiv.acidreflux.IngredientsCursorAdapter.blueHex)) / 2) * (acidity + 1.0)))); ((android.graphics.drawable.GradientDrawable) (textView.getBackground())).setColor(android.graphics.Color.parseColor((\"#\" + (java.lang.Integer.toHexString(colorHex))))); textView.setText(java.lang.String.format(\"%.01f\", cursor.getDouble(acidityID))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4433/buggy-version/app.src.main.java.com.example.cchiv.acidreflux.IngredientsCursorAdapter.java", "BodyUseAPI": [], "Fixed commit": "d1dfefec6801508f48e59743d1569184027afe08", "Url": "https://api.github.com/repos/DomainFlag/AcidReflux", "Date": "2017-10-02T06:32:46Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((startPoint) == null) { java.util.List<java.lang.String> listBranches = org.talend.geat.GitUtils.listBranches(repo.getRepository(), \"master|maintenance/.*\"); java.lang.String defaultValue = org.talend.geat.GitConfiguration.getInstance().get(\"bugfixStartPoint\"); startPoint = org.talend.geat.InputsUtils.askUser(listBranches, defaultValue); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/228/buggy-version/src.main.java.org.talend.geat.commands.BugfixStart.java", "BodyUseAPI": [], "Fixed commit": "e2d4e532c5b5c2cab6d8f2640eb1fbd9a86c000d", "Url": "https://api.github.com/repos/smallet/GEAT", "Date": "2014-05-19T15:43:49Z"},
{"Line": "=>67", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((tokenAndTag.length) != 2) { throw new java.lang.RuntimeException(((((\"Invalid format in \" + (filename)) + \": '\") + posToken) + \"', expected two tab-separated parts\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2183/buggy-version/languagetool-core.src.main.java.org.languagetool.tagging.disambiguation.MultiWordChunker.java", "BodyUseAPI": [], "Fixed commit": "610a01ab6711c4e7d8aebc3a36426be69bf8d9a9", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2014-10-14T20:43:20Z"},
{"Line": "=>249", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (props.isDefaultModuleSet()) { printRed(\"Filename doesn't contain com/hazelcast or %s: %s\", props.getDefaultModule(), fileName); }else if (repository.hasDefaultModule()) { printRed(\"Filename doesn't contain com/hazelcast or %s: %s\", repository.getDefaultModule(), fileName); }else { printRed(\"Filename doesn't contain com/hazelcast: %s\", fileName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3109/buggy-version/src.main.java.com.hazelcast.qasonar.codecoverage.CodeCoverageReader.java", "BodyUseAPI": ["com.hazelcast.qasonar.codecoverage.CodeCoverageReader.printRed(java.lang.String,props.getDefaultModule(),java.lang.String)", "com.hazelcast.qasonar.utils.PropertyReader.getDefaultModule()"], "Fixed commit": "287d15b0d481e01a7179a81abd9961686dab0dad", "Url": "https://api.github.com/repos/hazelcast/hazelcast-qa", "Date": "2016-07-27T09:38:05Z"},
{"Line": "=>172", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["microbat.model.trace.StepVariableRelationEntry.getConsumers()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (readingCursor >= (consumers.size())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2939/buggy-version/microbat.src.main.microbat.model.trace.Trace.java", "BodyUseAPI": [], "Fixed commit": "695fe7c8078f15f22c6b4d7a7a5446b8514ed44e", "Url": "https://api.github.com/repos/sunjun-group/Ziyuan", "Date": "2016-01-24T07:01:37Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((io.xdevs23.cornowser.browser.CornBrowser.publicWebRender) != null) || (CornBrowser.publicWebRender.getUrl().isEmpty())) CornBrowser.publicWebRender.load(getCurrentTab().getUrl());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3183/buggy-version/app.src.main.java.io.xdevs23.cornowser.browser.browser.modules.tabs.BlueListedTabSwitcher.java", "BodyUseAPI": [], "Fixed commit": "5d48bcebccb4c89078032056e46d554ab2180287", "Url": "https://api.github.com/repos/xdevs23/Cornowser", "Date": "2016-01-23T17:34:50Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((state.getState()) == (State.START)) { state.setState(State.STOP); toast(\"Game stopped.\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4828/buggy-version/src.com.example.jpacmandroid.Game.java", "BodyUseAPI": ["com.example.jpacmandroid.State.setState(State.STOP)"], "Fixed commit": "983ede4cdcb9f676717817f1d5d81f03662c79f7", "Url": "https://api.github.com/repos/zeromadcowz/JPacmAndroid", "Date": "2014-04-03T00:40:46Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((checkCaptured.getBuilding().getOwner()) == null) { Player attacker = checkCaptured.getUnit().getOwner(); checkCaptured.getBuilding().setOwner(attacker); }else if ((checkCaptured.getUnit().getOwner().getNum()) != (checkCaptured.getBuilding().getOwner().getNum())) { checkCaptured.getBuilding().getOwner().setCitiesControlled(((checkCaptured.getBuilding().getOwner().getCitiesControlled()) - 1)); Player attacker = checkCaptured.getUnit().getOwner(); checkCaptured.getBuilding().setOwner(attacker); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3092/buggy-version/src.TurnManager.java", "BodyUseAPI": ["checkCaptured.getUnit().getOwner()", "checkCaptured.getBuilding().setOwner(Player)", "checkCaptured.getBuilding().getOwner()", "Tile.getUnit()", "checkCaptured.getBuilding().getOwner()", "Tile.getUnit()", "checkCaptured.getUnit().getOwner()", "Tile.getBuilding()", "Tile.getBuilding()", "checkCaptured.getBuilding().getOwner().getCitiesControlled()", "Tile.getBuilding()", "Tile.getBuilding()", "checkCaptured.getBuilding().getOwner().getNum()", "checkCaptured.getUnit().getOwner()", "checkCaptured.getUnit().getOwner().getNum()", "checkCaptured.getBuilding().getOwner().setCitiesControlled(((checkCaptured.getBuilding().getOwner().getCitiesControlled()) - 1))", "Tile.getUnit()", "checkCaptured.getBuilding().setOwner(Player)", "Tile.getBuilding()", "checkCaptured.getBuilding().getOwner()"], "Fixed commit": "4d3ba90743265c2a9e250e9c6752a4a25e58a2d3", "Url": "https://api.github.com/repos/tomatocurry1/SoftDevProject", "Date": "2017-04-19T14:37:54Z"},
{"Line": "=>469", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (heroPanelNode.hasNode(\"cta\")) { if (org.apache.commons.lang.StringUtils.isNotBlank(heroPanellinkUrl)) { heroPanelNode.getNode(\"cta\").setProperty(\"url\", heroPanellinkUrl); }else { sb.append(Constants.HERO_SLIDE_LINKURL_NOT_FOUND); } }else { sb.append(Constants.HERO_COMPONENT_CTA_NODE_NOT_FOUND); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1781/buggy-version/OVWMigration.src.main.com.cisco.dse.global.migration.rproductlanding.RProductLandingVariation1.java", "BodyUseAPI": ["javax.jcr.Node.getNode(java.lang.String)", "heroPanelNode.getNode(\"cta\").setProperty(java.lang.String,java.lang.String)"], "Fixed commit": "1ab7f03050212f31d5b29bca1e5d484e304b92d7", "Url": "https://api.github.com/repos/shreyabhatnagar/OVWMigration", "Date": "2016-02-08T10:54:12Z"},
{"Line": "=>283", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(model.containsObject(vehicle))) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7546/buggy-version/ui.src.main.java.com.github.rinde.rinsim.ui.renderers.AGVRenderer.java", "BodyUseAPI": [], "Fixed commit": "0365b7373ade93aa6ded4a23c613b60c12065366", "Url": "https://api.github.com/repos/rinde/RinSim", "Date": "2015-09-10T09:09:00Z"},
{"Line": "=>46", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.reflect.InvocationTargetException.getCause()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (cause instanceof io.github.kkysen.quicktrip.app.InputError) { throw ((io.github.kkysen.quicktrip.app.InputError) (cause)); }else { throw new java.lang.RuntimeException(cause); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6656/buggy-version/src.main.java.io.github.kkysen.quicktrip.app.Model.java", "BodyUseAPI": [], "Fixed commit": "d7a824d0c23c2ce293ecda21752f7c963c0e8ad8", "Url": "https://api.github.com/repos/kkysen/QuickTrip", "Date": "2017-01-08T19:55:25Z"},
{"Line": "=>203", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((secondvalue.type) == (calculator.Parser.ValueType.SCALAR)) { answervalue = (firstvalue.value) - ((secondvalue.value) * (calculator.Parser.PT_PER_IN)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3970/buggy-version/ps3.src.calculator.Parser.java", "BodyUseAPI": [], "Fixed commit": "46f29fc318f3c1bbcc1458bddcc504448fb06f09", "Url": "https://api.github.com/repos/ypomeranz/MIT6005ps2", "Date": "2016-08-02T01:53:15Z"},
{"Line": "=>241", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((firstvalue.type) == (calculator.Parser.ValueType.SCALAR)) && ((secondvalue.type) == (calculator.Parser.ValueType.INCHES))) { answer = new calculator.Parser.Value(((((firstvalue.value) * (calculator.Parser.PT_PER_IN)) * (calculator.Parser.PT_PER_IN)) / (secondvalue.value)), calculator.Parser.ValueType.INCHES); }else if ((firstvalue.type) != (calculator.Parser.ValueType.SCALAR)) { answer = new calculator.Parser.Value(answervalue, firstvalue.type); }else if ((secondvalue.type) != (calculator.Parser.ValueType.SCALAR)) { answer = new calculator.Parser.Value(answervalue, secondvalue.type); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3970/buggy-version/ps3.src.calculator.Parser.java", "BodyUseAPI": [], "Fixed commit": "46f29fc318f3c1bbcc1458bddcc504448fb06f09", "Url": "https://api.github.com/repos/ypomeranz/MIT6005ps2", "Date": "2016-08-02T01:53:15Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((secondvalue.type) == (calculator.Parser.ValueType.SCALAR)) { answervalue = (firstvalue.value) + ((secondvalue.value) * (calculator.Parser.PT_PER_IN)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3970/buggy-version/ps3.src.calculator.Parser.java", "BodyUseAPI": [], "Fixed commit": "46f29fc318f3c1bbcc1458bddcc504448fb06f09", "Url": "https://api.github.com/repos/ypomeranz/MIT6005ps2", "Date": "2016-08-02T01:53:15Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.kylinolap.common.persistence.ResourceStore.getResource(java.lang.String,java.lang.Class,com.kylinolap.common.persistence.Serializer<com.kylinolap.metadata.model.TableDesc>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (t == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3082/buggy-version/metadata.src.main.java.com.kylinolap.metadata.MetadataManager.java", "BodyUseAPI": [], "Fixed commit": "529c3eed3826cbb581eeef17657ad08b18adc8c9", "Url": "https://api.github.com/repos/KylinOLAP/Kylin", "Date": "2015-01-30T06:04:12Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((pictureByteArrayRef.getId()) != null) { return new org.activiti.engine.identity.Picture(pictureByteArrayRef.getBytes(), pictureByteArrayRef.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5146/buggy-version/modules.activiti-engine.src.main.java.org.activiti.engine.impl.persistence.entity.UserEntity.java", "BodyUseAPI": ["org.activiti.engine.impl.persistence.entity.ByteArrayRef.getName()", "org.activiti.engine.impl.persistence.entity.ByteArrayRef.getBytes()"], "Fixed commit": "e05e40e3ec4c7befa63d3467ed4e221ca6cf5ef6", "Url": "https://api.github.com/repos/Activiti/Activiti", "Date": "2013-06-18T14:00:05Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((user.getDroppedItems()) != null) { for (org.bukkit.entity.Item item : user.getDroppedItems()) item.remove(); user.resetItems(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/9240/buggy-version/src.com.matejdro.bukkit.portalstick.UserManager.java", "BodyUseAPI": ["com.matejdro.bukkit.portalstick.User.getDroppedItems()", "com.matejdro.bukkit.portalstick.User.resetItems()"], "Fixed commit": "d4cb07d7b3392794e62c1b3aa42bce23382bcd4e", "Url": "https://api.github.com/repos/matejdro/PortalStick", "Date": "2011-05-11T09:21:33Z"},
{"Line": "=>57", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((typeDescription.getSuperClass()) != null) { return isMatch || (matchExactClass(typeDescription.getSuperClass())); }else { return isMatch; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1955/buggy-version/apm-sniffer.apm-sdk-plugin.spring-plugins.concurrent-util-4.x-plugin.src.main.java.org.skywalking.apm.plugin.spring.concurrent.match.ListenableFutureCallbackMatch.java", "BodyUseAPI": ["net.bytebuddy.description.type.TypeDescription.getSuperClass()", "org.skywalking.apm.plugin.spring.concurrent.match.ListenableFutureCallbackMatch.matchExactClass(typeDescription.getSuperClass())"], "Fixed commit": "4c7eda8e387518fc2d2d7ea2e46596b7cc943e96", "Url": "https://api.github.com/repos/apache/incubator-skywalking", "Date": "2017-12-05T05:41:19Z"},
{"Line": "=>85", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mProcess) == null) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/314/buggy-version/de.neo.remote.src.de.neo.remote.action.CommandAction.java", "BodyUseAPI": [], "Fixed commit": "cd76e57d325bf61a1fca5fa04c4e7fffe69f13c0", "Url": "https://api.github.com/repos/dabastynator/SmartHome", "Date": "2015-05-25T09:25:08Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.uw.zookeeper.data.ZNodeName.Path.root().toString().equals(path)) { return path; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6685/buggy-version/src.main.java.edu.uw.zookeeper.data.ZNodeName.java", "BodyUseAPI": [], "Fixed commit": "9bcca718e25ec1333a35e86cabde83f8b1de75d7", "Url": "https://api.github.com/repos/lisaglendenning/zookeeper-lite", "Date": "2013-05-10T18:22:53Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((dataStoreType.getBehaviors()) != null) { sb.append(\"Behaviors: \").append(java.lang.System.lineSeparator()); for (java.lang.String behavior : dataStoreType.getBehaviors().getBehavior()) { sb.append(\"\\t\").append(\"Behavior: \").append(behavior).append(java.lang.System.lineSeparator()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2488/buggy-version/crossdata-common.src.main.java.com.stratio.crossdata.common.api.ManifestHelper.java", "BodyUseAPI": ["com.stratio.crossdata.common.api.datastore.DataStoreType.getBehaviors()", "dataStoreType.getBehaviors().getBehavior()"], "Fixed commit": "6956444bff411b813c9ac02d1faf14063219a339", "Url": "https://api.github.com/repos/Stratio/crossdata", "Date": "2014-10-22T08:21:49Z"},
{"Line": "=>422", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (omElement.getLocalName().equals(\"parameter\")) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1963/buggy-version/esb.org.wso2.developerstudio.eclipse.gmf.esb.diagram.src.org.wso2.developerstudio.eclipse.gmf.esb.diagram.custom.deserializer.Deserializer.java", "BodyUseAPI": [], "Fixed commit": "2032760136cec60367d31f33fc31bae5c1bc8b69", "Url": "https://api.github.com/repos/wso2/developer-studio", "Date": "2015-10-07T11:47:19Z"},
{"Line": "=>330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(radixcore.data.DataWatcherEx.allowClientSideModification)) { radixcore.data.DataWatcherEx.allowClientSideModification = true; isSwinging.setValue(false); radixcore.data.DataWatcherEx.allowClientSideModification = false; }else { isSwinging.setValue(false); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5468/buggy-version/src.main.java.mca.entity.EntityHuman.java", "BodyUseAPI": [], "Fixed commit": "0ea82238af47603e102851a29b0437fa6d4e6c2c", "Url": "https://api.github.com/repos/WildBamaBoy/minecraft-comes-alive", "Date": "2015-03-25T18:42:03Z"},
{"Line": "=>234", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((coordinatorParameters.getAfterCompletionFile()) != null) { bash.execute((((coordinatorParameters.getAfterCompletionFile()) + \" \") + (outputDirectory.getAbsolutePath()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2880/buggy-version/simulator.src.main.java.com.hazelcast.simulator.coordinator.Coordinator.java", "BodyUseAPI": ["com.hazelcast.simulator.utils.Bash.execute((((coordinatorParameters.getAfterCompletionFile()) + \" \") + (outputDirectory.getAbsolutePath())))", "com.hazelcast.simulator.coordinator.CoordinatorParameters.getAfterCompletionFile()"], "Fixed commit": "88f72ebfafad596cbed1db8250c1969dec5bdfe8", "Url": "https://api.github.com/repos/pveentjer/hazelcast-simulator", "Date": "2016-07-30T09:15:12Z"},
{"Line": "=>144", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((request.getSession(false)) != null) { request.getSession(false).invalidate(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2658/buggy-version/Frontend.src.main.java.com.web.bokningstjanst.UtilServlet.java", "BodyUseAPI": ["javax.servlet.http.HttpServletRequest.getSession(boolean)", "request.getSession(false).invalidate()"], "Fixed commit": "364ed41b64b6427a7e1d4b034a4b72fa47fcf4a9", "Url": "https://api.github.com/repos/philipbodell/Bokningstjanst", "Date": "2014-01-22T15:55:06Z"},
{"Line": "=>141", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull]", "Content": "=>if ((resource == null) || (!(resource.exists()))) { resource = ((defaultResourceLoader) != null) ? defaultResourceLoader.getResource(uri) : null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5696/buggy-version/grails-core.src.main.groovy.org.codehaus.groovy.grails.core.io.DefaultResourceLocator.java", "BodyUseAPI": [], "Fixed commit": "f615c01551cf2f59d01a285fe859cc3594751e81", "Url": "https://api.github.com/repos/adjudicallc/grails-core", "Date": "2011-07-29T13:38:17Z"},
{"Line": "=>828", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nispok.snackbar.Snackbar.init(parent.getContext(),<nulltype>,android.view.ViewGroup,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (params != null) { updateLayoutParamsMargins(null, params); showInternal(null, params, parent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6063/buggy-version/lib.src.main.java.com.nispok.snackbar.Snackbar.java", "BodyUseAPI": ["com.nispok.snackbar.Snackbar.showInternal(<nulltype>,com.nispok.snackbar.MarginLayoutParams,android.view.ViewGroup)", "com.nispok.snackbar.Snackbar.updateLayoutParamsMargins(<nulltype>,com.nispok.snackbar.MarginLayoutParams)"], "Fixed commit": "febb3400fc4b6975f7365e3af62d37aae25bc974", "Url": "https://api.github.com/repos/whlk/snackbar", "Date": "2017-12-18T15:40:17Z"},
{"Line": "=>803", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.nispok.snackbar.Snackbar.init(android.app.Activity,android.app.Activity,android.view.ViewGroup,boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (params != null) { updateLayoutParamsMargins(targetActivity, params); showInternal(targetActivity, params, root); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6063/buggy-version/lib.src.main.java.com.nispok.snackbar.Snackbar.java", "BodyUseAPI": ["com.nispok.snackbar.Snackbar.showInternal(android.app.Activity,com.nispok.snackbar.MarginLayoutParams,android.view.ViewGroup)", "com.nispok.snackbar.Snackbar.updateLayoutParamsMargins(android.app.Activity,com.nispok.snackbar.MarginLayoutParams)"], "Fixed commit": "febb3400fc4b6975f7365e3af62d37aae25bc974", "Url": "https://api.github.com/repos/whlk/snackbar", "Date": "2017-12-18T15:40:17Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["session.createQuery(\"from Result\").getResultList()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((results.size()) > 0) { session.flush(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8693/buggy-version/db_hackaton.src.main.java.ru.atom.dbhackaton.dao.ResultDao.java", "BodyUseAPI": [], "Fixed commit": "61b3eaf034f2e4ac95eb58cb4626f0429f30c102", "Url": "https://api.github.com/repos/SaenkoDmitry/atom", "Date": "2017-04-18T22:53:52Z"},
{"Line": "=>160", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.fasterxml.jackson.databind.introspect.Annotated.getAnnotation(java.lang.Class)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (elem != null) { if (!(elem.defaultValue().isEmpty())) { return elem.defaultValue(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7554/buggy-version/modules.swagger-core.src.main.java.com.wordnik.swagger.jackson.AbstractModelConverter.java", "BodyUseAPI": ["elem.defaultValue().isEmpty()", "com.wordnik.swagger.jackson.XmlElement.defaultValue()", "com.wordnik.swagger.jackson.XmlElement.defaultValue()"], "Fixed commit": "3fc5e0883c73ea2db579cd94ba5e3833acb79f6f", "Url": "https://api.github.com/repos/swagger-api/swagger-core", "Date": "2015-03-13T20:22:44Z"},
{"Line": "=>86", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null == (album.getAlbumCreateTime())) { album.setAlbumCreateTime(new java.util.Date()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/302/buggy-version/apis.album.src.album.service.impl.AlbumServiceImpl.java", "BodyUseAPI": ["album.data.EIAlbumAlbum.setAlbumCreateTime(java.util.Date)"], "Fixed commit": "285d658e8bd8200d94032ee5d2a5627da9b98e0a", "Url": "https://api.github.com/repos/CaoYouXin/serveV2", "Date": "2017-10-02T09:37:35Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (null == (photo.getAlbumPhotoCreateTime())) { photo.setAlbumPhotoCreateTime(new java.util.Date()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/302/buggy-version/apis.album.src.album.service.impl.AlbumServiceImpl.java", "BodyUseAPI": ["album.data.EIAlbumPhoto.setAlbumPhotoCreateTime(java.util.Date)"], "Fixed commit": "285d658e8bd8200d94032ee5d2a5627da9b98e0a", "Url": "https://api.github.com/repos/CaoYouXin/serveV2", "Date": "2017-10-02T09:37:35Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(map.containsKey(org.arquillian.cube.impl.client.CubeConfiguration.DOCKER_CONTAINERS))) && (!(map.containsKey(org.arquillian.cube.impl.client.CubeConfiguration.DOCKER_CONTAINERS_FILE)))) { final java.io.InputStream configurationResource = org.arquillian.cube.impl.client.CubeConfiguration.class.getResourceAsStream((\"/\" + (org.arquillian.cube.impl.client.CubeConfiguration.DEFAULT_CUBE_DEFINITION_FILE))); cubeConfiguration.dockerContainersContent = org.arquillian.cube.impl.util.ConfigUtil.applyExtendsRules(((java.util.Map<java.lang.String, java.lang.Object>) (new org.yaml.snakeyaml.Yaml().load(configurationResource)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7846/buggy-version/docker.src.main.java.org.arquillian.cube.impl.client.CubeConfiguration.java", "BodyUseAPI": [], "Fixed commit": "36196a99cb561b40159857da191bd9e5ba4cdd32", "Url": "https://api.github.com/repos/lordofthejars/arquillian-cube", "Date": "2015-03-19T18:46:09Z"},
{"Line": "=>303", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Blackjack.dealer.getTotal()) >= 17) { Blackjack.dealerStatus.setText(\"Standing\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5994/buggy-version/Blackjack.java", "BodyUseAPI": [], "Fixed commit": "a1074ccb6d11d7a585f2e81ce1bcbdc27d574dd8", "Url": "https://api.github.com/repos/ptrax/SER215-Project", "Date": "2017-04-28T09:44:43Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((input.available()) == 0) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4079/buggy-version/common.common-rest.src.main.java.io.servicecomb.common.rest.codec.produce.ProduceProcessor.java", "BodyUseAPI": [], "Fixed commit": "79c32d7ded050014115007ae3f20d190b62a1ea5", "Url": "https://api.github.com/repos/liubao68/java-chassis", "Date": "2017-08-21T02:15:17Z"},
{"Line": "=>32", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (result == null) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4079/buggy-version/common.common-rest.src.main.java.io.servicecomb.common.rest.codec.produce.ProduceProcessor.java", "BodyUseAPI": [], "Fixed commit": "79c32d7ded050014115007ae3f20d190b62a1ea5", "Url": "https://api.github.com/repos/liubao68/java-chassis", "Date": "2017-08-21T02:15:17Z"},
{"Line": "=>30", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (object == null) return \"null\\n\";", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/478/buggy-version/spock-core.src.main.java.org.spockframework.runtime.condition.ObjectRendererService.java", "BodyUseAPI": [], "Fixed commit": "685977de3135c3420c98ffc7f4d65226db265222", "Url": "https://api.github.com/repos/spockframework/spock", "Date": "2011-02-17T02:42:05Z"},
{"Line": "=>261", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (index == (healthInformation.size())) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5429/buggy-version/CSE360Project2.src.my.CSE360Project.Person.java", "BodyUseAPI": [], "Fixed commit": "e03e6badcb65bdf042eba9171d804d5ec58d9e42", "Url": "https://api.github.com/repos/garrettfreibott/CSE-360-Project", "Date": "2014-04-25T21:59:47Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(settingValueFromControl)) { updateComponentFromInput(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6965/buggy-version/plugin_ide.ui.src-lang.melnorme.util.swt.components.AbstractField.java", "BodyUseAPI": [], "Fixed commit": "717c30d13d3a415849ead6de52abb7a3e92240dc", "Url": "https://api.github.com/repos/bruno-medeiros/MelnormeEclipse", "Date": "2015-05-20T18:49:54Z"},
{"Line": "=>327", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(graph.add(v.data))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8363/buggy-version/src.com.samrj.devil.math.topo.DAG.java", "BodyUseAPI": [], "Fixed commit": "8fb34c2dc57b383e04ada851f3f5eba9d35afa97", "Url": "https://api.github.com/repos/SmashMaster/DevilUtil", "Date": "2014-10-19T03:56:49Z"},
{"Line": "=>360", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<org.w3c.dom.Element, org.eclipse.pde.internal.core.builders.XMLErrorReporter.ElementData>.get(org.w3c.dom.Element)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (data == null) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7842/buggy-version/ui.org.eclipse.pde.core.src.org.eclipse.pde.internal.core.builders.XMLErrorReporter.java", "BodyUseAPI": [], "Fixed commit": "edb5c6e0d3c2c64fe3cd92e7a9fb085292c660a2", "Url": "https://api.github.com/repos/Overruler/eclipse.pde.ui", "Date": "2014-01-07T15:48:30Z"},
{"Line": "=>388", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.HashMap<org.w3c.dom.Element, org.eclipse.pde.internal.core.builders.XMLErrorReporter.ElementData>.get(org.w3c.dom.Element)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (data != null) { try { int offset = getAttributeOffset(attName, element.getAttribute(attName), data.offset); if (offset != (-1)) return (fTextDocument.getLineOfOffset(offset)) + 1; } catch (org.eclipse.pde.internal.core.builders.BadLocationException e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7842/buggy-version/ui.org.eclipse.pde.core.src.org.eclipse.pde.internal.core.builders.XMLErrorReporter.java", "BodyUseAPI": ["org.eclipse.pde.internal.core.builders.XMLErrorReporter.getAttributeOffset(java.lang.String,java.lang.String,int)"], "Fixed commit": "edb5c6e0d3c2c64fe3cd92e7a9fb085292c660a2", "Url": "https://api.github.com/repos/Overruler/eclipse.pde.ui", "Date": "2014-01-07T15:48:30Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((inRuleGroup) && (defaultOff))) { defaultOff = \"off\".equals(attrs.getValue(org.languagetool.rules.patterns.DEFAULT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8338/buggy-version/languagetool-core.src.main.java.org.languagetool.rules.patterns.PatternRuleHandler.java", "BodyUseAPI": [], "Fixed commit": "689631b270ae34e2d38e4fbb6de5a3f8cf3d6fe8", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2014-05-07T07:44:18Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!((inRuleGroup) && (defaultOn))) { defaultOn = \"on\".equals(attrs.getValue(org.languagetool.rules.patterns.DEFAULT)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8338/buggy-version/languagetool-core.src.main.java.org.languagetool.rules.patterns.PatternRuleHandler.java", "BodyUseAPI": [], "Fixed commit": "689631b270ae34e2d38e4fbb6de5a3f8cf3d6fe8", "Url": "https://api.github.com/repos/languagetool-org/languagetool", "Date": "2014-05-07T07:44:18Z"},
{"Line": "=>28", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((serverCache.size()) == 0) { return -1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4228/buggy-version/LoadBalancer.src.main.java.com.uci.routing.RoundRobinBalancer.java", "BodyUseAPI": [], "Fixed commit": "b04e5d28eba7aed45dc31a38c3c8411839e6b900", "Url": "https://api.github.com/repos/jma19/LoadBalancer", "Date": "2017-05-15T00:48:03Z"},
{"Line": "=>52", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.uci.routing.RoundRobinBalancer.nextServerSlot()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (curIndex == (-1)) { java.lang.System.out.println(\"No Server can be distributed!!!\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4228/buggy-version/LoadBalancer.src.main.java.com.uci.routing.RoundRobinBalancer.java", "BodyUseAPI": [], "Fixed commit": "b04e5d28eba7aed45dc31a38c3c8411839e6b900", "Url": "https://api.github.com/repos/jma19/LoadBalancer", "Date": "2017-05-15T00:48:03Z"},
{"Line": "=>188", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(\"\".equals(message))) { return message; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4697/buggy-version/src.main.java.com.beecloud.service.MqttServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "255d0507aeba9f43e7a7513e0d46db543f3ab5fb", "Url": "https://api.github.com/repos/TigerLH/MockTest4BeeCloud", "Date": "2017-03-03T01:48:55Z"},
{"Line": "=>44", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ru.elishanto.cryptoimg.Crypter.decode(java.util.ArrayList)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((result.length()) > 3) return result.substring(3, ((result.length()) - 1)); else return result.substring(0, ((result.length()) - 1));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8907/buggy-version/src.main.java.ru.elishanto.cryptoimg.Crypter.java", "BodyUseAPI": ["java.lang.String.substring(int,int)", "java.lang.String.length()", "java.lang.String.substring(int,int)", "java.lang.String.length()"], "Fixed commit": "063c13101dba2e16564ae3832d539c2d9146146c", "Url": "https://api.github.com/repos/shekhirin/cryptoimg", "Date": "2015-10-15T15:02:32Z"},
{"Line": "=>459", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["co.sblock.Sblock.Chat.ChatModule.getChatModule().getChannelManager().getChannel(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (c == null) { this.sendMessage(co.sblock.Sblock.Chat.ChatMsgs.errorInvalidChannel(cName)); this.listening.remove(cName); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8017/buggy-version/src.co.sblock.Sblock.UserData.SblockUser.java", "BodyUseAPI": [], "Fixed commit": "d61f80ce8d308ae1ff3c31efd48b3091fe926b30", "Url": "https://api.github.com/repos/SblockCo/Sblock", "Date": "2013-09-18T03:37:47Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mover instanceof hanto.studentCPBP.common.FlyMover) { return new hanto.studentCPBP.delta.DeltaHantoFlyMoverValidator(((hanto.studentCPBP.common.FlyMover) (mover)), this); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5948/buggy-version/src.hanto.studentCPBP.delta.DeltaHantoRuleSet.java", "BodyUseAPI": [], "Fixed commit": "07a7681787a368d32a5375688697771005b94f3e", "Url": "https://api.github.com/repos/cporell/Hanto", "Date": "2016-04-19T01:56:11Z"},
{"Line": "=>271", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((mouseLocation) != null) cursorEvent = new yarangi.graphics.quadraturin.events.CursorEvent(viewPoint.toWorldCoordinates(mouseLocation), mouseLocation);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5159/buggy-version/quadraturin-core.src.main.java.yarangi.graphics.quadraturin.QuadVoices.java", "BodyUseAPI": [], "Fixed commit": "738b70339761007fe8802aa1215cb492cd5de103", "Url": "https://api.github.com/repos/dveyarangi/quadraturin", "Date": "2011-10-03T20:24:09Z"},
{"Line": "=>55", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (rSrc.exists()) { com.sandwich.util.io.FileUtils.forEachFile(rSrc, rDest, fileAction); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8627/buggy-version/lib.file-monitor.src.com.sandwich.util.io.FileUtils.java", "BodyUseAPI": ["com.sandwich.util.io.FileUtils.forEachFile(java.io.File,java.io.File,com.sandwich.util.io.FileAction)"], "Fixed commit": "e5cb2d81758de5e7703f65e935a7762096ecbb1f", "Url": "https://api.github.com/repos/rloomans/java-koans", "Date": "2013-12-04T03:45:18Z"},
{"Line": "=>445", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getNextSibling()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (slist == null) { result = true; }else { final com.puppycrawl.tools.checkstyle.api.DetailAST block = slist.getFirstChild(); if ((block.getType()) != (com.puppycrawl.tools.checkstyle.api.TokenTypes.SLIST)) { result = (literalDefault.getLineNo()) == (block.getLineNo()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/884/buggy-version/src.main.java.com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck.java", "BodyUseAPI": ["com.puppycrawl.tools.checkstyle.api.DetailAST.getFirstChild()"], "Fixed commit": "a882e6ac5b137f9e84f47ba42d5b65e106fc5587", "Url": "https://api.github.com/repos/liscju/checkstyle", "Date": "2016-12-21T06:58:23Z"},
{"Line": "=>192", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((getOwners()) != null) for (org.mctourney.autoreferee.AutoRefTeam team : getOwners()) e.addContent(new org.jdom2.Element(\"owner\").setText(team.getName()));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/9092/buggy-version/src.main.java.org.mctourney.autoreferee.regions.AutoRefRegion.java", "BodyUseAPI": [], "Fixed commit": "54376c0686df6057c8d3504725391149442ceb69", "Url": "https://api.github.com/repos/rmct/AutoReferee", "Date": "2013-06-29T19:04:36Z"},
{"Line": "=>183", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (e == null) return e;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/9092/buggy-version/src.main.java.org.mctourney.autoreferee.regions.AutoRefRegion.java", "BodyUseAPI": [], "Fixed commit": "54376c0686df6057c8d3504725391149442ceb69", "Url": "https://api.github.com/repos/rmct/AutoReferee", "Date": "2013-06-29T19:04:36Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((recipeId <= 0) || (edu.stthomas.gps.familyrecipesystem.AppSession.getInstance().getUser().getId().equals(recipe.getManagedBy().getId()))) { canEdit = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3788/buggy-version/src.main.java.edu.stthomas.gps.familyrecipesystem.gui.RecipePanel.java", "BodyUseAPI": [], "Fixed commit": "73fa1359f1e43e51310d2af667493d0d8d9d0c57", "Url": "https://api.github.com/repos/omme0003/FamilyRecipeSystem", "Date": "2015-05-05T01:27:58Z"},
{"Line": "=>69", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["mage.game.Game.getPlayer(source.getControllerId())"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (controller == null) { return false; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5664/buggy-version/Mage.src.mage.abilities.effects.common.ReturnToHandTargetEffect.java", "BodyUseAPI": [], "Fixed commit": "85096a99904f89826d61a6e086338f9f1ea6c866", "Url": "https://api.github.com/repos/magefree/mage", "Date": "2014-03-03T17:23:32Z"},
{"Line": "=>399", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (one == null) { return false; }else { return ((one.data.equals(two.data)) && (trees_and_graphs.GraphsAndTrees.isSubtree(one.children[0], two.children[0]))) && (trees_and_graphs.GraphsAndTrees.isSubtree(one.children[1], two.children[1])); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4499/buggy-version/src.trees_and_graphs.GraphsAndTrees.java", "BodyUseAPI": ["one.data.equals(two.data)", "trees_and_graphs.GraphsAndTrees.isSubtree(one.children[1],two.children[1])", "trees_and_graphs.GraphsAndTrees.isSubtree(one.children[0],two.children[0])"], "Fixed commit": "3dae7a1aef9d561ff8c3a70450e9ee0e5597d326", "Url": "https://api.github.com/repos/kyle-pierce/interview-questions", "Date": "2017-09-23T18:26:33Z"},
{"Line": "=>120", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONArray.getJSONObject(int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (indiObjects.has(\"picture\")) feedData.setPicture(indiObjects.getString(\"picture\"));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/731/buggy-version/app.src.main.java.vrashabh.fbpagesmanager.FeedView.java", "BodyUseAPI": ["org.json.JSONObject.getString(java.lang.String)", "vrashabh.fbpagesmanager.ORMpackages.FeedData.setPicture(indiObjects.getString(\"picture\"))"], "Fixed commit": "e27cbacac11dde7da5c56261bbe5c2a17afefdc8", "Url": "https://api.github.com/repos/vrash/PagesManager", "Date": "2015-02-16T09:07:40Z"},
{"Line": "=>98", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.awt.Graphics.getFontMetrics()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((fm.stringWidth(s)) > w) { g.setFont(g.getFont().deriveFont(((g.getFont().getSize2D()) * (((float) (w)) / (fm.stringWidth(s)))))); fm = g.getFontMetrics(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5599/buggy-version/PlanningPoker.src.edu.wpi.cs.wpisuitetng.modules.planningpoker.view.voting.CardFactory.java", "BodyUseAPI": ["java.awt.Graphics.setFont(java.awt.Font)", "java.awt.FontMetrics.stringWidth(java.lang.String)", "java.awt.Font.deriveFont(float)"], "Fixed commit": "bd60ec637d5e36e1913d4fb1c0e11e2292798cea", "Url": "https://api.github.com/repos/TheTeam8s/wpi-suite", "Date": "2014-05-02T01:49:05Z"},
{"Line": "=>135", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (directory == null) { directory = catalog.getResourceLoader().findOrCreateDirectory(\"data\", workspaceName, storeName); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5083/buggy-version/src.restconfig.src.main.java.org.geoserver.catalog.rest.StoreFileResource.java", "BodyUseAPI": [], "Fixed commit": "f8d205f688ab9b98bfe7d315f5a883190cdce67d", "Url": "https://api.github.com/repos/mcrmcr/geoserver", "Date": "2014-06-05T17:30:48Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.restlet.data.Method.equals(Method.POST)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (isPost && (storeName != null)) { org.geoserver.catalog.CoverageStoreInfo coverage = catalog.getCoverageStoreByName(storeName); if (coverage != null) { if ((workspaceName == null) || ((workspaceName != null) && (coverage.getWorkspace().getName().equalsIgnoreCase(workspaceName)))) { java.io.File dirFile = org.geotools.data.DataUtilities.urlToFile(new java.net.URL(coverage.getURL())); if (!(dirFile.exists())) { directory = catalog.getResourceLoader().findOrCreateDirectory(dirFile, \"\"); }else { directory = dirFile; } } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5083/buggy-version/src.restconfig.src.main.java.org.geoserver.catalog.rest.StoreFileResource.java", "BodyUseAPI": ["org.geoserver.catalog.Catalog.getCoverageStoreByName(java.lang.String)"], "Fixed commit": "f8d205f688ab9b98bfe7d315f5a883190cdce67d", "Url": "https://api.github.com/repos/mcrmcr/geoserver", "Date": "2014-06-05T17:30:48Z"},
{"Line": "=>227", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((to.getText().toString()) == null) { refresh.putExtra(\"destination\", destination); }else { refresh.putExtra(\"destination\", to.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6098/buggy-version/app.src.main.java.com.example.corneeldenhartogh.corneel_pset6.MainActivity.java", "BodyUseAPI": ["to.getText().toString()", "android.widget.AutoCompleteTextView.getText()", "android.content.Intent.putExtra(java.lang.String,to.getText().toString())"], "Fixed commit": "189d5f20b2dd60018e40fcaaaddd5f62656996e0", "Url": "https://api.github.com/repos/CorneelDragon/Corneel_pset6", "Date": "2016-10-27T18:17:39Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((from.getText().toString()) == null) { refresh.putExtra(\"origin\", origin); }else { refresh.putExtra(\"origin\", from.getText().toString()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6098/buggy-version/app.src.main.java.com.example.corneeldenhartogh.corneel_pset6.MainActivity.java", "BodyUseAPI": ["android.widget.AutoCompleteTextView.getText()", "android.content.Intent.putExtra(java.lang.String,from.getText().toString())", "from.getText().toString()"], "Fixed commit": "189d5f20b2dd60018e40fcaaaddd5f62656996e0", "Url": "https://api.github.com/repos/CorneelDragon/Corneel_pset6", "Date": "2016-10-27T18:17:39Z"},
{"Line": "=>79", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (sequencer.isOpen()) { com.midiguy.midi.MidiSequencer.LOG.info(\"\\nSequencer was paused.\\n\"); sequencer.stop(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2634/buggy-version/src.com.midiguy.midi.MidiSequencer.java", "BodyUseAPI": ["javax.sound.midi.Sequencer.stop()"], "Fixed commit": "9870e0ee40652df630e2012a99b756fcffb9dc12", "Url": "https://api.github.com/repos/Parzival42/MidiGuy", "Date": "2017-10-24T08:34:20Z"},
{"Line": "=>335", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["nigam.yomarket.notification_frag.notify.getActivity()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (activity == null) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/286/buggy-version/app.src.main.java.nigam.yomarket.notification_frag.java", "BodyUseAPI": [], "Fixed commit": "6b172c0674d748b8512f96fa4afedd8de46ccfe1", "Url": "https://api.github.com/repos/YESALAM/YoMarket", "Date": "2017-07-22T13:31:24Z"},
{"Line": "=>883", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.composites.Composite3D.isShowingLogo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (drawStudLogo) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7712/buggy-version/src.org.nschmidt.ldparteditor.data.GL33ModelRenderer.java", "BodyUseAPI": [], "Fixed commit": "df993ba59bc6cb9e93c30927e2bbec7245994bf8", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-10-10T07:22:33Z"},
{"Line": "=>632", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.nschmidt.ldparteditor.composites.Composite3D.isShowingLogo()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (drawStudLogo) { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7712/buggy-version/src.org.nschmidt.ldparteditor.data.GL33ModelRenderer.java", "BodyUseAPI": [], "Fixed commit": "df993ba59bc6cb9e93c30927e2bbec7245994bf8", "Url": "https://api.github.com/repos/nilsschmidt1337/ldparteditor", "Date": "2016-10-10T07:22:33Z"},
{"Line": "=>73", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.minecolonies.structures.helpers.Structure.getSchematicsFolder()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (schematicFile.toURI().normalize().getPath().startsWith(schematicsFolder.toURI().normalize().getPath())) { com.minecolonies.coremod.util.ClientStructureWrapper.checkDirectory(schematicFile.getParentFile()); try (java.io.OutputStream outputstream = new java.io.FileOutputStream(schematicFile)) { outputstream.write(bytes); } catch (final java.io.IOException e) { com.minecolonies.coremod.util.Log.getLogger().warn(\"Exception while trying to save a schematic.\", e); return; } }else { com.minecolonies.coremod.util.Log.getLogger().info((\"ClientStructureWrapper.handleSaveSchematicMessage: Attempt to save invalid structure name \" + name)); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/499/buggy-version/src.main.java.com.minecolonies.coremod.util.ClientStructureWrapper.java", "BodyUseAPI": ["com.minecolonies.coremod.util.ClientStructureWrapper.checkDirectory(java.io.File)", "java.io.File.getParentFile()"], "Fixed commit": "6b5175d5dac328ed05c879a7f3129c7b1016641c", "Url": "https://api.github.com/repos/ldtteam/minecolonies", "Date": "2017-03-03T10:38:41Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mdIndex.getPath().equals(\"/\")) { dirMdIndex = parentDir; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/528/buggy-version/src.main.java.md.mgmt.service.impl.FindMdIndexServiceImpl.java", "BodyUseAPI": [], "Fixed commit": "c78e9c587cf592f56561987451eb444bbd24e28e", "Url": "https://api.github.com/repos/Yang14/md.mgmt.server.index", "Date": "2016-01-19T07:37:21Z"},
{"Line": "=>592", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(attached)) { this.unlink(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8942/buggy-version/src.haven.CharWnd.java", "BodyUseAPI": [], "Fixed commit": "93ea37a6b56d0bc9e84adb4b82db38e8242c2208", "Url": "https://api.github.com/repos/EnderWiggin/Haven-and-Hearth-client-modified-by-Ender", "Date": "2011-07-13T19:43:08Z"},
{"Line": "=>70", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (shortURL.startsWith(\"Error:\")) shortURL = word;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8188/buggy-version/src.main.java.org.royaldev.lmgtfy.ChatListener.java", "BodyUseAPI": [], "Fixed commit": "2e170a2c8481ed25356615996497929aee2b5215", "Url": "https://api.github.com/repos/jkcclemens/LMGTFYPlugin", "Date": "2014-02-05T04:21:56Z"},
{"Line": "=>77", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((matrix[i][j]) == 0) temp[i][j] = 0; else temp[i][j] = 1;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1302/buggy-version/src.Matrix.java", "BodyUseAPI": [], "Fixed commit": "ed889a5d58d261919e8348455590d71e26c9c328", "Url": "https://api.github.com/repos/Kanister10l/WireWorld", "Date": "2017-04-14T14:23:19Z"},
{"Line": "=>87", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((quantity) >= 100) { android.widget.Toast.makeText(this, \"MAX no. of cups is 100\", Toast.LENGTH_SHORT).show(); return; }else { quantity = (quantity) + 1; displayQuantity(quantity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7439/buggy-version/app.src.main.java.com.example.android.justjava.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cadcc9f77d2f0312393610c27f06a74bca876a8d", "Url": "https://api.github.com/repos/natasak/CoffeeOrderingApp", "Date": "2017-10-16T20:34:47Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((quantity) <= 1) { android.widget.Toast.makeText(this, \"MIN no. of cups is 1\", Toast.LENGTH_SHORT).show(); return; }else { quantity = (quantity) - 1; displayQuantity(quantity); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7439/buggy-version/app.src.main.java.com.example.android.justjava.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "cadcc9f77d2f0312393610c27f06a74bca876a8d", "Url": "https://api.github.com/repos/natasak/CoffeeOrderingApp", "Date": "2017-10-16T20:34:47Z"},
{"Line": "=>254", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((ido.main.GUI.checkAgendaActive()) != null) ido.main.GUI.agendaOff();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1012/buggy-version/V0.0.src.ido.main.Parser.java", "BodyUseAPI": [], "Fixed commit": "9365d741a5cb6f10731a5e7c7fb83fe052deb561", "Url": "https://api.github.com/repos/cs2103Taug2014-t09-2j/main", "Date": "2014-10-30T14:22:51Z"},
{"Line": "=>76", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((lastName) == null) && ((otherUser.lastName) != null)) return false; else if (!(lastName.equals(otherUser.lastName))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2799/buggy-version/src.com.agnotheist.model.domain.User.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "095248e61dcd5c321570355711824edff8659957", "Url": "https://api.github.com/repos/PositiveControl/agnotheist", "Date": "2016-05-22T19:29:01Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((firstName) == null) && ((otherUser.firstName) != null)) return false; else if (!(firstName.equals(otherUser.firstName))) return false;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2799/buggy-version/src.com.agnotheist.model.domain.User.java", "BodyUseAPI": ["java.lang.String.equals(java.lang.String)"], "Fixed commit": "095248e61dcd5c321570355711824edff8659957", "Url": "https://api.github.com/repos/PositiveControl/agnotheist", "Date": "2016-05-22T19:29:01Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dlg.getIndexURL().trim()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (indexUrl.startsWith(\"gs://\")) { enableGoogleMenu(); indexUrl = translateGoogleCloudURL(indexUrl); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4632/buggy-version/src.org.broad.igv.ui.action.LoadFromURLMenuAction.java", "BodyUseAPI": ["org.broad.igv.ui.action.LoadFromURLMenuAction.translateGoogleCloudURL(java.lang.String)"], "Fixed commit": "c1a689f4a966fa4556c119e35d4d406db0cfc9ff", "Url": "https://api.github.com/repos/igvteam/igv", "Date": "2016-07-08T04:11:25Z"},
{"Line": "=>121", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.broad.igv.ga4gh.OAuthUtils.isGoogleCloud(indexUrl)) { if ((indexUrl.indexOf(\"alt=media\")) < 0) { indexUrl = (indexUrl + ((indexUrl.indexOf('?')) > 0 ? \"&\" : \"?\")) + \"alt=media\"; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4632/buggy-version/src.org.broad.igv.ui.action.LoadFromURLMenuAction.java", "BodyUseAPI": ["java.lang.String.indexOf(char)", "java.lang.String.indexOf(java.lang.String)"], "Fixed commit": "c1a689f4a966fa4556c119e35d4d406db0cfc9ff", "Url": "https://api.github.com/repos/igvteam/igv", "Date": "2016-07-08T04:11:25Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((myLocation.y) + 1) < 8) && (((myLocation.x) - 1) >= 0)) { moves.add(new java.awt.Point(((myLocation.x) - 1), ((myLocation.y) + 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2858/buggy-version/src.Pieces.Pawn.java", "BodyUseAPI": ["java.util.List<java.awt.Point>.add(java.awt.Point)"], "Fixed commit": "59f5caea97afba930471b2c233e603840890ee2c", "Url": "https://api.github.com/repos/dimabliz/ChessyMcChessface", "Date": "2017-06-28T00:38:41Z"},
{"Line": "=>39", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((myLocation.y) - 2) >= 0) { moves.add(new java.awt.Point(myLocation.x, ((myLocation.y) - 2))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2858/buggy-version/src.Pieces.Pawn.java", "BodyUseAPI": ["java.util.List<java.awt.Point>.add(java.awt.Point)"], "Fixed commit": "59f5caea97afba930471b2c233e603840890ee2c", "Url": "https://api.github.com/repos/dimabliz/ChessyMcChessface", "Date": "2017-06-28T00:38:41Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((((myLocation.y) - 1) >= 0) && (((myLocation.x) - 1) >= 0)) { moves.add(new java.awt.Point(((myLocation.x) - 1), ((myLocation.y) - 1))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2858/buggy-version/src.Pieces.Pawn.java", "BodyUseAPI": ["java.util.List<java.awt.Point>.add(java.awt.Point)"], "Fixed commit": "59f5caea97afba930471b2c233e603840890ee2c", "Url": "https://api.github.com/repos/dimabliz/ChessyMcChessface", "Date": "2017-06-28T00:38:41Z"},
{"Line": "=>113", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((event.getEventType()) == (net.d80harri.wr.ui.itemtree.TreeItemCellView.TreeItemCellEvent.OUTDENT)) { javafx.scene.control.TreeItem<net.d80harri.wr.ui.itemtree.TreeItemCellView> parent = item.getParent(); int localIdxOfParent = parent.getParent().getChildren().indexOf(parent); parent.getChildren().remove(item); parent.getParent().getChildren().add((localIdxOfParent + 1), item); }else { }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/185/buggy-version/wr.ui.src.main.java.net.d80harri.wr.ui.itemtree.ItemTreeView.java", "BodyUseAPI": [], "Fixed commit": "6b4ff13c553007964df282ac3a45ed9b1de645c5", "Url": "https://api.github.com/repos/d80harri/wr3", "Date": "2015-11-01T17:09:26Z"},
{"Line": "=>117", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.Reader.read(char[],int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (result == (-1)) { return r2.read(cbuf, off, len); }else { return result + (r2.read(cbuf, (off + result), (len - result))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6000/buggy-version/ext.gson_ext.Decoder.java", "BodyUseAPI": ["java.io.Reader.read(char[],int,int)"], "Fixed commit": "bbf157de7c5aa6a0f75142f0d2b89e4360f8fa68", "Url": "https://api.github.com/repos/taichi/gson.rb", "Date": "2013-07-21T15:35:19Z"},
{"Line": "=>742", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((prof.getTitle()) == null) { prof.setTitle(oldProfile.getTitle()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7302/buggy-version/server.FaceBreakUser.java", "BodyUseAPI": ["common.Profile.setTitle(oldProfile.getTitle())"], "Fixed commit": "46cf00fbcc60d6c43113210e328e3027e902d8cd", "Url": "https://api.github.com/repos/dsjas297/FaceBreak", "Date": "2012-04-23T06:10:28Z"},
{"Line": "=>217", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.google.gson.JsonObject.getAsJsonPrimitive(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (countPrimitive == null) { if (org.mobicents.servlet.restcomm.provisioning.number.nexmo.NexmoPhoneNumberProvisioningManager.logger.isDebugEnabled()) { org.mobicents.servlet.restcomm.provisioning.number.nexmo.NexmoPhoneNumberProvisioningManager.logger.debug(\"No numbers found\"); } return new java.util.ArrayList<org.mobicents.servlet.restcomm.provisioning.number.api.PhoneNumber>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6879/buggy-version/restcomm.restcomm.provisioning.number.nexmo.src.main.java.org.mobicents.servlet.restcomm.provisioning.number.nexmo.NexmoPhoneNumberProvisioningManager.java", "BodyUseAPI": [], "Fixed commit": "38b90807d370ae89b94024f470e1232f83834028", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2015-10-25T22:21:20Z"},
{"Line": "=>150", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((\"US\".equalsIgnoreCase(country)) && ((listFilters.getAreaCode()) != null)) { queryUri = ((queryUri + \"?pattern=1\") + (listFilters.getAreaCode())) + \"&search_pattern=0\"; queryParamAdded = true; }else if (filterPattern != null) { queryUri = ((queryUri + \"?pattern=\") + (filterPattern.toString())) + \"&search_pattern=1\"; queryParamAdded = true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6879/buggy-version/restcomm.restcomm.provisioning.number.nexmo.src.main.java.org.mobicents.servlet.restcomm.provisioning.number.nexmo.NexmoPhoneNumberProvisioningManager.java", "BodyUseAPI": ["org.mobicents.servlet.restcomm.provisioning.number.api.PhoneNumberSearchFilters.getAreaCode()"], "Fixed commit": "38b90807d370ae89b94024f470e1232f83834028", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2015-10-25T22:21:20Z"},
{"Line": "=>213", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.mobicents.servlet.restcomm.provisioning.number.nexmo.NexmoPhoneNumberProvisioningManager.logger.isDebugEnabled()) { org.mobicents.servlet.restcomm.provisioning.number.nexmo.NexmoPhoneNumberProvisioningManager.logger.debug((\"Nexmo response \" + (jsonResponse.toString()))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6879/buggy-version/restcomm.restcomm.provisioning.number.nexmo.src.main.java.org.mobicents.servlet.restcomm.provisioning.number.nexmo.NexmoPhoneNumberProvisioningManager.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug((\"Nexmo response \" + (jsonResponse.toString())))"], "Fixed commit": "38b90807d370ae89b94024f470e1232f83834028", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2015-10-25T22:21:20Z"},
{"Line": "=>205", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (org.mobicents.servlet.restcomm.provisioning.number.nexmo.NexmoPhoneNumberProvisioningManager.logger.isDebugEnabled()) { org.mobicents.servlet.restcomm.provisioning.number.nexmo.NexmoPhoneNumberProvisioningManager.logger.debug((\"Nexmo query \" + queryUri)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6879/buggy-version/restcomm.restcomm.provisioning.number.nexmo.src.main.java.org.mobicents.servlet.restcomm.provisioning.number.nexmo.NexmoPhoneNumberProvisioningManager.java", "BodyUseAPI": ["org.apache.log4j.Logger.debug(java.lang.String)"], "Fixed commit": "38b90807d370ae89b94024f470e1232f83834028", "Url": "https://api.github.com/repos/RestComm/Restcomm-Connect", "Date": "2015-10-25T22:21:20Z"},
{"Line": "=>885", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (dbb != null) { mapLayer.getMapLayerMetadata().setBbox(dbb); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8962/buggy-version/src.main.java.au.org.emii.portal.composer.MapComposer.java", "BodyUseAPI": ["mapLayer.getMapLayerMetadata().setBbox(java.util.List<java.lang.Double>)"], "Fixed commit": "e487f7836567345912c9f91e81a94d0377b7e3b6", "Url": "https://api.github.com/repos/nbnuk/spatial-portal", "Date": "2016-09-14T13:41:16Z"},
{"Line": "=>136", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (i != null) { startActivity(i); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/178/buggy-version/app.src.main.java.site.gitinitdone.h2go.controller.AppScreenActivity.java", "BodyUseAPI": ["site.gitinitdone.h2go.controller.AppScreenActivity.startActivity(android.content.Intent)"], "Fixed commit": "7f23103846e3c01bc84eb107e38a4cc98380c681", "Url": "https://api.github.com/repos/AJLiu/CS2340-Project", "Date": "2017-04-03T18:20:11Z"},
{"Line": "=>600", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(pref.getString(\"userFrom\", \"\").equals(pref.getString(\"username\", \"\")))) populateReceivedMsg(pref.getString(\"message\", \"\"), pref.getString(\"userGroup\", \"\"), getActivity(), java.lang.Integer.valueOf(pref.getString(\"groupUserIcon\", \"\")));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4095/buggy-version/app.src.main.java.com.oop.projectgroup10.studychatroom.ChatRooms.java", "BodyUseAPI": ["1.populateReceivedMsg(pref.getString(\"message\", \"\"),pref.getString(\"userGroup\", \"\"),getActivity(),java.lang.Integer)", "android.content.SharedPreferences.getString(java.lang.String,java.lang.String)", "android.content.SharedPreferences.getString(java.lang.String,java.lang.String)", "android.content.SharedPreferences.getString(java.lang.String,java.lang.String)", "java.lang.Integer.valueOf(pref.getString(\"groupUserIcon\", \"\"))"], "Fixed commit": "52c0963b604d929fd0004c03050238a0ccc6b47b", "Url": "https://api.github.com/repos/19anti91/StudyChatRoom", "Date": "2017-03-29T13:38:50Z"},
{"Line": "=>1840", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (m_buildString.contains(\"_\")) buildString = m_buildString.split(\"_\", 2)[1];", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2052/buggy-version/src.frontend.org.voltdb.RealVoltDB.java", "BodyUseAPI": ["java.lang.String.split(java.lang.String,int)"], "Fixed commit": "bedbd1b78cbd19ca600fc0dac01310d7696d17dd", "Url": "https://api.github.com/repos/VoltDB/voltdb", "Date": "2015-05-11T21:35:29Z"},
{"Line": "=>88", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.dexesttp.hkxpack.hkx.classnames.ClassnamesData.get(currentClass.to)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (classObj != null) { java.lang.String className = classObj.name; com.dexesttp.hkxpack.descriptor.HKXDescriptor descriptor = descriptorFactory.get(className); com.dexesttp.hkxpack.data.HKXObject result = fileReader.read(currentClass.from, descriptor); content.add(result); }else { java.lang.System.err.println(((((\"Illegal linked Classname position (\" + (currentClass.from)) + \"//\") + (currentClass.to)) + \"). Ignoring.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/954/buggy-version/core.src.main.java.com.dexesttp.hkxpack.hkxreader.HKXReader.java", "BodyUseAPI": [], "Fixed commit": "668e2b14de35ef8504430dd17a7628511b6d2281", "Url": "https://api.github.com/repos/Dexesttp/hkxpack", "Date": "2016-03-07T00:16:18Z"},
{"Line": "=>225", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((searchList.size()) < 1) { android.widget.Toast.makeText(this, \"No ingredients selected\", Toast.LENGTH_SHORT).show(); }else { android.content.Intent searchIntent = new android.content.Intent(this, team13.cmput301.recipefinder.activities.SearchResultsActivity.class); searchIntent.putStringArrayListExtra(\"Ingredients\", searchList); startActivity(searchIntent); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7855/buggy-version/RecipeFinder.src.team13.cmput301.recipefinder.activities.MyIngredientsActivity.java", "BodyUseAPI": ["android.content.Intent.putStringArrayListExtra(java.lang.String,java.util.ArrayList<java.lang.String>)"], "Fixed commit": "2d58c8663f14f9b2c7b3f8e0b9466b63ee2db7f6", "Url": "https://api.github.com/repos/jessicayuen/CMPUT301T13", "Date": "2013-03-31T22:42:20Z"},
{"Line": "=>58", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (trimmedJSON.startsWith(\",\")) { trimmedJSON = trimmedJSON.substring(1); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4543/buggy-version/JExtras.src.je.files.JSONParser.java", "BodyUseAPI": ["java.lang.String.substring(int)"], "Fixed commit": "3926fa6c27aabdb2ee0515cbc3b1ad43d0867f2f", "Url": "https://api.github.com/repos/Authman2/JExtras", "Date": "2017-01-19T03:05:31Z"},
{"Line": "=>1709", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.contains(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (win10) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5843/buggy-version/eid-applet-core.src.main.java.be.fedict.eid.applet.sc.PcscEid.java", "BodyUseAPI": [], "Fixed commit": "2936e333e19cc253f81d3fbfee7707f0ee457092", "Url": "https://api.github.com/repos/e-Contract/eid-applet", "Date": "2015-09-03T19:06:17Z"},
{"Line": "=>1705", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.contains(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (win8) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5843/buggy-version/eid-applet-core.src.main.java.be.fedict.eid.applet.sc.PcscEid.java", "BodyUseAPI": [], "Fixed commit": "2936e333e19cc253f81d3fbfee7707f0ee457092", "Url": "https://api.github.com/repos/e-Contract/eid-applet", "Date": "2015-09-03T19:06:17Z"},
{"Line": "=>442", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (java.lang.System.getProperty(\"os.name\").startsWith(\"Windows\")) { org.eclipse.jdt.debug.core.IJavaObject file = ((org.eclipse.jdt.debug.core.IJavaClassType) (codehint.utils.EclipseUtils.getFullyQualifiedType(\"java.io.File\", stack, target, typeCache))).newInstance(\"(Ljava/lang/String;)V\", new org.eclipse.jdt.debug.core.IJavaValue[]{ target.newValue(libFile.getAbsolutePath()) }, thread); url = ((org.eclipse.jdt.debug.core.IJavaObject) (((org.eclipse.jdt.debug.core.IJavaObject) (file.sendMessage(\"toURI\", \"()Ljava/net/URI;\", new org.eclipse.jdt.debug.core.IJavaValue[]{ }, thread, null))).sendMessage(\"toURL\", \"()Ljava/net/URL;\", new org.eclipse.jdt.debug.core.IJavaValue[]{ }, thread, null))); }else url = ((org.eclipse.jdt.debug.core.IJavaClassType) (codehint.utils.EclipseUtils.getFullyQualifiedType(\"java.net.URL\", stack, target, typeCache))).newInstance(\"(Ljava/lang/String;)V\", new org.eclipse.jdt.debug.core.IJavaValue[]{ target.newValue((\"file://\" + (libFile.getAbsolutePath()))) }, thread);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7200/buggy-version/codehint-plugin.src.codehint.utils.EclipseUtils.java", "BodyUseAPI": [], "Fixed commit": "105241bc2d0dc4493327fe2010cc0391abf93e17", "Url": "https://api.github.com/repos/jgalenson/codehint", "Date": "2014-06-14T19:56:10Z"},
{"Line": "=>95", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (metadata.getTypeCloud().equals(\"Amazon\")) { return new it.polimi.modaclouds.cpimlibrary.sqlservice.AmazonSqlService(metadata.getConnectionString()); }else if (metadata.getTypeCloud().equals(\"Glassfish\")) { return new it.polimi.modaclouds.cpimlibrary.sqlservice.GlassfishSqlService(metadata.getConnectionString(), metadata.getPersistenceInfo().get(\"account.name\"), metadata.getPersistenceInfo().get(\"account.key\")); }else try { throw new it.polimi.modaclouds.cpimlibrary.exception.NotSupportedVendorException(((\"The vendor \" + (metadata.getTypeCloud())) + \" is not supported by the library\")); } catch (it.polimi.modaclouds.cpimlibrary.exception.NotSupportedVendorException e) { e.printStackTrace(); return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3796/buggy-version/src.main.java.it.polimi.modaclouds.cpimlibrary.sqlservice.CloudSqlService.java", "BodyUseAPI": ["metadata.getTypeCloud().equals(java.lang.String)", "it.polimi.modaclouds.cpimlibrary.CloudMetadata.getTypeCloud()", "it.polimi.modaclouds.cpimlibrary.CloudMetadata.getConnectionString()", "metadata.getPersistenceInfo().get(java.lang.String)", "it.polimi.modaclouds.cpimlibrary.CloudMetadata.getPersistenceInfo()", "it.polimi.modaclouds.cpimlibrary.CloudMetadata.getTypeCloud()", "it.polimi.modaclouds.cpimlibrary.CloudMetadata.getPersistenceInfo()", "it.polimi.modaclouds.cpimlibrary.CloudMetadata.getConnectionString()", "metadata.getPersistenceInfo().get(java.lang.String)"], "Fixed commit": "e2cfa1877d5a40e839f1acbc58a8aa28cb6941bb", "Url": "https://api.github.com/repos/deib-polimi/modaclouds-cpim-library", "Date": "2014-06-05T06:31:35Z"},
{"Line": "=>340", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (computed_similarities >= max_similarities) { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4346/buggy-version/src.main.java.info.debatty.java.graphs.Graph.java", "BodyUseAPI": [], "Fixed commit": "3ae512ea337fe03629e82c52d2c08e393da7eb79", "Url": "https://api.github.com/repos/tdebatty/java-graphs", "Date": "2015-12-16T18:59:58Z"},
{"Line": "=>736", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mAdapter.isShowHeader()) { position -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/654/buggy-version/library.src.main.java.com.livae.android.loading.LoadingHelper.java", "BodyUseAPI": [], "Fixed commit": "d48068f1f3b699d0165fa8e07fc7be5d77a83ab7", "Url": "https://api.github.com/repos/jorgemf/android-loading-helper", "Date": "2015-03-02T19:45:58Z"},
{"Line": "=>754", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mAdapter.isShowHeader()) { position -= 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/654/buggy-version/library.src.main.java.com.livae.android.loading.LoadingHelper.java", "BodyUseAPI": [], "Fixed commit": "d48068f1f3b699d0165fa8e07fc7be5d77a83ab7", "Url": "https://api.github.com/repos/jorgemf/android-loading-helper", "Date": "2015-03-02T19:45:58Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((org.apache.commons.lang3.StringUtils.isEmpty(path)) || (interceptors == null)) { return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3883/buggy-version/src.main.java.org.express4j.core.Express4J.java", "BodyUseAPI": [], "Fixed commit": "51b319f8972f658f3b0fd3661d6de3963f61353e", "Url": "https://api.github.com/repos/aCoder2013/Express4J", "Date": "2016-04-24T07:22:32Z"},
{"Line": "=>433", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (data != null) { curBundle = data.getExtras(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1819/buggy-version/src.com.buzzwords.TurnSummary.java", "BodyUseAPI": ["android.content.Intent.getExtras()"], "Fixed commit": "192aa96ee96dbf948df1c9c405d4d6e4a316e802", "Url": "https://api.github.com/repos/siramix/buzzwords", "Date": "2011-08-11T01:16:16Z"},
{"Line": "=>195", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(efruchter.tp.state.ClientStateManager.isPaused())) && (efruchter.tp.gui_broken.VectorEditorPopup_Crummy.isVisible())) { efruchter.tp.gui_broken.VectorEditorPopup_Crummy.hide(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2299/buggy-version/src.efruchter.tp.TraitProjectClient.java", "BodyUseAPI": [], "Fixed commit": "82f10e2d19f495e2514f595b5af39ae69d2422c6", "Url": "https://api.github.com/repos/efruchter/Trait", "Date": "2013-02-25T21:09:12Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((itemsBrowserFragment) != null) { itemsBrowserFragment.getDialog().setTitle(\"Select item\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6049/buggy-version/sitecore-sdk-sample.src.net.sitecore.android.sdk.sample.browser.StyledListDialogFromCode.java", "BodyUseAPI": [], "Fixed commit": "99c98b7d7a10944d9311427364df1b9aac8c76b6", "Url": "https://api.github.com/repos/Sitecore/sitecore-android-sdk-sample", "Date": "2013-12-16T13:06:56Z"},
{"Line": "=>107", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (count != 1) { highlightedProfiles = io.fabric8.commands.Strings.rpad(\" \", highlightedProfiles, 17); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6553/buggy-version/fabric.fabric-commands.src.main.java.io.fabric8.commands.ContainerListAction.java", "BodyUseAPI": [], "Fixed commit": "cc20dec2b4e839d408efb3cf73979b1a5358e055", "Url": "https://api.github.com/repos/zmhassan/fabric8", "Date": "2014-06-18T17:26:22Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(tags.containsKey(\"default\"))) { tags.put(\"default\", \"[{PLUGIN}]\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/401/buggy-version/src.main.java.com.stealthyone.mcb.stbukkitlib.messages.MessageManager.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String,java.lang.String)"], "Fixed commit": "77067aa45d0f25db544d0875f890fcba4c2c52db", "Url": "https://api.github.com/repos/Stealth2800/StBukkitLib", "Date": "2014-05-25T06:15:35Z"},
{"Line": "=>158", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fenStack.size()) == 0) { if (isFENBuilt(tempFEN)) { fenStack.push(tempFEN); es.blueberrypancak.chesskurwa.Stockfish.run(tempFEN); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2191/buggy-version/src.es.blueberrypancak.chesskurwa.BoardReader.java", "BodyUseAPI": ["java.util.Stack<java.lang.String>.push(java.lang.String)"], "Fixed commit": "0b9996bd2e5b4f917bb7b2e84fd3f8da27b71d02", "Url": "https://api.github.com/repos/qubard/ChessKurwa", "Date": "2016-05-02T21:37:01Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((items) == null) { items = new java.util.ArrayList<java.lang.String>(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5889/buggy-version/SimpleToDo.src.codepath.apps.simpletodo.TodoActivity.java", "BodyUseAPI": [], "Fixed commit": "a0103af6b7286590a6d066df98e048af45d8862e", "Url": "https://api.github.com/repos/madhurk/codepath", "Date": "2014-05-03T00:32:03Z"},
{"Line": "=>255", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.mauriciotogneri.fileexplorer.adapters.FolderAdapter.selectedItems(boolean)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(selectedItems.isEmpty())) { shareMultiple(selectedItems); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6127/buggy-version/app.src.main.java.com.mauriciotogneri.fileexplorer.fragments.FolderFragment.java", "BodyUseAPI": ["com.mauriciotogneri.fileexplorer.fragments.FolderFragment.shareMultiple(java.util.List<com.mauriciotogneri.fileexplorer.utils.FileInfo>)"], "Fixed commit": "ed5372b208a0f399910429cf095e4e53059f5c88", "Url": "https://api.github.com/repos/mauriciotogneri/fileexplorer", "Date": "2016-07-02T12:10:17Z"},
{"Line": "=>196", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (file != null) { result.add(new com.mauriciotogneri.fileexplorer.utils.FileInfo(file)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6127/buggy-version/app.src.main.java.com.mauriciotogneri.fileexplorer.fragments.FolderFragment.java", "BodyUseAPI": ["java.util.List<com.mauriciotogneri.fileexplorer.utils.FileInfo>.add(com.mauriciotogneri.fileexplorer.utils.FileInfo)"], "Fixed commit": "ed5372b208a0f399910429cf095e4e53059f5c88", "Url": "https://api.github.com/repos/mauriciotogneri/fileexplorer", "Date": "2016-07-02T12:10:17Z"},
{"Line": "=>45", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentFile != null) { com.mauriciotogneri.fileexplorer.utils.FileInfo fileInfo = new com.mauriciotogneri.fileexplorer.utils.FileInfo(currentFile); result.addAll(fileInfo.files()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6127/buggy-version/app.src.main.java.com.mauriciotogneri.fileexplorer.utils.FileInfo.java", "BodyUseAPI": [], "Fixed commit": "ed5372b208a0f399910429cf095e4e53059f5c88", "Url": "https://api.github.com/repos/mauriciotogneri/fileexplorer", "Date": "2016-07-02T12:10:17Z"},
{"Line": "=>66", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (currentFile != null) { com.mauriciotogneri.fileexplorer.utils.FileInfo fileInfo = new com.mauriciotogneri.fileexplorer.utils.FileInfo(currentFile); fileInfo.delete(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6127/buggy-version/app.src.main.java.com.mauriciotogneri.fileexplorer.utils.FileInfo.java", "BodyUseAPI": [], "Fixed commit": "ed5372b208a0f399910429cf095e4e53059f5c88", "Url": "https://api.github.com/repos/mauriciotogneri/fileexplorer", "Date": "2016-07-02T12:10:17Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!fullScreen) { android.os.Handler handler = getHandler(); if (handler != null) { handler.removeCallbacks(mNavHider); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/362/buggy-version/app.src.main.java.com.ogadai.ogadai_secure.MainContent.java", "BodyUseAPI": [], "Fixed commit": "83bc7f0b53ea707ffb5aac2d4a6ec6b8236ccb70", "Url": "https://api.github.com/repos/Ogadai/MyHomeSecureAndroid", "Date": "2016-04-12T11:59:04Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((problemFibers) != null) { for (java.util.Map.Entry<co.paralleluniverse.fibers.Fiber, java.lang.StackTraceElement[]> e : problemFibers.entrySet()) map.put(e.getKey().toString(), co.paralleluniverse.strands.Strand.toString(e.getValue())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8215/buggy-version/quasar-core.src.main.java.co.paralleluniverse.fibers.MetricsFibersMonitor.java", "BodyUseAPI": [], "Fixed commit": "6e8510d4cdd5e2e5afb90a99879c7e335d397385", "Url": "https://api.github.com/repos/mikehearn/quasar", "Date": "2016-06-26T10:21:42Z"},
{"Line": "=>89", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((eventDuty.getStarttime()) != null) { if (!(team_f.domain.helper.DateTimeHelper.liesInFuture(eventDuty.getStarttime()))) { resultList.add(new javafx.util.Pair(START_TIME, \"is bygone\")); } }else { resultList.add(new javafx.util.Pair(START_TIME, \"is empty\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/9/buggy-version/Domain.src.main.java.team_f.domain.logic.EventDutyLogic.java", "BodyUseAPI": ["team_f.domain.entities.EventDuty.getStarttime()", "team_f.domain.helper.DateTimeHelper.liesInFuture(eventDuty.getStarttime())"], "Fixed commit": "8319993c9f66ae01db6e8dee73295f6b0a6cb84a", "Url": "https://api.github.com/repos/Nepomuk1999/ConcertMaster", "Date": "2017-04-15T11:21:10Z"},
{"Line": "=>262", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.codehaus.jackson.JsonParser.getCurrentName()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (\"links\".equals(name)) { while ((tok = jp.nextToken()) != (org.codehaus.jackson.JsonToken.END_ARRAY)) { } continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/369/buggy-version/spring-data-rest-webmvc.src.main.java.org.springframework.data.rest.webmvc.json.RepositoryAwareJacksonModule.java", "BodyUseAPI": [], "Fixed commit": "ae8d7d9326b84dd8b4769d190c003e599e915086", "Url": "https://api.github.com/repos/SpringSource/spring-data-rest", "Date": "2012-09-04T15:17:40Z"},
{"Line": "=>199", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((requireRoles == null) || ((requireRoles.length) == 0)) { return true; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5525/buggy-version/src.main.java.org.triiskelion.tinyspring.security.TinySecurityInterceptor.java", "BodyUseAPI": [], "Fixed commit": "140653db3f9ebce7c26209cbf4cd123a39fa9a56", "Url": "https://api.github.com/repos/tian-ma/tinyspring", "Date": "2015-05-08T06:38:16Z"},
{"Line": "=>128", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((downloads.classifiers) == null) { downloads.classifiers = new java.util.HashMap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3940/buggy-version/HMCL.src.core.java.org.jackhuang.hellominecraft.launcher.core.version.MinecraftLibrary.java", "BodyUseAPI": [], "Fixed commit": "1a3c31a1413813cefcbfff1e53c644100c013cb0", "Url": "https://api.github.com/repos/huanghongxun/HMCL", "Date": "2016-07-12T06:17:17Z"},
{"Line": "=>49", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (((esm_title.contains(\"How many unique applications have you used\")) || (esm_title.contains(\"How many minutes have you used\"))) || (esm_title.contains(\"How many times did you turn on the screen of your phone\"))) { esmType = 9; esm.put(\"esm_type\", 9); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4137/buggy-version/aware-core.src.main.java.com.aware.ui.esms.ESMFactory.java", "BodyUseAPI": [], "Fixed commit": "1dda6295455fa6f26fc2c28ecaef8802f87ae447", "Url": "https://api.github.com/repos/denzilferreira/aware-client", "Date": "2016-11-03T19:42:01Z"},
{"Line": "=>1417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.zstack.storage.ceph.backup.CephBackupStorageVO.getFsid()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((org.zstack.core.db.Q.New(org.zstack.storage.ceph.primary.CephPrimaryStorageVO.class).eq(CephPrimaryStorageVO_.fsid, fsid).find()) == null) { dbf.removeByPrimaryKey(fsid, org.zstack.storage.ceph.backup.CephCapacityVO.class); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6514/buggy-version/plugin.ceph.src.main.java.org.zstack.storage.ceph.backup.CephBackupStorageBase.java", "BodyUseAPI": ["org.zstack.storage.ceph.backup.CephBackupStorageBase.removeByPrimaryKey(java.lang.String,java.lang.Class)"], "Fixed commit": "33be3d5c5427a400557cff88627b74cacc05470e", "Url": "https://api.github.com/repos/MaJin1996/zstack", "Date": "2017-03-20T01:34:58Z"},
{"Line": "=>177", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (!(lcreated.isDisposed())) { lcreated.getDisplay().syncExec(() -> { if (!(lcreated.isDisposed())) { lcreator.setText((\"\" + (u.getUsername()))); } }); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/60/buggy-version/src.main.java.org.collabthings.swt.view.ObjectSmallView.java", "BodyUseAPI": [], "Fixed commit": "2184a21e2faa171956d08fb65afafd78341c3b9b", "Url": "https://api.github.com/repos/CollabThings/collabthings.swt", "Date": "2016-02-15T18:04:45Z"},
{"Line": "=>145", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((fieldElem.select(\".suchfeld_inhalt_input\").size()) > 0) { java.util.List<org.jsoup.nodes.TextNode> textNodes = fieldElem.select(\".suchfeld_inhalt_input\").first().textNodes(); if ((textNodes.size()) > 0) hint = textNodes.get(0).getWholeText().replace(\"\\n\", \"\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3797/buggy-version/src.de.geeksfactory.opacclient.apis.Bibliotheca.java", "BodyUseAPI": ["fieldElem.select(\".suchfeld_inhalt_input\").first()", "org.jsoup.nodes.Element.select(java.lang.String)", "fieldElem.select(\".suchfeld_inhalt_input\").first().textNodes()"], "Fixed commit": "0b4c514d2209260854ea17de3e95bfc4acded578", "Url": "https://api.github.com/repos/johan12345/opacclient", "Date": "2014-09-17T08:04:41Z"},
{"Line": "=>649", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (cascading.util.Util.containsNull(types)) throw new java.lang.IllegalArgumentException(\"given types array contains null\");", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1879/buggy-version/cascading-core.src.main.java.cascading.tuple.Fields.java", "BodyUseAPI": [], "Fixed commit": "46af9816163ee5974d5294006d89e22342ce6918", "Url": "https://api.github.com/repos/mapr/cascading", "Date": "2014-06-06T17:45:50Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["main.Quotation.getProduct(main.Product)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (product1 != null) { if ((product1.getPrice()) > (product.getPrice())) { mProductList.remove(product1); }else if ((product1.getPrice()) == (product.getPrice())) { mProductList.add(product); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8674/buggy-version/src.main.Quotation.java", "BodyUseAPI": ["main.Product.getPrice()", "main.Product.getPrice()", "java.util.ArrayList<main.Product>.remove(main.Product)"], "Fixed commit": "50bbc3abb8ec73e038d365782db3915b6e04fea3", "Url": "https://api.github.com/repos/montimaj/Quotation", "Date": "2017-05-02T07:04:51Z"},
{"Line": "=>124", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.intellij.openapi.vfs.VirtualFile.findChild(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (vFile == null) { vFile = vParentFile.createChildData(this, file.getName()); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2927/buggy-version/src.main.java.org.sylfra.idea.plugins.revu.externalizing.impl.ReviewExternalizerXmlImpl.java", "BodyUseAPI": [], "Fixed commit": "7f344f4ecd556ce6daa3fa5634fb9c32693a109e", "Url": "https://api.github.com/repos/magento-ecg/idea-plugin-revu", "Date": "2015-08-19T15:33:37Z"},
{"Line": "=>125", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.github.TKnudsen.activeLearning.models.activeLearning.queryByCommittee.VoteEntropyQueryByCommittee.getClassificationResultSuppliers()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if ((classificationResultSuppliers == null) || ((classificationResultSuppliers.size()) == 0)) for (java.lang.String label : winningLabels.keySet()) winningLabels.put(label, ((winningLabels.get(label)) / ((double) (com.github.TKnudsen.activeLearning.models.activeLearning.queryByCommittee.VoteEntropyQueryByCommittee.getLearningModels().size())))); else for (java.lang.String label : winningLabels.keySet()) winningLabels.put(label, ((winningLabels.get(label)) / ((double) (classificationResultSuppliers.size()))));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3440/buggy-version/src.main.java.com.github.TKnudsen.activeLearning.models.activeLearning.queryByCommittee.VoteEntropyQueryByCommittee.java", "BodyUseAPI": ["java.util.Map<java.lang.String, java.lang.Double>.put(java.lang.String,double)", "java.util.List<com.github.TKnudsen.DMandML.data.classification.IProbabilisticClassificationResultSupplier<FV>>.size()"], "Fixed commit": "5748f1830b85fac1a1df005469f9663bc2d23c4f", "Url": "https://api.github.com/repos/TKnudsen/activeLearning", "Date": "2017-12-11T11:29:45Z"},
{"Line": "=>220", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((this.isCenter()) && (this.hasStaff())) { org.mifosplatform.organisation.staff.domain.Staff staff = this.getStaff(); this.reassignStaff(staff, activationLocalDate); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8799/buggy-version/mifosng-provider.src.main.java.org.mifosplatform.portfolio.group.domain.Group.java", "BodyUseAPI": [], "Fixed commit": "1b2ea2ebdd44b8493b80917c1aa93671120e6ed8", "Url": "https://api.github.com/repos/openMF/mifosx", "Date": "2015-03-04T16:45:03Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_useCache) { _fileStatusMap.put(name, new org.apache.blur.store.hdfs.HdfsDirectory.FStat(java.lang.System.currentTimeMillis(), 0L)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/740/buggy-version/blur-store.src.main.java.org.apache.blur.store.hdfs.HdfsDirectory.java", "BodyUseAPI": [], "Fixed commit": "ec4b5260e3ec1561ac001d8564104d2302ac88ac", "Url": "https://api.github.com/repos/apache/incubator-blur", "Date": "2015-04-11T14:22:11Z"},
{"Line": "=>302", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (_useCache) { _fileStatusMap.put(name, new org.apache.blur.store.hdfs.HdfsDirectory.FStat(java.lang.System.currentTimeMillis(), outputStream.getPos())); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/740/buggy-version/blur-store.src.main.java.org.apache.blur.store.hdfs.HdfsDirectory.java", "BodyUseAPI": [], "Fixed commit": "ec4b5260e3ec1561ac001d8564104d2302ac88ac", "Url": "https://api.github.com/repos/apache/incubator-blur", "Date": "2015-04-11T14:22:11Z"},
{"Line": "=>53", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (tutor != null) { tutorRepo.save(tutor); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/9023/buggy-version/src.main.java.de.thb.ue.backend.service.TutorService.java", "BodyUseAPI": ["de.thb.ue.backend.repository.ITutor.save(de.thb.ue.backend.model.Tutor)"], "Fixed commit": "aaacf634449b3ab87b13951799dd3a5ee200fe5b", "Url": "https://api.github.com/repos/TH-Brandenburg/University-Evaluation-Backend", "Date": "2016-07-27T13:43:34Z"},
{"Line": "=>256", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((data.has(com.adobe.phonegap.push.LOC_KEY)) || (data.has(com.adobe.phonegap.push.LOC_DATA))) { java.lang.String newKey = normalizeKey(key, messageKey, titleKey); android.util.Log.d(com.adobe.phonegap.push.FCMService.LOG_TAG, (((\"replace key \" + key) + \" with \") + newKey)); replaceKey(context, key, newKey, extras, newExtras); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7610/buggy-version/src.android.com.adobe.phonegap.push.FCMService.java", "BodyUseAPI": [], "Fixed commit": "ccde2862932123062cec9de1577c62d8f3304b2a", "Url": "https://api.github.com/repos/kelvinhokk/phonegap-plugin-push", "Date": "2017-11-17T13:02:17Z"},
{"Line": "=>42", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (userNotResigned) { cart.printAllTickets(); if (cashToPay < 0) { giveChangeToUser((cashToPay * (-1))); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4599/buggy-version/src.main.java.userAction.Payment.java", "BodyUseAPI": [], "Fixed commit": "eccd0bd03dba4394b1c2c8320b89cb4f65683056", "Url": "https://api.github.com/repos/Drakles/creditAgricole", "Date": "2017-09-16T21:42:29Z"},
{"Line": "=>1330", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((!(tb instanceof org.zkoss.zsoup.parser.XHtmlTreeBuilder)) || (!(tb.stack.isEmpty()))) return tb.process(t, org.zkoss.zsoup.parser.HtmlTreeBuilderState.InBody);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/9007/buggy-version/src.main.java.org.zkoss.zsoup.parser.HtmlTreeBuilderState.java", "BodyUseAPI": ["org.zkoss.zsoup.parser.HtmlTreeBuilder.process(org.zkoss.zsoup.parser.Token,org.zkoss.zsoup.parser.HtmlTreeBuilderState)"], "Fixed commit": "439ac166043f984208c12d96aefa4814add1e80c", "Url": "https://api.github.com/repos/zkoss/zsoup", "Date": "2015-02-09T07:03:27Z"},
{"Line": "=>170", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (title != null) { params.putString(\"name\", title); params.putString(\"caption\", title); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7774/buggy-version/social-wrapper.src.com.scoreflex.facebook.ScoreflexFacebookWrapper.java", "BodyUseAPI": ["android.os.Bundle.putString(java.lang.String,java.lang.String)", "android.os.Bundle.putString(java.lang.String,java.lang.String)"], "Fixed commit": "a06870e0ea290d5bfdb9e7b2a5f4e719e1467be0", "Url": "https://api.github.com/repos/scoreflex/scoreflex-android-sdk", "Date": "2014-01-10T14:31:36Z"},
{"Line": "=>106", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if (((providedValue) == null) && (parameterType instanceof java.lang.Class<?>)) { java.lang.Class<?> parameterClass = ((java.lang.Class<?>) (parameterType)); if (parameterClass.isPrimitive()) { providedValue = mockit.internal.expectations.mocking.DefaultValues.defaultValueForPrimitiveType(parameterClass); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8716/buggy-version/main.src.mockit.internal.expectations.mocking.MockedType.java", "BodyUseAPI": [], "Fixed commit": "c252792f9e35b3b7186340ef909a5469a110d6e9", "Url": "https://api.github.com/repos/jmockit/jmockit1", "Date": "2016-05-31T04:16:03Z"},
{"Line": "=>226", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((providedValue) == null) { return value; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8716/buggy-version/main.src.mockit.internal.expectations.mocking.MockedType.java", "BodyUseAPI": [], "Fixed commit": "c252792f9e35b3b7186340ef909a5469a110d6e9", "Url": "https://api.github.com/repos/jmockit/jmockit1", "Date": "2016-05-31T04:16:03Z"},
{"Line": "=>123", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (inDiff < (org.openstack.atlas.usagerefactor.helpers.UsagePollerHelper.MAX_BANDWIDTH_BYTES_THRESHHOLD)) { ret.incomingTransfer = currentIncoming - previousIncoming; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7080/buggy-version/jobs.src.main.java.org.openstack.atlas.usagerefactor.helpers.UsagePollerHelper.java", "BodyUseAPI": [], "Fixed commit": "0371a08d491bac60072587b9b7bb0f581230e796", "Url": "https://api.github.com/repos/lbrackspace/atlas-lb", "Date": "2013-10-14T19:31:32Z"},
{"Line": "=>126", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (outDiff < (org.openstack.atlas.usagerefactor.helpers.UsagePollerHelper.MAX_BANDWIDTH_BYTES_THRESHHOLD)) { ret.outgoingTransfer = currentOutgoing - previousOutgoing; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7080/buggy-version/jobs.src.main.java.org.openstack.atlas.usagerefactor.helpers.UsagePollerHelper.java", "BodyUseAPI": [], "Fixed commit": "0371a08d491bac60072587b9b7bb0f581230e796", "Url": "https://api.github.com/repos/lbrackspace/atlas-lb", "Date": "2013-10-14T19:31:32Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((verbose) != null) { org.tdmx.client.cli.ClientCliLoggingUtils.setVerbose(false); out.println((\"verbose - option \" + (org.tdmx.client.cli.ClientCliLoggingUtils.isVerbose() ? \"set\" : \"not set\"))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5500/buggy-version/cli.src.main.java.org.tdmx.client.cli.env.ClearDefault.java", "BodyUseAPI": [], "Fixed commit": "e06d037457e62e32219260b8ee5f048d6797465c", "Url": "https://api.github.com/repos/pjklauser/bridgemq", "Date": "2016-05-30T21:59:30Z"},
{"Line": "=>26", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.concurrent.ConcurrentMap<java.lang.String, org.opendaylight.netvirt.aclservice.api.utils.AclInterface>.get(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (aclInterface == null) { org.opendaylight.netvirt.aclservice.api.utils.AclInterfaceCacheUtil.LOG.warn(\"AclInterface object not found in cache for interface {}\", interfaceId); return; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4022/buggy-version/vpnservice.aclservice.api.src.main.java.org.opendaylight.netvirt.aclservice.api.utils.AclInterfaceCacheUtil.java", "BodyUseAPI": [], "Fixed commit": "9aa4c83f6d8238f697a1b095d39cb024c460c630", "Url": "https://api.github.com/repos/opendaylight/netvirt", "Date": "2016-09-21T12:44:21Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (((signalDetection.getId()) == null) && ((signalDetection.getId()) == 0)) { java.lang.Long signalDetectionExist = signalDetectionRepository.countByNameIgnoreCase(signalDetection.getName()); if (signalDetectionExist > 0) { throw exceptionBuilder.buildException(ErrorType.DETECTION_NAME_DUPLICATE, null); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5887/buggy-version/src.main.java.com.deloitte.smt.service.SignalDetectionService.java", "BodyUseAPI": ["com.deloitte.smt.entity.SignalDetection.getName()", "com.deloitte.smt.repository.SignalDetectionRepository.countByNameIgnoreCase(signalDetection.getName())"], "Fixed commit": "350489457dda55eb30c99a96b2a7697f1c73c6d0", "Url": "https://api.github.com/repos/srss-raju/stm", "Date": "2017-07-24T12:53:21Z"},
{"Line": "=>83", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((context.length) == 0) return true; else return allContextsSet.contains(new edu.berkeley.cs.nlp.ocular.lm.LongArrWrapper(edu.berkeley.cs.nlp.ocular.lm.LongNgram.convertToLong(context)));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1768/buggy-version/src.main.java.edu.berkeley.cs.nlp.ocular.lm.NgramLanguageModel.java", "BodyUseAPI": ["edu.berkeley.cs.nlp.ocular.lm.LongNgram.convertToLong(int[])", "java.util.Set<edu.berkeley.cs.nlp.ocular.lm.LongArrWrapper>.contains(edu.berkeley.cs.nlp.ocular.lm.LongArrWrapper)"], "Fixed commit": "1bb9f7b191ca9ed089553f746202740276623c03", "Url": "https://api.github.com/repos/tberg12/ocular", "Date": "2015-06-27T20:59:08Z"},
{"Line": "=>417", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (net.sourceforge.entrainer.gui.flash.FlashOptions.log.isDebugEnabled()) { for (java.util.Map.Entry<net.sourceforge.entrainer.gui.flash.FlashType, java.lang.Boolean> entry : flashTypes.entrySet()) { net.sourceforge.entrainer.gui.flash.FlashOptions.log.debug(\"Map: {} = {}\", entry.getKey(), entry.getValue()); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7627/buggy-version/EntrainerFX.src.main.java.net.sourceforge.entrainer.gui.flash.FlashOptions.java", "BodyUseAPI": ["org.slf4j.Logger.debug(java.lang.String,entry.getKey(),entry.getValue())"], "Fixed commit": "b04c239935a0f58c70f29d470a5dae5cf49c4f08", "Url": "https://api.github.com/repos/mrstampy/EntrainerFX", "Date": "2015-03-24T07:23:38Z"},
{"Line": "=>556", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((slctCity.getSelectedIndex()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7854/buggy-version/src.gui.internal.AddRcp.java", "BodyUseAPI": [], "Fixed commit": "3404fe014beb7a351fe9bd84e8e2cce408a15e9d", "Url": "https://api.github.com/repos/nisanb/virutalshape", "Date": "2016-08-24T06:28:30Z"},
{"Line": "=>577", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((slctCity.getSelectedIndex()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7854/buggy-version/src.gui.internal.AddCustomer.java", "BodyUseAPI": [], "Fixed commit": "3404fe014beb7a351fe9bd84e8e2cce408a15e9d", "Url": "https://api.github.com/repos/nisanb/virutalshape", "Date": "2016-08-24T06:28:30Z"},
{"Line": "=>627", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((slctCity.getSelectedIndex()) == 0) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7854/buggy-version/src.gui.internal.AddCoach.java", "BodyUseAPI": [], "Fixed commit": "3404fe014beb7a351fe9bd84e8e2cce408a15e9d", "Url": "https://api.github.com/repos/nisanb/virutalshape", "Date": "2016-08-24T06:28:30Z"},
{"Line": "=>162", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.substring(int,int)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (value.isEmpty()) { return 0L; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3604/buggy-version/src.android.com.microsoftopentechnologies.intellij.helpers.storage.BlobExplorerFileEditor.java", "BodyUseAPI": [], "Fixed commit": "ccaa08a2378eb040af517fa6a2054768b4a8cf80", "Url": "https://api.github.com/repos/avranju/msopentech-tools-for-intellij", "Date": "2015-04-24T18:34:05Z"},
{"Line": "=>34", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(com.alorma.github.BuildConfig.DEBUG)) { com.google.android.gms.analytics.Tracker t = ((com.alorma.github.GistsApplication) (getApplication())).getTracker(); t.setScreenName(this.getClass().getSimpleName()); t.send(new com.google.android.gms.analytics.HitBuilders.AppViewBuilder().build()); com.bugsense.trace.BugSenseHandler.initAndStartSession(this, \"77b1f1f6\"); com.nostra13.universalimageloader.core.ImageLoader.getInstance().init(com.alorma.github.ui.utils.UniversalImageLoaderUtils.getImageLoaderConfiguration(this)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1434/buggy-version/app.src.main.java.com.alorma.github.ui.activity.base.BaseActivity.java", "BodyUseAPI": [], "Fixed commit": "8654f7768603b0ce603043e5fe2a9526d6a9c183", "Url": "https://api.github.com/repos/alorma/Gitskarios", "Date": "2014-08-20T18:41:33Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.eclipse.jdt.internal.core.PackageFragment.getResource()"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (!(fragmentRes instanceof org.eclipse.core.resources.IFolder)) { return superImage; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4286/buggy-version/plugins.de.ovgu.featureide.ui.src.de.ovgu.featureide.ui.projectExplorer.ProjectExplorerLabelProvider.java", "BodyUseAPI": [], "Fixed commit": "b0d2afcbe1719b3257eec49784a7ed5127868a52", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2015-12-04T12:41:59Z"},
{"Line": "=>279", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(isInBuildFolder(frag.getResource()))) && (!(isInSourceFolder(frag.getResource())))) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4286/buggy-version/plugins.de.ovgu.featureide.ui.src.de.ovgu.featureide.ui.projectExplorer.ProjectExplorerLabelProvider.java", "BodyUseAPI": [], "Fixed commit": "b0d2afcbe1719b3257eec49784a7ed5127868a52", "Url": "https://api.github.com/repos/FeatureIDE/FeatureIDE", "Date": "2015-12-04T12:41:59Z"},
{"Line": "=>132", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["((java.lang.String) (semanticConnection.eGet(toggleFeature, true))).split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (java.util.Arrays.equals(currentDependencies, new java.lang.String[]{ \"\" })) { currentDependencies = new java.lang.String[0]; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2660/buggy-version/de.tud.cs.st.vespucci.diagram.src.de.tud.cs.st.vespucci.diagram.handler.ToggleDependenciesSuperHandler.java", "BodyUseAPI": [], "Fixed commit": "99638bcbd18460a5ecddd86f3d6b3358becdb2aa", "Url": "https://api.github.com/repos/mitschke/vespucci", "Date": "2011-08-28T21:29:26Z"},
{"Line": "=>47", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["pack.service.impl.ReplacerImpl.getBOBM(java.util.List<pack.model.Ngram>,java.util.ArrayList<java.util.regex.Pattern>)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (ngramsCorteges == null) { for (pack.model.Ngram n : bestNgrams) { java.lang.System.out.println(n); } }else { sortNgramsCortages(ngramsCorteges); for (pack.model.NgramsCortege nc : ngramsCorteges) { java.lang.System.out.println(nc); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/80/buggy-version/src.main.java.pack.service.impl.ReplacerImpl.java", "BodyUseAPI": ["pack.service.impl.ReplacerImpl.sortNgramsCortages(java.util.List<pack.model.NgramsCortege>)"], "Fixed commit": "f2446438e87d785de507a2b64c1593c0a0121d26", "Url": "https://api.github.com/repos/ainurminibaev/text_processing_app", "Date": "2015-05-22T09:09:23Z"},
{"Line": "=>63", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((patterns.size()) <= 1) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/80/buggy-version/src.main.java.pack.service.impl.ReplacerImpl.java", "BodyUseAPI": [], "Fixed commit": "f2446438e87d785de507a2b64c1593c0a0121d26", "Url": "https://api.github.com/repos/ainurminibaev/text_processing_app", "Date": "2015-05-22T09:09:23Z"},
{"Line": "=>143", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (xmlRulesType == null) { throw new java.lang.IllegalArgumentException(\"Type could be omitted only in basic types (String, Integer etc)\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8375/buggy-version/STUDIO.org.openl.extension.xmlrules.src.org.openl.extension.xmlrules.utils.OutFunction.java", "BodyUseAPI": [], "Fixed commit": "80575862ebb2e931110c4a7e7edd352019f18086", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2016-02-25T07:15:04Z"},
{"Line": "=>176", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (typeName == null) { return null; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8375/buggy-version/STUDIO.org.openl.extension.xmlrules.src.org.openl.extension.xmlrules.utils.OutFunction.java", "BodyUseAPI": [], "Fixed commit": "80575862ebb2e931110c4a7e7edd352019f18086", "Url": "https://api.github.com/repos/openl-tablets/openl-tablets", "Date": "2016-02-25T07:15:04Z"},
{"Line": "=>61", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (mocapPlayer) { player = new poormocapplayer.MocapPlayer(\"assets/etc/Test3.serial\"); }else { mocap = new poormocap.Mocap(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3977/buggy-version/src.mygame.Main.java", "BodyUseAPI": [], "Fixed commit": "77a0ed5e05559bf888c9e05913e5a03afaabf05a", "Url": "https://api.github.com/repos/RamanjitKhakh/Hole-in-the-Wall", "Date": "2016-04-10T22:48:53Z"},
{"Line": "=>48", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["ss.api.Project.getCurrentIteration()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((iteration.getProgrammersWorking()) > 0) { iteration.decreaseLastingDays(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/763/buggy-version/src.main.java.ss.apiImpl.SimulatorImpl.java", "BodyUseAPI": ["ss.api.Iteration.decreaseLastingDays()"], "Fixed commit": "c7b0d1b77e26d7a18bf6178685247240df51571f", "Url": "https://api.github.com/repos/mdesanti/simulacion", "Date": "2013-05-17T03:03:52Z"},
{"Line": "=>25", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.io.BufferedReader.readLine()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (in.matches(regex)) { list.add(in); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6312/buggy-version/src.com.awesome.lettergetter.FileFactory.java", "BodyUseAPI": ["java.util.List<java.lang.String>.add(java.lang.String)"], "Fixed commit": "2cc22df785bbdf10cec317e57c5126c0fc8ff28d", "Url": "https://api.github.com/repos/suchintan/LetterGetter", "Date": "2014-01-24T15:11:52Z"},
{"Line": "=>862", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useNumberOfAngryEmoticons) { featureList.add(new weka.core.Attribute(\"lexNumberOfAngryEmoticons\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8191/buggy-version/hs-detection.hsprocessor.src.main.java.hatespeech.detection.ml.WekaBowClassifier.java", "BodyUseAPI": [], "Fixed commit": "f4849fd65e46acb6330d1e04b1f57d0f9e986691", "Url": "https://api.github.com/repos/andreas-riegler/hs-detection", "Date": "2016-08-08T23:37:17Z"},
{"Line": "=>68", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.Map<java.lang.String, com.onarandombox.MultiverseCore.api.MultiverseWorld>.get(config.worldname)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((world.getRespawnToWorld()) == null) respawnWorldName = world.getName(); else respawnWorldName = world.getRespawnToWorld().getName();", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4864/buggy-version/src.main.java.com.bergerkiller.bukkit.mw.external.MultiverseHandler.java", "BodyUseAPI": ["com.onarandombox.MultiverseCore.api.MultiverseWorld.getName()", "world.getRespawnToWorld().getName()", "com.onarandombox.MultiverseCore.api.MultiverseWorld.getRespawnToWorld()"], "Fixed commit": "d0e9a1e5424022c4b26f9793e3ef50456eb1d97d", "Url": "https://api.github.com/repos/bergerhealer/MyWorlds", "Date": "2015-07-13T15:21:43Z"},
{"Line": "=>108", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (!(v instanceof android.widget.AdapterView)) v.setOnClickListener((onItemClickListener == null ? null : this));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8955/buggy-version/android-easy-core.src.main.java.com.easy.view.EasyViewPager.java", "BodyUseAPI": ["android.view.View.setOnClickListener((onItemClickListener == null ? null : this))"], "Fixed commit": "a572a400fc5c91c510075ba1c4e17ab290f6010a", "Url": "https://api.github.com/repos/jokehuang/android-easy", "Date": "2016-04-19T04:25:04Z"},
{"Line": "=>72", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.easy.view.EasyViewPager.ViewAdapter.get((isLoop ? toUnLoopPosition(position) : position))"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(v instanceof android.widget.AdapterView)) v.setOnClickListener(((onItemClickListener) == null ? null : this));", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8955/buggy-version/android-easy-core.src.main.java.com.easy.view.EasyViewPager.java", "BodyUseAPI": ["android.view.View.setOnClickListener(((onItemClickListener) == null ? null : this))"], "Fixed commit": "a572a400fc5c91c510075ba1c4e17ab290f6010a", "Url": "https://api.github.com/repos/jokehuang/android-easy", "Date": "2016-04-19T04:25:04Z"},
{"Line": "=>103", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (method.getDeclaringClass().equals(java.lang.Object.class)) { try { return method.invoke(method, args); } catch (java.lang.IllegalAccessException e) { return null; } catch (java.lang.reflect.InvocationTargetException e) { return null; } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8334/buggy-version/src.main.java.com.gregmarut.resty.client.RestInvocationHandler.java", "BodyUseAPI": ["java.lang.reflect.Method.invoke(java.lang.reflect.Method,java.lang.Object[])"], "Fixed commit": "dce16aab5e11f9ea2adab28e1c589f2a1ffd04c5", "Url": "https://api.github.com/repos/gregmarut/resty", "Date": "2016-08-19T11:04:34Z"},
{"Line": "=>357", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (thisShow.getId().equals(DbAdapterTvShows.UNIDENTIFIED_ID)) { com.miz.mizuu.MizuuApplication.getTvShowEpisodeMappingsDbAdapter().createFilepathMapping(filepath, thisShow.getId(), com.miz.functions.MizLib.addIndexZero(ep.getSeason()), com.miz.functions.MizLib.addIndexZero(ep.getEpisode())); }else { dbHelper.createEpisode(filepath, com.miz.functions.MizLib.addIndexZero(ep.getSeason()), com.miz.functions.MizLib.addIndexZero(ep.getEpisode()), thisShow.getId(), ep.getTitle(), ep.getDescription(), ep.getAirdate(), ep.getRating(), ep.getDirector(), ep.getWriter(), ep.getGueststars(), \"0\", \"0\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3691/buggy-version/app.src.main.java.com.miz.identification.TvShowIdentification.java", "BodyUseAPI": ["com.miz.apis.thetvdb.TvShow.getId()", "com.miz.mizuu.MizuuApplication.getTvShowEpisodeMappingsDbAdapter().createFilepathMapping(java.lang.String,thisShow.getId(),com.miz.functions.MizLib.addIndexZero(ep.getSeason()),com.miz.functions.MizLib.addIndexZero(ep.getEpisode()))", "com.miz.db.DbAdapterTvShowEpisodes.createEpisode(java.lang.String,com.miz.functions.MizLib.addIndexZero(ep.getSeason()),com.miz.functions.MizLib.addIndexZero(ep.getEpisode()),thisShow.getId(),ep.getTitle(),ep.getDescription(),ep.getAirdate(),ep.getRating(),ep.getDirector(),ep.getWriter(),ep.getGueststars(),java.lang.String,java.lang.String)", "com.miz.apis.thetvdb.TvShow.getId()"], "Fixed commit": "11d4eacf2edb88bd674c13507509b03ed811d874", "Url": "https://api.github.com/repos/MizzleDK/Mizuu", "Date": "2014-12-23T14:56:27Z"},
{"Line": "=>190", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((Build.VERSION.SDK_INT) >= (Build.VERSION_CODES.KITKAT)) { toast.setGravity(((android.view.Gravity.TOP) | (android.view.Gravity.RIGHT)), 20, 20); }else { toast.setGravity(((android.view.Gravity.TOP) | (android.view.Gravity.RIGHT)), 0, 0); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7908/buggy-version/app.src.main.java.com.arefly.wordcounter.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "23a2b25831ed996b457a20d976dd20ae746a8e10", "Url": "https://api.github.com/repos/hesyifei/word-counter-tools-android", "Date": "2016-07-17T00:34:16Z"},
{"Line": "=>80", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((args == null) || (args.trim().isEmpty())) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2161/buggy-version/conan-core-services.src.main.java.uk.ac.ebi.fgpt.conan.core.process.AbstractProcessArgs.java", "BodyUseAPI": [], "Fixed commit": "f0b99f15435caa1dc2523817bb4c993fa3c57824", "Url": "https://api.github.com/repos/tburdett/Conan2", "Date": "2014-07-11T10:43:28Z"},
{"Line": "=>90", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (per_page != null) { query.setFirstResult((((java.lang.Integer.parseInt(pageNo)) - 1) * (java.lang.Integer.parseInt(per_page)))); query.setMaxResults(java.lang.Integer.parseInt(per_page)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6565/buggy-version/src.com.dost.dao.UserDAOImpl.java", "BodyUseAPI": ["java.lang.Integer.parseInt(java.lang.String)", "org.hibernate.Query.setFirstResult(int)", "java.lang.Integer.parseInt(java.lang.String)", "org.hibernate.Query.setMaxResults(int)"], "Fixed commit": "c1a28e7075c9f40c6b4886b787f75e36f8f3bacf", "Url": "https://api.github.com/repos/timbaktu/dost_iitg", "Date": "2015-02-22T23:15:48Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (order != null) { hqlQuery.append((\" order by u.userId \" + order)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6565/buggy-version/src.com.dost.dao.UserDAOImpl.java", "BodyUseAPI": ["java.lang.StringBuilder.append(java.lang.String)"], "Fixed commit": "c1a28e7075c9f40c6b4886b787f75e36f8f3bacf", "Url": "https://api.github.com/repos/timbaktu/dost_iitg", "Date": "2015-02-22T23:15:48Z"},
{"Line": "=>56", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.lang.String.split(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if ((condition.length) == 3) { try { com.clover.common.beans.ConditionBean conditionBean = new com.clover.common.beans.ConditionBean(); conditionBean.setConditionName(condition[0]); conditionBean.setConditionExpression(condition[1]); conditionBean.setConditionValue(condition[2]); conditions.add(conditionBean); } catch (java.lang.Exception e) { } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1022/buggy-version/src.main.java.com.clover.common.util.CriteriaMapUtils.java", "BodyUseAPI": ["com.clover.common.beans.ConditionBean.setConditionName(java.lang.String)", "com.clover.common.beans.ConditionBean.setConditionExpression(java.lang.String)", "com.clover.common.beans.ConditionBean.setConditionValue(java.lang.String)"], "Fixed commit": "9d73e4dad65f1102c2e8371782a52d7afd779024", "Url": "https://api.github.com/repos/cloverpang/CloverCustomerService", "Date": "2017-12-19T03:40:07Z"},
{"Line": "=>173", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((list.size()) == 0) return null;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4416/buggy-version/src.level.maps.biomes.Biome.java", "BodyUseAPI": [], "Fixed commit": "17dfd30134e9142dbf92a6c199420c798a7c8294", "Url": "https://api.github.com/repos/DrFair/Game", "Date": "2017-06-16T19:18:54Z"},
{"Line": "=>111", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (reachable(start, end, graph)) return true;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7704/buggy-version/src.algorithms.Kruskal.java", "BodyUseAPI": [], "Fixed commit": "a9bc855a725bd7ce8eb6dc0d831d3887b2b8df6a", "Url": "https://api.github.com/repos/motation/GKA", "Date": "2015-06-16T15:06:03Z"},
{"Line": "=>142", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (!(column.hasValue())) { continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/111/buggy-version/dbclient.src.main.java.com.emc.storageos.db.client.impl.DbConsistencyCheckerHelper.java", "BodyUseAPI": [], "Fixed commit": "63a62d204ce887da3b752b1e2462b5d8797ed27c", "Url": "https://api.github.com/repos/CoprHD/coprhd-controller", "Date": "2015-12-15T05:52:37Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((br) != null) unregisterReceiver(br);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4129/buggy-version/app.src.main.java.kupchinskii.ruslan.gpsup.MainActivity.java", "BodyUseAPI": [], "Fixed commit": "109ebe9480151056713ad75ecce5b2e36cbb8145", "Url": "https://api.github.com/repos/mprins/GpsUp", "Date": "2017-07-18T06:50:18Z"},
{"Line": "=>31", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["xyz.gadre.jentity.models.JsonSchema.findByTitle(j.title)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (exitingJsonSchema == null) { j.save(); play.Logger.info((\"Schema Loaded : \" + filePath)); }else { if (!(exitingJsonSchema.getString().equals(j.getString()))) { exitingJsonSchema.setString(j.getString()); exitingJsonSchema.save(); play.Logger.info((\"Schema Updated : \" + filePath)); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1772/buggy-version/app.xyz.gadre.jentity.JsonSchemaLoader.java", "BodyUseAPI": ["xyz.gadre.jentity.models.JsonSchema.save()", "xyz.gadre.jentity.models.JsonSchema.setString(j.getString())", "exitingJsonSchema.getString().equals(j.getString())", "xyz.gadre.jentity.models.JsonSchema.getString()"], "Fixed commit": "30c163520c870c831f8cf5f952e1748b89c67e5c", "Url": "https://api.github.com/repos/allnash/JEntity", "Date": "2016-05-02T15:32:44Z"},
{"Line": "=>1394", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useTextAreaMode) dx -= getResources().getDimensionPixelSize(R.dimen.text_area_left_and_right_padding);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2120/buggy-version/library.src.main.java.com.rengwuPATHn.materialedittext.MaterialEditText.java", "BodyUseAPI": [], "Fixed commit": "6651da6ed8c6f73451d97aa6566079714147b1e7", "Url": "https://api.github.com/repos/BrigadeTom/MaterialEditText", "Date": "2017-08-24T23:28:29Z"},
{"Line": "=>1390", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (useTextAreaMode) dx -= getResources().getDimensionPixelSize(R.dimen.text_area_left_and_right_padding);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2120/buggy-version/library.src.main.java.com.rengwuPATHn.materialedittext.MaterialEditText.java", "BodyUseAPI": [], "Fixed commit": "6651da6ed8c6f73451d97aa6566079714147b1e7", "Url": "https://api.github.com/repos/BrigadeTom/MaterialEditText", "Date": "2017-08-24T23:28:29Z"},
{"Line": "=>1374", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (edu.rutgers.MOST.presentation.GraphicalInterface.usingEflux2) fba.formatFluxBoundsfromTransciptomicData(edu.rutgers.MOST.presentation.GraphicalInterface.chooseCSVFile());", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8431/buggy-version/src.edu.rutgers.MOST.presentation.GraphicalInterface.java", "BodyUseAPI": [], "Fixed commit": "f053c3a7a2ef9e57f797606c12f5ff7a878aff8a", "Url": "https://api.github.com/repos/desmondlun/MOST", "Date": "2014-06-10T17:52:28Z"},
{"Line": "=>37", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.json.JSONObject.getString(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (endpoint.startsWith(net.openright.mobile.server.SubscriberServlet.ENDPOINT_PREFIX)) { return endpoint.substring(net.openright.mobile.server.SubscriberServlet.ENDPOINT_PREFIX.length()); }else { return jsonObject.getString(\"subscriptionId\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4589/buggy-version/src.main.java.net.openright.mobile.server.SubscriberServlet.java", "BodyUseAPI": ["java.lang.String.substring(int)", "java.lang.String.length()"], "Fixed commit": "39d6552d75d30c85198a3b9bdb27557f322bc5c9", "Url": "https://api.github.com/repos/jhannes/openright-mobile-web", "Date": "2015-06-09T19:19:35Z"},
{"Line": "=>167", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.terasoluna.gfw.common.codelist.CodeList.getCodeListId()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull, IfDep]", "Content": "=>if (codeListId != null) { java.util.regex.Matcher codeListIdMatcher = codeListIdPattern.matcher(codeListId); if (codeListIdMatcher.matches()) { targetCodeLists.put(codeListId, codeList); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5765/buggy-version/terasoluna-gfw-web.src.main.java.org.terasoluna.gfw.web.codelist.CodeListInterceptor.java", "BodyUseAPI": ["java.util.regex.Pattern.matcher(java.lang.String)", "java.util.Map<java.lang.String, org.terasoluna.gfw.common.codelist.CodeList>.put(java.lang.String,org.terasoluna.gfw.common.codelist.CodeList)"], "Fixed commit": "a75a61d2aa515fe7e12097d35b82a075b8fda140", "Url": "https://api.github.com/repos/terasolunaorg/terasoluna-gfw", "Date": "2016-01-04T04:45:07Z"},
{"Line": "=>35", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (subFile.isFile()) { subFile.delete(); }else { org.apache.commons.io.FileUtils.deleteDirectory(subFile); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/794/buggy-version/sztools.java.com.google.code.vimsztool.server.SzjdeProjectClean.java", "BodyUseAPI": ["org.apache.commons.io.FileUtils.deleteDirectory(java.io.File)", "java.io.File.delete()"], "Fixed commit": "3a1bbf080e05a71372c44b7327b386dd857b3ab4", "Url": "https://api.github.com/repos/shrekwang/vim-sztool", "Date": "2013-03-28T06:41:41Z"},
{"Line": "=>165", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (\"WINDOWS-1252\".equalsIgnoreCase(encName)) { android.util.Log.i(com.ziseezhou.lyrics.LyricsFileEncodingSampleDet.TAG, \"det WINDOWS-1252 manully change to GBK\"); encName = \"GBK\"; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1413/buggy-version/src.com.ziseezhou.lyrics.LyricsFileEncodingSampleDet.java", "BodyUseAPI": [], "Fixed commit": "f48d43b0f172404b0e09e310f0d426953028d08d", "Url": "https://api.github.com/repos/ziseezhou/VoiceRepeater", "Date": "2013-06-24T10:26:27Z"},
{"Line": "=>78", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["dungeoncrawler.map.Square.getCreatureOnSquare()"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(targetCreature.isPlayer())) { attackCreature(player, targetCreature); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6629/buggy-version/DungeonCrawler.src.main.java.dungeoncrawler.logic.ActionHandler.java", "BodyUseAPI": ["dungeoncrawler.logic.ActionHandler.attackCreature(dungeoncrawler.gameobject.creature.Player,dungeoncrawler.gameobject.creature.Creature)"], "Fixed commit": "f25e1d308ea846d896a0cb338deb1a8e586a7900", "Url": "https://api.github.com/repos/banjohirvi/DungeonCrawler", "Date": "2014-11-29T15:22:50Z"},
{"Line": "=>129", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((suffixes[i]) == null) { throw new java.lang.RuntimeException(\"BUG HERE\"); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3311/buggy-version/src.cngl.tcd.qe.ngrams.SuffixTreeSmallTerminalNode.java", "BodyUseAPI": [], "Fixed commit": "25b2cca8cfa8c9646c68714fdc92bdbadb78472b", "Url": "https://api.github.com/repos/erwanm/quest", "Date": "2012-12-13T20:53:53Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((suffixes) != null) { for (java.lang.Object e : suffixes) { if (e == null) { throw new java.lang.RuntimeException((\"BUG HERE, size=\" + (suffixes.length))); } } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3311/buggy-version/src.cngl.tcd.qe.ngrams.SuffixTreeSmallTerminalNode.java", "BodyUseAPI": [], "Fixed commit": "25b2cca8cfa8c9646c68714fdc92bdbadb78472b", "Url": "https://api.github.com/repos/erwanm/quest", "Date": "2012-12-13T20:53:53Z"},
{"Line": "=>155", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isValidChar) { linkEndPos++; }else { break; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8987/buggy-version/src.main.java.org.quantumbadger.redreader.reddit.prepared.MarkdownTokenizer.java", "BodyUseAPI": [], "Fixed commit": "17f24bcc380d1709b5c38eb4f3214a78b706e2cb", "Url": "https://api.github.com/repos/Rumel/RedReader", "Date": "2013-07-06T12:45:12Z"},
{"Line": "=>84", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((location.length()) > 0) { updateLocationText(location); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/8851/buggy-version/src.main.java.org.openhds.mobile.fragment.SelectionFilterLocFragment.java", "BodyUseAPI": ["org.openhds.mobile.fragment.SelectionFilterLocFragment.updateLocationText(java.lang.String)"], "Fixed commit": "888bd264251c84cc5266bb973deda692899b22f1", "Url": "https://api.github.com/repos/OpenHDS/openhds-tablet", "Date": "2013-03-07T08:32:27Z"},
{"Line": "=>101", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((errordata != null) && (errordata.equals(\"yes\"))) { com.s7design.menu.app.Menu.getInstance().onResponseErrorReceived(gsonResponse); }else { listener.onResponse(response); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6213/buggy-version/MenuProject.src.com.s7design.menu.volley.requests.GsonRequest.java", "BodyUseAPI": [], "Fixed commit": "69560883a0b69da775076a89cf88c6671a0c9916", "Url": "https://api.github.com/repos/s7droid/Menu", "Date": "2015-03-26T19:57:58Z"},
{"Line": "=>116", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((error.networkResponse) == null) com.s7design.menu.app.Menu.getInstance().onVolleyErrorReceived(error);", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/6213/buggy-version/MenuProject.src.com.s7design.menu.volley.requests.GsonRequest.java", "BodyUseAPI": ["com.s7design.menu.app.Menu.getInstance().onVolleyErrorReceived(com.android.volley.VolleyError)"], "Fixed commit": "69560883a0b69da775076a89cf88c6671a0c9916", "Url": "https://api.github.com/repos/s7droid/Menu", "Date": "2015-03-26T19:57:58Z"},
{"Line": "=>376", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["javax.swing.JTable.columnAtPoint(java.awt.Point)", "javax.swing.JTable.rowAtPoint(java.awt.Point)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if ((col == 2) && (row == 3)) { net.sf.memoranda.ui.App.getFrame().workPanel.summaryB.doClick(); }else if ((col == 2) && (row == 5)) { net.sf.memoranda.ui.App.getFrame().workPanel.defectsB.doClick(); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1050/buggy-version/src.net.sf.memoranda.ui.PSPScriptPanel.java", "BodyUseAPI": [], "Fixed commit": "c2d70e33d95a1b782a33aecff34a5fcbe9c47c88", "Url": "https://api.github.com/repos/ser316asu/Pankow_SER316", "Date": "2017-04-27T04:20:04Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (deltaInMin < 0) { deltaField.setText(\"Invalid Time Frame\"); }else { deltaField.setText(java.lang.Long.toString(deltaInMin)); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1050/buggy-version/src.net.sf.memoranda.ui.AddRecordingDialog.java", "BodyUseAPI": ["java.lang.Long.toString(long)", "javax.swing.JTextField.setText(java.lang.String)"], "Fixed commit": "c2d70e33d95a1b782a33aecff34a5fcbe9c47c88", "Url": "https://api.github.com/repos/ser316asu/Pankow_SER316", "Date": "2017-04-27T04:20:04Z"},
{"Line": "=>267", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfNull, IfDep]", "Content": "=>if (content != null) { android.widget.RelativeLayout.LayoutParams contentParams = new android.widget.RelativeLayout.LayoutParams(content.getLayoutParams().width, content.getLayoutParams().height); contentParams.addRule(RelativeLayout.BELOW, mRootView.getId()); content.setLayoutParams(contentParams); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/5340/buggy-version/designTemplate.src.main.java.com.lge.qcircle.template.QCircleTitle.java", "BodyUseAPI": ["android.widget.RelativeLayout.getLayoutParams()", "android.widget.RelativeLayout.getLayoutParams()", "android.widget.RelativeLayout.setLayoutParams(android.view.ViewGroup.LayoutParams)"], "Fixed commit": "b4b80639a5383e2997ca9d14e2ec6a7864f95b8d", "Url": "https://api.github.com/repos/LGDeveloper/QCircle-Design-Template", "Date": "2015-03-27T06:42:21Z"},
{"Line": "=>398", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (separator > 0) { jvmVersion = jvmVersion.substring(0, separator); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4269/buggy-version/core.api.container.src.main.java.org.codehaus.cargo.container.spi.AbstractInstalledLocalContainer.java", "BodyUseAPI": ["java.lang.String.substring(int,int)"], "Fixed commit": "18bfd6660f5a06b74944a0a9438ba6ddea2f3a99", "Url": "https://api.github.com/repos/codehaus-cargo/cargo", "Date": "2016-08-07T19:38:47Z"},
{"Line": "=>75", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[]", "Content": "=>if ((com.oltpbenchmark.benchmarks.tpcc.TPCCLoader.numWarehouses) == 0) { com.oltpbenchmark.benchmarks.tpcc.TPCCLoader.numWarehouses = 1; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/1126/buggy-version/src.com.oltpbenchmark.benchmarks.tpcc.TPCCLoader.java", "BodyUseAPI": [], "Fixed commit": "d79a7e0d824cebd822e6c3addf9de14867028fa6", "Url": "https://api.github.com/repos/oltpbenchmark/oltpbench", "Date": "2013-04-08T22:49:27Z"},
{"Line": "=>109", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if ((i + 1) < (format.length())) { n = java.lang.Integer.parseInt(java.lang.Character.toString(format.charAt((++i)))); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2839/buggy-version/src.main.java.com.miraisolutions.xlconnect.utils.RPOSIXDateTimeFormatter.java", "BodyUseAPI": ["java.lang.Character.toString(char)", "java.lang.Integer.parseInt(java.lang.String)", "java.lang.String.charAt(int)"], "Fixed commit": "bcebb9e9476969cdd64e30bdf03e0e0e8a6603dd", "Url": "https://api.github.com/repos/miraisolutions/xlconnect-java", "Date": "2014-09-08T17:50:41Z"},
{"Line": "=>114", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfDep]", "Content": "=>if (n > 0) { builder.appendLiteral('.'); builder.appendFractionOfSecond(n, n); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2839/buggy-version/src.main.java.com.miraisolutions.xlconnect.utils.RPOSIXDateTimeFormatter.java", "BodyUseAPI": ["org.joda.time.format.DateTimeFormatterBuilder.appendFractionOfSecond(int,int)"], "Fixed commit": "bcebb9e9476969cdd64e30bdf03e0e0e8a6603dd", "Url": "https://api.github.com/repos/miraisolutions/xlconnect-java", "Date": "2014-09-08T17:50:41Z"},
{"Line": "=>917", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (isSaving()) { java.lang.Object value = takeGetMethodValueByField(baseObj, field); if (value != null) { putContentValues(baseObj, field, values); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7549/buggy-version/litepal.src.main.java.org.litepal.crud.DataHandler.java", "BodyUseAPI": [], "Fixed commit": "d1468ed64b46590de829f1784f5f6da15a2bd2d6", "Url": "https://api.github.com/repos/LitePalFramework/LitePal", "Date": "2015-08-24T15:29:06Z"},
{"Line": "=>81", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["com.haskforce.jps.CabalBuilder.getCabalFile(org.jetbrains.jps.model.module.JpsModule)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfNull]", "Content": "=>if (cabalFile == null) { context.processMessage(new org.jetbrains.jps.incremental.messages.CompilerMessage(\"cabal\", BuildMessage.Kind.ERROR, (\"Can not find cabal file in \" + (com.haskforce.jps.CabalBuilder.getContentRootPath(module))))); continue; }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4182/buggy-version/jps-plugin.src.com.haskforce.jps.CabalBuilder.java", "BodyUseAPI": [], "Fixed commit": "724ebf4095bd710b7cf6efd93d3db5081d4f47ae", "Url": "https://api.github.com/repos/carymrobbins/intellij-haskforce", "Date": "2014-06-08T21:22:18Z"},
{"Line": "=>102", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (matcher.group(4).equals(\"]\")) maxLimit = maxLimit + 1.0E-10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7857/buggy-version/bundles.core.org.openhab.core.transform.src.main.java.org.openhab.core.transform.internal.service.ScaleTransformationService.java", "BodyUseAPI": [], "Fixed commit": "34dbe7eb431f9a3f097180f7763a332b43e06f86", "Url": "https://api.github.com/repos/openhab/openhab1-addons", "Date": "2015-01-22T14:08:29Z"},
{"Line": "=>104", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["java.util.regex.Pattern.matcher(java.lang.String)"], "Type": "Insert", "BugDetectionTag": "[IfRet]", "Content": "=>if (matcher.group(4).equals(\"[\")) maxLimit = maxLimit - 1.0E-10;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7857/buggy-version/bundles.core.org.openhab.core.transform.src.main.java.org.openhab.core.transform.internal.service.ScaleTransformationService.java", "BodyUseAPI": [], "Fixed commit": "34dbe7eb431f9a3f097180f7763a332b43e06f86", "Url": "https://api.github.com/repos/openhab/openhab1-addons", "Date": "2015-01-22T14:08:29Z"},
{"Line": "=>65", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((!(org.jorge.lolin1.service.ChatIntentService.isLoggedIn())) || (!(org.jorge.lolin1.util.Utils.isInternetReachable()))) return;", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/4523/buggy-version/app.src.main.java.org.jorge.lolin1.chat.FriendManager.java", "BodyUseAPI": [], "Fixed commit": "5c7d0551fa9acfea3b6090ad6b02e28105894833", "Url": "https://api.github.com/repos/stoyicker/LoLin1", "Date": "2015-01-20T12:48:47Z"},
{"Line": "=>222", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if (((params.width) == (ViewGroup.LayoutParams.WRAP_CONTENT)) && ((params.height) == (ViewGroup.LayoutParams.WRAP_CONTENT))) { params.width = size; params.height = size; }else { throw new java.lang.IllegalStateException((\"FloatingActionButton 'android:width' and 'android:height' values must be 'wrap_content'. \" + \"Check 'isMini' attribute to manipulate size.\")); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/2757/buggy-version/MaterialLibrary.src.main.java.io.doist.material.widget.FloatingActionButton.java", "BodyUseAPI": [], "Fixed commit": "eb838365afa5d0ab53340690812ebdc01899b2d8", "Url": "https://api.github.com/repos/Doist/AndroidMaterial", "Date": "2015-04-10T10:42:24Z"},
{"Line": "=>64", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": [], "Type": "Insert", "BugDetectionTag": "[IfOther]", "Content": "=>if ((net.minecraftforge.fml.common.FMLCommonHandler.instance().getEffectiveSide()) == (net.minecraftforge.fml.relauncher.Side.SERVER)) { net.minecraft.item.ItemStack disk = getStackInSlot(slot); if (disk == null) { storages[slot] = null; }else { storages[slot] = new refinedstorage.tile.TileDiskDrive.Storage(disk); } if ((network) != null) { network.getStorage().rebuild(); } }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/7148/buggy-version/src.main.java.refinedstorage.tile.TileDiskDrive.java", "BodyUseAPI": [], "Fixed commit": "f9c4eb4defaca8c648eff74153f68d3857655857", "Url": "https://api.github.com/repos/raoulvdberge/refinedstorage", "Date": "2016-07-10T19:48:32Z"},
{"Line": "=>60", "parseTypeFail": "sucess", "Pattern": "UNKNOWN=>If", "RetCheckAPI": ["org.mule.ant.S3DeleteTask.collectKeys(com.amazonaws.services.s3.model.ObjectListing)"], "Type": "Insert", "BugDetectionTag": "[IfRet, IfDep]", "Content": "=>if (!(keys.isEmpty())) { s3Client.deleteObjects(deleteObjectsRequest.withKeys(keys)); log(java.lang.String.format(\"Batch of %s keys deleted from %s bucket\", keys.size(), bucket), Project.MSG_INFO); }else { log(java.lang.String.format(\"Nothing to delete in %s\", (((bucket) + \"/\") + (getDir()))), Project.MSG_INFO); }", "FileName": "/home/PATH/BugDetectionProject/3Clone/NewDown2011-2017/All/V100/3887/buggy-version/src.main.java.org.mule.ant.S3DeleteTask.java", "BodyUseAPI": ["com.amazonaws.services.s3.model.DeleteObjectsRequest.withKeys(java.util.List<com.amazonaws.services.s3.model.DeleteObjectsRequest.KeyVersion>)", "org.mule.ant.S3DeleteTask.log(java.lang.String,Project.MSG_INFO)", "com.amazonaws.services.s3.AmazonS3.deleteObjects(deleteObjectsRequest.withKeys(keys))", "java.util.List<com.amazonaws.services.s3.model.DeleteObjectsRequest.KeyVersion>.size()", "java.lang.String.format(java.lang.String,keys.size(),java.lang.String)"], "Fixed commit": "68ff6b215f8f1841de8d69153eff62633f552db4", "Url": "https://api.github.com/repos/machaval/s3-ant-task", "Date": "2013-11-19T20:40:30Z"}]}
